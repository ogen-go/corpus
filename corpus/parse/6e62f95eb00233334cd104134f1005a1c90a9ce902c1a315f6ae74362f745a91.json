{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/signl4.com/v1/openapi.yaml",
			"byteSize": 286247,
			"content": "openapi: 3.0.1\nservers:\n  - url: https://connect.signl4.com/api\nx-hasEquivalentPaths: true\ninfo:\n  contact:\n    url: https://www.signl4.com/feedback-we-love-hear-from-you/\n    x-twitter: signl4me\n  description: \"\u003cp\u003eUse our API for systems integration or to build your own use cases. Sample scenarios include but are not limited to:\u003c/p\u003e\u003cul\u003e\u003cli\u003e2-way integration: Triggering of Signls and updates in the third party systems when alert state changes occur\u003c/li\u003e\u003cli\u003eRetrieving alarms for logging purposes\u003c/li\u003e\u003cli\u003eCalendar integrations: Creation and management of on-call duties\u003c/li\u003e\u003cli\u003ePunch users in and out based on external calendars\u003c/li\u003e\u003cli\u003eetc.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eAUTHENTICATION\u003cbr\u003eUsing the API requires an API key, which you can generate in the SIGNL4 portal under 'Developers'.\u003cbr\u003eThis key must then be specified in a special header in every HTTP request.\u003cbr\u003eThis header is called \u003cb style='color:#F8B41F'\u003eX-S4-Api-Key\u003c/b\u003e.\u003cbr\u003e\u003cbr\u003eThe base URL of the API is \u003ca rel='noopener noreferrer' target='_blank' href='https://connect.signl4.com/api/'\u003ehttps://connect.signl4.com/api/\u003c/a\u003e.\u003cbr\u003eCopyright Â© Derdack GmbH\u003cbr\u003e\u003c/p\u003e\"\n  license:\n    name: Derdack GmbH\n    url: https://www.signl4.com\n  title: SIGNL4 API\n  version: v1\n  x-apisguru-categories:\n    - messaging\n  x-origin:\n    - format: openapi\n      url: https://connect.signl4.com/api/docs/v1/swagger.json\n      version: \"3.0\"\n  x-providerName: signl4.com\nsecurity:\n  - oauth2:\n      - public_api_write\n      - public_api_read\n      - offline_access\ntags:\n  - description: Provide access to all informations about signls and the ability to interact with them.\n    name: Alerts\n  - description: Provides access to services and system categories in a SIGNL4 team.\n    name: Categories\n  - description: Provide access to duty information and the ability to create, delete and update them.\n    name: Duties\n  - description: Provide access to all informations about events and their parameters.\n    name: Events\n  - description: Provides access to the prepaid balance and transactions\n    name: Prepaid\n  - description: Provides access to apps that are available in SIGNL4 and e.g. allows adding an app to a SIGNL4 team.\n    name: Scripts\n  - description: Provides management capabilities for a SIGNL4 subscription.\n    name: Subscriptions\n  - description: Provides misc. operations, e.g. for managing settings or preferences, of a team in a SIGNL4 subscription.\n    name: Teams\n  - description: Provides management for team members in a SIGNL4 team.\n    name: Users\n  - description: Provides management for outbound notifications (e.g. a Signl was confirmed) via webhooks.\n    name: Webhooks\npaths:\n  /alerts:\n    post:\n      description: Triggers a new alert for your team. All team members on duty will receive alert notifications.\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/RaiseAlertInfo\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RaiseAlertInfo\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/RaiseAlertInfo\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/RaiseAlertInfo\"\n        description: Alert to raise.\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AlertInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AlertInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/AlertInfo\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required entities could not be found in the database.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Internal general error occured.\n      summary: Trigger Alert\n      tags:\n        - Alerts\n  /alerts/acknowledgeAll:\n    post:\n      description: This method confirms all unhandled alerts your team currently has by a specific user.\n      parameters:\n        - description: User ID of the user to be used to acknowledge the alarms.\n          in: query\n          name: userId\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusFilterInfo\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusFilterInfo\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusFilterInfo\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusFilterInfo\"\n      responses:\n        \"204\":\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required entities could not be found in the database.\n        \"500\":\n          description: Internal general error occured.\n      summary: Confirms all visible alerts\n      tags:\n        - Alerts\n  /alerts/acknowledgeMultiple:\n    post:\n      description: This method confirms all alerts provided.\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusMultipleInfo\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusMultipleInfo\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusMultipleInfo\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusMultipleInfo\"\n      responses:\n        \"204\":\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Internal general error occured.\n      summary: Acknowlegde multiple alerts\n      tags:\n        - Alerts\n  /alerts/closeAll:\n    post:\n      description: This method closes all acknowledged alerts your team currently has.\n      parameters:\n        - description: User ID of the user to be used to close the alarms.\n          in: query\n          name: userId\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusFilterInfo\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusFilterInfo\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusFilterInfo\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusFilterInfo\"\n      responses:\n        \"204\":\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required entities could not be found in the database.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Internal general error occured.\n      summary: Close all acknowledged alerts.\n      tags:\n        - Alerts\n  /alerts/closeMultiple:\n    post:\n      description: This method closes all alerts provided.\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusMultipleInfo\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusMultipleInfo\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusMultipleInfo\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusMultipleInfo\"\n      responses:\n        \"204\":\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Internal general error occured.\n      summary: Close multiple alerts\n      tags:\n        - Alerts\n  /alerts/paged:\n    post:\n      parameters:\n        - description: \"Defines the limit of retrieved alert details per request. 1 to 100 are allowed per request.\\r\n\n            \\                Number of alerts could be less if filtered but at least 1.\"\n          in: query\n          name: maxResults\n          schema:\n            format: int32\n            type: integer\n        - description: User ID of the user you want to get alerts for.\n          in: query\n          name: userId\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/AlertFilterPublic\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AlertFilterPublic\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/AlertFilterPublic\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/AlertFilterPublic\"\n        description: The filter defines which alerts are supposed to be retrieved.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OverviewAlertPagedResultsPublic\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/OverviewAlertPagedResultsPublic\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/OverviewAlertPagedResultsPublic\"\n          description: Returns a paged result with found alerts and continuation token if more alerts are in the database.\n        \"204\":\n          description: There were no alerts found for the specified filter.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required parameters could not be found in the request/claims.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Authorization failed\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Internal general error occured.\n      summary: Gets alerts paged\n      tags:\n        - Alerts\n  /alerts/report:\n    get:\n      description: \"Returns information about the occurred alert volume in different time periods as well as information about the\\r\n\n        response behaviour (amount of confirmed and unhandled alerts) of your team members.\"\n      parameters:\n        - description: User ID of the user for whom you want a report.\n          in: query\n          name: userId\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AlertReport\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AlertReport\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/AlertReport\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required entities could not be found in the database.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Internal general error occured.\n      summary: Get Alert Report\n      tags:\n        - Alerts\n  /alerts/undoAcknowledgeMultiple:\n    post:\n      description: This method tries to undo the acknowledgement of multiple alerts via a queue. The operation is handled in the background.\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusMultipleInfo\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusMultipleInfo\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusMultipleInfo\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusMultipleInfo\"\n        description: Configure which user should be undone for which alerts.\n      responses:\n        \"204\":\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Internal general error occured.\n      summary: Queue undo of multiple acknowledgments.\n      tags:\n        - Alerts\n  /alerts/undoCloseMultiple:\n    post:\n      description: This method tries to undo multiple alert closes. The operation is handled in the background.\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusMultipleInfo\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusMultipleInfo\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusMultipleInfo\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusMultipleInfo\"\n      responses:\n        \"204\":\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Internal general error occured.\n      summary: Withdraw closure of multiple alerts\n      tags:\n        - Alerts\n  \"/alerts/{alertId}\":\n    get:\n      description: Gets an alert by id.\n      parameters:\n        - description: Id of the requested Alert.\n          in: path\n          name: alertId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AlertInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AlertInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/AlertInfo\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required entities could not be found in the database.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Internal general error occured.\n      summary: Get Alert\n      tags:\n        - Alerts\n  \"/alerts/{alertId}/acknowledge\":\n    post:\n      parameters:\n        - description: Id to acknowledge an alert.\n          in: path\n          name: alertId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusInfo\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusInfo\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusInfo\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusInfo\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AlertInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AlertInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/AlertInfo\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: No alert with id was found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Alert can't be acknowledged because it is against the defined alert lifecycle.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Internal general error occured.\n      summary: Acknowledge an alert\n      tags:\n        - Alerts\n  \"/alerts/{alertId}/annotate\":\n    post:\n      description: Annotates an alert by given Annotation Info.\n      parameters:\n        - description: Id of the alert to annotate.\n          in: path\n          name: alertId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/AlertAnnotationInfo\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AlertAnnotationInfo\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/AlertAnnotationInfo\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/AlertAnnotationInfo\"\n        description: Annotation Information.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AlertAnnotationInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AlertAnnotationInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/AlertAnnotationInfo\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required entities could not be found in the database.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Internal general error occured.\n      summary: Annotate Alert\n      tags:\n        - Alerts\n  \"/alerts/{alertId}/annotations\":\n    get:\n      description: Get annotations of an alert by id.\n      parameters:\n        - description: Id of the requested Alert.\n          in: path\n          name: alertId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlertAnnotationInfo\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlertAnnotationInfo\"\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlertAnnotationInfo\"\n                type: array\n          description: Success\n        \"204\":\n          description: No annotations were found for the alert.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Get annotations of an alert\n      tags:\n        - Alerts\n  \"/alerts/{alertId}/attachments\":\n    get:\n      description: Get attachments of an alert by id.\n      parameters:\n        - description: Id of the requested Alert.\n          in: path\n          name: alertId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlertAttachmentInfo\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlertAttachmentInfo\"\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlertAttachmentInfo\"\n                type: array\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required entities could not be found in the database.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Internal general error occured.\n      summary: Get attachments of an alert\n      tags:\n        - Alerts\n  \"/alerts/{alertId}/attachments/{attachmentId}\":\n    get:\n      parameters:\n        - description: Id of the alert that contains the wanted attachment.\n          in: path\n          name: alertId\n          required: true\n          schema:\n            type: string\n        - description: Id of the attachment, that you want to retrieve.\n          in: path\n          name: attachmentId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter defining the wanted width of the picture that is retrieved.\n          in: query\n          name: width\n          schema:\n            format: int32\n            type: integer\n        - description: Optional parameter defining the wanted height of the picture that is retrieved.\n          in: query\n          name: height\n          schema:\n            format: int32\n            type: integer\n        - description: \"Optional parameter defining whether it's wanted to scale the retrieved image. Default is set to\\r\n\n            true.\"\n          in: query\n          name: scale\n          schema:\n            default: true\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: binary\n                type: string\n            text/json:\n              schema:\n                format: binary\n                type: string\n            text/plain:\n              schema:\n                format: binary\n                type: string\n          description: Returns the attachment image with additional meta information.\n        \"204\":\n          description: The image of the attachment was not uploaded yet.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: A passed parameter was either empty or invalid.\n        \"403\":\n          description: Authorization failed.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: The attachment image was not found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Internal general error occured.\n      summary: Gets a specified attachment of a specified alert.\n      tags:\n        - Alerts\n  \"/alerts/{alertId}/close\":\n    post:\n      parameters:\n        - description: Id to acknowledge an alert.\n          in: path\n          name: alertId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusInfo\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusInfo\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusInfo\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusInfo\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AlertInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AlertInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/AlertInfo\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: No alert with id was found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Alert can't be closed because it is against the defined alert lifecycle.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Internal general error occured.\n      summary: Close an alert\n      tags:\n        - Alerts\n  \"/alerts/{alertId}/notifications\":\n    get:\n      description: Get notifications of all users by alert id.\n      parameters:\n        - description: Id of the requested Alert.\n          in: path\n          name: alertId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlertNotificationInfo\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlertNotificationInfo\"\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlertNotificationInfo\"\n                type: array\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required entities could not be found in the database.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Internal general error occured.\n      summary: Get alert notifications\n      tags:\n        - Alerts\n  \"/alerts/{alertId}/overview\":\n    get:\n      description: Get overview alert by id.\n      parameters:\n        - description: Id of the requested Alert.\n          in: path\n          name: alertId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OverviewAlert\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/OverviewAlert\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/OverviewAlert\"\n          description: Returns alert with all information attached.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required entities could not be found in the database.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Get an overview alert.\n      tags:\n        - Alerts\n  \"/alerts/{alertId}/undoAcknowledge\":\n    post:\n      description: This method tries to undo an alert acknowledgement.\n      parameters:\n        - in: path\n          name: alertId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusInfo\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusInfo\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusInfo\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusInfo\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OverviewAlert\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/OverviewAlert\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/OverviewAlert\"\n          description: Returns updated alert.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: User is not allowed to undo the acknowledgement.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Internal general error occured.\n      summary: Undo the acknowledgement of an alert.\n      tags:\n        - Alerts\n  \"/alerts/{alertId}/undoClose\":\n    post:\n      description: This method tries to undo an alert close.\n      parameters:\n        - in: path\n          name: alertId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusInfo\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusInfo\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusInfo\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/ChangeAlertStatusInfo\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OverviewAlert\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/OverviewAlert\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/OverviewAlert\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: User is not allowed to undo the close.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Internal general error occured.\n      summary: Undo the closure of an alert.\n      tags:\n        - Alerts\n  /categories/images:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/json:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/plain:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: Returns the alert categories.\n        \"204\":\n          description: Request was canceled.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If you have no permission to access the resource.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: No categories were found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Internal general error occured.\n      summary: \"Gets the names of all alert category images.\\r\n\n        You can get the image by going to account.signl4.com/images/alerts/categoryImageName.svg\"\n      tags:\n        - Categories\n  \"/categories/{teamId}\":\n    get:\n      description: \"Sample Request:\\r\n\n        \\            \\r\n\n        \\    GET /categories/cbb70402-1359-477f-ac92-0171cf2b5ff7\"\n      parameters:\n        - description: ID of the team the categories belong to\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CategoryInfo\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CategoryInfo\"\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CategoryInfo\"\n                type: array\n          description: Returns the category infos\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If the input is not valid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If you have no permission to access this resource\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If the resource was not found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If any server side errors occur\n      summary: Get all categories\n      tags:\n        - Categories\n    post:\n      description: \"Sample Request:\\r\n\n        \\            \\r\n\n        \\    POST /categories/cbb70402-1359-477f-ac92-0171cf2b5ff7\\r\n\n        \\    {\\r\n\n        \\        \\\"name\\\": \\\"Water\\\",\\r\n\n        \\        \\\"imageName\\\": \\\"water.svg\\\",\\r\n\n        \\        \\\"color\\\": \\\"#0000cc\\\",\\r\n\n        \\        \\\"keywordMatching\\\": \\\"Any\\\",\\r\n\n        \\        \\\"keywords\\\": [\\r\n\n        \\            {\\r\n\n        \\                \\\"value\\\": \\\"H2O\\\"\\r\n\n        \\            },\\r\n\n        \\            {\\r\n\n        \\                \\\"value\\\": \\\"Water\\\"\\r\n\n        \\            }\\r\n\n        \\        ]\\r\n\n        \\    }\"\n      parameters:\n        - description: ID of the team the category belongs to\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/CategoryInfo\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CategoryInfo\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/CategoryInfo\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/CategoryInfo\"\n        description: Category to be created\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CategoryInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CategoryInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/CategoryInfo\"\n          description: Returns the newly created category\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If the input is not valid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If you have no permission to access this resource\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If the resource was not found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If any server side errors occur\n      summary: Create a new category\n      tags:\n        - Categories\n  \"/categories/{teamId}/metrics\":\n    get:\n      description: \"Sample Request:\\r\n\n        \\            \\r\n\n        \\    GET /categories/cbb70402-1359-477f-ac92-0171cf2b5ff7/metrics\"\n      parameters:\n        - description: ID of the team the categories belongs to\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CategoryMetrics\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CategoryMetrics\"\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CategoryMetrics\"\n                type: array\n          description: Returns a list of category metrics\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If the input is not valid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If you have no permission to access this resource\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If the resource was not found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If any server side errors occur\n      summary: Get metrics for all categories\n      tags:\n        - Categories\n  \"/categories/{teamId}/{categoryId}\":\n    delete:\n      description: \"Sample Request:\\r\n\n        \\            \\r\n\n        \\    DELETE /categories/cbb70402-1359-477f-ac92-0171cf2b5ff7/c0054336-cd89-4abf-882d-ba69b5adb25e\"\n      parameters:\n        - description: ID of the team the category belongs to\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n        - description: ID of the category to delete\n          in: path\n          name: categoryId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: If the delete operation was successful\n        \"204\":\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If the input is not valid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If you have no permission to access this resource\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If the resource was not found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If any server side errors occur\n      summary: Delete an existing category\n      tags:\n        - Categories\n    get:\n      description: \"Sample Request:\\r\n\n        \\            \\r\n\n        \\    GET /categories/cbb70402-1359-477f-ac92-0171cf2b5ff7/c0054336-cd89-4abf-882d-ba69b5adb25e\"\n      parameters:\n        - description: ID of the team the category belongs to\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n        - description: ID of the category to get\n          in: path\n          name: categoryId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CategoryInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CategoryInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/CategoryInfo\"\n          description: Returns the category details\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If the input is not valid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If you have no permission to access this resource\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If the resource was not found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If any server side errors occur\n      summary: Get a specific category\n      tags:\n        - Categories\n    put:\n      description: \"Sample Request:\\r\n\n        \\            \\r\n\n        \\    PUT /categories/cbb70402-1359-477f-ac92-0171cf2b5ff7/c0054336-cd89-4abf-882d-ba69b5adb25e\\r\n\n        \\    {\\r\n\n        \\        \\\"name\\\": \\\"Water-Updated\\\",\\r\n\n        \\        \\\"imageName\\\": \\\"water.svg\\\",\\r\n\n        \\        \\\"color\\\": \\\"#0000cc\\\",\\r\n\n        \\        \\\"keywordMatching\\\": \\\"All\\\",\\r\n\n        \\        \\\"keywords\\\": [\\r\n\n        \\            {\\r\n\n        \\                \\\"value\\\": \\\"H2O\\\"\\r\n\n        \\            },\\r\n\n        \\            {\\r\n\n        \\                \\\"value\\\": \\\"Water\\\"\\r\n\n        \\            },\\r\n\n        \\            {\\r\n\n        \\                \\\"value\\\": \\\"Wet\\\"\\r\n\n        \\            }\\r\n\n        \\        ]\\r\n\n        \\    }\"\n      parameters:\n        - description: ID of the team the category belongs to\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: categoryId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/CategoryInfo\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CategoryInfo\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/CategoryInfo\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/CategoryInfo\"\n        description: Category to be updated\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CategoryInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CategoryInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/CategoryInfo\"\n          description: Returns the updated category\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If the input is not valid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If you have no permission to access this resource\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If the resource was not found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If any server side errors occur\n      summary: Update an existing category\n      tags:\n        - Categories\n  \"/categories/{teamId}/{categoryId}/metrics\":\n    get:\n      description: \"Sample Request:\\r\n\n        \\            \\r\n\n        \\    GET /categories/cbb70402-1359-477f-ac92-0171cf2b5ff7/c0054336-cd89-4abf-882d-ba69b5adb25e/metrics\"\n      parameters:\n        - description: ID of the team the category belongs to\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n        - description: ID of the category to get\n          in: path\n          name: categoryId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CategoryMetrics\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CategoryMetrics\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/CategoryMetrics\"\n          description: Returns the category metrics\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If the input is not valid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If you have no permission to access this resource\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If the resource was not found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If any server side errors occur\n      summary: Get metrics for a specific category\n      tags:\n        - Categories\n  \"/categories/{teamId}/{categoryId}/subscriptions\":\n    get:\n      description: \"Sample Request:\\r\n\n        \\            \\r\n\n        \\    GET /categories/cbb70402-1359-477f-ac92-0171cf2b5ff7/c0054336-cd89-4abf-882d-ba69b5adb25e/subscriptions\\r\n\n        \\    {\\r\n\n        \\    }\"\n      parameters:\n        - description: ID of the team the category belongs to\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n        - description: Category to get subscriptions for\n          in: path\n          name: categoryId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CategorySubscriptionInfo\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CategorySubscriptionInfo\"\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CategorySubscriptionInfo\"\n                type: array\n          description: Returns the category subscriptions\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If the input is not valid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If you have no permission to access this resource\n        \"404\":\n          description: If the resource was not found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If any server side errors occur\n      summary: Get category subscriptions\n      tags:\n        - Categories\n    post:\n      description: \"Sample Request:\\r\n\n        \\            \\r\n\n        \\    POST /categories/cbb70402-1359-477f-ac92-0171cf2b5ff7/c0054336-cd89-4abf-882d-ba69b5adb25e/subscriptions\\r\n\n        \\    {\\r\n\n        \\    }\"\n      parameters:\n        - description: ID of the team the category belongs to\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n        - description: Category to be updated\n          in: path\n          name: categoryId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              items:\n                $ref: \"#/components/schemas/CategorySubscriptionInfo\"\n              type: array\n          application/json:\n            schema:\n              items:\n                $ref: \"#/components/schemas/CategorySubscriptionInfo\"\n              type: array\n          application/json-patch+json:\n            schema:\n              items:\n                $ref: \"#/components/schemas/CategorySubscriptionInfo\"\n              type: array\n          text/json:\n            schema:\n              items:\n                $ref: \"#/components/schemas/CategorySubscriptionInfo\"\n              type: array\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CategorySubscriptionInfo\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CategorySubscriptionInfo\"\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CategorySubscriptionInfo\"\n                type: array\n          description: Returns the updated category subscriptions\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If the input is not valid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If you have no permission to access this resource\n        \"404\":\n          description: If the resource was not found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: If any server side errors occur\n      summary: Set category subscriptions\n      tags:\n        - Categories\n  /events/paged:\n    post:\n      description: Get overview event paged. If there are more results, you also get a continuation token which you can add to the event filter.\n      parameters:\n        - description: \"Defines the limit of retrieved alert details per request. 1 to 100 are allowed per request.\\r\n\n            \\                 Number of alerts could be less if filtered but at least 1.\"\n          in: query\n          name: maxResults\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/EventFilter\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EventFilter\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/EventFilter\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/EventFilter\"\n        description: The filter defines which alerts are supposed to be retrieved.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OverviewEventPagedResultsPublic\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/OverviewEventPagedResultsPublic\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/OverviewEventPagedResultsPublic\"\n          description: Returns paged result with found events and continuation token, if database holds more events.\n        \"204\":\n          description: No event could be found (with passed filter)\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required parameters could not be found in the request/claims.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Internal general error occured.\n      summary: Get overview event paged.\n      tags:\n        - Events\n  \"/events/{eventId}/overview\":\n    get:\n      description: Get overview event by id.\n      parameters:\n        - description: Id of event to get.\n          in: path\n          name: eventId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OverviewEvent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/OverviewEvent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/OverviewEvent\"\n          description: Returns overview event with specific id.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required parameters could not be found in the request/claims.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Event with specified id could not be found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Internal general error occured.\n      summary: Get overview event\n      tags:\n        - Events\n  \"/events/{eventId}/parameters\":\n    get:\n      description: Get parameters of an event by id.\n      parameters:\n        - description: Event Id of the requested Alert.\n          in: path\n          name: eventId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/EventParameterInfo\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/EventParameterInfo\"\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/EventParameterInfo\"\n                type: array\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required entities could not be found in the database.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Internal general error occured.\n      summary: Get event parameters\n      tags:\n        - Events\n  /prepaid/balance:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PrepaidBalanceInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PrepaidBalanceInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/PrepaidBalanceInfo\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Get your subscription's current prepaid balance.\n      tags:\n        - Prepaid\n  /prepaid/settings:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PrepaidSettingsInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PrepaidSettingsInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/PrepaidSettingsInfo\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Get your subscription's current prepaid settings.\n      tags:\n        - Prepaid\n    put:\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/PrepaidSettingsInfo\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PrepaidSettingsInfo\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/PrepaidSettingsInfo\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/PrepaidSettingsInfo\"\n        description: Settings object containing the new values.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PrepaidSettingsInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PrepaidSettingsInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/PrepaidSettingsInfo\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Update your subscription's current prepaid settings.\n      tags:\n        - Prepaid\n  /prepaid/transactions:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PrepaidTransactionInfo\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PrepaidTransactionInfo\"\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PrepaidTransactionInfo\"\n                type: array\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Get your subscription's prepaid transactions.\n      tags:\n        - Prepaid\n  /scripts/instances:\n    get:\n      description: Returns all script instances in the subscription.\n      parameters:\n        - in: query\n          name: teamId\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ScriptInstanceDetails\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ScriptInstanceDetails\"\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ScriptInstanceDetails\"\n                type: array\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n      summary: Returns all script instances of the SIGNL4 team\n      tags:\n        - Scripts\n    post:\n      description: Creates a new script instance of the script specified in the request body.\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/ScriptInstanceDetails\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ScriptInstanceDetails\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/ScriptInstanceDetails\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/ScriptInstanceDetails\"\n        description: Script instance to be created.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ScriptInstanceDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ScriptInstanceDetails\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ScriptInstanceDetails\"\n          description: Existing script instance was updated as specified in body.\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ScriptInstanceDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ScriptInstanceDetails\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ScriptInstanceDetails\"\n          description: New script instance was updated as specified in body.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required entities could not be found in the database.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: An internal error has occurred during instance creation.\n      summary: Creates a new script instance in the in the SIGNL4 team.\n      tags:\n        - Scripts\n  \"/scripts/instances/{instanceId}\":\n    delete:\n      description: Gets the script instance specified by the passed instance id.\n      parameters:\n        - description: Instance Id of script instance to be returned.\n          in: path\n          name: instanceId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required entities could not be found in the database or in memory.\n      summary: Deletes a script instance.\n      tags:\n        - Scripts\n    get:\n      description: Gets the script instance specified by the passed instance id.\n      parameters:\n        - description: Instance Id of script instance to be returned.\n          in: path\n          name: instanceId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ScriptInstanceDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ScriptInstanceDetails\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ScriptInstanceDetails\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required entities could not be found in the database or in memory.\n      summary: Returns all information about a given script instance which includes its runtime status.\n      tags:\n        - Scripts\n    put:\n      description: Updates the specified script instance.\n      parameters:\n        - description: InstanceId of the script to be updated.\n          in: path\n          name: instanceId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/ScriptInstanceDetails\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ScriptInstanceDetails\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/ScriptInstanceDetails\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/ScriptInstanceDetails\"\n        description: Script instance to be updated.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ScriptInstanceDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ScriptInstanceDetails\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ScriptInstanceDetails\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required entities could not be found in the database.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: An internal error has occurred during instance creation.\n      summary: Updates a given script instance, typically used for updating the configuration of a script.\n      tags:\n        - Scripts\n  \"/scripts/instances/{instanceId}/data\":\n    put:\n      description: Updates the specified script instance.\n      parameters:\n        - description: InstanceId of the script to be updated.\n          in: path\n          name: instanceId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/ScriptInstanceCustomUserData\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ScriptInstanceCustomUserData\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/ScriptInstanceCustomUserData\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/ScriptInstanceCustomUserData\"\n        description: Script instance to be updated.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ScriptInstanceDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ScriptInstanceDetails\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ScriptInstanceDetails\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required entities could not be found in the database.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: An internal error has occurred during instance creation.\n      summary: Updates custom data of a given script instance which includes its display name.\n      tags:\n        - Scripts\n  \"/scripts/instances/{instanceId}/disable\":\n    post:\n      parameters:\n        - description: Id of the instance to be disabled.\n          in: path\n          name: instanceId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ScriptInstanceDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ScriptInstanceDetails\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ScriptInstanceDetails\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Disables a given script instance.\n      tags:\n        - Scripts\n  \"/scripts/instances/{instanceId}/enable\":\n    post:\n      parameters:\n        - description: Id of the instance to be enabled.\n          in: path\n          name: instanceId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ScriptInstanceDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ScriptInstanceDetails\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ScriptInstanceDetails\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Enables a script instance.\n      tags:\n        - Scripts\n  /scripts/inventory:\n    get:\n      description: Returns all available inventory scripts which can be added to a SIGNL4 subscription.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/InventoryScriptInfo\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/InventoryScriptInfo\"\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/InventoryScriptInfo\"\n                type: array\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: An internal error orccurred while loading all inventory scripts.\n      summary: Returns all available inventory scripts which can be added to a SIGNL4 subscription.\n      tags:\n        - Scripts\n  /scripts/inventory/parsed:\n    get:\n      parameters:\n        - description: \"\"\n          in: query\n          name: language\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/InventoryScriptInfo\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/InventoryScriptInfo\"\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/InventoryScriptInfo\"\n                type: array\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Returns all inventory scripts.\n      tags:\n        - Scripts\n  \"/scripts/inventory/parsed/{scriptId}\":\n    get:\n      description: Gets the script specified by the passed script id.\n      parameters:\n        - description: The Id of the script to be returned.\n          in: path\n          name: scriptId\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: language\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ScriptInstanceDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ScriptInstanceDetails\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ScriptInstanceDetails\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required entities could not be found in the database or in memory.\n      summary: Returns an inventory script by its id.\n      tags:\n        - Scripts\n  /subscriptions:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SubscriptionInfo\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SubscriptionInfo\"\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SubscriptionInfo\"\n                type: array\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Get infos of all available/managed subscriptions.\n      tags:\n        - Subscriptions\n  \"/subscriptions/{subscriptionId}\":\n    get:\n      parameters:\n        - description: Id of the subscription that's to be retrieved.\n          in: path\n          name: subscriptionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SubscriptionInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SubscriptionInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/SubscriptionInfo\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Get infos of a specific subscription.\n      tags:\n        - Subscriptions\n  \"/subscriptions/{subscriptionId}/channelPrices\":\n    get:\n      parameters:\n        - description: Id of the subscription that needs to be retrieved.\n          in: path\n          name: subscriptionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ChannelPriceInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ChannelPriceInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ChannelPriceInfo\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Returns the subscription's channel price information.\n      tags:\n        - Subscriptions\n  \"/subscriptions/{subscriptionId}/features\":\n    get:\n      parameters:\n        - description: Id of the subscription from which the features need to be retrieved.\n          in: path\n          name: subscriptionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SubscriptionFeature\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SubscriptionFeature\"\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SubscriptionFeature\"\n                type: array\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Returns the features of a specified subscription.\n      tags:\n        - Subscriptions\n  \"/subscriptions/{subscriptionId}/prepaidBalance\":\n    get:\n      parameters:\n        - in: path\n          name: subscriptionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PrepaidBalanceInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PrepaidBalanceInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/PrepaidBalanceInfo\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Get a subscription's current prepaid balance.\n      tags:\n        - Prepaid\n  \"/subscriptions/{subscriptionId}/prepaidSettings\":\n    get:\n      parameters:\n        - in: path\n          name: subscriptionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PrepaidSettingsInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PrepaidSettingsInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/PrepaidSettingsInfo\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Get a subscription's current prepaid settings.\n      tags:\n        - Prepaid\n    put:\n      parameters:\n        - description: ID of the subscription\n          in: path\n          name: subscriptionId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/PrepaidSettingsInfo\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PrepaidSettingsInfo\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/PrepaidSettingsInfo\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/PrepaidSettingsInfo\"\n        description: Settings object containing the new values.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PrepaidSettingsInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PrepaidSettingsInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/PrepaidSettingsInfo\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Update a subscription's current prepaid settings.\n      tags:\n        - Prepaid\n  \"/subscriptions/{subscriptionId}/prepaidTransactions\":\n    get:\n      parameters:\n        - description: ID of the subscription to get transactions for\n          in: path\n          name: subscriptionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PrepaidTransactionInfo\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PrepaidTransactionInfo\"\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PrepaidTransactionInfo\"\n                type: array\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Get a subscription's prepaid transactions.\n      tags:\n        - Prepaid\n  \"/subscriptions/{subscriptionId}/profile\":\n    put:\n      parameters:\n        - description: ID of the subscription to be updated\n          in: path\n          name: subscriptionId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/SubscriptionProfile\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SubscriptionProfile\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/SubscriptionProfile\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/SubscriptionProfile\"\n        description: Profile data to update subscription with\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SubscriptionInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SubscriptionInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/SubscriptionInfo\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Updates a subscriptions profile.\n      tags:\n        - Subscriptions\n  \"/subscriptions/{subscriptionId}/teams\":\n    get:\n      parameters:\n        - in: path\n          name: subscriptionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TeamInfo\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TeamInfo\"\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TeamInfo\"\n                type: array\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Get infos for all teams of the subscription.\n      tags:\n        - Teams\n  \"/subscriptions/{subscriptionId}/userLicenses\":\n    get:\n      parameters:\n        - description: ID of the subscription\n          in: path\n          name: subscriptionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserLicenseInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/UserLicenseInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/UserLicenseInfo\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Gets a subscription's user licenses.\n      tags:\n        - Subscriptions\n  /teams:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TeamInfo\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TeamInfo\"\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TeamInfo\"\n                type: array\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Get infos of all teams.\n      tags:\n        - Teams\n  \"/teams/{teamId}\":\n    get:\n      parameters:\n        - description: ID of the team that should be retrieved.\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TeamInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TeamInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/TeamInfo\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Gets infos of a specific team.\n      tags:\n        - Teams\n  \"/teams/{teamId}/alertReports\":\n    get:\n      parameters:\n        - description: ID of team you want to download reports from.\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlertAuditReportFileInfo\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlertAuditReportFileInfo\"\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlertAuditReportFileInfo\"\n                type: array\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Get information about downloadable alert reports\n      tags:\n        - Teams\n  \"/teams/{teamId}/alertReports/{fileName}\":\n    get:\n      parameters:\n        - description: ID of team you want to get the duty report file infos for.\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n        - description: File name of file you want to download.\n          in: path\n          name: fileName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: binary\n                type: string\n            text/json:\n              schema:\n                format: binary\n                type: string\n            text/plain:\n              schema:\n                format: binary\n                type: string\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Returns Alert Report\n      tags:\n        - Teams\n  \"/teams/{teamId}/alertSettings\":\n    get:\n      parameters:\n        - description: ID of the team the settings should be retrieved for.\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AlertSettings\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AlertSettings\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/AlertSettings\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Gets alert settings of a specific team.\n      tags:\n        - Teams\n    post:\n      parameters:\n        - description: ID of the team the settings should be set for.\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/AlertSettings\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AlertSettings\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/AlertSettings\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/AlertSettings\"\n        description: Alert settings to be set\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AlertSettings\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AlertSettings\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/AlertSettings\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Sets alert settings of a specific team.\n      tags:\n        - Teams\n  \"/teams/{teamId}/dutyReports\":\n    get:\n      parameters:\n        - description: ID of team you want to get the duty report file infos for.\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DutyAuditReportFileInfo\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DutyAuditReportFileInfo\"\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DutyAuditReportFileInfo\"\n                type: array\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Get Information about downloadable reports\n      tags:\n        - Duties\n  \"/teams/{teamId}/dutyReports/{fileName}\":\n    get:\n      parameters:\n        - description: ID of team you want to download the duty report for.\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n        - description: Filename of the csv to download.\n          in: path\n          name: fileName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: binary\n                type: string\n            text/json:\n              schema:\n                format: binary\n                type: string\n            text/plain:\n              schema:\n                format: binary\n                type: string\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Download duty report with a specific fileName\n      tags:\n        - Duties\n  \"/teams/{teamId}/dutysummary\":\n    get:\n      parameters:\n        - description: ID of the team the duty belongs to.\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: lastTwoDuties\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TeamDutySummaryInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TeamDutySummaryInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/TeamDutySummaryInfo\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Get duty assistant info for a team\n      tags:\n        - Duties\n  \"/teams/{teamId}/eventSources\":\n    get:\n      parameters:\n        - description: ID of the team the sources should be retrieved for.\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/EventSourceEndpointInfo\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/EventSourceEndpointInfo\"\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/EventSourceEndpointInfo\"\n                type: array\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Gets event sources of a specific team.\n      tags:\n        - Teams\n  \"/teams/{teamId}/memberships\":\n    get:\n      parameters:\n        - description: Team ID of team you want to request.\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/InvitedUserInfo\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/InvitedUserInfo\"\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/InvitedUserInfo\"\n                type: array\n          description: User invitations are returned.\n        \"204\":\n          description: Request was canceled.\n        \"400\":\n          description: Required parameters or authentifaction info could not be found in the request/claims.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: You're not allowed to request the access all required entities.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required entities could not be found in the database.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Get all invites of a team.\n      tags:\n        - TeamsMemberships\n    post:\n      parameters:\n        - description: Id of team the user should be invited to.\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/UsersInvitation\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UsersInvitation\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/UsersInvitation\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/UsersInvitation\"\n        description: Information about user to invite and inviter id.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/UserInvitationResult\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/UserInvitationResult\"\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/UserInvitationResult\"\n                type: array\n          description: User invitation results are returned.\n        \"204\":\n          description: Request was canceled.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required parameters or authentifaction info could not be found in the request/claims.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: You're not allowed to request the access all required entities.\n        \"404\":\n          description: Required entities could not be found in the database.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Invite users to a team\n      tags:\n        - TeamsMemberships\n  \"/teams/{teamId}/memberships/resendInviteMail\":\n    post:\n      parameters:\n        - description: Team ID of team with invited user.\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/UserInvitationInfo\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UserInvitationInfo\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/UserInvitationInfo\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/UserInvitationInfo\"\n        description: Information which user should be invited again.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n            text/json:\n              schema:\n                type: string\n            text/plain:\n              schema:\n                type: string\n          description: Success\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Sends invite email again if an invite exists\n      tags:\n        - TeamsMemberships\n  \"/teams/{teamId}/memberships/{userId}\":\n    delete:\n      parameters:\n        - description: ID of the team the user should be deleted from\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n        - description: ID of the user that should be deleted\n          in: path\n          name: userId\n          required: true\n          schema:\n            type: string\n        - description: User ID of user which will remove the other user.\n          in: query\n          name: requesterUserId\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n            text/json:\n              schema:\n                type: string\n            text/plain:\n              schema:\n                type: string\n          description: Success message\n        \"204\":\n          description: Request was canceled.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required parameters or authentifaction info could not be found in the request/claims.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: You're not allowed to request the access all required entities.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required entities could not be found in the database.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Removes a user or invitation from a team, and may delete the user if he is not in any team.\n      tags:\n        - TeamsMemberships\n    put:\n      description: \"Updates the user's team membership. You can move the user to another team within the subscription\\r\n\n        and/or change the user's role.\"\n      parameters:\n        - description: Team the user you want to update belongs to at the moment.\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n        - description: User ID of user you want to update.\n          in: path\n          name: userId\n          required: true\n          schema:\n            type: string\n        - description: User ID of user which you want to change role with. This must be provided when using an api key. This user must have role administrator (for setting administrator role) or team administrator (for setting  rights.\n          in: query\n          name: requesterUserId\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/UserMembership\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UserMembership\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/UserMembership\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/UserMembership\"\n        description: Information about role id and target team id.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/UserInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/UserInfo\"\n          description: User was successfully updated.\n        \"204\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Request was canceled.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required parameters or authentifaction info could not be found in the request/claims.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: You're not allowed to request the access all required entities.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required entities could not be found in the database.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Update user's team membership.\n      tags:\n        - TeamsMemberships\n  \"/teams/{teamId}/profile\":\n    put:\n      parameters:\n        - description: Team ID of team which should be updated.\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/TeamProfile\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TeamProfile\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/TeamProfile\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/TeamProfile\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TeamInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TeamInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/TeamInfo\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Updates team profile of a team\n      tags:\n        - Teams\n  \"/teams/{teamId}/schedules\":\n    get:\n      parameters:\n        - description: Id of the team the schedules user belongs to\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: UserId\n          schema:\n            type: string\n        - in: query\n          name: MinDate\n          schema:\n            format: date-time\n            type: string\n        - in: query\n          name: Limit\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ScheduleInfo\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ScheduleInfo\"\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ScheduleInfo\"\n                type: array\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Returns information about all duties that belong to the team.\n      tags:\n        - Duties\n    post:\n      parameters:\n        - description: Id of the team the duty is to be assigned to.\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/ScheduleInfo\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ScheduleInfo\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/ScheduleInfo\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/ScheduleInfo\"\n        description: information about the duty schedule to be created\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ScheduleInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ScheduleInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ScheduleInfo\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Conflict\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Create/Update given duty schedule.\n      tags:\n        - Duties\n  \"/teams/{teamId}/schedules/deleteRange\":\n    post:\n      parameters:\n        - description: Team ID you want to delete\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/DeleteRangeInfo\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteRangeInfo\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/DeleteRangeInfo\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteRangeInfo\"\n        description: Information with date range to delete from to\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ScheduleInfo\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ScheduleInfo\"\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ScheduleInfo\"\n                type: array\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Conflict\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Delete duty schedules in range\n      tags:\n        - Duties\n  \"/teams/{teamId}/schedules/multiple\":\n    post:\n      parameters:\n        - description: Team ID to set\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n        - description: Override or cut existing schedules if set to true.\n          in: query\n          name: overrideExisting\n          schema:\n            type: boolean\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              items:\n                $ref: \"#/components/schemas/ScheduleInfo\"\n              type: array\n          application/json:\n            schema:\n              items:\n                $ref: \"#/components/schemas/ScheduleInfo\"\n              type: array\n          application/json-patch+json:\n            schema:\n              items:\n                $ref: \"#/components/schemas/ScheduleInfo\"\n              type: array\n          text/json:\n            schema:\n              items:\n                $ref: \"#/components/schemas/ScheduleInfo\"\n              type: array\n        description: List of schedules to save\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ScheduleInfo\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ScheduleInfo\"\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ScheduleInfo\"\n                type: array\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Conflict\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Save multiple schedules. It is possible to override existing schedules if you wish\n      tags:\n        - Duties\n  \"/teams/{teamId}/schedules/{dutyId}\":\n    delete:\n      parameters:\n        - description: ID of the team the duty belongs to.\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n        - description: ID of the duty to be deleted.\n          in: path\n          name: dutyId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Delete a specific duty.\n      tags:\n        - Duties\n  \"/teams/{teamId}/schedules/{scheduleId}\":\n    get:\n      parameters:\n        - description: Id of the team the duty belongs to\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n        - description: Id of the requested duty schedule.\n          in: path\n          name: scheduleId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ScheduleInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ScheduleInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ScheduleInfo\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Returns information of the duty schedule with the specified Id.\n      tags:\n        - Duties\n  \"/teams/{teamId}/setupProgress\":\n    get:\n      parameters:\n        - description: ID of the team the progress should be retrieved for.\n          in: path\n          name: teamId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TeamSetupProgress\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TeamSetupProgress\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/TeamSetupProgress\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Gets setup progress of a specific team.\n      tags:\n        - Teams\n  /users:\n    get:\n      description: \"Returns a list of user objects with details such as their email address and duty information. Only users who\\r\n\n        are part of your team will be returned.\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/UserInfo\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/UserInfo\"\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/UserInfo\"\n                type: array\n          description: User could be successfully identified.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required authentifaction info could not be found in the request/claims.\n        \"403\":\n          description: You're not allowed to request the users with their information.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required entities could not be found in the database.\n      summary: Get all Users\n      tags:\n        - Users\n  \"/users/{userId}\":\n    get:\n      description: Returns a user object with details such as his email address and duty information.\n      parameters:\n        - description: \"Identifier of the user to get. Use 'Me' to get information about the currently logged in user. This is not possible with an api key.\\r\n\n            Can also be an email address of a user in the team or the unique id of an according user object.â\"\n          in: path\n          name: userId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/UserInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/UserInfo\"\n          description: User could be successfully identified.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required authentifaction info could not be found in the request/claims.\n        \"403\":\n          description: You're not allowed to request that user's information.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required entities could not be found in the database.\n      summary: Get User by Id\n      tags:\n        - Users\n  \"/users/{userId}/changePassword\":\n    put:\n      parameters:\n        - description: User ID of user whose password should be changed.\n          in: path\n          name: userId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/UpdatePasswordInfo\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdatePasswordInfo\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/UpdatePasswordInfo\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/UpdatePasswordInfo\"\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Updates the password of a user\n      tags:\n        - Users\n  \"/users/{userId}/checkPermissions\":\n    post:\n      parameters:\n        - description: ID of the user to check permissions for.\n          in: path\n          name: userId\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: teamId\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/StringItemsWrapper\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StringItemsWrapper\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/StringItemsWrapper\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/StringItemsWrapper\"\n        description: List of permissions to check\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserImage\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/UserImage\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/UserImage\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n      summary: Checks if a user has the provided permission.\n      tags:\n        - Users\n  \"/users/{userId}/dutyStatus\":\n    get:\n      description: Returns a object with duty information.\n      parameters:\n        - description: \"Identifier of the user to get. Use 'Me' to get information about the currently logged in user. This is not possible with an api key.\\r\n\n            Can also be an email address of a user in the team or the unique id of an according user object.â\"\n          in: path\n          name: userId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserDutyInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/UserDutyInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/UserDutyInfo\"\n          description: Duty successfully loaded.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required authentifaction info could not be found in the request/claims.\n        \"403\":\n          description: You're not allowed to request that duty information.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required entities could not be found in the database.\n      summary: Get duty status by user Id\n      tags:\n        - Users\n  \"/users/{userId}/image\":\n    get:\n      parameters:\n        - in: path\n          name: userId\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: height\n          schema:\n            format: int32\n            type: integer\n        - in: query\n          name: width\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserImage\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/UserImage\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/UserImage\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n      tags:\n        - Users\n    post:\n      parameters:\n        - description: Id of the user.\n          in: path\n          name: userId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"204\":\n          description: The image was successfully uploaded.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: \"Either a passed parameter was either empty/null or the request's multipart does not contain a\\r\n\n            file.\"\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: User is not allowed to upoload an image for the specified user.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Either the user was not found or they aren't activated yet.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Internal general error occured.\n      summary: Uploaded a profile image for a specified user.\n      tags:\n        - Users\n  \"/users/{userId}/profile\":\n    put:\n      parameters:\n        - description: ID of user to update.\n          in: path\n          name: userId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/UserProfile\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UserProfile\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/UserProfile\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/UserProfile\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/UserInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/UserInfo\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Updates user profile of an user\n      tags:\n        - Users\n  \"/users/{userId}/punchIn\":\n    post:\n      description: The specified user will be punched in to duty.\n      parameters:\n        - description: \"Identifier of the user to punch in. Use 'Me' to get information about the currently logged in\\r\n\n            user. This is not possible with an api key. Can also be an email address of a user in the team or the unique id of an according user object.â\"\n          in: path\n          name: userId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserDutyInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/UserDutyInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/UserDutyInfo\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: The user tried to change the punch in a different user.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required entities could not be found in the database.\n      summary: Punch User in\n      tags:\n        - Users\n  \"/users/{userId}/punchInAsManager\":\n    post:\n      description: The specified user will be punched in to duty as a manager.\n      parameters:\n        - description: \"Identifier of the user to punch in. Use 'Me' to get information about the currently logged in\\r\n\n            user. This is not possible with an api key. Can also be an email address of a user in the team or the unique id of an according user object.â\"\n          in: path\n          name: userId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserDutyInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/UserDutyInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/UserDutyInfo\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required information could not be found in the request/claims.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: The user tried to change the punch in a different user.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required entities could not be found in the database.\n      summary: Punch User in as Manager\n      tags:\n        - Users\n  \"/users/{userId}/punchOut\":\n    post:\n      description: The specified user will be punched out from duty.\n      parameters:\n        - description: \"Identifier of the user to punch out. Use 'Me' to get information about the currently logged in\\r\n\n            user. This is not possible with an api key. Can also be an email address of a user in the team or the unique id of an according user object.â\"\n          in: path\n          name: userId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserDutyInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/UserDutyInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/UserDutyInfo\"\n          description: The user was punched out successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Required authentifaction information could not be found in the request/claims.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: The requesting user tried to punch out someone else, which is not allowed.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: The desired user was not found by passed id.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: \"The desired user was not punched out because it would violate  the minumum on-duty members setting\\r\n\n            from the team.\"\n      summary: Punch User out\n      tags:\n        - Users\n  \"/users/{userId}/setupProgress\":\n    get:\n      parameters:\n        - description: ID of the user the progress should be retrieved for.\n          in: path\n          name: userId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserSetupProgress\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/UserSetupProgress\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/UserSetupProgress\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Gets setup progress of a specific user.\n      tags:\n        - Users\n  /webhooks:\n    get:\n      description: Returns a collection of defined outbound webhooks in the system.\n      parameters:\n        - in: query\n          name: teamId\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/WebhookInfo\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/WebhookInfo\"\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/WebhookInfo\"\n                type: array\n          description: Request was successful and response body contains information about all outbound webhooks in the subscription.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: The subscription does not have any outbound webhooks.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Internal has occured. The response body may contain more information.\n      summary: Get Webhooks\n      tags:\n        - Webhooks\n    post:\n      description: Creates a new outbound webhook that will be notified when certain events occur.\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/WebhookBaseInfo\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WebhookBaseInfo\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/WebhookBaseInfo\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/WebhookBaseInfo\"\n        description: Json object that contains the external URL of the webhook.\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                type: string\n            text/json:\n              schema:\n                type: string\n            text/plain:\n              schema:\n                type: string\n          description: Action was successful and response contains the id of the newly created webhook.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Either the webhook object or a necessary property was invalid or empty.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Internal has occured. The response body may contain more information.\n      summary: Create Webhook\n      tags:\n        - Webhooks\n  \"/webhooks/{webhookId}\":\n    delete:\n      description: Deletes the specified webhook so that it will no longer be notified.\n      parameters:\n        - description: Id of the outbound webhook that will be deleted.\n          in: path\n          name: webhookId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Webhook was successfully deleted.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: The passed webhook id was invalid or empty.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Webhook with specified id was not found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Internal has occured. The response body may contain more information.\n      summary: Delete Webhook by Id\n      tags:\n        - Webhooks\n    get:\n      description: Returns information of the webhook specified by the passed id.\n      operationId: GetWebhookById\n      parameters:\n        - description: Id of the outbound webhook to be retrieved.\n          in: path\n          name: webhookId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n            text/json:\n              schema:\n                type: string\n            text/plain:\n              schema:\n                type: string\n          description: Request was successful and response body contains information about the requested webhook.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: The passed webhook id was either empty or null.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: The webhook was not found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Internal has occured. The response body may contain more information.\n      summary: Get Webhook by Id\n      tags:\n        - Webhooks\n    put:\n      description: Updates the specified webhook.\n      parameters:\n        - description: Id of the outbound webhook to be updated.\n          in: path\n          name: webhookId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/*+json:\n            schema:\n              $ref: \"#/components/schemas/WebhookBaseInfo\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WebhookBaseInfo\"\n          application/json-patch+json:\n            schema:\n              $ref: \"#/components/schemas/WebhookBaseInfo\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/WebhookBaseInfo\"\n        description: Json object containing the updated URL of the webhook.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WebhookInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/WebhookInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/WebhookInfo\"\n          description: Update was successful and response body contains the updated webhook details.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: A passed parameter was either empty or null.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Webhook with specified id was not found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Internal has occured. The response body may contain more information.\n      summary: Update Webhook by Id\n      tags:\n        - Webhooks\n  \"/webhooks/{webhookId}/disable\":\n    post:\n      parameters:\n        - description: Webhook ID for webhook which should be disabled.\n          in: path\n          name: webhookId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WebhookInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/WebhookInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/WebhookInfo\"\n          description: Disable was successful and response body contains the webhook details.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: A passed parameter was either empty or null.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Webhook with specified id was not found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Internal has occured. The response body may contain more information.\n      summary: Ability to enable a webHook.\n      tags:\n        - Webhooks\n  \"/webhooks/{webhookId}/enable\":\n    post:\n      parameters:\n        - description: Webhook ID for webhook which should be enabled.\n          in: path\n          name: webhookId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WebhookInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/WebhookInfo\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/WebhookInfo\"\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Bad Request\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponseContent\"\n          description: Server Error\n      summary: Ability to disable a webHook.\n      tags:\n        - Webhooks\ncomponents:\n  schemas:\n    AlertAnnotationInfo:\n      additionalProperties: false\n      properties:\n        annotationType:\n          format: int32\n          type: integer\n        id:\n          nullable: true\n          type: string\n        text:\n          nullable: true\n          type: string\n        timestamp:\n          format: date-time\n          type: string\n        userId:\n          nullable: true\n          type: string\n      type: object\n    AlertAttachment:\n      additionalProperties: false\n      properties:\n        content:\n          nullable: true\n          type: string\n        contentType:\n          nullable: true\n          type: string\n        encoding:\n          $ref: \"#/components/schemas/Encoding\"\n        id:\n          nullable: true\n          type: string\n        name:\n          nullable: true\n          type: string\n      type: object\n    AlertAttachmentInfo:\n      additionalProperties: false\n      properties:\n        contentType:\n          nullable: true\n          type: string\n        id:\n          nullable: true\n          type: string\n        name:\n          nullable: true\n          type: string\n      type: object\n    AlertAuditReportFileInfo:\n      additionalProperties: false\n      type: object\n    AlertCounts:\n      additionalProperties: false\n      properties:\n        acked:\n          format: int64\n          type: integer\n        closed:\n          format: int64\n          type: integer\n        end:\n          format: date-time\n          nullable: true\n          type: string\n        lastModified:\n          format: date-time\n          nullable: true\n          type: string\n        start:\n          format: date-time\n          nullable: true\n          type: string\n        unhandled:\n          format: int64\n          type: integer\n      type: object\n    AlertDeliveryStatusCodes:\n      enum:\n        - 0\n        - 1\n        - 2\n        - 4\n        - 6\n        - 8\n        - 22\n        - 24\n        - 26\n        - 30\n        - 31\n      format: int32\n      type: integer\n    AlertDeliveryStatusInfo:\n      additionalProperties: false\n      properties:\n        statusCode:\n          $ref: \"#/components/schemas/AlertDeliveryStatusCodes\"\n        users:\n          items:\n            $ref: \"#/components/schemas/UserDeliveryStatusInfo\"\n          nullable: true\n          type: array\n      type: object\n    AlertFilterActions:\n      enum:\n        - 0\n        - 1\n        - 2\n      format: int32\n      type: integer\n    AlertFilterModes:\n      enum:\n        - 0\n        - 1\n      format: int32\n      type: integer\n    AlertFilterPublic:\n      additionalProperties: false\n      properties:\n        alertIds:\n          items:\n            type: string\n          nullable: true\n          type: array\n        alertsAfterId:\n          nullable: true\n          type: string\n        categoryIds:\n          items:\n            type: string\n          nullable: true\n          type: array\n        continuationToken:\n          $ref: \"#/components/schemas/PagedResultsPublicContinuationToken\"\n        maxCreationDate:\n          format: date-time\n          nullable: true\n          type: string\n        minCreationDate:\n          format: date-time\n          nullable: true\n          type: string\n        modifiedSince:\n          format: date-time\n          nullable: true\n          type: string\n        showPersonalHiddenCategories:\n          type: boolean\n        statusCodes:\n          $ref: \"#/components/schemas/AlertStatusCodes\"\n        teamId:\n          nullable: true\n          type: string\n        textToSearch:\n          nullable: true\n          type: string\n      type: object\n    AlertHistoryInfoDetailed:\n      additionalProperties: false\n      properties:\n        acknowledged:\n          format: date-time\n          nullable: true\n          type: string\n        acknowledgedgements:\n          items:\n            type: string\n          nullable: true\n          type: array\n        closed:\n          format: date-time\n          nullable: true\n          type: string\n        closedBy:\n          nullable: true\n          type: string\n        created:\n          format: date-time\n          type: string\n        historyEntries:\n          items:\n            $ref: \"#/components/schemas/AlertHistoryInfoEntry\"\n          nullable: true\n          type: array\n      type: object\n    AlertHistoryInfoEntry:\n      additionalProperties: false\n      properties:\n        id:\n          nullable: true\n          type: string\n        timestamp:\n          format: date-time\n          type: string\n        type:\n          $ref: \"#/components/schemas/AlertHistoryInfoUserEntryType\"\n        userId:\n          nullable: true\n          type: string\n      type: object\n    AlertHistoryInfoUserEntryType:\n      enum:\n        - 0\n        - 1\n        - 2\n        - 3\n        - 4\n        - 5\n        - 6\n        - 7\n      format: int32\n      type: integer\n    AlertInfo:\n      additionalProperties: false\n      properties:\n        annotations:\n          items:\n            $ref: \"#/components/schemas/AlertAnnotationInfo\"\n          nullable: true\n          type: array\n        attachments:\n          items:\n            $ref: \"#/components/schemas/AlertAttachment\"\n          nullable: true\n          type: array\n        category:\n          nullable: true\n          type: string\n        categoryId:\n          nullable: true\n          type: string\n        eventId:\n          nullable: true\n          type: string\n        eventSourceId:\n          nullable: true\n          type: string\n        eventSourceType:\n          $ref: \"#/components/schemas/EventSourceTypes\"\n        flags:\n          format: int32\n          type: integer\n        history:\n          $ref: \"#/components/schemas/AlertHistoryInfoDetailed\"\n        id:\n          nullable: true\n          type: string\n        lastModified:\n          format: date-time\n          type: string\n        parameters:\n          items:\n            $ref: \"#/components/schemas/EventParameterInfo\"\n          nullable: true\n          type: array\n        severity:\n          $ref: \"#/components/schemas/AlertSeverities\"\n        status:\n          $ref: \"#/components/schemas/AlertStatusCodes\"\n        subscriptionId:\n          nullable: true\n          type: string\n        teamId:\n          nullable: true\n          type: string\n        text:\n          nullable: true\n          type: string\n        title:\n          nullable: true\n          type: string\n      type: object\n    AlertNotificationInfo:\n      additionalProperties: false\n      properties:\n        address:\n          nullable: true\n          type: string\n        channelType:\n          $ref: \"#/components/schemas/AlertNotificationInfoChannelType\"\n        deviceName:\n          nullable: true\n          type: string\n        lastUpdate:\n          format: date-time\n          type: string\n        messageStatus:\n          $ref: \"#/components/schemas/AlertNotificationInfoMessageStatus\"\n        userId:\n          nullable: true\n          type: string\n        userStatus:\n          $ref: \"#/components/schemas/AlertNotificationInfoUserStatus\"\n      type: object\n    AlertNotificationInfoChannelType:\n      enum:\n        - 0\n        - 1\n        - 2\n        - 4\n        - 8\n        - 16\n      format: int32\n      type: integer\n    AlertNotificationInfoMessageStatus:\n      enum:\n        - 0\n        - 1\n        - 2\n        - 3\n        - 4\n        - 5\n        - 6\n        - 7\n        - 8\n        - 9\n        - 10\n      format: int32\n      type: integer\n    AlertNotificationInfoUserStatus:\n      enum:\n        - 0\n        - 1\n        - 2\n        - 3\n        - 4\n        - 5\n        - 6\n      format: int32\n      type: integer\n    AlertReport:\n      additionalProperties: false\n      properties:\n        last24Hours:\n          $ref: \"#/components/schemas/AlertCounts\"\n        subscriptionId:\n          nullable: true\n          type: string\n        teamCurrentDuty:\n          $ref: \"#/components/schemas/AlertCounts\"\n        teamId:\n          nullable: true\n          type: string\n        teamLastDuty:\n          $ref: \"#/components/schemas/AlertCounts\"\n        userId:\n          nullable: true\n          type: string\n        userLastDutyChange:\n          $ref: \"#/components/schemas/AlertCounts\"\n      type: object\n    AlertResponseModes:\n      enum:\n        - 2\n        - 4\n      format: int32\n      type: integer\n    AlertSettings:\n      additionalProperties: false\n      properties:\n        filterAction:\n          $ref: \"#/components/schemas/AlertFilterActions\"\n        filterMode:\n          $ref: \"#/components/schemas/AlertFilterModes\"\n        optOutMode:\n          $ref: \"#/components/schemas/TeamCategoryOptOutModes\"\n        persistentNotificicationMode:\n          $ref: \"#/components/schemas/PersistentNotificationModes\"\n        responseMode:\n          $ref: \"#/components/schemas/AlertResponseModes\"\n        responseTime:\n          format: int32\n          type: integer\n      type: object\n    AlertSeverities:\n      enum:\n        - 0\n        - 1\n        - 2\n      format: int32\n      type: integer\n    AlertStatusCodes:\n      enum:\n        - 0\n        - 1\n        - 2\n        - 4\n        - 8\n        - 16\n        - 32\n      format: int32\n      type: integer\n    CategoryAugmentation:\n      additionalProperties: false\n      properties:\n        enabled:\n          type: boolean\n        name:\n          nullable: true\n          type: string\n        type:\n          $ref: \"#/components/schemas/CategoryAugmentationType\"\n        value:\n          nullable: true\n          type: string\n      type: object\n    CategoryAugmentationType:\n      enum:\n        - 0\n        - 1\n        - 2\n        - 3\n      format: int32\n      type: integer\n    CategoryInfo:\n      additionalProperties: false\n      properties:\n        augmentations:\n          items:\n            $ref: \"#/components/schemas/CategoryAugmentation\"\n          nullable: true\n          type: array\n        color:\n          nullable: true\n          type: string\n        id:\n          nullable: true\n          type: string\n        imageName:\n          nullable: true\n          type: string\n        isDefault:\n          readOnly: true\n          type: boolean\n        keywordMatching:\n          $ref: \"#/components/schemas/KeywordMatchingType\"\n        keywords:\n          items:\n            type: string\n          nullable: true\n          type: array\n        lastMatch:\n          format: date-time\n          nullable: true\n          type: string\n        name:\n          nullable: true\n          type: string\n        options:\n          $ref: \"#/components/schemas/CategoryInfoOptions\"\n        order:\n          format: int32\n          type: integer\n      type: object\n    CategoryInfoOptions:\n      enum:\n        - 0\n        - 1\n        - 2\n        - 4\n        - 8\n      format: int32\n      type: integer\n    CategoryMetrics:\n      additionalProperties: false\n      properties:\n        categoryId:\n          nullable: true\n          type: string\n        last24Hours:\n          format: int64\n          type: integer\n        lastAlert:\n          format: date-time\n          nullable: true\n          type: string\n        subscriberCount:\n          format: int32\n          type: integer\n      type: object\n    CategorySubscriptionInfo:\n      additionalProperties: false\n      properties:\n        status:\n          $ref: \"#/components/schemas/CategorySubscriptionStatus\"\n        userId:\n          nullable: true\n          type: string\n      type: object\n    CategorySubscriptionStatus:\n      enum:\n        - 0\n        - 1\n        - 2\n      format: int32\n      type: integer\n    ChangeAlertStatusFilterInfo:\n      additionalProperties: false\n      properties:\n        categoryIds:\n          items:\n            type: string\n          nullable: true\n          type: array\n        maxDate:\n          format: date-time\n          nullable: true\n          type: string\n        minDate:\n          format: date-time\n          nullable: true\n          type: string\n        scope:\n          $ref: \"#/components/schemas/StatusChangeScope\"\n        teamIds:\n          items:\n            type: string\n          nullable: true\n          type: array\n      type: object\n    ChangeAlertStatusInfo:\n      additionalProperties: false\n      properties:\n        description:\n          nullable: true\n          type: string\n        userId:\n          nullable: true\n          type: string\n      type: object\n    ChangeAlertStatusMultipleInfo:\n      additionalProperties: false\n      properties:\n        alertIds:\n          items:\n            type: string\n          nullable: true\n          type: array\n        description:\n          nullable: true\n          type: string\n        userId:\n          nullable: true\n          type: string\n      type: object\n    ChannelPriceInfo:\n      additionalProperties: false\n      properties:\n        smsPerMessage:\n          format: int32\n          type: integer\n        voicePerMinute:\n          format: int32\n          type: integer\n      type: object\n    ChannelTypes:\n      enum:\n        - 0\n        - 1\n        - 2\n        - 4\n        - 8\n        - 16\n      format: int32\n      type: integer\n    ContactAddressInfo:\n      additionalProperties: false\n      properties:\n        address:\n          nullable: true\n          type: string\n        channel:\n          $ref: \"#/components/schemas/ChannelTypes\"\n        created:\n          format: date-time\n          type: string\n        device:\n          $ref: \"#/components/schemas/Device\"\n        id:\n          nullable: true\n          type: string\n        lastUpdated:\n          format: date-time\n          type: string\n        options:\n          format: int32\n          type: integer\n        userId:\n          nullable: true\n          type: string\n      type: object\n    DeleteRangeInfo:\n      additionalProperties: false\n      properties:\n        from:\n          format: date-time\n          type: string\n        to:\n          format: date-time\n          type: string\n      type: object\n    Device:\n      additionalProperties: false\n      properties:\n        appVersion:\n          nullable: true\n          type: string\n        deviceId:\n          nullable: true\n          type: string\n        name:\n          nullable: true\n          type: string\n        osVersion:\n          nullable: true\n          type: string\n        ringtone:\n          nullable: true\n          type: string\n        ringtoneDisabled:\n          type: boolean\n        type:\n          $ref: \"#/components/schemas/DeviceType\"\n      type: object\n    DeviceType:\n      enum:\n        - 0\n        - 1\n        - 2\n      format: int32\n      type: integer\n    DutyAuditReportFileInfo:\n      additionalProperties: false\n      type: object\n    DutySummaryInfo:\n      additionalProperties: false\n      properties:\n        dutyEnd:\n          format: date-time\n          nullable: true\n          type: string\n        dutyId:\n          nullable: true\n          type: string\n        dutyStart:\n          format: date-time\n          nullable: true\n          type: string\n      type: object\n    Encoding:\n      enum:\n        - 0\n        - 1\n      format: int32\n      type: integer\n    ErrorResponseContent:\n      additionalProperties: false\n      properties:\n        code:\n          format: int32\n          type: integer\n        details:\n          nullable: true\n          type: string\n        errors:\n          items:\n            $ref: \"#/components/schemas/ErrorResponseContentBase\"\n          nullable: true\n          type: array\n        message:\n          nullable: true\n          type: string\n        requestId:\n          nullable: true\n          type: string\n      type: object\n    ErrorResponseContentBase:\n      additionalProperties: false\n      properties:\n        details:\n          nullable: true\n          type: string\n        message:\n          nullable: true\n          type: string\n      type: object\n    EventFilter:\n      additionalProperties: false\n      properties:\n        continuationToken:\n          $ref: \"#/components/schemas/PagedResultsPublicContinuationToken\"\n        eventStatusCode:\n          $ref: \"#/components/schemas/EventStatusCodes\"\n        maxCreationDate:\n          format: date-time\n          nullable: true\n          type: string\n        minCreationDate:\n          format: date-time\n          nullable: true\n          type: string\n        modifiedSince:\n          format: date-time\n          nullable: true\n          type: string\n        teamId:\n          nullable: true\n          type: string\n        textToSearch:\n          nullable: true\n          type: string\n      type: object\n    EventParameterInfo:\n      additionalProperties: false\n      properties:\n        name:\n          nullable: true\n          type: string\n        order:\n          format: int32\n          type: integer\n        type:\n          $ref: \"#/components/schemas/EventParameterTypes\"\n        value:\n          nullable: true\n          type: string\n      type: object\n    EventParameterTypes:\n      enum:\n        - 0\n        - 1\n        - 2\n        - 3\n        - 4\n        - 5\n        - 6\n        - 7\n        - 8\n        - 9\n        - 10\n        - 11\n        - 12\n        - 13\n        - 14\n        - 15\n        - 16\n        - 17\n        - 100\n      format: int32\n      type: integer\n    EventSeverities:\n      enum:\n        - 0\n        - 1\n        - 2\n      format: int32\n      type: integer\n    EventSourceEndpointInfo:\n      additionalProperties: false\n      properties:\n        address:\n          nullable: true\n          type: string\n        groupId:\n          nullable: true\n          type: string\n        lastEventRaised:\n          format: date-time\n          nullable: true\n          type: string\n        subscriptionId:\n          nullable: true\n          type: string\n        teamId:\n          nullable: true\n          type: string\n        type:\n          $ref: \"#/components/schemas/EventSourceEndpointTypes\"\n      type: object\n    EventSourceEndpointTypes:\n      enum:\n        - 0\n        - 1\n        - 2\n        - 3\n      format: int32\n      type: integer\n    EventSourceTypes:\n      enum:\n        - 0\n        - 1\n        - 2\n        - 3\n        - 4\n        - 5\n      format: int32\n      type: integer\n    EventStatusCodes:\n      enum:\n        - 0\n        - 1\n        - 2\n        - 3\n        - 4\n        - 5\n        - 6\n        - 1000\n      format: int32\n      type: integer\n    InventoryScriptInfo:\n      additionalProperties: false\n      properties:\n        config:\n          nullable: true\n        data:\n          $ref: \"#/components/schemas/ScriptDescriptionData\"\n        eventPattern:\n          nullable: true\n        scriptId:\n          nullable: true\n          type: string\n        scriptLocalizationDetails:\n          items:\n            $ref: \"#/components/schemas/ScriptLocalizationDetail\"\n          nullable: true\n          type: array\n        scriptName:\n          nullable: true\n          type: string\n        visibility:\n          nullable: true\n          type: string\n      type: object\n    InvitedUserInfo:\n      additionalProperties: false\n      properties:\n        id:\n          nullable: true\n          type: string\n        isInvite:\n          type: boolean\n        mail:\n          nullable: true\n          type: string\n        name:\n          nullable: true\n          type: string\n        roleId:\n          nullable: true\n          type: string\n      type: object\n    KeywordMatchingType:\n      enum:\n        - 0\n        - 1\n      format: int32\n      type: integer\n    OverviewAlert:\n      additionalProperties: false\n      properties:\n        alertDeliveryStatus:\n          $ref: \"#/components/schemas/AlertDeliveryStatusInfo\"\n        annotations:\n          items:\n            $ref: \"#/components/schemas/AlertAnnotationInfo\"\n          nullable: true\n          type: array\n        categoryId:\n          nullable: true\n          type: string\n        eventId:\n          nullable: true\n          type: string\n        flags:\n          format: int32\n          type: integer\n        historyDetailed:\n          $ref: \"#/components/schemas/AlertHistoryInfoDetailed\"\n        id:\n          nullable: true\n          type: string\n        lastModified:\n          format: date-time\n          type: string\n        requiredAcknowledgements:\n          format: int32\n          type: integer\n        status:\n          $ref: \"#/components/schemas/AlertStatusCodes\"\n        subscriptionId:\n          nullable: true\n          type: string\n        teamId:\n          nullable: true\n          type: string\n        text:\n          nullable: true\n          type: string\n        title:\n          nullable: true\n          type: string\n      type: object\n    OverviewAlertPagedResultsPublic:\n      additionalProperties: false\n      properties:\n        continuationToken:\n          $ref: \"#/components/schemas/PagedResultsPublicContinuationToken\"\n        hasMore:\n          readOnly: true\n          type: boolean\n        results:\n          items:\n            $ref: \"#/components/schemas/OverviewAlert\"\n          nullable: true\n          type: array\n      type: object\n    OverviewEvent:\n      additionalProperties: false\n      properties:\n        acknowledgedAlerts:\n          items:\n            type: string\n          nullable: true\n          type: array\n        alertId:\n          nullable: true\n          type: string\n        categoryId:\n          nullable: true\n          type: string\n        closedAlerts:\n          items:\n            type: string\n          nullable: true\n          type: array\n        creationTime:\n          format: date-time\n          type: string\n        eventSourceType:\n          $ref: \"#/components/schemas/EventSourceTypes\"\n        eventStatus:\n          $ref: \"#/components/schemas/EventStatusCodes\"\n        id:\n          nullable: true\n          type: string\n        lastModified:\n          format: date-time\n          type: string\n        severity:\n          $ref: \"#/components/schemas/EventSeverities\"\n        teamId:\n          nullable: true\n          type: string\n        text:\n          nullable: true\n          type: string\n        title:\n          nullable: true\n          type: string\n      type: object\n    OverviewEventPagedResultsPublic:\n      additionalProperties: false\n      properties:\n        continuationToken:\n          $ref: \"#/components/schemas/PagedResultsPublicContinuationToken\"\n        hasMore:\n          readOnly: true\n          type: boolean\n        results:\n          items:\n            $ref: \"#/components/schemas/OverviewEvent\"\n          nullable: true\n          type: array\n      type: object\n    PagedResultsPublicContinuationToken:\n      additionalProperties: false\n      properties:\n        nextPartitionKey:\n          nullable: true\n          type: string\n        nextRowKey:\n          nullable: true\n          type: string\n        nextTableName:\n          nullable: true\n          type: string\n      type: object\n    PersistentNotificationModes:\n      enum:\n        - 0\n        - 1\n      format: int32\n      type: integer\n    PrepaidBalanceInfo:\n      additionalProperties: false\n      properties:\n        balance:\n          format: int32\n          type: integer\n        latestTopUp:\n          format: date-time\n          nullable: true\n          type: string\n        pendingTransaction:\n          type: boolean\n      type: object\n    PrepaidSettingsInfo:\n      additionalProperties: false\n      properties:\n        topUpAmount:\n          format: int32\n          type: integer\n        topUpEnabled:\n          type: boolean\n        topUpLimit:\n          format: int32\n          type: integer\n      type: object\n    PrepaidTransactionInfo:\n      additionalProperties: false\n      properties:\n        autoTopUpId:\n          nullable: true\n          type: string\n        created:\n          format: date-time\n          type: string\n        createdBy:\n          nullable: true\n          type: string\n        credits:\n          format: int32\n          type: integer\n        currency:\n          nullable: true\n          type: string\n        modified:\n          format: date-time\n          type: string\n        packageCode:\n          nullable: true\n          type: string\n        status:\n          nullable: true\n          type: string\n        statusCode:\n          format: int32\n          type: integer\n        subscriptionId:\n          nullable: true\n          type: string\n        transactionId:\n          nullable: true\n          type: string\n      type: object\n    RaiseAlertInfo:\n      additionalProperties: false\n      properties:\n        attachments:\n          items:\n            $ref: \"#/components/schemas/AlertAttachment\"\n          nullable: true\n          type: array\n        category:\n          nullable: true\n          type: string\n        externalId:\n          nullable: true\n          type: string\n        flags:\n          format: int32\n          type: integer\n        parameters:\n          items:\n            $ref: \"#/components/schemas/EventParameterInfo\"\n          nullable: true\n          type: array\n        severity:\n          $ref: \"#/components/schemas/AlertSeverities\"\n        text:\n          nullable: true\n          type: string\n        title:\n          nullable: true\n          type: string\n      type: object\n    ScheduleInfo:\n      additionalProperties: false\n      properties:\n        end:\n          format: date-time\n          type: string\n        id:\n          nullable: true\n          type: string\n        options:\n          format: int32\n          type: integer\n        start:\n          format: date-time\n          type: string\n        userId:\n          nullable: true\n          type: string\n      type: object\n    ScriptDescriptionData:\n      additionalProperties: false\n      properties:\n        description:\n          nullable: true\n          type: string\n        name:\n          nullable: true\n          type: string\n        scriptType:\n          nullable: true\n          type: string\n        shortDescription:\n          nullable: true\n          type: string\n      type: object\n    ScriptInstanceCustomUserData:\n      additionalProperties: false\n      properties:\n        customScriptDescription:\n          nullable: true\n          type: string\n        customScriptName:\n          nullable: true\n          type: string\n        instanceId:\n          nullable: true\n          type: string\n        scriptId:\n          nullable: true\n          type: string\n      type: object\n    ScriptInstanceDetails:\n      additionalProperties: false\n      properties:\n        config:\n          nullable: true\n        customScriptDescription:\n          nullable: true\n          type: string\n        customScriptName:\n          nullable: true\n          type: string\n        enabled:\n          type: boolean\n        eventPattern:\n          nullable: true\n        instanceId:\n          nullable: true\n          type: string\n        lastModified:\n          format: date-time\n          nullable: true\n          type: string\n        runtimeInformation:\n          $ref: \"#/components/schemas/ScriptInstanceInfoRuntimeInformationModel\"\n        scriptId:\n          nullable: true\n          type: string\n        scriptName:\n          nullable: true\n          type: string\n        subscriptionId:\n          nullable: true\n          type: string\n        teamId:\n          nullable: true\n          type: string\n      type: object\n    ScriptInstanceInfoRuntimeInformationModel:\n      additionalProperties: false\n      properties:\n        status:\n          $ref: \"#/components/schemas/ScriptInstanceInfoRuntimeStatus\"\n        statusMessage:\n          nullable: true\n          type: string\n      type: object\n    ScriptInstanceInfoRuntimeStatus:\n      enum:\n        - 0\n        - 1\n        - 2\n        - 3\n        - -1\n      format: int32\n      type: integer\n    ScriptLocalizationDetail:\n      additionalProperties: false\n      properties:\n        configMetadata:\n          nullable: true\n        data:\n          $ref: \"#/components/schemas/ScriptDescriptionData\"\n        language:\n          nullable: true\n          type: string\n      type: object\n    StatusChangeScope:\n      enum:\n        - 0\n        - 1\n        - 2\n      format: int32\n      type: integer\n    StringItemsWrapper:\n      additionalProperties: false\n      properties:\n        items:\n          items:\n            type: string\n          nullable: true\n          type: array\n      type: object\n    SubscriptionFeature:\n      additionalProperties: false\n      properties:\n        name:\n          nullable: true\n          type: string\n        type:\n          format: int32\n          type: integer\n        value:\n          nullable: true\n          type: string\n      type: object\n    SubscriptionInfo:\n      additionalProperties: false\n      properties:\n        branchId:\n          nullable: true\n          type: string\n        country:\n          nullable: true\n          type: string\n        currency:\n          nullable: true\n          type: string\n        externalAccountId:\n          nullable: true\n          type: string\n        id:\n          nullable: true\n          type: string\n        name:\n          nullable: true\n          type: string\n        nextBilling:\n          format: date-time\n          nullable: true\n          type: string\n        ownerId:\n          nullable: true\n          type: string\n        planCode:\n          nullable: true\n          type: string\n        planState:\n          format: int32\n          type: integer\n        referralEnabled:\n          type: boolean\n        status:\n          format: int32\n          type: integer\n      type: object\n    SubscriptionProfile:\n      additionalProperties: false\n      properties:\n        name:\n          nullable: true\n          type: string\n      type: object\n    TeamCategoryOptOutModes:\n      enum:\n        - 0\n        - 1\n        - 2\n      format: int32\n      type: integer\n    TeamDutySummaryInfo:\n      additionalProperties: false\n      properties:\n        dutyAssistEnabled:\n          type: boolean\n        dutySummaries:\n          items:\n            $ref: \"#/components/schemas/DutySummaryInfo\"\n          nullable: true\n          type: array\n      type: object\n    TeamInfo:\n      additionalProperties: false\n      properties:\n        id:\n          nullable: true\n          type: string\n        memberIds:\n          items:\n            type: string\n          nullable: true\n          type: array\n        name:\n          nullable: true\n          type: string\n        subscriptionId:\n          nullable: true\n          type: string\n        timezone:\n          nullable: true\n          type: string\n      type: object\n    TeamProfile:\n      additionalProperties: false\n      properties:\n        name:\n          nullable: true\n          type: string\n      type: object\n    TeamSetupProgress:\n      additionalProperties: false\n      properties:\n        completedSteps:\n          items:\n            type: string\n          nullable: true\n          type: array\n        teamId:\n          nullable: true\n          type: string\n        timestamp:\n          format: date-time\n          type: string\n      type: object\n    UpdatePasswordInfo:\n      additionalProperties: false\n      properties:\n        currentPassword:\n          nullable: true\n          type: string\n        newPassword:\n          nullable: true\n          type: string\n      type: object\n    UserDeliveryStatusInfo:\n      additionalProperties: false\n      properties:\n        statusCode:\n          $ref: \"#/components/schemas/UserDeliveryStatusInfoCodes\"\n        userId:\n          nullable: true\n          type: string\n      type: object\n    UserDeliveryStatusInfoCodes:\n      enum:\n        - 0\n        - 1\n        - 2\n        - 4\n        - 6\n        - 8\n        - 24\n        - 26\n        - 30\n        - 31\n        - 32\n      format: int32\n      type: integer\n    UserDutyInfo:\n      additionalProperties: false\n      properties:\n        lastStatusChange:\n          format: date-time\n          nullable: true\n          type: string\n        onDuty:\n          type: boolean\n        onManagerDuty:\n          type: boolean\n        overdue:\n          type: boolean\n      type: object\n    UserImage:\n      additionalProperties: false\n      properties:\n        content:\n          format: byte\n          nullable: true\n          type: string\n        contentDisposition:\n          nullable: true\n          type: string\n        contentEncoding:\n          nullable: true\n          type: string\n        contentType:\n          nullable: true\n          type: string\n        lastModified:\n          format: date-time\n          nullable: true\n          type: string\n        name:\n          nullable: true\n          type: string\n      type: object\n    UserInfo:\n      additionalProperties: false\n      properties:\n        colorIndex:\n          format: int32\n          type: integer\n        contactAddresses:\n          items:\n            $ref: \"#/components/schemas/ContactAddressInfo\"\n          nullable: true\n          type: array\n        dutyInfo:\n          $ref: \"#/components/schemas/UserDutyInfo\"\n        id:\n          nullable: true\n          type: string\n        isDeactivated:\n          type: boolean\n        isInvite:\n          type: boolean\n        mail:\n          nullable: true\n          type: string\n        name:\n          nullable: true\n          type: string\n        roleId:\n          nullable: true\n          type: string\n        subscriptionId:\n          nullable: true\n          type: string\n        timeZone:\n          nullable: true\n          type: string\n        userImageLastModified:\n          format: date-time\n          nullable: true\n          type: string\n      type: object\n    UserInvitationInfo:\n      additionalProperties: false\n      properties:\n        inviterId:\n          nullable: true\n          type: string\n        userMail:\n          nullable: true\n          type: string\n      type: object\n    UserInvitationResult:\n      additionalProperties: false\n      properties:\n        errorCode:\n          format: int32\n          nullable: true\n          type: integer\n        errorMessage:\n          nullable: true\n          type: string\n        invitedUser:\n          $ref: \"#/components/schemas/InvitedUserInfo\"\n        success:\n          type: boolean\n      type: object\n    UserInvite:\n      additionalProperties: false\n      properties:\n        email:\n          nullable: true\n          type: string\n        roleId:\n          nullable: true\n          type: string\n      type: object\n    UserLicenseInfo:\n      additionalProperties: false\n      properties:\n        currentUsers:\n          format: int32\n          type: integer\n        isFree:\n          type: boolean\n        isTrial:\n          type: boolean\n        licensedUsers:\n          format: int32\n          type: integer\n        planCode:\n          nullable: true\n          type: string\n      type: object\n    UserMembership:\n      additionalProperties: false\n      properties:\n        isValid:\n          readOnly: true\n          type: boolean\n        roleId:\n          nullable: true\n          type: string\n        teamId:\n          nullable: true\n          type: string\n      type: object\n    UserProfile:\n      additionalProperties: false\n      properties:\n        name:\n          nullable: true\n          type: string\n      type: object\n    UserSetupProgress:\n      additionalProperties: false\n      properties:\n        completedSteps:\n          items:\n            type: string\n          nullable: true\n          type: array\n        timestamp:\n          format: date-time\n          type: string\n        userId:\n          nullable: true\n          type: string\n      type: object\n    UsersInvitation:\n      additionalProperties: false\n      properties:\n        inviterId:\n          nullable: true\n          type: string\n        invites:\n          items:\n            $ref: \"#/components/schemas/UserInvite\"\n          nullable: true\n          type: array\n      type: object\n    WebhookBaseInfo:\n      additionalProperties: false\n      properties:\n        externalAddress:\n          nullable: true\n          type: string\n        name:\n          nullable: true\n          type: string\n        teamId:\n          nullable: true\n          type: string\n      type: object\n    WebhookInfo:\n      additionalProperties: false\n      properties:\n        enabled:\n          type: boolean\n        externalAddress:\n          nullable: true\n          type: string\n        id:\n          nullable: true\n          type: string\n        name:\n          nullable: true\n          type: string\n        subscriptionId:\n          nullable: true\n          type: string\n        teamId:\n          nullable: true\n          type: string\n      type: object\n  securitySchemes:\n    oauth2:\n      flows:\n        authorizationCode:\n          authorizationUrl: https://connect.signl4.com/identity/connect/authorize\n          refreshUrl: https://connect.signl4.com/identity/connect/token\n          scopes:\n            offline_access: Access write operations\n            public_api_read: Access write operations\n            public_api_write: Access read operations\n          tokenUrl: https://connect.signl4.com/identity/connect/token\n      type: oauth2\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@57168637e057c3e5ebe933717019f6f25bc1886e/-/blob/APIs/signl4.com/v1/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/57168637e057c3e5ebe933717019f6f25bc1886e/APIs/signl4.com/v1/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: at APIs/signl4.com/v1/openapi.yaml:6040:3: duplicate path: \"/teams/{teamId}/schedules/{scheduleId}\""
}