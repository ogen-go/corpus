{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/amazonaws.com/snow-device-management/2021-08-04/openapi.yaml",
			"byteSize": 62441,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2021-08-04'\n  x-release: v4\n  title: AWS Snow Device Management\n  description: Amazon Web Services Snow Device Management documentation.\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: snow-device-management\n  x-aws-signingName: snow-device-management\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/snow-device-management-2021-08-04.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/snow-device-management/'\nservers:\n  - url: 'http://snow-device-management.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AWS Snow Device Management multi-region endpoint\n  - url: 'https://snow-device-management.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AWS Snow Device Management multi-region endpoint\n  - url: 'http://snow-device-management.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS Snow Device Management endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://snow-device-management.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS Snow Device Management endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  '/task/{taskId}/cancel':\n    post:\n      operationId: CancelTask\n      description: \u003cp\u003eSends a cancel request for a specified task. You can cancel a task only if it's still in a \u003ccode\u003eQUEUED\u003c/code\u003e state. Tasks that are already running can't be cancelled.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eA task might still run if it's processed from the queue before the \u003ccode\u003eCancelTask\u003c/code\u003e operation changes the task's state.\u003c/p\u003e \u003c/note\u003e\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CancelTaskOutput'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '484':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n      parameters:\n        - name: taskId\n          in: path\n          required: true\n          description: The ID of the task that you are attempting to cancel. You can retrieve a task ID by using the \u003ccode\u003eListTasks\u003c/code\u003e operation.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /task:\n    post:\n      operationId: CreateTask\n      description: 'Instructs one or more devices to start a task, such as unlocking or rebooting.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateTaskOutput'\n        '480':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '481':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '485':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - command\n                - targets\n              properties:\n                clientToken:\n                  description: A token ensuring that the action is called only once with the specified details.\n                  type: string\n                  pattern: '[!-~]+'\n                  minLength: 1\n                  maxLength: 64\n                command:\n                  description: The command given to the device to execute.\n                  type: object\n                  properties:\n                    reboot:\n                      allOf:\n                        - $ref: '#/components/schemas/Reboot'\n                        - description: Reboots the device.\n                    unlock:\n                      allOf:\n                        - $ref: '#/components/schemas/Unlock'\n                        - description: Unlocks the device.\n                description:\n                  description: A description of the task and its targets.\n                  type: string\n                  pattern: '[A-Za-z0-9 _.,!#]*'\n                  minLength: 1\n                  maxLength: 128\n                tags:\n                  description: 'Optional metadata that you assign to a resource. You can use tags to categorize a resource in different ways, such as by purpose, owner, or environment. '\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/String'\n                targets:\n                  description: A list of managed device IDs.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/String'\n                  minItems: 1\n                  maxItems: 10\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/managed-device/{managedDeviceId}/describe':\n    post:\n      operationId: DescribeDevice\n      description: 'Checks device-specific information, such as the device type, software version, IP addresses, and lock status.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeDeviceOutput'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '484':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n      parameters:\n        - name: managedDeviceId\n          in: path\n          required: true\n          description: The ID of the device that you are checking the information of.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/managed-device/{managedDeviceId}/resources/ec2/describe':\n    post:\n      operationId: DescribeDeviceEc2Instances\n      description: 'Checks the current state of the Amazon EC2 instances. The output is similar to \u003ccode\u003edescribeDevice\u003c/code\u003e, but the results are sourced from the device cache in the Amazon Web Services Cloud and include a subset of the available fields. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeDeviceEc2Output'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '484':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n      parameters:\n        - name: managedDeviceId\n          in: path\n          required: true\n          description: The ID of the managed device.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - instanceIds\n              properties:\n                instanceIds:\n                  description: A list of instance IDs associated with the managed device.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/String'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/task/{taskId}/execution/{managedDeviceId}':\n    post:\n      operationId: DescribeExecution\n      description: Checks the status of a remote task running on one or more target devices.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeExecutionOutput'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '484':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n      parameters:\n        - name: managedDeviceId\n          in: path\n          required: true\n          description: The ID of the managed device.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: taskId\n          in: path\n          required: true\n          description: The ID of the task that the action is describing.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/task/{taskId}':\n    post:\n      operationId: DescribeTask\n      description: 'Checks the metadata for a given task on a device. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeTaskOutput'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '484':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n      parameters:\n        - name: taskId\n          in: path\n          required: true\n          description: The ID of the task to be described.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/managed-device/{managedDeviceId}/resources':\n    get:\n      operationId: ListDeviceResources\n      description: 'Returns a list of the Amazon Web Services resources available for a device. Currently, Amazon EC2 instances are the only supported resource type.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDeviceResourcesOutput'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '484':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n      parameters:\n        - name: managedDeviceId\n          in: path\n          required: true\n          description: The ID of the managed device that you are listing the resources of.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of resources per page.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n        - name: nextToken\n          in: query\n          required: false\n          description: A pagination token to continue to the next page of results.\n          schema:\n            type: string\n            pattern: '[a-zA-Z0-9+/=]*'\n            minLength: 1\n            maxLength: 1024\n        - name: type\n          in: query\n          required: false\n          description: A structure used to filter the results by type of resource.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 50\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /managed-devices:\n    get:\n      operationId: ListDevices\n      description: Returns a list of all devices on your Amazon Web Services account that have Amazon Web Services Snow Device Management enabled in the Amazon Web Services Region where the command is run.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDevicesOutput'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n      parameters:\n        - name: jobId\n          in: query\n          required: false\n          description: The ID of the job used to order the device.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of devices to list per page.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n        - name: nextToken\n          in: query\n          required: false\n          description: A pagination token to continue to the next page of results.\n          schema:\n            type: string\n            pattern: '[a-zA-Z0-9+/=]*'\n            minLength: 1\n            maxLength: 1024\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /executions#taskId:\n    get:\n      operationId: ListExecutions\n      description: Returns the status of tasks for one or more target devices.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListExecutionsOutput'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '484':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n      parameters:\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of tasks to list per page.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n        - name: nextToken\n          in: query\n          required: false\n          description: A pagination token to continue to the next page of tasks.\n          schema:\n            type: string\n            pattern: '[a-zA-Z0-9+/=]*'\n            minLength: 1\n            maxLength: 1024\n        - name: state\n          in: query\n          required: false\n          description: A structure used to filter the tasks by their current state.\n          schema:\n            type: string\n            enum:\n              - QUEUED\n              - IN_PROGRESS\n              - CANCELED\n              - FAILED\n              - SUCCEEDED\n              - REJECTED\n              - TIMED_OUT\n        - name: taskId\n          in: query\n          required: true\n          description: The ID of the task.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{resourceArn}':\n    get:\n      operationId: ListTagsForResource\n      description: Returns a list of tags for a managed device or task.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsForResourceOutput'\n        '480':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the device or task.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: TagResource\n      description: Adds or replaces tags on a device or task.\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the device or task.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - tags\n              properties:\n                tags:\n                  description: 'Optional metadata that you assign to a resource. You can use tags to categorize a resource in different ways, such as by purpose, owner, or environment.'\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/String'\n  /tasks:\n    get:\n      operationId: ListTasks\n      description: Returns a list of tasks that can be filtered by state.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTasksOutput'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n      parameters:\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of tasks per page.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n        - name: nextToken\n          in: query\n          required: false\n          description: A pagination token to continue to the next page of tasks.\n          schema:\n            type: string\n            pattern: '[a-zA-Z0-9+/=]*'\n            minLength: 1\n            maxLength: 1024\n        - name: state\n          in: query\n          required: false\n          description: A structure used to filter the list of tasks.\n          schema:\n            type: string\n            enum:\n              - IN_PROGRESS\n              - CANCELED\n              - COMPLETED\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{resourceArn}#tagKeys':\n    delete:\n      operationId: UntagResource\n      description: Removes a tag from a device or task.\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the device or task.\n          schema:\n            type: string\n        - name: tagKeys\n          in: query\n          required: true\n          description: 'Optional metadata that you assign to a resource. You can use tags to categorize a resource in different ways, such as by purpose, owner, or environment.'\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/String'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    CancelTaskOutput:\n      type: object\n      properties:\n        taskId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ID of the task that you are attempting to cancel.\n    ThrottlingException: {}\n    InternalServerException: {}\n    ResourceNotFoundException: {}\n    ValidationException: {}\n    AccessDeniedException: {}\n    CreateTaskOutput:\n      type: object\n      properties:\n        taskArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the task that you created.\n        taskId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ID of the task that you created.\n    Reboot:\n      type: object\n      properties: {}\n      description: A structure used to reboot the device.\n    Unlock:\n      type: object\n      properties: {}\n      description: A structure used to unlock a device.\n    String:\n      type: string\n    ServiceQuotaExceededException: {}\n    DescribeDeviceOutput:\n      type: object\n      properties:\n        associatedWithJob:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ID of the job used when ordering the device.\n        deviceCapacities:\n          allOf:\n            - $ref: '#/components/schemas/CapacityList'\n            - description: 'The hardware specifications of the device. '\n        deviceState:\n          allOf:\n            - $ref: '#/components/schemas/UnlockState'\n            - description: The current state of the device.\n        deviceType:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The type of Amazon Web Services Snow Family device.\n        lastReachedOutAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: When the device last contacted the Amazon Web Services Cloud. Indicates that the device is online.\n        lastUpdatedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: When the device last pushed an update to the Amazon Web Services Cloud. Indicates when the device cache was refreshed.\n        managedDeviceArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the device.\n        managedDeviceId:\n          allOf:\n            - $ref: '#/components/schemas/ManagedDeviceId'\n            - description: The ID of the device that you checked the information for.\n        physicalNetworkInterfaces:\n          allOf:\n            - $ref: '#/components/schemas/PhysicalNetworkInterfaceList'\n            - description: The network interfaces available on the device.\n        software:\n          allOf:\n            - $ref: '#/components/schemas/SoftwareInformation'\n            - description: The software installed on the device.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: 'Optional metadata that you assign to a resource. You can use tags to categorize a resource in different ways, such as by purpose, owner, or environment. '\n    DescribeDeviceEc2Output:\n      type: object\n      properties:\n        instances:\n          allOf:\n            - $ref: '#/components/schemas/InstanceSummaryList'\n            - description: 'A list of structures containing information about each instance. '\n    DescribeExecutionOutput:\n      type: object\n      properties:\n        executionId:\n          allOf:\n            - $ref: '#/components/schemas/ExecutionId'\n            - description: The ID of the execution.\n        lastUpdatedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: When the status of the execution was last updated.\n        managedDeviceId:\n          allOf:\n            - $ref: '#/components/schemas/ManagedDeviceId'\n            - description: The ID of the managed device that the task is being executed on.\n        startedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: When the execution began.\n        state:\n          allOf:\n            - $ref: '#/components/schemas/ExecutionState'\n            - description: The current state of the execution.\n        taskId:\n          allOf:\n            - $ref: '#/components/schemas/TaskId'\n            - description: The ID of the task being executed on the device.\n    DescribeTaskOutput:\n      type: object\n      properties:\n        completedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: When the task was completed.\n        createdAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: When the \u003ccode\u003eCreateTask\u003c/code\u003e operation was called.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/TaskDescriptionString'\n            - description: The description provided of the task and managed devices.\n        lastUpdatedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: When the state of the task was last updated.\n        state:\n          allOf:\n            - $ref: '#/components/schemas/TaskState'\n            - description: The current state of the task.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: 'Optional metadata that you assign to a resource. You can use tags to categorize a resource in different ways, such as by purpose, owner, or environment.'\n        targets:\n          allOf:\n            - $ref: '#/components/schemas/TargetList'\n            - description: The managed devices that the task was sent to.\n        taskArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the task.\n        taskId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ID of the task.\n    ListDeviceResourcesOutput:\n      type: object\n      properties:\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: A pagination token to continue to the next page of results.\n        resources:\n          allOf:\n            - $ref: '#/components/schemas/ResourceSummaryList'\n            - description: 'A structure defining the resource''s type, Amazon Resource Name (ARN), and ID.'\n    ListDevicesOutput:\n      type: object\n      properties:\n        devices:\n          allOf:\n            - $ref: '#/components/schemas/DeviceSummaryList'\n            - description: A list of device structures that contain information about the device.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: A pagination token to continue to the next page of devices.\n    ListExecutionsOutput:\n      type: object\n      properties:\n        executions:\n          allOf:\n            - $ref: '#/components/schemas/ExecutionSummaryList'\n            - description: 'A list of executions. Each execution contains the task ID, the device that the task is executing on, the execution ID, and the status of the execution.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: A pagination token to continue to the next page of executions.\n    ListTagsForResourceOutput:\n      type: object\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The list of tags for the device or task.\n    ListTasksOutput:\n      type: object\n      properties:\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: A pagination token to continue to the next page of tasks.\n        tasks:\n          allOf:\n            - $ref: '#/components/schemas/TaskSummaryList'\n            - description: A list of task structures containing details about each task.\n    AttachmentStatus:\n      type: string\n      enum:\n        - ATTACHING\n        - ATTACHED\n        - DETACHING\n        - DETACHED\n    Boolean:\n      type: boolean\n    TaskId:\n      type: string\n      minLength: 1\n      maxLength: 64\n    CancelTaskInput:\n      type: object\n      title: CancelTaskInput\n      properties: {}\n    Long:\n      type: integer\n    CapacityNameString:\n      type: string\n      minLength: 0\n      maxLength: 100\n    CapacityUnitString:\n      type: string\n      minLength: 0\n      maxLength: 20\n    Capacity:\n      type: object\n      properties:\n        available:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: The amount of capacity available for use on the device.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/CapacityNameString'\n            - description: 'The name of the type of capacity, such as memory.'\n        total:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: The total capacity on the device.\n        unit:\n          allOf:\n            - $ref: '#/components/schemas/CapacityUnitString'\n            - description: The unit of measure for the type of capacity.\n        used:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: The amount of capacity used on the device.\n      description: 'The physical capacity of the Amazon Web Services Snow Family device. '\n    CapacityList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Capacity'\n      minItems: 0\n      maxItems: 100\n    Command:\n      type: object\n      properties:\n        reboot:\n          allOf:\n            - $ref: '#/components/schemas/Reboot'\n            - description: Reboots the device.\n        unlock:\n          allOf:\n            - $ref: '#/components/schemas/Unlock'\n            - description: Unlocks the device.\n      description: The command given to the device to execute.\n    Integer:\n      type: integer\n    CpuOptions:\n      type: object\n      properties:\n        coreCount:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The number of cores that the CPU can use.\n        threadsPerCore:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The number of threads per core in the CPU.\n      description: The options for how a device's CPU is configured.\n    IdempotencyToken:\n      type: string\n      pattern: '[!-~]+'\n      minLength: 1\n      maxLength: 64\n    TaskDescriptionString:\n      type: string\n      pattern: '[A-Za-z0-9 _.,!#]*'\n      minLength: 1\n      maxLength: 128\n    TagMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/String'\n    TargetList:\n      type: array\n      items:\n        $ref: '#/components/schemas/String'\n      minItems: 1\n      maxItems: 10\n    CreateTaskInput:\n      type: object\n      required:\n        - command\n        - targets\n      title: CreateTaskInput\n      properties:\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/IdempotencyToken'\n            - description: A token ensuring that the action is called only once with the specified details.\n        command:\n          allOf:\n            - $ref: '#/components/schemas/Command'\n            - description: The task to be performed. Only one task is executed on a device at a time.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/TaskDescriptionString'\n            - description: A description of the task and its targets.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: 'Optional metadata that you assign to a resource. You can use tags to categorize a resource in different ways, such as by purpose, owner, or environment. '\n        targets:\n          allOf:\n            - $ref: '#/components/schemas/TargetList'\n            - description: A list of managed device IDs.\n    InstanceIdsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/String'\n    ManagedDeviceId:\n      type: string\n      minLength: 1\n      maxLength: 64\n    DescribeDeviceEc2Input:\n      type: object\n      required:\n        - instanceIds\n      title: DescribeDeviceEc2Input\n      properties:\n        instanceIds:\n          allOf:\n            - $ref: '#/components/schemas/InstanceIdsList'\n            - description: A list of instance IDs associated with the managed device.\n    InstanceSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/InstanceSummary'\n    DescribeDeviceInput:\n      type: object\n      title: DescribeDeviceInput\n      properties: {}\n    UnlockState:\n      type: string\n      enum:\n        - UNLOCKED\n        - LOCKED\n        - UNLOCKING\n    Timestamp:\n      type: string\n      format: date-time\n    PhysicalNetworkInterfaceList:\n      type: array\n      items:\n        $ref: '#/components/schemas/PhysicalNetworkInterface'\n    SoftwareInformation:\n      type: object\n      properties:\n        installState:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The state of the software that is installed or that is being installed on the device.\n        installedVersion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The version of the software currently installed on the device.\n        installingVersion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The version of the software being installed on the device.\n      description: Information about the software on the device.\n    DescribeExecutionInput:\n      type: object\n      title: DescribeExecutionInput\n      properties: {}\n    ExecutionId:\n      type: string\n      minLength: 1\n      maxLength: 64\n    ExecutionState:\n      type: string\n      enum:\n        - QUEUED\n        - IN_PROGRESS\n        - CANCELED\n        - FAILED\n        - SUCCEEDED\n        - REJECTED\n        - TIMED_OUT\n    DescribeTaskInput:\n      type: object\n      title: DescribeTaskInput\n      properties: {}\n    TaskState:\n      type: string\n      enum:\n        - IN_PROGRESS\n        - CANCELED\n        - COMPLETED\n    DeviceSummary:\n      type: object\n      properties:\n        associatedWithJob:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ID of the job used to order the device.\n        managedDeviceArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the device.\n        managedDeviceId:\n          allOf:\n            - $ref: '#/components/schemas/ManagedDeviceId'\n            - description: The ID of the device.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: 'Optional metadata that you assign to a resource. You can use tags to categorize a resource in different ways, such as by purpose, owner, or environment.'\n      description: Identifying information about the device.\n    DeviceSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/DeviceSummary'\n    EbsInstanceBlockDevice:\n      type: object\n      properties:\n        attachTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: When the attachment was initiated.\n        deleteOnTermination:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: A value that indicates whether the volume is deleted on instance termination.\n        status:\n          allOf:\n            - $ref: '#/components/schemas/AttachmentStatus'\n            - description: The attachment state.\n        volumeId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ID of the Amazon EBS volume.\n      description: Describes a parameter used to set up an Amazon Elastic Block Store (Amazon EBS) volume in a block device mapping.\n    ExecutionSummary:\n      type: object\n      properties:\n        executionId:\n          allOf:\n            - $ref: '#/components/schemas/ExecutionId'\n            - description: The ID of the execution.\n        managedDeviceId:\n          allOf:\n            - $ref: '#/components/schemas/ManagedDeviceId'\n            - description: The ID of the managed device that the task is being executed on.\n        state:\n          allOf:\n            - $ref: '#/components/schemas/ExecutionState'\n            - description: The state of the execution.\n        taskId:\n          allOf:\n            - $ref: '#/components/schemas/TaskId'\n            - description: The ID of the task.\n      description: The summary of a task execution on a specified device.\n    ExecutionSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ExecutionSummary'\n    InstanceBlockDeviceMappingList:\n      type: array\n      items:\n        $ref: '#/components/schemas/InstanceBlockDeviceMapping'\n    SecurityGroupIdentifierList:\n      type: array\n      items:\n        $ref: '#/components/schemas/SecurityGroupIdentifier'\n    InstanceState:\n      type: object\n      properties:\n        code:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: '\u003cp\u003eThe state of the instance as a 16-bit unsigned integer. \u003c/p\u003e \u003cp\u003eThe high byte is all of the bits between 2^8 and (2^16)-1, which equals decimal values between 256 and 65,535. These numerical values are used for internal purposes and should be ignored. \u003c/p\u003e \u003cp\u003eThe low byte is all of the bits between 2^0 and (2^8)-1, which equals decimal values between 0 and 255. \u003c/p\u003e \u003cp\u003eThe valid values for the instance state code are all in the range of the low byte. These values are: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e0\u003c/code\u003e : \u003ccode\u003epending\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e16\u003c/code\u003e : \u003ccode\u003erunning\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e32\u003c/code\u003e : \u003ccode\u003eshutting-down\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e48\u003c/code\u003e : \u003ccode\u003eterminated\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e64\u003c/code\u003e : \u003ccode\u003estopping\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e80\u003c/code\u003e : \u003ccode\u003estopped\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eYou can ignore the high byte value by zeroing out all of the bits above 2^8 or 256 in decimal. \u003c/p\u003e'\n        name:\n          allOf:\n            - $ref: '#/components/schemas/InstanceStateName'\n            - description: The current state of the instance.\n      description: The description of the current state of an instance.\n    Instance:\n      type: object\n      properties:\n        amiLaunchIndex:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: 'The Amazon Machine Image (AMI) launch index, which you can use to find this instance in the launch group. '\n        blockDeviceMappings:\n          allOf:\n            - $ref: '#/components/schemas/InstanceBlockDeviceMappingList'\n            - description: Any block device mapping entries for the instance.\n        cpuOptions:\n          allOf:\n            - $ref: '#/components/schemas/CpuOptions'\n            - description: The CPU options for the instance.\n        createdAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: When the instance was created.\n        imageId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ID of the AMI used to launch the instance.\n        instanceId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ID of the instance.\n        instanceType:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The instance type.\n        privateIpAddress:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The private IPv4 address assigned to the instance.\n        publicIpAddress:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The public IPv4 address assigned to the instance.\n        rootDeviceName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The device name of the root device volume (for example, \u003ccode\u003e/dev/sda1\u003c/code\u003e). '\n        securityGroups:\n          allOf:\n            - $ref: '#/components/schemas/SecurityGroupIdentifierList'\n            - description: The security groups for the instance.\n        state:\n          $ref: '#/components/schemas/InstanceState'\n        updatedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: When the instance was last updated.\n      description: 'The description of an instance. Currently, Amazon EC2 instances are the only supported instance type.'\n    InstanceBlockDeviceMapping:\n      type: object\n      properties:\n        deviceName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The block device name.\n        ebs:\n          allOf:\n            - $ref: '#/components/schemas/EbsInstanceBlockDevice'\n            - description: 'The parameters used to automatically set up Amazon Elastic Block Store (Amazon EBS) volumes when the instance is launched. '\n      description: The description of a block device mapping.\n    InstanceStateName:\n      type: string\n      enum:\n        - PENDING\n        - RUNNING\n        - SHUTTING_DOWN\n        - TERMINATED\n        - STOPPING\n        - STOPPED\n    InstanceSummary:\n      type: object\n      properties:\n        instance:\n          allOf:\n            - $ref: '#/components/schemas/Instance'\n            - description: A structure containing details about the instance.\n        lastUpdatedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: When the instance summary was last updated.\n      description: The details about the instance.\n    IpAddressAssignment:\n      type: string\n      enum:\n        - DHCP\n        - STATIC\n    JobId:\n      type: string\n      minLength: 1\n      maxLength: 64\n    MaxResults:\n      type: integer\n      minimum: 1\n      maximum: 100\n    NextToken:\n      type: string\n      pattern: '[a-zA-Z0-9+/=]*'\n      minLength: 1\n      maxLength: 1024\n    ListDeviceResourcesInputTypeString:\n      type: string\n      minLength: 1\n      maxLength: 50\n    ListDeviceResourcesInput:\n      type: object\n      title: ListDeviceResourcesInput\n      properties: {}\n    ResourceSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ResourceSummary'\n    ListDevicesInput:\n      type: object\n      title: ListDevicesInput\n      properties: {}\n    ListExecutionsInput:\n      type: object\n      title: ListExecutionsInput\n      properties: {}\n    ListTagsForResourceInput:\n      type: object\n      title: ListTagsForResourceInput\n      properties: {}\n    ListTasksInput:\n      type: object\n      title: ListTasksInput\n      properties: {}\n    TaskSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TaskSummary'\n    PhysicalConnectorType:\n      type: string\n      enum:\n        - RJ45\n        - SFP_PLUS\n        - QSFP\n        - RJ45_2\n        - WIFI\n    PhysicalNetworkInterface:\n      type: object\n      properties:\n        defaultGateway:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The default gateway of the device.\n        ipAddress:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The IP address of the device.\n        ipAddressAssignment:\n          allOf:\n            - $ref: '#/components/schemas/IpAddressAssignment'\n            - description: A value that describes whether the IP address is dynamic or persistent.\n        macAddress:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The MAC address of the device.\n        netmask:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The netmask used to divide the IP address into subnets.\n        physicalConnectorType:\n          allOf:\n            - $ref: '#/components/schemas/PhysicalConnectorType'\n            - description: The physical connector type.\n        physicalNetworkInterfaceId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The physical network interface ID.\n      description: The details about the physical network interface for the device.\n    ResourceSummary:\n      type: object\n      required:\n        - resourceType\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the resource.\n        id:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ID of the resource.\n        resourceType:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The resource type.\n      description: A summary of a resource available on the device.\n    SecurityGroupIdentifier:\n      type: object\n      properties:\n        groupId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The security group ID.\n        groupName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The security group name.\n      description: Information about the device's security group.\n    TagKeys:\n      type: array\n      items:\n        $ref: '#/components/schemas/String'\n    TagResourceInput:\n      type: object\n      required:\n        - tags\n      title: TagResourceInput\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: 'Optional metadata that you assign to a resource. You can use tags to categorize a resource in different ways, such as by purpose, owner, or environment.'\n    TaskSummary:\n      type: object\n      required:\n        - taskId\n      properties:\n        state:\n          allOf:\n            - $ref: '#/components/schemas/TaskState'\n            - description: The state of the task assigned to one or many devices.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: 'Optional metadata that you assign to a resource. You can use tags to categorize a resource in different ways, such as by purpose, owner, or environment.'\n        taskArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the task.\n        taskId:\n          allOf:\n            - $ref: '#/components/schemas/TaskId'\n            - description: The task ID.\n      description: Information about the task assigned to one or many devices.\n    UntagResourceInput:\n      type: object\n      title: UntagResourceInput\n      properties: {}\nsecurity:\n  - hmac: []\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@20502d3674db5fa060375c4cf54d52234b351baf/-/blob/APIs/amazonaws.com/snow-device-management/2021-08-04/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/20502d3674db5fa060375c4cf54d52234b351baf/APIs/amazonaws.com/snow-device-management/2021-08-04/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: at 1:37794: duplicate path: \"/tags/{resourceArn}#tagKeys\""
}