{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/academic-resources/stared-repos"
		},
		"file": {
			"name": "schema-form-core.yaml",
			"size": 0,
			"path": "swagger-ui/test/e2e-cypress/static/documents/features/schema-form-core.yaml",
			"byteSize": 9143,
			"content": "openapi: 3.0.0\ninfo:\n  title: \"Schema in Parameters\"\n  description: |-\n    This document has examples for examining the `schema` within a set of parameters\n    * String Enum (/pet/findByStatus)\n    * Array of Strings (/pet/findByTags)\n    * Array of Boolean (/petOwner/listOfServiceTrainer)\n    * Array of Objects (/petOwners/createWithList)\n    * Array of Enum (/petOwner/findByPreference)\n\n    This document also covers a debounce test for `schema` type `string\n    * String (/petOwner)\n\n    This documents does not cover:\n    * Array of Arrays\n\n    Additional notes\n    * Provides additional coverage and examples not covered in the Multiple Examples Core Document (Test)\n    * Code component reference `JsonSchemaForm`\n    * `pet` and `tag` schemas are reduced from Swagger Petstore\n  version: \"1.0.0\"\npaths:\n  /pet/findByStatus:\n    get:\n      summary: Finds Pets by status\n      description: Multiple status values can be provided with comma separated strings\n      operationId: findPetsByStatus\n      parameters:\n       - name: status\n         in: query\n         description: Status values that need to be considered for filter\n         required: false\n         explode: true\n         schema:\n            type: string\n            enum:\n             - available\n             - pending\n             - sold\n            default: available\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Pet'\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Pet'\n        '400':\n          description: Invalid status value\n      security:\n        - petstore_auth:\n            - 'write:pets'\n            - 'read:pets'\n  /pet/findByTags:\n    get:\n      tags:\n        - pet\n      summary: Finds Pets by tags\n      description: \u003e-\n        Multiple tags can be provided with comma separated strings. Use tag1,\n        tag2, tag3 for testing.\n      operationId: findPetsByTags\n      parameters:\n        - name: tags\n          in: query\n          description: Tags to filter by\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Pet'\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Pet'\n        '400':\n          description: Invalid tag value\n      security:\n        - petstore_auth:\n            - 'write:pets'\n            - 'read:pets'\n  '/petOwner/{petOwnerId}':\n    get:\n      tags:\n        - petOwner\n      summary: Find pet owner by ID\n      description: Returns a single pet owner if ID found, list if no ID provided\n      operationId: getPetOwnerById\n      parameters:\n        - name: petOwnerId\n          in: path\n          description: ID of pet owner to return\n          required: false\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/PetOwner'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PetOwner'\n        '400':\n          description: Invalid ID supplied\n        '404':\n          description: Pet not found\n  /petOwner/listOfServiceTrainer:\n    get:\n      tags:\n        - petOwner\n      summary: List of Service Trainers\n      description: \u003e-\n        Expect boolean, but allow both true and false\n      operationId: listOfServiceTrainer\n      parameters:\n        - name: tags\n          in: query\n          description: Boolean to filter by\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: boolean\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PetOwner'\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PetOwner'\n        '400':\n          description: Invalid tag value\n  /petOwner/findByPreference:\n    get:\n      tags:\n        - petOwner\n      summary: Find by Pet Owner Preferences\n      description: \u003e-\n        Expect enum\n      operationId: findByPreference\n      parameters:\n        - name: tags\n          in: query\n          description: Enum to filter by\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n              - dog\n              - cat\n              - bird\n              - fish\n              - other\n              default: dog\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PetOwner'\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PetOwner'\n        '400':\n          description: Invalid tag value\n          components:\n  /petOwner/createWithList:\n    post:\n      tags: \n        - petOwner\n      summary: Creates list of pet owners with given input array\n      operationId: petOwnerCreateWithList\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/PetOwner'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PetOwner'\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PetOwner'\n        '400':\n          description: Invalid values\n  schemas:\n    Pet:\n      x-swagger-router-model: io.swagger.petstore.model.Pet\n      required:\n        - name\n        - photoUrls\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 10\n        name:\n          type: string\n          example: doggie\n        # remove category property\n        petOwners:\n         type: array\n         items:\n           $ref: '#/components/schemas/PetOwner'\n        photoUrls:\n          type: array\n          xml:\n            wrapped: true\n          items:\n            type: string\n            xml:\n              name: photoUrl\n        tags:\n          type: array\n          xml:\n            wrapped: true\n          items:\n            $ref: '#/components/schemas/Tag'\n            xml:\n              name: tag\n        status:\n          type: string\n          description: pet status in the store\n          enum:\n            - available\n            - pending\n            - sold\n      xml:\n        name: pet\n      type: object\n    # remove ApiResponse\n    PetOwner:\n      type: \"object\"\n      properties:\n        id:\n          type: \"integer\"\n          format: \"int64\"\n          example: 10\n        petId:\n          type: \"integer\"\n          format: \"int64\"\n          example: 201\n        petOwnerFirstName:\n          type: \"string\"\n          example: \"John\"\n        petOwnerLastName:\n          type: \"string\"\n          example: \"Smith\"\n        petOwnerContact:\n          type: \"string\"\n          example: \"john.smith@fakeemail.co\"\n        petOwnerStatus:\n          type: \"integer\"\n          format: \"int32\"\n          description: \"Pet Owner Status\"\n          example: 302\n        petOwnerPreferences:\n          type: \"string\"\n          description: \"Pet Owner Preferred Pet Types\"\n          enum:\n          - \"dog\"\n          - \"cat\"\n          - \"bird\"\n          - \"fish\"\n          - \"other\"\n        petOwnerServiceTrainer:\n          type: \"boolean\"\n          description: \"Pet Onwer is Service Trainer\"\n          default: false\n    Tag:\n      x-swagger-router-model: io.swagger.petstore.model.Tag\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      xml:\n        name: tag\n      type: object\n  requestBodies:\n    Pet:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Pet'\n        application/xml:\n          schema:\n            $ref: '#/components/schemas/Pet'\n      description: Pet object that needs to be added to the store\n",
			"canonicalURL": "/github.com/academic-resources/stared-repos@60fcc9102f3d5186df1d47c404a4d8900e9ffd52/-/blob/swagger-ui/test/e2e-cypress/static/documents/features/schema-form-core.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/academic-resources/stared-repos/blob/60fcc9102f3d5186df1d47c404a4d8900e9ffd52/swagger-ui/test/e2e-cypress/static/documents/features/schema-form-core.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/pet/findByStatus\": get: operation \"findPetsByStatus\": responses: 200: content: application/json: schema: parse schema: items: at swagger-ui/test/e2e-cypress/static/documents/features/schema-form-core.yaml:55:25: $ref: resolve \"#/components/schemas/Pet\": resolve: can't find value for \"components/schemas/Pet\""
}