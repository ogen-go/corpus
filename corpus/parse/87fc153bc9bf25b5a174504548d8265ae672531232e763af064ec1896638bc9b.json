{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/pme123/camundala"
		},
		"file": {
			"name": "openApi.yml",
			"size": 0,
			"path": "examples/demos/openApi.yml",
			"byteSize": 8417,
			"content": "openapi: 3.0.3\ninfo:\n  title: Demos Example Process API\n  version: '1.0'\n  description: |2+\n\n\n    Created at 15/08/2022, 08:48\n\n    ****\n\n\n\n\n    # Changelog\n\n    \u003cdetails\u003e\n    \u003csummary\u003eCHANGELOG.md\u003c/summary\u003e\n    \u003cp\u003e\n\n\n    All notable changes to this project will be documented in this file.\n\n    * Types of Changes (L3):\n      * Added: new features\n      * Changed: changes in existing functionality\n      * Deprecated: soon-to-be-removed features\n      * Removed: now removed features\n      * Fixed: any bug fixes\n      * Security: in case of vulnerabilities\n\n\n    The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\n    and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n    ### Unreleased\n    Initial Version\n\n    \u003c/p\u003e\n    \u003c/details\u003e\n\npaths:\n  /decisiondmn/singleEntryDMN/singleEntry/singleEntryDMN:\n    head:\n      tags:\n      - singleEntryDMN\n      summary: 'DecisionDmn: singleEntryDMN'\n      description: ''\n      operationId: 'DecisionDmn: singleEntryDMN'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Input'\n            examples:\n              singleEntryDMN:\n                value:\n                  letter: A\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                oneOf:\n                - type: integer\n              examples:\n                singleEntryDMN:\n                  value: 1\n  /decisiondmn/collectEntriesDMN/collectEntries/collectEntriesDMN:\n    head:\n      tags:\n      - collectEntriesDMN\n      summary: 'DecisionDmn: collectEntriesDMN'\n      description: ''\n      operationId: 'DecisionDmn: collectEntriesDMN'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Input'\n            examples:\n              collectEntriesDMN:\n                value:\n                  letter: A\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                oneOf:\n                - type: integer\n              examples:\n                collectEntriesDMN:\n                  value:\n                  - 1\n                  - 2\n  /decisiondmn/singleResultDMN/singleResult/singleResultDMN:\n    head:\n      tags:\n      - singleResultDMN\n      summary: 'DecisionDmn: singleResultDMN'\n      description: ''\n      operationId: 'DecisionDmn: singleResultDMN'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Input'\n            examples:\n              singleResultDMN:\n                value:\n                  letter: A\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SingleResult_camundala.examples.demos.DecisionResultTypes.ManyOutResult[]'\n              examples:\n                singleResultDMN:\n                  value:\n                    index: 1\n                    emoji: ðŸ¤©\n  /decisiondmn/resultListDMN/resultList/resultListDMN:\n    head:\n      tags:\n      - resultListDMN\n      summary: 'DecisionDmn: resultListDMN'\n      description: ''\n      operationId: 'DecisionDmn: resultListDMN'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Input'\n            examples:\n              resultListDMN:\n                value:\n                  letter: A\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResultList_camundala.examples.demos.DecisionResultTypes.ManyOutResult[]'\n              examples:\n                resultListDMN:\n                  value:\n                  - index: 1\n                    emoji: ðŸ¤©\n                  - index: 2\n                    emoji: ðŸ˜‚\n  /process/demoProcess/just-for-demo/demoProcess:\n    head:\n      tags:\n      - demoProcess\n      summary: 'Process: demoProcess'\n      description: |2\n\n\n\n        **Used in no other Process.**\n\n        **Uses no other Processes.**\n      operationId: 'Process: demoProcess'\n      responses:\n        '200':\n          description: ''\n  /decisiondmn/demoProcess/singleEntry/singleEntryDMN:\n    head:\n      tags:\n      - demoProcess\n      summary: 'DecisionDmn: singleEntryDMN'\n      description: ''\n      operationId: 'DecisionDmn: singleEntryDMN'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Input'\n            examples:\n              singleEntryDMN:\n                value:\n                  letter: A\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                oneOf:\n                - type: integer\n              examples:\n                singleEntryDMN:\n                  value: 1\n  /decisiondmn/demoProcess/collectEntries/collectEntriesDMN:\n    head:\n      tags:\n      - demoProcess\n      summary: 'DecisionDmn: collectEntriesDMN'\n      description: ''\n      operationId: 'DecisionDmn: collectEntriesDMN'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Input'\n            examples:\n              collectEntriesDMN:\n                value:\n                  letter: A\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                oneOf:\n                - type: integer\n              examples:\n                collectEntriesDMN:\n                  value:\n                  - 1\n                  - 2\n  /decisiondmn/demoProcess/singleResult/singleResultDMN:\n    head:\n      tags:\n      - demoProcess\n      summary: 'DecisionDmn: singleResultDMN'\n      description: ''\n      operationId: 'DecisionDmn: singleResultDMN'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Input'\n            examples:\n              singleResultDMN:\n                value:\n                  letter: A\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SingleResult_camundala.examples.demos.DecisionResultTypes.ManyOutResult[]'\n              examples:\n                singleResultDMN:\n                  value:\n                    index: 1\n                    emoji: ðŸ¤©\n  /decisiondmn/demoProcess/resultList/resultListDMN:\n    head:\n      tags:\n      - demoProcess\n      summary: 'DecisionDmn: resultListDMN'\n      description: ''\n      operationId: 'DecisionDmn: resultListDMN'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Input'\n            examples:\n              resultListDMN:\n                value:\n                  letter: A\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResultList_camundala.examples.demos.DecisionResultTypes.ManyOutResult[]'\n              examples:\n                resultListDMN:\n                  value:\n                  - index: 1\n                    emoji: ðŸ¤©\n                  - index: 2\n                    emoji: ðŸ˜‚\ncomponents:\n  schemas:\n    Input:\n      required:\n      - letter\n      type: object\n      properties:\n        letter:\n          type: string\n    ManyOutResult:\n      required:\n      - index\n      - emoji\n      type: object\n      properties:\n        index:\n          type: integer\n        emoji:\n          type: string\n    ResultList_camundala.examples.demos.DecisionResultTypes.ManyOutResult[]:\n      oneOf:\n      - $ref: '#/components/schemas/ManyOutResult'\n    SingleResult_camundala.examples.demos.DecisionResultTypes.ManyOutResult[]:\n      oneOf:\n      - $ref: '#/components/schemas/ManyOutResult'\n",
			"canonicalURL": "/github.com/pme123/camundala@b0745353cbc3fc3e3e8e04a293e5bf9f6c7b3689/-/blob/examples/demos/openApi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/pme123/camundala/blob/b0745353cbc3fc3e3e8e04a293e5bf9f6c7b3689/examples/demos/openApi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: at 1:248: invalid name: \"ResultList_camundala.examples.demos.DecisionResultTypes.ManyOutResult[]\" doesn't match \"^[a-zA-Z0-9.\\\\-_]+$\""
}