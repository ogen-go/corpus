{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cambiegroup/flowchem"
		},
		"file": {
			"name": "r4_heater.yml",
			"size": 0,
			"path": "docs/api/r4_heater/r4_heater.yml",
			"byteSize": 15356,
			"content": "openapi: 3.0.2\ninfo:\n  title: Flowchem - flowchem_config\n  description: Flowchem is a python library to control a variety of instruments commonly\n    found in chemistry labs.\n  license:\n    name: MIT License\n    url: https://opensource.org/licenses/MIT\n  version: 0.1.0a3\npaths:\n  /r4-heater-1/reactor1/:\n    get:\n      tags:\n      - r4-heater-1\n      - r4-heater-1\n      summary: Get Metadata\n      description: Return metadata.\n      operationId: get_metadata_r4_heater_1_reactor1__get\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ComponentInfo'\n  /r4-heater-1/reactor1/temperature:\n    get:\n      tags:\n      - r4-heater-1\n      - r4-heater-1\n      summary: Get Temperature\n      description: Return temperature in Celsius.\n      operationId: get_temperature_r4_heater_1_reactor1_temperature_get\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n    put:\n      tags:\n      - r4-heater-1\n      - r4-heater-1\n      summary: Set Temperature\n      description: Set the target temperature to the given string in natural language.\n      operationId: set_temperature_r4_heater_1_reactor1_temperature_put\n      parameters:\n      - required: true\n        schema:\n          title: Temp\n          type: string\n        name: temp\n        in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n  /r4-heater-1/reactor1/power-on:\n    put:\n      tags:\n      - r4-heater-1\n      - r4-heater-1\n      summary: Power On\n      description: Turn on temperature control.\n      operationId: power_on_r4_heater_1_reactor1_power_on_put\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n  /r4-heater-1/reactor1/power-off:\n    put:\n      tags:\n      - r4-heater-1\n      - r4-heater-1\n      summary: Power Off\n      description: Turn off temperature control.\n      operationId: power_off_r4_heater_1_reactor1_power_off_put\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n  /r4-heater-1/reactor1/target-reached:\n    get:\n      tags:\n      - r4-heater-1\n      - r4-heater-1\n      summary: Is Target Reached\n      description: Return True if the set temperature target has been reached.\n      operationId: is_target_reached_r4_heater_1_reactor1_target_reached_get\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n  /r4-heater-1/reactor1/limits:\n    get:\n      tags:\n      - r4-heater-1\n      - r4-heater-1\n      summary: Temperature Limits\n      description: Return a dict with `min` and `max` temperature in Celsius.\n      operationId: temperature_limits_r4_heater_1_reactor1_limits_get\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n  /r4-heater-1/reactor2/:\n    get:\n      tags:\n      - r4-heater-1\n      - r4-heater-1\n      summary: Get Metadata\n      description: Return metadata.\n      operationId: get_metadata_r4_heater_1_reactor2__get\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ComponentInfo'\n  /r4-heater-1/reactor2/temperature:\n    get:\n      tags:\n      - r4-heater-1\n      - r4-heater-1\n      summary: Get Temperature\n      description: Return temperature in Celsius.\n      operationId: get_temperature_r4_heater_1_reactor2_temperature_get\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n    put:\n      tags:\n      - r4-heater-1\n      - r4-heater-1\n      summary: Set Temperature\n      description: Set the target temperature to the given string in natural language.\n      operationId: set_temperature_r4_heater_1_reactor2_temperature_put\n      parameters:\n      - required: true\n        schema:\n          title: Temp\n          type: string\n        name: temp\n        in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n  /r4-heater-1/reactor2/power-on:\n    put:\n      tags:\n      - r4-heater-1\n      - r4-heater-1\n      summary: Power On\n      description: Turn on temperature control.\n      operationId: power_on_r4_heater_1_reactor2_power_on_put\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n  /r4-heater-1/reactor2/power-off:\n    put:\n      tags:\n      - r4-heater-1\n      - r4-heater-1\n      summary: Power Off\n      description: Turn off temperature control.\n      operationId: power_off_r4_heater_1_reactor2_power_off_put\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n  /r4-heater-1/reactor2/target-reached:\n    get:\n      tags:\n      - r4-heater-1\n      - r4-heater-1\n      summary: Is Target Reached\n      description: Return True if the set temperature target has been reached.\n      operationId: is_target_reached_r4_heater_1_reactor2_target_reached_get\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n  /r4-heater-1/reactor2/limits:\n    get:\n      tags:\n      - r4-heater-1\n      - r4-heater-1\n      summary: Temperature Limits\n      description: Return a dict with `min` and `max` temperature in Celsius.\n      operationId: temperature_limits_r4_heater_1_reactor2_limits_get\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n  /r4-heater-1/reactor3/:\n    get:\n      tags:\n      - r4-heater-1\n      - r4-heater-1\n      summary: Get Metadata\n      description: Return metadata.\n      operationId: get_metadata_r4_heater_1_reactor3__get\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ComponentInfo'\n  /r4-heater-1/reactor3/temperature:\n    get:\n      tags:\n      - r4-heater-1\n      - r4-heater-1\n      summary: Get Temperature\n      description: Return temperature in Celsius.\n      operationId: get_temperature_r4_heater_1_reactor3_temperature_get\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n    put:\n      tags:\n      - r4-heater-1\n      - r4-heater-1\n      summary: Set Temperature\n      description: Set the target temperature to the given string in natural language.\n      operationId: set_temperature_r4_heater_1_reactor3_temperature_put\n      parameters:\n      - required: true\n        schema:\n          title: Temp\n          type: string\n        name: temp\n        in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n  /r4-heater-1/reactor3/power-on:\n    put:\n      tags:\n      - r4-heater-1\n      - r4-heater-1\n      summary: Power On\n      description: Turn on temperature control.\n      operationId: power_on_r4_heater_1_reactor3_power_on_put\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n  /r4-heater-1/reactor3/power-off:\n    put:\n      tags:\n      - r4-heater-1\n      - r4-heater-1\n      summary: Power Off\n      description: Turn off temperature control.\n      operationId: power_off_r4_heater_1_reactor3_power_off_put\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n  /r4-heater-1/reactor3/target-reached:\n    get:\n      tags:\n      - r4-heater-1\n      - r4-heater-1\n      summary: Is Target Reached\n      description: Return True if the set temperature target has been reached.\n      operationId: is_target_reached_r4_heater_1_reactor3_target_reached_get\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n  /r4-heater-1/reactor3/limits:\n    get:\n      tags:\n      - r4-heater-1\n      - r4-heater-1\n      summary: Temperature Limits\n      description: Return a dict with `min` and `max` temperature in Celsius.\n      operationId: temperature_limits_r4_heater_1_reactor3_limits_get\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n  /r4-heater-1/reactor4/:\n    get:\n      tags:\n      - r4-heater-1\n      - r4-heater-1\n      summary: Get Metadata\n      description: Return metadata.\n      operationId: get_metadata_r4_heater_1_reactor4__get\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ComponentInfo'\n  /r4-heater-1/reactor4/temperature:\n    get:\n      tags:\n      - r4-heater-1\n      - r4-heater-1\n      summary: Get Temperature\n      description: Return temperature in Celsius.\n      operationId: get_temperature_r4_heater_1_reactor4_temperature_get\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n    put:\n      tags:\n      - r4-heater-1\n      - r4-heater-1\n      summary: Set Temperature\n      description: Set the target temperature to the given string in natural language.\n      operationId: set_temperature_r4_heater_1_reactor4_temperature_put\n      parameters:\n      - required: true\n        schema:\n          title: Temp\n          type: string\n        name: temp\n        in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n  /r4-heater-1/reactor4/power-on:\n    put:\n      tags:\n      - r4-heater-1\n      - r4-heater-1\n      summary: Power On\n      description: Turn on temperature control.\n      operationId: power_on_r4_heater_1_reactor4_power_on_put\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n  /r4-heater-1/reactor4/power-off:\n    put:\n      tags:\n      - r4-heater-1\n      - r4-heater-1\n      summary: Power Off\n      description: Turn off temperature control.\n      operationId: power_off_r4_heater_1_reactor4_power_off_put\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n  /r4-heater-1/reactor4/target-reached:\n    get:\n      tags:\n      - r4-heater-1\n      - r4-heater-1\n      summary: Is Target Reached\n      description: Return True if the set temperature target has been reached.\n      operationId: is_target_reached_r4_heater_1_reactor4_target_reached_get\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n  /r4-heater-1/reactor4/limits:\n    get:\n      tags:\n      - r4-heater-1\n      - r4-heater-1\n      summary: Temperature Limits\n      description: Return a dict with `min` and `max` temperature in Celsius.\n      operationId: temperature_limits_r4_heater_1_reactor4_limits_get\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\ncomponents:\n  schemas:\n    ComponentInfo:\n      title: ComponentInfo\n      required:\n      - hw_device\n      type: object\n      properties:\n        hw_device:\n          $ref: '#/components/schemas/DeviceInfo'\n        name:\n          title: Name\n          type: string\n          default: ''\n        owl_subclass_of:\n          title: Owl Subclass Of\n          type: string\n          default: http://purl.obolibrary.org/obo/OBI_0000968\n      description: Metadata associated with flowchem components.\n    DeviceInfo:\n      title: DeviceInfo\n      required:\n      - authors\n      - maintainers\n      - manufacturer\n      - model\n      type: object\n      properties:\n        authors:\n          title: Authors\n          type: array\n          items:\n            $ref: '#/components/schemas/Person'\n        maintainers:\n          title: Maintainers\n          type: array\n          items:\n            $ref: '#/components/schemas/Person'\n        manufacturer:\n          title: Manufacturer\n          type: string\n        model:\n          title: Model\n          type: string\n        additional_info:\n          title: Additional Info\n          type: object\n          default: {}\n        backend:\n          title: Backend\n          type: string\n          default: flowchem v. 0.1.0a3\n        serial_number:\n          title: Serial Number\n          type: string\n          default: unknown\n        version:\n          title: Version\n          type: string\n          default: ''\n      description: Metadata associated with hardware devices.\n    HTTPValidationError:\n      title: HTTPValidationError\n      type: object\n      properties:\n        detail:\n          title: Detail\n          type: array\n          items:\n            $ref: '#/components/schemas/ValidationError'\n    Person:\n      title: Person\n      required:\n      - name\n      - email\n      type: object\n      properties:\n        name:\n          title: Name\n          type: string\n        email:\n          title: Email\n          type: string\n    ValidationError:\n      title: ValidationError\n      required:\n      - loc\n      - msg\n      - type\n      type: object\n      properties:\n        loc:\n          title: Location\n          type: array\n          items:\n            anyOf:\n            - type: string\n            - type: integer\n        msg:\n          title: Message\n          type: string\n        type:\n          title: Error Type\n          type: string\n",
			"canonicalURL": "/github.com/cambiegroup/flowchem@a7be1eed92f4145ce3971c7be7c63c815599111f/-/blob/docs/api/r4_heater/r4_heater.yml",
			"externalURLs": [
				{
					"url": "https://github.com/cambiegroup/flowchem/blob/a7be1eed92f4145ce3971c7be7c63c815599111f/docs/api/r4_heater/r4_heater.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"ComponentInfo\": resolve \"#/components/schemas/ComponentInfo\": property \"hw_device\": $ref: resolve \"#/components/schemas/DeviceInfo\": property \"additional_info\": at docs/api/r4_heater/r4_heater.yml:502:20: parse default: unexpected type: \"object\""
}