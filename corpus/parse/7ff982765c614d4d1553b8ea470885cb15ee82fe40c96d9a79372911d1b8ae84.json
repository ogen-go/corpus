{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dipjyotimetia/HybridTestFramework"
		},
		"file": {
			"name": "confluence.json",
			"size": 0,
			"path": "src/main/resources/specs/confluence.json",
			"byteSize": 702414,
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\": \"The Confluence Cloud REST API\",\n    \"description\": \"This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.\",\n    \"termsOfService\": \"https://atlassian.com/terms/\",\n    \"version\": \"1.0.0\"\n  },\n  \"externalDocs\": {\n    \"description\": \"The online and complete version of the Confluence Cloud REST API docs.\",\n    \"url\": \"https://developer.atlassian.com/cloud/confluence/rest/\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"//your-domain.atlassian.net\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"Audit\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Analytics\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Content\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Content - attachments\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Content body\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Content - children and descendants\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Content - macro body\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Content comments\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Content labels\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Content permissions\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Content properties\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Content restrictions\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Content versions\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Content watches\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Dynamic modules\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Experimental\",\n      \"description\": \"APIs in this section can change without any prior deprecation notice.\"\n    },\n    {\n      \"name\": \"Group\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Inline tasks\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Label info\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Long-running task\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Relation\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Search\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Settings\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Space\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Space permissions\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Space properties\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Space settings\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Template\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Themes\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Users\",\n      \"description\": \"\"\n    }\n  ],\n  \"paths\": {\n    \"/wiki/rest/api/audit\": {\n      \"get\": {\n        \"tags\": [\n          \"Audit\"\n        ],\n        \"summary\": \"Get audit records\",\n        \"description\": \"Returns all records in the audit log, optionally for a certain date range.\\nThis contains information about events like space exports, group membership\\nchanges, app installations, etc. For more information, see\\n[Audit log](https://confluence.atlassian.com/confcloud/audit-log-802164269.html)\\nin the Confluence administrator's guide.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Confluence Administrator' global permission.\",\n        \"operationId\": \"getAuditRecords\",\n        \"parameters\": [\n          {\n            \"name\": \"startDate\",\n            \"in\": \"query\",\n            \"description\": \"Filters the results to the records on or after the `startDate`.\\nThe `startDate` must be specified as a [timestamp](https://www.unixtimestamp.com/).\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"endDate\",\n            \"in\": \"query\",\n            \"description\": \"Filters the results to the records on or before the `endDate`.\\nThe `endDate` must be specified as a [timestamp](https://www.unixtimestamp.com/).\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"searchString\",\n            \"in\": \"query\",\n            \"description\": \"Filters the results to records that have string property values\\nmatching the `searchString`.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned records.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of records to return per page.\\nNote, this may be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 1000\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested records are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AuditRecordArray\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to view the audit\\nlog.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:audit-log:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:audit-log:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"INACCESSIBLE\"\n      },\n      \"post\": {\n        \"tags\": [\n          \"Audit\"\n        ],\n        \"summary\": \"Create audit record\",\n        \"description\": \"Creates a record in the audit log.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Confluence Administrator' global permission.\",\n        \"operationId\": \"createAuditRecord\",\n        \"requestBody\": {\n          \"description\": \"The record to be created in the audit log.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AuditRecordCreate\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the record is created in the audit log.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AuditRecord\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if the `remoteAddress` property is not specified.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:audit-log:confluence\",\n              \"write:audit-log:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:audit-log:confluence\",\n              \"write:audit-log:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"INACCESSIBLE\"\n      }\n    },\n    \"/wiki/rest/api/audit/export\": {\n      \"get\": {\n        \"tags\": [\n          \"Audit\"\n        ],\n        \"summary\": \"Export audit records\",\n        \"description\": \"Exports audit records as a CSV file or ZIP file.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Confluence Administrator' global permission.\",\n        \"operationId\": \"exportAuditRecords\",\n        \"parameters\": [\n          {\n            \"name\": \"startDate\",\n            \"in\": \"query\",\n            \"description\": \"Filters the exported results to the records on or after the `startDate`.\\nThe `startDate` must be specified as a [timestamp](https://www.unixtimestamp.com/).\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"endDate\",\n            \"in\": \"query\",\n            \"description\": \"Filters the exported results to the records on or before the `endDate`.\\nThe `endDate` must be specified as a [timestamp](https://www.unixtimestamp.com/).\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"searchString\",\n            \"in\": \"query\",\n            \"description\": \"Filters the exported results to records that have string property values\\nmatching the `searchString`.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"format\",\n            \"in\": \"query\",\n            \"description\": \"The format of the export file for the audit records.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"csv\",\n              \"enum\": [\n                \"csv\",\n                \"zip\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested export of the audit records is returned.\",\n            \"content\": {\n              \"application/zip\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"binary\"\n                }\n              },\n              \"text/csv\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"binary\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to view the audit\\nlog.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:audit-log:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:audit-log:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"INACCESSIBLE\"\n      }\n    },\n    \"/wiki/rest/api/audit/retention\": {\n      \"get\": {\n        \"tags\": [\n          \"Audit\"\n        ],\n        \"summary\": \"Get retention period\",\n        \"description\": \"Returns the retention period for records in the audit log. The retention\\nperiod is how long an audit record is kept for, from creation date until\\nit is deleted.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Confluence Administrator' global permission.\",\n        \"operationId\": \"getRetentionPeriod\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested retention period is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RetentionPeriod\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to view the audit\\nlog.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:audit-log:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:audit-log:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"INACCESSIBLE\"\n      },\n      \"put\": {\n        \"tags\": [\n          \"Audit\"\n        ],\n        \"summary\": \"Set retention period\",\n        \"description\": \"Sets the retention period for records in the audit log. The retention period\\ncan be set to a maximum of 20 years.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Confluence Administrator' global permission.\",\n        \"operationId\": \"setRetentionPeriod\",\n        \"requestBody\": {\n          \"description\": \"The updated retention period.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RetentionPeriod\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the retention period is updated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RetentionPeriod\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to view the audit\\nlog.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:audit-log:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:audit-log:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"INACCESSIBLE\"\n      }\n    },\n    \"/wiki/rest/api/audit/since\": {\n      \"get\": {\n        \"tags\": [\n          \"Audit\"\n        ],\n        \"summary\": \"Get audit records for time period\",\n        \"description\": \"Returns records from the audit log, for a time period back from the current\\ndate. For example, you can use this method to get the last 3 months of records.\\n\\nThis contains information about events like space exports, group membership\\nchanges, app installations, etc. For more information, see\\n[Audit log](https://confluence.atlassian.com/confcloud/audit-log-802164269.html)\\nin the Confluence administrator's guide.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Confluence Administrator' global permission.\",\n        \"operationId\": \"getAuditRecordsForTimePeriod\",\n        \"parameters\": [\n          {\n            \"name\": \"number\",\n            \"in\": \"query\",\n            \"description\": \"The number of units for the time period.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\",\n              \"default\": 3\n            }\n          },\n          {\n            \"name\": \"units\",\n            \"in\": \"query\",\n            \"description\": \"The unit of time that the time period is measured in.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"MONTHS\",\n              \"enum\": [\n                \"NANOS\",\n                \"MICROS\",\n                \"MILLIS\",\n                \"SECONDS\",\n                \"MINUTES\",\n                \"HOURS\",\n                \"HALF_DAYS\",\n                \"DAYS\",\n                \"WEEKS\",\n                \"MONTHS\",\n                \"YEARS\",\n                \"DECADES\",\n                \"CENTURIES\"\n              ]\n            }\n          },\n          {\n            \"name\": \"searchString\",\n            \"in\": \"query\",\n            \"description\": \"Filters the results to records that have string property values\\nmatching the `searchString`.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned records.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of records to return per page.\\nNote, this may be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 1000\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested records are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AuditRecordArray\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to view the audit\\nlog.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:audit-log:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:audit-log:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"INACCESSIBLE\"\n      }\n    },\n    \"/wiki/rest/api/content\": {\n      \"get\": {\n        \"tags\": [\n          \"Content\"\n        ],\n        \"summary\": \"Get content\",\n        \"description\": \"Returns all content in a Confluence instance.\\n\\nBy default, the following objects are expanded: `space`, `history`, `version`.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\\nOnly content that the user has permission to view will be returned.\",\n        \"operationId\": \"getContent\",\n        \"parameters\": [\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"description\": \"The type of content to return. For example:\\n  - page\\n  - blogpost\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"page\"\n            }\n          },\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"query\",\n            \"description\": \"The key of the space to be queried for its content.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"title\",\n            \"in\": \"query\",\n            \"description\": \"The title of the page to be returned. Required for \u003ccode\u003epage\u003c/code\u003e type.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Filter the results to a set of content based on their status. If set to `any`,\\ncontent with any status is returned. Note, the `historical` status is currently\\nnot supported.\",\n            \"style\": \"form\",\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"default\": [\n                \"current\"\n              ],\n              \"enum\": [\n                \"current\",\n                \"trashed\",\n                \"deleted\",\n                \"historical\",\n                \"draft\",\n                \"any\"\n              ]\n            }\n          },\n          {\n            \"name\": \"postingDay\",\n            \"in\": \"query\",\n            \"description\": \"The posting date of the blog post to be returned. Required for\\n\u003ccode\u003eblogpost\u003c/code\u003e type. Format: \u003ccode\u003eyyyy-mm-dd\u003c/code\u003e.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/contentExpandWithSubExpandLimit\"\n          },\n          {\n            \"name\": \"trigger\",\n            \"in\": \"query\",\n            \"description\": \"If set to `viewed`, the request will trigger a 'viewed' event for the content.\\nWhen this event is triggered, the page/blogpost will appear on the 'Recently visited'\\ntab of the user's Confluence dashboard.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"viewed\"\n              ]\n            }\n          },\n          {\n            \"name\": \"orderby\",\n            \"in\": \"query\",\n            \"description\": \"Orders the content by a particular field. Specify the field and sort direction for\\nthis parameter, as follows: 'fieldpath asc/desc'. For example, 'history.createdDate desc'.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned content.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of content objects to return per page.\\nNote, this may be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 25\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested list of content is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContentArray\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if sub-expansions limit exceeds.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user does not have correct permission to read this content.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if the calling user does not have permission to view the\\nrequested content.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"post\": {\n        \"tags\": [\n          \"Content\"\n        ],\n        \"summary\": \"Create content\",\n        \"description\": \"Creates a new piece of content or publishes an existing draft.\\n\\nTo publish a draft, add the `id` and `status` properties to the body of the request.\\nSet the `id` to the ID of the draft and set the `status` to 'current'. When the\\nrequest is sent, a new piece of content will be created and the metadata from the\\ndraft will be transferred into it.\\n\\nBy default, the following objects are expanded: `space`, `history`, `version`.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'Add' permission for the\\nspace that the content will be created in, and permission to view the draft if publishing a draft.\",\n        \"operationId\": \"createContent\",\n        \"parameters\": [\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Filter the returned content by status.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"current\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/contentExpandWithSubExpandLimit\"\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The new content to be created. Set the `representation` to the name of the body\\nformat type. For example, if you use `storage` for the body format, set\\n'`representation`=`storage`'. See\\n[Confluence storage format](https://confluence.atlassian.com/x/AJkiLw).\\n\\nIf you are not sure how to generate the different formats, you can create a page in the\\nConfluence application, retrieve the content using [Get content](#api-content-get),\\nand expand the desired content format, e.g. `expand=body.storage`.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ContentCreate\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the content is created.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Content\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if;\\n- The content type is invalid.\\n- The sub-expansions limit exceeds.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if;\\n\\n- The space that the content is being created in does not exist.\\n- If the requesting user does not have permission to create content in it.\",\n            \"content\": {}\n          },\n          \"413\": {\n            \"description\": \"Returned if request is too large.  Requests for this resource can be at most 5242880 bytes\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\",\n              \"write:content:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\",\n              \"write:content:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"content\",\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/content/archive\": {\n      \"post\": {\n        \"tags\": [\n          \"Content\"\n        ],\n        \"summary\": \"Archive pages\",\n        \"description\": \"Archives a list of pages. The pages to be archived are specified as a list of content IDs.\\nThis API accepts the archival request and returns a task ID.\\nThe archival process happens asynchronously.\\nUse the /longtask/\u003ctaskId\u003e REST API to get the copy task status.\\n\\nEach content ID needs to resolve to page objects that are not already in an archived state.\\nThe content IDs need not belong to the same space.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Archive' permission for each of the pages in the corresponding space it belongs to.\",\n        \"operationId\": \"archivePages\",\n        \"requestBody\": {\n          \"description\": \"The pages to be archived.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"pages\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"id\"\n                      ],\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"integer\",\n                          \"format\": \"int64\",\n                          \"description\": \"The `id` of the page to be archived.\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"202\": {\n            \"description\": \"Returned if the archive request has been submitted.\",\n            \"content\": {}\n          },\n          \"400\": {\n            \"description\": \"Returned if:\\n- there is an archival job already running for the tenant.\\n- the number of pages to archive is larger than the limit of 300.\\n- any of the content IDs specified in the array do not resolve to pages.\\n- any of the specified pages are already archived.\\n- the request is coming from a free edition tenant.\\n- the request is coming from a non premium edition tenant with more than 1 page ID\\n  in the archive request.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content.metadata:confluence\",\n              \"write:page:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content.metadata:confluence\",\n              \"write:page:confluence\"\n            ]\n          }\n        ],\n        \"x-experimental\": true,\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/content/blueprint/instance/{draftId}\": {\n      \"put\": {\n        \"tags\": [\n          \"Content\"\n        ],\n        \"summary\": \"Publish shared draft\",\n        \"description\": \"Publishes a shared draft of a page created from a blueprint.\\n\\nBy default, the following objects are expanded: `body.storage`, `history`, `space`, `version`, `ancestors`.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to view the draft and 'Add' permission for the space that\\nthe content will be created in.\",\n        \"operationId\": \"publishSharedDraft\",\n        \"parameters\": [\n          {\n            \"name\": \"draftId\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the draft page that was created from a blueprint.\\nYou can find the `draftId` in the Confluence application by\\nopening the draft page and checking the page URL.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"The status of the content to be updated, i.e. the draft. This is set\\nto 'draft' by default, so you shouldn't need to specify it.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"draft\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/contentExpand\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ContentBlueprintDraft\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the draft was successfully published.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Content\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if a title is not specified or a page with the\\ntitle already exists.\",\n            \"content\": {}\n          },\n          \"409\": {\n            \"description\": \"Returned if the version is not set to 1.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\",\n              \"write:content:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\",\n              \"write:content:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      },\n      \"post\": {\n        \"tags\": [\n          \"Content\"\n        ],\n        \"summary\": \"Publish legacy draft\",\n        \"description\": \"Publishes a legacy draft of a page created from a blueprint. Legacy drafts\\nwill eventually be removed in favor of shared drafts. For now, this method\\nworks the same as [Publish shared draft](#api-content-blueprint-instance-draftId-put).\\n\\nBy default, the following objects are expanded: `body.storage`, `history`, `space`, `version`, `ancestors`.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to view the draft and 'Add' permission for the space that\\nthe content will be created in.\",\n        \"operationId\": \"publishLegacyDraft\",\n        \"parameters\": [\n          {\n            \"name\": \"draftId\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the draft page that was created from a blueprint.\\nYou can find the `draftId` in the Confluence application by\\nopening the draft page and checking the page URL.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"The status of the content to be updated, i.e. the draft. This is set\\nto 'draft' by default, so you shouldn't need to specify it.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"draft\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/contentExpand\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ContentBlueprintDraft\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the draft was successfully published.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Content\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if a title is not specified or a page with the\\ntitle already exists.\",\n            \"content\": {}\n          },\n          \"409\": {\n            \"description\": \"Returned if the version is not set to 1.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\",\n              \"write:content:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\",\n              \"write:content:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/content/search\": {\n      \"get\": {\n        \"tags\": [\n          \"Content\"\n        ],\n        \"summary\": \"Search content by CQL\",\n        \"description\": \"Returns the list of content that matches a Confluence Query Language\\n(CQL) query. For information on CQL, see:\\n[Advanced searching using CQL](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/).\\n\\nExample initial call:\\n```\\n/wiki/rest/api/content/search?cql=type=page\u0026limit=25\\n```\\n\\nExample response:\\n```\\n{\\n  \\\"results\\\": [\\n    { ... },\\n    { ... },\\n    ...\\n    { ... }\\n  ],\\n  \\\"limit\\\": 25,\\n  \\\"size\\\": 25,\\n  ...\\n  \\\"_links\\\": {\\n    \\\"base\\\": \\\"\u003curl\u003e\\\",\\n    \\\"context\\\": \\\"\u003curl\u003e\\\",\\n    \\\"next\\\": \\\"/rest/api/content/search?cql=type=page\u0026limit=25\u0026cursor=raNDoMsTRiNg\\\",\\n    \\\"self\\\": \\\"\u003curl\u003e\\\"\\n  }\\n}\\n```\\n\\nWhen additional results are available, returns `next` and `prev` URLs to retrieve them in subsequent calls. The URLs each contain a cursor that points to the appropriate set of results. Use `limit` to specify the number of results returned in each call.\\nExample subsequent call (taken from example response):\\n```\\n/wiki/rest/api/content/search?cql=type=page\u0026limit=25\u0026cursor=raNDoMsTRiNg\\n```\\nThe response to this will have a `prev` URL similar to the `next` in the example response.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\\nOnly content that the user has permission to view will be returned.\",\n        \"operationId\": \"searchContentByCQL\",\n        \"parameters\": [\n          {\n            \"name\": \"cql\",\n            \"in\": \"query\",\n            \"description\": \"The CQL string that is used to find the requested content.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"cqlcontext\",\n            \"in\": \"query\",\n            \"description\": \"The space, content, and content status to execute the search against.\\nSpecify this as an object with the following properties:\\n\\n- `spaceKey` Key of the space to search against. Optional.\\n- `contentId` ID of the content to search against. Optional. Must\\nbe in the space spacified by `spaceKey`.\\n- `contentStatuses` Content statuses to search against. Optional.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/contentExpand\"\n          },\n          {\n            \"name\": \"cursor\",\n            \"in\": \"query\",\n            \"description\": \"Pointer to a set of search results, returned as part of the `next` or `prev` URL from the previous search call.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of content objects to return per page.\\nNote, this may be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 25\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested list of content is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContentArray\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if the CQL is invalid or missing.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"search:confluence\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"Content\"\n        ],\n        \"summary\": \"Get content by ID\",\n        \"description\": \"Returns a single piece of content, like a page or a blog post.\\n\\nBy default, the following objects are expanded: `space`, `history`, `version`.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to view the content. If the content is a blog post, 'View' permission\\nfor the space is required.\",\n        \"operationId\": \"getContentById\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to be returned. If you don't know the content ID,\\nuse [Get content](#api-content-get) and filter the results.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Filter the results to a set of content based on their status.\\nIf set to `any`, content with any status is returned. Note, the\\n`historical` status is currently not supported.\",\n            \"style\": \"form\",\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"default\": [\n                \"current\"\n              ],\n              \"enum\": [\n                \"current\",\n                \"trashed\",\n                \"deleted\",\n                \"historical\",\n                \"draft\",\n                \"any\"\n              ]\n            }\n          },\n          {\n            \"name\": \"version\",\n            \"in\": \"query\",\n            \"description\": \"The version number of the content to be returned.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"embeddedContentRender\",\n            \"in\": \"query\",\n            \"description\": \"The version of embedded content (e.g. attachments) to render.\\n\\n- \u003ccode\u003ecurrent\u003c/code\u003e renders the latest version of the embedded content.\\n- \u003ccode\u003eversion-at-save\u003c/code\u003e renders the version of the embedded content\\nat the time of save.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"current\",\n              \"enum\": [\n                \"current\",\n                \"version-at-save\"\n              ]\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/contentExpandWithSubExpandLimit\"\n          },\n          {\n            \"name\": \"trigger\",\n            \"in\": \"query\",\n            \"description\": \"If set to `viewed`, the request will trigger a 'viewed' event for the content.\\nWhen this event is triggered, the page/blogpost will appear on the 'Recently visited'\\ntab of the user's Confluence dashboard.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"viewed\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested content is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Content\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if;\\n- The content id is invalid.\\n- The sub-expansions limit exceeds.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing from the request.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user can not view the content.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no content with the given ID.\\n- The requesting user does not have permission to view the content.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"put\": {\n        \"tags\": [\n          \"Content\"\n        ],\n        \"summary\": \"Update content\",\n        \"description\": \"Updates a piece of content. Use this method to update the title or body\\nof a piece of content, change the status, change the parent page, and more.\\n\\nNote, updating draft content is currently not supported.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to update the content.\",\n        \"operationId\": \"updateContent\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to be updated.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"The updated status of the content. Use this parameter to change the\\nstatus of a piece of content without passing the entire request body.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"current\",\n              \"enum\": [\n                \"current\",\n                \"trashed\",\n                \"deleted\",\n                \"historical\",\n                \"draft\"\n              ]\n            }\n          },\n          {\n            \"name\": \"conflictPolicy\",\n            \"in\": \"query\",\n            \"description\": \"The action that should be taken when conflicts are discovered.\\nOnly used when publishing a draft page.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"abort\",\n              \"enum\": [\n                \"abort\"\n              ]\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The updated content.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ContentUpdate\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the content is updated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Content\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if;\\n\\n- The request body is missing required parameters (version, type, title).\\n- The type property has been set incorrectly.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user can not update the content with specified id.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if a draft with current content cannot be found when setting the status\\nparameter to draft and the content status is current.\",\n            \"content\": {}\n          },\n          \"409\": {\n            \"description\": \"Returned if;\\n\\n- The page is a draft (draft pages cannot be updated).\\n- The version property has not been set correctly for the content\\ntype.\",\n            \"content\": {}\n          },\n          \"501\": {\n            \"description\": \"Indicates that the server does not support the functionality needed to serve the request.\\nFor example,\\n\\n- trying to publish edit draft and passing content status as historical.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\",\n              \"write:content:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\",\n              \"write:content:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"content\",\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Content\"\n        ],\n        \"summary\": \"Delete content\",\n        \"description\": \"Moves a piece of content to the space's trash or purges it from the trash,\\ndepending on the content's type and status:\\n\\n- If the content's type is `page` or `blogpost` and its status is `current`,\\nit will be trashed.\\n- If the content's type is `page` or `blogpost` and its status is `trashed`,\\nthe content will be purged from the trash and deleted permanently. Note,\\nyou must also set the `status` query parameter to `trashed` in your request.\\n- If the content's type is `comment` or `attachment`, it will be deleted\\npermanently without being trashed.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Delete' permission for the space that the content is in.\",\n        \"operationId\": \"deleteContent\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to be deleted.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Set this to `trashed`, if the content's status is `trashed` and you want to purge it.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Returned if the content is successfully trashed or purged.\",\n            \"content\": {}\n          },\n          \"400\": {\n            \"description\": \"Returned if the content id is invalid.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user can not delete the content with specified id.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no content with the given ID.\\n- The requesting user does not have permission to trash or purge the\\ncontent.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"delete:content:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"delete:content:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"DELETE\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}/child\": {\n      \"get\": {\n        \"tags\": [\n          \"Content - children and descendants\"\n        ],\n        \"summary\": \"Get content children\",\n        \"description\": \"Returns a map of the direct children of a piece of content. A piece of content\\nhas different types of child content, depending on its type. These are\\nthe default parent-child content type relationships:\\n\\n- `page`: child content is `page`, `comment`, `attachment`\\n- `blogpost`: child content is `comment`, `attachment`\\n- `attachment`: child content is `comment`\\n- `comment`: child content is `attachment`\\n\\nApps can override these default relationships. Apps can also introduce\\nnew content types that create new parent-child content relationships.\\n\\nNote, the map will always include all child content types that are valid\\nfor the content. However, if the content has no instances of a child content\\ntype, the map will contain an empty array for that child content type.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'View' permission for the space,\\nand permission to view the content if it is a page.\",\n        \"operationId\": \"getContentChildren\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to be queried for its children.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"expand\",\n            \"in\": \"query\",\n            \"description\": \"A multi-value parameter indicating which properties of the children to expand, where:\\n\\n- `attachment` returns all attachments for the content.\\n- `comments` returns all comments for the content.\\n- `page` returns all child pages of the content.\\n- Custom content types that are provided by apps are also supported.\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"name\": \"parentVersion\",\n            \"in\": \"query\",\n            \"description\": \"The version of the parent content to retrieve children for.\\nCurrently, this only works for the latest version.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested content children are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContentChildren\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no content with the given ID.\\n- The calling user does not have permission to view the content.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/content/{pageId}/move/{position}/{targetId}\": {\n      \"put\": {\n        \"tags\": [\n          \"Content - children and descendants\"\n        ],\n        \"summary\": \"Move a page to a new location relative to a target page\",\n        \"description\": \"Move a page to a new location relative to a target page:\\n\\n* `before` - move the page under the same parent as the target, before the target in the list of children\\n* `after` - move the page under the same parent as the target, after the target in the list of children\\n* `append` - move the page to be a child of the target\\n\\nCaution: This API can move pages to the top level of a space. Top-level pages are difficult to find in the UI\\nbecause they do not show up in the page tree display. To avoid this, never use `before` or `after` positions\\nwhen the `targetId` is a top-level page.\",\n        \"operationId\": \"movePage\",\n        \"parameters\": [\n          {\n            \"name\": \"pageId\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the page to be moved\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"position\",\n            \"in\": \"path\",\n            \"description\": \"The position to move the page to relative to the target page:\\n* `before` - move the page under the same parent as the target, before the target in the list of children\\n* `after` - move the page under the same parent as the target, after the target in the list of children\\n* `append` - move the page to be a child of the target\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"before\",\n                \"after\",\n                \"append\"\n              ]\n            }\n          },\n          {\n            \"name\": \"targetId\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the target page for this operation\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Page was successfully moved\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"pageId\": {\n                      \"$ref\": \"#/components/schemas/ContentId\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if;\\n\\n- A page already exists in the target space with the same name.\\n  User is advised to rename page before moving.\\n- The move would create a parent-child loop (page becomes a descendant and ancestor of itself)\\n- The page has permission restrictions that the user does not have permission to create in the target space.\\n  User is advised to remove restrictions before moving.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if;\\n\\n- User does not have permission to remove page from current space\\n- User does not have permission to create a page in target space\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- The id or targetId refer to non-existent pages\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:page:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:page:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}/child/attachment\": {\n      \"get\": {\n        \"tags\": [\n          \"Content - attachments\"\n        ],\n        \"summary\": \"Get attachments\",\n        \"description\": \"Returns the attachments for a piece of content.\\n\\nBy default, the following objects are expanded: `metadata`.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to view the content. If the content is a blog post, 'View' permission\\nfor the space is required.\",\n        \"operationId\": \"getAttachments\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to be queried for its attachments.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/contentExpand\"\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned attachments.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of attachments to return per page.\\nNote, this may be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 25\n            }\n          },\n          {\n            \"name\": \"filename\",\n            \"in\": \"query\",\n            \"description\": \"Filter the results to attachments that match the filename.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"mediaType\",\n            \"in\": \"query\",\n            \"description\": \"Filter the results to attachments that match the media type.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested attachments are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContentArray\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no parent content with the given ID.\\n- The calling user does not have permission to view the parent content.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"put\": {\n        \"tags\": [\n          \"Content - attachments\"\n        ],\n        \"summary\": \"Create or update attachment\",\n        \"description\": \"Adds an attachment to a piece of content. If the attachment already exists\\nfor the content, then the attachment is updated (i.e. a new version of the\\nattachment is created).\\n\\nNote, you must set a `X-Atlassian-Token: nocheck` header on the request\\nfor this method, otherwise it will be blocked. This protects against XSRF\\nattacks, which is necessary as this method accepts multipart/form-data.\\n\\nThe media type 'multipart/form-data' is defined in [RFC 7578](https://www.ietf.org/rfc/rfc7578.txt).\\nMost client libraries have classes that make it easier to implement\\nmultipart posts, like the [MultipartEntityBuilder](https://hc.apache.org/httpcomponents-client-5.1.x/current/httpclient5/apidocs/)\\nJava class provided by Apache HTTP Components.\\n\\nNote, according to [RFC 7578](https://tools.ietf.org/html/rfc7578#section-4.5),\\nin the case where the form data is text,\\nthe charset parameter for the \\\"text/plain\\\" Content-Type may be used to\\nindicate the character encoding used in that part. In the case of this\\nAPI endpoint, the `comment` body parameter should be sent with `type=text/plain`\\nand `charset=utf-8` values. This will force the charset to be UTF-8.\\n\\nExample: This curl command attaches a file ('example.txt') to a piece of\\ncontent (id='123') with a comment and `minorEdits`=true. If the 'example.txt'\\nfile already exists, it will update it with a new version of the attachment.\\n\\n``` bash\\ncurl -D- \\\\\\n  -u admin:admin \\\\\\n  -X PUT \\\\\\n  -H 'X-Atlassian-Token: nocheck' \\\\\\n  -F 'file=@\\\"example.txt\\\"' \\\\\\n  -F 'minorEdit=\\\"true\\\"' \\\\\\n  -F 'comment=\\\"Example attachment comment\\\"; type=text/plain; charset=utf-8' \\\\\\n  http://myhost/rest/api/content/123/child/attachment\\n```\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to update the content.\",\n        \"operationId\": \"createOrUpdateAttachments\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to add the attachment to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"The status of the content that the attachment is being added to.\\nThis should always be set to 'current'.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"current\",\n              \"enum\": [\n                \"current\",\n                \"draft\"\n              ]\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"required\": [\n                  \"file\",\n                  \"minorEdit\"\n                ],\n                \"properties\": {\n                  \"file\": {\n                    \"type\": \"string\",\n                    \"description\": \"The relative location and name of the attachment to be added to\\nthe content.\",\n                    \"format\": \"binary\"\n                  },\n                  \"comment\": {\n                    \"type\": \"string\",\n                    \"description\": \"The comment for the attachment that is being added.\\nIf you specify a comment, then every file must have a comment and\\nthe comments must be in the same order as the files. Alternatively,\\ndon't specify any comments.\",\n                    \"format\": \"binary\"\n                  },\n                  \"minorEdit\": {\n                    \"type\": \"string\",\n                    \"description\": \"If `minorEdits` is set to 'true', no notification email or activity stream\\nwill be generated when the attachment is added to the content.\",\n                    \"format\": \"binary\"\n                  }\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the attachments were added to the content.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContentArray\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned if;\\n\\n- Attachments are disabled.\\n- The calling user does not have permission to add attachments to the\\ncontent.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- The requested content is not found.\\n- The user does not have permission to view it.\\n- The attachment exceeds the maximum configured attachment size.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\",\n              \"write:attachment:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-file\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\",\n              \"write:attachment:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      },\n      \"post\": {\n        \"tags\": [\n          \"Content - attachments\"\n        ],\n        \"summary\": \"Create attachment\",\n        \"description\": \"Adds an attachment to a piece of content. This method only adds a new\\nattachment. If you want to update an existing attachment, use\\n[Create or update attachments](#api-content-id-child-attachment-put).\\n\\nNote, you must set a `X-Atlassian-Token: nocheck` header on the request\\nfor this method, otherwise it will be blocked. This protects against XSRF\\nattacks, which is necessary as this method accepts multipart/form-data.\\n\\nThe media type 'multipart/form-data' is defined in [RFC 7578](https://www.ietf.org/rfc/rfc7578.txt).\\nMost client libraries have classes that make it easier to implement\\nmultipart posts, like the [MultipartEntityBuilder](https://hc.apache.org/httpcomponents-client-5.1.x/current/httpclient5/apidocs/)\\nJava class provided by Apache HTTP Components.\\n\\nNote, according to [RFC 7578](https://tools.ietf.org/html/rfc7578#section-4.5),\\nin the case where the form data is text,\\nthe charset parameter for the \\\"text/plain\\\" Content-Type may be used to\\nindicate the character encoding used in that part. In the case of this\\nAPI endpoint, the `comment` body parameter should be sent with `type=text/plain`\\nand `charset=utf-8` values. This will force the charset to be UTF-8.\\n\\nExample: This curl command attaches a file ('example.txt') to a container\\n(id='123') with a comment and `minorEdits`=true.\\n\\n``` bash\\ncurl -D- \\\\\\n  -u admin:admin \\\\\\n  -X POST \\\\\\n  -H 'X-Atlassian-Token: nocheck' \\\\\\n  -F 'file=@\\\"example.txt\\\"' \\\\\\n  -F 'minorEdit=\\\"true\\\"' \\\\\\n  -F 'comment=\\\"Example attachment comment\\\"; type=text/plain; charset=utf-8' \\\\\\n  http://myhost/rest/api/content/123/child/attachment\\n```\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to update the content.\",\n        \"operationId\": \"createAttachment\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to add the attachment to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"The status of the content that the attachment is being added to.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"current\",\n              \"enum\": [\n                \"current\",\n                \"draft\"\n              ]\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"required\": [\n                  \"file\",\n                  \"minorEdit\"\n                ],\n                \"properties\": {\n                  \"file\": {\n                    \"type\": \"string\",\n                    \"description\": \"The relative location and name of the attachment to be added to\\nthe content.\",\n                    \"format\": \"binary\"\n                  },\n                  \"comment\": {\n                    \"type\": \"string\",\n                    \"description\": \"The comment for the attachment that is being added.\\nIf you specify a comment, then every file must have a comment and\\nthe comments must be in the same order as the files. Alternatively,\\ndon't specify any comments.\",\n                    \"format\": \"binary\"\n                  },\n                  \"minorEdit\": {\n                    \"type\": \"string\",\n                    \"description\": \"If `minorEdits` is set to 'true', no notification email or activity stream\\nwill be generated when the attachment is added to the content.\",\n                    \"format\": \"binary\"\n                  }\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the attachments were added to the content.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContentArray\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if the content already has an attachment with the same filename.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if;\\n\\n- Attachments are disabled in Confluence.\\n- The calling user does not have permission to add attachments to the\\ncontent.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- The requested content is not found.\\n- The user does not have permission to view it\\n- The attachment exceeds the maximum configured attachment size.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\",\n              \"write:attachment:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-file\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\",\n              \"write:attachment:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}/child/attachment/{attachmentId}\": {\n      \"put\": {\n        \"tags\": [\n          \"Content - attachments\"\n        ],\n        \"summary\": \"Update attachment properties\",\n        \"description\": \"Updates the attachment properties, i.e. the non-binary data of an attachment\\nlike the filename, media-type, comment, and parent container.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to update the content.\",\n        \"operationId\": \"updateAttachmentProperties\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content that the attachment is attached to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"attachmentId\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the attachment to update.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The details of the attachment to be updated.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Content\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the attachment is updated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Content\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if;\\n\\n- The attachment id is invalid.\\n- The attachment version number is invalid.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if;\\n\\n- The calling user is not permitted to update or move the attachment.\\n- The attachment is being moved to an invalid content type.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if no attachment is found for the attachment ID.\",\n            \"content\": {}\n          },\n          \"409\": {\n            \"description\": \"Returned if the version of the supplied attachment does not match\\nthe version of the attachment stored in the database.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\",\n              \"write:attachment:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-file\",\n              \"write:confluence-props\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\",\n              \"write:attachment:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}/child/attachment/{attachmentId}/data\": {\n      \"post\": {\n        \"tags\": [\n          \"Content - attachments\"\n        ],\n        \"summary\": \"Update attachment data\",\n        \"description\": \"Updates the binary data of an attachment, given the attachment ID, and\\noptionally the comment and the minor edit field.\\n\\nThis method is essentially the same as [Create or update attachments](#api-content-id-child-attachment-put),\\nexcept that it matches the attachment ID rather than the name.\\n\\nNote, you must set a `X-Atlassian-Token: nocheck` header on the request\\nfor this method, otherwise it will be blocked. This protects against XSRF\\nattacks, which is necessary as this method accepts multipart/form-data.\\n\\nThe media type 'multipart/form-data' is defined in [RFC 7578](https://www.ietf.org/rfc/rfc7578.txt).\\nMost client libraries have classes that make it easier to implement\\nmultipart posts, like the [MultipartEntityBuilder](https://hc.apache.org/httpcomponents-client-5.1.x/current/httpclient5/apidocs/)\\nJava class provided by Apache HTTP Components.\\n\\nNote, according to [RFC 7578](https://tools.ietf.org/html/rfc7578#section-4.5),\\nin the case where the form data is text,\\nthe charset parameter for the \\\"text/plain\\\" Content-Type may be used to\\nindicate the character encoding used in that part. In the case of this\\nAPI endpoint, the `comment` body parameter should be sent with `type=text/plain`\\nand `charset=utf-8` values. This will force the charset to be UTF-8.\\n\\nExample: This curl command updates an attachment (id='att456') that is attached\\nto a piece of content (id='123') with a comment and `minorEdits`=true.\\n\\n``` bash\\ncurl -D- \\\\\\n  -u admin:admin \\\\\\n  -X POST \\\\\\n  -H 'X-Atlassian-Token: nocheck' \\\\\\n  -F 'file=@\\\"example.txt\\\"' \\\\\\n  -F 'minorEdit=\\\"true\\\"' \\\\\\n  -F 'comment=\\\"Example attachment comment\\\"; type=text/plain; charset=utf-8' \\\\\\n  http://myhost/rest/api/content/123/child/attachment/att456/data\\n```\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to update the content.\",\n        \"operationId\": \"updateAttachmentData\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content that the attachment is attached to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"attachmentId\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the attachment to update.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"required\": [\n                  \"file\",\n                  \"minorEdit\"\n                ],\n                \"properties\": {\n                  \"file\": {\n                    \"type\": \"string\",\n                    \"description\": \"The relative location and name of the attachment to be added to\\nthe content.\",\n                    \"format\": \"binary\"\n                  },\n                  \"comment\": {\n                    \"type\": \"string\",\n                    \"description\": \"The comment for the attachment that is being added.\\nIf you specify a comment, then every file must have a comment and\\nthe comments must be in the same order as the files. Alternatively,\\ndon't specify any comments.\",\n                    \"format\": \"binary\"\n                  },\n                  \"minorEdit\": {\n                    \"type\": \"string\",\n                    \"description\": \"If `minorEdits` is set to 'true', no notification email or activity stream\\nwill be generated when the attachment is added to the content.\",\n                    \"format\": \"binary\"\n                  }\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the attachment is updated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Content\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if the attachment id is invalid.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if no attachment is found for the attachment ID.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\",\n              \"write:attachment:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-file\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\",\n              \"write:attachment:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}/child/attachment/{attachmentId}/download\": {\n      \"get\": {\n        \"tags\": [\n          \"Content - attachments\"\n        ],\n        \"summary\": \"Get URI to download attachment\",\n        \"description\": \"Redirects the client to a URL that serves an attachment's binary data.\",\n        \"operationId\": \"downloadAttatchment\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content that the attachment is attached to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"attachmentId\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the attachment to download.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"version\",\n            \"in\": \"query\",\n            \"description\": \"The version of the attachment. If this parameter is absent, the redirect URI will download the latest version of the attachment.\",\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"302\": {\n            \"description\": \"Returned if download URL is found.\"\n          },\n          \"400\": {\n            \"description\": \"Returned if version number is greater than attachment's latest version number or an invalid value.\"\n          },\n          \"401\": {\n            \"description\": \"Returned if there are authentication issues in request.\"\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- No content is found with the specified content ID.\\n- The specified content does not contain an attachment with the specified attachment ID.\\n- The calling user does not have permission to view the attachment.\"\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:attachment:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:attachment:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}/child/comment\": {\n      \"get\": {\n        \"tags\": [\n          \"Content comments\"\n        ],\n        \"summary\": \"Get content comments\",\n        \"description\": \"Returns the comments on a piece of content.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'View' permission for the space,\\nand permission to view the content if it is a page.\",\n        \"operationId\": \"getContentComments\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to be queried for its comments.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/contentExpand\"\n          },\n          {\n            \"name\": \"parentVersion\",\n            \"in\": \"query\",\n            \"description\": \"The version of the parent content to retrieve children for.\\nCurrently, this only works for the latest version.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned comments.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of comments to return per page. Note,\\nthis may be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 25\n            }\n          },\n          {\n            \"name\": \"location\",\n            \"in\": \"query\",\n            \"description\": \"The location of the comments in the page. Multiple locations can be specified.\\nIf no location is specified, comments from all locations are returned.\",\n            \"style\": \"form\",\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"enum\": [\n                \"inline\",\n                \"footer\",\n                \"resolved\"\n              ]\n            }\n          },\n          {\n            \"name\": \"depth\",\n            \"in\": \"query\",\n            \"description\": \"Currently, this parameter is not used.\\nComments are returned at the root level only.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested comments are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContentArray\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no parent content with the given ID.\\n- The calling user does not have permission to view the parent content.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}/child/{type}\": {\n      \"get\": {\n        \"tags\": [\n          \"Content - children and descendants\"\n        ],\n        \"summary\": \"Get content children by type\",\n        \"description\": \"Returns all children of a given type, for a piece of content.\\nA piece of content has different types of child content, depending on its type:\\n\\n- `page`: child content is `page`, `comment`, `attachment`\\n- `blogpost`: child content is `comment`, `attachment`\\n- `attachment`: child content is `comment`\\n- `comment`: child content is `attachment`\\n\\nCustom content types that are provided by apps can also be returned.\\n\\nNote, this method only returns direct children. To return children at all\\nlevels, use [Get descendants by type](#api-content-id-descendant-type-get).\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'View' permission for the space,\\nand permission to view the content if it is a page.\",\n        \"operationId\": \"getContentChildrenByType\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to be queried for its children.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"path\",\n            \"description\": \"The type of children to return.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"page\",\n                \"comment\",\n                \"attachment\"\n              ]\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/contentExpand\"\n          },\n          {\n            \"name\": \"parentVersion\",\n            \"in\": \"query\",\n            \"description\": \"The version of the parent content to retrieve children for.\\nCurrently, this only works for the latest version.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned content.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of content to return per page. Note,\\nthis may be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 25\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested content is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContentArray\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if the parent type and desired child content type are not compatible.\\nEg: Cannot find `page` children of a `blogpost`.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if:\\n\\n- There is no content with the given ID.\\n- The calling user does not have permission to view the content.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}/descendant\": {\n      \"get\": {\n        \"tags\": [\n          \"Content - children and descendants\"\n        ],\n        \"summary\": \"Get content descendants\",\n        \"description\": \"Returns a map of the descendants of a piece of content. This is similar\\nto [Get content children](#api-content-id-child-get), except that this\\nmethod returns child pages at all levels, rather than just the direct\\nchild pages.\\n\\nA piece of content has different types of descendants, depending on its type:\\n\\n- `page`: descendant is `page`, `comment`, `attachment`\\n- `blogpost`: descendant is `comment`, `attachment`\\n- `attachment`: descendant is `comment`\\n- `comment`: descendant is `attachment`\\n\\nThe map will always include all descendant types that are valid for the content.\\nHowever, if the content has no instances of a descendant type, the map will\\ncontain an empty array for that descendant type.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'View' permission for the space, and permission to view the content if it\\nis a page.\",\n        \"operationId\": \"getContentDescendants\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to be queried for its descendants.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"expand\",\n            \"in\": \"query\",\n            \"description\": \"A multi-value parameter indicating which properties of the children to\\nexpand, where:\\n\\n- `attachment` returns all attachments for the content.\\n- `comments` returns all comments for the content.\\n- `page` returns all child pages of the content.\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"attachment\",\n                  \"comment\",\n                  \"page\"\n                ]\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested descendants are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContentChildren\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no content with the given ID.\\n- The calling user does not have permission to view the content.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}/descendant/{type}\": {\n      \"get\": {\n        \"tags\": [\n          \"Content - children and descendants\"\n        ],\n        \"summary\": \"Get content descendants by type\",\n        \"description\": \"Returns all descendants of a given type, for a piece of content. This is\\nsimilar to [Get content children by type](#api-content-id-child-type-get),\\nexcept that this method returns child pages at all levels, rather than just\\nthe direct child pages.\\n\\nA piece of content has different types of descendants, depending on its type:\\n\\n- `page`: descendant is `page`, `comment`, `attachment`\\n- `blogpost`: descendant is `comment`, `attachment`\\n- `attachment`: descendant is `comment`\\n- `comment`: descendant is `attachment`\\n\\nCustom content types that are provided by apps can also be returned.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'View' permission for the space, and permission to view the content if it\\nis a page.\",\n        \"operationId\": \"getDescendantsOfType\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to be queried for its descendants.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"path\",\n            \"description\": \"The type of descendants to return.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"page\",\n                \"comment\",\n                \"attachment\"\n              ]\n            }\n          },\n          {\n            \"name\": \"depth\",\n            \"in\": \"query\",\n            \"description\": \"Filter the results to descendants upto a desired level of the content. Note, the maximum value supported is 100. root level of the content means immediate (level 1) descendants of the type requested. all represents returning all descendants of the type requested.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"all\",\n              \"enum\": [\n                \"all\",\n                \"root\",\n                \"\u003cany positive integer argument in the range of 1 and 100\u003e\"\n              ]\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/contentExpand\"\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned content.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of content to return per page. Note,\\nthis may be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 25\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested content is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContentArray\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if;\\n\\n- Any of the required request params are missing.\\n- The request is invalid such as negative start param, a format besides int32 for limit etc.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no content with the given ID.\\n- The calling user does not have permission to view the content.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}/history\": {\n      \"get\": {\n        \"tags\": [\n          \"Content\"\n        ],\n        \"summary\": \"Get content history\",\n        \"description\": \"Returns the most recent update for a piece of content.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content.\",\n        \"operationId\": \"getHistoryForContent\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to be queried for its history.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"expand\",\n            \"in\": \"query\",\n            \"description\": \"A multi-value parameter indicating which properties of the content history to expand.\\nMaximum sub-expansions allowed is `8`.\\n\\n- `lastUpdated` returns information about the most recent update of the content,\\nincluding who updated it and when it was updated.\\n- `previousVersion` returns information about the update prior to the current content\\nupdate. For this method, it contains the same information as `lastUpdated`.\\n- `contributors` returns all of the users who have contributed to the content.\\n- `nextVersion` This parameter is not used for this method.\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"lastUpdated\",\n                  \"previousVersion\",\n                  \"contributors\",\n                  \"nextVersion\"\n                ]\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested content history is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContentHistory\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if sub-expansions limit exceeds.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no content with the given ID.\\n- The calling user does not have permission to view the content.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content.metadata:confluence\",\n              \"read:user:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content.metadata:confluence\",\n              \"read:user:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}/history/{version}/macro/id/{macroId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Content - macro body\"\n        ],\n        \"summary\": \"Get macro body by macro ID\",\n        \"description\": \"Returns the body of a macro in storage format, for the given macro ID.\\nThis includes information like the name of the macro, the body of the macro,\\nand any macro parameters. This method is mainly used by Cloud apps.\\n\\nAbout the macro ID: When a macro is created in a new version of content,\\nConfluence will generate a random ID for it, unless an ID is specified\\n(by an app). The macro ID will look similar to this: '50884bd9-0cb8-41d5-98be-f80943c14f96'.\\nThe ID is then persisted as new versions of content are created, and is\\nonly modified by Confluence if there are conflicting IDs.\\n\\nNote, to preserve backwards compatibility this resource will also match on\\nthe hash of the macro body, even if a macro ID is found. This check will\\neventually become redundant, as macro IDs are generated for pages and\\ntransparently propagate out to all instances.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to view the content that the macro is in.\",\n        \"operationId\": \"getMacroBodyByMacroId\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID for the content that contains the macro.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"version\",\n            \"in\": \"path\",\n            \"description\": \"The version of the content that contains the macro. Specifying `0` as the `version` will return\\nthe macro body for the latest content version.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"macroId\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the macro. This is usually passed by the app that the\\nmacro is in. Otherwise, find the macro ID by querying the desired\\ncontent and version, then expanding the body in storage format.\\nFor example, '/content/196611/version/7?expand=content.body.storage'.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested macro body is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MacroInstance\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no content with the given ID.\\n- The calling user does not have permission to view the content.\\n- The macro does not exist in the specified version.\\n- There is no macro matching the given macro ID or hash.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content.metadata:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.all\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content.metadata:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}/label\": {\n      \"get\": {\n        \"tags\": [\n          \"Content labels\"\n        ],\n        \"summary\": \"Get labels for content\",\n        \"description\": \"Returns the labels on a piece of content.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'View' permission for the space and permission to view the content if it is a page.\",\n        \"operationId\": \"getLabelsForContent\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to be queried for its labels.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"prefix\",\n            \"in\": \"query\",\n            \"description\": \"Filters the results to labels with the specified prefix. If this parameter\\nis not specified, then labels with any prefix will be returned.\\n\\n- `global` prefix is used by default when a user adds a label\\nvia the UI.\\n- `my` prefix can be explicitly added by a user when adding a label\\nvia the UI, e.g. 'my:example-label'. Also, when a page is selected as\\na favourite, the 'my:favourite' label is automatically added.\\n- `team` can used when adding labels via [Add labels to content](#api-content-id-label-post)\\nbut is not used in the UI.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"global\",\n                \"my\",\n                \"team\"\n              ]\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned labels.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of labels to return per page. Note,\\nthis may be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 200\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested labels are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LabelArray\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user can view but not edit the content.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no content with the given ID.\\n- The calling user does not have permission to view the content.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:label:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:label:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"post\": {\n        \"tags\": [\n          \"Content labels\"\n        ],\n        \"summary\": \"Add labels to content\",\n        \"description\": \"Adds labels to a piece of content. Does not modify the existing labels.\\n\\nNotes:\\n\\n- Labels can also be added when creating content ([Create content](#api-content-post)).\\n- Labels can be updated when updating content ([Update content](#api-content-id-put)).\\nThis will delete the existing labels and replace them with the labels in\\nthe request.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to update the content.\",\n        \"operationId\": \"addLabelsToContent\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content that will have labels added to it.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The labels to add to the content.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/LabelCreateArray\"\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/LabelCreate\"\n                  }\n                ]\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the labels are added to the content.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LabelArray\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if;\\n\\n- The body contains labels with invalid characters or too many characters.\\n- The body contains too many labels.\\n- The target content would contain too many labels after the operation.\\n- The calling user does not have permission to edit labels.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user can view but not edit the content.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no content with the given ID.\\n- The calling user does not have permission to view the content.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:label:confluence\",\n              \"write:label:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:label:confluence\",\n              \"write:label:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Content labels\"\n        ],\n        \"summary\": \"Remove label from content using query parameter\",\n        \"description\": \"Removes a label from a piece of content. This is similar to\\n[Remove label from content](#api-content-id-label-label-delete)\\nexcept that the label name is specified via a query parameter.\\n\\nUse this method if the label name has \\\"/\\\" characters, as\\n[Remove label from content using query parameter](#api-content-id-label-delete)\\ndoes not accept \\\"/\\\" characters for the label name.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to update the content.\",\n        \"operationId\": \"removeLabelFromContentUsingQueryParameter\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content that the label will be removed from.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"The name of the label to be removed.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Returned if the label is removed. The response body will be empty.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user can view but not edit the content.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no content with the given ID.\\n- The calling user does not have permission to view the content.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:label:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:label:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}/label/{label}\": {\n      \"delete\": {\n        \"tags\": [\n          \"Content labels\"\n        ],\n        \"summary\": \"Remove label from content\",\n        \"description\": \"Removes a label from a piece of content. This is similar to\\n[Remove label from content using query parameter](#api-content-id-label-delete)\\nexcept that the label name is specified via a path parameter.\\n\\nUse this method if the label name does not have \\\"/\\\" characters, as the path\\nparameter does not accept \\\"/\\\" characters for security reasons. Otherwise,\\nuse [Remove label from content using query parameter](#api-content-id-label-delete).\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to update the content.\",\n        \"operationId\": \"removeLabelFromContent\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content that the label will be removed from.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"label\",\n            \"in\": \"path\",\n            \"description\": \"The name of the label to be removed.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Returned if the label is removed. The response body will be empty.\",\n            \"content\": {}\n          },\n          \"400\": {\n            \"description\": \"Returned if the label name has a \\\"/\\\" character.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user can view but not edit the content.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no content with the given ID.\\n- The calling user does not have permission to view the content.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:label:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:label:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}/notification/child-created\": {\n      \"get\": {\n        \"tags\": [\n          \"Content watches\"\n        ],\n        \"summary\": \"Get watches for page\",\n        \"description\": \"Returns the watches for a page. A user that watches a page will receive\\nreceive notifications when the page is updated.\\n\\nIf you want to manage watches for a page, use the following `user` methods:\\n\\n- [Get content watch status for user](#api-user-watch-content-contentId-get)\\n- [Add content watch](#api-user-watch-content-contentId-post)\\n- [Remove content watch](#api-user-watch-content-contentId-delete)\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"getWatchesForPage\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to be queried for its watches.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned watches.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of watches to return per page.\\nNote, this may be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 200\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested watches are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/WatchArray\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:watcher:confluence\",\n              \"read:user:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:watcher:confluence\",\n              \"read:user:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}/notification/created\": {\n      \"get\": {\n        \"tags\": [\n          \"Content watches\"\n        ],\n        \"summary\": \"Get watches for space\",\n        \"description\": \"Returns all space watches for the space that the content is in. A user that\\nwatches a space will receive receive notifications when any content in the\\nspace is updated.\\n\\nIf you want to manage watches for a space, use the following `user` methods:\\n\\n- [Get space watch status for user](#api-user-watch-space-spaceKey-get)\\n- [Add space watch](#api-user-watch-space-spaceKey-post)\\n- [Remove space watch](#api-user-watch-space-spaceKey-delete)\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"getWatchesForSpace\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to be queried for its watches.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned watches.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of watches to return per page.\\nNote, this may be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 200\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested watches are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SpaceWatchArray\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:watcher:confluence\",\n              \"read:user:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:watcher:confluence\",\n              \"read:user:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}/pagehierarchy/copy\": {\n      \"post\": {\n        \"tags\": [\n          \"Content - children and descendants\"\n        ],\n        \"summary\": \"Copy page hierarchy\",\n        \"description\": \"Copy page hierarchy allows the copying of an entire hierarchy of pages and their associated properties, permissions and attachments.\\n The id path parameter refers to the content id of the page to copy, and the new parent of this copied page is defined using the destinationPageId in the request body.\\n The titleOptions object defines the rules of renaming page titles during the copy;\\n for example, search and replace can be used in conjunction to rewrite the copied page titles.\\n\\n Response example:\\n \u003cpre\u003e\u003ccode\u003e\\n {\\n      \\\"id\\\" : \\\"1180606\\\",\\n      \\\"links\\\" : {\\n           \\\"status\\\" : \\\"/rest/api/longtask/1180606\\\"\\n      }\\n }\\n \u003c/code\u003e\u003c/pre\u003e\\n Use the /longtask/\u003ctaskId\u003e REST API to get the copy task status.\",\n        \"operationId\": \"copyPageHierarchy\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Request object from json post body\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CopyPageHierarchyRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"202\": {\n            \"description\": \"Returns a full JSON representation of a long running task\",\n            \"content\": {}\n          },\n          \"400\": {\n            \"description\": \"Returned if the title prefix is invalid (e.g. is empty, creates a conflict)\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user does not have permission to create content at destination\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if original page or destination page does not exist.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content.metadata:confluence\",\n              \"write:page:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content.metadata:confluence\",\n              \"write:page:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"request\",\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}/copy\": {\n      \"post\": {\n        \"tags\": [\n          \"Content - children and descendants\"\n        ],\n        \"summary\": \"Copy single page\",\n        \"description\": \"Copies a single page and its associated properties, permissions, attachments, and custom contents.\\n The `id` path parameter refers to the content ID of the page to copy. The target of the page to be copied\\n is defined using the `destination` in the request body and can be one of the following types.\\n\\n  - `space`: page will be copied to the specified space as a root page on the space\\n  - `parent_page`: page will be copied as a child of the specified parent page\\n  - `existing_page`: page will be copied and replace the specified page\\n\\nBy default, the following objects are expanded: `space`, `history`, `version`.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'Add' permission for the space that the content will be copied in and permission to update the content if copying to an `existing_page`.\",\n        \"operationId\": \"copyPage\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/contentExpandWithSubExpandLimit\"\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Request object from json post body\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CopyPageRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the content is copied.\",\n            \"content\": {\n              \"application/json;charset=UTF-8\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Content\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if;\\n\\n- destination or any of its fields are not specified.\\n- destination.type is invalid.\\n- sub-expansions limit exceeds.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user does not have permission to create content at destination.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- the original page doesn't exist.\\n- the destination page doesn’t exist.\\n- the destination space doesn’t exist.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\",\n              \"write:page:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\",\n              \"write:page:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"request\",\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}/permission/check\": {\n      \"post\": {\n        \"tags\": [\n          \"Content permissions\"\n        ],\n        \"summary\": \"Check content permissions\",\n        \"description\": \"Check if a user or a group can perform an operation to the specified content. The `operation` to check\\nmust be provided. The user’s account ID or the ID of the group can be provided in the `subject` to check\\npermissions against a specified user or group. The following permission checks are done to make sure that the\\nuser or group has the proper access:\\n\\n- site permissions\\n- space permissions\\n- content restrictions\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission) if checking permission for self,\\notherwise 'Confluence Administrator' global permission is required.\",\n        \"operationId\": \"checkContentPermission\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to check permissions against.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The content permission request.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ContentPermissionRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the permission check completed successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PermissionCheckResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if;\\n\\n- If any of the required fields are missing.\\n- If specified `subject` or `operation` is invalid.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user does not have permission perform the check.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if there is no content with the given ID.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content.permission:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.permission\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content.permission:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}/property\": {\n      \"get\": {\n        \"tags\": [\n          \"Content properties\"\n        ],\n        \"summary\": \"Get content properties\",\n        \"description\": \"Returns the properties for a piece of content. For more information\\nabout content properties, see [Confluence entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'View' permission for the space, and permission to view the content if it is a page.\",\n        \"operationId\": \"getContentProperties\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to be queried for its properties.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"query\",\n            \"description\": \"The key of the content property.\",\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"name\": \"expand\",\n            \"in\": \"query\",\n            \"description\": \"A multi-value parameter indicating which properties of the content to\\nexpand. By default, the `version` object is expanded.\\n\\n- `content` returns the content that the property is stored against.\\n- `version` returns information about the version of the property, such\\nas the version number, when it was created, etc.\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"content\",\n                  \"version\"\n                ]\n              }\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned properties.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of properties to return per page.\\nNote, this may be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 10\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested properties are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContentPropertyArray\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no content with the given ID\\n- The calling user does not have permission to view the content.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-props\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"post\": {\n        \"tags\": [\n          \"Content properties\"\n        ],\n        \"summary\": \"Create content property\",\n        \"description\": \"Creates a property for an existing piece of content. For more information\\nabout content properties, see [Confluence entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).\\n\\nThis is the same as [Create content property for key](#api-content-id-property-key-post)\\nexcept that the key is specified in the request body instead of as a\\npath parameter.\\n\\nContent properties can also be added when creating a new piece of content\\nby including them in the `metadata.properties` of the request.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to update the content.\",\n        \"operationId\": \"createContentProperty\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to add the property to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The content property to be created.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ContentPropertyCreate\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the content property is created.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContentProperty\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if;\\n\\n- The content already has a property with the given key.\\n- The key is too long.\\n- The key is empty.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user does not have permission to edit the content\\nwith the given ID.\",\n            \"content\": {}\n          },\n          \"413\": {\n            \"description\": \"Returned if the value is too long.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content.property:confluence\",\n              \"write:content.property:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-props\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content.property:confluence\",\n              \"write:content.property:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}/property/{key}\": {\n      \"get\": {\n        \"tags\": [\n          \"Content properties\"\n        ],\n        \"summary\": \"Get content property\",\n        \"description\": \"Returns a content property for a piece of content. For more information, see\\n[Confluence entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'View' permission for the space, and permission to view the content if it is a page.\",\n        \"operationId\": \"getContentProperty\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to be queried for the property.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"The key of the content property.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"expand\",\n            \"in\": \"query\",\n            \"description\": \"A multi-value parameter indicating which properties of the content to\\nexpand. By default, the `version` object is expanded.\\n\\n- `content` returns the content that the property is stored against.\\n- `version` returns information about the version of the property, such\\nas the version number, when it was created, etc.\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"content\",\n                  \"version\"\n                ]\n              }\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Filter the results to a set of content based on their status. If set to `any`,\\ncontent with any status is returned. By default it will fetch current and archived statuses `?status=current\u0026status=archived`.\\nAll supported statuses\\n\\n- any\\n- archived\\n- current\\n- deleted\\n- draft\\n- trashed\",\n            \"style\": \"form\",\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"default\": [\n                \"current\",\n                \"archived\"\n              ],\n              \"enum\": [\n                \"any\",\n                \"archived\",\n                \"current\",\n                \"deleted\",\n                \"draft\",\n                \"trashed\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the content property is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContentProperty\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- The calling user does not have permission to view the content.\\n- There is no content with the given ID.\\n- There is no property with the given key.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-props\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"put\": {\n        \"tags\": [\n          \"Content properties\"\n        ],\n        \"summary\": \"Update content property\",\n        \"description\": \"Updates an existing content property. This method will also create a new\\nproperty for a piece of content, if the property key does not exist and\\nthe property version is 1. For more information about content properties, see\\n[Confluence entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to update the content.\",\n        \"operationId\": \"updateContentProperty\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content that the property belongs to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"The key of the property.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The content property being updated.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ContentPropertyUpdate\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the content property is created.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContentProperty\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if;\\n\\n- The content already a property with the given key.\\n- The key is too long.\\n- The key is empty.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user does not have permission to edit the content\\nwith the given ID.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no content with the given ID.\\n- The calling user does not have permission to view the content.\\n- There is no property with the given key and the version number is not 1.\",\n            \"content\": {}\n          },\n          \"409\": {\n            \"description\": \"Returned if the property version is not correctly incremented.\",\n            \"content\": {}\n          },\n          \"413\": {\n            \"description\": \"Returned if the value is too long.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content.property:confluence\",\n              \"write:content.property:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-props\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content.property:confluence\",\n              \"write:content.property:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      },\n      \"post\": {\n        \"tags\": [\n          \"Content properties\"\n        ],\n        \"summary\": \"Create content property for key\",\n        \"description\": \"Creates a property for an existing piece of content. For more information\\nabout content properties, see [Confluence entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).\\n\\nThis is the same as [Create content property](#api-content-id-property-post)\\nexcept that the key is specified as a path parameter instead of in the\\nrequest body.\\n\\nContent properties can also be added when creating a new piece of content\\nby including them in the `metadata.properties` of the request.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to update the content.\",\n        \"operationId\": \"createContentPropertyForKey\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to add the property to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"The key of the content property. Required.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The content property to be created.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ContentPropertyCreateNoKey\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the content property is created.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContentProperty\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if;\\n\\n- The content already has a property with the given key.\\n- The key is too long.\\n- The key is empty.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user does not have permission to edit the content\\nwith the given ID.\",\n            \"content\": {}\n          },\n          \"413\": {\n            \"description\": \"Returned if the value is too long.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content.property:confluence\",\n              \"write:content.property:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-props\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content.property:confluence\",\n              \"write:content.property:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Content properties\"\n        ],\n        \"summary\": \"Delete content property\",\n        \"description\": \"Deletes a content property. For more information about content properties, see\\n[Confluence entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to update the content.\",\n        \"operationId\": \"deleteContentProperty\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content that the property belongs to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"The key of the property.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Returned if the content property is deleted.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user does not have permission to delete content\\nwith the given ID.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no content with the given ID.\\n- The calling user does not have permission to view the content.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:content.property:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-props\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:content.property:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}/restriction\": {\n      \"get\": {\n        \"tags\": [\n          \"Content restrictions\"\n        ],\n        \"summary\": \"Get restrictions\",\n        \"description\": \"Returns the restrictions on a piece of content.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to view the content.\",\n        \"operationId\": \"getRestrictions\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to be queried for its restrictions.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"expand\",\n            \"in\": \"query\",\n            \"description\": \"A multi-value parameter indicating which properties of the content\\nrestrictions to expand. By default, the following objects are expanded:\\n`restrictions.user`, `restrictions.group`.\\n\\n- `restrictions.user` returns the piece of content that the restrictions are\\napplied to.\\n- `restrictions.group` returns the piece of content that the restrictions are\\napplied to.\\n- `content` returns the piece of content that the restrictions are\\napplied to.\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"restrictions.user\",\n                  \"read.restrictions.user\",\n                  \"update.restrictions.user\",\n                  \"restrictions.group\",\n                  \"read.restrictions.group\",\n                  \"update.restrictions.group\",\n                  \"content\"\n                ]\n              }\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the users and groups in the returned restrictions.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of users and the maximum number of groups, in the\\nreturned restrictions, to return per page. Note, this may be restricted\\nby fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested restrictions are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContentRestrictionArray\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no content with the given ID.\\n- The calling user does not have permission to view the content.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.all\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"put\": {\n        \"tags\": [\n          \"Content restrictions\"\n        ],\n        \"summary\": \"Update restrictions\",\n        \"description\": \"Updates restrictions for a piece of content. This removes the existing\\nrestrictions and replaces them with the restrictions in the request.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to edit the content.\",\n        \"operationId\": \"updateRestrictions\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to update restrictions for.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"expand\",\n            \"in\": \"query\",\n            \"description\": \"A multi-value parameter indicating which properties of the content\\nrestrictions (returned in response) to expand.\\n\\n- `restrictions.user` returns the piece of content that the restrictions are\\napplied to. Expanded by default.\\n- `restrictions.group` returns the piece of content that the restrictions are\\napplied to. Expanded by default.\\n- `content` returns the piece of content that the restrictions are\\napplied to.\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"restrictions.user\",\n                  \"read.restrictions.user\",\n                  \"update.restrictions.user\",\n                  \"restrictions.group\",\n                  \"read.restrictions.group\",\n                  \"update.restrictions.group\",\n                  \"content\"\n                ]\n              }\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The updated restrictions for the content.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ContentRestrictionAddOrUpdateArray\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested restrictions are updated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContentRestrictionArray\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no content with the given ID.\\n- The calling user does not have permission to update restrictions\\nfor the content.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\",\n              \"write:content.restriction:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\",\n              \"write:content.restriction:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      },\n      \"post\": {\n        \"tags\": [\n          \"Content restrictions\"\n        ],\n        \"summary\": \"Add restrictions\",\n        \"description\": \"Adds restrictions to a piece of content. Note, this does not change any\\nexisting restrictions on the content.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to edit the content.\",\n        \"operationId\": \"addRestrictions\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to add restrictions to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"expand\",\n            \"in\": \"query\",\n            \"description\": \"A multi-value parameter indicating which properties of the content\\nrestrictions (returned in response) to expand.\\n\\n- `restrictions.user` returns the piece of content that the restrictions are\\napplied to. Expanded by default.\\n- `restrictions.group` returns the piece of content that the restrictions are\\napplied to. Expanded by default.\\n- `content` returns the piece of content that the restrictions are\\napplied to.\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"restrictions.user\",\n                  \"read.restrictions.user\",\n                  \"update.restrictions.user\",\n                  \"restrictions.group\",\n                  \"read.restrictions.group\",\n                  \"update.restrictions.group\",\n                  \"content\"\n                ]\n              }\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The restrictions to be added to the content.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ContentRestrictionAddOrUpdateArray\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested restrictions are added.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContentRestrictionArray\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no content with the given ID.\\n- The calling user does not have permission to add restrictions to\\nthe content.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\",\n              \"write:content.restriction:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\",\n              \"write:content.restriction:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Content restrictions\"\n        ],\n        \"summary\": \"Delete restrictions\",\n        \"description\": \"Removes all restrictions (read and update) on a piece of content.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to edit the content.\",\n        \"operationId\": \"deleteRestrictions\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to remove restrictions from.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"expand\",\n            \"in\": \"query\",\n            \"description\": \"A multi-value parameter indicating which properties of the content\\nrestrictions (returned in response) to expand.\\n\\n- `restrictions.user` returns the piece of content that the restrictions are\\napplied to. Expanded by default.\\n- `restrictions.group` returns the piece of content that the restrictions are\\napplied to. Expanded by default.\\n- `content` returns the piece of content that the restrictions are\\napplied to.\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"restrictions.user\",\n                  \"read.restrictions.user\",\n                  \"update.restrictions.user\",\n                  \"restrictions.group\",\n                  \"read.restrictions.group\",\n                  \"update.restrictions.group\",\n                  \"content\"\n                ]\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the restrictions are removed.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContentRestrictionArray\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if any of the above validation rules are violated\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to alter the\\nrestrictions on the content.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no content with the given ID.\\n- The calling user does not have permission to view the content.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\",\n              \"write:content.restriction:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\",\n              \"write:content.restriction:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"DELETE\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}/restriction/byOperation\": {\n      \"get\": {\n        \"tags\": [\n          \"Content restrictions\"\n        ],\n        \"summary\": \"Get restrictions by operation\",\n        \"description\": \"Returns restrictions on a piece of content by operation. This method is\\nsimilar to [Get restrictions](#api-content-id-restriction-get) except that\\nthe operations are properties of the return object, rather than items in\\na results array.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to view the content.\",\n        \"operationId\": \"getRestrictionsByOperation\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to be queried for its restrictions.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"expand\",\n            \"in\": \"query\",\n            \"description\": \"A multi-value parameter indicating which properties of the content\\nrestrictions to expand.\\n\\n- `restrictions.user` returns the piece of content that the restrictions are\\napplied to. Expanded by default.\\n- `restrictions.group` returns the piece of content that the restrictions are\\napplied to. Expanded by default.\\n- `content` returns the piece of content that the restrictions are\\napplied to.\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"restrictions.user\",\n                  \"restrictions.group\",\n                  \"content\"\n                ]\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested restrictions are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"properties\": {\n                      \"operationType\": {\n                        \"$ref\": \"#/components/schemas/ContentRestriction\"\n                      },\n                      \"_links\": {\n                        \"$ref\": \"#/components/schemas/GenericLinks\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.all\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}/restriction/byOperation/{operationKey}\": {\n      \"get\": {\n        \"tags\": [\n          \"Content restrictions\"\n        ],\n        \"summary\": \"Get restrictions for operation\",\n        \"description\": \"Returns the restictions on a piece of content for a given operation (read\\nor update).\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to view the content.\",\n        \"operationId\": \"getRestrictionsForOperation\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to be queried for its restrictions.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"operationKey\",\n            \"in\": \"path\",\n            \"description\": \"The operation type of the restrictions to be returned.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"read\",\n                \"update\"\n              ]\n            }\n          },\n          {\n            \"name\": \"expand\",\n            \"in\": \"query\",\n            \"description\": \"A multi-value parameter indicating which properties of the content\\nrestrictions to expand.\\n\\n- `restrictions.user` returns the piece of content that the restrictions are\\napplied to. Expanded by default.\\n- `restrictions.group` returns the piece of content that the restrictions are\\napplied to. Expanded by default.\\n- `content` returns the piece of content that the restrictions are\\napplied to.\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"restrictions.user\",\n                  \"restrictions.group\",\n                  \"content\"\n                ]\n              }\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the users and groups in the returned restrictions.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of users and the maximum number of groups, in the\\nreturned restrictions, to return per page. Note, this may be restricted\\nby fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested restrictions are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContentRestriction\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.all\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}/restriction/byOperation/{operationKey}/group/{groupName}\": {\n      \"get\": {\n        \"tags\": [\n          \"Content restrictions\"\n        ],\n        \"summary\": \"Get content restriction status for group\",\n        \"description\": \"Returns whether the specified content restriction applies to a group.\\nFor example, if a page with `id=123` has a `read` restriction for the `admins` group,\\nthe following request will return `true`:\\n\\n`/wiki/rest/api/content/123/restriction/byOperation/read/group/admins`\\n\\nNote that a response of `true` does not guarantee that the group can view the page, as it does not account for\\naccount-inherited restrictions, space permissions, or even product access. For more\\ninformation, see [Confluence permissions](https://confluence.atlassian.com/x/_AozKw).\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to view the content.\",\n        \"operationId\": \"getContentRestrictionStatusForGroup\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content that the restriction applies to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"operationKey\",\n            \"in\": \"path\",\n            \"description\": \"The operation that the restriction applies to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"read\",\n                \"update\"\n              ]\n            }\n          },\n          {\n            \"name\": \"groupName\",\n            \"in\": \"path\",\n            \"description\": \"The name of the group to be queried for whether the content restriction\\napplies to it.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns true if the content restriction applies to the group. The response\\nwill not return a response body.\",\n            \"content\": {}\n          },\n          \"400\": {\n            \"description\": \"Returned if;\\n\\n- Group name is missing\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no content with the given ID.\\n- The calling user does not have permission to view the content.\\n- An invalid operation or group is specified.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content.restriction:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.all\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content.restriction:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"put\": {\n        \"tags\": [\n          \"Content restrictions\"\n        ],\n        \"summary\": \"Add group to content restriction\",\n        \"description\": \"Adds a group to a content restriction. That is, grant read or update\\npermission to the group for a piece of content.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to edit the content.\",\n        \"operationId\": \"addGroupToContentRestriction\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content that the restriction applies to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"operationKey\",\n            \"in\": \"path\",\n            \"description\": \"The operation that the restriction applies to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"read\",\n                \"update\"\n              ]\n            }\n          },\n          {\n            \"name\": \"groupName\",\n            \"in\": \"path\",\n            \"description\": \"The name of the group to add to the content restriction.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the group is added to the content restriction. The response\\nbody will be empty.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no content with the given ID.\\n- The calling user does not have permission to view the content.\\n- An invalid operation or group is specified.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:content.restriction:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:content.restriction:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Content restrictions\"\n        ],\n        \"summary\": \"Remove group from content restriction\",\n        \"description\": \"Removes a group from a content restriction. That is, remove read or update\\npermission for the group for a piece of content.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to edit the content.\",\n        \"operationId\": \"removeGroupFromContentRestrictionById\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content that the restriction applies to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"operationKey\",\n            \"in\": \"path\",\n            \"description\": \"The operation that the restriction applies to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"read\",\n                \"update\"\n              ]\n            }\n          },\n          {\n            \"name\": \"groupName\",\n            \"in\": \"path\",\n            \"description\": \"The name of the group to remove from the content restriction.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the group is removed from the content restriction. The response\\nbody will be empty.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no content with the given ID.\\n- The calling user does not have permission to view the content.\\n- The restriction to be deleted does not exist.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:content.restriction:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:content.restriction:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}/restriction/byOperation/{operationKey}/byGroupId/{groupId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Content restrictions\"\n        ],\n        \"summary\": \"Get content restriction status for group\",\n        \"description\": \"Returns whether the specified content restriction applies to a group.\\nFor example, if a page with `id=123` has a `read` restriction for the `123456` group id,\\nthe following request will return `true`:\\n\\n`/wiki/rest/api/content/123/restriction/byOperation/read/byGroupId/123456`\\n\\nNote that a response of `true` does not guarantee that the group can view the page, as it does not account for\\naccount-inherited restrictions, space permissions, or even product access. For more\\ninformation, see [Confluence permissions](https://confluence.atlassian.com/x/_AozKw).\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to view the content.\",\n        \"operationId\": \"getIndividualGroupRestrictionStatusByGroupId\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content that the restriction applies to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"operationKey\",\n            \"in\": \"path\",\n            \"description\": \"The operation that the restriction applies to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"read\",\n                \"update\"\n              ]\n            }\n          },\n          {\n            \"name\": \"groupId\",\n            \"in\": \"path\",\n            \"description\": \"The id of the group to be queried for whether the content restriction\\napplies to it.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns true if the content restriction applies to the group. The response\\nwill not return a response body.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to view the\\ncontent.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if\\n- There is no content with the given ID.\\n- An invalid operation or group is specified.\\n- Given groupId is blank or has invalid characters\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content.restriction:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.all\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content.restriction:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"put\": {\n        \"tags\": [\n          \"Content restrictions\"\n        ],\n        \"summary\": \"Add group to content restriction\",\n        \"description\": \"Adds a group to a content restriction by Group Id. That is, grant read or update\\npermission to the group for a piece of content.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to edit the content.\",\n        \"operationId\": \"addGroupToContentRestrictionByGroupId\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content that the restriction applies to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"operationKey\",\n            \"in\": \"path\",\n            \"description\": \"The operation that the restriction applies to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"read\",\n                \"update\"\n              ]\n            }\n          },\n          {\n            \"name\": \"groupId\",\n            \"in\": \"path\",\n            \"description\": \"The groupId of the group to add to the content restriction.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the group is added to the content restriction by Group Id. The response\\nbody will be empty.\",\n            \"content\": {}\n          },\n          \"400\": {\n            \"description\": \"Returned if;\\n- Group Id is not valid\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to update the\\ncontent.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n- There is no content with the given ID.\\n- The calling user does not have permission to view the content.\\n- An invalid operation or group id is specified.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:content.restriction:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:content.restriction:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Content restrictions\"\n        ],\n        \"summary\": \"Remove group from content restriction\",\n        \"description\": \"Removes a group from a content restriction. That is, remove read or update\\npermission for the group for a piece of content.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to edit the content.\",\n        \"operationId\": \"removeGroupFromContentRestriction\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content that the restriction applies to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"operationKey\",\n            \"in\": \"path\",\n            \"description\": \"The operation that the restriction applies to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"read\",\n                \"update\"\n              ]\n            }\n          },\n          {\n            \"name\": \"groupId\",\n            \"in\": \"path\",\n            \"description\": \"The id of the group to remove from the content restriction.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the group is removed from the content restriction. The response\\nbody will be empty.\",\n            \"content\": {}\n          },\n          \"400\": {\n            \"description\": \"Returned if given group id is blank\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to view the content.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no content with the given ID.\\n- The calling user does not have permission to view the content.\\n- The restriction to be deleted does not exist.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:content.restriction:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:content.restriction:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}/restriction/byOperation/{operationKey}/user\": {\n      \"get\": {\n        \"tags\": [\n          \"Content restrictions\"\n        ],\n        \"summary\": \"Get content restriction status for user\",\n        \"description\": \"Returns whether the specified content restriction applies to a user.\\nFor example, if a page with `id=123` has a `read` restriction for a user with an account ID of\\n`384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`, the following request will return `true`:\\n\\n`/wiki/rest/api/content/123/restriction/byOperation/read/user?accountId=384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`\\n\\nNote that a response of `true` does not guarantee that the user can view the page, as it does not account for\\naccount-inherited restrictions, space permissions, or even product access. For more\\ninformation, see [Confluence permissions](https://confluence.atlassian.com/x/_AozKw).\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to view the content.\",\n        \"operationId\": \"getContentRestrictionStatusForUser\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content that the restriction applies to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"operationKey\",\n            \"in\": \"path\",\n            \"description\": \"The operation that is restricted.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupKey\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupUsername\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupAccountId\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Return true if the content restriction applies to the user. The response\\nbody will be empty.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no content with the given ID.\\n- The calling user does not have permission to view the content.\\n- An invalid operation or user is specified.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content.restriction:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.all\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content.restriction:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"put\": {\n        \"tags\": [\n          \"Content restrictions\"\n        ],\n        \"summary\": \"Add user to content restriction\",\n        \"description\": \"Adds a user to a content restriction. That is, grant read or update\\npermission to the user for a piece of content.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to edit the content.\",\n        \"operationId\": \"addUserToContentRestriction\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content that the restriction applies to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"operationKey\",\n            \"in\": \"path\",\n            \"description\": \"The operation that the restriction applies to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupKey\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupUsername\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupAccountId\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the user is added to the content restriction. The response\\nbody will be empty.\",\n            \"content\": {}\n          },\n          \"400\": {\n            \"description\": \"Returned if;\\n\\n- Provided restrictions are invalid\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no content with the given ID.\\n- The calling user does not have permission to view the content.\\n- An invalid operation or group is specified.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:content.restriction:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:content.restriction:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Content restrictions\"\n        ],\n        \"summary\": \"Remove user from content restriction\",\n        \"description\": \"Removes a group from a content restriction. That is, remove read or update\\npermission for the group for a piece of content.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to edit the content.\",\n        \"operationId\": \"removeUserFromContentRestriction\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content that the restriction applies to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"operationKey\",\n            \"in\": \"path\",\n            \"description\": \"The operation that the restriction applies to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"read\",\n                \"update\"\n              ]\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupKey\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupUsername\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupAccountId\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the user is removed from the content restriction. The response\\nbody will be empty.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no content with the given ID.\\n- The calling user does not have permission to view the content.\\n- An invalid operation or group is specified.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:content.restriction:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:content.restriction:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}/version\": {\n      \"get\": {\n        \"tags\": [\n          \"Content versions\"\n        ],\n        \"summary\": \"Get content versions\",\n        \"description\": \"Returns the versions for a piece of content in descending order.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to view the content. If the content is a blog post, 'View' permission\\nfor the space is required.\",\n        \"operationId\": \"getContentVersions\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to be queried for its versions.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned versions.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of versions to return per page.\\nNote, this may be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 200\n            }\n          },\n          {\n            \"name\": \"expand\",\n            \"in\": \"query\",\n            \"description\": \"A multi-value parameter indicating which properties of the content to expand. By default, the `content`\\nobject is expanded.\\n\\n- `collaborators` returns the users that collaborated on the version.\\n- `content` returns the content for the version.\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested versions are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/VersionArray\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to view the\\ncontent.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"post\": {\n        \"tags\": [\n          \"Content versions\"\n        ],\n        \"summary\": \"Restore content version\",\n        \"description\": \"Restores a historical version to be the latest version. That is, a new version\\nis created with the content of the historical version.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to update the content.\",\n        \"operationId\": \"restoreContentVersion\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content for which the history will be restored.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"expand\",\n            \"in\": \"query\",\n            \"description\": \"A multi-value parameter indicating which properties of the content to expand. By default, the `content`\\nobject is expanded.\\n\\n- `collaborators` returns the users that collaborated on the version.\\n- `content` returns the content for the version.\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The content version to be restored.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/VersionRestore\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the version is restored.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Version\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if;\\n\\n- There is no content with the given ID.\\n- There is no version with the given version number.\\n- The version number is the current version.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user doesn't have permission to edit the\\ncontent.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\",\n              \"write:content:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\",\n              \"write:content:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/content/{id}/version/{versionNumber}\": {\n      \"get\": {\n        \"tags\": [\n          \"Content versions\"\n        ],\n        \"summary\": \"Get content version\",\n        \"description\": \"Returns a version for a piece of content.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to view the content. If the content is a blog post, 'View' permission\\nfor the space is required.\",\n        \"operationId\": \"getContentVersion\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to be queried for its version.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"versionNumber\",\n            \"in\": \"path\",\n            \"description\": \"The number of the version to be retrieved.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"expand\",\n            \"in\": \"query\",\n            \"description\": \"A multi-value parameter indicating which properties of the content to expand. By default, the `content`\\nobject is expanded.\\n\\n- `collaborators` returns the users that collaborated on the version.\\n- `content` returns the content for the version.\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the version is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Version\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to view the\\ncontent.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if the content or version cannot be found.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Content versions\"\n        ],\n        \"summary\": \"Delete content version\",\n        \"description\": \"Delete a historical version. This does not delete the changes made to the\\ncontent in that version, rather the changes for the deleted version are\\nrolled up into the next version. Note, you cannot delete the current version.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to update the content.\",\n        \"operationId\": \"deleteContentVersion\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content that the version will be deleted from.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"versionNumber\",\n            \"in\": \"path\",\n            \"description\": \"The number of the version to be deleted. The version number starts\\nfrom 1 up to current version.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Returned if the version is deleted.\",\n            \"content\": {}\n          },\n          \"400\": {\n            \"description\": \"Returned if;\\n\\n- The content or version cannot be found.\\n- The current version is specified.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user doesn't have permission to edit the\\ncontent.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"delete:content:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"delete:content:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"DELETE\"\n      }\n    },\n    \"/wiki/rest/api/contentbody/convert/{to}\": {\n      \"post\": {\n        \"tags\": [\n          \"Content body\"\n        ],\n        \"summary\": \"Convert content body\",\n        \"description\": \"Converts a content body from one format to another format.\\n\\nSupported conversions:\\n\\n- storage: view, export_view, styled_view, editor\\n- editor: storage\\n- view: none\\n- export_view: none\\n- styled_view: none\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nIf request specifies 'contentIdContext', 'View' permission for the space, and permission to view the content.\",\n        \"operationId\": \"convertContentBody\",\n        \"parameters\": [\n          {\n            \"name\": \"to\",\n            \"in\": \"path\",\n            \"description\": \"The name of the target format for the content body.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/contentExpand\"\n          },\n          {\n            \"name\": \"spaceKeyContext\",\n            \"in\": \"query\",\n            \"description\": \"The space key used for resolving embedded content (page includes,\\nfiles, and links) in the content body. For example, if the source content\\ncontains the link `\u003cac:link\u003e\u003cri:page ri:content-title=\\\"Example page\\\" /\u003e\u003cac:link\u003e`\\nand the `spaceKeyContext=TEST` parameter is provided, then the link\\nwill be converted to a link to the \\\"Example page\\\" page in the \\\"TEST\\\" space.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"contentIdContext\",\n            \"in\": \"query\",\n            \"description\": \"The content ID used to find the space for resolving embedded content\\n(page includes, files, and links) in the content body. For example,\\nif the source content contains the link `\u003cac:link\u003e\u003cri:page ri:content-title=\\\"Example page\\\" /\u003e\u003cac:link\u003e`\\nand the `contentIdContext=123` parameter is provided, then the link\\nwill be converted to a link to the \\\"Example page\\\" page in the same space\\nthat has the content with ID=123. Note, `spaceKeyContext` will be ignored\\nif this parameter is provided.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"embeddedContentRender\",\n            \"in\": \"query\",\n            \"description\": \"Mode used for rendering embedded content, like attachments.\\n\\n- `current` renders the embedded content using the latest version.\\n- `version-at-save` renders the embedded content using the version at\\nthe time of save.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"current\",\n              \"enum\": [\n                \"current\",\n                \"version-at-save\"\n              ]\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The content body to convert.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the content is converted.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContentBody\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if the content body is invalid or if the value is improperly formed.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if content cannot be found with the provided context.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content.metadata:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.all\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content.metadata:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/inlinetasks/search\": {\n      \"get\": {\n        \"tags\": [\n          \"Inline tasks\"\n        ],\n        \"summary\": \"Get inline tasks based on search parameters\",\n        \"description\": \"Returns inline tasks based on the search query.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission). Only tasks\\nin contents that the user has permission to view are returned.\",\n        \"operationId\": \"searchTasks\",\n        \"parameters\": [\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting offset for the results.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The number of results to be returned.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 20\n            }\n          },\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"query\",\n            \"description\": \"The space key of a space. Multiple space keys can be specified.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": null\n            }\n          },\n          {\n            \"name\": \"pageId\",\n            \"in\": \"query\",\n            \"description\": \"The page id of a page. Multiple page ids can be specified.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": null\n            }\n          },\n          {\n            \"name\": \"assignee\",\n            \"in\": \"query\",\n            \"description\": \"Account ID of a user to whom a task is assigned. Multiple users can be specified.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": null\n            }\n          },\n          {\n            \"name\": \"creator\",\n            \"in\": \"query\",\n            \"description\": \"Account ID of a user to who created a task. Multiple users can be specified.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": null\n            }\n          },\n          {\n            \"name\": \"completedUser\",\n            \"in\": \"query\",\n            \"description\": \"Account ID of a user who completed a task. Multiple users can be specified.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": null\n            }\n          },\n          {\n            \"name\": \"duedateFrom\",\n            \"in\": \"query\",\n            \"description\": \"Start of date range based on due dates (inclusive).\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"duedateTo\",\n            \"in\": \"query\",\n            \"description\": \"End of date range based on due dates (inclusive).\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"createdateFrom\",\n            \"in\": \"query\",\n            \"description\": \"Start of date range based on create dates (inclusive).\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"createdateTo\",\n            \"in\": \"query\",\n            \"description\": \"End of date range based on create dates (inclusive).\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"completedateFrom\",\n            \"in\": \"query\",\n            \"description\": \"Start of date range based on complete dates (inclusive).\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"completedateTo\",\n            \"in\": \"query\",\n            \"description\": \"End of date range based on complete dates (inclusive).\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"The status of the task. (checked/unchecked)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": null,\n              \"enum\": [\n                \"complete\",\n                \"incomplete\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the query fetches zero or more results.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TaskPageResponse\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to view\\nany content.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:inlinetask:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.all\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:inlinetask:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/inlinetasks/{inlineTaskId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Inline tasks\"\n        ],\n        \"summary\": \"Get inline task based on global ID\",\n        \"description\": \"Returns inline task based on the global ID.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to view the content associated with the task.\",\n        \"operationId\": \"getTaskById\",\n        \"parameters\": [\n          {\n            \"name\": \"inlineTaskId\",\n            \"in\": \"path\",\n            \"description\": \"Global ID of the inline task\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the inline task was found given the global ID\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Task\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing from the request.\"\n          },\n          \"403\": {\n            \"description\": \"Returned if the user does not have permission to view the content associated with the task.\"\n          },\n          \"404\": {\n            \"description\": \"Returned if task could not be found with the given global ID.\"\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:inlinetask:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:inlinetask:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"put\": {\n        \"tags\": [\n          \"Inline tasks\"\n        ],\n        \"summary\": \"Update inline task given global ID\",\n        \"description\": \"Updates an inline tasks status given its global ID\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to update the content associated with the task.\",\n        \"operationId\": \"updateTaskById\",\n        \"parameters\": [\n          {\n            \"name\": \"inlineTaskId\",\n            \"in\": \"path\",\n            \"description\": \"Global ID of the inline task to update\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The updated task status.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TaskStatusUpdate\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the inline task was successfully updated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Task\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if client input is invalid.\"\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing from the request.\"\n          },\n          \"403\": {\n            \"description\": \"Returned if the user does not have permission to update the content associated with the task.\"\n          },\n          \"404\": {\n            \"description\": \"Returned if task could not be found with given global ID.\"\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:inlinetask:confluence\",\n              \"write:inlinetask:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:inlinetask:confluence\",\n              \"write:inlinetask:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/label\": {\n      \"get\": {\n        \"tags\": [\n          \"Label info\"\n        ],\n        \"summary\": \"Get label information\",\n        \"description\": \"Returns label information and a list of contents associated with the label.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission). Only contents\\nthat the user is permitted to view is returned.\",\n        \"operationId\": \"getAllLabelContent\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name of the label to query.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": null\n            }\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"description\": \"The type of contents that are to be returned.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": null,\n              \"enum\": [\n                \"page\",\n                \"blogpost\",\n                \"attachment\",\n                \"page_template\"\n              ]\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting offset for the results.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The number of results to be returned.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 200\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the query fetches zero or more results.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LabelDetails\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if no label name is provide or\\nif content type provided in the query is invalid.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to view\\nany content including label info.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if the lable name is invalid or if no label is found for a given label.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:label:confluence\",\n              \"read:content:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:label:confluence\",\n              \"read:content:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/group\": {\n      \"get\": {\n        \"tags\": [\n          \"Group\"\n        ],\n        \"summary\": \"Get groups\",\n        \"description\": \"Returns all user groups. The returned groups are ordered alphabetically in\\nascending order by group name.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"getGroups\",\n        \"parameters\": [\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned groups.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of groups to return per page.\\nNote, this may be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 200\n            }\n          },\n          {\n            \"name\": \"accessType\",\n            \"in\": \"query\",\n            \"description\": \"The group permission level for which to filter results.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": null,\n              \"enum\": [\n                \"user\",\n                \"admin\",\n                \"site-admin\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested groups are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GroupArrayWithLinks\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to view\\ngroups.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:group:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-groups\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:group:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"post\": {\n        \"tags\": [\n          \"Group\"\n        ],\n        \"summary\": \"Create new user group\",\n        \"description\": \"Creates a new user group.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nUser must be a site admin.\",\n        \"operationId\": \"createGroup\",\n        \"requestBody\": {\n          \"description\": \"Name of the group that is to be created.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/GroupName\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Returned if the group was created successfully.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Group\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if the name is missing or invalid.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the calling user is not logged in to Confluence.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user is not a site admin.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:group:confluence\",\n              \"write:group:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-groups\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:group:confluence\",\n              \"write:group:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"INACCESSIBLE\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Group\"\n        ],\n        \"summary\": \"Delete user group\",\n        \"description\": \"Delete user group.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nUser must be a site admin.\",\n        \"operationId\": \"removeGroup\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name of the group to delete.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Returned if the group was removed successfully.\",\n            \"content\": {}\n          },\n          \"400\": {\n            \"description\": \"Returned if the name is missing or invalid.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the calling user is not logged in to Confluence.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user is not a site admin.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"If no user group by the give name exists.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:group:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-groups\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:group:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"INACCESSIBLE\"\n      }\n    },\n    \"/wiki/rest/api/group/by-name\": {\n      \"get\": {\n        \"tags\": [\n          \"Group\"\n        ],\n        \"summary\": \"Get group\",\n        \"description\": \"Returns a user group for a given group name.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"getGroupByQueryParam\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"The name of the group. This is the same as the group name shown in\\nthe Confluence administration console.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested group is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Group\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to view\\ngroups.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:group:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-groups\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:group:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/group/by-id\": {\n      \"get\": {\n        \"tags\": [\n          \"Group\"\n        ],\n        \"summary\": \"Get group\",\n        \"description\": \"Returns a user group for a given group id.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"getGroupByGroupId\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"description\": \"The id of the group.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested group is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Group\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to view\\ngroups.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:group:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-groups\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:group:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Group\"\n        ],\n        \"summary\": \"Delete user group\",\n        \"description\": \"Delete user group.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nUser must be a site admin.\",\n        \"operationId\": \"removeGroupById\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"description\": \"Id of the group to delete.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Returned if the group was removed successfully.\",\n            \"content\": {}\n          },\n          \"400\": {\n            \"description\": \"Returned if the id is missing or invalid.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the calling user is not logged in to Confluence.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user is not a site admin.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"If no user group by the given id exists.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:group:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-groups\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:group:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"INACCESSIBLE\"\n      }\n    },\n    \"/wiki/rest/api/group/{groupName}\": {\n      \"get\": {\n        \"tags\": [\n          \"Group\"\n        ],\n        \"summary\": \"Get group\",\n        \"description\": \"Returns a user group for a given group name.\\n\\nUse updated Get group API\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"getGroupByName\",\n        \"parameters\": [\n          {\n            \"name\": \"groupName\",\n            \"in\": \"path\",\n            \"description\": \"The name of the group. This is the same as the group name shown in\\nthe Confluence administration console.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested group is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Group\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to view\\ngroups.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if the group does not exist.\",\n            \"content\": {}\n          }\n        },\n        \"deprecated\": true,\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/group/member\": {\n      \"get\": {\n        \"tags\": [\n          \"Group\"\n        ],\n        \"summary\": \"Get group members\",\n        \"description\": \"Returns the users that are members of a group.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"getMembersByQueryParam\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"The name of the group to be queried for its members.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned users.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of users to return per page.\\nNote, this is restricted by fixed system limit of 200 which is to say if the limit parameter\\nexceeds 200, this API will return a maximum of 200 users per page.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 200\n            }\n          },\n          {\n            \"name\": \"shouldReturnTotalSize\",\n            \"in\": \"query\",\n            \"description\": \"Whether to include total size parameter in the results.\\nNote, fetching total size property is an expensive operation; use it if your use case needs this value.\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested users are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserArray\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to view users.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:group:confluence\",\n              \"read:user:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-groups\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:group:confluence\",\n              \"read:user:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/group/{groupName}/member\": {\n      \"get\": {\n        \"tags\": [\n          \"Group\"\n        ],\n        \"summary\": \"Get group members\",\n        \"description\": \"Returns the users that are members of a group.\\n\\nUse updated Get group API\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"getGroupMembers\",\n        \"parameters\": [\n          {\n            \"name\": \"groupName\",\n            \"in\": \"path\",\n            \"description\": \"The name of the group to be queried for its members.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned users.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of users to return per page.\\nNote, this may be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 200\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested users are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserArray\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if given limit is greater than 200\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to view users.\",\n            \"content\": {}\n          }\n        },\n        \"deprecated\": true,\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/group/picker\": {\n      \"get\": {\n        \"tags\": [\n          \"Group\"\n        ],\n        \"summary\": \"Search groups by partial query\",\n        \"description\": \"Get search results of groups by partial query provided.\",\n        \"operationId\": \"searchGroups\",\n        \"parameters\": [\n          {\n            \"name\": \"query\",\n            \"in\": \"query\",\n            \"description\": \"the search term used to query results.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned groups.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of groups to return per page.\\nNote, this is restricted to a maximum limit of 200 groups.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 200\n            }\n          },\n          {\n            \"name\": \"shouldReturnTotalSize\",\n            \"in\": \"query\",\n            \"description\": \"Whether to include total size parameter in the results.\\nNote, fetching total size property is an expensive operation; use it if your use case needs this value.\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns a full JSON representation of group collection.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GroupArrayWithLinks\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to view\\ngroups.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:group:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-groups\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:group:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/group/userByGroupId\": {\n      \"post\": {\n        \"tags\": [\n          \"Group\"\n        ],\n        \"summary\": \"Add member to group by groupId\",\n        \"description\": \"Adds a user as a member in a group represented by its groupId\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nUser must be a site admin.\",\n        \"operationId\": \"addUserToGroupByGroupId\",\n        \"parameters\": [\n          {\n            \"name\": \"groupId\",\n            \"in\": \"query\",\n            \"description\": \"GroupId of the group whose membership is updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"AccountId of the user who needs to be added as member.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AccountId\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Returned if the group was created successfully.\",\n            \"content\": {}\n          },\n          \"400\": {\n            \"description\": \"Returned if the groupId or accountId are missing or invalid.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the calling user is not logged in to Confluence.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user is not a site admin.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"If no user group by the give name exists.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:group:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-groups\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:group:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"INACCESSIBLE\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Group\"\n        ],\n        \"summary\": \"Remove member from group using group id\",\n        \"description\": \"Remove user as a member from a group.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nUser must be a site admin.\",\n        \"operationId\": \"removeMemberFromGroupByGroupId\",\n        \"parameters\": [\n          {\n            \"name\": \"groupId\",\n            \"in\": \"query\",\n            \"description\": \"Id of the group whose membership is updated.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupKey\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupUsername\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupAccountId\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Returned if the group was removed successfully.\",\n            \"content\": {}\n          },\n          \"400\": {\n            \"description\": \"Returned if the name is missing or invalid.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the calling user is not logged in to Confluence.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user is not a site admin.\\nNote: A 204 is returned if the user is not part of the\\ngroup.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"If no user group by the give name exists or if no user exists\\nfor the given accountId.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:group:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-groups\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:group:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"INACCESSIBLE\"\n      }\n    },\n    \"/wiki/rest/api/group/{groupId}/membersByGroupId\": {\n      \"get\": {\n        \"tags\": [\n          \"Group\"\n        ],\n        \"summary\": \"Get group members\",\n        \"description\": \"Returns the users that are members of a group.\\n\\nUse updated Get group API\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"getGroupMembersByGroupId\",\n        \"parameters\": [\n          {\n            \"name\": \"groupId\",\n            \"in\": \"path\",\n            \"description\": \"The id of the group to be queried for its members.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned users.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of users to return per page.\\nNote, this may be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 200\n            }\n          },\n          {\n            \"name\": \"shouldReturnTotalSize\",\n            \"in\": \"query\",\n            \"description\": \"Whether to include total size parameter in the results.\\nNote, fetching total size property is an expensive operation; use it if your use case needs this value.\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested users are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserArray\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if given limit is greater than 200\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to view users.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:group:confluence\",\n              \"read:user:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-groups\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:group:confluence\",\n              \"read:user:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/group/user\": {\n      \"post\": {\n        \"tags\": [\n          \"Group\"\n        ],\n        \"summary\": \"Add member to group\",\n        \"description\": \"Adds a user as a member in a group.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nUser must be a site admin.\",\n        \"operationId\": \"addUserToGroup\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name of the group whose membership is updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"AccountId of the user who needs to be added as member.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AccountId\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Returned if the group was created successfully.\",\n            \"content\": {}\n          },\n          \"400\": {\n            \"description\": \"Returned if the name or accountId are missing or invalid.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the calling user is not logged in to Confluence.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user is not a site admin.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"If no user group by the give name exists.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:group:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-groups\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:group:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"INACCESSIBLE\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Group\"\n        ],\n        \"summary\": \"Remove member from group\",\n        \"description\": \"Remove user as a member from a group.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nUser must be a site admin.\",\n        \"operationId\": \"removeMemberFromGroup\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name of the group whose membership is updated.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupKey\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupUsername\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupAccountId\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Returned if the group was removed successfully.\",\n            \"content\": {}\n          },\n          \"400\": {\n            \"description\": \"Returned if the name is missing or invalid.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the calling user is not logged in to Confluence.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user is not a site admin.\\nNote: A 204 is returned if the user is not part of the\\ngroup.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"If no user group by the give name exists or if no user exists\\nfor the given accountId.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:group:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-groups\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:group:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"INACCESSIBLE\"\n      }\n    },\n    \"/wiki/rest/api/longtask\": {\n      \"get\": {\n        \"tags\": [\n          \"Long-running task\"\n        ],\n        \"summary\": \"Get long-running tasks\",\n        \"description\": \"Returns information about all active long-running tasks (e.g. space export),\\nsuch as how long each task has been running and the percentage of each task\\nthat has completed.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"getTasks\",\n        \"parameters\": [\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned tasks.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of tasks to return per page. Note, this may be\\nrestricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested tasks are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LongTaskStatusArray\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned if the calling user is not logged in to Confluence.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content.metadata:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content.metadata:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/longtask/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"Long-running task\"\n        ],\n        \"summary\": \"Get long-running task\",\n        \"description\": \"Returns information about an active long-running task (e.g. space export),\\nsuch as how long it has been running and the percentage of the task that\\nhas completed.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"getTask\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the task.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested task is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LongTaskStatusWithLinks\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned if the calling user is not logged in to Confluence.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no task with the given ID.\\n- The calling user does not have permission to view the task.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content.metadata:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-space.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content.metadata:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/relation/{relationName}/from/{sourceType}/{sourceKey}/to/{targetType}\": {\n      \"get\": {\n        \"tags\": [\n          \"Relation\"\n        ],\n        \"summary\": \"Find target entities related to a source entity\",\n        \"description\": \"Returns all target entities that have a particular relationship to the\\nsource entity. Note, relationships are one way.\\n\\nFor example, the following method finds all content that the current user\\nhas an 'ignore' relationship with:\\n`GET /wiki/rest/api/relation/ignore/from/user/current/to/content`\\nNote, 'ignore' is an example custom relationship type.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to view both the target entity and source entity.\",\n        \"operationId\": \"findTargetFromSource\",\n        \"parameters\": [\n          {\n            \"name\": \"relationName\",\n            \"in\": \"path\",\n            \"description\": \"The name of the relationship. This method supports relationships created via\\n[Create relationship](#api-wiki-rest-api-relation-relationname-from-sourcetype-sourcekey-to-targettype-targetkey-put).\\nNote, this method does not support 'like' or 'favourite' relationships.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sourceType\",\n            \"in\": \"path\",\n            \"description\": \"The source entity type of the relationship.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"user\",\n                \"content\",\n                \"space\"\n              ]\n            }\n          },\n          {\n            \"name\": \"sourceKey\",\n            \"in\": \"path\",\n            \"description\": \"The identifier for the source entity:\\n\\n- If `sourceType` is `user`, then specify either `current` (logged-in user), the user key of the user, or\\nthe account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the\\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\\nfor details.\\n- If `sourceType` is 'content', then specify the content ID.\\n- If `sourceType` is 'space', then specify the space key.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"targetType\",\n            \"in\": \"path\",\n            \"description\": \"The target entity type of the relationship.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"user\",\n                \"content\",\n                \"space\"\n              ]\n            }\n          },\n          {\n            \"name\": \"sourceStatus\",\n            \"in\": \"query\",\n            \"description\": \"The status of the source. This parameter is only used when the\\n`sourceType` is 'content'.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"targetStatus\",\n            \"in\": \"query\",\n            \"description\": \"The status of the target. This parameter is only used when the\\n`targetType` is 'content'.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sourceVersion\",\n            \"in\": \"query\",\n            \"description\": \"The version of the source. This parameter is only used when the\\n`sourceType` is 'content' and the `sourceStatus` is 'historical'.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"targetVersion\",\n            \"in\": \"query\",\n            \"description\": \"The version of the target. This parameter is only used when the\\n`targetType` is 'content' and the `targetStatus` is 'historical'.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"expand\",\n            \"in\": \"query\",\n            \"description\": \"A multi-value parameter indicating which properties of the response\\nobject to expand.\\n\\n- `relationData` returns information about the relationship, such as\\nwho created it and when it was created.\\n- `source` returns the source entity.\\n- `target` returns the target entity.\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"relationData\",\n                  \"source\",\n                  \"target\"\n                ]\n              }\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned relationships.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of relationships to return per page.\\nNote, this may be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 25\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested relationships are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RelationArray\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if the request is invalid.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user does not have permission to view the\\nrelationships.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if the target entity does not exist.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:relation:confluence\",\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:relation:confluence\",\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/relation/{relationName}/from/{sourceType}/{sourceKey}/to/{targetType}/{targetKey}\": {\n      \"get\": {\n        \"tags\": [\n          \"Relation\"\n        ],\n        \"summary\": \"Find relationship from source to target\",\n        \"description\": \"Find whether a particular type of relationship exists from a source\\nentity to a target entity. Note, relationships are one way.\\n\\nFor example, you can use this method to find whether the current user has\\nselected a particular page as a favorite (i.e. 'save for later'):\\n`GET /wiki/rest/api/relation/favourite/from/user/current/to/content/123`\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to view both the target entity and source entity.\",\n        \"operationId\": \"getRelationship\",\n        \"parameters\": [\n          {\n            \"name\": \"relationName\",\n            \"in\": \"path\",\n            \"description\": \"The name of the relationship. This method supports the 'favourite'\\n(i.e. 'save for later') relationship as well as any other relationship\\ntypes created via [Create relationship](#api-wiki-rest-api-relation-relationname-from-sourcetype-sourcekey-to-targettype-targetkey-put).\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sourceType\",\n            \"in\": \"path\",\n            \"description\": \"The source entity type of the relationship. This must be 'user', if\\nthe `relationName` is 'favourite'.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"user\",\n                \"content\",\n                \"space\"\n              ]\n            }\n          },\n          {\n            \"name\": \"sourceKey\",\n            \"in\": \"path\",\n            \"description\": \"- The identifier for the source entity:\\n\\n- If `sourceType` is `user`, then specify either `current` (logged-in user), the user key of the user, or\\nthe account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the\\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\\nfor details.\\n- If `sourceType` is 'content', then specify the content ID.\\n- If `sourceType` is 'space', then specify the space key.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"targetType\",\n            \"in\": \"path\",\n            \"description\": \"The target entity type of the relationship. This must be 'space' or\\n'content', if the `relationName` is 'favourite'.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"user\",\n                \"content\",\n                \"space\"\n              ]\n            }\n          },\n          {\n            \"name\": \"targetKey\",\n            \"in\": \"path\",\n            \"description\": \"The identifier for the target entity:\\n\\n- If `targetType` is `user`, then specify either `current` (logged-in user), the user key of the user, or\\nthe account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the\\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\\nfor details.\\n- If `targetType` is 'content', then specify the content ID.\\n- If `targetType` is 'space', then specify the space key.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sourceStatus\",\n            \"in\": \"query\",\n            \"description\": \"The status of the source. This parameter is only used when the\\n`sourceType` is 'content'.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"targetStatus\",\n            \"in\": \"query\",\n            \"description\": \"The status of the target. This parameter is only used when the\\n`targetType` is 'content'.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sourceVersion\",\n            \"in\": \"query\",\n            \"description\": \"The version of the source. This parameter is only used when the\\n`sourceType` is 'content' and the `sourceStatus` is 'historical'.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"targetVersion\",\n            \"in\": \"query\",\n            \"description\": \"The version of the target. This parameter is only used when the\\n`targetType` is 'content' and the `targetStatus` is 'historical'.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"expand\",\n            \"in\": \"query\",\n            \"description\": \"A multi-value parameter indicating which properties of the response\\nobject to expand.\\n\\n- `relationData` returns information about the relationship, such as\\nwho created it and when it was created.\\n- `source` returns the source entity.\\n- `target` returns the target entity.\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"relationData\",\n                  \"source\",\n                  \"target\"\n                ]\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the relationship exists.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Relation\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if the request is invalid.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user does not have permission to view the\\nrelationship.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if the relationship does not exist.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:relation:confluence\",\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:relation:confluence\",\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"put\": {\n        \"tags\": [\n          \"Relation\"\n        ],\n        \"summary\": \"Create relationship\",\n        \"description\": \"Creates a relationship between two entities (user, space, content). The\\n'favourite' relationship is supported by default, but you can use this method\\nto create any type of relationship between two entities.\\n\\nFor example, the following method creates a 'sibling' relationship between\\ntwo pieces of content:\\n`GET /wiki/rest/api/relation/sibling/from/content/123/to/content/456`\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"createRelationship\",\n        \"parameters\": [\n          {\n            \"name\": \"relationName\",\n            \"in\": \"path\",\n            \"description\": \"The name of the relationship. This method supports the 'favourite'\\n(i.e. 'save for later') relationship. You can also specify any other\\nvalue for this parameter to create a custom relationship type.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sourceType\",\n            \"in\": \"path\",\n            \"description\": \"The source entity type of the relationship. This must be 'user', if\\nthe `relationName` is 'favourite'.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"user\",\n                \"content\",\n                \"space\"\n              ]\n            }\n          },\n          {\n            \"name\": \"sourceKey\",\n            \"in\": \"path\",\n            \"description\": \"- The identifier for the source entity:\\n\\n- If `sourceType` is 'user', then specify either 'current' (logged-in\\n  user) or the user key.\\n- If `sourceType` is 'content', then specify the content ID.\\n- If `sourceType` is 'space', then specify the space key.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"targetType\",\n            \"in\": \"path\",\n            \"description\": \"The target entity type of the relationship. This must be 'space' or\\n'content', if the `relationName` is 'favourite'.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"user\",\n                \"content\",\n                \"space\"\n              ]\n            }\n          },\n          {\n            \"name\": \"targetKey\",\n            \"in\": \"path\",\n            \"description\": \"- The identifier for the target entity:\\n\\n- If `sourceType` is 'user', then specify either 'current' (logged-in\\n  user) or the user key.\\n- If `sourceType` is 'content', then specify the content ID.\\n- If `sourceType` is 'space', then specify the space key.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sourceStatus\",\n            \"in\": \"query\",\n            \"description\": \"The status of the source. This parameter is only used when the\\n`sourceType` is 'content'.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"targetStatus\",\n            \"in\": \"query\",\n            \"description\": \"The status of the target. This parameter is only used when the\\n`targetType` is 'content'.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sourceVersion\",\n            \"in\": \"query\",\n            \"description\": \"The version of the source. This parameter is only used when the\\n`sourceType` is 'content' and the `sourceStatus` is 'historical'.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"targetVersion\",\n            \"in\": \"query\",\n            \"description\": \"The version of the target. This parameter is only used when the\\n`targetType` is 'content' and the `targetStatus` is 'historical'.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the relationship is created.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Relation\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if the request is invalid.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user does not have permission to use Confluence.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if the user, space or content could not be found.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:relation:confluence\",\n              \"read:space:confluence\",\n              \"read:user:confluence\",\n              \"read:content:confluence\",\n              \"write:relation:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:relation:confluence\",\n              \"read:space:confluence\",\n              \"read:user:confluence\",\n              \"read:content:confluence\",\n              \"write:relation:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Relation\"\n        ],\n        \"summary\": \"Delete relationship\",\n        \"description\": \"Deletes a relationship between two entities (user, space, content).\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\\nFor favourite relationships, the current user can only delete their own\\nfavourite relationships. A space administrator can delete favourite\\nrelationships for any user.\",\n        \"operationId\": \"deleteRelationship\",\n        \"parameters\": [\n          {\n            \"name\": \"relationName\",\n            \"in\": \"path\",\n            \"description\": \"The name of the relationship.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sourceType\",\n            \"in\": \"path\",\n            \"description\": \"The source entity type of the relationship. This must be 'user', if\\nthe `relationName` is 'favourite'.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"user\",\n                \"content\",\n                \"space\"\n              ]\n            }\n          },\n          {\n            \"name\": \"sourceKey\",\n            \"in\": \"path\",\n            \"description\": \"- The identifier for the source entity:\\n\\n- If `sourceType` is 'user', then specify either 'current' (logged-in\\n  user) or the user key.\\n- If `sourceType` is 'content', then specify the content ID.\\n- If `sourceType` is 'space', then specify the space key.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"targetType\",\n            \"in\": \"path\",\n            \"description\": \"The target entity type of the relationship. This must be 'space' or\\n'content', if the `relationName` is 'favourite'.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"user\",\n                \"content\",\n                \"space\"\n              ]\n            }\n          },\n          {\n            \"name\": \"targetKey\",\n            \"in\": \"path\",\n            \"description\": \"- The identifier for the target entity:\\n\\n- If `sourceType` is 'user', then specify either 'current' (logged-in\\n  user) or the user key.\\n- If `sourceType` is 'content', then specify the content ID.\\n- If `sourceType` is 'space', then specify the space key.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sourceStatus\",\n            \"in\": \"query\",\n            \"description\": \"The status of the source. This parameter is only used when the\\n`sourceType` is 'content'.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"targetStatus\",\n            \"in\": \"query\",\n            \"description\": \"The status of the target. This parameter is only used when the\\n`targetType` is 'content'.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sourceVersion\",\n            \"in\": \"query\",\n            \"description\": \"The version of the source. This parameter is only used when the\\n`sourceType` is 'content' and the `sourceStatus` is 'historical'.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"targetVersion\",\n            \"in\": \"query\",\n            \"description\": \"The version of the target. This parameter is only used when the\\n`targetType` is 'content' and the `targetStatus` is 'historical'.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Returned if the relationship is deleted or the relationship didn't\\nexist.\",\n            \"content\": {}\n          },\n          \"400\": {\n            \"description\": \"Returned if the request is invalid.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user does not have permission to delete the\\nrelationship.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if the user, space or content could not be found.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:relation:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:relation:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/relation/{relationName}/to/{targetType}/{targetKey}/from/{sourceType}\": {\n      \"get\": {\n        \"tags\": [\n          \"Relation\"\n        ],\n        \"summary\": \"Find source entities related to a target entity\",\n        \"description\": \"Returns all target entities that have a particular relationship to the\\nsource entity. Note, relationships are one way.\\n\\nFor example, the following method finds all users that have a 'collaborator'\\nrelationship to a piece of content with an ID of '1234':\\n`GET /wiki/rest/api/relation/collaborator/to/content/1234/from/user`\\nNote, 'collaborator' is an example custom relationship type.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to view both the target entity and source entity.\",\n        \"operationId\": \"findSourcesForTarget\",\n        \"parameters\": [\n          {\n            \"name\": \"relationName\",\n            \"in\": \"path\",\n            \"description\": \"The name of the relationship. This method supports relationships created via\\n[Create relationship](#api-wiki-rest-api-relation-relationname-from-sourcetype-sourcekey-to-targettype-targetkey-put).\\nNote, this method does not support 'like' or 'favourite' relationships.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sourceType\",\n            \"in\": \"path\",\n            \"description\": \"The source entity type of the relationship.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"user\",\n                \"content\",\n                \"space\"\n              ]\n            }\n          },\n          {\n            \"name\": \"targetType\",\n            \"in\": \"path\",\n            \"description\": \"The target entity type of the relationship.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"user\",\n                \"content\",\n                \"space\"\n              ]\n            }\n          },\n          {\n            \"name\": \"targetKey\",\n            \"in\": \"path\",\n            \"description\": \"The identifier for the target entity:\\n\\n- If `targetType` is `user`, then specify either `current` (logged-in user), the user key of the user, or\\nthe account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the\\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\\nfor details.\\n- If `targetType` is 'content', then specify the content ID.\\n- If `targetType` is 'space', then specify the space key.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sourceStatus\",\n            \"in\": \"query\",\n            \"description\": \"The status of the source. This parameter is only used when the\\n`sourceType` is 'content'.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"targetStatus\",\n            \"in\": \"query\",\n            \"description\": \"The status of the target. This parameter is only used when the\\n`targetType` is 'content'.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sourceVersion\",\n            \"in\": \"query\",\n            \"description\": \"The version of the source. This parameter is only used when the\\n`sourceType` is 'content' and the `sourceStatus` is 'historical'.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"targetVersion\",\n            \"in\": \"query\",\n            \"description\": \"The version of the target. This parameter is only used when the\\n`targetType` is 'content' and the `targetStatus` is 'historical'.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"expand\",\n            \"in\": \"query\",\n            \"description\": \"A multi-value parameter indicating which properties of the response\\nobject to expand.\\n\\n- `relationData` returns information about the relationship, such as\\nwho created it and when it was created.\\n- `source` returns the source entity.\\n- `target` returns the target entity.\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"relationData\",\n                  \"source\",\n                  \"target\"\n                ]\n              }\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned relationships.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of relationships to return per page.\\nNote, this may be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 25\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested relationships are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RelationArray\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if the request is invalid.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user does not have permission to view the\\nrelationship\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if the target entity does not exist.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:relation:confluence\",\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:relation:confluence\",\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/search\": {\n      \"get\": {\n        \"tags\": [\n          \"Search\"\n        ],\n        \"summary\": \"Search content\",\n        \"description\": \"Searches for content using the\\n[Confluence Query Language (CQL)](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/)\\n\\nExample initial call:\\n```\\n/wiki/rest/api/search?cql=type=page\u0026limit=25\\n```\\n\\nExample response:\\n```\\n{\\n  \\\"results\\\": [\\n    { ... },\\n    { ... },\\n    ...\\n    { ... }\\n  ],\\n  \\\"limit\\\": 25,\\n  \\\"size\\\": 25,\\n  ...\\n  \\\"_links\\\": {\\n    \\\"base\\\": \\\"\u003curl\u003e\\\",\\n    \\\"context\\\": \\\"\u003curl\u003e\\\",\\n    \\\"next\\\": \\\"/rest/api/search?cql=type=page\u0026limit=25\u0026cursor=raNDoMsTRiNg\\\",\\n    \\\"self\\\": \\\"\u003curl\u003e\\\"\\n  }\\n}\\n```\\n\\nWhen additional results are available, returns `next` and `prev` URLs to retrieve them in subsequent calls. The URLs each contain a cursor that points to the appropriate set of results. Use `limit` to specify the number of results returned in each call.\\n\\nExample subsequent call (taken from example response):\\n```\\n/wiki/rest/api/search?cql=type=page\u0026limit=25\u0026cursor=raNDoMsTRiNg\\n```\\nThe response to this will have a `prev` URL similar to the `next` in the example response.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to view the entities. Note, only entities that the user has\\npermission to view will be returned.\",\n        \"operationId\": \"searchByCQL\",\n        \"parameters\": [\n          {\n            \"name\": \"cql\",\n            \"in\": \"query\",\n            \"description\": \"The CQL query to be used for the search. See\\n[Advanced Searching using CQL](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/)\\nfor instructions on how to build a CQL query.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"cqlcontext\",\n            \"in\": \"query\",\n            \"description\": \"The space, content, and content status to execute the search\\nagainst.\\n\\n- `spaceKey` Key of the space to search against. Optional.\\n- `contentId` ID of the content to search against. Optional. Must be\\nin the space specified by `spaceKey`.\\n- `contentStatuses` Content statuses to search against. Optional.\\n\\nSpecify these values in an object. For example,\\n`cqlcontext={%22spaceKey%22:%22TEST%22, %22contentId%22:%22123%22}`\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"cursor\",\n            \"in\": \"query\",\n            \"description\": \"Pointer to a set of search results, returned as part of the `next` or `prev` URL from the previous search call.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"next\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            }\n          },\n          {\n            \"name\": \"prev\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of content objects to return per page.\\nNote, this may be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 25\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The start point of the collection to return\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"includeArchivedSpaces\",\n            \"in\": \"query\",\n            \"description\": \"Whether to include content from archived spaces in the results.\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            }\n          },\n          {\n            \"name\": \"excludeCurrentSpaces\",\n            \"in\": \"query\",\n            \"description\": \"Whether to exclude current spaces and only show archived spaces.\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            }\n          },\n          {\n            \"name\": \"excerpt\",\n            \"in\": \"query\",\n            \"description\": \"The excerpt strategy to apply to the result\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"highlight\",\n              \"enum\": [\n                \"highlight\",\n                \"indexed\",\n                \"none\",\n                \"highlight_unescaped\",\n                \"indexed_unescaped\"\n              ]\n            }\n          },\n          {\n            \"name\": \"sitePermissionTypeFilter\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"none\",\n              \"enum\": [\n                \"externalCollaborator\",\n                \"none\"\n              ]\n            }\n          },\n          {\n            \"name\": \"_\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"expand\",\n            \"in\": \"query\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested results are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SearchPageResponseSearchResult\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if the CQL query cannot be parsed.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to access\\nConfluence.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"search:confluence\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/search/user\": {\n      \"get\": {\n        \"tags\": [\n          \"Search\"\n        ],\n        \"summary\": \"Search users\",\n        \"description\": \"Searches for users using user-specific queries from the\\n[Confluence Query Language (CQL)](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/).\\n\\nNote that some user fields may be set to null depending on the user's privacy settings.\\nThese are: email, profilePicture, displayName, and timeZone.\",\n        \"operationId\": \"searchUser\",\n        \"parameters\": [\n          {\n            \"name\": \"cql\",\n            \"in\": \"query\",\n            \"description\": \"The CQL query to be used for the search. See\\n[Advanced Searching using CQL](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/)\\nfor instructions on how to build a CQL query.\\n\\nExample queries:\\n          cql=type=user will return all users\\n          cql=user=\\\"1234\\\" will return user with accountId \\\"1234\\\"\\n          You can also use IN, NOT IN, != operators\\n          cql=user IN (\\\"12\\\", \\\"34\\\") will return users with accountids \\\"12\\\" and \\\"34\\\"\\n          cql=user.fullname~jo will return users with nickname/full name starting with \\\"jo\\\"\\n          cql=user.accountid=\\\"123\\\" will return user with accountId \\\"123\\\"\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned users.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of user objects to return per page.\\nNote, this may be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 25\n            }\n          },\n          {\n            \"name\": \"expand\",\n            \"in\": \"query\",\n            \"description\": \"A multi-value parameter indicating which properties of the user to expand.\\n\\n- `operations` returns the operations for the user, which are used\\nwhen setting permissions.\\n- `personalSpace` returns the personal space of the user.\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested results are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SearchPageResponseSearchResult\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if the CQL query cannot be parsed.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to access\\nConfluence.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/settings/lookandfeel\": {\n      \"get\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"summary\": \"Get look and feel settings\",\n        \"description\": \"Returns the look and feel settings for the site or a single space. This\\nincludes attributes such as the color scheme, padding, and border radius.\\n\\nThe look and feel settings for a space can be inherited from the global\\nlook and feel settings or provided by a theme.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nNone\",\n        \"operationId\": \"getLookAndFeelSettings\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"query\",\n            \"description\": \"The key of the space for which the look and feel settings will be\\nreturned. If this is not set, only the global look and feel settings\\nare returned.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested look and feel settings are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LookAndFeelSettings\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if `spaceKey` is invalid.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if there is no space with the given `spaceKey`.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:configuration:confluence\",\n              \"read:space.setting:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"manage:confluence-configuration\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:configuration:confluence\",\n              \"read:space.setting:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"put\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"summary\": \"Select look and feel settings\",\n        \"description\": \"Sets the look and feel settings to the default (global) settings, the\\ncustom settings, or the current theme's settings for a space.\\nThe custom and theme settings can only be selected if there is already\\na theme set for a space. Note, the default space settings are inherited\\nfrom the current global settings.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Admin' permission for the space.\",\n        \"operationId\": \"updateLookAndFeel\",\n        \"requestBody\": {\n          \"description\": \"The look and feel type to be set.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LookAndFeelSelection\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the look and feel settings were set.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LookAndFeelSelection\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if;\\n\\n- `spaceKey` is invalid.\\n- `lookAndFeelType` is invalid.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user doesn't have permission to edit the\\nlook and feel settings.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if there is no space with the given `spaceKey`.\",\n            \"content\": {}\n          },\n          \"409\": {\n            \"description\": \"Returned if `lookAndFeelType` is set to 'custom' or 'theme',\\nand a theme is not currently set for the space.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:space.setting:confluence\",\n              \"write:space.setting:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"manage:confluence-configuration\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:space.setting:confluence\",\n              \"write:space.setting:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/settings/lookandfeel/custom\": {\n      \"post\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"summary\": \"Update look and feel settings\",\n        \"description\": \"Updates the look and feel settings for the site or for a single space.\\nIf custom settings exist, they are updated. If no custom settings exist,\\nthen a set of custom settings is created.\\n\\nNote, if a theme is selected for a space, the space look and feel settings\\nare provided by the theme and cannot be overridden.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Admin' permission for the space.\",\n        \"operationId\": \"updateLookAndFeelSettings\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"query\",\n            \"description\": \"The key of the space for which the look and feel settings will be\\nupdated. If this is not set, the global look and feel settings will\\nbe updated.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The updated settings. All values for the settings must be included,\\nregardless of whether they are being changed.\\n\\nOne way to create the request body is to copy the settings from the\\nresponse body of [Get look and feel settings](#api-settings-lookandfeel-get)\\nand modify it as needed.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LookAndFeel\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the look and feel settings are updated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LookAndFeelWithLinks\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if;\\n\\n- The `spaceKey` is invalid\\n- The request body contains invalid data.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user doesn't have permission to edit the\\nlook and feel settings.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if there is no space with the given `spaceKey`.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:configuration:confluence\",\n              \"read:space.setting:confluence\",\n              \"write:configuration:confluence\",\n              \"write:space.setting:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"manage:confluence-configuration\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:configuration:confluence\",\n              \"read:space.setting:confluence\",\n              \"write:configuration:confluence\",\n              \"write:space.setting:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"summary\": \"Reset look and feel settings\",\n        \"description\": \"Resets the custom look and feel settings for the site or a single space.\\nThis changes the values of the custom settings to be the same as the\\ndefault settings. It does not change which settings (default or custom)\\nare selected. Note, the default space settings are inherited from the\\ncurrent global settings.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Admin' permission for the space.\",\n        \"operationId\": \"resetLookAndFeelSettings\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"query\",\n            \"description\": \"The key of the space for which the look and feel settings will be\\nreset. If this is not set, the global look and feel settings will\\nbe reset.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Returned if the look and feel settings have been reset.\",\n            \"content\": {}\n          },\n          \"400\": {\n            \"description\": \"Returned if `spaceKey` is invalid.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user doesn't have permission to reset the\\nlook and feel.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if there is no space with the given `spaceKey`.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:configuration:confluence\",\n              \"write:space.setting:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"manage:confluence-configuration\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:configuration:confluence\",\n              \"write:space.setting:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"DELETE\"\n      }\n    },\n    \"/wiki/rest/api/settings/lookandfeel/selected\": {\n      \"put\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"summary\": \"Set look and feel settings\",\n        \"description\": \"Sets the look and feel settings to either the default settings or the\\ncustom settings, for the site or a single space. Note, the default\\nspace settings are inherited from the current global settings.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Admin' permission for the space.\",\n        \"operationId\": \"setLookAndFeelSettings\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"query\",\n            \"description\": \"The key of the space for which the look and feel settings will be\\nset. If this is not set, the global look and feel settings will be\\nset.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The look and feel type to be set.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"global\",\n                  \"custom\",\n                  \"theme\"\n                ]\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the look and feel settings were set.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if;\\n\\n- The `spaceKey` is invalid.\\n- The look and feel type is invalid.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the look and feel type is set to 'theme' but the\\nspace/site doesn't have a theme assigned.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if there is no space with the given `spaceKey`.\",\n            \"content\": {}\n          }\n        },\n        \"deprecated\": true,\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:configuration:confluence\",\n              \"read:space.setting:confluence\",\n              \"write:configuration:confluence\",\n              \"write:space.setting:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"manage:confluence-configuration\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:configuration:confluence\",\n              \"read:space.setting:confluence\",\n              \"write:configuration:confluence\",\n              \"write:space.setting:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/settings/systemInfo\": {\n      \"get\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"summary\": \"Get system info\",\n        \"description\": \"Returns the system information for the Confluence Cloud tenant. This\\ninformation is used by Atlassian.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"getSystemInfo\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the system information for the Confluence Cloud tenant\\nis returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SystemInfoEntity\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to view the system\\ninformation.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:configuration:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"manage:confluence-configuration\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:configuration:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/settings/theme\": {\n      \"get\": {\n        \"tags\": [\n          \"Themes\"\n        ],\n        \"summary\": \"Get themes\",\n        \"description\": \"Returns all themes, not including the default theme.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: None\",\n        \"operationId\": \"getThemes\",\n        \"parameters\": [\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned themes.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of themes to return per page.\\nNote, this may be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested themes are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ThemeArray\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:configuration:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"manage:confluence-configuration\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:configuration:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/settings/theme/selected\": {\n      \"get\": {\n        \"tags\": [\n          \"Themes\"\n        ],\n        \"summary\": \"Get global theme\",\n        \"description\": \"Returns the globally assigned theme.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: None\",\n        \"operationId\": \"getGlobalTheme\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the global theme is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Theme\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned if Confluence does not have a global theme assigned, i.e.\\nthe default theme is used.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:configuration:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"manage:confluence-configuration\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:configuration:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/settings/theme/{themeKey}\": {\n      \"get\": {\n        \"tags\": [\n          \"Themes\"\n        ],\n        \"summary\": \"Get theme\",\n        \"description\": \"Returns a theme. This includes information about the theme name,\\ndescription, and icon.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: None\",\n        \"operationId\": \"getTheme\",\n        \"parameters\": [\n          {\n            \"name\": \"themeKey\",\n            \"in\": \"path\",\n            \"description\": \"The key of the theme to be returned.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested theme is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Theme\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned if there is no theme with the given key.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:configuration:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"manage:confluence-configuration\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:configuration:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/space\": {\n      \"get\": {\n        \"tags\": [\n          \"Space\"\n        ],\n        \"summary\": \"Get spaces\",\n        \"description\": \"Returns all spaces. The returned spaces are ordered alphabetically in\\nascending order by space key.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\\nNote, the returned list will only contain spaces that the current user\\nhas permission to view.\",\n        \"operationId\": \"getSpaces\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"query\",\n            \"description\": \"The key of the space to be returned. To return multiple spaces,\\nspecify this parameter multiple times with different values.\",\n            \"style\": \"form\",\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"name\": \"spaceId\",\n            \"in\": \"query\",\n            \"description\": \"The id of the space to be returned. To return multiple spaces,\\nspecify this parameter multiple times with different values.\",\n            \"style\": \"form\",\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"integer\",\n                \"format\": \"int64\"\n              }\n            }\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"description\": \"Filter the results to spaces based on their type.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"global\",\n                \"personal\"\n              ]\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Filter the results to spaces based on their status.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"current\",\n                \"archived\"\n              ]\n            }\n          },\n          {\n            \"name\": \"label\",\n            \"in\": \"query\",\n            \"description\": \"Filter the results to spaces based on their label.\",\n            \"style\": \"form\",\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"name\": \"favourite\",\n            \"in\": \"query\",\n            \"description\": \"Filter the results to the favourite spaces of the user specified by\\n`favouriteUserKey`. Note, 'favourite' spaces are also\\nknown as 'saved for later' spaces.\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"favouriteUserKey\",\n            \"in\": \"query\",\n            \"description\": \"The userKey of the user, whose favourite spaces are used to filter\\nthe results when using the `favourite` parameter.\\n\\nLeave blank for the current user. Use [Get user](#api-user-get) to\\nget the userKey for a user.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/spaceExpand\"\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned spaces.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of spaces to return per page. Note, this may be\\nrestricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 25\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested spaces are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SpaceArray\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if spaces could not be fetched due to an invalid status being provided.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-space.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"post\": {\n        \"tags\": [\n          \"Space\"\n        ],\n        \"summary\": \"Create space\",\n        \"description\": \"Creates a new space. Note, currently you cannot set space labels when\\ncreating a space.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Create Space(s)' global permission.\",\n        \"operationId\": \"createSpace\",\n        \"requestBody\": {\n          \"description\": \"The space to be created.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SpaceCreate\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the space is created.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Space\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if any of the following is true:\\n\\n- The request is invalid.\\n- The space already exists.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the callig user does not have permission to create a space.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:space-details:confluence\",\n              \"write:space:confluence\",\n              \"write:space.permission:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-space\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:space-details:confluence\",\n              \"write:space:confluence\",\n              \"write:space.permission:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/space/_private\": {\n      \"post\": {\n        \"tags\": [\n          \"Space\"\n        ],\n        \"summary\": \"Create private space\",\n        \"description\": \"Creates a new space that is only visible to the creator. This method is\\nthe same as the [Create space](#api-space-post) method with permissions\\nset to the current user only. Note, currently you cannot set space\\nlabels when creating a space.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Create Space(s)' global permission.\",\n        \"operationId\": \"createPrivateSpace\",\n        \"requestBody\": {\n          \"description\": \"The space to be created.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SpaceCreate\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the space is created.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Space\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if any of the following is true:\\n\\n- The request is invalid.\\n- The space already exists.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user does not have permission to create a space.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:space-details:confluence\",\n              \"write:space:confluence\",\n              \"write:space.permission:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-space\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:space-details:confluence\",\n              \"write:space:confluence\",\n              \"write:space.permission:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"SpacePrivateCreate\",\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/space/{spaceKey}\": {\n      \"get\": {\n        \"tags\": [\n          \"Space\"\n        ],\n        \"summary\": \"Get space\",\n        \"description\": \"Returns a space. This includes information like the name, description,\\nand permissions, but not the content in the space.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'View' permission for the space.\",\n        \"operationId\": \"getSpace\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"path\",\n            \"description\": \"The key of the space to be returned.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/spaceExpand\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested space is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Space\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if any of the following is true:\\n\\n- There is no space with the given key.\\n- The calling user does not have permission to view the space.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-space.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"put\": {\n        \"tags\": [\n          \"Space\"\n        ],\n        \"summary\": \"Update space\",\n        \"description\": \"Updates the name, description, or homepage of a space.\\n\\n-   For security reasons, permissions cannot be updated via the API and\\nmust be changed via the user interface instead.\\n-   Currently you cannot set space labels when updating a space.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Admin' permission for the space.\",\n        \"operationId\": \"updateSpace\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"path\",\n            \"description\": \"The key of the space to update.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The updated space.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SpaceUpdate\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the space is updated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Space\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if any of the following is true:\\n\\n- There is no space with the given key\\n- The calling user does not have permission to update the space.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:space-details:confluence\",\n              \"write:space:confluence\",\n              \"write:space.permission:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-space\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:space-details:confluence\",\n              \"write:space:confluence\",\n              \"write:space.permission:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Space\"\n        ],\n        \"summary\": \"Delete space\",\n        \"description\": \"Deletes a space. Note, the space will be deleted in a long running task.\\nTherefore, the space may not be deleted yet when this method has\\nreturned. Clients should poll the status link that is returned in the\\nresponse until the task completes.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Admin' permission for the space.\",\n        \"operationId\": \"deleteSpace\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"path\",\n            \"description\": \"The key of the space to delete.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"202\": {\n            \"description\": \"Returns a pointer to the status of the space deletion task.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if any of the following is true:\\n\\n- There is no space with the given key.\\n- The calling user does not have permission to delete the space.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content.metadata:confluence\",\n              \"delete:space:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-space\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content.metadata:confluence\",\n              \"delete:space:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"DELETE\"\n      }\n    },\n    \"/wiki/rest/api/space/{spaceKey}/content\": {\n      \"get\": {\n        \"tags\": [\n          \"Space\"\n        ],\n        \"summary\": \"Get content for space\",\n        \"description\": \"Returns all content in a space. The returned content is grouped by type\\n(pages then blogposts), then ordered by content ID in ascending order.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'View' permission for the space. Note, the returned list will only\\ncontain content that the current user has permission to view.\",\n        \"operationId\": \"getContentForSpace\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"path\",\n            \"description\": \"The key of the space to be queried for its content.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"depth\",\n            \"in\": \"query\",\n            \"description\": \"Filter the results to content at the root level of the space or all content.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"all\",\n              \"enum\": [\n                \"all\",\n                \"root\"\n              ]\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/contentExpand\"\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned content.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of content objects to return per page. Note, this\\nmay be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 25\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested content is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"page\": {\n                      \"$ref\": \"#/components/schemas/ContentArray\"\n                    },\n                    \"blogpost\": {\n                      \"$ref\": \"#/components/schemas/ContentArray\"\n                    },\n                    \"_links\": {\n                      \"$ref\": \"#/components/schemas/GenericLinks\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if any of the following is true:\\n\\n- There is no space with the given key.\\n- The calling user does not have permission to view the space.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/space/{spaceKey}/permission\": {\n      \"post\": {\n        \"tags\": [\n          \"Space permissions\"\n        ],\n        \"summary\": \"Add new permission to space\",\n        \"description\": \"Adds new permission to space.\\n\\nIf the permission to be added is a group permission, the group can be identified\\nby its group name or group id.\\n\\nNote: Apps cannot access this REST resource - including when utilizing user impersonation.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Admin' permission for the space.\",\n        \"operationId\": \"addPermissionToSpace\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"path\",\n            \"description\": \"The key of the space to be queried for its content.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The permission to be created.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SpacePermissionRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested content is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SpacePermissionV2\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Used for various errors. Such as:\\n- Permission already exists for the given user or group.\\n- 'read space' permission doesn't exist for the given user or group.\\n- No group found with the given groupName or groupId\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user isn't authorized.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if any of the following is true:\\n- There is no space with the given key.\\n- The calling user does not have permission to view the space.\",\n            \"content\": {}\n          }\n        },\n        \"x-codegen-request-body-name\": \"body\",\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:space.permission:confluence\",\n              \"write:space.permission:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:space.permission:confluence\",\n              \"write:space.permission:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"INACCESSIBLE\"\n      }\n    },\n    \"/wiki/rest/api/space/{spaceKey}/permission/custom-content\": {\n      \"post\": {\n        \"tags\": [\n          \"Space permissions\"\n        ],\n        \"summary\": \"Add new custom content permission to space\",\n        \"description\": \"Adds new custom content permission to space.\\n\\nIf the permission to be added is a group permission, the group can be identified\\nby its group name or group id.\\n\\nNote: Only apps can access this REST resource and only make changes to the respective app permissions.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Admin' permission for the space.\",\n        \"operationId\": \"addCustomContentPermissions\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"path\",\n            \"description\": \"The key of the space to be queried for its content.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The permissions to be created.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SpacePermissionCustomContent\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested content is returned.\",\n            \"content\": {}\n          },\n          \"400\": {\n            \"description\": \"Used for various errors. Such as:\\n- Permission already exists for the given user or group.\\n- 'read space' permission doesn't exist for the given user or group.\\n- No group found with the given groupName or groupId\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user isn't authorized.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if any of the following is true:\\n- There is no space with the given key.\\n- The calling user does not have permission to view the space.\",\n            \"content\": {}\n          }\n        },\n        \"x-codegen-request-body-name\": \"body\",\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:space.permission:confluence\",\n              \"write:space.permission:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:space.permission:confluence\",\n              \"write:space.permission:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/space/{spaceKey}/permission/{id}\": {\n      \"delete\": {\n        \"tags\": [\n          \"Space permissions\"\n        ],\n        \"summary\": \"Remove a space permission\",\n        \"description\": \"Removes a space permission. Note that removing Read Space permission for a user or group will remove all\\nthe space permissions for that user or group.\\n\\nNote: Apps cannot access this REST resource - including when utilizing user impersonation.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Admin' permission for the space.\",\n        \"operationId\": \"removePermission\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"path\",\n            \"description\": \"The key of the space to be queried for its content.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"Id of the permission to be deleted.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Permission successfully removed.\",\n            \"content\": {}\n          },\n          \"400\": {\n            \"description\": \"Used for various errors. Such as:\\n- All of the admin permissions cannot be removed from a space.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user isn't authorized.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if any of the following is true:\\n- There is no permission with the given id.\\n- There is no space with the given key.\\n- The calling user does not have permission to view the space.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:space.permission:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:space.permission:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"INACCESSIBLE\"\n      }\n    },\n    \"/wiki/rest/api/space/{spaceKey}/content/{type}\": {\n      \"get\": {\n        \"tags\": [\n          \"Space\"\n        ],\n        \"summary\": \"Get content by type for space\",\n        \"description\": \"Returns all content of a given type, in a space. The returned content is\\nordered by content ID in ascending order.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'View' permission for the space. Note, the returned list will only\\ncontain content that the current user has permission to view.\",\n        \"operationId\": \"getContentByTypeForSpace\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"path\",\n            \"description\": \"The key of the space to be queried for its content.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"path\",\n            \"description\": \"The type of content to return. `page`, `blogpost`, `\u003csome_customContentType\u003e`.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"depth\",\n            \"in\": \"query\",\n            \"description\": \"Filter the results to content at the root level of the space or all\\ncontent.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"all\",\n              \"enum\": [\n                \"all\",\n                \"root\"\n              ]\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/contentExpand\"\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned content.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of content objects to return per page. Note, this\\nmay be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 25\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested content is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContentArray\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if any of the following is true:\\n\\n- There is no space with the given key.\\n- The calling user does not have permission to view the space.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/space/{spaceKey}/property\": {\n      \"get\": {\n        \"tags\": [\n          \"Space properties\"\n        ],\n        \"summary\": \"Get space properties\",\n        \"description\": \"Returns all properties for the given space. Space properties are a key-value storage associated with a space.\\n\\n**[Permissions required](https://confluence.atlassian.com/x/_AozKw)**: ‘View’ permission for the space.\",\n        \"operationId\": \"getSpaceProperties\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"path\",\n            \"description\": \"The key of the space to be queried for its properties.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"expand\",\n            \"in\": \"query\",\n            \"description\": \"A multi-value parameter indicating which properties of the space\\nproperty to expand. By default, the `version` object is expanded.\\n\\n- `version` returns information about the version of the content.\\n- `space` returns the space that the properties are in.\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"version\",\n                  \"space\"\n                ]\n              }\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned objects.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of properties to return per page. Note, this may be\\nrestricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 10\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested space properties are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SpacePropertyArray\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned if any of the following is true:\\n\\n- There is no space with the given key.\\n- The calling user does not have permission to view the space.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-props\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"post\": {\n        \"tags\": [\n          \"Space properties\"\n        ],\n        \"summary\": \"Create space property\",\n        \"description\": \"Creates a new space property.\\n\\n**[Permissions required](https://confluence.atlassian.com/x/_AozKw)**:\\n‘Admin’ permission for the space.\",\n        \"operationId\": \"createSpaceProperty\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"path\",\n            \"description\": \"The key of the space that the property will be created in.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The space property to be created.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SpacePropertyCreate\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the space property is created.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SpaceProperty\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if any of the following is true:\\n\\n- The space already has a value with the given key.\\n- No property value was provided.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user does not have 'Admin' permission for the space.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if any of the following is true:\\n\\n- There is no space with the given key.\\n- The calling user does not have permission to view the space.\",\n            \"content\": {}\n          },\n          \"409\": {\n            \"description\": \"Returned if the key already exists within the space.\",\n            \"content\": {}\n          },\n          \"413\": {\n            \"description\": \"Returned if the value for the property is too long.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:space.property:confluence\",\n              \"write:space.property:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-props\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:space.property:confluence\",\n              \"write:space.property:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/space/{spaceKey}/property/{key}\": {\n      \"get\": {\n        \"tags\": [\n          \"Space properties\"\n        ],\n        \"summary\": \"Get space property\",\n        \"description\": \"Returns a space property.\\n\\n**[Permissions required](https://confluence.atlassian.com/x/_AozKw)**: ‘View’ permission for the space.\",\n        \"operationId\": \"getSpaceProperty\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"path\",\n            \"description\": \"The key of the space that the property is in.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"The key of the space property.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"expand\",\n            \"in\": \"query\",\n            \"description\": \"A multi-value parameter indicating which properties of the space\\nproperty to expand. By default, the `version` object is expanded.\\n\\n- `version` returns information about the version of the content.\\n- `space` returns the space that the properties are in.\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"version\",\n                  \"space\"\n                ]\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested space property is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SpaceProperty\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned if any of the following is true:\\n\\n- There is no space with the given key.\\n- There is no property with the given key.\\n- The calling user does not have permission to view the space.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-props\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"put\": {\n        \"tags\": [\n          \"Space properties\"\n        ],\n        \"summary\": \"Update space property\",\n        \"description\": \"Updates a space property. Note, you cannot update the key of a space\\nproperty, only the value.\\n\\n**[Permissions required](https://confluence.atlassian.com/x/_AozKw)**:\\n‘Admin’ permission for the space.\",\n        \"operationId\": \"updateSpaceProperty\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"path\",\n            \"description\": \"The key of the space that the property is in.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"The key of the property to be updated.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The space property being updated.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SpacePropertyUpdate\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the space property is updated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SpaceProperty\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if any of the following is true:\\n\\n- The given property has a different spaceKey to the one in the path.\\n- The property has a different key to the one in the path.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user does not have permission to edit the space with\\nthe given spaceKey\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if any of the following is true:\\n\\n- There is no space with the given spaceKey\\n- There is no property with the given key.\\n- The calling user does not have permission to view the space.\",\n            \"content\": {}\n          },\n          \"409\": {\n            \"description\": \"Returned if the given version is does not match the expected target\\nversion of the updated property\",\n            \"content\": {}\n          },\n          \"413\": {\n            \"description\": \"Returned if the value of the property is too long.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:space.property:confluence\",\n              \"write:space.property:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-props\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:space.property:confluence\",\n              \"write:space.property:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      },\n      \"post\": {\n        \"tags\": [\n          \"Space properties\"\n        ],\n        \"summary\": \"Create space property for key\",\n        \"description\": \"Creates a new space property. This is the same as `POST\\n/wiki/rest/api/space/{spaceKey}/property` but the key for the property is passed as a\\npath parameter, rather than in the request body.\\n\\n**[Permissions required](https://confluence.atlassian.com/x/_AozKw)**:\\n‘Admin’ permission for the space.\",\n        \"operationId\": \"createSpacePropertyForKey\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"path\",\n            \"description\": \"The key of the space that the property will be created in.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"The key of the property to be created.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The space property to be created.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SpacePropertyCreateNoKey\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the space property is created.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SpaceProperty\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if any of the following is true:\\n\\n- The space already has a value with the given key.\\n- No property value was provided.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user does not have the 'Admin' permission for the\\nspace.\",\n            \"content\": {}\n          },\n          \"413\": {\n            \"description\": \"Returned if the value for the property is too long.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:space.property:confluence\",\n              \"write:space.property:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-props\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:space.property:confluence\",\n              \"write:space.property:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Space properties\"\n        ],\n        \"summary\": \"Delete space property\",\n        \"description\": \"Deletes a space property.\\n\\n**[Permissions required](https://confluence.atlassian.com/x/_AozKw)**:\\n‘Admin’ permission for the space.\",\n        \"operationId\": \"deleteSpaceProperty\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"path\",\n            \"description\": \"The key of the space that the property is in.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"The key of the property to be deleted.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Returned if the space property is deleted.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user does not have 'Admin' permission for the space.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if any of the following is true:\\n\\n- There is no space with the given spaceKey\\n- There is no property with the given key.\\n- The calling user does not have permission to view the space.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:space.property:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-props\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:space.property:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/space/{spaceKey}/settings\": {\n      \"get\": {\n        \"tags\": [\n          \"Space settings\"\n        ],\n        \"summary\": \"Get space settings\",\n        \"description\": \"Returns the settings of a space. Currently only the\\n`routeOverrideEnabled` setting can be returned.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'View' permission for the space.\",\n        \"operationId\": \"getSpaceSettings\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"path\",\n            \"description\": \"The key of the space to be queried for its settings.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the space settings are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SpaceSettings\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no space with the given key.\\n- The calling user does not have permission to view the space.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:space.setting:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-space.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:space.setting:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"put\": {\n        \"tags\": [\n          \"Space settings\"\n        ],\n        \"summary\": \"Update space settings\",\n        \"description\": \"Updates the settings for a space. Currently only the\\n`routeOverrideEnabled` setting can be updated.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Admin' permission for the space.\",\n        \"operationId\": \"updateSpaceSettings\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"path\",\n            \"description\": \"The key of the space whose settings will be updated.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The space settings to update.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SpaceSettingsUpdate\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if space settings are updated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SpaceSettings\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no space with the given key.\\n- The calling user does not have permission to update the space.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:space.setting:confluence\",\n              \"write:space.setting:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-space\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:space.setting:confluence\",\n              \"write:space.setting:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"SpaceSettingsUpdate\",\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/space/{spaceKey}/theme\": {\n      \"get\": {\n        \"tags\": [\n          \"Themes\"\n        ],\n        \"summary\": \"Get space theme\",\n        \"description\": \"Returns the theme selected for a space, if one is set. If no space\\ntheme is set, this means that the space is inheriting the global look\\nand feel settings.\\n\\n**[Permissions required](https://confluence.atlassian.com/x/_AozKw)**: ‘View’ permission for the space.\",\n        \"operationId\": \"getSpaceTheme\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"path\",\n            \"description\": \"The key of the space to be queried for its theme.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested theme is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Theme\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned if any of the following is true:\\n\\n- There is no space with the given key.\\n- The space does not have a theme assigned to it.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:space.setting:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-space.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:space.setting:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"put\": {\n        \"tags\": [\n          \"Themes\"\n        ],\n        \"summary\": \"Set space theme\",\n        \"description\": \"Sets the theme for a space. Note, if you want to reset the space theme to\\nthe default Confluence theme, use the 'Reset space theme' method instead\\nof this method.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Admin' permission for the space.\",\n        \"operationId\": \"setSpaceTheme\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"path\",\n            \"description\": \"The key of the space to set the theme for.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ThemeUpdate\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the theme was set for the space.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Theme\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned if the theme key is invalid.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if there is no space with the given key.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:space.setting:confluence\",\n              \"write:space.setting:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-space\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:space.setting:confluence\",\n              \"write:space.setting:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Themes\"\n        ],\n        \"summary\": \"Reset space theme\",\n        \"description\": \"Resets the space theme. This means that the space will inherit the\\nglobal look and feel settings\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Admin' permission for the space.\",\n        \"operationId\": \"resetSpaceTheme\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"path\",\n            \"description\": \"The key of the space to reset the theme for.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Returned if the theme was reset for the space.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if there is no space with the given key.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:space.setting:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-space\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:space.setting:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"DELETE\"\n      }\n    },\n    \"/wiki/rest/api/space/{spaceKey}/watch\": {\n      \"get\": {\n        \"tags\": [\n          \"Content watches\"\n        ],\n        \"summary\": \"Get space watchers\",\n        \"description\": \"Returns a list of watchers of a space\",\n        \"operationId\": \"getWatchersForSpace\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"path\",\n            \"description\": \"The key of the space to get watchers.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The start point of the collection to return.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The limit of the number of items to return, this may be restricted by fixed system limits.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if watchers list is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SpaceWatchArray\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned if there is no space with the given key\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:watcher:confluence\",\n              \"read:user:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:watcher:confluence\",\n              \"read:user:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/space/{spaceKey}/label\": {\n      \"get\": {\n        \"tags\": [\n          \"Experimental\"\n        ],\n        \"summary\": \"Get Space Labels\",\n        \"description\": \"Returns a list of labels associated with a space. Can provide a prefix as well as other filters to\\nselect different types of labels.\",\n        \"operationId\": \"getLabelsForSpace\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"path\",\n            \"description\": \"The key of the space to get labels for.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"prefix\",\n            \"in\": \"query\",\n            \"description\": \"Filters the results to labels with the specified prefix. If this parameter\\nis not specified, then labels with any prefix will be returned.\\n\\n- `global` prefix is used by labels that are on content within the provided space.\\n- `my` prefix can be explicitly added by a user when adding a label\\nvia the UI, e.g. 'my:example-label'.\\n- `team` prefix is used for labels applied to the space.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"global\",\n                \"my\",\n                \"team\"\n              ]\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned labels.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of labels to return per page. Note,\\nthis may be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 200\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the list of labels is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LabelArray\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n- There is no space with the given space key.\\n- The calling user does not have permission to view the space.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:label:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-space.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:label:confluence\"\n            ]\n          }\n        ],\n        \"x-experimental\": true,\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"post\": {\n        \"tags\": [\n          \"Experimental\"\n        ],\n        \"summary\": \"Add labels to a space\",\n        \"description\": \"Adds labels to a piece of content. Does not modify the existing labels.\\n\\nNotes:\\n\\n- Labels can also be added when creating content ([Create content](#api-content-post)).\\n- Labels can be updated when updating content ([Update content](#api-content-id-put)).\\nThis will delete the existing labels and replace them with the labels in\\nthe request.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to update the content.\",\n        \"operationId\": \"addLabelsToSpace\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"path\",\n            \"description\": \"The key of the space to add labels to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The labels to add to the content.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/LabelCreate\"\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the labels are added to the content.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LabelArray\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if;\\n\\n- The body contains labels with invalid characters or too many characters.\\n- The body contains too many labels.\\n- The target content would contain too many labels after the operation.\\n- The calling user does not have permission to edit labels.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user can view but not edit the content.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n- There is no space with the given space key.\\n- The calling user does not have permission to view the space.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:label:confluence\",\n              \"write:label:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-space\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:label:confluence\",\n              \"write:label:confluence\"\n            ]\n          }\n        ],\n        \"x-experimental\": true,\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Experimental\"\n        ],\n        \"summary\": \"Remove label from a space\",\n        \"description\": \"\",\n        \"operationId\": \"deleteLabelFromSpace\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"path\",\n            \"description\": \"The key of the space to remove a labels from.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"The name of the label to remove\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"prefix\",\n            \"in\": \"query\",\n            \"description\": \"The prefix of the label to remove. If not provided defaults to global.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Returned if the label was successfully deleted.\",\n            \"content\": {}\n          },\n          \"400\": {\n            \"description\": \"Returned if;\\n- The user does not provide a label name\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n- There is no space with the given space key.\\n- The calling user does not have permission to view the space.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:label:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-space\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:label:confluence\"\n            ]\n          }\n        ],\n        \"x-experimental\": true,\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/template\": {\n      \"put\": {\n        \"tags\": [\n          \"Template\"\n        ],\n        \"summary\": \"Update content template\",\n        \"description\": \"Updates a content template. Note, blueprint templates cannot be updated\\nvia the REST API.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Admin' permission for the space to update a space template or 'Confluence Administrator'\\nglobal permission to update a global template.\",\n        \"operationId\": \"updateContentTemplate\",\n        \"requestBody\": {\n          \"description\": \"The updated content template.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ContentTemplateUpdate\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the template is updated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContentTemplate\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if template name is null or an empty string.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to update the\\ntemplate.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:template:confluence\",\n              \"read:content-details:confluence\",\n              \"write:template:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:template:confluence\",\n              \"read:content-details:confluence\",\n              \"write:template:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      },\n      \"post\": {\n        \"tags\": [\n          \"Template\"\n        ],\n        \"summary\": \"Create content template\",\n        \"description\": \"Creates a new content template. Note, blueprint templates cannot be created via the REST API.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Admin' permission for the space to create a space template or 'Confluence Administrator'\\nglobal permission to create a global template.\",\n        \"operationId\": \"createContentTemplate\",\n        \"requestBody\": {\n          \"description\": \"The content template to be created.\\nThe content body must be in 'storage' format.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ContentTemplateCreate\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the template is created.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContentTemplate\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if template name is null or an empty string.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to create the\\ntemplate.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:template:confluence\",\n              \"read:content-details:confluence\",\n              \"write:template:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:template:confluence\",\n              \"read:content-details:confluence\",\n              \"write:template:confluence\"\n            ]\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/template/blueprint\": {\n      \"get\": {\n        \"tags\": [\n          \"Template\"\n        ],\n        \"summary\": \"Get blueprint templates\",\n        \"description\": \"Returns all templates provided by blueprints. Use this method to retrieve\\nall global blueprint templates or all blueprint templates in a space.\\n\\nNote, all global blueprints are inherited by each space. Space blueprints\\ncan be customised without affecting the global blueprints.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'View' permission for the space to view blueprints for the space and permission\\nto access the Confluence site ('Can use' global permission) to view global blueprints.\",\n        \"operationId\": \"getBlueprintTemplates\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"query\",\n            \"description\": \"The key of the space to be queried for templates. If the `spaceKey`\\nis not specified, global blueprint templates will be returned.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned templates.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of templates to return per page.\\nNote, this may be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 25\n            }\n          },\n          {\n            \"name\": \"expand\",\n            \"in\": \"query\",\n            \"description\": \"A multi-value parameter indicating which properties of the template\\nto expand.\\n\\n- `body` returns the content of the template in storage format.\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"body\"\n                ]\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested templates are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BlueprintTemplateArray\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to view\\nblueprint templates.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:template:confluence\",\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:template:confluence\",\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/template/page\": {\n      \"get\": {\n        \"tags\": [\n          \"Template\"\n        ],\n        \"summary\": \"Get content templates\",\n        \"description\": \"Returns all content templates. Use this method to retrieve all global\\ncontent templates or all content templates in a space.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'View' permission for the space to view space templates and permission to\\naccess the Confluence site ('Can use' global permission) to view global templates.\",\n        \"operationId\": \"getContentTemplates\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"query\",\n            \"description\": \"The key of the space to be queried for templates. If the `spaceKey`\\nis not specified, global templates will be returned.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned templates.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of templates to return per page.\\nNote, this may be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 25\n            }\n          },\n          {\n            \"name\": \"expand\",\n            \"in\": \"query\",\n            \"description\": \"A multi-value parameter indicating which properties of the template\\nto expand.\\n\\n- `body` returns the content of the template in storage format.\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"body\"\n                ]\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested templates are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContentTemplateArray\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to view the\\ncontent templates.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:template:confluence\",\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:template:confluence\",\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/template/{contentTemplateId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Template\"\n        ],\n        \"summary\": \"Get content template\",\n        \"description\": \"Returns a content template. This includes information about template,\\nlike the name, the space or blueprint that the template is in, the body\\nof the template, and more.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'View' permission for the space to view space templates and permission to\\naccess the Confluence site ('Can use' global permission) to view global templates.\",\n        \"operationId\": \"getContentTemplate\",\n        \"parameters\": [\n          {\n            \"name\": \"contentTemplateId\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content template to be returned.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested template is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContentTemplate\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned if;\\n\\n- There is no template with the given ID.\\n- The calling user does not have permission to view the template.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:template:confluence\",\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:template:confluence\",\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Template\"\n        ],\n        \"summary\": \"Remove template\",\n        \"description\": \"Deletes a template. This results in different actions depending on the\\ntype of template:\\n\\n- If the template is a content template, it is deleted.\\n- If the template is a modified space-level blueprint template, it reverts\\nto the template inherited from the global-level blueprint template.\\n- If the template is a modified global-level blueprint template, it reverts\\nto the default global-level blueprint template.\\n\\n Note, unmodified blueprint templates cannot be deleted.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n        'Admin' permission for the space to delete a space template or 'Confluence Administrator'\\n        global permission to delete a global template.\",\n        \"operationId\": \"removeTemplate\",\n        \"parameters\": [\n          {\n            \"name\": \"contentTemplateId\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the template to be deleted.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Returned if the template has been successfully been deleted.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if;\\n\\n- There is no template with the given ID.\\n- The calling user does not have permission to delete the template.\"\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:template:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:template:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"DELETE\"\n      }\n    },\n    \"/wiki/rest/api/user\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Get user\",\n        \"description\": \"Returns a user. This includes information about the user, such as the\\ndisplay name, account ID, profile picture, and more. The information returned may be\\nrestricted by the user's profile visibility settings.\\n\\n**Note:** to add, edit, or delete users in your organization, see the\\n[user management REST API](/cloud/admin/user-management/about/).\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"getUser\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/userLookupKey\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupUsername\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupAccountId\"\n          },\n          {\n            \"name\": \"expand\",\n            \"in\": \"query\",\n            \"description\": \"A multi-value parameter indicating which properties of the user to\\nexpand.\\n\\n  - `operations` returns the operations that the user is allowed to do.\\n  - personalSpace returns the user's personal space, if it exists.\\n  - `isExternalCollaborator` returns whether the user is an external collaborator user\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"operations\",\n                  \"personalSpace\",\n                  \"isExternalCollaborator\"\n                ]\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested user is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to view users.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if a user with the given accountId does not exist.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-user\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/user/anonymous\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Get anonymous user\",\n        \"description\": \"Returns information about how anonymous users are represented, like the\\nprofile picture and display name.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"getAnonymousUser\",\n        \"parameters\": [\n          {\n            \"name\": \"expand\",\n            \"in\": \"query\",\n            \"description\": \"A multi-value parameter indicating which properties of the user to\\nexpand.\\n\\n  - `operations` returns the operations that the user is allowed to do.\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"operations\"\n                ]\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the anonymous user representation is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserAnonymous\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to use\\nConfluence.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:user:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-user\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:user:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/user/current\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Get current user\",\n        \"description\": \"Returns the currently logged-in user. This includes information about\\nthe user, like the display name, userKey, account ID, profile picture,\\nand more.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"getCurrentUser\",\n        \"parameters\": [\n          {\n            \"name\": \"expand\",\n            \"in\": \"query\",\n            \"description\": \"A multi-value parameter indicating which properties of the user to\\nexpand.\\n\\n  - `operations` returns the operations that the user is allowed to do.\\n  - personalSpace returns the user's personal space, if it exists.\\n  - `isExternalCollaborator` returns whether the user is an external collaborator user\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"operations\",\n                  \"personalSpace\",\n                  \"isExternalCollaborator\"\n                ]\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the current user is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to use\\nConfluence.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-user\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/user/memberof\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Get group memberships for user\",\n        \"description\": \"Returns the groups that a user is a member of.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"getGroupMembershipsForUser\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/userLookupKey\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupUsername\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupAccountId\"\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned groups.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of groups to return per page.\\nNote, this may be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 200\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested groups are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GroupArrayWithLinks\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to use\\nConfluence.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:user:confluence\",\n              \"read:group:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-user\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:user:confluence\",\n              \"read:group:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/user/bulk\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Get multiple users using ids\",\n        \"description\": \"Returns user details for the ids provided in request.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"getBulkUserLookup\",\n        \"parameters\": [\n          {\n            \"name\": \"accountId\",\n            \"in\": \"query\",\n            \"description\": \"A list of accountId's of users to be returned.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"expand\",\n            \"in\": \"query\",\n            \"description\": \"A multi-value parameter indicating which properties of the user to\\nexpand.\\n\\n  - `operations` returns the operations that the user is allowed to do.\\n  - personalSpace returns the user's personal space, if it exists.\",\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"operations\",\n                  \"personalSpace\"\n                ]\n              }\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of results returned.\\nCurrently API returns 200 results max.\\nIf more that 200 ids are passed first 200 will be returned.\",\n            \"schema\": {\n              \"maximum\": 200,\n              \"minimum\": 1,\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if, the list of users is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BulkUserLookupArray\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned if the calling user does not have permission to use\\nConfluence.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:content-details:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-user\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:content-details:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/user/watch/content/{contentId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Content watches\"\n        ],\n        \"summary\": \"Get content watch status\",\n        \"description\": \"Returns whether a user is watching a piece of content. Choose the user by\\ndoing one of the following:\\n\\n- Specify a user via a query parameter: Use the `accountId` to identify the user.\\n- Do not specify a user: The currently logged-in user will be used.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Confluence Administrator' global permission if specifying a user, otherwise\\npermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"getContentWatchStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"contentId\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to be queried for whether the specified user is\\nwatching it.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupKey\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupUsername\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupAccountId\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested watch status is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserWatch\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned if;\\n\\n- The calling user does not have permission to view the\\ncontent.\\n- A user is specified via a query parameter and the calling user is\\nnot a Confluence administrator.\\n- No content exists for the specified `contentId`.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if no `contentId` is specified.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:watcher:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:watcher:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"post\": {\n        \"tags\": [\n          \"Content watches\"\n        ],\n        \"summary\": \"Add content watcher\",\n        \"description\": \"Adds a user as a watcher to a piece of content. Choose the user by doing\\none of the following:\\n\\n- Specify a user via a query parameter: Use the `accountId` to identify the user.\\n- Do not specify a user: The currently logged-in user will be used.\\n\\nNote, you must add the `X-Atlassian-Token: no-check` header when making a\\nrequest, as this operation has XSRF protection.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Confluence Administrator' global permission if specifying a user, otherwise\\npermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"addContentWatcher\",\n        \"parameters\": [\n          {\n            \"name\": \"contentId\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to add the watcher to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupKey\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupUsername\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupAccountId\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Returned if the watcher was successfully created. No response body is\\nreturned.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if;\\n\\n- The `X-Atlassian-Token: no-check` header is not specified.\\n- The calling user does not have permission to view the\\ncontent.\\n- A user is specified via a query parameter and the calling user is\\nnot a Confluence administrator.\\n- No content exists for the specified `contentId`.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if no `contentId` is specified.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:watcher:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:watcher:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Content watches\"\n        ],\n        \"summary\": \"Remove content watcher\",\n        \"description\": \"Removes a user as a watcher from a piece of content. Choose the user by\\ndoing one of the following:\\n\\n- Specify a user via a query parameter: Use the `accountId` to identify the user.\\n- Do not specify a user: The currently logged-in user will be used.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Confluence Administrator' global permission if specifying a user, otherwise\\npermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"removeContentWatcher\",\n        \"parameters\": [\n          {\n            \"name\": \"X-Atlassian-Token\",\n            \"in\": \"header\",\n            \"description\": \"Note, you must add header when making a\\nrequest, as this operation has XSRF protection.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"no-check\"\n            }\n          },\n          {\n            \"name\": \"contentId\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to remove the watcher from.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupKey\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupUsername\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupAccountId\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Returned if the watcher was successfully deleted. No response body is\\nreturned.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if;\\n\\n- The `X-Atlassian-Token: no-check` header is not specified.\\n- The calling user does not have permission to view the\\ncontent.\\n- A user is specified via a query parameter and the calling user is\\nnot a Confluence administrator.\\n- No content exists for the specified `contentId`.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if no `contentId` is specified.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:watcher:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:watcher:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/user/watch/label/{labelName}\": {\n      \"get\": {\n        \"tags\": [\n          \"Content watches\"\n        ],\n        \"summary\": \"Get label watch status\",\n        \"description\": \"Returns whether a user is watching a label. Choose the user by doing one\\nof the following:\\n\\n- Specify a user via a query parameter: Use the `accountId` to identify the user.\\n- Do not specify a user: The currently logged-in user will be used.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Confluence Administrator' global permission if specifying a user, otherwise\\npermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"isWatchingLabel\",\n        \"parameters\": [\n          {\n            \"name\": \"labelName\",\n            \"in\": \"path\",\n            \"description\": \"The name of the label to be queried for whether the specified user is\\nwatching it.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupKey\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupUsername\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupAccountId\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested watch status is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserWatch\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned if;\\n\\n- A user is specified via a query parameter and the calling user is\\nnot a Confluence administrator.\\n- No label exists for the specified `labelName`.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if no `labelName` is specified.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:watcher:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:watcher:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"post\": {\n        \"tags\": [\n          \"Content watches\"\n        ],\n        \"summary\": \"Add label watcher\",\n        \"description\": \"Adds a user as a watcher to a label. Choose the user by doing one of the\\nfollowing:\\n\\n- Specify a user via a query parameter: Use the `accountId` to identify the user.\\n- Do not specify a user: The currently logged-in user will be used.\\n\\nNote, you must add the `X-Atlassian-Token: no-check` header when making a\\nrequest, as this operation has XSRF protection.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Confluence Administrator' global permission if specifying a user, otherwise\\npermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"addLabelWatcher\",\n        \"parameters\": [\n          {\n            \"name\": \"X-Atlassian-Token\",\n            \"in\": \"header\",\n            \"description\": \"Note, you must add header when making a\\nrequest, as this operation has XSRF protection.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"no-check\"\n            }\n          },\n          {\n            \"name\": \"labelName\",\n            \"in\": \"path\",\n            \"description\": \"The name of the label to add the watcher to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupKey\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupUsername\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupAccountId\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Returned if the watcher was successfully created. No response body is\\nreturned.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if;\\n\\n- The `X-Atlassian-Token: no-check` header is not specified.\\n- A user is specified via a query parameter and the calling user is\\nnot a Confluence administrator.\\n- No label exists for the specified `labelName`.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if no `labelName` is specified.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:watcher:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:watcher:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Content watches\"\n        ],\n        \"summary\": \"Remove label watcher\",\n        \"description\": \"Removes a user as a watcher from a label. Choose the user by doing one of\\nthe following:\\n\\n- Specify a user via a query parameter: Use the `accountId` to identify the user.\\n- Do not specify a user: The currently logged-in user will be used.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Confluence Administrator' global permission if specifying a user, otherwise\\npermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"removeLabelWatcher\",\n        \"parameters\": [\n          {\n            \"name\": \"labelName\",\n            \"in\": \"path\",\n            \"description\": \"The name of the label to remove the watcher from.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupKey\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupUsername\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupAccountId\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Returned if the watcher was successfully deleted. No response body is\\nreturned.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if;\\n\\n- The `X-Atlassian-Token: no-check` header is not specified.\\n- A user is specified via a query parameter and the calling user is\\nnot a Confluence administrator.\\n- No label exists for the specified `labelName`.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if no `labelName` is specified.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:watcher:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:watcher:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/user/watch/space/{spaceKey}\": {\n      \"get\": {\n        \"tags\": [\n          \"Content watches\"\n        ],\n        \"summary\": \"Get space watch status\",\n        \"description\": \"Returns whether a user is watching a space. Choose the user by\\ndoing one of the following:\\n\\n- Specify a user via a query parameter: Use the `accountId` to identify the user.\\n- Do not specify a user: The currently logged-in user will be used.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Confluence Administrator' global permission if specifying a user, otherwise\\npermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"isWatchingSpace\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"path\",\n            \"description\": \"The key of the space to be queried for whether the specified user is\\nwatching it.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupKey\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupUsername\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupAccountId\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested watch status is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserWatch\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned if;\\n\\n- The calling user does not have permission to view the\\nspace.\\n- A user is specified via a query parameter and the calling user is\\nnot a Confluence administrator.\\n- No space exists for the specified `spaceKey`.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if no `spaceKey` is specified.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:watcher:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:watcher:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"post\": {\n        \"tags\": [\n          \"Content watches\"\n        ],\n        \"summary\": \"Add space watcher\",\n        \"description\": \"Adds a user as a watcher to a space. Choose the user by doing one of the\\nfollowing:\\n\\n- Specify a user via a query parameter: Use the `accountId` to identify the user.\\n- Do not specify a user: The currently logged-in user will be used.\\n\\nNote, you must add the `X-Atlassian-Token: no-check` header when making a\\nrequest, as this operation has XSRF protection.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Confluence Administrator' global permission if specifying a user, otherwise\\npermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"addSpaceWatcher\",\n        \"parameters\": [\n          {\n            \"name\": \"X-Atlassian-Token\",\n            \"in\": \"header\",\n            \"description\": \"Note, you must add header when making a\\nrequest, as this operation has XSRF protection.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"no-check\"\n            }\n          },\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"path\",\n            \"description\": \"The key of the space to add the watcher to.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupKey\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupUsername\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupAccountId\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Returned if the watcher was successfully created. No response body is\\nreturned.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if;\\n\\n- The `X-Atlassian-Token: no-check` header is not specified.\\n- The calling user does not have permission to view the\\nspace.\\n- A user is specified via a query parameter and the calling user is\\nnot a Confluence administrator.\\n- No space exists for the specified `spaceKey`.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if no `spaceKey` is specified.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:watcher:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:watcher:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Content watches\"\n        ],\n        \"summary\": \"Remove space watch\",\n        \"description\": \"Removes a user as a watcher from a space. Choose the user by doing one of\\nthe following:\\n\\n- Specify a user via a query parameter: Use the `accountId` to identify the user.\\n- Do not specify a user: The currently logged-in user will be used.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Confluence Administrator' global permission if specifying a user, otherwise\\npermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"removeSpaceWatch\",\n        \"parameters\": [\n          {\n            \"name\": \"spaceKey\",\n            \"in\": \"path\",\n            \"description\": \"The key of the space to remove the watcher from.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupKey\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupUsername\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/userLookupAccountId\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Returned if the watcher was successfully deleted. No response body is returned.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if;\\n\\n- The `X-Atlassian-Token: no-check` header is not specified.\\n- The calling user does not have permission to view the space.\\n- A user is specified via a query parameter and the calling user is\\nnot a Confluence administrator.\\n- No space exists for the specified `spaceKey`.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if no `spaceKey` is specified.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"write:watcher:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"write:confluence-content\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"write:watcher:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    },\n    \"/wiki/rest/api/user/email\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Get user email address\",\n        \"description\": \"Returns a user's email address. This API is only available to apps approved by\\nAtlassian, according to these [guidelines](https://community.developer.atlassian.com/t/guidelines-for-requesting-access-to-email-address/27603).\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"getPrivacyUnsafeUserEmail\",\n        \"parameters\": [\n          {\n            \"name\": \"accountId\",\n            \"in\": \"query\",\n            \"description\": \"The account ID of the user, which uniquely identifies the user across all Atlassian products.\\nFor example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`. Required.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested user's email is returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AccountIdEmailRecord\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if the calling app is not approved to use this API.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if a user with the given accountId does not exist.\",\n            \"content\": {}\n          },\n          \"501\": {\n            \"description\": \"Indicates that the API is not currently enabled.\",\n            \"content\": {}\n          }\n        },\n        \"x-atlassian-connect-scope\": \"ACCESS_EMAIL_ADDRESSES\"\n      }\n    },\n    \"/wiki/rest/api/user/email/bulk\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Get user email addresses in batch\",\n        \"description\": \"Returns user email addresses for a set of accountIds. This API is only available to apps approved by\\nAtlassian, according to these [guidelines](https://community.developer.atlassian.com/t/guidelines-for-requesting-access-to-email-address/27603).\\n\\nAny accounts which are not available will not be included in the result.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"getPrivacyUnsafeUserEmailBulk\",\n        \"parameters\": [\n          {\n            \"name\": \"accountId\",\n            \"in\": \"query\",\n            \"description\": \"The account IDs of the users.\",\n            \"required\": true,\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the request is successful.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AccountIdEmailRecordArray\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if the calling app is not approved to use this API.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"501\": {\n            \"description\": \"Indicates that the API is not currently enabled.\",\n            \"content\": {}\n          }\n        },\n        \"x-atlassian-connect-scope\": \"ACCESS_EMAIL_ADDRESSES\"\n      }\n    },\n    \"/wiki/rest/api/user/bulk/migration\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Get user accountIds\",\n        \"description\": \"Returns the accountIds for the users specified in the key or username parameters. Note that multiple key and username parameters can be specified.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\n'Confluence Administrator' global permission if specifying a user, otherwise\\npermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"getBulkUserMigration\",\n        \"parameters\": [\n          {\n            \"name\": \"key\",\n            \"in\": \"query\",\n            \"description\": \"The key of a user. To specify multiple users, pass multiple key parameters separated by ampersands.\\nFor example, key=mia\u0026key=alana. Required if username isn't provided. Cannot be provided if username is present.\",\n            \"style\": \"form\",\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"description\": \"The username of a user. To specify multiple users, pass multiple username parameters separated by ampersands.\\nFor example, username=mia\u0026username=alana. Required if key isn't provided. Cannot be provided if key is present.\",\n            \"style\": \"form\",\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The index of the first item to return in a page of results (page offset).\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of results to return per page.\\nNote, this may be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 200\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the request is successful.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MigratedUserArray\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if no `username` or 'key' is specified.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if;\\n\\n- The calling user does not have permission to view users.\\n- A schema has not been defined for this response code.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:user:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-user\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:user:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/atlassian-connect/1/app/module/dynamic\": {\n      \"get\": {\n        \"tags\": [\n          \"Dynamic modules\"\n        ],\n        \"summary\": \"Get modules\",\n        \"description\": \"Returns all modules registered dynamically by the calling app.\\n\\n**[Permissions](#permissions) required:** Only Connect apps can make this request.\",\n        \"operationId\": \"getModules\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the request is successful.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ConnectModules\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned if the call is not from a Connect app.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DynamicModulesErrorMessage\"\n                }\n              },\n              \"message\": {\n                \"example\": \"The request is not from a Connect app.\"\n              }\n            }\n          }\n        },\n        \"deprecated\": false,\n        \"x-experimental\": true,\n        \"x-atlassian-connect-scope\": \"INACCESSIBLE\"\n      },\n      \"post\": {\n        \"tags\": [\n          \"Dynamic modules\"\n        ],\n        \"summary\": \"Register modules\",\n        \"description\": \"Registers a list of modules. For the list of modules that support dynamic registration, see [Dynamic modules](https://developer.atlassian.com/cloud/confluence/dynamic-modules/).\\n\\n**[Permissions](#permissions) required:** Only Connect apps can make this request.\",\n        \"operationId\": \"registerModules\",\n        \"requestBody\": {\n          \"content\": {\n            \"*/*\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConnectModules\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the request is successful.\",\n            \"content\": {}\n          },\n          \"400\": {\n            \"description\": \"Returned if:\\n* any of the provided modules is invalid. For example, required properties are missing.\\n* any of the modules conflict with registered dynamic modules or modules defined in the app descriptor. For example, there are duplicate keys.\\n\\nDetails of the issues encountered are included in the error message.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DynamicModulesErrorMessage\"\n                }\n              },\n              \"message\": {\n                \"example\": \"Installation failed. The app com.example.app.key has duplicate module keys: [module-key]. Please contact the app vendor.\"\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned if the call is not from a Connect app.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DynamicModulesErrorMessage\"\n                }\n              },\n              \"message\": {\n                \"example\": \"The request is not from a Connect app.\"\n              }\n            }\n          }\n        },\n        \"deprecated\": false,\n        \"x-experimental\": true,\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-atlassian-connect-scope\": \"INACCESSIBLE\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Dynamic modules\"\n        ],\n        \"summary\": \"Remove modules\",\n        \"description\": \"Remove all or a list of modules registered by the calling app.\\n\\n**[Permissions](#permissions) required:** Only Connect apps can make this request.\",\n        \"operationId\": \"removeModules\",\n        \"parameters\": [\n          {\n            \"name\": \"moduleKey\",\n            \"in\": \"query\",\n            \"description\": \"The key of the module to remove. To include multiple module keys, provide multiple copies of this parameter.\\nFor example, `moduleKey=dynamic-attachment-entity-property\u0026moduleKey=dynamic-select-field`.\\nNonexistent keys are ignored.\",\n            \"required\": true,\n            \"style\": \"form\",\n            \"explode\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Returned if the request is successful.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the call is not from a Connect app.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DynamicModulesErrorMessage\"\n                }\n              },\n              \"message\": {\n                \"example\": \"The request is not from a Connect app.\"\n              }\n            }\n          }\n        },\n        \"deprecated\": false,\n        \"x-experimental\": true,\n        \"x-atlassian-connect-scope\": \"INACCESSIBLE\"\n      }\n    },\n    \"/wiki/rest/api/analytics/content/{contentId}/views\": {\n      \"get\": {\n        \"tags\": [\n          \"Analytics\"\n        ],\n        \"summary\": \"Get views\",\n        \"description\": \"Get the total number of views a piece of content has.\",\n        \"operationId\": \"getViews\",\n        \"parameters\": [\n          {\n            \"name\": \"contentId\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to get the views for.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"fromDate\",\n            \"in\": \"query\",\n            \"description\": \"The number of views for the content since the date.\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"2021-03-21T00:00:00.000Z\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns the total number of views for the content.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"integer\",\n                      \"description\": \"The content ID.\"\n                    },\n                    \"count\": {\n                      \"type\": \"integer\",\n                      \"description\": \"The total number of views for the content.\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if client input is invalid.\"\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the authentication credentials are missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n- There is no content with the given ID.\"\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:analytics.content:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:analytics.content:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/analytics/content/{contentId}/viewers\": {\n      \"get\": {\n        \"tags\": [\n          \"Analytics\"\n        ],\n        \"summary\": \"Get viewers\",\n        \"description\": \"Get the total number of distinct viewers a piece of content has.\",\n        \"operationId\": \"getViewers\",\n        \"parameters\": [\n          {\n            \"name\": \"contentId\",\n            \"in\": \"path\",\n            \"description\": \"The ID of the content to get the viewers for.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"fromDate\",\n            \"in\": \"query\",\n            \"description\": \"The number of views for the content since the date.\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"2021-03-21T00:00:00.000Z\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns the total number of distinct viewers for the content.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"integer\",\n                      \"description\": \"The content ID.\"\n                    },\n                    \"count\": {\n                      \"type\": \"integer\",\n                      \"description\": \"The total number of distinct viewers for the content.\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if client input is invalid.\"\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the authentication credentials are missing\\nfrom the request.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n- There is no content with the given ID.\"\n          }\n        },\n        \"security\": [\n          {\n            \"oAuthDefinitions\": [\n              \"read:analytics.content:confluence\"\n            ]\n          },\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-atlassian-oauth2-scopes\": [\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Deprecated\",\n            \"scopes\": [\n              \"read:confluence-content.summary\"\n            ]\n          },\n          {\n            \"scheme\": \"oAuthDefinitions\",\n            \"state\": \"Current\",\n            \"scopes\": [\n              \"read:analytics.content:confluence\"\n            ]\n          }\n        ],\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/user/{userId}/property\": {\n      \"get\": {\n        \"tags\": [\n          \"Experimental\"\n        ],\n        \"summary\": \"Get user properties\",\n        \"description\": \"Returns the properties for a user as list of property keys. For more information\\nabout user properties, see [Confluence entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).\\n`Note`, these properties stored against a user are on a Confluence site level and not space/content level.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"getUserProperties\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"description\": \"The account ID of the user to be queried for its properties.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"The starting index of the returned properties.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The maximum number of properties to return per page.\\nNote, this may be restricted by fixed system limits.\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"maximum\": 25,\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 5\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested properties are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserPropertyKeyArray\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if request has malformed syntax or userId is not a valid user id.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing from the request.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user does not have the correct permissions.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if there is no user with the given user ID.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-experimental\": true,\n        \"x-atlassian-connect-scope\": \"READ\"\n      }\n    },\n    \"/wiki/rest/api/user/{userId}/property/{key}\": {\n      \"get\": {\n        \"tags\": [\n          \"Experimental\"\n        ],\n        \"summary\": \"Get user property\",\n        \"description\": \"Returns the property corresponding to `key` for a user. For more information\\nabout user properties, see [Confluence entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).\\n`Note`, these properties stored against a user are on a Confluence site level and not space/content level.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"getUserProperty\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"description\": \"The account ID of the user to be queried for its properties.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"The key of the user property.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^[-_a-zA-Z0-9]+$\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returned if the requested properties are returned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserProperty\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned if;\\n\\n- The key is too long.\\n- Request has malformed syntax or userId is not a valid user id.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing from the request.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user does not have the correct permissions.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no user with the given user ID\\n- There is no user property with the given key\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-experimental\": true,\n        \"x-atlassian-connect-scope\": \"READ\"\n      },\n      \"put\": {\n        \"tags\": [\n          \"Experimental\"\n        ],\n        \"summary\": \"Update user property\",\n        \"description\": \"Updates a property for the given user. Note, you cannot update the key of a user property, only the value.\\nFor more information about user properties, see\\n[Confluence entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).\\n`Note`, these properties stored against a user are on a Confluence site level and not space/content level.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"updateUserProperty\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"description\": \"The account ID of the user. The accountId uniquely identifies the user across all Atlassian\\nproducts. For example, 384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"The key of the user property.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^[-_a-zA-Z0-9]+$\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The user property to be updated.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserPropertyUpdate\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Returned if the user property is updated.\"\n          },\n          \"400\": {\n            \"description\": \"Returned if;\\n\\n- The key is too long.\\n- The value is empty.\\n- The value is too long.\\n- Request has malformed syntax or userId is not a valid user id.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing from the request.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user does not have the correct permissions.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no user property with the given key.\\n- There is no user with the given user id.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-experimental\": true,\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      },\n      \"post\": {\n        \"tags\": [\n          \"Experimental\"\n        ],\n        \"summary\": \"Create user property by key\",\n        \"description\": \"Creates a property for a user. For more information  about user properties, see [Confluence entity properties]\\n(https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).\\n`Note`, these properties stored against a user are on a Confluence site level and not space/content level.\\n\\n`Note:` the number of properties which could be created per app in a tenant for each user might be \\nrestricted by fixed system limits.\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"createUserProperty\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"description\": \"The account ID of the user. The accountId uniquely identifies the user across all Atlassian\\nproducts. For example, 384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"The key of the user property.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^[-_a-zA-Z0-9]+$\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The user property to be created.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserPropertyCreate\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Returned if the user property is created.\"\n          },\n          \"400\": {\n            \"description\": \"Returned if;\\n\\n- The key is too long.\\n- The value is empty.\\n- The value is too long.\\n- Request has malformed syntax or userId is not a valid user id.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing from the request.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user does not have the correct permissions.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if there is no user with the given user id.\",\n            \"content\": {}\n          },\n          \"409\": {\n            \"description\": \"Returned if the key already exists for the user.\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-codegen-request-body-name\": \"body\",\n        \"x-experimental\": true,\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Experimental\"\n        ],\n        \"summary\": \"Delete user property\",\n        \"description\": \"Deletes a property for the given user.\\nFor more information about user properties, see\\n[Confluence entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).\\n`Note`, these properties stored against a user are on a Confluence site level and not space/content level.\\n\\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\\nPermission to access the Confluence site ('Can use' global permission).\",\n        \"operationId\": \"deleteUserProperty\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"description\": \"The account ID of the user. The accountId uniquely identifies the user across all Atlassian\\nproducts. For example, 384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"description\": \"The key of the user property.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^[-_a-zA-Z0-9]+$\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Returned if the user property is deleted.\"\n          },\n          \"400\": {\n            \"description\": \"Returned if;\\n\\n- The key is too long.\\n- Request has malformed syntax or userId is not a valid user id.\",\n            \"content\": {}\n          },\n          \"401\": {\n            \"description\": \"Returned if the authentication credentials are incorrect or missing from the request.\",\n            \"content\": {}\n          },\n          \"403\": {\n            \"description\": \"Returned if the user does not have the correct permissions.\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"Returned if;\\n\\n- There is no user property with the given key\\n- There is no user with the given user id\",\n            \"content\": {}\n          }\n        },\n        \"security\": [\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"x-experimental\": true,\n        \"x-atlassian-connect-scope\": \"WRITE\"\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"AccountId\": {\n        \"required\": [\n          \"accountId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"accountId\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"AccountIdEmailRecord\": {\n        \"required\": [\n          \"accountId\",\n          \"email\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"accountId\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"AccountIdEmailRecordArray\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/AccountIdEmailRecord\"\n        }\n      },\n      \"AffectedObject\": {\n        \"required\": [\n          \"name\",\n          \"objectType\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"objectType\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"AttachmentUpdate\": {\n        \"required\": [\n          \"id\",\n          \"type\",\n          \"version\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"version\": {\n            \"required\": [\n              \"number\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"number\": {\n                \"type\": \"integer\",\n                \"description\": \"The version number.\",\n                \"format\": \"int32\"\n              }\n            },\n            \"description\": \"The attachment version. Set this to the current version number of the\\nattachment. Note, the version number only needs to be incremented when\\nupdating the actual attachment, not its properties.\"\n          },\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"The ID of the attachment to be updated.\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"Set this to `attachment`.\",\n            \"enum\": [\n              \"attachment\"\n            ]\n          },\n          \"title\": {\n            \"maxLength\": 255,\n            \"type\": \"string\",\n            \"description\": \"The updated name of the attachment.\"\n          },\n          \"metadata\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"mediaType\": {\n                \"type\": \"string\",\n                \"description\": \"The media type of the attachment, e.g. 'img/jpg'.\"\n              },\n              \"comment\": {\n                \"type\": \"string\",\n                \"description\": \"The comment for this update.\"\n              }\n            }\n          },\n          \"container\": {\n            \"required\": [\n              \"id\",\n              \"type\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"description\": \"The `id` of the parent content.\"\n              },\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"The content type. You can only attach attachments to content\\nof type: `page`, `blogpost`.\"\n              }\n            },\n            \"description\": \"The new content to attach the attachment to.\"\n          }\n        }\n      },\n      \"AuditRecord\": {\n        \"required\": [\n          \"affectedObject\",\n          \"associatedObjects\",\n          \"author\",\n          \"category\",\n          \"changedValues\",\n          \"creationDate\",\n          \"description\",\n          \"remoteAddress\",\n          \"summary\",\n          \"sysAdmin\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"author\": {\n            \"required\": [\n              \"displayName\",\n              \"operations\",\n              \"type\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"default\": \"user\",\n                \"enum\": [\n                  \"user\"\n                ]\n              },\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"operations\": {\n                \"nullable\": true,\n                \"type\": \"object\",\n                \"properties\": {}\n              },\n              \"username\": {\n                \"$ref\": \"#/components/schemas/GenericUserName\"\n              },\n              \"userKey\": {\n                \"$ref\": \"#/components/schemas/GenericUserKey\"\n              },\n              \"accountId\": {\n                \"$ref\": \"#/components/schemas/GenericAccountId\"\n              },\n              \"accountType\": {\n                \"type\": \"string\"\n              },\n              \"externalCollaborator\": {\n                \"type\": \"boolean\"\n              },\n              \"isExternalCollaborator\": {\n                \"type\": \"boolean\",\n                \"description\": \"Whether the user is an external collaborator user\"\n              },\n              \"publicName\": {\n                \"type\": \"string\",\n                \"description\": \"The public name or nickname of the user. Will always contain a value.\"\n              }\n            }\n          },\n          \"remoteAddress\": {\n            \"type\": \"string\"\n          },\n          \"creationDate\": {\n            \"type\": \"integer\",\n            \"description\": \"The creation date-time of the audit record, as a timestamp.\",\n            \"format\": \"int64\"\n          },\n          \"summary\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"category\": {\n            \"type\": \"string\"\n          },\n          \"sysAdmin\": {\n            \"type\": \"boolean\"\n          },\n          \"superAdmin\": {\n            \"type\": \"boolean\"\n          },\n          \"affectedObject\": {\n            \"$ref\": \"#/components/schemas/AffectedObject\"\n          },\n          \"changedValues\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ChangedValue\"\n            }\n          },\n          \"associatedObjects\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AffectedObject\"\n            }\n          }\n        }\n      },\n      \"AuditRecordArray\": {\n        \"required\": [\n          \"_links\",\n          \"limit\",\n          \"results\",\n          \"size\",\n          \"start\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"results\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AuditRecord\"\n            }\n          },\n          \"start\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"AuditRecordCreate\": {\n        \"required\": [\n          \"remoteAddress\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"author\": {\n            \"required\": [\n              \"type\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Set to 'user'.\",\n                \"default\": \"user\",\n                \"enum\": [\n                  \"user\"\n                ]\n              },\n              \"displayName\": {\n                \"type\": \"string\",\n                \"description\": \"The name that is displayed on the audit log in the Confluence UI.\"\n              },\n              \"operations\": {\n                \"type\": \"object\",\n                \"properties\": {},\n                \"description\": \"Always defaults to null.\"\n              },\n              \"username\": {\n                \"$ref\": \"#/components/schemas/GenericUserName\"\n              },\n              \"userKey\": {\n                \"$ref\": \"#/components/schemas/GenericUserKey\"\n              }\n            },\n            \"description\": \"The user that actioned the event. If `author` is not specified, then all\\n`author` properties will be set to null/empty, except for `type` which\\nwill be set to 'user'.\"\n          },\n          \"remoteAddress\": {\n            \"type\": \"string\",\n            \"description\": \"The IP address of the computer where the event was initiated from.\"\n          },\n          \"creationDate\": {\n            \"type\": \"integer\",\n            \"description\": \"The creation date-time of the audit record, as a timestamp. This is converted\\nto a date-time display in the Confluence UI. If the `creationDate` is not\\nspecified, then it will be set to the timestamp for the current date-time.\",\n            \"format\": \"int64\"\n          },\n          \"summary\": {\n            \"type\": \"string\",\n            \"description\": \"The summary of the event, which is displayed in the 'Change' column on\\nthe audit log in the Confluence UI.\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"description\": \"A long description of the event, which is displayed in the 'Description'\\nfield on the audit log in the Confluence UI.\"\n          },\n          \"category\": {\n            \"type\": \"string\",\n            \"description\": \"The category of the event, which is displayed in the 'Event type' column\\non the audit log in the Confluence UI.\"\n          },\n          \"sysAdmin\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates whether the event was actioned by a system administrator.\",\n            \"default\": false\n          },\n          \"affectedObject\": {\n            \"$ref\": \"#/components/schemas/AffectedObject\"\n          },\n          \"changedValues\": {\n            \"type\": \"array\",\n            \"description\": \"The values that were changed in the event.\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ChangedValue\"\n            }\n          },\n          \"associatedObjects\": {\n            \"type\": \"array\",\n            \"description\": \"Objects that were associated with the event. For example, if the event\\nwas a space permission change then the associated object would be the\\nspace.\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AffectedObject\"\n            }\n          }\n        }\n      },\n      \"BlueprintTemplate\": {\n        \"required\": [\n          \"_links\",\n          \"description\",\n          \"labels\",\n          \"name\",\n          \"originalTemplate\",\n          \"referencingBlueprint\",\n          \"templateId\",\n          \"templateType\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"templateId\": {\n            \"type\": \"string\"\n          },\n          \"originalTemplate\": {\n            \"required\": [\n              \"moduleKey\",\n              \"pluginKey\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"pluginKey\": {\n                \"type\": \"string\"\n              },\n              \"moduleKey\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"referencingBlueprint\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"space\": {\n            \"type\": \"object\",\n            \"additionalProperties\": true\n          },\n          \"labels\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Label\"\n            }\n          },\n          \"templateType\": {\n            \"type\": \"string\"\n          },\n          \"editorVersion\": {\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"$ref\": \"#/components/schemas/ContentTemplateBody\"\n          },\n          \"_expandable\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"body\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"BlueprintTemplateArray\": {\n        \"required\": [\n          \"_links\",\n          \"limit\",\n          \"results\",\n          \"size\",\n          \"start\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"results\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/BlueprintTemplate\"\n            }\n          },\n          \"start\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"ButtonLookAndFeel\": {\n        \"required\": [\n          \"backgroundColor\",\n          \"color\"\n        ],\n        \"type\": \"object\",\n        \"nullable\": true,\n        \"properties\": {\n          \"backgroundColor\": {\n            \"type\": \"string\"\n          },\n          \"color\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Breadcrumb\": {\n        \"required\": [\n          \"label\",\n          \"separator\",\n          \"url\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"label\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          },\n          \"separator\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ChangedValue\": {\n        \"required\": [\n          \"name\",\n          \"newValue\",\n          \"oldValue\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"oldValue\": {\n            \"type\": \"string\"\n          },\n          \"hiddenOldValue\": {\n            \"type\": \"string\"\n          },\n          \"newValue\": {\n            \"type\": \"string\"\n          },\n          \"hiddenNewValue\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ConnectModule\": {\n        \"type\": \"object\",\n        \"description\": \"A [Connect module](https://developer.atlassian.com/cloud/confluence/modules/admin-page/) in the same format as in the\\n[app descriptor](https://developer.atlassian.com/cloud/confluence/app-descriptor/).\",\n        \"example\": {\n          \"key\": \"my-webitem\",\n          \"location\": \"system.admin/globalsettings\",\n          \"url\": \"/my-web-item\",\n          \"name\": {\n            \"value\": \"My Web Item\"\n          }\n        }\n      },\n      \"ConnectModules\": {\n        \"required\": [\n          \"modules\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"modules\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ConnectModule\"\n            },\n            \"description\": \"A list of app modules in the same format as the `modules` property in the\\n[app descriptor](https://developer.atlassian.com/cloud/confluence/app-descriptor/).\"\n          }\n        },\n        \"example\": {\n          \"webItems\": [\n            {\n              \"key\": \"my-webitem\",\n              \"location\": \"system.admin/globalsettings\",\n              \"url\": \"/my-web-item\",\n              \"name\": {\n                \"value\": \"My Web Item\"\n              }\n            }\n          ],\n          \"adminPages\": [\n            {\n              \"key\": \"my-admin-page\",\n              \"name\": {\n                \"value\": \"My Admin Page\"\n              },\n              \"url\": \"/my-admin-page\"\n            }\n          ]\n        }\n      },\n      \"Container\": {\n        \"type\": \"object\",\n        \"nullable\": true,\n        \"additionalProperties\": true,\n        \"description\": \"Container for content. This can be either a space (containing a page or blogpost)\\nor a page/blog post (containing an attachment or comment)\"\n      },\n      \"ContainerLookAndFeel\": {\n        \"required\": [\n          \"background\",\n          \"backgroundColor\",\n          \"backgroundImage\",\n          \"backgroundSize\",\n          \"borderRadius\",\n          \"padding\"\n        ],\n        \"type\": \"object\",\n        \"nullable\": true,\n        \"properties\": {\n          \"background\": {\n            \"type\": \"string\"\n          },\n          \"backgroundAttachment\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"backgroundBlendMode\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"backgroundClip\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"backgroundColor\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"backgroundImage\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"backgroundOrigin\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"backgroundPosition\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"backgroundRepeat\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"backgroundSize\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"padding\": {\n            \"type\": \"string\"\n          },\n          \"borderRadius\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ContainerSummary\": {\n        \"required\": [\n          \"displayUrl\",\n          \"title\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"displayUrl\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Content\": {\n        \"required\": [\n          \"status\",\n          \"type\"\n        ],\n        \"nullable\": true,\n        \"type\": \"object\",\n        \"additionalProperties\": true,\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"Can be \\\"page\\\", \\\"blogpost\\\", \\\"attachment\\\" or \\\"content\\\"\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"space\": {\n            \"$ref\": \"#/components/schemas/Space\"\n          },\n          \"history\": {\n            \"$ref\": \"#/components/schemas/ContentHistory\"\n          },\n          \"version\": {\n            \"$ref\": \"#/components/schemas/Version\"\n          },\n          \"ancestors\": {\n            \"nullable\": true,\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Content\"\n            }\n          },\n          \"operations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/OperationCheckResult\"\n            }\n          },\n          \"children\": {\n            \"$ref\": \"#/components/schemas/ContentChildren\"\n          },\n          \"childTypes\": {\n            \"$ref\": \"#/components/schemas/ContentChildType\"\n          },\n          \"descendants\": {\n            \"$ref\": \"#/components/schemas/ContentChildren\"\n          },\n          \"container\": {\n            \"$ref\": \"#/components/schemas/Container\"\n          },\n          \"body\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"view\": {\n                \"$ref\": \"#/components/schemas/ContentBody\"\n              },\n              \"export_view\": {\n                \"$ref\": \"#/components/schemas/ContentBody\"\n              },\n              \"styled_view\": {\n                \"$ref\": \"#/components/schemas/ContentBody\"\n              },\n              \"storage\": {\n                \"$ref\": \"#/components/schemas/ContentBody\"\n              },\n              \"wiki\": {\n                \"$ref\": \"#/components/schemas/ContentBody\"\n              },\n              \"editor\": {\n                \"$ref\": \"#/components/schemas/ContentBody\"\n              },\n              \"editor2\": {\n                \"$ref\": \"#/components/schemas/ContentBody\"\n              },\n              \"anonymous_export_view\": {\n                \"$ref\": \"#/components/schemas/ContentBody\"\n              },\n              \"atlas_doc_format\": {\n                \"$ref\": \"#/components/schemas/ContentBody\"\n              },\n              \"dynamic\": {\n                \"$ref\": \"#/components/schemas/ContentBody\"\n              },\n              \"_expandable\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"editor\": {\n                    \"type\": \"string\"\n                  },\n                  \"view\": {\n                    \"type\": \"string\"\n                  },\n                  \"export_view\": {\n                    \"type\": \"string\"\n                  },\n                  \"styled_view\": {\n                    \"type\": \"string\"\n                  },\n                  \"storage\": {\n                    \"type\": \"string\"\n                  },\n                  \"editor2\": {\n                    \"type\": \"string\"\n                  },\n                  \"anonymous_export_view\": {\n                    \"type\": \"string\"\n                  },\n                  \"atlas_doc_format\": {\n                    \"type\": \"string\"\n                  },\n                  \"wiki\": {\n                    \"type\": \"string\"\n                  },\n                  \"dynamic\": {\n                    \"type\": \"string\"\n                  },\n                  \"raw\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          },\n          \"restrictions\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"read\": {\n                \"$ref\": \"#/components/schemas/ContentRestriction\"\n              },\n              \"update\": {\n                \"$ref\": \"#/components/schemas/ContentRestriction\"\n              },\n              \"_expandable\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"read\": {\n                    \"type\": \"string\"\n                  },\n                  \"update\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"_links\": {\n                \"$ref\": \"#/components/schemas/GenericLinks\"\n              }\n            }\n          },\n          \"metadata\": {\n            \"$ref\": \"#/components/schemas/ContentMetadata\"\n          },\n          \"macroRenderedOutput\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"object\"\n            }\n          },\n          \"extensions\": {\n            \"type\": \"object\"\n          },\n          \"_expandable\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"childTypes\": {\n                \"type\": \"string\"\n              },\n              \"container\": {\n                \"type\": \"string\"\n              },\n              \"metadata\": {\n                \"type\": \"string\"\n              },\n              \"operations\": {\n                \"type\": \"string\"\n              },\n              \"children\": {\n                \"type\": \"string\"\n              },\n              \"restrictions\": {\n                \"type\": \"string\"\n              },\n              \"history\": {\n                \"type\": \"string\"\n              },\n              \"ancestors\": {\n                \"type\": \"string\"\n              },\n              \"body\": {\n                \"type\": \"string\"\n              },\n              \"version\": {\n                \"type\": \"string\"\n              },\n              \"descendants\": {\n                \"type\": \"string\"\n              },\n              \"space\": {\n                \"type\": \"string\"\n              },\n              \"extensions\": {\n                \"type\": \"string\"\n              },\n              \"schedulePublishDate\": {\n                \"type\": \"string\"\n              },\n              \"macroRenderedOutput\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        },\n        \"description\": \"Base object for all content types.\"\n      },\n      \"ContentArray\": {\n        \"required\": [\n          \"_links\",\n          \"results\",\n          \"size\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"results\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Content\"\n            }\n          },\n          \"start\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"ContentBlogpost\": {\n        \"description\": \"Representation of a blogpost (content)\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Content\"\n          },\n          {\n            \"required\": [\n              \"_links\",\n              \"metadata\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"metadata\": {\n                \"$ref\": \"#/components/schemas/ContentMetadata\"\n              },\n              \"_links\": {\n                \"$ref\": \"#/components/schemas/GenericLinks\"\n              }\n            }\n          }\n        ]\n      },\n      \"ContentBlueprintDraft\": {\n        \"required\": [\n          \"title\",\n          \"type\",\n          \"version\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"version\": {\n            \"required\": [\n              \"number\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"number\": {\n                \"type\": \"integer\",\n                \"description\": \"The version number. Set this to `1`.\",\n                \"format\": \"int32\"\n              }\n            },\n            \"additionalProperties\": true,\n            \"description\": \"The version for the new content.\"\n          },\n          \"title\": {\n            \"maxLength\": 255,\n            \"type\": \"string\",\n            \"description\": \"The title of the content. If you don't want to change the title,\\nset this to the current title of the draft.\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"The type of content. Set this to `page`.\",\n            \"enum\": [\n              \"page\"\n            ]\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"The status of the content. Set this to `current` or omit it altogether.\",\n            \"default\": \"current\",\n            \"enum\": [\n              \"current\"\n            ]\n          },\n          \"space\": {\n            \"required\": [\n              \"key\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"key\": {\n                \"type\": \"string\",\n                \"description\": \"The key of the space\",\n                \"format\": \"int32\"\n              }\n            },\n            \"additionalProperties\": true,\n            \"description\": \"The space for the content.\"\n          },\n          \"ancestors\": {\n            \"type\": \"array\",\n            \"description\": \"The new ancestor (i.e. parent page) for the content. If you have\\nspecified an ancestor, you must also specify a `space` property\\nin the request body for the space that the ancestor is in.\\n\\nNote, if you specify more than one ancestor, the last ID in the array\\nwill be selected as the parent page for the content.\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The content ID of the ancestor.\"\n                }\n              }\n            },\n            \"nullable\": true\n          }\n        },\n        \"additionalProperties\": true\n      },\n      \"ContentBody\": {\n        \"required\": [\n          \"representation\",\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"type\": \"string\"\n          },\n          \"representation\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"view\",\n              \"export_view\",\n              \"styled_view\",\n              \"storage\",\n              \"editor\",\n              \"editor2\",\n              \"anonymous_export_view\",\n              \"wiki\",\n              \"atlas_doc_format\"\n            ]\n          },\n          \"embeddedContent\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/EmbeddedContent\"\n            }\n          },\n          \"webresource\": {\n            \"$ref\": \"#/components/schemas/WebResourceDependencies\"\n          },\n          \"mediaToken\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"collectionIds\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"contentId\": {\n                \"type\": \"string\"\n              },\n              \"expiryDateTime\": {\n                \"type\": \"string\"\n              },\n              \"fileIds\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"token\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"_expandable\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"content\": {\n                \"type\": \"string\"\n              },\n              \"embeddedContent\": {\n                \"type\": \"string\"\n              },\n              \"webresource\": {\n                \"type\": \"string\"\n              },\n              \"mediaToken\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"ContentBodyCreate\": {\n        \"required\": [\n          \"representation\",\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"additionalProperties\": true,\n        \"properties\": {\n          \"value\": {\n            \"type\": \"string\",\n            \"description\": \"The body of the content in the relevant format.\"\n          },\n          \"representation\": {\n            \"type\": \"string\",\n            \"description\": \"The content format type. Set the value of this property to\\nthe name of the format being used, e.g. 'storage'.\",\n            \"enum\": [\n              \"view\",\n              \"export_view\",\n              \"styled_view\",\n              \"storage\",\n              \"editor\",\n              \"editor2\",\n              \"anonymous_export_view\",\n              \"wiki\",\n              \"atlas_doc_format\",\n              \"plain\",\n              \"raw\"\n            ]\n          }\n        },\n        \"description\": \"This object is used when creating or updating content.\"\n      },\n      \"ContentChildren\": {\n        \"type\": \"object\",\n        \"additionalProperties\": true,\n        \"properties\": {\n          \"attachment\": {\n            \"$ref\": \"#/components/schemas/ContentArray\"\n          },\n          \"comment\": {\n            \"$ref\": \"#/components/schemas/ContentArray\"\n          },\n          \"page\": {\n            \"$ref\": \"#/components/schemas/ContentArray\"\n          },\n          \"_expandable\": {\n            \"type\": \"object\",\n            \"additionalProperties\": true,\n            \"properties\": {\n              \"attachment\": {\n                \"type\": \"string\"\n              },\n              \"comment\": {\n                \"type\": \"string\"\n              },\n              \"page\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"ContentBodyCreateStorage\": {\n        \"required\": [\n          \"representation\",\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"additionalProperties\": true,\n        \"properties\": {\n          \"value\": {\n            \"type\": \"string\",\n            \"description\": \"The body of the content in the relevant format.\"\n          },\n          \"representation\": {\n            \"type\": \"string\",\n            \"description\": \"The content format type. Set the value of this property to\\nthe name of the format being used, e.g. 'storage'.\",\n            \"enum\": [\n              \"storage\",\n              \"view\",\n              \"export_view\",\n              \"styled_view\",\n              \"editor\",\n              \"editor2\",\n              \"anonymous_export_view\",\n              \"wiki\",\n              \"atlas_doc_format\"\n            ]\n          }\n        },\n        \"description\": \"This object is used when creating or updating content.\"\n      },\n      \"ContentChildType\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"attachment\": {\n            \"required\": [\n              \"_links\",\n              \"value\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"value\": {\n                \"type\": \"boolean\"\n              },\n              \"_links\": {\n                \"$ref\": \"#/components/schemas/GenericLinks\"\n              }\n            }\n          },\n          \"comment\": {\n            \"required\": [\n              \"_links\",\n              \"value\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"value\": {\n                \"type\": \"boolean\"\n              },\n              \"_links\": {\n                \"$ref\": \"#/components/schemas/GenericLinks\"\n              }\n            }\n          },\n          \"page\": {\n            \"required\": [\n              \"_links\",\n              \"value\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"value\": {\n                \"type\": \"boolean\"\n              },\n              \"_links\": {\n                \"$ref\": \"#/components/schemas/GenericLinks\"\n              }\n            }\n          },\n          \"_expandable\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"all\": {\n                \"type\": \"object\"\n              },\n              \"attachment\": {\n                \"type\": \"object\"\n              },\n              \"comment\": {\n                \"type\": \"object\"\n              },\n              \"page\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"description\": \"Shows whether a piece of content has attachments, comments, or child pages.\\nNote, this doesn't actually contain the child objects.\"\n      },\n      \"ContentCreate\": {\n        \"required\": [\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"nullable\": true,\n        \"additionalProperties\": true,\n        \"properties\": {\n          \"id\": {\n            \"nullable\": true,\n            \"type\": \"string\",\n            \"description\": \"The ID of the draft content. Required when publishing a draft.\"\n          },\n          \"title\": {\n            \"nullable\": true,\n            \"maxLength\": 255,\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"The type of the new content. Custom content types defined by apps are also supported. eg. 'page', 'blogpost', 'comment' etc.\"\n          },\n          \"space\": {\n            \"nullable\": true,\n            \"required\": [\n              \"key\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"nullable\": true,\n                \"type\": \"integer\",\n                \"format\": \"int64\"\n              },\n              \"name\": {\n                \"nullable\": true,\n                \"type\": \"string\"\n              },\n              \"icon\": {\n                \"$ref\": \"#/components/schemas/Icon\"\n              },\n              \"identifiers\": {\n                \"$ref\": \"#/components/schemas/GlobalSpaceIdentifier\"\n              },\n              \"description\": {\n                \"type\": \"object\",\n                \"nullable\": true,\n                \"properties\": {\n                  \"plain\": {\n                    \"$ref\": \"#/components/schemas/SpaceDescription\"\n                  },\n                  \"view\": {\n                    \"$ref\": \"#/components/schemas/SpaceDescription\"\n                  },\n                  \"_expandable\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"view\": {\n                        \"type\": \"string\"\n                      },\n                      \"plain\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              },\n              \"homepage\": {\n                \"$ref\": \"#/components/schemas/Content\"\n              },\n              \"type\": {\n                \"nullable\": true,\n                \"type\": \"string\"\n              },\n              \"metadata\": {\n                \"nullable\": true,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"labels\": {\n                    \"$ref\": \"#/components/schemas/LabelArray\"\n                  },\n                  \"_expandable\": {\n                    \"type\": \"object\"\n                  }\n                }\n              },\n              \"operations\": {\n                \"nullable\": true,\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/OperationCheckResult\"\n                }\n              },\n              \"permissions\": {\n                \"nullable\": true,\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/SpacePermission\"\n                }\n              },\n              \"status\": {\n                \"nullable\": true,\n                \"type\": \"string\"\n              },\n              \"settings\": {\n                \"$ref\": \"#/components/schemas/SpaceSettings\"\n              },\n              \"theme\": {\n                \"$ref\": \"#/components/schemas/Theme\"\n              },\n              \"lookAndFeel\": {\n                \"$ref\": \"#/components/schemas/LookAndFeel\"\n              },\n              \"history\": {\n                \"required\": [\n                  \"createdDate\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                  \"createdDate\": {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\"\n                  },\n                  \"createdBy\": {\n                    \"$ref\": \"#/components/schemas/User\"\n                  }\n                }\n              },\n              \"key\": {\n                \"type\": \"string\",\n                \"description\": \"The key of the space.\"\n              },\n              \"links\": {\n                \"nullable\": true,\n                \"type\": \"object\",\n                \"additionalProperties\": true\n              }\n            },\n            \"description\": \"The space that the content is being created in.\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"The status of the new content.\",\n            \"default\": \"current\",\n            \"enum\": [\n              \"current\",\n              \"deleted\",\n              \"historical\",\n              \"draft\"\n            ]\n          },\n          \"container\": {\n            \"nullable\": true,\n            \"required\": [\n              \"id\",\n              \"type\"\n            ],\n            \"type\": \"object\",\n            \"additionalProperties\": true,\n            \"properties\": {\n              \"id\": {\n                \"oneOf\": [\n                  {\n                    \"type\": \"integer\"\n                  },\n                  {\n                    \"type\": \"string\"\n                  }\n                ],\n                \"description\": \"The `id` of the container.\"\n              },\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"The `type` of the container.\"\n              }\n            },\n            \"description\": \"The container of the content. Required if type is `comment` or certain types of\\ncustom content. If you are trying to create a comment that is a child of another comment,\\nspecify the parent comment in the ancestors field, not in this field.\"\n          },\n          \"ancestors\": {\n            \"nullable\": true,\n            \"type\": \"array\",\n            \"description\": \"The parent content of the new content.  If you are creating a top-level `page` or `comment`,\\nthis can be left blank. If you are creating a child page, this is where the parent page id goes.\\nIf you are creating a child comment, this is where the parent comment id goes. Only one parent\\ncontent id can be specified.\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"additionalProperties\": true,\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The `id` of the parent content.\"\n                }\n              }\n            }\n          },\n          \"body\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"view\": {\n                \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n              },\n              \"export_view\": {\n                \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n              },\n              \"styled_view\": {\n                \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n              },\n              \"storage\": {\n                \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n              },\n              \"editor\": {\n                \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n              },\n              \"editor2\": {\n                \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n              },\n              \"wiki\": {\n                \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n              },\n              \"anonymous_export_view\": {\n                \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n              },\n              \"plain\": {\n                \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n              },\n              \"atlas_doc_format\": {\n                \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n              },\n              \"raw\": {\n                \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n              }\n            },\n            \"description\": \"The body of the new content. Does not apply to attachments.\\nOnly one body format should be specified as the property for\\nthis object, e.g. `storage`.\\n\\nNote, `editor2` format is used by Atlassian only. `anonymous_export_view` is\\nthe same as `export_view` format but only content viewable by an anonymous\\nuser is included.\"\n          }\n        }\n      },\n      \"ContentHistory\": {\n        \"required\": [\n          \"latest\"\n        ],\n        \"type\": \"object\",\n        \"nullable\": true,\n        \"properties\": {\n          \"latest\": {\n            \"type\": \"boolean\"\n          },\n          \"createdBy\": {\n            \"$ref\": \"#/components/schemas/User\"\n          },\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"lastUpdated\": {\n            \"$ref\": \"#/components/schemas/Version\"\n          },\n          \"previousVersion\": {\n            \"$ref\": \"#/components/schemas/Version\"\n          },\n          \"contributors\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"publishers\": {\n                \"$ref\": \"#/components/schemas/UsersUserKeys\"\n              }\n            }\n          },\n          \"nextVersion\": {\n            \"$ref\": \"#/components/schemas/Version\"\n          },\n          \"_expandable\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"lastUpdated\": {\n                \"type\": \"string\"\n              },\n              \"previousVersion\": {\n                \"type\": \"string\"\n              },\n              \"contributors\": {\n                \"type\": \"string\"\n              },\n              \"nextVersion\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"ContentId\": {\n        \"type\": \"string\"\n      },\n      \"ContentLookAndFeel\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"screen\": {\n            \"$ref\": \"#/components/schemas/ScreenLookAndFeel\"\n          },\n          \"container\": {\n            \"$ref\": \"#/components/schemas/ContainerLookAndFeel\"\n          },\n          \"header\": {\n            \"$ref\": \"#/components/schemas/ContainerLookAndFeel\"\n          },\n          \"body\": {\n            \"$ref\": \"#/components/schemas/ContainerLookAndFeel\"\n          }\n        }\n      },\n      \"ContentMetadata\": {\n        \"type\": \"object\",\n        \"additionalProperties\": true,\n        \"properties\": {\n          \"currentuser\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"favourited\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"isFavourite\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"favouritedDate\": {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\"\n                  }\n                }\n              },\n              \"lastmodified\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"version\": {\n                    \"$ref\": \"#/components/schemas/Version\"\n                  },\n                  \"friendlyLastModified\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"lastcontributed\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"status\": {\n                    \"type\": \"string\"\n                  },\n                  \"when\": {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\"\n                  }\n                }\n              },\n              \"viewed\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"lastSeen\": {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\"\n                  },\n                  \"friendlyLastSeen\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"scheduled\": {\n                \"type\": \"object\"\n              },\n              \"_expandable\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"favourited\": {\n                    \"type\": \"string\"\n                  },\n                  \"lastmodified\": {\n                    \"type\": \"string\"\n                  },\n                  \"lastcontributed\": {\n                    \"type\": \"string\"\n                  },\n                  \"viewed\": {\n                    \"type\": \"string\"\n                  },\n                  \"scheduled\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          },\n          \"frontend\": {\n            \"type\": \"object\",\n            \"additionalProperties\": true\n          },\n          \"labels\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/LabelArray\"\n              },\n              {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Label\"\n                }\n              }\n            ]\n          }\n        },\n        \"description\": \"Metadata object for page, blogpost, comment content\"\n      },\n      \"ContentProperty\": {\n        \"required\": [\n          \"_links\",\n          \"id\",\n          \"key\",\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"additionalProperties\": true,\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"key\": {\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"oneOf\": [\n              {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              {\n                \"type\": \"boolean\"\n              },\n              {\n                \"type\": \"object\",\n                \"additionalProperties\": true,\n                \"properties\": {}\n              },\n              {\n                \"type\": \"string\"\n              }\n            ],\n            \"description\": \"The value of the content property. This can be empty or a complex object.\"\n          },\n          \"version\": {\n            \"required\": [\n              \"message\",\n              \"minorEdit\",\n              \"number\",\n              \"when\"\n            ],\n            \"type\": \"object\",\n            \"additionalProperties\": true,\n            \"properties\": {\n              \"when\": {\n                \"type\": \"string\",\n                \"format\": \"date-time\"\n              },\n              \"message\": {\n                \"type\": \"string\"\n              },\n              \"number\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              },\n              \"minorEdit\": {\n                \"type\": \"boolean\"\n              },\n              \"contentTypeModified\": {\n                \"type\": \"boolean\",\n                \"description\": \"True if content type is modifed in this version (e.g. page to blog)\"\n              }\n            }\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          },\n          \"_expandable\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"content\": {\n                \"type\": \"string\"\n              },\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        }\n      },\n      \"ContentPropertyArray\": {\n        \"required\": [\n          \"_links\",\n          \"limit\",\n          \"results\",\n          \"size\",\n          \"start\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"results\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ContentProperty\"\n            }\n          },\n          \"start\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"ContentPropertyCreate\": {\n        \"required\": [\n          \"key\",\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"additionalProperties\": true,\n        \"properties\": {\n          \"key\": {\n            \"maxLength\": 255,\n            \"type\": \"string\",\n            \"description\": \"The key of the new property.\"\n          },\n          \"value\": {\n            \"oneOf\": [\n              {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              {\n                \"type\": \"boolean\"\n              },\n              {\n                \"type\": \"object\",\n                \"additionalProperties\": true,\n                \"properties\": {}\n              },\n              {\n                \"type\": \"string\"\n              }\n            ],\n            \"description\": \"The value of the content property. This can be empty or a complex object.\"\n          }\n        }\n      },\n      \"ContentPropertyCreateNoKey\": {\n        \"required\": [\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"additionalProperties\": true,\n        \"properties\": {\n          \"value\": {\n            \"oneOf\": [\n              {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              {\n                \"type\": \"boolean\"\n              },\n              {\n                \"type\": \"object\",\n                \"additionalProperties\": true,\n                \"properties\": {}\n              },\n              {\n                \"type\": \"string\"\n              }\n            ],\n            \"description\": \"The value of the content property. This can be empty or a complex object.\"\n          }\n        }\n      },\n      \"ContentPropertyUpdate\": {\n        \"required\": [\n          \"value\",\n          \"version\"\n        ],\n        \"type\": \"object\",\n        \"additionalProperties\": true,\n        \"properties\": {\n          \"value\": {\n            \"oneOf\": [\n              {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              {\n                \"type\": \"boolean\"\n              },\n              {\n                \"type\": \"object\",\n                \"additionalProperties\": true,\n                \"properties\": {}\n              },\n              {\n                \"type\": \"string\"\n              }\n            ],\n            \"description\": \"The value of the content property. This can be empty or a complex object.\"\n          },\n          \"version\": {\n            \"required\": [\n              \"number\"\n            ],\n            \"type\": \"object\",\n            \"nullable\": true,\n            \"additionalProperties\": true,\n            \"properties\": {\n              \"number\": {\n                \"type\": \"integer\",\n                \"description\": \"The new version for the updated content property. Set this to the\\ncurrent version number incremented by one. To get the current\\nversion number, use 'Get content property' and retrieve\\n`version.number`.\",\n                \"format\": \"int32\"\n              },\n              \"minorEdit\": {\n                \"type\": \"boolean\",\n                \"description\": \"If `minorEdit` is set to 'true', no notification email or activity\\nstream will be generated for the change.\",\n                \"default\": true\n              }\n            },\n            \"description\": \"The version number of the property.\"\n          }\n        }\n      },\n      \"ContentRestriction\": {\n        \"required\": [\n          \"_expandable\",\n          \"_links\",\n          \"operation\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"operation\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"administer\",\n              \"copy\",\n              \"create\",\n              \"delete\",\n              \"export\",\n              \"move\",\n              \"purge\",\n              \"purge_version\",\n              \"read\",\n              \"restore\",\n              \"update\",\n              \"use\"\n            ]\n          },\n          \"restrictions\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"user\": {\n                \"$ref\": \"#/components/schemas/UserArray\"\n              },\n              \"group\": {\n                \"$ref\": \"#/components/schemas/GroupArray\"\n              },\n              \"_expandable\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"user\": {\n                    \"type\": \"string\"\n                  },\n                  \"group\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          },\n          \"content\": {\n            \"$ref\": \"#/components/schemas/Content\"\n          },\n          \"_expandable\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"restrictions\": {\n                \"type\": \"string\"\n              },\n              \"content\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"ContentRestrictionArray\": {\n        \"required\": [\n          \"_links\",\n          \"limit\",\n          \"restrictionsHash\",\n          \"results\",\n          \"size\",\n          \"start\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"results\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ContentRestriction\"\n            }\n          },\n          \"start\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"restrictionsHash\": {\n            \"type\": \"string\",\n            \"description\": \"This property is used by the UI to figure out whether a set of restrictions\\nhas changed.\"\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"ContentRestrictionUpdate\": {\n        \"required\": [\n          \"operation\",\n          \"restrictions\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"operation\": {\n            \"type\": \"string\",\n            \"description\": \"The restriction operation applied to content.\",\n            \"enum\": [\n              \"administer\",\n              \"copy\",\n              \"create\",\n              \"delete\",\n              \"export\",\n              \"move\",\n              \"purge\",\n              \"purge_version\",\n              \"read\",\n              \"restore\",\n              \"update\",\n              \"use\"\n            ]\n          },\n          \"restrictions\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"group\": {\n                \"type\": \"array\",\n                \"description\": \"The groups that the restrictions will be applied to. This array must\\nhave at least one item, otherwise it should be omitted.\",\n                \"items\": {\n                  \"required\": [\n                    \"name\",\n                    \"type\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"description\": \"Set to 'group'.\",\n                      \"enum\": [\n                        \"group\"\n                      ]\n                    },\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"description\": \"The name of the group.\"\n                    }\n                  },\n                  \"description\": \"A group that the restriction will be applied to.\"\n                }\n              },\n              \"user\": {\n                \"oneOf\": [\n                  {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/User\"\n                    }\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/UserArray\"\n                  }\n                ]\n              }\n            },\n            \"description\": \"The users/groups that the restrictions will be applied to. At least one of\\n`user` or `group` must be specified for this object.\"\n          },\n          \"content\": {\n            \"$ref\": \"#/components/schemas/Content\"\n          }\n        }\n      },\n      \"ContentRestrictionAddOrUpdateArray\": {\n        \"oneOf\": [\n          {\n            \"type\": \"object\",\n            \"required\": [\n              \"results\"\n            ],\n            \"properties\": {\n              \"results\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/ContentRestrictionUpdate\"\n                }\n              },\n              \"start\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              },\n              \"limit\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              },\n              \"size\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              },\n              \"restrictionsHash\": {\n                \"type\": \"string\",\n                \"description\": \"This property is used by the UI to figure out whether a set of restrictions\\nhas changed.\"\n              },\n              \"_links\": {\n                \"$ref\": \"#/components/schemas/GenericLinks\"\n              }\n            }\n          },\n          {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ContentRestrictionUpdate\"\n            }\n          }\n        ]\n      },\n      \"AddContentRestriction\": {\n        \"required\": [\n          \"operation\",\n          \"restrictions\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"operation\": {\n            \"type\": \"string\",\n            \"description\": \"The restriction operation applied to content.\",\n            \"enum\": [\n              \"read\",\n              \"update\"\n            ]\n          },\n          \"restrictions\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"user\": {\n                \"type\": \"array\",\n                \"description\": \"The users that the restrictions will be applied to. This array must\\nhave at least one item, otherwise it should be omitted.\",\n                \"items\": {\n                  \"required\": [\n                    \"accountId\",\n                    \"type\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"description\": \"Set to 'known'.\",\n                      \"enum\": [\n                        \"known\",\n                        \"unknown\",\n                        \"anonymous\",\n                        \"user\"\n                      ]\n                    },\n                    \"username\": {\n                      \"$ref\": \"#/components/schemas/GenericUserName\"\n                    },\n                    \"userKey\": {\n                      \"$ref\": \"#/components/schemas/GenericUserKey\"\n                    },\n                    \"accountId\": {\n                      \"$ref\": \"#/components/schemas/GenericAccountId\"\n                    }\n                  },\n                  \"description\": \"A user that the restriction will be applied to. Either the `username`\\nor the `userKey` must be specified to identify the user.\"\n                }\n              },\n              \"group\": {\n                \"type\": \"array\",\n                \"description\": \"The groups that the restrictions will be applied to. This array must\\nhave at least one item, otherwise it should be omitted.\",\n                \"items\": {\n                  \"required\": [\n                    \"name\",\n                    \"type\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"description\": \"Set to 'group'.\",\n                      \"enum\": [\n                        \"group\"\n                      ]\n                    },\n                    \"name\": {\n                      \"type\": \"string\",\n                      \"description\": \"The name of the group.\"\n                    }\n                  },\n                  \"description\": \"A group that the restriction will be applied to.\"\n                }\n              }\n            },\n            \"description\": \"The users/groups that the restrictions will be applied to. At least one of\\n`user` or `group` must be specified for this object.\"\n          }\n        }\n      },\n      \"AddContentRestrictionUpdateArray\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/AddContentRestriction\"\n        }\n      },\n      \"ContentTemplate\": {\n        \"required\": [\n          \"_links\",\n          \"description\",\n          \"labels\",\n          \"name\",\n          \"templateId\",\n          \"templateType\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"templateId\": {\n            \"type\": \"string\"\n          },\n          \"originalTemplate\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"pluginKey\": {\n                \"type\": \"string\"\n              },\n              \"moduleKey\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"referencingBlueprint\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"space\": {\n            \"type\": \"object\",\n            \"additionalProperties\": true\n          },\n          \"labels\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Label\"\n            }\n          },\n          \"templateType\": {\n            \"type\": \"string\"\n          },\n          \"editorVersion\": {\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"$ref\": \"#/components/schemas/ContentTemplateBody\"\n          },\n          \"_expandable\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"body\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"ContentTemplateArray\": {\n        \"required\": [\n          \"_links\",\n          \"limit\",\n          \"results\",\n          \"size\",\n          \"start\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"results\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ContentTemplate\"\n            }\n          },\n          \"start\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"ContentTemplateCreate\": {\n        \"required\": [\n          \"body\",\n          \"name\",\n          \"templateType\"\n        ],\n        \"type\": \"object\",\n        \"additionalProperties\": true,\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the new template.\"\n          },\n          \"templateType\": {\n            \"type\": \"string\",\n            \"description\": \"The type of the new template. Set to `page`.\"\n          },\n          \"body\": {\n            \"$ref\": \"#/components/schemas/ContentTemplateBodyCreate\"\n          },\n          \"description\": {\n            \"maxLength\": 255,\n            \"type\": \"string\",\n            \"description\": \"A description of the new template.\"\n          },\n          \"labels\": {\n            \"type\": \"array\",\n            \"description\": \"Labels for the new template.\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Label\"\n            }\n          },\n          \"space\": {\n            \"required\": [\n              \"key\"\n            ],\n            \"type\": \"object\",\n            \"additionalProperties\": true,\n            \"nullable\": true,\n            \"properties\": {\n              \"key\": {\n                \"type\": \"string\"\n              }\n            },\n            \"description\": \"The key for the space of the new template. Only applies to space templates.\\nIf the spaceKey is not specified, the template will be created as a global\\ntemplate.\"\n          }\n        },\n        \"description\": \"This object is used to create content templates.\"\n      },\n      \"ContentTemplateBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"view\": {\n            \"$ref\": \"#/components/schemas/ContentBody\"\n          },\n          \"export_view\": {\n            \"$ref\": \"#/components/schemas/ContentBody\"\n          },\n          \"styled_view\": {\n            \"$ref\": \"#/components/schemas/ContentBody\"\n          },\n          \"storage\": {\n            \"$ref\": \"#/components/schemas/ContentBody\"\n          },\n          \"editor\": {\n            \"$ref\": \"#/components/schemas/ContentBody\"\n          },\n          \"editor2\": {\n            \"$ref\": \"#/components/schemas/ContentBody\"\n          },\n          \"wiki\": {\n            \"$ref\": \"#/components/schemas/ContentBody\"\n          },\n          \"atlas_doc_format\": {\n            \"$ref\": \"#/components/schemas/ContentBody\"\n          },\n          \"anonymous_export_view\": {\n            \"$ref\": \"#/components/schemas/ContentBody\"\n          }\n        },\n        \"description\": \"The body of the new content. Does not apply to attachments.\\nOnly one body format should be specified as the property for\\nthis object, e.g. `storage`.\\n\\nNote, `editor2` format is used by Atlassian only. `anonymous_export_view` is\\nthe same as `export_view` format but only content viewable by an anonymous\\nuser is included.\"\n      },\n      \"ContentTemplateBodyCreate\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"view\": {\n            \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n          },\n          \"export_view\": {\n            \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n          },\n          \"styled_view\": {\n            \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n          },\n          \"storage\": {\n            \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n          },\n          \"editor\": {\n            \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n          },\n          \"editor2\": {\n            \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n          },\n          \"wiki\": {\n            \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n          },\n          \"atlas_doc_format\": {\n            \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n          },\n          \"anonymous_export_view\": {\n            \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n          }\n        },\n        \"description\": \"The body of the new content. Does not apply to attachments.\\nOnly one body format should be specified as the property for\\nthis object, e.g. `storage`.\\n\\nNote, `editor2` format is used by Atlassian only. `anonymous_export_view` is\\nthe same as `export_view` format but only content viewable by an anonymous\\nuser is included.\"\n      },\n      \"ContentTemplateUpdate\": {\n        \"required\": [\n          \"body\",\n          \"name\",\n          \"templateId\",\n          \"templateType\"\n        ],\n        \"type\": \"object\",\n        \"additionalProperties\": true,\n        \"properties\": {\n          \"templateId\": {\n            \"type\": \"string\",\n            \"description\": \"The ID of the template being updated.\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the template. Set to the current `name` if this field is\\nnot being updated.\"\n          },\n          \"templateType\": {\n            \"type\": \"string\",\n            \"description\": \"The type of the template. Set to `page`.\",\n            \"enum\": [\n              \"page\"\n            ]\n          },\n          \"body\": {\n            \"$ref\": \"#/components/schemas/ContentTemplateBodyCreate\"\n          },\n          \"description\": {\n            \"maxLength\": 100,\n            \"type\": \"string\",\n            \"description\": \"A description of the template.\"\n          },\n          \"labels\": {\n            \"type\": \"array\",\n            \"description\": \"Labels for the template.\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Label\"\n            }\n          },\n          \"space\": {\n            \"required\": [\n              \"key\"\n            ],\n            \"type\": \"object\",\n            \"additionalProperties\": true,\n            \"nullable\": true,\n            \"properties\": {\n              \"key\": {\n                \"type\": \"string\"\n              }\n            },\n            \"description\": \"The key for the space of the template. Required if the template is a\\nspace template. Set this to the current `space.key`.\"\n          }\n        },\n        \"description\": \"This object is used to update content templates.\"\n      },\n      \"ContentUpdate\": {\n        \"required\": [\n          \"title\",\n          \"type\",\n          \"version\"\n        ],\n        \"type\": \"object\",\n        \"additionalProperties\": true,\n        \"properties\": {\n          \"version\": {\n            \"nullable\": true,\n            \"required\": [\n              \"number\"\n            ],\n            \"type\": \"object\",\n            \"additionalProperties\": true,\n            \"properties\": {\n              \"number\": {\n                \"type\": \"integer\",\n                \"description\": \"The version number.\",\n                \"format\": \"int32\"\n              }\n            },\n            \"description\": \"The new version for the updated content. Set this to the current version number incremented by one, unless you are changing the status to 'draft' which must have a version number of 1.\\n\\nTo get the current version number, use [Get content by ID](#api-content-id-get) and retrieve `version.number`.\"\n          },\n          \"title\": {\n            \"nullable\": true,\n            \"maxLength\": 255,\n            \"type\": \"string\",\n            \"description\": \"The updated title of the content. If you are not changing this field, set this to the current `title`.\"\n          },\n          \"type\": {\n            \"nullable\": true,\n            \"type\": \"string\",\n            \"description\": \"The type of content. Set this to the current type of the content. For example, - page - blogpost - comment - attachment\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"The updated status of the content. Note, if you change the status of a page from\\n'current' to 'draft' and it has an existing draft, the existing draft will be deleted\\nin favor of the updated page.\",\n            \"enum\": [\n              \"current\",\n              \"trashed\",\n              \"deleted\",\n              \"historical\",\n              \"draft\"\n            ]\n          },\n          \"ancestors\": {\n            \"nullable\": true,\n            \"type\": \"array\",\n            \"description\": \"The new parent for the content. Only one parent content 'id' can be specified.\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"additionalProperties\": true,\n              \"properties\": {\n                \"id\": {\n                  \"oneOf\": [\n                    {\n                      \"type\": \"integer\"\n                    },\n                    {\n                      \"type\": \"string\"\n                    }\n                  ],\n                  \"description\": \"The `id` of the parent content.\"\n                }\n              }\n            }\n          },\n          \"body\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"view\": {\n                \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n              },\n              \"export_view\": {\n                \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n              },\n              \"styled_view\": {\n                \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n              },\n              \"storage\": {\n                \"$ref\": \"#/components/schemas/ContentBodyCreateStorage\"\n              },\n              \"editor\": {\n                \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n              },\n              \"editor2\": {\n                \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n              },\n              \"wiki\": {\n                \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n              },\n              \"anonymous_export_view\": {\n                \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n              }\n            },\n            \"description\": \"The updated body of the content. Does not apply to attachments.\\nIf you are not sure how to generate these formats, you can create a page in the\\nConfluence application, retrieve the content using [Get content](#api-content-get),\\nand expand the desired content format, e.g. `expand=body.storage`.\"\n          }\n        }\n      },\n      \"CopyPageHierarchyRequest\": {\n        \"required\": [\n          \"destinationPageId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"copyAttachments\": {\n            \"type\": \"boolean\",\n            \"description\": \"If set to `true`, attachments are copied to the destination page.\",\n            \"default\": false\n          },\n          \"copyPermissions\": {\n            \"type\": \"boolean\",\n            \"description\": \"If set to `true`, page permissions are copied to the destination page.\",\n            \"default\": false\n          },\n          \"copyProperties\": {\n            \"type\": \"boolean\",\n            \"description\": \"If set to `true`, content properties are copied to the destination page.\",\n            \"default\": false\n          },\n          \"copyLabels\": {\n            \"type\": \"boolean\",\n            \"description\": \"If set to `true`, labels are copied to the destination page.\",\n            \"default\": false\n          },\n          \"copyCustomContents\": {\n            \"type\": \"boolean\",\n            \"description\": \"If set to `true`, custom contents are copied to the destination page.\",\n            \"default\": false\n          },\n          \"destinationPageId\": {\n            \"$ref\": \"#/components/schemas/ContentId\"\n          },\n          \"titleOptions\": {\n            \"$ref\": \"#/components/schemas/CopyPageHierarchyTitleOptions\"\n          }\n        }\n      },\n      \"CopyPageHierarchyTitleOptions\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"prefix\": {\n            \"type\": \"string\"\n          },\n          \"replace\": {\n            \"type\": \"string\"\n          },\n          \"search\": {\n            \"type\": \"string\"\n          }\n        },\n        \"description\": \"Required for copying page in the same space.\"\n      },\n      \"CopyPageRequest\": {\n        \"required\": [\n          \"destination\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"copyAttachments\": {\n            \"type\": \"boolean\",\n            \"description\": \"If set to `true`, attachments are copied to the destination page.\",\n            \"default\": false\n          },\n          \"copyPermissions\": {\n            \"type\": \"boolean\",\n            \"description\": \"If set to `true`, page permissions are copied to the destination page.\",\n            \"default\": false\n          },\n          \"copyProperties\": {\n            \"type\": \"boolean\",\n            \"description\": \"If set to `true`, content properties are copied to the destination page.\",\n            \"default\": false\n          },\n          \"copyLabels\": {\n            \"type\": \"boolean\",\n            \"description\": \"If set to `true`, labels are copied to the destination page.\",\n            \"default\": false\n          },\n          \"copyCustomContents\": {\n            \"type\": \"boolean\",\n            \"description\": \"If set to `true`, custom contents are copied to the destination page.\",\n            \"default\": false\n          },\n          \"destination\": {\n            \"$ref\": \"#/components/schemas/CopyPageRequestDestination\"\n          },\n          \"pageTitle\": {\n            \"type\": \"string\",\n            \"description\": \"If defined, this will replace the title of the destination page.\"\n          },\n          \"body\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"storage\": {\n                \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n              },\n              \"editor2\": {\n                \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n              }\n            },\n            \"description\": \"If defined, this will replace the body of the destination page.\"\n          }\n        }\n      },\n      \"CopyPageRequestDestination\": {\n        \"required\": [\n          \"type\",\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"space\",\n              \"existing_page\",\n              \"parent_page\"\n            ]\n          },\n          \"value\": {\n            \"type\": \"string\",\n            \"description\": \"The space key for `space` type, and content id for `parent_page` and `existing_page`\"\n          }\n        },\n        \"description\": \"Defines where the page will be copied to, and can be one of the following types.\\n\\n  - `parent_page`: page will be copied as a child of the specified parent page\\n  - `space`: page will be copied to the specified space as a root page on the space\\n  - `existing_page`: page will be copied and replace the specified page\"\n      },\n      \"CQLPersonalDataConvertedQueries\": {\n        \"required\": [\n          \"queryStrings\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"queryStrings\": {\n            \"type\": \"array\",\n            \"description\": \"The list of converted CQL query strings with account IDs in\\nplace of user identifiers.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"The converted CQL queries.\"\n      },\n      \"CQLPersonalDataMigrationRequest\": {\n        \"required\": [\n          \"queryStrings\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"queryStrings\": {\n            \"type\": \"array\",\n            \"description\": \"A list of queries with user identifiers. Maximum of 100 queries.\",\n            \"example\": [\n              \"type = page and creator != admin and space = DEV\"\n            ],\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"The CQL queries to be converted.\"\n      },\n      \"DynamicModulesErrorMessage\": {\n        \"required\": [\n          \"message\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"description\": \"The error message.\"\n          }\n        },\n        \"example\": {\n          \"message\": \"The request is not from a Connect app.\"\n        }\n      },\n      \"Embeddable\": {\n        \"type\": \"object\",\n        \"additionalProperties\": true\n      },\n      \"EmbeddedContent\": {\n        \"type\": \"object\",\n        \"additionalProperties\": true,\n        \"properties\": {\n          \"entityId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"entityType\": {\n            \"type\": \"string\"\n          },\n          \"entity\": {\n            \"$ref\": \"#/components/schemas/Embeddable\"\n          }\n        }\n      },\n      \"GenericAccountId\": {\n        \"type\": \"string\",\n        \"nullable\": true,\n        \"description\": \"The account ID of the user, which uniquely identifies the user across all Atlassian products.\\nFor example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\"\n      },\n      \"GenericLinks\": {\n        \"type\": \"object\",\n        \"additionalProperties\": {\n          \"oneOf\": [\n            {\n              \"type\": \"object\",\n              \"additionalProperties\": true\n            },\n            {\n              \"type\": \"string\"\n            }\n          ]\n        }\n      },\n      \"GenericUserName\": {\n        \"type\": \"string\",\n        \"nullable\": true,\n        \"description\": \"This property is no longer available and will be removed from the documentation soon.\\nUse `accountId` instead.\\nSee the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\"\n      },\n      \"GenericUserKey\": {\n        \"type\": \"string\",\n        \"nullable\": true,\n        \"description\": \"This property is no longer available and will be removed from the documentation soon.\\nUse `accountId` instead.\\nSee the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\"\n      },\n      \"GlobalSpaceIdentifier\": {\n        \"type\": \"object\",\n        \"nullable\": true,\n        \"required\": [\n          \"spaceIdentifier\"\n        ],\n        \"properties\": {\n          \"spaceIdentifier\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Group\": {\n        \"required\": [\n          \"name\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\",\n            \"default\": \"group\",\n            \"enum\": [\n              \"group\"\n            ]\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"GroupCreate\": {\n        \"required\": [\n          \"name\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"additionalProperties\": true,\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\",\n            \"default\": \"group\",\n            \"enum\": [\n              \"group\"\n            ]\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"GroupArray\": {\n        \"required\": [\n          \"limit\",\n          \"results\",\n          \"size\",\n          \"start\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"results\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Group\"\n            }\n          },\n          \"start\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        }\n      },\n      \"GroupArrayWithLinks\": {\n        \"description\": \"Same as GroupArray but with `_links` property.\",\n        \"required\": [\n          \"limit\",\n          \"results\",\n          \"size\",\n          \"start\",\n          \"_links\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"results\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Group\"\n            }\n          },\n          \"start\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"totalSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"default\": 0,\n            \"description\": \"This property will return total count of the objects before pagination is applied.\\nThis value is returned if `shouldReturnTotalSize` is set to `true`.\"\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"GroupName\": {\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"HeaderLookAndFeel\": {\n        \"required\": [\n          \"backgroundColor\",\n          \"button\",\n          \"primaryNavigation\",\n          \"search\",\n          \"secondaryNavigation\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"backgroundColor\": {\n            \"type\": \"string\"\n          },\n          \"button\": {\n            \"$ref\": \"#/components/schemas/ButtonLookAndFeel\"\n          },\n          \"primaryNavigation\": {\n            \"$ref\": \"#/components/schemas/NavigationLookAndFeel\"\n          },\n          \"secondaryNavigation\": {\n            \"$ref\": \"#/components/schemas/NavigationLookAndFeel\"\n          },\n          \"search\": {\n            \"$ref\": \"#/components/schemas/SearchFieldLookAndFeel\"\n          }\n        }\n      },\n      \"HorizontalHeaderLookAndFeel\": {\n        \"required\": [\n          \"backgroundColor\",\n          \"primaryNavigation\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"backgroundColor\": {\n            \"type\": \"string\"\n          },\n          \"button\": {\n            \"$ref\": \"#/components/schemas/ButtonLookAndFeel\"\n          },\n          \"primaryNavigation\": {\n            \"$ref\": \"#/components/schemas/TopNavigationLookAndFeel\"\n          },\n          \"secondaryNavigation\": {\n            \"$ref\": \"#/components/schemas/NavigationLookAndFeel\"\n          },\n          \"search\": {\n            \"$ref\": \"#/components/schemas/SearchFieldLookAndFeel\"\n          }\n        }\n      },\n      \"Icon\": {\n        \"required\": [\n          \"height\",\n          \"isDefault\",\n          \"path\",\n          \"width\"\n        ],\n        \"type\": \"object\",\n        \"nullable\": true,\n        \"properties\": {\n          \"path\": {\n            \"type\": \"string\"\n          },\n          \"width\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"height\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"isDefault\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"description\": \"This object represents an icon. If used as a profilePicture, this may be returned as null, depending on the user's privacy setting.\"\n      },\n      \"Label\": {\n        \"required\": [\n          \"id\",\n          \"label\",\n          \"name\",\n          \"prefix\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"prefix\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"label\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"LabelArray\": {\n        \"required\": [\n          \"results\",\n          \"size\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"results\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Label\"\n            }\n          },\n          \"start\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"LabeledContent\": {\n        \"required\": [\n          \"contentId\",\n          \"contentType\",\n          \"title\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"contentType\": {\n            \"$ref\": \"#/components/schemas/LabeledContentType\"\n          },\n          \"contentId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"description\": \"Title of the content.\"\n          }\n        }\n      },\n      \"LabeledContentType\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"page\",\n          \"blogpost\",\n          \"attachment\",\n          \"page_template\"\n        ]\n      },\n      \"LabeledContentPageResponse\": {\n        \"required\": [\n          \"results\",\n          \"size\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"results\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/LabeledContent\"\n            }\n          },\n          \"start\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        }\n      },\n      \"LabelDetails\": {\n        \"required\": [\n          \"label\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"label\": {\n            \"$ref\": \"#/components/schemas/Label\"\n          },\n          \"associatedContents\": {\n            \"$ref\": \"#/components/schemas/LabeledContentPageResponse\"\n          }\n        }\n      },\n      \"LabelCreate\": {\n        \"required\": [\n          \"name\",\n          \"prefix\"\n        ],\n        \"type\": \"object\",\n        \"additionalProperties\": true,\n        \"properties\": {\n          \"prefix\": {\n            \"type\": \"string\",\n            \"description\": \"The prefix for the label. `global`, `my` `team`, etc.\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the label, which will be shown in the UI.\"\n          }\n        }\n      },\n      \"LabelCreateArray\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/LabelCreate\"\n        }\n      },\n      \"LookAndFeel\": {\n        \"required\": [\n          \"bordersAndDividers\",\n          \"content\",\n          \"header\",\n          \"headings\",\n          \"links\",\n          \"menus\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"headings\": {\n            \"required\": [\n              \"color\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"color\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"links\": {\n            \"required\": [\n              \"color\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"color\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"menus\": {\n            \"$ref\": \"#/components/schemas/MenusLookAndFeel\"\n          },\n          \"header\": {\n            \"$ref\": \"#/components/schemas/HeaderLookAndFeel\"\n          },\n          \"horizontalHeader\": {\n            \"$ref\": \"#/components/schemas/HorizontalHeaderLookAndFeel\"\n          },\n          \"content\": {\n            \"$ref\": \"#/components/schemas/ContentLookAndFeel\"\n          },\n          \"bordersAndDividers\": {\n            \"required\": [\n              \"color\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"color\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"spaceReference\": {\n            \"type\": \"object\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"LookAndFeelWithLinks\": {\n        \"description\": \"Look and feel settings returned after an update.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/LookAndFeel\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"_links\": {\n                \"$ref\": \"#/components/schemas/GenericLinks\"\n              }\n            }\n          }\n        ]\n      },\n      \"LookAndFeelSelection\": {\n        \"required\": [\n          \"lookAndFeelType\",\n          \"spaceKey\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"spaceKey\": {\n            \"type\": \"string\",\n            \"description\": \"The key of the space for which the look and feel settings will be\\nset.\"\n          },\n          \"lookAndFeelType\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"global\",\n              \"custom\",\n              \"theme\"\n            ]\n          }\n        },\n        \"description\": \"Look and feel selection\"\n      },\n      \"LookAndFeelSettings\": {\n        \"required\": [\n          \"custom\",\n          \"global\",\n          \"selected\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"selected\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"global\",\n              \"custom\"\n            ]\n          },\n          \"global\": {\n            \"$ref\": \"#/components/schemas/LookAndFeel\"\n          },\n          \"theme\": {\n            \"$ref\": \"#/components/schemas/LookAndFeel\"\n          },\n          \"custom\": {\n            \"$ref\": \"#/components/schemas/LookAndFeel\"\n          }\n        }\n      },\n      \"LongTaskStatus\": {\n        \"required\": [\n          \"elapsedTime\",\n          \"finished\",\n          \"id\",\n          \"messages\",\n          \"name\",\n          \"percentageComplete\",\n          \"successful\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"required\": [\n              \"args\",\n              \"key\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"key\": {\n                \"type\": \"string\"\n              },\n              \"args\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"properties\": {}\n                }\n              }\n            }\n          },\n          \"elapsedTime\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"percentageComplete\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"successful\": {\n            \"type\": \"boolean\"\n          },\n          \"finished\": {\n            \"type\": \"boolean\"\n          },\n          \"messages\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Message\"\n            }\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Message\"\n            }\n          },\n          \"additionalDetails\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"destinationId\": {\n                \"type\": \"string\"\n              },\n              \"destinationUrl\": {\n                \"type\": \"string\"\n              },\n              \"totalPageNeedToCopy\": {\n                \"type\": \"integer\"\n              },\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"description\": \"Current status of a long running task\\n\\nStatus keys:\\n\\n- `ERROR_UNKNOWN` - Generic error\\n- `ERROR_LOCK_FAILED` - Could not get the lock on destination space\\n- `ERROR_RELINK` - Error when relink pages/attachments\\n- `ERROR_COPY_PAGE` - Error while copying 1 page\\n- `WARN_RENAME_PAGE` - Warning page is rename during copy\\n- `WARN_IGNORE_COPY_PERMISSION` - Warning could not copy permission\\n- `WARN_IGNORE_COPY_ATTACHMENT` - Warning could not copy attachment\\n- `WARN_IGNORE_DELETE_PAGE` - Warning ignoring delete of a non agreed on page\\n- `STATUS_COPIED_PAGES` - Message total pages are copied\\n- `STATUS_COPYING_PAGES` - Message copy pages\\n- `STATUS_RELINK_PAGES` - Message relink pages/attachments\\n- `STATUS_DELETING_PAGES` - Message delete pages\\n- `STATUS_DELETED_PAGES` - Message total pages are deleted\\n- `STATUS_MOVING_PAGES` - Message move pages\\n- `WARN_IGNORE_VIEW_RESTRICTED` - Permission changed - view restricted\\n- `WARN_IGNORE_EDIT_RESTRICTED` - Permission changed - edit restricted\\n- `INITIALIZING_TASK` - Message when initializing task\\n- `UNKNOWN_STATUS` - Message when status is unknown\"\n      },\n      \"LongTaskStatusArray\": {\n        \"required\": [\n          \"_links\",\n          \"limit\",\n          \"results\",\n          \"size\",\n          \"start\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"results\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/LongTaskStatus\"\n            }\n          },\n          \"start\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"LongTaskStatusWithLinks\": {\n        \"required\": [\n          \"_links\",\n          \"elapsedTime\",\n          \"finished\",\n          \"id\",\n          \"messages\",\n          \"name\",\n          \"percentageComplete\",\n          \"successful\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"required\": [\n              \"args\",\n              \"key\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"key\": {\n                \"type\": \"string\"\n              },\n              \"args\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"properties\": {}\n                }\n              }\n            }\n          },\n          \"elapsedTime\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"percentageComplete\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"successful\": {\n            \"type\": \"boolean\"\n          },\n          \"finished\": {\n            \"type\": \"boolean\"\n          },\n          \"messages\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Message\"\n            }\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Message\"\n            }\n          },\n          \"additionalDetails\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"destinationId\": {\n                \"type\": \"string\"\n              },\n              \"destinationUrl\": {\n                \"type\": \"string\"\n              },\n              \"totalPageNeedToCopy\": {\n                \"type\": \"integer\"\n              },\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"description\": \"Same as LongTaskStatus but with `_links` property.\\n\\nStatus keys:\\n\\n- `ERROR_UNKNOWN` - Generic error\\n- `ERROR_LOCK_FAILED` - Could not get the lock on destination space\\n- `ERROR_RELINK` - Error when relink pages/attachments\\n- `ERROR_COPY_PAGE` - Error while copying 1 page\\n- `WARN_RENAME_PAGE` - Warning page is rename during copy\\n- `WARN_IGNORE_COPY_PERMISSION` - Warning could not copy permission\\n- `WARN_IGNORE_COPY_ATTACHMENT` - Warning could not copy attachment\\n- `WARN_IGNORE_DELETE_PAGE` - Warning ignoring delete of a non agreed on page\\n- `STATUS_COPIED_PAGES` - Message total pages are copied\\n- `STATUS_COPYING_PAGES` - Message copy pages\\n- `STATUS_RELINK_PAGES` - Message relink pages/attachments\\n- `STATUS_DELETING_PAGES` - Message delete pages\\n- `STATUS_DELETED_PAGES` - Message total pages are deleted\\n- `STATUS_MOVING_PAGES` - Message move pages\\n- `WARN_IGNORE_VIEW_RESTRICTED` - Permission changed - view restricted\\n- `WARN_IGNORE_EDIT_RESTRICTED` - Permission changed - edit restricted\\n- `INITIALIZING_TASK` - Message when initializing task\\n- `UNKNOWN_STATUS` - Message when status is unknown\"\n      },\n      \"MacroInstance\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"type\": \"string\"\n          },\n          \"parameters\": {\n            \"type\": \"object\"\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"MenusLookAndFeel\": {\n        \"required\": [\n          \"color\",\n          \"hoverOrFocus\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"hoverOrFocus\": {\n            \"required\": [\n              \"backgroundColor\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"backgroundColor\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"color\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Message\": {\n        \"required\": [\n          \"args\"\n        ],\n        \"type\": \"object\",\n        \"additionalProperties\": true,\n        \"properties\": {\n          \"translation\": {\n            \"type\": \"string\"\n          },\n          \"args\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"oneOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"object\",\n                  \"additionalProperties\": true\n                }\n              ]\n            }\n          }\n        }\n      },\n      \"MigratedUser\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"$ref\": \"#/components/schemas/GenericUserName\"\n          },\n          \"key\": {\n            \"$ref\": \"#/components/schemas/GenericUserKey\"\n          },\n          \"accountId\": {\n            \"$ref\": \"#/components/schemas/GenericAccountId\"\n          }\n        }\n      },\n      \"MigratedUserArray\": {\n        \"required\": [\n          \"_links\",\n          \"limit\",\n          \"results\",\n          \"size\",\n          \"start\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"results\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MigratedUser\"\n            }\n          },\n          \"start\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"BulkUserLookup\": {\n        \"required\": [\n          \"_expandable\",\n          \"_links\",\n          \"accountId\",\n          \"accountType\",\n          \"displayName\",\n          \"email\",\n          \"profilePicture\",\n          \"publicName\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"known\",\n              \"unknown\",\n              \"anonymous\",\n              \"user\"\n            ]\n          },\n          \"username\": {\n            \"$ref\": \"#/components/schemas/GenericUserName\"\n          },\n          \"userKey\": {\n            \"$ref\": \"#/components/schemas/GenericUserKey\"\n          },\n          \"accountId\": {\n            \"$ref\": \"#/components/schemas/GenericAccountId\"\n          },\n          \"accountType\": {\n            \"type\": \"string\",\n            \"description\": \"The account type of the user, may return empty string if unavailable.\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"description\": \"The email address of the user. Depending on the user's privacy setting, this may return an empty string.\"\n          },\n          \"publicName\": {\n            \"type\": \"string\",\n            \"description\": \"The public name or nickname of the user. Will always contain a value.\"\n          },\n          \"profilePicture\": {\n            \"$ref\": \"#/components/schemas/Icon\"\n          },\n          \"displayName\": {\n            \"type\": \"string\",\n            \"description\": \"The display name of the user. Depending on the user's privacy setting, this may be the same as publicName.\"\n          },\n          \"timeZone\": {\n            \"nullable\": true,\n            \"type\": \"string\",\n            \"description\": \"This display user time zone. Depending on the user's privacy setting, this may be default to tenant time zone.\"\n          },\n          \"isExternalCollaborator\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether the user is an external collaborator user\"\n          },\n          \"operations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/OperationCheckResult\"\n            }\n          },\n          \"details\": {\n            \"$ref\": \"#/components/schemas/UserDetails\"\n          },\n          \"personalSpace\": {\n            \"$ref\": \"#/components/schemas/Space\"\n          },\n          \"_expandable\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"operations\": {\n                \"type\": \"string\"\n              },\n              \"details\": {\n                \"type\": \"string\"\n              },\n              \"personalSpace\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"BulkUserLookupArray\": {\n        \"required\": [\n          \"_links\",\n          \"limit\",\n          \"results\",\n          \"size\",\n          \"start\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"results\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/BulkUserLookup\"\n            }\n          },\n          \"start\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"NavigationLookAndFeel\": {\n        \"required\": [\n          \"color\",\n          \"hoverOrFocus\"\n        ],\n        \"type\": \"object\",\n        \"nullable\": true,\n        \"properties\": {\n          \"color\": {\n            \"type\": \"string\"\n          },\n          \"highlightColor\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"hoverOrFocus\": {\n            \"required\": [\n              \"backgroundColor\",\n              \"color\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"backgroundColor\": {\n                \"type\": \"string\"\n              },\n              \"color\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        }\n      },\n      \"TopNavigationLookAndFeel\": {\n        \"required\": [\n          \"highlightColor\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"color\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"highlightColor\": {\n            \"type\": \"string\"\n          },\n          \"hoverOrFocus\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"backgroundColor\": {\n                \"type\": \"string\"\n              },\n              \"color\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        }\n      },\n      \"OperationCheckResult\": {\n        \"required\": [\n          \"operation\",\n          \"targetType\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"operation\": {\n            \"type\": \"string\",\n            \"description\": \"The operation itself.\",\n            \"enum\": [\n              \"administer\",\n              \"archive\",\n              \"clear_permissions\",\n              \"copy\",\n              \"create\",\n              \"create_space\",\n              \"delete\",\n              \"export\",\n              \"move\",\n              \"purge\",\n              \"purge_version\",\n              \"read\",\n              \"restore\",\n              \"restrict_content\",\n              \"update\",\n              \"use\"\n            ]\n          },\n          \"targetType\": {\n            \"type\": \"string\",\n            \"description\": \"The space or content type that the operation applies to. Could be one of- - application - page - blogpost - comment - attachment - space\"\n          }\n        },\n        \"description\": \"An operation and the target entity that it applies to, e.g. create page.\"\n      },\n      \"PropertyValue\": {\n        \"oneOf\": [\n          {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"type\": \"boolean\"\n          },\n          {\n            \"type\": \"object\",\n            \"additionalProperties\": true,\n            \"properties\": {}\n          },\n          {\n            \"type\": \"string\"\n          }\n        ],\n        \"description\": \"The value of the property. This can be empty or a complex object. 64KB Size Limit\\nFor example,\\n```\\n\\\"value\\\": {\\n  \\\"example1\\\": \\\"value\\\",\\n  \\\"example2\\\": true,\\n  \\\"example3\\\": 123,\\n  \\\"example4\\\": [\\\"value1\\\", \\\"value2\\\"],\\n}\\n```\"\n      },\n      \"Relation\": {\n        \"required\": [\n          \"_links\",\n          \"name\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"relationData\": {\n            \"$ref\": \"#/components/schemas/RelationData\"\n          },\n          \"source\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/Content\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/User\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/Space\"\n              }\n            ]\n          },\n          \"target\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/Content\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/User\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/Space\"\n              }\n            ]\n          },\n          \"_expandable\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"relationData\": {\n                \"type\": \"string\"\n              },\n              \"source\": {\n                \"type\": \"string\"\n              },\n              \"target\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"RelationArray\": {\n        \"required\": [\n          \"_links\",\n          \"limit\",\n          \"results\",\n          \"size\",\n          \"start\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"results\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Relation\"\n            }\n          },\n          \"start\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"RelationData\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"createdBy\": {\n            \"$ref\": \"#/components/schemas/User\"\n          },\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"friendlyCreatedDate\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RetentionPeriod\": {\n        \"required\": [\n          \"number\",\n          \"units\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"number\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of units for the retention period.\",\n            \"format\": \"int32\"\n          },\n          \"units\": {\n            \"type\": \"string\",\n            \"description\": \"The unit of time that the retention period is measured in.\",\n            \"enum\": [\n              \"NANOS\",\n              \"MICROS\",\n              \"MILLIS\",\n              \"SECONDS\",\n              \"MINUTES\",\n              \"HOURS\",\n              \"HALF_DAYS\",\n              \"DAYS\",\n              \"WEEKS\",\n              \"MONTHS\",\n              \"YEARS\",\n              \"DECADES\",\n              \"CENTURIES\",\n              \"MILLENNIA\",\n              \"ERAS\",\n              \"FOREVER\"\n            ]\n          }\n        }\n      },\n      \"ScreenLookAndFeel\": {\n        \"required\": [\n          \"background\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"background\": {\n            \"type\": \"string\"\n          },\n          \"backgroundAttachment\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"backgroundBlendMode\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"backgroundClip\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"backgroundColor\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"backgroundImage\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"backgroundOrigin\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"backgroundPosition\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"backgroundRepeat\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"backgroundSize\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"layer\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"width\": {\n                \"type\": \"string\"\n              },\n              \"height\": {\n                \"type\": \"string\"\n              }\n            },\n            \"nullable\": true\n          },\n          \"gutterTop\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"gutterRight\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"gutterBottom\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"gutterLeft\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"SearchFieldLookAndFeel\": {\n        \"required\": [\n          \"backgroundColor\",\n          \"color\"\n        ],\n        \"type\": \"object\",\n        \"nullable\": true,\n        \"properties\": {\n          \"backgroundColor\": {\n            \"type\": \"string\"\n          },\n          \"color\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"SearchPageResponseSearchResult\": {\n        \"required\": [\n          \"_links\",\n          \"cqlQuery\",\n          \"limit\",\n          \"results\",\n          \"searchDuration\",\n          \"size\",\n          \"start\",\n          \"totalSize\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"results\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SearchResult\"\n            }\n          },\n          \"start\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"totalSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"cqlQuery\": {\n            \"type\": \"string\"\n          },\n          \"searchDuration\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"archivedResultCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"SearchResult\": {\n        \"required\": [\n          \"breadcrumbs\",\n          \"entityType\",\n          \"excerpt\",\n          \"iconCssClass\",\n          \"lastModified\",\n          \"title\",\n          \"url\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"content\": {\n            \"$ref\": \"#/components/schemas/Content\"\n          },\n          \"user\": {\n            \"$ref\": \"#/components/schemas/User\"\n          },\n          \"space\": {\n            \"$ref\": \"#/components/schemas/Space\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"excerpt\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          },\n          \"resultParentContainer\": {\n            \"$ref\": \"#/components/schemas/ContainerSummary\"\n          },\n          \"resultGlobalContainer\": {\n            \"$ref\": \"#/components/schemas/ContainerSummary\"\n          },\n          \"breadcrumbs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Breadcrumb\"\n            }\n          },\n          \"entityType\": {\n            \"type\": \"string\"\n          },\n          \"iconCssClass\": {\n            \"type\": \"string\"\n          },\n          \"lastModified\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"friendlyLastModified\": {\n            \"type\": \"string\"\n          },\n          \"score\": {\n            \"type\": \"number\"\n          }\n        }\n      },\n      \"Space\": {\n        \"required\": [\n          \"_expandable\",\n          \"_links\",\n          \"key\",\n          \"name\",\n          \"status\",\n          \"type\"\n        ],\n        \"nullable\": true,\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"key\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"icon\": {\n            \"$ref\": \"#/components/schemas/Icon\"\n          },\n          \"description\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"plain\": {\n                \"$ref\": \"#/components/schemas/SpaceDescription\"\n              },\n              \"view\": {\n                \"$ref\": \"#/components/schemas/SpaceDescription\"\n              },\n              \"_expandable\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"view\": {\n                    \"type\": \"string\"\n                  },\n                  \"plain\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          },\n          \"homepage\": {\n            \"$ref\": \"#/components/schemas/Content\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"metadata\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"labels\": {\n                \"$ref\": \"#/components/schemas/LabelArray\"\n              },\n              \"_expandable\": {\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"operations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/OperationCheckResult\"\n            }\n          },\n          \"permissions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SpacePermission\"\n            }\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"settings\": {\n            \"$ref\": \"#/components/schemas/SpaceSettings\"\n          },\n          \"theme\": {\n            \"$ref\": \"#/components/schemas/Theme\"\n          },\n          \"lookAndFeel\": {\n            \"$ref\": \"#/components/schemas/LookAndFeel\"\n          },\n          \"history\": {\n            \"required\": [\n              \"createdDate\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"createdDate\": {\n                \"type\": \"string\",\n                \"format\": \"date-time\"\n              },\n              \"createdBy\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          },\n          \"_expandable\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"settings\": {\n                \"type\": \"string\"\n              },\n              \"metadata\": {\n                \"type\": \"string\"\n              },\n              \"operations\": {\n                \"type\": \"string\"\n              },\n              \"lookAndFeel\": {\n                \"type\": \"string\"\n              },\n              \"permissions\": {\n                \"type\": \"string\"\n              },\n              \"icon\": {\n                \"type\": \"string\"\n              },\n              \"description\": {\n                \"type\": \"string\"\n              },\n              \"theme\": {\n                \"type\": \"string\"\n              },\n              \"history\": {\n                \"type\": \"string\"\n              },\n              \"homepage\": {\n                \"type\": \"string\"\n              },\n              \"identifiers\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"SpaceArray\": {\n        \"required\": [\n          \"_links\",\n          \"limit\",\n          \"results\",\n          \"size\",\n          \"start\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"results\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Space\"\n            }\n          },\n          \"start\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"SpaceCreate\": {\n        \"required\": [\n          \"key\",\n          \"name\"\n        ],\n        \"type\": \"object\",\n        \"additionalProperties\": true,\n        \"properties\": {\n          \"key\": {\n            \"type\": \"string\",\n            \"description\": \"The key for the new space. Format: See [Space\\nkeys](https://confluence.atlassian.com/x/lqNMMQ).\"\n          },\n          \"name\": {\n            \"maxLength\": 200,\n            \"type\": \"string\",\n            \"description\": \"The name of the new space.\"\n          },\n          \"description\": {\n            \"$ref\": \"#/components/schemas/SpaceDescriptionCreate\"\n          },\n          \"permissions\": {\n            \"type\": \"array\",\n            \"nullable\": true,\n            \"description\": \"The permissions for the new space. If no permissions are provided, the\\n[Confluence default space permissions](https://confluence.atlassian.com/x/UAgzKw#CreateaSpace-Spacepermissions)\\nare applied. Note that if permissions are provided, the space is\\ncreated with only the provided set of permissions, not\\nincluding the default space permissions. Space permissions\\ncan be modified after creation using the space permissions\\nendpoints, and a private space can be created using the\\ncreate private space endpoint.\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SpacePermissionCreate\"\n            }\n          }\n        },\n        \"description\": \"This is the request object used when creating a new space.\"\n      },\n      \"SpaceUpdate\": {\n        \"type\": \"object\",\n        \"additionalProperties\": true,\n        \"properties\": {\n          \"name\": {\n            \"nullable\": true,\n            \"maxLength\": 200,\n            \"type\": \"string\",\n            \"description\": \"The updated name of the space.\"\n          },\n          \"description\": {\n            \"$ref\": \"#/components/schemas/SpaceDescriptionCreate\"\n          },\n          \"homepage\": {\n            \"nullable\": true,\n            \"description\": \"The updated homepage for this space\",\n            \"type\": \"object\"\n          },\n          \"type\": {\n            \"description\": \"The updated type for this space.\",\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"nullable\": true,\n            \"description\": \"The updated status for this space.\",\n            \"type\": \"string\"\n          }\n        },\n        \"description\": \"The properties of a space that can be updated.\"\n      },\n      \"SpaceDescription\": {\n        \"required\": [\n          \"embeddedContent\",\n          \"representation\",\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"additionalProperties\": true,\n        \"properties\": {\n          \"value\": {\n            \"type\": \"string\"\n          },\n          \"representation\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"plain\",\n              \"view\"\n            ]\n          },\n          \"embeddedContent\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {}\n            }\n          }\n        }\n      },\n      \"SpaceDescriptionCreate\": {\n        \"required\": [\n          \"plain\"\n        ],\n        \"type\": \"object\",\n        \"nullable\": true,\n        \"properties\": {\n          \"plain\": {\n            \"type\": \"object\",\n            \"additionalProperties\": true,\n            \"properties\": {\n              \"value\": {\n                \"type\": \"string\",\n                \"description\": \"The space description.\"\n              },\n              \"representation\": {\n                \"type\": \"string\",\n                \"description\": \"Set to 'plain'.\"\n              }\n            }\n          }\n        },\n        \"description\": \"The description of the new/updated space. Note, only the 'plain' representation\\ncan be used for the description when creating or updating a space.\"\n      },\n      \"SpacePermission\": {\n        \"required\": [\n          \"anonymousAccess\",\n          \"operation\",\n          \"unlicensedAccess\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"subjects\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"user\": {\n                \"required\": [\n                  \"results\",\n                  \"size\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                  \"results\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/User\"\n                    }\n                  },\n                  \"size\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  },\n                  \"start\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  },\n                  \"limit\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  }\n                }\n              },\n              \"group\": {\n                \"required\": [\n                  \"results\",\n                  \"size\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                  \"results\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/Group\"\n                    }\n                  },\n                  \"size\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  },\n                  \"start\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  },\n                  \"limit\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  }\n                }\n              },\n              \"_expandable\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"user\": {\n                    \"type\": \"string\"\n                  },\n                  \"group\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            },\n            \"description\": \"The users and/or groups that the permission applies to.\"\n          },\n          \"operation\": {\n            \"$ref\": \"#/components/schemas/OperationCheckResult\"\n          },\n          \"anonymousAccess\": {\n            \"type\": \"boolean\",\n            \"description\": \"Grant anonymous users permission to use the operation.\",\n            \"default\": false\n          },\n          \"unlicensedAccess\": {\n            \"type\": \"boolean\",\n            \"description\": \"Grants access to unlicensed users from JIRA Service Desk when used\\nwith the 'read space' operation.\",\n            \"default\": false\n          }\n        },\n        \"description\": \"This object represents a permission for given space. Permissions consist of\\nat least one operation object with an accompanying subjects object.\\n\\nThe following combinations of `operation` and `targetType` values are\\nvalid for the `operation` object:\\n\\n  - 'create': 'page', 'blogpost', 'comment', 'attachment'\\n  - 'read': 'space'\\n  - 'delete': 'page', 'blogpost', 'comment', 'attachment'\\n  - 'export': 'space'\\n  - 'administer': 'space'\"\n      },\n      \"SpacePermissionCreate\": {\n        \"required\": [\n          \"anonymousAccess\",\n          \"operation\",\n          \"unlicensedAccess\"\n        ],\n        \"type\": \"object\",\n        \"additionalProperties\": true,\n        \"properties\": {\n          \"subjects\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"user\": {\n                \"required\": [\n                  \"results\",\n                  \"size\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                  \"results\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/User\"\n                    }\n                  },\n                  \"size\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  }\n                }\n              },\n              \"group\": {\n                \"required\": [\n                  \"results\",\n                  \"size\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                  \"results\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/GroupCreate\"\n                    }\n                  },\n                  \"size\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  }\n                }\n              }\n            },\n            \"description\": \"The users and/or groups that the permission applies to.\"\n          },\n          \"operation\": {\n            \"$ref\": \"#/components/schemas/OperationCheckResult\"\n          },\n          \"anonymousAccess\": {\n            \"type\": \"boolean\",\n            \"description\": \"Grant anonymous users permission to use the operation.\",\n            \"default\": false\n          },\n          \"unlicensedAccess\": {\n            \"type\": \"boolean\",\n            \"description\": \"Grants access to unlicensed users from JIRA Service Desk when used\\nwith the 'read space' operation.\",\n            \"default\": false\n          }\n        },\n        \"description\": \"This object represents a permission for given space. Permissions consist of\\nat least one operation object with an accompanying subjects object.\\n\\nThe following combinations of `operation` and `targetType` values are\\nvalid for the `operation` object:\\n\\n  - 'create': 'page', 'blogpost', 'comment', 'attachment'\\n  - 'read': 'space'\\n  - 'delete': 'page', 'blogpost', 'comment', 'attachment'\\n  - 'export': 'space'\\n  - 'administer': 'space'\"\n      },\n      \"SpaceProperty\": {\n        \"required\": [\n          \"_expandable\",\n          \"id\",\n          \"key\",\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"key\": {\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"oneOf\": [\n              {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              {\n                \"type\": \"boolean\"\n              },\n              {\n                \"type\": \"object\",\n                \"additionalProperties\": true,\n                \"properties\": {}\n              },\n              {\n                \"type\": \"string\"\n              }\n            ]\n          },\n          \"version\": {\n            \"$ref\": \"#/components/schemas/Version\"\n          },\n          \"space\": {\n            \"$ref\": \"#/components/schemas/Space\"\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          },\n          \"_expandable\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"version\": {\n                \"type\": \"string\"\n              },\n              \"space\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        }\n      },\n      \"SpacePropertyArray\": {\n        \"required\": [\n          \"_links\",\n          \"limit\",\n          \"results\",\n          \"size\",\n          \"start\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"results\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SpaceProperty\"\n            }\n          },\n          \"start\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"SpacePropertyCreate\": {\n        \"required\": [\n          \"key\",\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"key\": {\n            \"type\": \"string\",\n            \"description\": \"The key of the new property.\"\n          },\n          \"value\": {\n            \"$ref\": \"#/components/schemas/PropertyValue\"\n          },\n          \"space\": {\n            \"type\": \"object\",\n            \"additionalProperties\": true,\n            \"properties\": {\n              \"key\": {\n                \"type\": \"string\",\n                \"description\": \"The key of the space\"\n              }\n            }\n          }\n        }\n      },\n      \"SpacePropertyCreateNoKey\": {\n        \"required\": [\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"$ref\": \"#/components/schemas/PropertyValue\"\n          }\n        }\n      },\n      \"SpacePropertyUpdate\": {\n        \"required\": [\n          \"value\",\n          \"version\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"key\": {\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"oneOf\": [\n              {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              {\n                \"type\": \"boolean\"\n              },\n              {\n                \"type\": \"object\",\n                \"additionalProperties\": true,\n                \"properties\": {}\n              },\n              {\n                \"type\": \"string\"\n              }\n            ]\n          },\n          \"version\": {\n            \"$ref\": \"#/components/schemas/Version\"\n          },\n          \"space\": {\n            \"type\": \"object\",\n            \"additionalProperties\": true,\n            \"properties\": {\n              \"key\": {\n                \"type\": \"string\",\n                \"description\": \"The key of the space\"\n              }\n            }\n          }\n        }\n      },\n      \"SpaceSettings\": {\n        \"nullable\": true,\n        \"required\": [\n          \"_links\",\n          \"routeOverrideEnabled\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"routeOverrideEnabled\": {\n            \"type\": \"boolean\",\n            \"description\": \"Defines whether an override for the space home should be used. This is\\nused in conjunction with a space theme provided by an app. For\\nexample, if this property is set to true, a theme can display a page\\nother than the space homepage when users visit the root URL for a\\nspace. This property allows apps to provide content-only theming\\nwithout overriding the space home.\"\n          },\n          \"editor\": {\n            \"required\": [\n              \"page\",\n              \"blogpost\",\n              \"default\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"page\": {\n                \"type\": \"string\"\n              },\n              \"blogpost\": {\n                \"type\": \"string\"\n              },\n              \"default\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"SpaceSettingsUpdate\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"routeOverrideEnabled\": {\n            \"type\": \"boolean\",\n            \"description\": \"Defines whether an override for the space home should be used. This is\\nused in conjunction with a space theme provided by an app. For\\nexample, if this property is set to true, a theme can display a page\\nother than the space homepage when users visit the root URL for a\\nspace. This property allows apps to provide content-only theming\\nwithout overriding the space home.\"\n          }\n        }\n      },\n      \"SpaceWatch\": {\n        \"required\": [\n          \"type\",\n          \"watcher\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"watcher\": {\n            \"$ref\": \"#/components/schemas/WatchUser\"\n          },\n          \"spaceKey\": {\n            \"type\": \"string\"\n          },\n          \"labelName\": {\n            \"type\": \"string\"\n          },\n          \"prefix\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"SpaceWatchArray\": {\n        \"required\": [\n          \"limit\",\n          \"results\",\n          \"size\",\n          \"start\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"results\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SpaceWatch\"\n            }\n          },\n          \"start\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"SuperBatchWebResources\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"uris\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"all\": {\n                \"oneOf\": [\n                  {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  {\n                    \"type\": \"string\"\n                  }\n                ]\n              },\n              \"css\": {\n                \"oneOf\": [\n                  {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  {\n                    \"type\": \"string\"\n                  }\n                ]\n              },\n              \"js\": {\n                \"oneOf\": [\n                  {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  {\n                    \"type\": \"string\"\n                  }\n                ]\n              }\n            }\n          },\n          \"tags\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"all\": {\n                \"type\": \"string\"\n              },\n              \"css\": {\n                \"type\": \"string\"\n              },\n              \"data\": {\n                \"type\": \"string\"\n              },\n              \"js\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"metatags\": {\n            \"type\": \"string\"\n          },\n          \"_expandable\": {\n            \"type\": \"object\",\n            \"additionalProperties\": true\n          }\n        }\n      },\n      \"SystemInfoEntity\": {\n        \"required\": [\n          \"cloudId\",\n          \"commitHash\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"cloudId\": {\n            \"type\": \"string\"\n          },\n          \"commitHash\": {\n            \"type\": \"string\"\n          },\n          \"baseUrl\": {\n            \"type\": \"string\"\n          },\n          \"edition\": {\n            \"type\": \"string\"\n          },\n          \"siteTitle\": {\n            \"type\": \"string\"\n          },\n          \"defaultLocale\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"TaskStatusUpdate\": {\n        \"required\": [\n          \"status\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"complete\",\n              \"incomplete\"\n            ]\n          }\n        }\n      },\n      \"Task\": {\n        \"required\": [\n          \"contentId\",\n          \"createDate\",\n          \"creator\",\n          \"globalId\",\n          \"id\",\n          \"status\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"globalId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"contentId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"type\": \"string\"\n          },\n          \"creator\": {\n            \"type\": \"string\"\n          },\n          \"assignee\": {\n            \"type\": \"string\"\n          },\n          \"completeUser\": {\n            \"type\": \"string\"\n          },\n          \"createDate\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"dueDate\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"updateDate\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"completeDate\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"TaskPageResponse\": {\n        \"required\": [\n          \"limit\",\n          \"results\",\n          \"size\",\n          \"start\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"results\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Task\"\n            }\n          },\n          \"start\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        }\n      },\n      \"Theme\": {\n        \"required\": [\n          \"themeKey\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"themeKey\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"icon\": {\n            \"$ref\": \"#/components/schemas/Icon\"\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"ThemeNoLinks\": {\n        \"required\": [\n          \"themeKey\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"themeKey\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"icon\": {\n            \"$ref\": \"#/components/schemas/Icon\"\n          }\n        },\n        \"description\": \"Theme object without links. Used in ThemeArray.\"\n      },\n      \"ThemeArray\": {\n        \"required\": [\n          \"_links\",\n          \"limit\",\n          \"results\",\n          \"size\",\n          \"start\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"results\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ThemeNoLinks\"\n            }\n          },\n          \"start\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"ThemeUpdate\": {\n        \"required\": [\n          \"themeKey\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"themeKey\": {\n            \"type\": \"string\",\n            \"description\": \"The key of the theme to be set as the space theme.\"\n          }\n        }\n      },\n      \"User\": {\n        \"required\": [\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"additionalProperties\": true,\n        \"nullable\": true,\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"known\",\n              \"unknown\",\n              \"anonymous\",\n              \"user\"\n            ]\n          },\n          \"username\": {\n            \"$ref\": \"#/components/schemas/GenericUserName\"\n          },\n          \"userKey\": {\n            \"$ref\": \"#/components/schemas/GenericUserKey\"\n          },\n          \"accountId\": {\n            \"$ref\": \"#/components/schemas/GenericAccountId\"\n          },\n          \"accountType\": {\n            \"type\": \"string\",\n            \"description\": \"The account type of the user, may return empty string if unavailable. App is if the user is a bot user created on behalf of an Atlassian app.\",\n            \"enum\": [\n              \"atlassian\",\n              \"app\",\n              \"\"\n            ]\n          },\n          \"email\": {\n            \"nullable\": true,\n            \"type\": \"string\",\n            \"description\": \"The email address of the user. Depending on the user's privacy setting, this may return an empty string.\"\n          },\n          \"publicName\": {\n            \"type\": \"string\",\n            \"description\": \"The public name or nickname of the user. Will always contain a value.\"\n          },\n          \"profilePicture\": {\n            \"$ref\": \"#/components/schemas/Icon\"\n          },\n          \"displayName\": {\n            \"nullable\": true,\n            \"type\": \"string\",\n            \"description\": \"The display name of the user. Depending on the user's privacy setting, this may be the same as publicName.\"\n          },\n          \"timeZone\": {\n            \"nullable\": true,\n            \"type\": \"string\",\n            \"description\": \"This display user time zone. Depending on the user's privacy setting, this may be default to tenant time zone.\"\n          },\n          \"isExternalCollaborator\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether the user is an external collaborator user\"\n          },\n          \"externalCollaborator\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether the user is an external collaborator user\"\n          },\n          \"operations\": {\n            \"nullable\": true,\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/OperationCheckResult\"\n            }\n          },\n          \"details\": {\n            \"$ref\": \"#/components/schemas/UserDetails\"\n          },\n          \"personalSpace\": {\n            \"$ref\": \"#/components/schemas/Space\"\n          },\n          \"_expandable\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"operations\": {\n                \"type\": \"string\"\n              },\n              \"details\": {\n                \"type\": \"string\"\n              },\n              \"personalSpace\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"UserAnonymous\": {\n        \"required\": [\n          \"_links\",\n          \"displayName\",\n          \"profilePicture\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"profilePicture\": {\n            \"$ref\": \"#/components/schemas/Icon\"\n          },\n          \"displayName\": {\n            \"type\": \"string\"\n          },\n          \"operations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/OperationCheckResult\"\n            }\n          },\n          \"isExternalCollaborator\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether the user is an external collaborator user\"\n          },\n          \"_expandable\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"operations\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"UserArray\": {\n        \"required\": [\n          \"results\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"results\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/User\"\n            }\n          },\n          \"start\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"totalSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"default\": 0,\n            \"description\": \"This property will return total count of the objects before pagination is applied.\\nThis value is returned if `shouldReturnTotalSize` is set to `true`.\"\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"UserDetails\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"business\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"position\": {\n                \"type\": \"string\",\n                \"description\": \"This property has been deprecated due to privacy changes. There is no replacement. See the\\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\\nfor details.\"\n              },\n              \"department\": {\n                \"type\": \"string\",\n                \"description\": \"This property has been deprecated due to privacy changes. There is no replacement. See the\\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\\nfor details.\"\n              },\n              \"location\": {\n                \"type\": \"string\",\n                \"description\": \"This property has been deprecated due to privacy changes. There is no replacement. See the\\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\\nfor details.\"\n              }\n            }\n          },\n          \"personal\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"phone\": {\n                \"type\": \"string\",\n                \"description\": \"This property has been deprecated due to privacy changes. There is no replacement. See the\\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\\nfor details.\"\n              },\n              \"im\": {\n                \"type\": \"string\",\n                \"description\": \"This property has been deprecated due to privacy changes. There is no replacement. See the\\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\\nfor details.\"\n              },\n              \"website\": {\n                \"type\": \"string\",\n                \"description\": \"This property has been deprecated due to privacy changes. There is no replacement. See the\\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\\nfor details.\"\n              },\n              \"email\": {\n                \"type\": \"string\",\n                \"description\": \"This property has been deprecated due to privacy changes. Use the `User.email` property instead. See the\\n[migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\\nfor details.\"\n              }\n            }\n          }\n        }\n      },\n      \"UserProperty\": {\n        \"required\": [\n          \"key\",\n          \"value\",\n          \"id\",\n          \"lastModifiedDate\",\n          \"createdDate\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"key\": {\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"type\": \"object\",\n            \"additionalProperties\": true,\n            \"properties\": {},\n            \"description\": \"The value of the content property.\"\n          },\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"a unique identifier for the user property\"\n          },\n          \"lastModifiedDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"datetime when the property was last modified such as `2022-02-01T12:00:00.111Z`\"\n          },\n          \"createdDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"datetime when the property was created such as `2022-01-01T12:00:00.111Z`\"\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"UserPropertyKeyArray\": {\n        \"required\": [\n          \"results\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"results\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"key\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"start\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"UserPropertyCreate\": {\n        \"required\": [\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"value\": {\n            \"type\": \"object\",\n            \"additionalProperties\": true,\n            \"properties\": {},\n            \"description\": \"The value of the user property.\"\n          }\n        }\n      },\n      \"UserPropertyUpdate\": {\n        \"required\": [\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"value\": {\n            \"type\": \"object\",\n            \"additionalProperties\": true,\n            \"properties\": {},\n            \"description\": \"The value of the user property.\"\n          }\n        }\n      },\n      \"UsersUserKeys\": {\n        \"required\": [\n          \"userKeys\"\n        ],\n        \"nullable\": true,\n        \"type\": \"object\",\n        \"additionalProperties\": true,\n        \"properties\": {\n          \"users\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/User\"\n            }\n          },\n          \"userKeys\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"UserWatch\": {\n        \"required\": [\n          \"watching\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"watching\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"Version\": {\n        \"required\": [\n          \"minorEdit\",\n          \"number\",\n          \"when\"\n        ],\n        \"type\": \"object\",\n        \"nullable\": true,\n        \"additionalProperties\": true,\n        \"properties\": {\n          \"by\": {\n            \"$ref\": \"#/components/schemas/User\"\n          },\n          \"when\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"friendlyWhen\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"number\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"description\": \"Set this to the current version number incremented by one\"\n          },\n          \"minorEdit\": {\n            \"description\": \"If `minorEdit` is set to 'true', no notification email or activity\\nstream will be generated for the change.\",\n            \"type\": \"boolean\"\n          },\n          \"content\": {\n            \"$ref\": \"#/components/schemas/Content\"\n          },\n          \"collaborators\": {\n            \"$ref\": \"#/components/schemas/UsersUserKeys\"\n          },\n          \"_expandable\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"content\": {\n                \"type\": \"string\"\n              },\n              \"collaborators\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          },\n          \"contentTypeModified\": {\n            \"type\": \"boolean\",\n            \"description\": \"True if content type is modifed in this version (e.g. page to blog)\"\n          },\n          \"confRev\": {\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"description\": \"The revision id provided by confluence to be used as a revision in Synchrony\"\n          },\n          \"syncRev\": {\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"description\": \"The revision id provided by Synchrony\"\n          },\n          \"syncRevSource\": {\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"description\": \"Source of the synchrony revision\"\n          }\n        }\n      },\n      \"VersionArray\": {\n        \"required\": [\n          \"_links\",\n          \"limit\",\n          \"results\",\n          \"size\",\n          \"start\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"results\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Version\"\n            }\n          },\n          \"start\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"VersionRestore\": {\n        \"required\": [\n          \"operationKey\",\n          \"params\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"operationKey\": {\n            \"type\": \"string\",\n            \"description\": \"Set to 'restore'.\",\n            \"enum\": [\n              \"restore\"\n            ]\n          },\n          \"params\": {\n            \"required\": [\n              \"message\",\n              \"versionNumber\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"versionNumber\": {\n                \"type\": \"integer\",\n                \"description\": \"The version number to be restored.\",\n                \"format\": \"int32\"\n              },\n              \"message\": {\n                \"type\": \"string\",\n                \"description\": \"Description for the version.\"\n              },\n              \"restoreTitle\": {\n                \"type\": \"boolean\",\n                \"default\": false,\n                \"description\": \"If true, the content title will be the same as the title from the version restored. Defaults to `false`.\"\n              }\n            }\n          }\n        }\n      },\n      \"Watch\": {\n        \"required\": [\n          \"contentId\",\n          \"type\",\n          \"watcher\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"watcher\": {\n            \"$ref\": \"#/components/schemas/WatchUser\"\n          },\n          \"contentId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        }\n      },\n      \"WatchArray\": {\n        \"required\": [\n          \"_links\",\n          \"limit\",\n          \"results\",\n          \"size\",\n          \"start\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"results\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Watch\"\n            }\n          },\n          \"start\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        }\n      },\n      \"WatchUser\": {\n        \"required\": [\n          \"type\",\n          \"accountId\",\n          \"profilePicture\",\n          \"displayName\",\n          \"operations\",\n          \"isExternalCollaborator\",\n          \"accountType\",\n          \"email\",\n          \"publicName\",\n          \"personalSpace\",\n          \"externalCollaborator\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"$ref\": \"#/components/schemas/GenericUserName\"\n          },\n          \"userKey\": {\n            \"$ref\": \"#/components/schemas/GenericUserKey\"\n          },\n          \"accountId\": {\n            \"$ref\": \"#/components/schemas/GenericAccountId\"\n          },\n          \"profilePicture\": {\n            \"$ref\": \"#/components/schemas/Icon\"\n          },\n          \"displayName\": {\n            \"type\": \"string\"\n          },\n          \"timeZone\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"operations\": {\n            \"type\": \"array\",\n            \"nullable\": true,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/OperationCheckResult\"\n            }\n          },\n          \"isExternalCollaborator\": {\n            \"type\": \"boolean\"\n          },\n          \"details\": {\n            \"$ref\": \"#/components/schemas/UserDetails\"\n          },\n          \"accountType\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"publicName\": {\n            \"type\": \"string\"\n          },\n          \"personalSpace\": {\n            \"type\": \"object\",\n            \"nullable\": true\n          },\n          \"externalCollaborator\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"description\": \"This essentially the same as the `User` object, but no `_links` property and\\nno `_expandable` property (therefore, different required fields).\"\n      },\n      \"WebResourceDependencies\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"_expandable\": {\n            \"type\": \"object\",\n            \"additionalProperties\": true,\n            \"properties\": {\n              \"uris\": {\n                \"oneOf\": [\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"additionalProperties\": true\n                  }\n                ]\n              }\n            }\n          },\n          \"keys\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"contexts\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"uris\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"all\": {\n                \"oneOf\": [\n                  {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  {\n                    \"type\": \"string\"\n                  }\n                ]\n              },\n              \"css\": {\n                \"oneOf\": [\n                  {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  {\n                    \"type\": \"string\"\n                  }\n                ]\n              },\n              \"js\": {\n                \"oneOf\": [\n                  {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  {\n                    \"type\": \"string\"\n                  }\n                ]\n              },\n              \"_expandable\": {\n                \"type\": \"object\",\n                \"additionalProperties\": true,\n                \"properties\": {\n                  \"css\": {\n                    \"oneOf\": [\n                      {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      {\n                        \"type\": \"string\"\n                      }\n                    ]\n                  },\n                  \"js\": {\n                    \"oneOf\": [\n                      {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      {\n                        \"type\": \"string\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"tags\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"all\": {\n                \"type\": \"string\"\n              },\n              \"css\": {\n                \"type\": \"string\"\n              },\n              \"data\": {\n                \"type\": \"string\"\n              },\n              \"js\": {\n                \"type\": \"string\"\n              },\n              \"_expandable\": {\n                \"type\": \"object\",\n                \"additionalProperties\": true\n              }\n            }\n          },\n          \"superbatch\": {\n            \"$ref\": \"#/components/schemas/SuperBatchWebResources\"\n          }\n        }\n      },\n      \"PermissionSubject\": {\n        \"required\": [\n          \"identifier\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"user\",\n              \"group\"\n            ]\n          },\n          \"identifier\": {\n            \"type\": \"string\",\n            \"description\": \"for `type=user`, identifier should be user's accountId or `anonymous` for anonymous users\\n\\nfor `type=group`, identifier should be name of the group or groupId\"\n          }\n        },\n        \"description\": \"The user or group that the permission applies to.\"\n      },\n      \"PermissionSubjectWithGroupId\": {\n        \"required\": [\n          \"identifier\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"user\",\n              \"group\"\n            ]\n          },\n          \"identifier\": {\n            \"type\": \"string\",\n            \"description\": \"for `type=user`, identifier should be user's accountId or `anonymous` for anonymous users\\n\\nfor `type=group`, identifier should be ID of the group\"\n          }\n        },\n        \"description\": \"The user or group that the permission applies to.\"\n      },\n      \"SpacePermissionV2\": {\n        \"required\": [\n          \"id\",\n          \"subject\",\n          \"operation\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"subject\": {\n            \"$ref\": \"#/components/schemas/PermissionSubject\"\n          },\n          \"operation\": {\n            \"required\": [\n              \"key\",\n              \"target\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"key\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"administer\",\n                  \"archive\",\n                  \"copy\",\n                  \"create\",\n                  \"delete\",\n                  \"export\",\n                  \"move\",\n                  \"purge\",\n                  \"purge_version\",\n                  \"read\",\n                  \"restore\",\n                  \"restrict_content\",\n                  \"update\",\n                  \"use\"\n                ]\n              },\n              \"target\": {\n                \"type\": \"string\",\n                \"description\": \"The space or content type that the operation applies to.\",\n                \"enum\": [\n                  \"page\",\n                  \"blogpost\",\n                  \"comment\",\n                  \"attachment\",\n                  \"space\"\n                ]\n              }\n            }\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        },\n        \"description\": \"This object represents a single space permission. Permissions consist of\\nat least one operation object with an accompanying subjects object.\\n\\nThe following combinations of `operation.key` and `operation.target` values are\\nvalid for the `operation` object:\\n``` bash\\n'create': 'page', 'blogpost', 'comment', 'attachment'\\n'read': 'space'\\n'delete': 'page', 'blogpost', 'comment', 'attachment', 'space'\\n'export': 'space'\\n'administer': 'space'\\n'archive': 'page'\\n'restrict_content': 'space'\\n```\\n\\nFor example, to enable Delete Own permission, set the `operation` object to the following:\\n```\\n\\\"operation\\\": {\\n    \\\"key\\\": \\\"delete\\\",\\n    \\\"target\\\": \\\"space\\\"\\n}\\n```\\nTo enable Add/Delete Restrictions permissions, set the `operation` object to the following:\\n```\\n\\\"operation\\\": {\\n    \\\"key\\\": \\\"restrict_content\\\",\\n    \\\"target\\\": \\\"space\\\"\\n}\\n```\"\n      },\n      \"SpacePermissionRequest\": {\n        \"required\": [\n          \"subject\",\n          \"operation\"\n        ],\n        \"type\": \"object\",\n        \"additionalProperties\": true,\n        \"properties\": {\n          \"subject\": {\n            \"$ref\": \"#/components/schemas/PermissionSubject\"\n          },\n          \"operation\": {\n            \"required\": [\n              \"key\",\n              \"target\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"key\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"administer\",\n                  \"archive\",\n                  \"copy\",\n                  \"create\",\n                  \"delete\",\n                  \"export\",\n                  \"move\",\n                  \"purge\",\n                  \"purge_version\",\n                  \"read\",\n                  \"restore\",\n                  \"restrict_content\",\n                  \"update\",\n                  \"use\"\n                ]\n              },\n              \"target\": {\n                \"type\": \"string\",\n                \"description\": \"The space or content type that the operation applies to.\",\n                \"enum\": [\n                  \"page\",\n                  \"blogpost\",\n                  \"comment\",\n                  \"attachment\",\n                  \"space\"\n                ]\n              }\n            }\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        },\n        \"description\": \"This object represents the request for the single space permission. Permissions consist of\\nat least one operation object with an accompanying subjects object.\\n\\nThe following combinations of `operation.key` and `operation.target` values are\\nvalid for the `operation` object:\\n``` bash\\n'create': 'page', 'blogpost', 'comment', 'attachment'\\n'read': 'space'\\n'delete': 'page', 'blogpost', 'comment', 'attachment', 'space'\\n'export': 'space'\\n'administer': 'space'\\n'archive': 'page'\\n'restrict_content': 'space'\\n```\\n\\nFor example, to enable Delete Own permission, set the `operation` object to the following:\\n```\\n\\\"operation\\\": {\\n    \\\"key\\\": \\\"delete\\\",\\n    \\\"target\\\": \\\"space\\\"\\n}\\n```\\nTo enable Add/Delete Restrictions permissions, set the `operation` object to the following:\\n```\\n\\\"operation\\\": {\\n    \\\"key\\\": \\\"restrict_content\\\",\\n    \\\"target\\\": \\\"space\\\"\\n}\\n```\"\n      },\n      \"SpacePermissionCustomContent\": {\n        \"required\": [\n          \"operations\",\n          \"subject\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"subject\": {\n            \"$ref\": \"#/components/schemas/PermissionSubject\"\n          },\n          \"operations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"access\",\n                \"key\",\n                \"target\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"key\": {\n                  \"type\": \"string\",\n                  \"description\": \"The operation type\",\n                  \"enum\": [\n                    \"read\",\n                    \"create\",\n                    \"delete\"\n                  ]\n                },\n                \"target\": {\n                  \"type\": \"string\",\n                  \"description\": \"The custom content type\"\n                },\n                \"access\": {\n                  \"type\": \"boolean\",\n                  \"description\": \"Grant or restrict access\"\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"This object represents a list of space permissions for custom content type for an individual user. Permissions consist of\\na subjects object and a list with at least one operation object.\"\n      },\n      \"ContentPermissionRequest\": {\n        \"required\": [\n          \"operation\",\n          \"subject\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"subject\": {\n            \"$ref\": \"#/components/schemas/PermissionSubjectWithGroupId\"\n          },\n          \"operation\": {\n            \"type\": \"string\",\n            \"description\": \"The content permission operation to check.\",\n            \"enum\": [\n              \"read\",\n              \"update\",\n              \"delete\"\n            ]\n          }\n        },\n        \"description\": \"This object represents the request for the content permission check API.\"\n      },\n      \"PermissionCheckResponse\": {\n        \"required\": [\n          \"hasPermission\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"hasPermission\": {\n            \"type\": \"boolean\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Message\"\n            }\n          },\n          \"_links\": {\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          }\n        },\n        \"description\": \"This object represents the response for the content permission check API. If the user or group does not have\\npermissions, the following errors may be returned:\\n\\n- Group does not have permission to the space\\n- Group does not have permission to the content\\n- User is not allowed to use Confluence\\n- User does not have permission to the space\\n- User does not have permission to the content\\n- Anonymous users are not allowed to use Confluence\\n- Anonymous user does not have permission to the space\\n- Anonymous user does not have permission to the content\"\n      }\n    },\n    \"parameters\": {\n      \"contentExpand\": {\n        \"name\": \"expand\",\n        \"in\": \"query\",\n        \"description\": \"A multi-value parameter indicating which properties of the content to expand.\\n\\n- `childTypes.all` returns whether the content has attachments, comments, or child pages.\\nUse this if you only need to check whether the content has children of a particular type.\\n- `childTypes.attachment` returns whether the content has attachments.\\n- `childTypes.comment` returns whether the content has comments.\\n- `childTypes.page` returns whether the content has child pages.\\n- `container` returns the space that the content is in. This is the same as the information\\nreturned by [Get space](#api-space-spaceKey-get).\\n- `metadata.currentuser` returns information about the current user in relation to the content,\\nincluding when they last viewed it, modified it, contributed to it, or added it as a favorite.\\n- `metadata.properties` returns content properties that have been set via the Confluence REST API.\\n- `metadata.labels` returns the labels that have been added to the content.\\n- `metadata.frontend` this property is only used by Atlassian.\\n- `operations` returns the operations for the content, which are used when setting permissions.\\n- `children.page` returns pages that are descendants at the level immediately below the content.\\n- `children.attachment` returns all attachments for the content.\\n- `children.comment` returns all comments on the content.\\n- `restrictions.read.restrictions.user` returns the users that have permission to read the content.\\n- `restrictions.read.restrictions.group` returns the groups that have permission to read the content. Note that\\nthis may return deleted groups, because deleting a group doesn't remove associated restrictions.\\n- `restrictions.update.restrictions.user` returns the users that have permission to update the content.\\n- `restrictions.update.restrictions.group` returns the groups that have permission to update the content. Note that\\nthis may return deleted groups because deleting a group doesn't remove associated restrictions.\\n- `history` returns the history of the content, including the date it was created.\\n- `history.lastUpdated` returns information about the most recent update of the content, including\\nwho updated it and when it was updated.\\n- `history.previousVersion` returns information about the update prior to the current content update.\\n- `history.contributors` returns all of the users who have contributed to the content.\\n- `history.nextVersion` returns information about the update after to the current content update.\\n- `ancestors` returns the parent page, if the content is a page.\\n- `body` returns the body of the content in different formats, including the editor format,\\nview format, and export format.\\n- `body.storage` returns the body of content in storage format.\\n- `body.view` returns the body of content in view format.\\n- `version` returns information about the most recent update of the content, including who updated it\\nand when it was updated.\\n- `descendants.page` returns pages that are descendants at any level below the content.\\n- `descendants.attachment` returns all attachments for the content, same as `children.attachment`.\\n- `descendants.comment` returns all comments on the content, same as `children.comment`.\\n- `space` returns the space that the content is in. This is the same as the information returned by\\n[Get space](#api-space-spaceKey-get).\\n\\nIn addition, the following comment-specific expansions can be used:\\n- `extensions.inlineProperties` returns inline comment-specific properties.\\n- `extensions.resolution` returns the resolution status of each comment.\",\n        \"style\": \"form\",\n        \"explode\": false,\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"contentExpandWithSubExpandLimit\": {\n        \"name\": \"expand\",\n        \"in\": \"query\",\n        \"description\": \"A multi-value parameter indicating which properties of the content to expand.\\nMaximum sub-expansions allowed is `8`.\\n\\n- `childTypes.all` returns whether the content has attachments, comments, or child pages.\\nUse this if you only need to check whether the content has children of a particular type.\\n- `childTypes.attachment` returns whether the content has attachments.\\n- `childTypes.comment` returns whether the content has comments.\\n- `childTypes.page` returns whether the content has child pages.\\n- `container` returns the space that the content is in. This is the same as the information\\nreturned by [Get space](#api-space-spaceKey-get).\\n- `metadata.currentuser` returns information about the current user in relation to the content,\\nincluding when they last viewed it, modified it, contributed to it, or added it as a favorite.\\n- `metadata.properties` returns content properties that have been set via the Confluence REST API.\\n- `metadata.labels` returns the labels that have been added to the content.\\n- `metadata.frontend` this property is only used by Atlassian.\\n- `operations` returns the operations for the content, which are used when setting permissions.\\n- `children.page` returns pages that are descendants at the level immediately below the content.\\n- `children.attachment` returns all attachments for the content.\\n- `children.comment` returns all comments on the content.\\n- `restrictions.read.restrictions.user` returns the users that have permission to read the content.\\n- `restrictions.read.restrictions.group` returns the groups that have permission to read the content. Note that\\nthis may return deleted groups, because deleting a group doesn't remove associated restrictions.\\n- `restrictions.update.restrictions.user` returns the users that have permission to update the content.\\n- `restrictions.update.restrictions.group` returns the groups that have permission to update the content. Note that\\nthis may return deleted groups because deleting a group doesn't remove associated restrictions.\\n- `history` returns the history of the content, including the date it was created.\\n- `history.lastUpdated` returns information about the most recent update of the content, including\\nwho updated it and when it was updated.\\n- `history.previousVersion` returns information about the update prior to the current content update.\\n- `history.contributors` returns all of the users who have contributed to the content.\\n- `history.nextVersion` returns information about the update after to the current content update.\\n- `ancestors` returns the parent page, if the content is a page.\\n- `body` returns the body of the content in different formats, including the editor format,\\nview format, and export format.\\n- `body.storage` returns the body of content in storage format.\\n- `body.view` returns the body of content in view format.\\n- `version` returns information about the most recent update of the content, including who updated it\\nand when it was updated.\\n- `descendants.page` returns pages that are descendants at any level below the content.\\n- `descendants.attachment` returns all attachments for the content, same as `children.attachment`.\\n- `descendants.comment` returns all comments on the content, same as `children.comment`.\\n- `space` returns the space that the content is in. This is the same as the information returned by\\n[Get space](#api-space-spaceKey-get).\\n\\nIn addition, the following comment-specific expansions can be used:\\n- `extensions.inlineProperties` returns inline comment-specific properties.\\n- `extensions.resolution` returns the resolution status of each comment.\",\n        \"style\": \"form\",\n        \"explode\": false,\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"spaceExpand\": {\n        \"name\": \"expand\",\n        \"in\": \"query\",\n        \"description\": \"A multi-value parameter indicating which properties of the spaces to\\nexpand, where:\\n\\n  - `settings` returns the settings for the space, similar to [Get space settings](#api-space-spaceKey-settings-get).\\n  - `metadata` returns the space metadata.\\n  - `metadata.labels` returns the space labels, which are used to categorize the space.\\n  - `operations` returns the operations for a space, which are used when setting permissions.\\n  - `lookAndFeel` returns information about the look and feel of the space, including the color scheme.\\n  - `permissions` returns the permissions for the space. Note that this may return permissions for deleted groups,\\n  because deleting a group doesn't remove associated space permissions.\\n  - `icon` returns information about space icon.\\n  - `description` returns the description of the space.\\n  - `description.plain` returns the description of the space, the plain format.\\n  - `description.view` returns the description of the space, the view format.\\n  - `theme` returns information about the space theme.\\n  - `homepage` returns information about the space homepage.\\n  - `history` returns information about the history of the space.\",\n        \"style\": \"form\",\n        \"explode\": false,\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"settings\",\n              \"metadata\",\n              \"metadata.labels\",\n              \"operations\",\n              \"lookAndFeel\",\n              \"permissions\",\n              \"icon\",\n              \"description\",\n              \"description.plain\",\n              \"description.view\",\n              \"theme\",\n              \"homepage\",\n              \"history\"\n            ]\n          }\n        }\n      },\n      \"userLookupKey\": {\n        \"name\": \"key\",\n        \"in\": \"query\",\n        \"deprecated\": true,\n        \"description\": \"This parameter is no longer available and will be removed from the documentation soon.\\nUse `accountId` instead.\\nSee the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"userLookupUsername\": {\n        \"name\": \"username\",\n        \"in\": \"query\",\n        \"deprecated\": true,\n        \"description\": \"This parameter is no longer available and will be removed from the documentation soon.\\nUse `accountId` instead.\\nSee the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"userLookupAccountId\": {\n        \"name\": \"accountId\",\n        \"in\": \"query\",\n        \"description\": \"The account ID of the user. The accountId uniquely identifies the user across all Atlassian products.\\nFor example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"basicAuth\": {\n        \"type\": \"http\",\n        \"description\": \"You can access this resource via basic auth.\",\n        \"scheme\": \"basic\"\n      },\n      \"oAuthDefinitions\": {\n        \"type\": \"oauth2\",\n        \"description\": \"This API uses OAuth 2 with the authorizationCode grant flow.\",\n        \"flows\": {\n          \"authorizationCode\": {\n            \"authorizationUrl\": \"https://auth.atlassian.com/authorize\",\n            \"tokenUrl\": \"https://auth.atlassian.com/oauth/token\",\n            \"scopes\": {\n              \"read:confluence-content.all\": \"Read all content, including content body (expansions permitted). Note, APIs using this scope may also return data allowed by read:confluence-space.summary. However, this scope is not a substitute for read:confluence-space.summary.\",\n              \"read:confluence-content.permission\": \"Read content permissions.\",\n              \"read:confluence-content.summary\": \"Read a summary of the content, which is the content without expansions. Note, APIs using this scope may also return data allowed by read:confluence-space.summary. However, this scope is not a substitute for read:confluence-space.summary.\",\n              \"write:confluence-content\": \"Permits the creation of pages, blogs, comments and questions.\",\n              \"read:confluence-space.summary\": \"Read a summary of space information without expansions.\",\n              \"write:confluence-space\": \"Create, update and delete space information.\",\n              \"write:confluence-file\": \"Upload attachments.\",\n              \"read:confluence-props\": \"Read content properties.\",\n              \"write:confluence-props\": \"Write content properties.\",\n              \"search:confluence\": \"Search Confluence. Note, APIs using this scope may also return data allowed by read:confluence-space.summary and read:confluence-content.summary. However, this scope is not a substitute for read:confluence-space.summary or read:confluence-content.summary.\",\n              \"manage:confluence-configuration\": \"Manage global settings.\",\n              \"read:confluence-groups\": \"Read user groups.\",\n              \"write:confluence-groups\": \"Create, remove and update user groups.\",\n              \"read:confluence-user\": \"Read users.\",\n              \"readonly:content.attachment:confluence\": \"Download attachments of a Confluence page or blogpost that you have access to.\",\n              \"read:content:confluence\": \"View content.\",\n              \"read:content-details:confluence\": \"View content details.\",\n              \"write:content:confluence\": \"Create and update content.\",\n              \"delete:content:confluence\": \"Delete content.\",\n              \"read:space-details:confluence\": \"View space details.\",\n              \"read:analytics.content:confluence\": \"View analytics for content.\",\n              \"read:audit-log:confluence\": \"View audit records.\",\n              \"write:audit-log:confluence\": \"Create audit records.\",\n              \"read:configuration:confluence\": \"View Confluence settings.\",\n              \"write:configuration:confluence\": \"Update Confluence settings.\",\n              \"read:page:confluence\": \"View pages.\",\n              \"write:page:confluence\": \"Create and update pages.\",\n              \"delete:page:confluence\": \"Delete pages.\",\n              \"read:blogpost:confluence\": \"View blogposts.\",\n              \"write:blogpost:confluence\": \"Create and update blogposts.\",\n              \"delete:blopgpost:confluence\": \"Delete blogposts.\",\n              \"read:custom-content:confluence\": \"View custom content.\",\n              \"write:custom-content:confluence\": \"Create and update custom content.\",\n              \"delete:custom-content:confluence\": \"Delete custom content.\",\n              \"read:attachment:confluence\": \"View and download content attachments.\",\n              \"write:attachment:confluence\": \"Create and update attachments.\",\n              \"delete:attachment:confluence\": \"Delete attachments.\",\n              \"read:comment:confluence\": \"View comments.\",\n              \"write:comment:confluence\": \"Create and update comments.\",\n              \"delete:comment:confluence\": \"Delete comments.\",\n              \"read:template:confluence\": \"View content templates.\",\n              \"write:template:confluence\": \"Create, update and delete content templates.\",\n              \"read:label:confluence\": \"View labels.\",\n              \"write:label:confluence\": \"Add and remove labels.\",\n              \"read:content.permission:confluence\": \"Check content permissions.\",\n              \"read:content.property:confluence\": \"View content properties.\",\n              \"write:content.property:confluence\": \"Create, update and delete content properties.\",\n              \"read:content.restriction:confluence\": \"View content restrictions.\",\n              \"write:content.restriction:confluence\": \"Update content restrictions.\",\n              \"read:content.metadata:confluence\": \"View content summaries.\",\n              \"read:watcher:confluence\": \"View content watchers.\",\n              \"write:watcher:confluence\": \"Add and remove content watchers.\",\n              \"read:group:confluence\": \"View groups.\",\n              \"write:group:confluence\": \"Create and delete groups.\",\n              \"read:inlinetask:confluence\": \"View tasks.\",\n              \"write:inlinetask:confluence\": \"Update tasks.\",\n              \"read:relation:confluence\": \"View entity relationships.\",\n              \"write:relation:confluence\": \"Create and update entity relationships.\",\n              \"read:space:confluence\": \"View spaces.\",\n              \"write:space:confluence\": \"Create and update spaces.\",\n              \"delete:space:confluence\": \"Delete spaces.\",\n              \"read:space.permission:confluence\": \"View space permissions.\",\n              \"write:space.permission:confluence\": \"Update space permissions.\",\n              \"read:space.property:confluence\": \"View space properties.\",\n              \"write:space.property:confluence\": \"Create, update and delete space properties.\",\n              \"read:space.setting:confluence\": \"View space settings.\",\n              \"write:space.setting:confluence\": \"Update space settings.\",\n              \"read:user:confluence\": \"View user details.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"x-atlassian-narrative\": {\n    \"documents\": [\n      {\n        \"title\": \"About\",\n        \"anchor\": \"about\",\n        \"body\": \"This is the reference for the Confluence Cloud REST API. This API is the primary way to get and\\nmodify data in Confluence Cloud, whether you are developing an app or any other integration.\\nUse it to interact with Confluence entities, like pages and blog posts, spaces, users, groups,\\nand more.\"\n      },\n      {\n        \"title\": \"Authentication and authorization\",\n        \"anchor\": \"auth\",\n        \"body\": \"**Authentication:** If you are building a Cloud app, authentication is implemented via JWT (see [Authentication for apps](https://developer.atlassian.com/cloud/confluence/authentication-for-apps/)). Otherwise, if you are authenticating directly against the REST API, the REST API supports basic auth (see [Basic auth for REST APIs](https://developer.atlassian.com/cloud/confluence/basic-auth-for-rest-apis/)).\\n\\n**Authorization:** If you are building a Cloud app, authorization can be implemented by [scopes](https://developer.atlassian.com/cloud/confluence/scopes/) or by [OAuth 2.0 user impersonation](https://developer.atlassian.com/cloud/confluence/oauth-2-jwt-bearer-tokens-for-apps). Otherwise, if you are making calls directly against the REST API, authorization is based on the user used in the authentication process.\\n\\nSee [Security overview](https://developer.atlassian.com/cloud/jira/platform/security-overview/) for more details on authentication and authorization.\"\n      },\n      {\n        \"title\": \"Status codes\",\n        \"anchor\": \"status-code\",\n        \"body\": \"The Confluence REST API uses the [standard HTTP status codes](https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html).\\n\\nResponses that return an error status code will also return a response body, similar to the following:\\n```json\\n{\\n  \\\"statusCode\\\": 404,\\n  \\\"data\\\": {\\n    \\\"authorized\\\": false,\\n    \\\"valid\\\": false,\\n    \\\"errors\\\": [\\n      {\\n        \\\"message\\\": {\\n          \\\"translation\\\": \\\"This is an example error message.\\\",\\n          \\\"args\\\": []\\n        }\\n      }\\n    ],\\n    \\\"successful\\\": false\\n  },\\n  \\\"message\\\": \\\"This is an example error message.\\\"\\n}\\n```\"\n      },\n      {\n        \"title\": \"Using the REST API\",\n        \"anchor\": \"using\",\n        \"body\": \"**Expansion:** The Confluence REST API uses resource expansion: some parts of a resource are not returned unless explicitly specified. This simplifies responses and minimizes network traffic.\\n\\nTo expand part of a resource in a request, use the `expand` query parameter and specify the entities to be expanded. If you need to expand nested entities, use the `.` dot notation. For example, the following request will expand information about the requested content's space and labels:\\n```\\nGET /wiki/rest/api/content/{id}?expand=space,metadata.labels\\n```\\n**Pagination:** The Confluence REST API uses pagination: a method that returns a response with multiple objects can only return a limited number at one time. This limits the size of responses and conserves server resources.\\n\\nUse the 'limit' and 'start' query parameters to specify pagination:\\n\\n- `limit` is the number of objects to return per page. This may be restricted by system limits.\\n- `start` is the index of the first item returned in the page of results. The base index is 0.\\n\\nFor example, the following request will return ten content objects, starting from the fifth object.\\n```\\nGET /wiki/rest/api/content?start=4\u0026limit=10\\n```\\n**Special headers:**\\n\\n- `X-Atlassian-Token: no-check` request header must be specified for methods\\nthat are protected from Cross Site Request Forgery (XSRF/CSRF) attacks. This is\\nstated in the method description, if required. For more information, see this\\n[KB article](https://confluence.atlassian.com/cloudkb/xsrf-check-failed-when-calling-cloud-apis-826874382.html).\"\n      },\n      {\n        \"title\": \"Capabilities\",\n        \"anchor\": \"capabilities\",\n        \"body\": \"**Webhooks:** A webhook is a user-defined callback over HTTP. You can use Confluence webhooks to notify your app or web application when certain events occur in Confluence. For example, when a page is created or updated. To learn more, see [Webhooks](https://developer.atlassian.com/cloud/confluence/modules/webhook/).\\n\\n**Content properties:** Content properties are a key-value storage associated with a piece of Confluence content. If you are building an app, this is one form of persistence that you can use. You can use the Confluence REST API to get, update, and delete content properties. To learn more, see [Content properties in the REST API](https://developer.atlassian.com/cloud/confluence/content-properties/).\\n\\n**CQL:** The Confluence Query Language (CQL) allows you to perform complex searches for content using an SQL-like syntax in the `search` resource. To learn more, see [Advanced searching using CQL](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/).\"\n      }\n    ]\n  }\n}"
		}
	},
	"Error": "parse: parse spec: paths: /wiki/rest/api/content/{id}/property/{key}: get: operation \"getContentProperty\": parameters: parse parameter \"status\": schema: parse enum values: parse value \"\\\"any\\\"\": expected type \"array\", got \"string\""
}