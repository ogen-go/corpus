{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/networknt/light-rest-4j"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "openapi-validator/src/test/resources/config/openapi.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore\n  license:\n    name: MIT\nservers:\n  - url: 'http://petstore.swagger.io/v1'\npaths:\n  /pets:\n    parameters:\n      - $ref: '#/components/parameters/accessId'\n      - $ref: '#/components/parameters/requestId'\n    get:\n      summary: List all pets\n      operationId: listPets\n      tags:\n        - pets\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: all\n          in: query\n          description: Retrieve all for defect 57\n          required: false\n          schema:\n            type: boolean\n        - name: arr\n          in: query\n          description: Test array as query params\n          required: false\n          schema:\n            type: array\n            items: integer\n        - name: id_form\n          in: query\n          required: false\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n        - name: id_sd\n          in: query\n          required: false\n          style: spaceDelimited\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n        - name: id_pd\n          in: query\n          required: false\n          style: pipeDelimited\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string              \n        - name: id_do\n          in: query\n          required: false\n          style: deepObject\n          explode: true\n          schema:\n            $ref: '#/components/schemas/Pet'  \n        - name: id_fo\n          in: query\n          required: false\n          style: form\n          explode: true\n          schema:\n            $ref: '#/components/schemas/Pet'   \n        - name: id_fno\n          in: query\n          required: false\n          style: form\n          explode: false\n          schema:\n            $ref: '#/components/schemas/Pet'                         \n      security:\n        - petstore_auth:\n            - 'read:pets'\n      responses:\n        '200':\n          description: An paged array of pets\n          headers:\n            x-next:\n              description: A link to the next page of responses\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Pet'\n              example:\n                - id: 1\n                  name: catten\n                  tag: cat\n                - id: 2\n                  name: doggy\n                  tag: dog\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      summary: Create a pet\n      operationId: createPets\n      requestBody:\n        description: Pet to add to the store\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Pet'\n      tags:\n        - pets\n      security:\n        - petstore_auth:\n            - 'read:pets'\n            - 'write:pets'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n\n  '/pets/{petId}':\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: string\n                         \n      security:\n        - petstore_auth:\n            - 'read:pets'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n              example:\n                id: 1\n                name: Jessica Right\n                tag: pet\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      summary: Delete a specific pet\n      operationId: deletePetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to delete\n          schema:\n            type: string\n        - name: key\n          in: header\n          required: true\n          description: The key header\n          schema:\n            type: string\n      security:\n        - petstore_auth:\n            - 'write:pets'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/pets_simple_array/{petId}':\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: array\n            items:\n              type: string  \n                         \n      security:\n        - petstore_auth:\n            - 'read:pets'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n              example:\n                id: 1\n                name: Jessica Right\n                tag: pet\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/pets_simple_obj_ep/{petId}':\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          explode: true\n          schema:\n            $ref: '#/components/schemas/Pet'\n                         \n      security:\n        - petstore_auth:\n            - 'read:pets'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n              example:\n                id: 1\n                name: Jessica Right\n                tag: pet\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/pets_simple_obj_no_ep/{petId}':\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            $ref: '#/components/schemas/Pet'\n                         \n      security:\n        - petstore_auth:\n            - 'read:pets'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n              example:\n                id: 1\n                name: Jessica Right\n                tag: pet\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/pets_label_array_ep/{petId}':\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          style: label\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string  \n                         \n      security:\n        - petstore_auth:\n            - 'read:pets'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n              example:\n                id: 1\n                name: Jessica Right\n                tag: pet\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'                \n  '/pets_label_array_no_ep/{petId}':\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          style: label\n          schema:\n            type: array\n            items:\n              type: string  \n                         \n      security:\n        - petstore_auth:\n            - 'read:pets'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n              example:\n                id: 1\n                name: Jessica Right\n                tag: pet\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'  \n  '/pets_label_obj_ep/{petId}':\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          style: label\n          explode: true\n          schema:\n            $ref: '#/components/schemas/Pet'\n                         \n      security:\n        - petstore_auth:\n            - 'read:pets'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n              example:\n                id: 1\n                name: Jessica Right\n                tag: pet\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'                \n  '/pets_label_obj_no_ep/{petId}':\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          style: label\n          schema:\n            $ref: '#/components/schemas/Pet'\n                         \n      security:\n        - petstore_auth:\n            - 'read:pets'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n              example:\n                id: 1\n                name: Jessica Right\n                tag: pet\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'                  \n  '/pets_matrix_pm/{petId}':\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          style: matrix\n          explode: true\n          schema:\n            type: string\n                         \n      security:\n        - petstore_auth:\n            - 'read:pets'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n              example:\n                id: 1\n                name: Jessica Right\n                tag: pet\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'  \n  '/pets_matrix_array_ep/{petId}':\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          style: matrix\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string  \n                         \n      security:\n        - petstore_auth:\n            - 'read:pets'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n              example:\n                id: 1\n                name: Jessica Right\n                tag: pet\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'                \n  '/pets_matrix_array_no_ep/{petId}':\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          style: matrix\n          schema:\n            type: array\n            items:\n              type: string  \n                         \n      security:\n        - petstore_auth:\n            - 'read:pets'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n              example:\n                id: 1\n                name: Jessica Right\n                tag: pet\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'  \n  '/pets_matrix_obj_ep/{petId}':\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          style: matrix\n          explode: true\n          schema:\n            $ref: '#/components/schemas/Pet'\n                         \n      security:\n        - petstore_auth:\n            - 'read:pets'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n              example:\n                id: 1\n                name: Jessica Right\n                tag: pet\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'                \n  '/pets_matrix_obj_no_ep/{petId}':\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          style: matrix\n          schema:\n            $ref: '#/components/schemas/Pet'\n                         \n      security:\n        - petstore_auth:\n            - 'read:pets'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n              example:\n                id: 1\n                name: Jessica Right\n                tag: pet\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'  \n  '/pets_header_array':\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: header\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: array\n            items:\n              type: string  \n                         \n      security:\n        - petstore_auth:\n            - 'read:pets'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n              example:\n                id: 1\n                name: Jessica Right\n                tag: pet\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/pets_header_obj_ep':\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: header\n          required: true\n          description: The id of the pet to retrieve\n          explode: true\n          schema:\n            $ref: '#/components/schemas/Pet'\n                         \n      security:\n        - petstore_auth:\n            - 'read:pets'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n              example:\n                id: 1\n                name: Jessica Right\n                tag: pet\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/pets_header_obj_no_ep':\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: header\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            $ref: '#/components/schemas/Pet'\n                         \n      security:\n        - petstore_auth:\n            - 'read:pets'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n              example:\n                id: 1\n                name: Jessica Right\n                tag: pet\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/pets_cookie_array':\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: cookie\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: array\n            items:\n              type: string  \n                         \n      security:\n        - petstore_auth:\n            - 'read:pets'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n              example:\n                id: 1\n                name: Jessica Right\n                tag: pet\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/pets_cookie_obj_no_ep':\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: cookie\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            $ref: '#/components/schemas/Pet'\n                         \n      security:\n        - petstore_auth:\n            - 'read:pets'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n              example:\n                id: 1\n                name: Jessica Right\n                tag: pet\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /todoItems:\n    get:\n      description: return all to-do items\n      operationId: getTodoItemList\n      responses:\n        '200':\n          description: all todo items response\n          headers:\n            todo_Header1:\n              required: true\n              schema:\n                type: string\n            todo_Header2:\n              schema:\n                type: integer\n            Accept-Encoding:\n              schema:\n                enum:\n                  - \"*\"\n            Content-Type:\n              schema:\n                enum:\n                  - application/json\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TodoItems'\n\ncomponents:\n  parameters:\n    accessId:\n      name: accessId\n      in: header\n      description: unique id that identifies a partner\n      required: true\n      schema:\n        type: string\n        maximum: 50\n    requestId:\n      name: requestId\n      in: header\n      description: partner generated unique id for each request used for message tracking purposes\n      required: true\n      schema:\n        type: string\n        minimum: 1\n        maximum: 64\n  securitySchemes:\n    petstore_auth:\n      type: oauth2\n      description: This API uses OAuth 2 with the client credential grant flow.\n      flows:\n        clientCredentials:\n          tokenUrl: 'https://localhost:6882/token'\n          scopes:\n            'write:pets': modify pets in your account\n            'read:pets': read your pets\n  schemas:\n    Pet:\n      type: object\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        tag:\n          type: string\n    Error:\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n    TodoItems:\n        type: array\n        items:\n          $ref: '#/components/schemas/TodoItem'\n    TodoItem:\n      type: object\n      required:\n        - id\n        - content\n      properties:\n        id:\n          type: string\n        content:\n          type: string\n        date:\n          type: string\n          format: date\n"
		}
	},
	"Error": "json: cannot unmarshal string into Go struct field Schema.paths.get.parameters.schema.items of type ogen.Schema"
}