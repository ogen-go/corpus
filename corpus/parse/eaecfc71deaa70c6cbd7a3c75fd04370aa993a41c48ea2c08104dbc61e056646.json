{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/sailpoint-oss/developer.sailpoint.com"
		},
		"file": {
			"name": "sailpoint-api.v3.yaml",
			"size": 0,
			"path": "static/api-specs/idn/sailpoint-api.v3.yaml",
			"byteSize": 48705,
			"content": "openapi: 3.0.1\ninfo:\n  title: IdentityNow V3 API\n  description:\n    \"Use these APIs to interact with the IdentityNow platform to achieve\n    repeatable, automated processes with greater scalability. We encourage you\n    to join the SailPoint Developer Community forum at\n    https://developer.sailpoint.com/discuss to connect with other developers\n    using our APIs.\"\n  termsOfService: https://developer.sailpoint.com/discuss/tos\n  contact:\n    name: Developer Relations\n    url: https://developer.sailpoint.com/discuss/api-help\n  license:\n    name: MIT\n    url: https://opensource.org/licenses/MIT\n  version: 3.0.0\nservers:\n  - url: https://{tenant}.api.identitynow.com/v3\n    description: This is the production API server.\n    variables:\n      tenant:\n        default: sailpoint\n        description:\n          This is the name of your tenant, typically your company's name.\n\ntags:\n  - name: Access Request Approvals\n    description: |\n      Use this API to implement and customize access request approval functionality. \n      With this functionality in place, administrators can delegate qualified users to review users' requests for access or managers' requests to revoke team members' access to applications, entitlements, or roles.      \n      This enables more qualified users to review access requests and the others to spend their time on other tasks.  \n\n      In IdentityNow, users can request access to applications, entitlements, and roles, and managers can request that team members' access be revoked.   \n      For applications and entitlements, administrators can set access profiles to require approval from the access profile owner, the application owner, the source owner, the requesting user's manager, or a governance group for access to be granted or revoked.   \n      For roles, administrators can also set roles to allow access requests and require approval from the role owner, the requesting user's manager, or a governance group for access to be granted or revoked.   \n      If the administrator designates a governance group as the required approver, any governance group member can approve the requests.\n         \n      When a user submits an access request, IdentityNow sends the first required approver in the queue an email notification, based on the access request configuration's approval and reminder escalation configuration.\n\n      In Approvals in IdentityNow, required approvers can view pending access requests under the Requested tab and approve or deny them, or the approvers can reassign the requests to different reviewers for approval.   \n      If the required approver approves the request and is the only reviewer required, IdentityNow grants or revokes access, based on the request.   \n      If multiple reviewers are required, IdentityNow sends the request to the next reviewer in the queue, based on the access request configuration's approval reminder and escalation configuration.   \n      The required approver can then view any completed access requests under the Reviewed tab.   \n\n      Refer to [Access Requests](https://documentation.sailpoint.com/saas/help/requests/index.html) for more information about access request approvals.\n  - name: Access Requests\n    description: |\n      Use this API to implement and customize access request functionality. \n      With this functionality in place, users can request access to applications, entitlements, or roles, and managers can request that team members' access be revoked.\n      This allows users to get access to the tools they need quickly and securely, and it allows managers to take away access to those tools. \n\n      IdentityNow's Access Request service allows end users to request access that requires approval before it can be granted to users and enables qualified users to review those requests and approve or deny them.\n\n      In the Request Center in IdentityNow, users can view available applications, roles, and entitlements and request access to them. \n      If the requested tools requires approval, the requests appear as 'Pending' under the My Requests tab until the required approver approves, rejects, or cancels them. \n\n      Users can use My Requests to track and/or cancel the requests.\n\n      In My Team on the IdentityNow Home, managers can submit requests to revoke their team members' access. \n      They can use the My Requests tab under Request Center to track and/or cancel the requests.\n\n      Refer to [Requesting Access](https://documentation.sailpoint.com/saas/user-help/requests/requesting_access.html) for more information about access requests.\n  - name: Accounts\n    description: |\n      Use this API to implement and customize account functionality.\n      With this functionality in place, administrators can manage users' access across sources in IdentityNow. \n\n      In IdentityNow, an account refers to a user's account on a supported source.\n      This typically includes a unique identifier for the user, a unique password, a set of permissions associated with the source and a set of attributes. IdentityNow loads accounts through the creation of sources in IdentityNow.\n\n      Administrators can correlate users' identities with the users' accounts on the different sources they use. \n      This allows IdentityNow to govern the access of identities and all their correlated accounts securely and cohesively. \n\n      To view the accounts on a source and their correlated identities, administrators can use the Connections drop-down menu, select Sources, select the relevant source, and select its Account tab. \n\n      To view and edit source account statuses for an identity in IdentityNow, administrators can use the Identities drop-down menu, select Identity List, select the relevant identity, and select its Accounts tab. \n      Administrators can toggle an account's Actions to aggregate the account, enable/disable it, unlock it, or remove it from the identity. \n\n      Accounts can have the following statuses: \n\n      - Enabled: The account is enabled. The user can access it.\n\n      - Disabled: The account is disabled, and the user cannot access it, but the identity is not disabled in IdentityNow. This can occur when an administrator disables the account or when the user's lifecycle state changes. \n\n      - Locked: The account is locked. This may occur when someone has entered an incorrect password for the account too many times.\n\n      - Pending: The account is currently updating. This status typically lasts seconds. \n\n      Administrators can select the source account to view its attributes, entitlements, and the last time the account's password was changed.\n\n      Refer to [Managing User Accounts](https://documentation.sailpoint.com/saas/help/common/users/user_access.html#managing-user-accounts) for more information about accounts.\n  - name: Account Activities\n    description: |\n      Use this API to implement account activity tracking functionality.\n      With this functionality in place, users can track source account activity in IdentityNow, which greatly improves traceability in the system. \n\n      An account activity refers to a log of each action performed on a source account. This is useful for auditing the changes performed on an account throughout its life. \n      In IdentityNow's Search, users can search for account activities and select the activity's row to get an overview of the activity's account action and view its progress, its involved sources, and its most basic metadata, such as the identity requesting the option and the recipient. \n\n      Account activity includes most actions IdentityNow completes on source accounts. Users can search in IdentityNow for the following account action types: \n\n      - Access Request: These include any access requests the source account is involved in. \n\n      - Account Attribute Updates: These include updates to a single attribute on an account on a source. \n\n      - Account State Update: These include locking or unlocking actions on an account on a source. \n\n      - Certification: These include actions removing an entitlement from an account on a source as a result of the entitlement's revocation during a certification.\n\n      - Cloud Automated `Lifecyclestate`: These include automated lifecycle state changes that result in a source account's correlated identity being assigned to a different lifecycle state. \n      IdentityNow replaces the `Lifecyclestate` variable with the name of the lifecycle state it has moved the account's identity to. \n\n      - Identity Attribute Update: These include updates to a source account's correlated identity attributes as the result of a provisioning action. \n      When you update an identity attribute that also updates an identity's lifecycle state, the cloud automated `Lifecyclestate` event also displays.\n      Account Activity does not include attribute updates that occur as a result of aggregation.\n\n      - Identity Refresh: These include correlated identity refreshes that occur for an account on a source whenever the account's correlated identity profile gets a new role or updates. \n      These also include refreshes that occur whenever IdentityNow assigns an application to the account's correlated identity based on the application's being assigned to All Users From Source or Specific Users From Source. \n\n      - Lifecycle State Refresh: These include the actions that took place when a lifecycle state changed. This event only occurs after a cloud automated `Lifecyclestate` change or a lifecycle state change. \n\n      - Lifecycle State Change: These include the account activities that result from an identity's manual assignment to a null lifecycle state.\n\n      - Password Change: These include password changes on sources.\n\n      Refer to [Account Activity](https://documentation.sailpoint.com/saas/help/search/index.html#account-activity) for more information about account activities.\n  - name: Certifications\n    description: |\n      Use this API to implement certification functionality. \n      With this functionality in place, administrators and designated certification reviewers can review users' access certifications and decide whether to approve access, revoke it, or reassign the review to another reviewer. \n      Implementing certifications improves organizations' data security by reducing inappropriate access through a distributed review process and helping them satisfy audit and regulatory requirements. \n\n      A certification refers to IdentityNow's mechanism for reviewing a user's access to entitlements (sets of permissions) and approving or removing that access. \n      These serve as a way of showing that a user's access has been reviewed and approved. \n      Multiple certifications by different reviewers are often required to approve a user's access. \n      A set of multiple certifications is called a certification campaign.\n\n      For example, an organization may use a Manager Certification as a way of showing that a user's access has been reviewed and approved by their manager, or if the certification is part of a campaign, that the user's access has been reviewed and approved by multiple managers. \n      Once this certification has been completed, IdentityNow  would provision all the access the user needs, nothing more. \n\n      Organization administrators or certification administrators can designate other IdentityNow users as certification reviewers. \n      Those reviewers can select the 'Certifications' tab to view any of the certifications they either need to review or have already reviewed under the 'Active' and 'Completed' tabs, respectively. \n\n      When a certification campaign is in progress, certification reviewers will see certifications listed under 'Active,' where they can review the involved identities. \n      Under the 'Decision' column on the right, next to each access item, reviewers can select the checkmark to approve access, select the 'X' to revoke access, or they can toggle the 'More Options' menu to reassign the certification to another reviewer and provide a reason for reassignment in the form of a comment. \n\n      Once a reviewer has made decisions on all the certification's involved access items, he or she must select 'Sign Off' to complete the review process.\n      Doing so converts the certification into read-only status, preventing any further changes to the review decisions and deleting the work item (task) from the reviewer's list of work items. \n\n      Once all the reviewers have signed off, the certification campaign either completes or, if any reviewers decided to revoke access for any of the involved identities, it moves into a remediation phase. In the remediation phase, identities' entitlements are altered to remove any entitlements marked for revocation.\n      In this situation, the certification campaign completes once all the remediation requests are completed. \n\n      Refer to [Certifications](https://documentation.sailpoint.com/saas/user-help/certifications.html) for more information about certifications.\n  - name: Certification Summaries\n    description: |\n      Use this API to implement certification summary functionality. \n      With this functionality in place, administrators and designated certification reviewers can review summaries of identity certification campaigns and draw conclusions about the campaigns' scope, security, and effectiveness. \n      Implementing certification summary functionality improves organizations' ability to review their [certifications](https://documentation.sailpoint.com/saas/user-help/certifications.html) and helps them satisfy audit and regulatory requirements by enabling them to trace access changes and the decisions made in their review processes. \n\n      A certification refers to IdentityNow's mechanism for reviewing a user's access to entitlements (sets of permissions) and approving or removing that access. \n      These certifications serve as a way of showing that a user's access has been reviewed and approved. \n      Multiple certifications by different reviewers are often required to approve a user's access. \n      A set of multiple certifications is called a certification campaign. \n\n      For example, an organization may use a Manager Certification as a way of showing that a user's access has been reviewed and approved by their manager, or if the certification is part of a campaign, that the user's access has been reviewed and approved by multiple managers. \n      Once this certification has been completed, IdentityNow  would provision all the access the user needs, nothing more. \n\n      Certification summaries provide information about identity certification campaigns such as the identities involved, the number of decisions made, and the access changed. \n      For example, an administrator or designated certification reviewer can examine the Manager Certification campaign to get an overview of how many entitlement decisions are made in that campaign as opposed to role decisions, which identities would be affected by changes to the campaign, and how those identities' access would be affected.  \n  - name: Lifecycle States\n    description: |\n      Use this API to implement and customize lifecycle state functionality.\n      With this functionality in place, administrators can create and configure custom lifecycle states for use across their organizations, which is key to controlling which users have access, when they have access, and the access they have.\n\n      A lifecycle state describes a user's status in a company. For example, two lifecycle states come by default with IdentityNow: 'Active' and 'Inactive.' \n      When an active employee takes an extended leave of absence from a company, his or her lifecycle state may change to 'Inactive,' for security purposes. \n      The inactive employee would lose access to all the applications, sources, and sensitive data during the leave of absence, but when the employee returns and becomes active again, all that access would be restored. \n      This saves administrators the time that would otherwise be spent provisioning the employee's access to each individual tool, reviewing the employee's certification history, etc. \n\n      Administrators can create a variety of custom lifecycle states. Refer to [Planning New Lifecycle States](https://documentation.sailpoint.com/saas/help/provisioning/lifecycle.html#planning-new-lifecycle-states) for some custom lifecycle state ideas.\n\n      Administrators must define the criteria for being in each lifecycle state, and they must define how IdentityNow manages users' access to apps and sources for each lifecycle state.\n\n      In IdentityNow, administrators can manage lifecycle states by going to Admin \u003e Identities \u003e Identity Profile, selecting the identity profile whose lifecycle states they want to manage, selecting the 'Provisioning' tab, and using the left panel to either select the lifecycle state they want to modify or create a new lifecycle state. \n\n      In the 'Provisioning' tab, administrators can make the following access changes to an identity profile's lifecycle state: \n\n      - Enable/disable the lifecycle state for the identity profile.\n\n      - Enable/disable source accounts for the identity profile's lifecycle state.\n\n      - Add existing access profiles to grant to the identity profiles in that lifecycle state.\n\n      - Create a new access profile to grant to the identity profile in that lifecycle state.\n\n      Access profiles granted in a previous lifecycle state are automatically revoked when the identity moves to a new lifecycle state. \n      To maintain access across multiple lifecycle states, administrators must grant the access profiles in each lifecycle state. \n      For example, if an administrator wants users with the 'HR Employee' identity profile to maintain their building access in both the 'Active' and 'Leave of Absence' lifecycle states, the administrator must grant the access profile for that building access to both lifecycle states.\n\n      During scheduled refreshes, IdentityNow evaluates lifFecycle states to determine whether their assigned identities have the access defined in the lifecycle states' access profiles. \n      If the identities are missing access, IdentityNow provisions that access. \n\n      Administrators can also use the 'Provisioning' tab to configure email notifications for IdentityNow to send whenever an identity with that identity profile has a lifecycle state change. \n      Refer to [Configuring Lifecycle State Notifications](https://documentation.sailpoint.com/saas/help/provisioning/lifecycle.html#configuring-lifecycle-state-notifications) for more information on how to do so.\n\n      An identity's lifecycle state can have four different statuses: the lifecycle state's status can be 'Active,' it can be 'Not Set,' it can be 'Not Valid,' or it 'Does Not Match Technical Name Case.' \n      Refer to [Moving Identities into Lifecycle States](https://documentation.sailpoint.com/saas/help/provisioning/lifecycle.html#moving-identities-into-lifecycle-states) for more information about these different lifecycle state statuses. \n\n      Refer to [Setting Up Lifecycle States](https://documentation.sailpoint.com/saas/help/provisioning/lifecycle.html) for more information about lifecycle states.\n  - name: Identity Profiles\n    description: |\n      Use this API to implement identity profile functionality. \n      With this functionality in place, administrators can view identity profiles and their configurations. \n\n      Identity profiles represent the configurations that can be applied to identities as a way of granting them a set of security and access, as well as defining the mappings between their identity attributes and their source attributes.  \n\n      In IdentityNow, administrators can use the Identities drop-down menu and select Identity Profiles to view the list of identity profiles. \n      This list shows some details about each identity profile, along with its status. \n      They can select an identity profile to view its settings, its mappings between identity attributes and correlating source account attributes, and its provisioning settings. \n\n      Refer to [Creating Identity Profiles](https://documentation.sailpoint.com/saas/help/setup/identity_profiles.html) for more information about identity profiles.\n  - name: Non-Employee Lifecycle Management\n    description: |\n      Use this API to implement non-employee lifecycle management functionality. \n      With this functionality in place, administrators can create non-employee records and configure them for use in their organizations. \n      This allows organizations to provide secure access to non-employees and control that access. \n\n      The 'non-employee' term refers to any consultant, contractor, intern, or other user in an organization who is not a full-time permanent employee. \n      Organizations can track non-employees' access and activity in IdentityNow by creating and maintaining non-employee sources. \n      Organizations can have a maximum of 50 non-employee sources. \n\n      By using SailPoint's Non-Employee Lifecycle Management functionality, you agree to the following:\n\n      - SailPoint is not responsible for storing sensitive data. \n      You may only add account attributes to non-employee identities that are necessary for business operations and are consistent with your contractual limitations on data that may be sent or stored in IdentityNow.\n\n      - You are responsible for regularly downloading your list of non-employee accounts for all the sources you create and storing this list of accounts in a managed location to maintain an authoritative system of record and backup data for these accounts.\n\n      To manage non-employees in IdentityNow, administrators must create a non-employee source and add accounts to the source. \n\n      To create a non-employee source in IdentityNow, administrators must use the Admin panel to go to Connections \u003e Sources.\n      They must then specify 'Non-Employee' in the 'Source Type' field. \n      Refer to [Creating a Non-Employee Source](https://documentation.sailpoint.com/saas/help/common/non-employee-mgmt.html#creating-a-non-employee-source) for more details about how to create non-employee sources.\n\n      To add accounts to a non-employee source in IdentityNow, administrators can select the non-employee source and add the accounts. \n      They can also use the 'Manage Non-Employees' widget on their user dashboards to reach the list of sources and then select the non-employee source they want to add the accounts to. \n\n      Administrators can either add accounts individually or in bulk. Each non-employee source can have a maximum of 20,000 accounts. \n      To add accounts in bulk, they must select the 'Bulk Upload' option and upload a CSV file. \n      Refer to [Adding Accounts](https://documentation.sailpoint.com/saas/help/common/non-employee-mgmt.html#adding-accounts) for more details about how to add accounts to non-employee sources.\n\n      Once administrators have created the non-employee source and added accounts to it, they can create identity profiles to generate identities for the non-employee accounts and manage the non-employee identities the same way they would any other identities. \n\n      Refer to [Managing Non-Employee Sources and Accounts](https://documentation.sailpoint.com/saas/help/common/non-employee-mgmt.html) for more information about non-employee lifecycle management.\n  - name: OAuth Clients\n    description: |\n      Use this API to implement OAuth client functionality.   \n      With this functionality in place, users with the appropriate security scopes can create and configure OAuth clients to use as a way to obtain authorization to use the IdentityNow REST API.\n      Refer to [Authentication](https://developer.sailpoint.com/idn/api/authentication) for more information about OAuth and how it works with the IdentityNow REST API. \n  - name: Password Management\n    description: |\n      Use this API to implement password management functionality.  \n      With this functionality in place, users can manage their identity passwords for all their applications.\n\n      In IdentityNow, users can select their names in the upper right corner of the page and use the drop-down menu to select Password Manager. \n      Password Manager lists the user's identity's applications, possibly grouped to share passwords. \n      Users can then select 'Change Password' to update their passwords. \n\n      Grouping passwords allows users to update their passwords more broadly, rather than requiring them to update each password individually. \n      Password Manager may list the applications and sources in the following groups:\n\n      - Password Group: This refers to a group of applications that share a password. \n      For example, a user can use the same password for Google Drive, Google Mail, and YouTube. \n      Updating the password for the password group updates the password for all its included applications.\n\n      - Multi-Application Source: This refers to a source with multiple applications that share a password. \n      For example, a user can have a source, G Suite, that includes the Google Calendar, Google Drive, and Google Mail applications. \n      Updating the password for the multi-application source updates the password for all its included applications. \n\n      - Applications: These are applications that do not share passwords with other applications.\n\n      An organization may require some authentication for users to update their passwords. \n      Users may be required to answer security questions or use a third-party authenticator before they can confirm their updates. \n\n      Refer to [Managing Passwords](https://documentation.sailpoint.com/saas/user-help/accounts/passwords.html) for more information about password management.\n  - name: Personal Access Tokens\n    description: |\n      Use this API to implement personal access token (PAT) functionality. \n      With this functionality in place, users can use PATs as an alternative to passwords for authentication in IdentityNow. \n\n      PATs embed user information into the client ID and secret. \n      This replaces the API clients' need to store and provide a username and password to establish a connection, improving IdentityNow organizations' integration security. \n\n      In IdentityNow, users can do the following to create and manage their PATs: Select the dropdown menu under their names, select Preferences, and then select Personal Access Tokens. \n      They must then provide a description about the token's purpose. \n      They can then select 'Create Token' at the bottom of the page to generate and view the Secret and Client ID. \n\n      Refer to [Managing Personal Access Tokens](https://documentation.sailpoint.com/saas/help/common/generate_tokens.html) for more information about PATs.\n  - name: Public Identities\n    description: |\n      Use this API in conjunction with [Public Identites Config](https://developer.sailpoint.com/idn/api/v3/public-identities-config) to enable non-administrators to view identities' publicly visible attributes. \n      With this functionality in place, non-administrators can view identity attributes other than the default attributes (email, lifecycle state, and manager), depending on which identity attributes their organization administrators have made public. \n      This can be helpful for access approvers, certification reviewers, managers viewing their direct reports' access, and source owners viewing their tasks.\n  - name: Public Identities Config\n    description: |\n      Use this API to implement public identity configuration functionality. \n      With this functionality in place, administrators can make up to 5 identity attributes publicly visible so other non-administrator users can see the relevant information they need to make decisions. \n      This can be helpful for approvers making approvals, certification reviewers, managers viewing their direct reports' access, and source owners viewing their tasks.\n\n      By default, non-administrators can select an identity and view the following attributes: email, lifecycle state, and manager. \n      However, it may be helpful for a non-administrator reviewer to see other identity attributes like department, region, title, etc.\n      Administrators can use this API to make those necessary identity attributes public to non-administrators. \n\n      For example, a non-administrator deciding whether to approve another identity's request for access to the Workday application, whose access may be restricted to members of the HR department, would want to know whether the identity is a member of the HR department. \n      If an administrator has used [Update Public Identity Config](https://developer.sailpoint.com/idn/api/v3/update-public-identity-config) to make the \"department\" attribute public, the approver can see the department and make a decision without requesting any more information.\n  - name: Requestable Objects\n    description: |\n      Use this API to implement requestable object functionality. \n      With this functionality in place, administrators can determine which access items can be requested with the [Access Request APIs](https://developer.sailpoint.com/idn/api/v3/access-requests), along with their statuses. \n      This can be helpful for administrators who are implementing and customizing access request functionality as a way of checking which items are requestable as they are created, assigned, and made available.\n  - name: Saved Search\n  - name: Scheduled Search\n  - name: Search\n  - name: Service Desk Integration\n    description: |\n      Use this API to build an integration between IdentityNow and a service desk ITSM (IT service management) solution. \n      Once an administrator builds this integration between IdentityNow and a service desk, users can use IdentityNow to raise and track tickets that are synchronized between IdentityNow and the service desk. \n      \n      In IdentityNow, administrators can create a service desk integration (sometimes also called an SDIM, or Service Desk Integration Module) by going to Admin \u003e Connections \u003e Service Desk and selecting 'Create.'\n\n      To create a Generic Service Desk integration, for example, administrators must provide the required information on the General Settings page, the Connectivity and Authentication information, Ticket Creation information, Status Mapping information, and Requester Source information on the Configure page. \n      Refer to [Integrating SailPoint with Generic Service Desk](https://documentation.sailpoint.com/connectors/generic_sd/help/integrating_generic_service_desk/intro.html) for more information about the process of setting up a Generic Service Desk in IdentityNow.\n\n      Administrators can create various service desk integrations, all with their own nuances. \n      The following service desk integrations are available: \n\n      - [Atlassian Cloud Jira Service Management](https://documentation.sailpoint.com/connectors/atlassian/jira_cloud/help/integrating_jira_cloud/introduction.html)\n\n      - [Atlassian Server Jira Service Management](https://documentation.sailpoint.com/connectors/atlassian/jira_server/help/integrating_jira_server/introduction.html)\n\n      - [BMC Helix ITSM Service Desk](https://documentation.sailpoint.com/connectors/bmc/helix_ITSM_sd/help/integrating_bmc_helix_itsm_sd/intro.html)\n\n      - [BMC Helix Remedyforce Service Desk](https://documentation.sailpoint.com/connectors/bmc/helix_remedyforce_sd/help/integrating_bmc_helix_remedyforce_sd/intro.html)\n\n      - [Generic Service Desk](https://documentation.sailpoint.com/connectors/generic_sd/help/integrating_generic_service_desk/intro.html)\n\n      - [ServiceNow Service Desk](https://documentation.sailpoint.com/connectors/servicenow/sdim/help/integrating_servicenow_sdim/intro.html)\n\n      - [Zendesk Service Desk](https://documentation.sailpoint.com/connectors/zendesk/help/integrating_zendesk_sd/introduction.html)  \n  - name: Sources\n  - name: Transforms\n    description: |\n      The purpose of this API is to expose functionality for the manipulation of Transform objects.\n      Transforms are a form of configurable objects which define an easy way to manipulate attribute data without having\n      to write code. These endpoints don't require API calls to other resources, audit service is used for keeping track\n      of which users have made changes to the Transforms.\n\n      Refer to [Transforms](https://developer.sailpoint.com/idn/docs/transforms) for more information about transforms.\n  - name: Work Items\n    description: |\n      Use this API to implement work item functionality. \n      With this functionality in place, users can manage their work items (tasks). \n\n      Work items refer to the tasks users see in IdentityNow's Task Manager. \n      They can see the pending work items they need to complete, as well as the work items they have already completed. \n      Task Manager lists the work items along with the involved sources, identities, accounts, and the timestamp when the work item was created. \n      For example, a user may see a pending 'Create an Account' work item for the identity Fred.Astaire in GitHub for Fred's GitHub account, fred-astaire-sp. \n      Once the user completes the work item, the work item will be listed with his or her other completed work items. \n\n      To complete work items, users can use their dashboards and select the 'My Tasks' widget. \n      The widget will list any work items they need to complete, and they can select the work item from the list to review its details. \n      When they complete the work item, they can select 'Mark Complete' to add it to their list of completed work items. \n\n      Refer to [Task Manager](https://documentation.sailpoint.com/saas/user-help/task_manager.html) for more information about work items, including the different types of work items users may need to complete.\npaths:\n  /access-requests:\n    $ref: \"./v3/paths/access-requests.yaml\"\n  /access-requests/cancel:\n    $ref: \"./v3/paths/access-request-cancel.yaml\"\n  /access-request-config:\n    $ref: \"./v3/paths/access-request-config.yaml\"\n  /access-request-status:\n    $ref: \"./v3/paths/access-request-status.yaml\"\n  /access-request-approvals/pending:\n    $ref: \"./v3/paths/pending-access-request-approvals.yaml\"\n  /access-request-approvals/completed:\n    $ref: \"./v3/paths/completed-access-request-approvals.yaml\"\n  /access-request-approvals/{approvalId}/approve:\n    $ref: \"./v3/paths/approve-access-request-approval.yaml\"\n  /access-request-approvals/{approvalId}/reject:\n    $ref: \"./v3/paths/reject-access-request-approval.yaml\"\n  /access-request-approvals/{approvalId}/forward:\n    $ref: \"./v3/paths/forward-access-request-approval.yaml\"\n  /access-request-approvals/approval-summary:\n    $ref: \"./v3/paths/access-request-approval-summary.yaml\"\n  /accounts:\n    $ref: \"./v3/paths/accounts.yaml\"\n  /accounts/{id}:\n    $ref: \"./v3/paths/account.yaml\"\n  /accounts/{id}/entitlements:\n    $ref: \"./v3/paths/accounts-id-entitlements.yaml\"\n  /accounts/{id}/reload:\n    $ref: \"./v3/paths/accounts-id-reload.yaml\"\n  /accounts/{id}/enable:\n    $ref: \"./v3/paths/accounts-id-enable.yaml\"\n  /accounts/{id}/disable:\n    $ref: \"./v3/paths/accounts-id-disable.yaml\"\n  /accounts/{id}/unlock:\n    $ref: \"./v3/paths/accounts-id-unlock.yaml\"\n  /account-activities:\n    $ref: \"./v3/paths/account-activity-list.yaml\"\n  /account-activities/{id}:\n    $ref: \"./v3/paths/account-activity-get-one.yaml\"\n  /certifications:\n    $ref: \"./v3/paths/identity-certifications.yaml\"\n  /certifications/{id}:\n    $ref: \"./v3/paths/identity-certification.yaml\"\n  /certifications/{id}/access-review-items:\n    $ref: \"./v3/paths/identity-certifications-access-review-items.yaml\"\n  /certifications/{id}/decide:\n    $ref: \"./v3/paths/identity-certifications-decide.yaml\"\n  /certifications/{id}/reassign:\n    $ref: \"./v3/paths/identity-certifications-reassign.yaml\"\n  /certifications/{id}/sign-off:\n    $ref: \"./v3/paths/identity-certifications-sign-off.yaml\"\n  /certifications/{id}/decision-summary:\n    $ref: \"./v3/paths/identity-certifications-decision-summary.yaml\"\n  /certifications/{id}/identity-summaries:\n    $ref: \"./v3/paths/identity-certifications-identity-summaries.yaml\"\n  /certifications/{id}/access-summaries/{type}:\n    $ref: \"./v3/paths/identity-certifications-access-summaries.yaml\"\n  /certifications/{id}/identity-summary/{identitySummaryId}:\n    $ref: \"./v3/paths/identity-certifications-identity-summary.yaml\"\n  /identities/{identity-id}/set-lifecycle-state:\n    $ref: \"./v3/paths/identity-set-lifecycle-state.yaml\"\n  /identity-profiles/{identity-profile-id}/lifecycle-states:\n    $ref: \"./v3/paths/identity-profile-lifecycle-states.yaml\"\n  /identity-profiles/{identity-profile-id}/lifecycle-states/{lifecycle-state-id}:\n    $ref: \"./v3/paths/identity-profile-lifecycle-state.yaml\"\n  /identity-profiles:\n    $ref: \"./v3/paths/identity-profiles.yaml\"\n  /identity-profiles/export:\n    $ref: \"./v3/paths/identity-profiles-export.yaml\"\n  /identity-profiles/import:\n    $ref: \"./v3/paths/identity-profiles-import.yaml\"\n  /identity-profiles/{identity-profile-id}:\n    $ref: \"./v3/paths/identity-profile.yaml\"\n  /identity-profiles/{identity-profile-id}/default-identity-attribute-config:\n    $ref: \"./v3/paths/identity-profile-default-config.yaml\"\n  /non-employee-records:\n    $ref: \"./v3/paths/non-employee-records.yaml\"\n  /non-employee-records/{id}:\n    $ref: \"./v3/paths/non-employee-record.yaml\"\n  /non-employee-records/bulk-delete:\n    $ref: \"./v3/paths/non-employee-records-bulk-delete.yaml\"\n  /non-employee-requests:\n    $ref: \"./v3/paths/non-employee-requests.yaml\"\n  /non-employee-requests/{id}:\n    $ref: \"./v3/paths/non-employee-request.yaml\"\n  /non-employee-requests/summary/{requested-for}:\n    $ref: \"./v3/paths/non-employee-request-summary-get.yaml\"\n  /non-employee-sources:\n    $ref: \"./v3/paths/non-employee-sources.yaml\"\n  /non-employee-sources/{sourceId}:\n    $ref: \"./v3/paths/non-employee-source.yaml\"\n  /non-employee-sources/{id}/non-employees/download:\n    $ref: \"./v3/paths/non-employee-sources-export-non-employees.yaml\"\n  /non-employee-sources/{id}/non-employee-bulk-upload:\n    $ref: \"./v3/paths/non-employee-sources-bulk-upload-non-employees.yaml\"\n  /non-employee-sources/{id}/non-employee-bulk-upload/status:\n    $ref: \"./v3/paths/non-employee-sources-bulk-upload-status.yaml\"\n  /non-employee-sources/{id}/schema-attributes-template/download:\n    $ref: \"./v3/paths/non-employee-sources-export-schema-attributes-template.yaml\"\n  /non-employee-approvals:\n    $ref: \"./v3/paths/non-employee-approval-list.yaml\"\n  /non-employee-approvals/{id}:\n    $ref: \"./v3/paths/non-employee-approve-get.yaml\"\n  /non-employee-approvals/{id}/approve:\n    $ref: \"./v3/paths/non-employee-approve-request.yaml\"\n  /non-employee-approvals/{id}/reject:\n    $ref: \"./v3/paths/non-employee-reject-request.yaml\"\n  /non-employee-approvals/summary/{requested-for}:\n    $ref: \"./v3/paths/non-employee-approval-summary.yaml\"\n  /non-employee-sources/{sourceId}/schema-attributes:\n    $ref: \"./v3/paths/non-employee-sources-schema-attributes.yaml\"\n  /non-employee-sources/{sourceId}/schema-attributes/{attributeId}:\n    $ref: \"./v3/paths/non-employee-sources-schema-attribute.yaml\"\n  /oauth-clients:\n    $ref: \"./v3/paths/oauth-clients.yaml\"\n  /oauth-clients/{id}:\n    $ref: \"./v3/paths/oauth-client.yaml\"\n  /personal-access-tokens:\n    $ref: \"./v3/paths/personal-access-tokens.yaml\"\n  /personal-access-tokens/{id}:\n    $ref: \"./v3/paths/personal-access-token.yaml\"\n  /public-identities:\n    $ref: \"./v3/paths/public-identities.yaml\"\n  /public-identities-config:\n    $ref: \"./v3/paths/public-identities-config.yaml\"\n  /requestable-objects:\n    $ref: \"./v3/paths/requestable-object-list.yaml\"\n  /saved-searches:\n    $ref: \"./v3/paths/saved-searches.yaml\"\n  /saved-searches/{id}:\n    $ref: \"./v3/paths/saved-searches-id.yaml\"\n  /saved-searches/{id}/execute:\n    $ref: \"./v3/paths/saved-searches-execute.yaml\"\n  /scheduled-searches:\n    $ref: \"./v3/paths/scheduled-searches.yaml\"\n  /scheduled-searches/{id}:\n    $ref: \"./v3/paths/scheduled-searches-id.yaml\"\n  /scheduled-searches/{id}/unsubscribe:\n    $ref: \"./v3/paths/scheduled-searches-unsubscribe.yaml\"\n  /search:\n    $ref: \"./v3/paths/search-post.yaml\"\n  /search/count:\n    $ref: \"./v3/paths/search-count.yaml\"\n  /search/aggregate:\n    $ref: \"./v3/paths/search-aggregate.yaml\"\n  /search/{index}/{id}:\n    $ref: \"./v3/paths/search-get.yaml\"\n  /service-desk-integrations:\n    $ref: \"./v3/paths/service-desk-integrations.yaml\"\n  /service-desk-integrations/{id}:\n    $ref: \"./v3/paths/service-desk-integration.yaml\"\n  /service-desk-integrations/types:\n    $ref: \"./v3/paths/service-desk-integration-types.yaml\"\n  /service-desk-integrations/templates/{scriptName}:\n    $ref: \"./v3/paths/service-desk-integration-template.yaml\"\n  /service-desk-integrations/status-check-configuration:\n    $ref: \"./v3/paths/service-desk-integration-configuration.yaml\"\n  /query-password-info:\n    $ref: \"./v3/paths/query-password-info.yaml\"\n  /set-password:\n    $ref: \"./v3/paths/set-password.yaml\"\n  /password-change-status/{id}:\n    $ref: \"./v3/paths/password-change-status.yaml\"\n  /sources:\n    $ref: \"./v3/paths/sources.yaml\"\n  /sources/{id}:\n    $ref: \"./v3/paths/source.yaml\"\n  /sources/{sourceId}/provisioning-policies:\n    $ref: \"./v3/paths/provisioning-policies.yaml\"\n  /sources/{sourceId}/provisioning-policies/{usageType}:\n    $ref: \"./v3/paths/provisioning-policy.yaml\"\n  /sources/{sourceId}/provisioning-policies/bulk-update:\n    $ref: \"./v3/paths/provisioning-policies-bulk-update.yaml\"\n  /sources/{sourceId}/schemas:\n    $ref: \"./v3/paths/schemas.yaml\"\n  /sources/{sourceId}/schemas/{schemaId}:\n    $ref: \"./v3/paths/schema.yaml\"\n  /sources/{sourceId}/source-health:\n    $ref: \"./v3/paths/source-health.yaml\"\n  /sources/{id}/schemas/accounts:\n    $ref: \"./v3/paths/source-accounts-schema.yaml\"\n  /sources/{id}/schemas/entitlements:\n    $ref: \"./v3/paths/source-entitlements-schema.yaml\"\n  /sources/{sourceId}/upload-connector-file:\n    $ref: \"./v3/paths/source-upload-connector-file.yaml\"\n  /transforms:\n    $ref: \"./v3/paths/transforms.yaml\"\n  /transforms/{id}:\n    $ref: \"./v3/paths/transform.yaml\"\n  /work-items:\n    $ref: \"./v3/paths/work-items.yaml\"\n  /work-items/completed:\n    $ref: \"./v3/paths/work-items-completed.yaml\"\n  /work-items/count:\n    $ref: \"./v3/paths/work-items-count.yaml\"\n  /work-items/completed/count:\n    $ref: \"./v3/paths/work-items-completed-count.yaml\"\n  /work-items/summary:\n    $ref: \"./v3/paths/work-items-summary.yaml\"\n  /work-items/{id}:\n    $ref: \"./v3/paths/work-item.yaml\"\n  /work-items/{id}/approve/{approvalItemId}:\n    $ref: \"./v3/paths/work-items-approve-approval-item.yaml\"\n  /work-items/{id}/reject/{approvalItemId}:\n    $ref: \"./v3/paths/work-items-reject-approval-item.yaml\"\n  /work-items/bulk-approve/{id}:\n    $ref: \"./v3/paths/work-items-bulk-approve-approval-item.yaml\"\n  /work-items/bulk-reject/{id}:\n    $ref: \"./v3/paths/work-items-bulk-reject-approval-item.yaml\"\n  /work-items/{id}/submit-account-selection:\n    $ref: \"./v3/paths/work-items-account-selection.yaml\"\n\nsecurity:\n  - oauth2: []\n\ncomponents:\n  securitySchemes:\n    oauth2:\n      type: oauth2\n      description: |\n        OAuth2 Bearer token (JWT). See [IdentityNow REST API Authentication](https://developer.sailpoint.com/idn/api/authentication) for more information.\n        - Directions for generating a [personal access token](https://developer.sailpoint.com/idn/api/authentication#personal-access-tokens)\n        - Directions using [client credentials flow](https://developer.sailpoint.com/idn/api/authentication#client-credentials-grant-flow)\n        - Directions for using [authorization code flow](https://developer.sailpoint.com/idn/api/authentication#authorization-code-grant-flow)\n\n        Which authentication method should I choose?  See our [guide](https://developer.sailpoint.com/idn/api/authentication#which-oauth-20-grant-flow-should-i-use)\n\n        Learn more about how to find your `tokenUrl` and `authorizationUrl` [in our docs](https://developer.sailpoint.com/idn/api/authentication#find-your-tenants-oauth-details)\n      flows:\n        clientCredentials:\n          tokenUrl: https://tenant.api.identitynow.com/oauth/token\n          scopes:\n            \"sp:scopes:default\": \"default scope\"\n            \"sp:scopes:all\": \"access to all scopes\"\n        authorizationCode:\n          authorizationUrl: https://tenant.identitynow.com/oauth/authorize\n          tokenUrl: https://tenant.api.identitynow.com/oauth/token\n          scopes:\n            \"sp:scopes:default\": \"default scope\"\n            \"sp:scopes:all\": \"access to all scopes\"\n\n  # TODO: add the Entitlement, AccessProfile and Role models\n  # and the other new models?\n  schemas:\n    AccessRequest:\n      $ref: \"./v3/schemas/AccessRequest.yaml\"\n    AccessRequestItem:\n      $ref: \"./v3/schemas/AccessRequestItem.yaml\"\n    AccessProfileDocument:\n      $ref: \"./v3/schemas/search/model/access/profile/AccessProfile.yaml\"\n    AccessProfileSummary:\n      $ref: \"./v3/schemas/search/model/access/AccessProfile.yaml\"\n    AccessReviewReassignment:\n      $ref: \"./v3/schemas/ReviewReassign.yaml\"\n    Account:\n      $ref: \"./v3/schemas/Account.yaml\"\n    AccountActivity:\n      $ref: \"./v3/schemas/AccountActivity.yaml\"\n    AccountActivitySearchedItem:\n      $ref: \"./v3/schemas/search/model/account/activity/AccountActivity.yaml\"\n    AccountAttributes:\n      $ref: \"./v3/schemas/AccountAttributes.yaml\"\n    AccountDocument:\n      $ref: \"./v3/schemas/search/model/account/Account.yaml\"\n    AccountsAsyncResult:\n      $ref: \"./v3/schemas/AccountsAsyncResult.yaml\"\n    AccountToggleRequest:\n      $ref: \"./v3/schemas/AccountToggleRequest.yaml\"\n    AccountUnlockRequest:\n      $ref: \"./v3/schemas/AccountUnlockRequest.yaml\"\n    Aggregation:\n      $ref: \"./v3/schemas/search/model/aggregation/Aggregation.yaml\"\n    ApprovalItems:\n      $ref: \"./v3/schemas/ApprovalItemDetails.yaml\"\n    Campaign:\n      $ref: \"./v3/schemas/CampaignReference.yaml\"\n    Certification:\n      $ref: \"./v3/schemas/IdentityCertificationDto.yaml\"\n    CertificationReference:\n      $ref: \"./v3/schemas/CertificationReference.yaml\"\n    EntitlementDocument:\n      $ref: \"./v3/schemas/search/model/entitlement/Entitlement.yaml\"\n    EntitlementSummary:\n      $ref: \"./v3/schemas/search/model/access/Entitlement.yaml\"\n    Event:\n      $ref: \"./v3/schemas/search/model/event/Event.yaml\"\n    IdentityDocument:\n      $ref: \"./v3/schemas/search/model/identity/Identity.yaml\"\n    IdentityProfile:\n      $ref: \"./v3/schemas/IdentityProfile.yaml\"\n    IdentityReferenceWithNameAndEmail:\n      $ref: \"./v3/schemas/IdentityReferenceWithNameAndEmail.yaml\"\n    ProvisioningConfig:\n      $ref: \"./v3/schemas/ProvisioningConfig.yaml\"\n    ProvisioningPolicy:\n      $ref: \"./v3/schemas/ProvisioningPolicyDto.yaml\"\n    QueuedCheckConfigDetails:\n      $ref: \"./v3/schemas/QueuedCheckConfigDetails.yaml\"\n    Reassignment:\n      $ref: \"./v3/schemas/Reassignment.yaml\"\n    ReassignmentReference:\n      $ref: \"./v3/schemas/ReassignReference.yaml\"\n    RemediationItems:\n      $ref: \"./v3/schemas/RemediationItemDetails.yaml\"\n    RequestableObject:\n      $ref: \"./v3/schemas/RequestableObject.yaml\"\n    RequestableObjectType:\n      $ref: \"./v3/schemas/RequestableObjectType.yaml\"\n    RequestableObjectRequestStatus:\n      $ref: \"./v3/schemas/RequestableObjectRequestStatus.yaml\"\n    Reviewer:\n      $ref: \"./v3/schemas/Reviewer.yaml\"\n    RoleDocument:\n      $ref: \"./v3/schemas/search/model/role/Role.yaml\"\n    RoleSummary:\n      $ref: \"./v3/schemas/search/model/access/Role.yaml\"\n    SearchDocument:\n      $ref: \"./v3/schemas/search/documents/SearchDocument.yaml\"\n    SavedSearch:\n      $ref: \"./v3/schemas/search/saved/SavedSearch.yaml\"\n    Schedule:\n      $ref: \"./v3/schemas/schedule/Schedule.yaml\"\n    ScheduledSearch:\n      $ref: \"./v3/schemas/search/scheduled/ScheduledSearch.yaml\"\n    ServiceDeskIntegrationDto:\n      $ref: \"./v3/schemas/ServiceDeskIntegrationDto.yaml\"\n    ServiceDeskIntegrationTemplateDto:\n      $ref: \"./v3/schemas/ServiceDeskIntegrationTemplateDto.yaml\"\n    ServiceDeskIntegrationTemplateType:\n      $ref: \"./v3/schemas/ServiceDeskIntegrationTemplateType.yaml\"\n    Source:\n      $ref: \"./v3/schemas/Source.yaml\"\n    SourceHealthDto:\n      $ref: \"./v3/schemas/SourceHealthDto.yaml\"\n    Transform:\n      $ref: \"./v3/schemas/Transform.yaml\"\n    WorkItems:\n      $ref: \"./v3/schemas/WorkItems.yaml\"\n    WorkItemsCount:\n      $ref: \"./v3/schemas/WorkItemsCount.yaml\"\n    WorkItemsSummary:\n      $ref: \"./v3/schemas/WorkItemsSummary.yaml\"\n",
			"canonicalURL": "/github.com/sailpoint-oss/developer.sailpoint.com@cd63498af255957541a3d47c113d00d8ed641df8/-/blob/static/api-specs/idn/sailpoint-api.v3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/sailpoint-oss/developer.sailpoint.com/blob/cd63498af255957541a3d47c113d00d8ed641df8/static/api-specs/idn/sailpoint-api.v3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"ProvisioningPolicy\": resolve \"#/components/schemas/ProvisioningPolicy\": $ref: resolve \"./v3/schemas/ProvisioningPolicyDto.yaml\": property \"fields\": items: $ref: resolve \"./FieldDetailsDto.yaml\": property \"transform\": at https://raw.githubusercontent.com/sailpoint-oss/developer.sailpoint.com/cd63498af255957541a3d47c113d00d8ed641df8/static/api-specs/idn/v3/schemas/FieldDetailsDto.yaml:11:14: parse default: unexpected type: \"object\""
}