{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/vonage.numberinsight/openapi.yml",
			"byteSize": 49616,
			"content": "---\nopenapi: 3.0.0\nservers:\n  - url: \"https://api.nexmo.com/ni\"\ninfo:\n  x-ballerina-display:\n    label: Vonage Number Insight\n    iconPath: \"icon.png\"\n  title: Number Insight API\n  version: 1.0.10\n  description: \u003e\n    This is a generated connector for [Vonage Number Insight API v1.0.10](https://nexmo-api-specification.herokuapp.com/number-insight) OpenAPI specification. \n\n    The Number Insight API delivers real-time intelligence about the validity, reachability and roaming status of a phone number and tells you how to format the number correctly in your application. \n    \n    There are three levels of Number Insight API available: [Basic, Standard and Advanced](https://developer.nexmo.com/number-insight/overview#basic-standard-and-advanced-apis). The advanced API is available asynchronously as well as synchronously.\n\n    More Number Insight API documentation is at https://developer.nexmo.com/number-insight/overview#number-insight-api-overview.\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials. \n  \n    Create a [Vonage account](https://www.vonage.com/) and obtain tokens by following [this guide](https://developer.nexmo.com/concepts/guides/authentication).\n  contact:\n    name: Vonage DevRel\n    email: devrel@vonage.com\n    url: \"https://developer.nexmo.com/\"\n  termsOfService: \"https://www.nexmo.com/terms-of-use\"\n  license:\n    name: \"The MIT License (MIT)\"\n    url: \"https://opensource.org/licenses/MIT\"\nexternalDocs:\n  url: https://developer.nexmo.com/api/number-insight\n  x-sha1: 081f6d985e2e4a75586da1654fde880a96885405\nsecurity:\n  - apiKey: []\n    apiSecret: []\npaths:\n  \"/basic/{format}\":\n    parameters:\n      - $ref: \"#/components/parameters/format\"\n    get:\n      operationId: getNumberInsightBasic\n      summary: Basic Number Insight\n      description: |\n        Provides [basic number insight](/number-insight/overview#basic-standard-and-advanced-apis) information about a number.\n\n        Note that this endpoint also supports `POST` requests.\n      parameters:\n        - $ref: \"#/components/parameters/number\"\n        - $ref: \"#/components/parameters/country\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/niResponseJsonBasic\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/niResponseXmlBasic\"\n  \"/standard/{format}\":\n    parameters:\n      - $ref: \"#/components/parameters/format\"\n    get:\n      operationId: getNumberInsightStandard\n      summary: Standard Number Insight\n      description: |\n        Provides [standard number insight](/number-insight/overview#basic-standard-and-advanced-apis) information about a number.\n\n        Note that this endpoint also supports `POST` requests.\n      parameters:\n        - $ref: \"#/components/parameters/number\"\n        - $ref: \"#/components/parameters/country\"\n        - $ref: \"#/components/parameters/cnam\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/niResponseJsonStandard\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/niResponseXmlStandard\"\n  \"/advanced/async/{format}\":\n    parameters:\n      - $ref: \"#/components/parameters/format\"\n    get:\n      operationId: getNumberInsightAsync\n      summary: Advanced Number Insight (async)\n      description: |\n        Provides [advanced number insight](/number-insight/overview#basic-standard-and-advanced-apis) number information **asynchronously** using the URL specified in the `callback` parameter.  recommends asynchronous use of the Number Insight Advanced API, to avoid timeouts.\n\n        Note that this endpoint also supports `POST` requests.\n      parameters:\n        - $ref: \"#/components/parameters/callback\"\n        - $ref: \"#/components/parameters/number\"\n        - $ref: \"#/components/parameters/country\"\n        - $ref: \"#/components/parameters/cnam\"\n        - $ref: \"#/components/parameters/ip\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/niResponseAsync\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/niResponseAsync\"\n      callbacks:\n        onData:\n          \"{$request.query.callback}\":\n            post:\n              operationId: asyncCallback\n              summary: Asynchronous response\n              description: Contains the response to your Number Insight Advanced API request.\n              requestBody:\n                content:\n                  application/json:\n                    schema:\n                      $ref: \"#/components/schemas/niResponseJsonAdvanced\"\n                  text/xml:\n                    schema:\n                      $ref: \"#/components/schemas/niResponseXmlAdvanced\"\n              responses:\n                \"200\":\n                  description: OK\n  \"/advanced/{format}\":\n    parameters:\n      - $ref: \"#/components/parameters/format\"\n    get:\n      operationId: getNumberInsightAdvanced\n      summary: Advanced Number Insight (sync)\n      description: |\n        Provides [advanced number insight](/number-insight/overview#basic-standard-and-advanced-apis) information about a number synchronously, in the same way that the basic and standard endpoints do.\n\n        Vonage recommends accessing the Advanced API **asynchronously** using the `/advanced/async` endpoint, to avoid timeouts.\n\n        Note that this endpoint also supports `POST` requests.\n      parameters:\n        - $ref: \"#/components/parameters/number\"\n        - $ref: \"#/components/parameters/country\"\n        - $ref: \"#/components/parameters/cnam\"\n        - $ref: \"#/components/parameters/ip\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/niResponseJsonAdvanced\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/niResponseXmlAdvanced\"\ncomponents:\n  parameters:\n    format:\n      name: format\n      in: path\n      required: true\n      description: \"The format of the response\"\n      example: json\n      schema:\n        type: string\n        enum:\n          - \"json\"\n          - \"xml\"\n    number:\n      name: number\n      in: query\n      description: \"A single phone number that you need insight about in national or international format.\"\n      example: \"447700900000\"\n      required: true\n      schema:\n        type: string\n        pattern: '^[0-9-+\\(\\)\\s]*$'\n    country:\n      name: country\n      in: query\n      example: \"GB\"\n      description: \"If a number does not have a country code or is uncertain, set the two-character country code. This code must be in ISO 3166-1 alpha-2 format and in upper case. For example, GB or US. If you set country and number is already in [E.164](https://en.wikipedia.org/wiki/E.164) format, country must match the country code in number.\"\n      schema:\n        type: string\n        pattern: \"[A-Z]{2}\"\n    cnam:\n      name: cnam\n      in: query\n      example: true\n      description: \"Indicates if the name of the person who owns the phone number should be looked up and returned in the response. Set to true to receive phone number owner name in the response. This features is available for US numbers only and incurs an additional charge.\"\n      schema:\n        type: boolean\n        default: false\n    ip:\n      name: ip\n      in: query\n      example: \"123.0.0.255\"\n      description: \"This parameter is deprecated as we are no longer able to retrieve reliable IP data globally from carriers. \"\n      x-ballerina-deprecated-reason: \"This parameter is deprecated as we are no longer able to retrieve reliable IP data globally from carriers. \"\n      schema:\n        type: string\n      deprecated: true\n    callback:\n      name: callback\n      in: query\n      example: \"https://example.com/callback\"\n      description: \"The callback URL\"\n      required: true\n      schema:\n        type: string\n        format: uriref\n\n  schemas:\n    niResponseAsync:\n      type: object\n      xml:\n        name: lookup\n      properties:\n        request_id:\n          type: string\n          description: \"The unique identifier for your request. This is a alphanumeric string up to 40 characters.\"\n          example: \"aaaaaaaa-bbbb-cccc-dddd-0123456789ab\"\n          maxLength: 40\n          xml:\n            name: requestId\n        number:\n          type: string\n          description: \"The `number` in your request\"\n          example: \"447700900000\"\n        remaining_balance:\n          type: string\n          description: \"Your account balance in EUR after this request.\"\n          example: \"1.23456789\"\n          xml:\n            name: remainingBalance\n        request_price:\n          type: string\n          description: \"If there is an internal lookup error, the `refund_price` will reflect the lookup price. If `cnam` is requested for a non-US number the `refund_price` will reflect the `cnam` price. If both of these conditions occur, `refund_price` is the sum of the lookup price and `cnam` price.\"\n          example: \"0.01500000\"\n          xml:\n            name: requestPrice\n        status:\n          $ref: \"#/components/schemas/niStandardAdvancedStatus\"\n        error_text:\n          type: string\n          description: \"The status description of your request. Note: This field is equivalent to `status_message` field in the other endpoints\"\n          example: \"Success\"\n\n    niResponseXmlBasic:\n      type: object\n      description: Basic\n      xml:\n        name: format\n      properties:\n        request_id:\n          type: string\n          description: \"The unique identifier for your request. This is a alphanumeric string up to 40 characters.\"\n          example: \"aaaaaaaa-bbbb-cccc-dddd-0123456789ab\"\n          maxLength: 40\n          xml:\n            name: request_id\n        international_format_number:\n          type: string\n          description: \"The `number` in your request in international format.\"\n          example: \"447700900000\"\n        local_number:\n          type: object\n          description: \"An object containing the `number` in your request in the format used by the country the number belongs to.\"\n          properties:\n            country_code:\n              type: string\n              description: \"Two character country code for `number`. This is in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.\"\n              example: \"GB\"\n              pattern: \"[A-Z]{2}\"\n              xml:\n                attribute: true\n            country_code_iso3:\n              type: string\n              description: \"Three character country code for `number`. This is in [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) format.\"\n              example: \"GBR\"\n              pattern: \"[A-Z]{3}\"\n              xml:\n                attribute: true\n            country_name:\n              type: string\n              description: \"The full name of the country that `number` is registered in.\"\n              example: \"United Kingdom\"\n              xml:\n                attribute: true\n            country_prefix:\n              type: string\n              description: \"The numeric prefix for the country that `number` is registered in.\"\n              example: \"44\"\n              xml:\n                attribute: true\n            number:\n              type: string\n              description: \"The `number` in your request in the format used by the country the number belongs to.\"\n              example: \"07700 900000\"\n              xml:\n                x-text: true # see https://github.com/OAI/OpenAPI-Specification/issues/630\n        error:\n          type: object\n          description: \"The error code and status of your request\"\n          properties:\n            code:\n              type: string\n              description: \"The status code\"\n              example: 0\n              xml:\n                attribute: true\n            status_text:\n              type: string\n              description: \"The status description of your request.\"\n              example: Success\n              xml:\n                x-text: true # see https://github.com/OAI/OpenAPI-Specification/issues/630\n\n    niResponseXmlStandard:\n      type: object\n      description: \"Standard\"\n      xml:\n        name: lookup\n      properties:\n        request_id:\n          type: string\n          description: \"The unique identifier for your request. This is a alphanumeric string up to 40 characters.\"\n          example: \"aaaaaaaa-bbbb-cccc-dddd-0123456789ab\"\n          maxLength: 40\n          xml:\n            name: request_id\n        international_format_number:\n          type: string\n          description: \"The `number` in your request in international format.\"\n          example: \"447700900000\"\n        local_number:\n          type: object\n          description: \"An object containing the `number` in your request in the format used by the country the number belongs to.\"\n          properties:\n            country_code:\n              type: string\n              description: \"Two character country code for `number`. This is in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.\"\n              example: \"GB\"\n              pattern: \"[A-Z]{2}\"\n              xml:\n                attribute: true\n            country_code_iso3:\n              type: string\n              description: \"Three character country code for `number`. This is in [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) format.\"\n              example: \"GBR\"\n              pattern: \"[A-Z]{3}\"\n              xml:\n                attribute: true\n            country_name:\n              type: string\n              description: \"The full name of the country that `number` is registered in.\"\n              example: \"United Kingdom\"\n              xml:\n                attribute: true\n            country_prefix:\n              type: string\n              description: \"The numeric prefix for the country that `number` is registered in.\"\n              example: \"44\"\n              xml:\n                attribute: true\n            number:\n              type: string\n              description: \"The `number` in your request in the format used by the country the number belongs to.\"\n              example: \"07700 900000\"\n              xml:\n                x-text: true # see https://github.com/OAI/OpenAPI-Specification/issues/630\n        error:\n          type: object\n          description: \"The error code and status of your request\"\n          properties:\n            code:\n              type: string\n              description: \"The status code\"\n              example: 0\n              xml:\n                attribute: true\n            status_text:\n              type: string\n              description: \"The status description of your request.\"\n              example: Success\n              xml:\n                x-text: true # see https://github.com/OAI/OpenAPI-Specification/issues/630\n        request_price:\n          type: string\n          description: \"If there is an internal lookup error, the `refund_price` will reflect the lookup price. If `cnam` is requested for a non-US number the `refund_price` will reflect the `cnam` price. If both of these conditions occur, `refund_price` is the sum of the lookup price and `cnam` price.\"\n          example: \"0.01500000\"\n        remaining_balance:\n          type: string\n          description: \"Your account balance in EUR after this request.\"\n          example: \"1.23456789\"\n        current_carrier:\n          $ref: \"#/components/schemas/niCurrentCarrierProperties\"\n        original_carrier:\n          $ref: \"#/components/schemas/niInitialCarrierProperties\"\n        ported:\n          description: \"If the user has changed carrier for number. The assumed status means that the information supplier has replied to the request but has not said explicitly that the number is ported\"\n          properties:\n            ported_message:\n              type: string\n              description: \"If the user has changed carrier for `number`. The assumed status means that the information supplier has replied to the request but has not said explicitly that the number is ported.\"\n              enum:\n                - unknown\n                - ported\n                - not_ported\n                - assumed_not_ported\n                - assumed_ported\n              example: \"not_ported\"\n              xml:\n                x-text: true\n        roaming:\n          type: object\n          description: \"Information about the roaming status for number. This is applicable to mobile numbers only.\"\n          x-nexmo-developer-collection-description-shown: true\n          properties:\n            status:\n              type: string\n              description: Roaming status for number \n              enum:\n                - unknown\n              example: unknown\n              xml:\n                attribute: true\n        caller_identity:\n          type: object\n          x-nexmo-developer-collection-description-shown: true\n          description: \"Contains details of the number owner, if `cnam` was set to `true` in the request.\"\n          properties:\n            callerType:\n              type: string\n              description: \"The value will be `business` if the owner of a phone number is a business. If the owner is an individual the value will be `consumer`. The value will be `unknown` if this information is not available. This parameter is only present if `cnam` had a value of `true` within the request.\"\n              enum:\n                - business\n                - consumer\n                - unknown\n              example: \"consumer\"\n              xml:\n                attribute: true\n            callerName:\n              type: string\n              description: \"Full name of the person or business who owns the phone number. `unknown` if this information is not available. This parameter is only present if `cnam` had a value of `true` within the request.\"\n              example: \"John Smith\"\n              xml:\n                attribute: true\n            firstName:\n              type: string\n              description: \"First name of the person who owns the phone number if the owner is an individual. This parameter is only present if `cnam` had a value of `true` within the request.\"\n              example: \"John\"\n              xml:\n                attribute: true\n            lastName:\n              type: string\n              description: \"Last name of the person who owns the phone number if the owner is an individual. This parameter is only present if `cnam` had a value of `true` within the request.\"\n              example: \"Smith\"\n              xml:\n                attribute: true\n            caller_name:\n              type: string\n              description: \"Full name of the person or business who owns the phone number. `unknown` if this information is not available. This parameter is only present if `cnam` had a value of `true` within the request.\"\n              example: \"John Smith\"\n            last_name:\n              type: string\n              description: \"Last name of the person who owns the phone number if the owner is an individual. This parameter is only present if `cnam` had a value of `true` within the request.\"\n              example: \"Smith\"\n            first_name:\n              # Key is not a typo. Do not change.\n              type: string\n              description: \"First name of the person who owns the phone number if the owner is an individual. This parameter is only present if `cnam` had a value of `true` within the request.\"\n              example: \"John\"\n            caller_type:\n              type: string\n              description: \"The value will be `business` if the owner of a phone number is a business. If the owner is an individual the value will be `consumer`. The value will be `unknown` if this information is not available. This parameter is only present if `cnam` had a value of `true` within the request.\"\n              enum:\n                - business\n                - consumer\n                - unknown\n              example: \"consumer\"\n\n    niResponseXmlAdvanced:\n      type: object\n      description: \"Advanced\"\n      xml:\n        name: lookup\n      properties:\n        request_id:\n          type: string\n          description: \"The unique identifier for your request. This is a alphanumeric string up to 40 characters.\"\n          example: \"aaaaaaaa-bbbb-cccc-dddd-0123456789ab\"\n          maxLength: 40\n          xml:\n            name: request_id\n        international_format_number:\n          type: string\n          description: \"The `number` in your request in international format.\"\n          example: \"447700900000\"\n        local_number:\n          type: object\n          x-nexmo-developer-collection-description-shown: true\n          description: \"An object containing the `number` in your request in the format used by the country the number belongs to.\"\n          properties:\n            country_code:\n              type: string\n              description: \"Two character country code for `number`. This is in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.\"\n              example: \"GB\"\n              pattern: \"[A-Z]{2}\"\n              xml:\n                attribute: true\n            country_code_iso3:\n              type: string\n              description: \"Three character country code for `number`. This is in [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) format.\"\n              example: \"GBR\"\n              pattern: \"[A-Z]{3}\"\n              xml:\n                attribute: true\n            country_name:\n              type: string\n              description: \"The full name of the country that `number` is registered in.\"\n              example: \"United Kingdom\"\n              xml:\n                attribute: true\n            country_prefix:\n              type: string\n              description: \"The numeric prefix for the country that `number` is registered in.\"\n              example: \"44\"\n              xml:\n                attribute: true\n            number:\n              type: string\n              description: \"The `number` in your request in the format used by the country the number belongs to.\"\n              example: \"07700 900000\"\n              xml:\n                x-text: true # see https://github.com/OAI/OpenAPI-Specification/issues/630\n        error:\n          type: object\n          x-nexmo-developer-collection-description-shown: true\n          description: \"The error code and status of your request\"\n          properties:\n            code:\n              type: string\n              description: \"The status code\"\n              example: 0\n              xml:\n                attribute: true\n            status_text:\n              type: string\n              description: \"The status description of your request.\"\n              example: Success\n              xml:\n                x-text: true # see https://github.com/OAI/OpenAPI-Specification/issues/630\n        request_price:\n          type: string\n          description: \"If there is an internal lookup error, the `refund_price` will reflect the lookup price. If `cnam` is requested for a non-US number the `refund_price` will reflect the `cnam` price. If both of these conditions occur, `refund_price` is the sum of the lookup price and `cnam` price.\"\n          example: \"0.01500000\"\n        remaining_balance:\n          type: string\n          description: \"Your account balance in EUR after this request.\"\n          example: \"1.23456789\"\n        current_carrier:\n          $ref: \"#/components/schemas/niCurrentCarrierProperties\"\n        original_carrier:\n          $ref: \"#/components/schemas/niInitialCarrierProperties\"\n        ported:\n          description: \"If the user has changed carrier for `number`. The assumed status means that the information supplier has replied to the request but has not said explicitly that the number is ported.\"\n          properties:\n            ported_message:\n              type: string\n              description: \"If the user has changed carrier for `number`. The assumed status means that the information supplier has replied to the request but has not said explicitly that the number is ported.\"\n              enum:\n                - unknown\n                - ported\n                - not_ported\n                - assumed_not_ported\n                - assumed_ported\n              example: \"not_ported\"\n              xml:\n                x-text: true\n        caller_identity:\n          description: \"Contains details of the number owner, if `cnam` was set to `true` in the request.\"\n          properties:\n            callerType:\n              type: string\n              description: \"The value will be `business` if the owner of a phone number is a business. If the owner is an individual the value will be `consumer`. The value will be `unknown` if this information is not available. This parameter is only present if `cnam` had a value of `true` within the request.\"\n              enum:\n                - business\n                - consumer\n                - unknown\n              example: \"consumer\"\n              xml:\n                attribute: true\n            callerName:\n              type: string\n              description: \"Full name of the person or business who owns the phone number. `unknown` if this information is not available. This parameter is only present if `cnam` had a value of `true` within the request.\"\n              example: \"John Smith\"\n              xml:\n                attribute: true\n            firstName:\n              type: string\n              description: \"First name of the person who owns the phone number if the owner is an individual. This parameter is only present if `cnam` had a value of `true` within the request.\"\n              example: \"John\"\n              xml:\n                attribute: true\n            lastName:\n              type: string\n              description: \"Last name of the person who owns the phone number if the owner is an individual. This parameter is only present if `cnam` had a value of `true` within the request.\"\n              example: \"Smith\"\n              xml:\n                attribute: true\n        caller_name:\n          type: string\n          description: \"Full name of the person or business who owns the phone number. `unknown` if this information is not available. This parameter is only present if `cnam` had a value of `true` within the request.\"\n          example: \"John Smith\"\n        last_name:\n          type: string\n          description: \"Last name of the person who owns the phone number if the owner is an individual. This parameter is only present if `cnam` had a value of `true` within the request.\"\n          example: \"Smith\"\n        firs_name:\n          # Key is not a typo. Do not change.\n          type: string\n          description: \"First name of the person who owns the phone number if the owner is an individual. This parameter is only present if `cnam` had a value of `true` within the request.\"\n          example: \"John\"\n        caller_type:\n          type: string\n          description: \"The value will be `business` if the owner of a phone number is a business. If the owner is an individual the value will be `consumer`. The value will be `unknown` if this information is not available. This parameter is only present if `cnam` had a value of `true` within the request.\"\n          enum:\n            - business\n            - consumer\n            - unknown\n          example: \"consumer\"\n        lookup_outcome:\n          type: object\n          x-nexmo-developer-collection-description-shown: true\n          description: \"An object indicating whether all information about a phone number has been returned.\"\n          properties:\n            code:\n              description: |\n                Shows if all information about a phone number has been returned. Possible values:\n\n                Code | Text\n                -- | --\n                0 | Success\n                1 | Partial success - some fields populated\n                2 | Failed\n              enum:\n                - 0\n                - 1\n                - 2\n              example: \"0\"\n              xml:\n                attribute: true\n            lookup_outcome_message:\n              type: string\n              description: \"Shows if all information about a phone number has been returned.\"\n              example: \"Success\"\n              xml:\n                x-text: true # see https://github.com/OAI/OpenAPI-Specification/issues/630\n        reachable:\n          type: string\n          description: \"Can you call `number` now. This is applicable to mobile numbers only.\"\n          enum:\n            - unknown\n            - reachable\n            - undeliverable\n            - absent\n            - bad_number\n            - blacklisted\n          example: \"reachable\"\n        roaming:\n          $ref: \"#/components/schemas/niRoaming\"\n        valid_number:\n          type: string\n          description: \"Does `number` exist. `unknown` means the number could not be validated. `valid` means the number is valid. `not_valid` means the number is not valid. `inferred_not_valid` means that the number could not be determined as valid or invalid via an external system and the best guess is that the number is invalid. This is applicable to mobile numbers only.\"\n          enum:\n            - unknown\n            - valid\n            - not_valid\n            - inferred_not_valid\n          example: \"valid\"\n        ip_warnings:\n          type: string\n          description: \"This property is deprecated and can safely be ignored.\"\n          example: \"unknown\"\n\n    niResponseJsonBasic:\n      type: object\n      properties:\n        status:\n          $ref: \"#/components/schemas/niBasicStatus\"\n        status_message:\n          type: string\n          description: \"The status description of your request.\"\n          example: \"Success\"\n        request_id:\n          type: string\n          description: \"The unique identifier for your request. This is a alphanumeric string up to 40 characters.\"\n          example: \"aaaaaaaa-bbbb-cccc-dddd-0123456789ab\"\n          maxLength: 40\n        international_format_number:\n          type: string\n          description: \"The `number` in your request in international format.\"\n          example: \"447700900000\"\n        national_format_number:\n          type: string\n          description: \"The `number` in your request in the format used by the country the number belongs to.\"\n          example: \"07700 900000\"\n        country_code:\n          type: string\n          description: \"Two character country code for `number`. This is in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.\"\n          example: \"GB\"\n          pattern: \"[A-Z]{2}\"\n        country_code_iso3:\n          type: string\n          description: \"Three character country code for `number`. This is in [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) format.\"\n          example: \"GBR\"\n          pattern: \"[A-Z]{3}\"\n        country_name:\n          type: string\n          description: \"The full name of the country that `number` is registered in.\"\n          example: \"United Kingdom\"\n        country_prefix:\n          type: string\n          description: \"The numeric prefix for the country that `number` is registered in.\"\n          example: \"44\"\n\n    niResponseJsonStandard:\n      allOf:\n        - $ref: \"#/components/schemas/niResponseJsonBasic\"\n        - type: object\n          properties:\n            request_price:\n              type: string\n              description: \"The amount in EUR charged to your account.\"\n              example: \"0.04000000\"\n            refund_price:\n              type: string\n              description: \"If there is an internal lookup error, the `refund_price` will reflect the lookup price. If `cnam` is requested for a non-US number the `refund_price` will reflect the `cnam` price. If both of these conditions occur, `refund_price` is the sum of the lookup price and `cnam` price.\"\n              example: \"0.01500000\"\n            remaining_balance:\n              type: string\n              description: \"Your account balance in EUR after this request.\"\n              example: \"1.23456789\"\n            current_carrier:\n              $ref: \"#/components/schemas/niCurrentCarrierProperties\"\n            original_carrier:\n              $ref: \"#/components/schemas/niInitialCarrierProperties\"\n            ported:\n              type: string\n              description: \"If the user has changed carrier for `number`. The assumed status means that the information supplier has replied to the request but has not said explicitly that the number is ported.\"\n              enum:\n                - unknown\n                - ported\n                - not_ported\n                - assumed_not_ported\n                - assumed_ported\n              example: \"not_ported\"\n            roaming:\n              oneOf:\n              - $ref: \"#/components/schemas/niRoaming\"\n              - type: string\n            caller_identity:\n              $ref: \"#/components/schemas/niCallerIdentity\"\n            caller_name:\n              type: string\n              description: \"Full name of the person or business who owns the phone number. `unknown` if this information is not available. This parameter is only present if `cnam` had a value of `true` within the request.\"\n              example: \"John Smith\"\n            last_name:\n              type: string\n              description: \"Last name of the person who owns the phone number if the owner is an individual. This parameter is only present if `cnam` had a value of `true` within the request.\"\n              example: \"Smith\"\n            first_name:\n              type: string\n              description: \"First name of the person who owns the phone number if the owner is an individual. This parameter is only present if `cnam` had a value of `true` within the request.\"\n              example: \"John\"\n            caller_type:\n              type: string\n              description: \"The value will be `business` if the owner of a phone number is a business. If the owner is an individual the value will be `consumer`. The value will be `unknown` if this information is not available. This parameter is only present if `cnam` had a value of `true` within the request.\"\n              enum:\n                - business\n                - consumer\n                - unknown\n              example: \"consumer\"\n\n    niResponseJsonAdvanced:\n      type: object\n      description: Advanced\n      properties:\n        status:\n          $ref: \"#/components/schemas/niStandardAdvancedStatus\"\n        status_message:\n          type: string\n          description: \"The status description of your request.\"\n          example: \"Success\"\n        request_id:\n          type: string\n          description: \"The unique identifier for your request. This is a alphanumeric string up to 40 characters.\"\n          example: \"aaaaaaaa-bbbb-cccc-dddd-0123456789ab\"\n          maxLength: 40\n        international_format_number:\n          type: string\n          description: \"The `number` in your request in international format.\"\n          example: \"447700900000\"\n        national_format_number:\n          type: string\n          description: \"The `number` in your request in the format used by the country the number belongs to.\"\n          example: \"07700 900000\"\n        country_code:\n          type: string\n          description: \"Two character country code for `number`. This is in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.\"\n          example: \"GB\"\n          pattern: \"[A-Z]{2}\"\n        country_code_iso3:\n          type: string\n          description: \"Three character country code for `number`. This is in [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) format.\"\n          example: \"GBR\"\n          pattern: \"[A-Z]{3}\"\n        country_name:\n          type: string\n          description: \"The full name of the country that `number` is registered in.\"\n          example: \"United Kingdom\"\n        country_prefix:\n          type: string\n          description: \"The numeric prefix for the country that `number` is registered in.\"\n          example: \"44\"\n        request_price:\n          type: string\n          description: \"The amount in EUR charged to your account.\"\n          example: \"0.04000000\"\n        refund_price:\n          type: string\n          description: \"If there is an internal lookup error, the `refund_price` will reflect the lookup price. If `cnam` is requested for a non-US number the `refund_price` will reflect the `cnam` price. If both of these conditions occur, `refund_price` is the sum of the lookup price and `cnam` price.\"\n          example: \"0.01500000\"\n        remaining_balance:\n          type: string\n          description: \"Your account balance in EUR after this request.\"\n          example: \"1.23456789\"\n        current_carrier:\n          $ref: \"#/components/schemas/niCurrentCarrierProperties\"\n        original_carrier:\n          $ref: \"#/components/schemas/niInitialCarrierProperties\"\n        ported:\n          type: string\n          nullable: true\n          description: \"If the user has changed carrier for `number`. The assumed status means that the information supplier has replied to the request but has not said explicitly that the number is ported.\"\n          enum:\n            - unknown\n            - ported\n            - not_ported\n            - assumed_not_ported\n            - assumed_ported\n          example: \"not_ported\"\n        roaming:\n          oneOf:\n            - $ref: \"#/components/schemas/niRoaming\"\n            - type: string\n          nullable: true\n        caller_identity:\n          $ref: \"#/components/schemas/niCallerIdentity\"\n        lookup_outcome:\n          type: integer\n          description: |\n            Shows if all information about a phone number has been returned. Possible values:\n\n            Code | Text\n            --- | ---\n            0 | Success\n            1 | Partial success - some fields populated\n            2 | Failed\n          enum:\n            - 0\n            - 1\n            - 2\n          example: 0\n        lookup_outcome_message:\n          type: string\n          description: \"Shows if all information about a phone number has been returned.\"\n          example: \"Success\"\n        valid_number:\n          type: string\n          description: \"Does `number` exist. `unknown` means the number could not be validated. `valid` means the number is valid. `not_valid` means the number is not valid. `inferred_not_valid` means that the number could not be determined as valid or invalid via an external system and the best guess is that the number is invalid. This is applicable to mobile numbers only.\"\n          enum:\n            - unknown\n            - valid\n            - not_valid\n            - inferred\n            - inferred_not_valid\n          example: \"valid\"\n        reachable:\n          type: string\n          description: \"Can you call `number` now. This is applicable to mobile numbers only.\"\n          enum:\n            - unknown\n            - reachable\n            - undeliverable\n            - absent\n            - bad_number\n            - blacklisted\n          example: \"reachable\"\n          nullable: true\n      required:\n        - status\n        - status_message\n        - request_id\n        - international_format_number\n        - national_format_number\n        - country_code\n        - country_code_iso3\n        - country_name\n        - country_prefix\n\n    # niCarrier:\n    #   type: object\n    #   properties:\n    #     network_code:\n    #       type: string\n    #       description: 'The [https://en.wikipedia.org/wiki/Mobile_country_code](https://en.wikipedia.org/wiki/Mobile_country_code) for the carrier`number` is associated with. Unreal numbers are marked as`unknown` and the request is rejected altogether if the number is impossible according to the [E.164](https://en.wikipedia.org/wiki/E.164) guidelines.'\n    #       xml:\n    #         attribute: true\n    #       example: '12345'\n    #     name:\n    #       type: string\n    #       description: 'The full name of the carrier that `number` is associated with.'\n    #       xml:\n    #         attribute: true\n    #       example: 'Acme Inc'\n    #     country:\n    #       type: string\n    #       description: 'The country that `number` is associated with. This is in ISO 3166-1 alpha-2 format.'\n    #       xml:\n    #         attribute: true\n    #       example: 'GB'\n    #     network_type:\n    #       type: string\n    #       description: 'The type of network that `number` is associated with.'\n    #       enum:\n    #         - mobile\n    #         - landline\n    #         - landline_premium\n    #         - landline_tollfree\n    #         - virtual\n    #         - unknown\n    #         - pager\n    #       xml:\n    #         attribute: true\n    #       example: 'mobile'\n\n    niCurrentCarrierProperties:\n      type: object\n      x-nexmo-developer-collection-description-shown: true\n      description: \"Information about the network `number` is currently connected to.\"\n      properties:\n        network_code:\n          type: string\n          nullable: true\n          description: \"The [https://en.wikipedia.org/wiki/Mobile_country_code](https://en.wikipedia.org/wiki/Mobile_country_code) for the carrier`number` is associated with. Unreal numbers are marked as`unknown` and the request is rejected altogether if the number is impossible according to the [E.164](https://en.wikipedia.org/wiki/E.164) guidelines.\"\n          xml:\n            attribute: true\n          example: \"12345\"\n        name:\n          type: string\n          nullable: true\n          description: \"The full name of the carrier that `number` is associated with.\"\n          xml:\n            attribute: true\n          example: \"Acme Inc\"\n        country:\n          type: string\n          nullable: true\n          description: \"The country that `number` is associated with. This is in ISO 3166-1 alpha-2   format.\"\n          xml:\n            attribute: true\n          example: \"GB\"\n        network_type:\n          type: string\n          nullable: true\n          description: \"The type of network that `number` is associated with.\"\n          enum:\n            - mobile\n            - landline\n            - landline_premium\n            - landline_tollfree\n            - virtual\n            - unknown\n            - pager\n          xml:\n            attribute: true\n          example: \"mobile\"\n\n    niInitialCarrierProperties:\n      type: object\n      x-nexmo-developer-collection-description-shown: true\n      description: \"Information about the network `number` was initially connected to.\"\n      properties:\n        network_code:\n          type: string\n          nullable: true\n          description: \"The [https://en.wikipedia.org/wiki/Mobile_country_code](https://en.wikipedia.org/wiki/Mobile_country_code) for the carrier`number` is associated with. Unreal numbers are marked as`unknown` and the request is rejected altogether if the number is impossible according to the [E.164](https://en.wikipedia.org/wiki/E.164) guidelines.\"\n          xml:\n            attribute: true\n          example: \"12345\"\n        name:\n          type: string\n          nullable: true\n          description: \"The full name of the carrier that `number` is associated with.\"\n          xml:\n            attribute: true\n          example: \"Acme Inc\"\n        country:\n          type: string\n          nullable: true\n          description: \"The country that `number` is associated with. This is in ISO 3166-1 alpha-2   format.\"\n          xml:\n            attribute: true\n          example: \"GB\"\n        network_type:\n          type: string\n          nullable: true\n          description: \"The type of network that `number` is associated with.\"\n          enum:\n            - mobile\n            - landline\n            - landline_premium\n            - landline_tollfree\n            - virtual\n            - unknown\n            - pager\n          xml:\n            attribute: true\n          example: \"mobile\"\n\n    niRoaming:\n      type: object\n      description: \"Information about the roaming status for `number`. This is applicable to mobile numbers only.\"\n      properties:\n        status:\n          type: string\n          nullable: true\n          description: \"Is `number` outside its home carrier network.\"\n          enum:\n            - unknown\n            - roaming\n            - not_roaming\n          example: roaming\n          xml:\n            attribute: true\n        roaming_country_code:\n          type: string\n          nullable: true\n          description: \"If `number` is `roaming`, this is the [code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the country `number` is roaming in.\"\n          example: US\n          xml:\n            attribute: true\n        roaming_network_code:\n          type: string\n          nullable: true\n          description: \"If `number` is `roaming`, this is the id of the carrier network `number` is roaming in.\"\n          example: \"12345\"\n          xml:\n            attribute: true\n        roaming_network_name:\n          type: string\n          nullable: true\n          description: \"If `number` is `roaming`, this is the name of the carrier network `number` is roaming in.\"\n          example: \"Acme Inc\"\n          xml:\n            attribute: true\n\n    niCallerIdentity:\n      type: object\n      description: \"Information about the network `number` is currently connected to.\"\n      properties:\n        caller_type:\n          type: string\n          nullable: true\n          description: \"The value will be `business` if the owner of a phone number is a business. If the owner is an individual the value will be `consumer`. The value will be `unknown` if this information is not available. This parameter is only present if `cnam` had a value of `true` within the request.\"\n          enum:\n            - business\n            - consumer\n            - unknown\n          example: \"consumer\"\n        caller_name:\n          type: string\n          nullable: true\n          description: \"Full name of the person or business who owns the phone number. `unknown` if this information is not available. This parameter is only present if `cnam` had a value of `true` within the request.\"\n          example: \"John Smith\"\n        first_name:\n          type: string\n          nullable: true\n          description: \"First name of the person who owns the phone number if the owner is an individual. This parameter is only present if `cnam` had a value of `true` within the request.\"\n          example: \"John\"\n        last_name:\n          type: string\n          nullable: true\n          description: \"Last name of the person who owns the phone number if the owner is an individual. This parameter is only present if `cnam` had a value of `true` within the request.\"\n          example: \"Smith\"\n\n    niBasicStatus:\n      type: integer\n      enum:\n        - 0\n        - 1\n        - 3\n        - 4\n        - 5\n        - 9\n      example: 0\n      description: |\n        Code | Text        \n        #   -- | --\n        #    0 | Success - request accepted for delivery by .\n        #    1 | Busy - you have made more requests in the last second than are permitted by your account. Please retry.\n        #    3 | Invalid - your request is incomplete and missing some mandatory parameters.\n        #    4 | Invalid credentials - the _api_key_ or _api_secret_ you supplied is either not valid or has been disabled.\n        #    5 | Internal Error - the format of the recipient address is not valid.\n        #    9 | Partner quota exceeded - your account does not have sufficient credit to process this request.\n    niStandardAdvancedStatus:\n      type: integer\n      example: 0\n      enum:\n        - 0\n        - 1\n        - 3\n        - 4\n        - 5\n        - 9\n        - 19\n        - 43\n        - 44\n        - 45\n        - 999\n      description: |\n        Code | Text\n        #         -- | --\n        #          0 | Success - request accepted for delivery by .\n        #          1 | Busy - you have made more requests in the last second than are permitted by your account. Please retry.\n        #          3 | Invalid - your request is incomplete and missing some mandatory parameters.\n        #          4 | Invalid credentials - the _api_key_ or _api_secret_ you supplied is either not valid or has been disabled.\n        #          5 | Internal Error - the format of the recipient address is not valid.\n        #          9 | Partner quota exceeded - your account does not have sufficient credit to process this request.\n        #         19 | Facility Not Allowed - your request makes use of a facility that is not enabled on your account.\n        # 43, 44, 45 | Live mobile lookup not returned. Not all return parameters are available.\n        #        999 | Request unparseable.\n  securitySchemes:\n    apiKey:\n      type: apiKey\n      name: api_key\n      in: query\n      description: \"You can find your API key in your [account overview](https://dashboard.nexmo.com/account-overview)\"\n    apiSecret:\n      type: apiKey\n      name: api_secret\n      in: query\n      description: \"You can find your API secret in your [account overview](https://dashboard.nexmo.com/account-overview)\"",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@331a656907cc680fb04372bd0b24a65c54b07c80/-/blob/openapi/vonage.numberinsight/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/331a656907cc680fb04372bd0b24a65c54b07c80/openapi/vonage.numberinsight/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"niResponseXmlAdvanced\": resolve \"#/components/schemas/niResponseXmlAdvanced\": property \"lookup_outcome\": property \"code\": at openapi/vonage.numberinsight/openapi.yml:648:17: parse enum values: parse value \"0\": unexpected type: \"\""
}