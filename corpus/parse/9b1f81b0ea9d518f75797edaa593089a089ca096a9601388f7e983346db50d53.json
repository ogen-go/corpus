{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "amazonaws.com-rekognition-2016-06-27-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/amazonaws.com-rekognition-2016-06-27-swagger.yaml",
			"byteSize": 210198,
			"content": "openapi: 3.0.0\ninfo:\n  version: 2016-06-27\n  x-release: v4\n  title: Amazon Rekognition\n  description: This is the Amazon Rekognition API reference.\n  x-logo:\n    url: https://twitter.com/awscloud/profile_image?size=original\n    backgroundColor: \"#FFFFFF\"\n  termsOfService: https://aws.amazon.com/service-terms/\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: https://github.com/mermade/aws2openapi\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: http://www.apache.org/licenses/\n  x-providerName: amazonaws.com\n  x-serviceName: rekognition\n  x-origin:\n    - contentType: application/json\n      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/rekognition-2016-06-27.normal.json\n      converter:\n        url: https://github.com/mermade/aws2openapi\n        version: 1.0.0\n      x-apisguru-direct: true\n  x-apiClientRegistration:\n    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: https://docs.aws.amazon.com/rekognition/\nx-hasEquivalentPaths: true\nsecurity:\n  - hmac: []\npaths:\n  /#X-Amz-Target=RekognitionService.CompareFaces:\n    post:\n      operationId: CompareFaces\n      description: <p>Compares a face in the <i>source</i> input image with each of the 100\n        largest faces detected in the <i>target</i> input image. </p> <note> <p>\n        If the source image contains multiple faces, the service detects the\n        largest face and compares it with each face detected in the target\n        image. </p> </note> <p>You pass the input and target images either as\n        base64-encoded image bytes or as references to images in an Amazon S3\n        bucket. If you use the AWS CLI to call Amazon Rekognition operations,\n        passing image bytes isn't supported. The image must be formatted as a\n        PNG or JPEG file. </p> <p>In response, the operation returns an array of\n        face matches ordered by similarity score in descending order. For each\n        face match, the response provides a bounding box of the face, facial\n        landmarks, pose details (pitch, role, and yaw), quality (brightness and\n        sharpness), and confidence value (indicating the level of confidence\n        that the bounding box contains a face). The response also provides a\n        similarity score, which indicates how closely the faces match. </p>\n        <note> <p>By default, only faces with a similarity score of greater than\n        or equal to 80% are returned in the response. You can change this value\n        by specifying the <code>SimilarityThreshold</code> parameter.</p>\n        </note> <p> <code>CompareFaces</code> also returns an array of faces\n        that don't match the source image. For each face, it returns a bounding\n        box, confidence value, landmarks, pose details, and quality. The\n        response also returns information about the face in the source image,\n        including the bounding box of the face and confidence value.</p> <p>If\n        the image doesn't contain Exif metadata, <code>CompareFaces</code>\n        returns orientation information for the source and target images. Use\n        these values to display the images with the correct image\n        orientation.</p> <p>If no faces are detected in the source or target\n        images, <code>CompareFaces</code> returns an\n        <code>InvalidParameterException</code> error. </p> <note> <p> This is a\n        stateless API operation. That is, data returned by this operation\n        doesn't persist.</p> </note> <p>For an example, see Comparing Faces in\n        Images in the Amazon Rekognition Developer Guide.</p> <p>This operation\n        requires permissions to perform the\n        <code>rekognition:CompareFaces</code> action.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CompareFacesResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: InvalidS3ObjectException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidS3ObjectException\"\n        \"482\":\n          description: ImageTooLargeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImageTooLargeException\"\n        \"483\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"484\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"485\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"486\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"487\":\n          description: InvalidImageFormatException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidImageFormatException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.CompareFaces\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CompareFacesRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.CreateCollection:\n    post:\n      operationId: CreateCollection\n      description: <p>Creates a collection in an AWS Region. You can add faces to the\n        collection using the <a>IndexFaces</a> operation. </p> <p>For example,\n        you might create collections, one for each of your application users. A\n        user can then index faces using the <code>IndexFaces</code> operation\n        and persist results in a specific collection. Then, a user can search\n        the collection for faces in the user-specific container. </p> <p>When\n        you create a collection, it is associated with the latest version of the\n        face model version.</p> <note> <p>Collection names are\n        case-sensitive.</p> </note> <p>This operation requires permissions to\n        perform the <code>rekognition:CreateCollection</code> action.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateCollectionResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"482\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"483\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"484\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"485\":\n          description: ResourceAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceAlreadyExistsException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.CreateCollection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateCollectionRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.CreateStreamProcessor:\n    post:\n      operationId: CreateStreamProcessor\n      description: <p>Creates an Amazon Rekognition stream processor that you can use to\n        detect and recognize faces in a streaming video.</p> <p>Amazon\n        Rekognition Video is a consumer of live video from Amazon Kinesis Video\n        Streams. Amazon Rekognition Video sends analysis results to Amazon\n        Kinesis Data Streams.</p> <p>You provide as input a Kinesis video stream\n        (<code>Input</code>) and a Kinesis data stream (<code>Output</code>)\n        stream. You also specify the face recognition criteria in\n        <code>Settings</code>. For example, the collection containing faces that\n        you want to recognize. Use <code>Name</code> to assign an identifier for\n        the stream processor. You use <code>Name</code> to manage the stream\n        processor. For example, you can start processing the source video by\n        calling <a>StartStreamProcessor</a> with the <code>Name</code> field.\n        </p> <p>After you have finished analyzing a streaming video, use\n        <a>StopStreamProcessor</a> to stop processing. You can delete the stream\n        processor by calling <a>DeleteStreamProcessor</a>.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateStreamProcessorResponse\"\n        \"480\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"481\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"482\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"483\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"484\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"485\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n        \"486\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.CreateStreamProcessor\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateStreamProcessorRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.DeleteCollection:\n    post:\n      operationId: DeleteCollection\n      description: <p>Deletes the specified collection. Note that this operation removes\n        all faces in the collection. For an example, see\n        <a>delete-collection-procedure</a>.</p> <p>This operation requires\n        permissions to perform the <code>rekognition:DeleteCollection</code>\n        action.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteCollectionResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"482\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"483\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"484\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"485\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.DeleteCollection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteCollectionRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.DeleteFaces:\n    post:\n      operationId: DeleteFaces\n      description: <p>Deletes faces from a collection. You specify a collection ID and an\n        array of face IDs to remove from the collection.</p> <p>This operation\n        requires permissions to perform the <code>rekognition:DeleteFaces</code>\n        action.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteFacesResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"482\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"483\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"484\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"485\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.DeleteFaces\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteFacesRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.DeleteStreamProcessor:\n    post:\n      operationId: DeleteStreamProcessor\n      description: Deletes the stream processor identified by <code>Name</code>. You assign\n        the value for <code>Name</code> when you create the stream processor\n        with <a>CreateStreamProcessor</a>. You might not be able to use the same\n        name for a stream processor for a few seconds after calling\n        <code>DeleteStreamProcessor</code>.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteStreamProcessorResponse\"\n        \"480\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"481\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"482\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"483\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"484\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"485\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n        \"486\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.DeleteStreamProcessor\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteStreamProcessorRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.DescribeCollection:\n    post:\n      operationId: DescribeCollection\n      description: <p>Describes the specified collection. You can use\n        <code>DescribeCollection</code> to get information, such as the number\n        of faces indexed into a collection and the version of the model used by\n        the collection for face detection.</p> <p>For more information, see\n        Describing a Collection in the Amazon Rekognition Developer Guide.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeCollectionResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"482\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"483\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"484\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"485\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.DescribeCollection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DescribeCollectionRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.DescribeStreamProcessor:\n    post:\n      operationId: DescribeStreamProcessor\n      description: Provides information about a stream processor created by\n        <a>CreateStreamProcessor</a>. You can get information about the input\n        and output streams, the input parameters for the face recognition being\n        performed, and the current status of the stream processor.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeStreamProcessorResponse\"\n        \"480\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"481\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"482\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"483\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"484\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"485\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.DescribeStreamProcessor\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DescribeStreamProcessorRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.DetectFaces:\n    post:\n      operationId: DetectFaces\n      description: <p>Detects faces within an image that is provided as input.</p> <p>\n        <code>DetectFaces</code> detects the 100 largest faces in the image. For\n        each face detected, the operation returns face details. These details\n        include a bounding box of the face, a confidence value (that the\n        bounding box contains a face), and a fixed set of attributes such as\n        facial landmarks (for example, coordinates of eye and mouth), gender,\n        presence of beard, sunglasses, and so on. </p> <p>The face-detection\n        algorithm is most effective on frontal faces. For non-frontal or\n        obscured faces, the algorithm might not detect the faces or might detect\n        faces with lower confidence. </p> <p>You pass the input image either as\n        base64-encoded image bytes or as a reference to an image in an Amazon S3\n        bucket. If you use the to call Amazon Rekognition operations, passing\n        image bytes is not supported. The image must be either a PNG or JPEG\n        formatted file. </p> <note> <p>This is a stateless API operation. That\n        is, the operation does not persist any data.</p> </note> <p>This\n        operation requires permissions to perform the\n        <code>rekognition:DetectFaces</code> action. </p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DetectFacesResponse\"\n        \"480\":\n          description: InvalidS3ObjectException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidS3ObjectException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: ImageTooLargeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImageTooLargeException\"\n        \"483\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"484\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"485\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"486\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"487\":\n          description: InvalidImageFormatException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidImageFormatException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.DetectFaces\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DetectFacesRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.DetectLabels:\n    post:\n      operationId: DetectLabels\n      description: \"<p>Detects instances of real-world entities within an image (JPEG or\n        PNG) provided as input. This includes objects like flower, tree, and\n        table; events like wedding, graduation, and birthday party; and concepts\n        like landscape, evening, and nature. </p> <p>For an example, see\n        Analyzing Images Stored in an Amazon S3 Bucket in the Amazon Rekognition\n        Developer Guide.</p> <note> <p> <code>DetectLabels</code> does not\n        support the detection of activities. However, activity detection is\n        supported for label detection in videos. For more information, see\n        StartLabelDetection in the Amazon Rekognition Developer Guide.</p>\n        </note> <p>You pass the input image as base64-encoded image bytes or as\n        a reference to an image in an Amazon S3 bucket. If you use the AWS CLI\n        to call Amazon Rekognition operations, passing image bytes is not\n        supported. The image must be either a PNG or JPEG formatted file. </p>\n        <p> For each object, scene, and concept the API returns one or more\n        labels. Each label provides the object name, and the level of confidence\n        that the image contains the object. For example, suppose the input image\n        has a lighthouse, the sea, and a rock. The response includes all three\n        labels, one for each object. </p> <p> <code>{Name: lighthouse,\n        Confidence: 98.4629}</code> </p> <p> <code>{Name: rock,Confidence:\n        79.2097}</code> </p> <p> <code> {Name: sea,Confidence: 75.061}</code>\n        </p> <p>In the preceding example, the operation returns one label for\n        each of the three objects. The operation can also return multiple labels\n        for the same object in the image. For example, if the input image shows\n        a flower (for example, a tulip), the operation might return the\n        following three labels. </p> <p> <code>{Name: flower,Confidence:\n        99.0562}</code> </p> <p> <code>{Name: plant,Confidence: 99.0562}</code>\n        </p> <p> <code>{Name: tulip,Confidence: 99.0562}</code> </p> <p>In this\n        example, the detection algorithm more precisely identifies the flower as\n        a tulip.</p> <p>In response, the API returns an array of labels. In\n        addition, the response also includes the orientation correction.\n        Optionally, you can specify <code>MinConfidence</code> to control the\n        confidence threshold for the labels returned. The default is 55%. You\n        can also add the <code>MaxLabels</code> parameter to limit the number of\n        labels returned. </p> <note> <p>If the object detected is a person, the\n        operation doesn't provide the same facial details that the\n        <a>DetectFaces</a> operation provides.</p> </note> <p>\n        <code>DetectLabels</code> returns bounding boxes for instances of common\n        object labels in an array of <a>Instance</a> objects. An\n        <code>Instance</code> object contains a <a>BoundingBox</a> object, for\n        the location of the label on the image. It also includes the confidence\n        by which the bounding box was detected.</p> <p>\n        <code>DetectLabels</code> also returns a hierarchical taxonomy of\n        detected labels. For example, a detected car might be assigned the label\n        <i>car</i>. The label <i>car</i> has two parent labels: <i>Vehicle</i>\n        (its parent) and <i>Transportation</i> (its grandparent). The response\n        returns the entire list of ancestors for a label. Each ancestor is a\n        unique label in the response. In the previous example, <i>Car</i>,\n        <i>Vehicle</i>, and <i>Transportation</i> are returned as unique labels\n        in the response. </p> <p>This is a stateless API operation. That is, the\n        operation does not persist any data.</p> <p>This operation requires\n        permissions to perform the <code>rekognition:DetectLabels</code> action.\n        </p>\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DetectLabelsResponse\"\n        \"480\":\n          description: InvalidS3ObjectException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidS3ObjectException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: ImageTooLargeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImageTooLargeException\"\n        \"483\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"484\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"485\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"486\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"487\":\n          description: InvalidImageFormatException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidImageFormatException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.DetectLabels\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DetectLabelsRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.DetectModerationLabels:\n    post:\n      operationId: DetectModerationLabels\n      description: <p>Detects unsafe content in a specified JPEG or PNG format image. Use\n        <code>DetectModerationLabels</code> to moderate images depending on your\n        requirements. For example, you might want to filter images that contain\n        nudity, but not images containing suggestive content.</p> <p>To filter\n        images, use the labels returned by <code>DetectModerationLabels</code>\n        to determine which types of content are appropriate.</p> <p>For\n        information about moderation labels, see Detecting Unsafe Content in the\n        Amazon Rekognition Developer Guide.</p> <p>You pass the input image\n        either as base64-encoded image bytes or as a reference to an image in an\n        Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition\n        operations, passing image bytes is not supported. The image must be\n        either a PNG or JPEG formatted file. </p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DetectModerationLabelsResponse\"\n        \"480\":\n          description: InvalidS3ObjectException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidS3ObjectException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: ImageTooLargeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImageTooLargeException\"\n        \"483\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"484\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"485\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"486\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"487\":\n          description: InvalidImageFormatException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidImageFormatException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.DetectModerationLabels\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DetectModerationLabelsRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.DetectText:\n    post:\n      operationId: DetectText\n      description: <p>Detects text in the input image and converts it into machine-readable\n        text.</p> <p>Pass the input image as base64-encoded image bytes or as a\n        reference to an image in an Amazon S3 bucket. If you use the AWS CLI to\n        call Amazon Rekognition operations, you must pass it as a reference to\n        an image in an Amazon S3 bucket. For the AWS CLI, passing image bytes is\n        not supported. The image must be either a .png or .jpeg formatted file.\n        </p> <p>The <code>DetectText</code> operation returns text in an array\n        of <a>TextDetection</a> elements, <code>TextDetections</code>. Each\n        <code>TextDetection</code> element provides information about a single\n        word or line of text that was detected in the image. </p> <p>A word is\n        one or more ISO basic latin script characters that are not separated by\n        spaces. <code>DetectText</code> can detect up to 50 words in an\n        image.</p> <p>A line is a string of equally spaced words. A line isn't\n        necessarily a complete sentence. For example, a driver's license number\n        is detected as a line. A line ends when there is no aligned text after\n        it. Also, a line ends when there is a large gap between words, relative\n        to the length of the words. This means, depending on the gap between\n        words, Amazon Rekognition may detect multiple lines in text aligned in\n        the same direction. Periods don't represent the end of a line. If a\n        sentence spans multiple lines, the <code>DetectText</code> operation\n        returns multiple lines.</p> <p>To determine whether a\n        <code>TextDetection</code> element is a line of text or a word, use the\n        <code>TextDetection</code> object <code>Type</code> field. </p> <p>To be\n        detected, text must be within +/- 90 degrees orientation of the\n        horizontal axis.</p> <p>For more information, see DetectText in the\n        Amazon Rekognition Developer Guide.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DetectTextResponse\"\n        \"480\":\n          description: InvalidS3ObjectException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidS3ObjectException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: ImageTooLargeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImageTooLargeException\"\n        \"483\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"484\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"485\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"486\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"487\":\n          description: InvalidImageFormatException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidImageFormatException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.DetectText\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DetectTextRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.GetCelebrityInfo:\n    post:\n      operationId: GetCelebrityInfo\n      description: <p>Gets the name and additional information about a celebrity based on\n        his or her Amazon Rekognition ID. The additional information is returned\n        as an array of URLs. If there is no additional information about the\n        celebrity, this list is empty.</p> <p>For more information, see\n        Recognizing Celebrities in an Image in the Amazon Rekognition Developer\n        Guide.</p> <p>This operation requires permissions to perform the\n        <code>rekognition:GetCelebrityInfo</code> action. </p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetCelebrityInfoResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"482\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"483\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"484\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"485\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.GetCelebrityInfo\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetCelebrityInfoRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.GetCelebrityRecognition:\n    post:\n      operationId: GetCelebrityRecognition\n      description: <p>Gets the celebrity recognition results for a Amazon Rekognition Video\n        analysis started by <a>StartCelebrityRecognition</a>.</p> <p>Celebrity\n        recognition in a video is an asynchronous operation. Analysis is started\n        by a call to <a>StartCelebrityRecognition</a> which returns a job\n        identifier (<code>JobId</code>). When the celebrity recognition\n        operation finishes, Amazon Rekognition Video publishes a completion\n        status to the Amazon Simple Notification Service topic registered in the\n        initial call to <code>StartCelebrityRecognition</code>. To get the\n        results of the celebrity recognition analysis, first check that the\n        status value published to the Amazon SNS topic is\n        <code>SUCCEEDED</code>. If so, call <code>GetCelebrityDetection</code>\n        and pass the job identifier (<code>JobId</code>) from the initial call\n        to <code>StartCelebrityDetection</code>. </p> <p>For more information,\n        see Working With Stored Videos in the Amazon Rekognition Developer\n        Guide.</p> <p> <code>GetCelebrityRecognition</code> returns detected\n        celebrities and the time(s) they are detected in an array\n        (<code>Celebrities</code>) of <a>CelebrityRecognition</a> objects. Each\n        <code>CelebrityRecognition</code> contains information about the\n        celebrity in a <a>CelebrityDetail</a> object and the time,\n        <code>Timestamp</code>, the celebrity was detected. </p> <note> <p>\n        <code>GetCelebrityRecognition</code> only returns the default facial\n        attributes (<code>BoundingBox</code>, <code>Confidence</code>,\n        <code>Landmarks</code>, <code>Pose</code>, and <code>Quality</code>).\n        The other facial attributes listed in the <code>Face</code> object of\n        the following response syntax are not returned. For more information,\n        see FaceDetail in the Amazon Rekognition Developer Guide. </p> </note>\n        <p>By default, the <code>Celebrities</code> array is sorted by time\n        (milliseconds from the start of the video). You can also sort the array\n        by celebrity by specifying the value <code>ID</code> in the\n        <code>SortBy</code> input parameter.</p> <p>The\n        <code>CelebrityDetail</code> object includes the celebrity identifer and\n        additional information urls. If you don't store the additional\n        information urls, you can get them later by calling\n        <a>GetCelebrityInfo</a> with the celebrity identifer.</p> <p>No\n        information is returned for faces not recognized as celebrities.</p>\n        <p>Use MaxResults parameter to limit the number of labels returned. If\n        there are more results than specified in <code>MaxResults</code>, the\n        value of <code>NextToken</code> in the operation response contains a\n        pagination token for getting the next set of results. To get the next\n        page of results, call <code>GetCelebrityDetection</code> and populate\n        the <code>NextToken</code> request parameter with the token value\n        returned from the previous call to\n        <code>GetCelebrityRecognition</code>.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetCelebrityRecognitionResponse\"\n        \"480\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"481\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"482\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"483\":\n          description: InvalidPaginationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPaginationTokenException\"\n        \"484\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"485\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"486\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.GetCelebrityRecognition\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetCelebrityRecognitionRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.GetContentModeration:\n    post:\n      operationId: GetContentModeration\n      description: <p>Gets the unsafe content analysis results for a Amazon Rekognition\n        Video analysis started by <a>StartContentModeration</a>.</p> <p>Unsafe\n        content analysis of a video is an asynchronous operation. You start\n        analysis by calling <a>StartContentModeration</a> which returns a job\n        identifier (<code>JobId</code>). When analysis finishes, Amazon\n        Rekognition Video publishes a completion status to the Amazon Simple\n        Notification Service topic registered in the initial call to\n        <code>StartContentModeration</code>. To get the results of the unsafe\n        content analysis, first check that the status value published to the\n        Amazon SNS topic is <code>SUCCEEDED</code>. If so, call\n        <code>GetContentModeration</code> and pass the job identifier\n        (<code>JobId</code>) from the initial call to\n        <code>StartContentModeration</code>. </p> <p>For more information, see\n        Working with Stored Videos in the Amazon Rekognition Devlopers\n        Guide.</p> <p> <code>GetContentModeration</code> returns detected unsafe\n        content labels, and the time they are detected, in an array,\n        <code>ModerationLabels</code>, of <a>ContentModerationDetection</a>\n        objects. </p> <p>By default, the moderated labels are returned sorted by\n        time, in milliseconds from the start of the video. You can also sort\n        them by moderated label by specifying <code>NAME</code> for the\n        <code>SortBy</code> input parameter. </p> <p>Since video analysis can\n        return a large number of results, use the <code>MaxResults</code>\n        parameter to limit the number of labels returned in a single call to\n        <code>GetContentModeration</code>. If there are more results than\n        specified in <code>MaxResults</code>, the value of\n        <code>NextToken</code> in the operation response contains a pagination\n        token for getting the next set of results. To get the next page of\n        results, call <code>GetContentModeration</code> and populate the\n        <code>NextToken</code> request parameter with the value of\n        <code>NextToken</code> returned from the previous call to\n        <code>GetContentModeration</code>.</p> <p>For more information, see\n        Detecting Unsafe Content in the Amazon Rekognition Developer Guide.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetContentModerationResponse\"\n        \"480\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"481\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"482\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"483\":\n          description: InvalidPaginationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPaginationTokenException\"\n        \"484\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"485\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"486\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.GetContentModeration\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetContentModerationRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.GetFaceDetection:\n    post:\n      operationId: GetFaceDetection\n      description: <p>Gets face detection results for a Amazon Rekognition Video analysis\n        started by <a>StartFaceDetection</a>.</p> <p>Face detection with Amazon\n        Rekognition Video is an asynchronous operation. You start face detection\n        by calling <a>StartFaceDetection</a> which returns a job identifier\n        (<code>JobId</code>). When the face detection operation finishes, Amazon\n        Rekognition Video publishes a completion status to the Amazon Simple\n        Notification Service topic registered in the initial call to\n        <code>StartFaceDetection</code>. To get the results of the face\n        detection operation, first check that the status value published to the\n        Amazon SNS topic is <code>SUCCEEDED</code>. If so, call\n        <a>GetFaceDetection</a> and pass the job identifier (<code>JobId</code>)\n        from the initial call to <code>StartFaceDetection</code>.</p> <p>\n        <code>GetFaceDetection</code> returns an array of detected faces\n        (<code>Faces</code>) sorted by the time the faces were detected. </p>\n        <p>Use MaxResults parameter to limit the number of labels returned. If\n        there are more results than specified in <code>MaxResults</code>, the\n        value of <code>NextToken</code> in the operation response contains a\n        pagination token for getting the next set of results. To get the next\n        page of results, call <code>GetFaceDetection</code> and populate the\n        <code>NextToken</code> request parameter with the token value returned\n        from the previous call to <code>GetFaceDetection</code>.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetFaceDetectionResponse\"\n        \"480\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"481\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"482\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"483\":\n          description: InvalidPaginationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPaginationTokenException\"\n        \"484\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"485\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"486\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.GetFaceDetection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetFaceDetectionRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.GetFaceSearch:\n    post:\n      operationId: GetFaceSearch\n      description: <p>Gets the face search results for Amazon Rekognition Video face search\n        started by <a>StartFaceSearch</a>. The search returns faces in a\n        collection that match the faces of persons detected in a video. It also\n        includes the time(s) that faces are matched in the video.</p> <p>Face\n        search in a video is an asynchronous operation. You start face search by\n        calling to <a>StartFaceSearch</a> which returns a job identifier\n        (<code>JobId</code>). When the search operation finishes, Amazon\n        Rekognition Video publishes a completion status to the Amazon Simple\n        Notification Service topic registered in the initial call to\n        <code>StartFaceSearch</code>. To get the search results, first check\n        that the status value published to the Amazon SNS topic is\n        <code>SUCCEEDED</code>. If so, call <code>GetFaceSearch</code> and pass\n        the job identifier (<code>JobId</code>) from the initial call to\n        <code>StartFaceSearch</code>.</p> <p>For more information, see Searching\n        Faces in a Collection in the Amazon Rekognition Developer Guide.</p>\n        <p>The search results are retured in an array, <code>Persons</code>, of\n        <a>PersonMatch</a> objects. Each<code>PersonMatch</code> element\n        contains details about the matching faces in the input collection,\n        person information (facial attributes, bounding boxes, and person\n        identifer) for the matched person, and the time the person was matched\n        in the video.</p> <note> <p> <code>GetFaceSearch</code> only returns the\n        default facial attributes (<code>BoundingBox</code>,\n        <code>Confidence</code>, <code>Landmarks</code>, <code>Pose</code>, and\n        <code>Quality</code>). The other facial attributes listed in the\n        <code>Face</code> object of the following response syntax are not\n        returned. For more information, see FaceDetail in the Amazon Rekognition\n        Developer Guide. </p> </note> <p>By default, the <code>Persons</code>\n        array is sorted by the time, in milliseconds from the start of the\n        video, persons are matched. You can also sort by persons by specifying\n        <code>INDEX</code> for the <code>SORTBY</code> input parameter.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetFaceSearchResponse\"\n        \"480\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"481\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"482\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"483\":\n          description: InvalidPaginationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPaginationTokenException\"\n        \"484\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"485\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"486\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.GetFaceSearch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetFaceSearchRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.GetLabelDetection:\n    post:\n      operationId: GetLabelDetection\n      description: <p>Gets the label detection results of a Amazon Rekognition Video\n        analysis started by <a>StartLabelDetection</a>. </p> <p>The label\n        detection operation is started by a call to <a>StartLabelDetection</a>\n        which returns a job identifier (<code>JobId</code>). When the label\n        detection operation finishes, Amazon Rekognition publishes a completion\n        status to the Amazon Simple Notification Service topic registered in the\n        initial call to <code>StartlabelDetection</code>. To get the results of\n        the label detection operation, first check that the status value\n        published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call\n        <a>GetLabelDetection</a> and pass the job identifier\n        (<code>JobId</code>) from the initial call to\n        <code>StartLabelDetection</code>.</p> <p> <code>GetLabelDetection</code>\n        returns an array of detected labels (<code>Labels</code>) sorted by the\n        time the labels were detected. You can also sort by the label name by\n        specifying <code>NAME</code> for the <code>SortBy</code> input\n        parameter.</p> <p>The labels returned include the label name, the\n        percentage confidence in the accuracy of the detected label, and the\n        time the label was detected in the video.</p> <p>The returned labels\n        also include bounding box information for common objects, a hierarchical\n        taxonomy of detected labels, and the version of the label model used for\n        detection.</p> <p>Use MaxResults parameter to limit the number of labels\n        returned. If there are more results than specified in\n        <code>MaxResults</code>, the value of <code>NextToken</code> in the\n        operation response contains a pagination token for getting the next set\n        of results. To get the next page of results, call\n        <code>GetlabelDetection</code> and populate the <code>NextToken</code>\n        request parameter with the token value returned from the previous call\n        to <code>GetLabelDetection</code>.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetLabelDetectionResponse\"\n        \"480\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"481\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"482\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"483\":\n          description: InvalidPaginationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPaginationTokenException\"\n        \"484\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"485\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"486\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.GetLabelDetection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetLabelDetectionRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.GetPersonTracking:\n    post:\n      operationId: GetPersonTracking\n      description: <p>Gets the path tracking results of a Amazon Rekognition Video analysis\n        started by <a>StartPersonTracking</a>.</p> <p>The person path tracking\n        operation is started by a call to <code>StartPersonTracking</code> which\n        returns a job identifier (<code>JobId</code>). When the operation\n        finishes, Amazon Rekognition Video publishes a completion status to the\n        Amazon Simple Notification Service topic registered in the initial call\n        to <code>StartPersonTracking</code>.</p> <p>To get the results of the\n        person path tracking operation, first check that the status value\n        published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call\n        <a>GetPersonTracking</a> and pass the job identifier\n        (<code>JobId</code>) from the initial call to\n        <code>StartPersonTracking</code>.</p> <p> <code>GetPersonTracking</code>\n        returns an array, <code>Persons</code>, of tracked persons and the\n        time(s) their paths were tracked in the video. </p> <note> <p>\n        <code>GetPersonTracking</code> only returns the default facial\n        attributes (<code>BoundingBox</code>, <code>Confidence</code>,\n        <code>Landmarks</code>, <code>Pose</code>, and <code>Quality</code>).\n        The other facial attributes listed in the <code>Face</code> object of\n        the following response syntax are not returned. </p> <p>For more\n        information, see FaceDetail in the Amazon Rekognition Developer\n        Guide.</p> </note> <p>By default, the array is sorted by the time(s) a\n        person's path is tracked in the video. You can sort by tracked persons\n        by specifying <code>INDEX</code> for the <code>SortBy</code> input\n        parameter.</p> <p>Use the <code>MaxResults</code> parameter to limit the\n        number of items returned. If there are more results than specified in\n        <code>MaxResults</code>, the value of <code>NextToken</code> in the\n        operation response contains a pagination token for getting the next set\n        of results. To get the next page of results, call\n        <code>GetPersonTracking</code> and populate the <code>NextToken</code>\n        request parameter with the token value returned from the previous call\n        to <code>GetPersonTracking</code>.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetPersonTrackingResponse\"\n        \"480\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"481\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"482\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"483\":\n          description: InvalidPaginationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPaginationTokenException\"\n        \"484\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"485\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"486\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.GetPersonTracking\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetPersonTrackingRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.IndexFaces:\n    post:\n      operationId: IndexFaces\n      description: \"<p>Detects faces in the input image and adds them to the specified\n        collection. </p> <p>Amazon Rekognition doesn't save the actual faces\n        that are detected. Instead, the underlying detection algorithm first\n        detects the faces in the input image. For each face, the algorithm\n        extracts facial features into a feature vector, and stores it in the\n        backend database. Amazon Rekognition uses feature vectors when it\n        performs face match and search operations using the <a>SearchFaces</a>\n        and <a>SearchFacesByImage</a> operations.</p> <p>For more information,\n        see Adding Faces to a Collection in the Amazon Rekognition Developer\n        Guide.</p> <p>To get the number of faces in a collection, call\n        <a>DescribeCollection</a>. </p> <p>If you're using version 1.0 of the\n        face detection model, <code>IndexFaces</code> indexes the 15 largest\n        faces in the input image. Later versions of the face detection model\n        index the 100 largest faces in the input image. </p> <p>If you're using\n        version 4 or later of the face model, image orientation information is\n        not returned in the <code>OrientationCorrection</code> field. </p> <p>To\n        determine which version of the model you're using, call\n        <a>DescribeCollection</a> and supply the collection ID. You can also get\n        the model version from the value of <code>FaceModelVersion</code> in the\n        response from <code>IndexFaces</code> </p> <p>For more information, see\n        Model Versioning in the Amazon Rekognition Developer Guide.</p> <p>If\n        you provide the optional <code>ExternalImageID</code> for the input\n        image you provided, Amazon Rekognition associates this ID with all faces\n        that it detects. When you call the <a>ListFaces</a> operation, the\n        response returns the external ID. You can use this external image ID to\n        create a client-side index to associate the faces with each image. You\n        can then use the index to find all faces in an image.</p> <p>You can\n        specify the maximum number of faces to index with the\n        <code>MaxFaces</code> input parameter. This is useful when you want to\n        index the largest faces in an image and don't want to index smaller\n        faces, such as those belonging to people standing in the background.</p>\n        <p>The <code>QualityFilter</code> input parameter allows you to filter\n        out detected faces that don’t meet the required quality bar chosen by\n        Amazon Rekognition. The quality bar is based on a variety of common use\n        cases. By default, <code>IndexFaces</code> filters detected faces. You\n        can also explicitly filter detected faces by specifying\n        <code>AUTO</code> for the value of <code>QualityFilter</code>. If you do\n        not want to filter detected faces, specify <code>NONE</code>. </p>\n        <note> <p>To use quality filtering, you need a collection associated\n        with version 3 of the face model. To get the version of the face model\n        associated with a collection, call <a>DescribeCollection</a>. </p>\n        </note> <p>Information about faces detected in an image, but not\n        indexed, is returned in an array of <a>UnindexedFace</a> objects,\n        <code>UnindexedFaces</code>. Faces aren't indexed for reasons such\n        as:</p> <ul> <li> <p>The number of faces detected exceeds the value of\n        the <code>MaxFaces</code> request parameter.</p> </li> <li> <p>The face\n        is too small compared to the image dimensions.</p> </li> <li> <p>The\n        face is too blurry.</p> </li> <li> <p>The image is too dark.</p> </li>\n        <li> <p>The face has an extreme pose.</p> </li> </ul> <p>In response,\n        the <code>IndexFaces</code> operation returns an array of metadata for\n        all detected faces, <code>FaceRecords</code>. This includes: </p> <ul>\n        <li> <p>The bounding box, <code>BoundingBox</code>, of the detected\n        face. </p> </li> <li> <p>A confidence value, <code>Confidence</code>,\n        which indicates the confidence that the bounding box contains a\n        face.</p> </li> <li> <p>A face ID, <code>FaceId</code>, assigned by the\n        service for each face that's detected and stored.</p> </li> <li> <p>An\n        image ID, <code>ImageId</code>, assigned by the service for the input\n        image.</p> </li> </ul> <p>If you request all facial attributes (by using\n        the <code>detectionAttributes</code> parameter), Amazon Rekognition\n        returns detailed facial attributes, such as facial landmarks (for\n        example, location of eye and mouth) and other facial attributes like\n        gender. If you provide the same image, specify the same collection, and\n        use the same external ID in the <code>IndexFaces</code> operation,\n        Amazon Rekognition doesn't save duplicate face metadata.</p> <p/> <p>The\n        input image is passed either as base64-encoded image bytes, or as a\n        reference to an image in an Amazon S3 bucket. If you use the AWS CLI to\n        call Amazon Rekognition operations, passing image bytes isn't supported.\n        The image must be formatted as a PNG or JPEG file. </p> <p>This\n        operation requires permissions to perform the\n        <code>rekognition:IndexFaces</code> action.</p>\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IndexFacesResponse\"\n        \"480\":\n          description: InvalidS3ObjectException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidS3ObjectException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: ImageTooLargeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImageTooLargeException\"\n        \"483\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"484\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"485\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"486\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"487\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"488\":\n          description: InvalidImageFormatException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidImageFormatException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.IndexFaces\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/IndexFacesRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.ListCollections:\n    post:\n      operationId: ListCollections\n      description: <p>Returns list of collection IDs in your account. If the result is\n        truncated, the response also provides a <code>NextToken</code> that you\n        can use in the subsequent request to fetch the next set of collection\n        IDs.</p> <p>For an example, see Listing Collections in the Amazon\n        Rekognition Developer Guide.</p> <p>This operation requires permissions\n        to perform the <code>rekognition:ListCollections</code> action.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListCollectionsResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"482\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"483\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"484\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"485\":\n          description: InvalidPaginationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPaginationTokenException\"\n        \"486\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n      parameters:\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.ListCollections\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListCollectionsRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.ListFaces:\n    post:\n      operationId: ListFaces\n      description: <p>Returns metadata for faces in the specified collection. This metadata\n        includes information such as the bounding box coordinates, the\n        confidence (that the bounding box contains a face), and face ID. For an\n        example, see Listing Faces in a Collection in the Amazon Rekognition\n        Developer Guide.</p> <p>This operation requires permissions to perform\n        the <code>rekognition:ListFaces</code> action.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListFacesResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"482\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"483\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"484\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"485\":\n          description: InvalidPaginationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPaginationTokenException\"\n        \"486\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n      parameters:\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.ListFaces\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListFacesRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.ListStreamProcessors:\n    post:\n      operationId: ListStreamProcessors\n      description: \"Gets a list of stream processors that you have created with\n        <a>CreateStreamProcessor</a>. \"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListStreamProcessorsResponse\"\n        \"480\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"481\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"482\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"483\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"484\":\n          description: InvalidPaginationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPaginationTokenException\"\n        \"485\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n      parameters:\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.ListStreamProcessors\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListStreamProcessorsRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.RecognizeCelebrities:\n    post:\n      operationId: RecognizeCelebrities\n      description: <p>Returns an array of celebrities recognized in the input image. For\n        more information, see Recognizing Celebrities in the Amazon Rekognition\n        Developer Guide. </p> <p> <code>RecognizeCelebrities</code> returns the\n        100 largest faces in the image. It lists recognized celebrities in the\n        <code>CelebrityFaces</code> array and unrecognized faces in the\n        <code>UnrecognizedFaces</code> array. <code>RecognizeCelebrities</code>\n        doesn't return celebrities whose faces aren't among the largest 100\n        faces in the image.</p> <p>For each celebrity recognized,\n        <code>RecognizeCelebrities</code> returns a <code>Celebrity</code>\n        object. The <code>Celebrity</code> object contains the celebrity name,\n        ID, URL links to additional information, match confidence, and a\n        <code>ComparedFace</code> object that you can use to locate the\n        celebrity's face on the image.</p> <p>Amazon Rekognition doesn't retain\n        information about which images a celebrity has been recognized in. Your\n        application must store this information and use the\n        <code>Celebrity</code> ID property as a unique identifier for the\n        celebrity. If you don't store the celebrity name or additional\n        information URLs returned by <code>RecognizeCelebrities</code>, you will\n        need the ID to identify the celebrity in a call to the\n        <a>GetCelebrityInfo</a> operation.</p> <p>You pass the input image\n        either as base64-encoded image bytes or as a reference to an image in an\n        Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition\n        operations, passing image bytes is not supported. The image must be\n        either a PNG or JPEG formatted file. </p> <p>For an example, see\n        Recognizing Celebrities in an Image in the Amazon Rekognition Developer\n        Guide.</p> <p>This operation requires permissions to perform the\n        <code>rekognition:RecognizeCelebrities</code> operation.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RecognizeCelebritiesResponse\"\n        \"480\":\n          description: InvalidS3ObjectException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidS3ObjectException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: InvalidImageFormatException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidImageFormatException\"\n        \"483\":\n          description: ImageTooLargeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImageTooLargeException\"\n        \"484\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"485\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"486\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"487\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"488\":\n          description: InvalidImageFormatException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidImageFormatException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.RecognizeCelebrities\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RecognizeCelebritiesRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.SearchFaces:\n    post:\n      operationId: SearchFaces\n      description: <p>For a given input face ID, searches for matching faces in the\n        collection the face belongs to. You get a face ID when you add a face to\n        the collection using the <a>IndexFaces</a> operation. The operation\n        compares the features of the input face with faces in the specified\n        collection. </p> <note> <p>You can also search faces without indexing\n        faces by using the <code>SearchFacesByImage</code> operation.</p>\n        </note> <p> The operation response returns an array of faces that match,\n        ordered by similarity score with the highest similarity first. More\n        specifically, it is an array of metadata for each face match that is\n        found. Along with the metadata, the response also includes a\n        <code>confidence</code> value for each face match, indicating the\n        confidence that the specific face matches the input face. </p> <p>For an\n        example, see Searching for a Face Using Its Face ID in the Amazon\n        Rekognition Developer Guide.</p> <p>This operation requires permissions\n        to perform the <code>rekognition:SearchFaces</code> action.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SearchFacesResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"482\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"483\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"484\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"485\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.SearchFaces\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SearchFacesRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.SearchFacesByImage:\n    post:\n      operationId: SearchFacesByImage\n      description: <p>For a given input image, first detects the largest face in the image,\n        and then searches the specified collection for matching faces. The\n        operation compares the features of the input face with faces in the\n        specified collection. </p> <note> <p>To search for all faces in an input\n        image, you might first call the <a>IndexFaces</a> operation, and then\n        use the face IDs returned in subsequent calls to the <a>SearchFaces</a>\n        operation. </p> <p> You can also call the <code>DetectFaces</code>\n        operation and use the bounding boxes in the response to make face crops,\n        which then you can pass in to the <code>SearchFacesByImage</code>\n        operation. </p> </note> <p>You pass the input image either as\n        base64-encoded image bytes or as a reference to an image in an Amazon S3\n        bucket. If you use the AWS CLI to call Amazon Rekognition operations,\n        passing image bytes is not supported. The image must be either a PNG or\n        JPEG formatted file. </p> <p> The response returns an array of faces\n        that match, ordered by similarity score with the highest similarity\n        first. More specifically, it is an array of metadata for each face match\n        found. Along with the metadata, the response also includes a\n        <code>similarity</code> indicating how similar the face is to the input\n        face. In the response, the operation also returns the bounding box (and\n        a confidence level that the bounding box contains a face) of the face\n        that Amazon Rekognition used for the input image. </p> <p>For an\n        example, Searching for a Face Using an Image in the Amazon Rekognition\n        Developer Guide.</p> <p>This operation requires permissions to perform\n        the <code>rekognition:SearchFacesByImage</code> action.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SearchFacesByImageResponse\"\n        \"480\":\n          description: InvalidS3ObjectException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidS3ObjectException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: ImageTooLargeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImageTooLargeException\"\n        \"483\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"484\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"485\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"486\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"487\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"488\":\n          description: InvalidImageFormatException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidImageFormatException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.SearchFacesByImage\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SearchFacesByImageRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.StartCelebrityRecognition:\n    post:\n      operationId: StartCelebrityRecognition\n      description: <p>Starts asynchronous recognition of celebrities in a stored video.</p>\n        <p>Amazon Rekognition Video can detect celebrities in a video must be\n        stored in an Amazon S3 bucket. Use <a>Video</a> to specify the bucket\n        name and the filename of the video.\n        <code>StartCelebrityRecognition</code> returns a job identifier\n        (<code>JobId</code>) which you use to get the results of the analysis.\n        When celebrity recognition analysis is finished, Amazon Rekognition\n        Video publishes a completion status to the Amazon Simple Notification\n        Service topic that you specify in <code>NotificationChannel</code>. To\n        get the results of the celebrity recognition analysis, first check that\n        the status value published to the Amazon SNS topic is\n        <code>SUCCEEDED</code>. If so, call <a>GetCelebrityRecognition</a> and\n        pass the job identifier (<code>JobId</code>) from the initial call to\n        <code>StartCelebrityRecognition</code>. </p> <p>For more information,\n        see Recognizing Celebrities in the Amazon Rekognition Developer\n        Guide.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StartCelebrityRecognitionResponse\"\n        \"480\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"481\":\n          description: IdempotentParameterMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IdempotentParameterMismatchException\"\n        \"482\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"483\":\n          description: InvalidS3ObjectException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidS3ObjectException\"\n        \"484\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"485\":\n          description: VideoTooLargeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VideoTooLargeException\"\n        \"486\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"487\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"488\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.StartCelebrityRecognition\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StartCelebrityRecognitionRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.StartContentModeration:\n    post:\n      operationId: StartContentModeration\n      description: <p> Starts asynchronous detection of unsafe content in a stored\n        video.</p> <p>Amazon Rekognition Video can moderate content in a video\n        stored in an Amazon S3 bucket. Use <a>Video</a> to specify the bucket\n        name and the filename of the video. <code>StartContentModeration</code>\n        returns a job identifier (<code>JobId</code>) which you use to get the\n        results of the analysis. When unsafe content analysis is finished,\n        Amazon Rekognition Video publishes a completion status to the Amazon\n        Simple Notification Service topic that you specify in\n        <code>NotificationChannel</code>.</p> <p>To get the results of the\n        unsafe content analysis, first check that the status value published to\n        the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call\n        <a>GetContentModeration</a> and pass the job identifier\n        (<code>JobId</code>) from the initial call to\n        <code>StartContentModeration</code>. </p> <p>For more information, see\n        Detecting Unsafe Content in the Amazon Rekognition Developer Guide.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StartContentModerationResponse\"\n        \"480\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"481\":\n          description: IdempotentParameterMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IdempotentParameterMismatchException\"\n        \"482\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"483\":\n          description: InvalidS3ObjectException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidS3ObjectException\"\n        \"484\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"485\":\n          description: VideoTooLargeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VideoTooLargeException\"\n        \"486\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"487\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"488\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.StartContentModeration\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StartContentModerationRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.StartFaceDetection:\n    post:\n      operationId: StartFaceDetection\n      description: <p>Starts asynchronous detection of faces in a stored video.</p>\n        <p>Amazon Rekognition Video can detect faces in a video stored in an\n        Amazon S3 bucket. Use <a>Video</a> to specify the bucket name and the\n        filename of the video. <code>StartFaceDetection</code> returns a job\n        identifier (<code>JobId</code>) that you use to get the results of the\n        operation. When face detection is finished, Amazon Rekognition Video\n        publishes a completion status to the Amazon Simple Notification Service\n        topic that you specify in <code>NotificationChannel</code>. To get the\n        results of the face detection operation, first check that the status\n        value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If\n        so, call <a>GetFaceDetection</a> and pass the job identifier\n        (<code>JobId</code>) from the initial call to\n        <code>StartFaceDetection</code>.</p> <p>For more information, see\n        Detecting Faces in a Stored Video in the Amazon Rekognition Developer\n        Guide.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StartFaceDetectionResponse\"\n        \"480\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"481\":\n          description: IdempotentParameterMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IdempotentParameterMismatchException\"\n        \"482\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"483\":\n          description: InvalidS3ObjectException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidS3ObjectException\"\n        \"484\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"485\":\n          description: VideoTooLargeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VideoTooLargeException\"\n        \"486\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"487\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"488\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.StartFaceDetection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StartFaceDetectionRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.StartFaceSearch:\n    post:\n      operationId: StartFaceSearch\n      description: <p>Starts the asynchronous search for faces in a collection that match\n        the faces of persons detected in a stored video.</p> <p>The video must\n        be stored in an Amazon S3 bucket. Use <a>Video</a> to specify the bucket\n        name and the filename of the video. <code>StartFaceSearch</code> returns\n        a job identifier (<code>JobId</code>) which you use to get the search\n        results once the search has completed. When searching is finished,\n        Amazon Rekognition Video publishes a completion status to the Amazon\n        Simple Notification Service topic that you specify in\n        <code>NotificationChannel</code>. To get the search results, first check\n        that the status value published to the Amazon SNS topic is\n        <code>SUCCEEDED</code>. If so, call <a>GetFaceSearch</a> and pass the\n        job identifier (<code>JobId</code>) from the initial call to\n        <code>StartFaceSearch</code>. For more information, see\n        <a>procedure-person-search-videos</a>.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StartFaceSearchResponse\"\n        \"480\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"481\":\n          description: IdempotentParameterMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IdempotentParameterMismatchException\"\n        \"482\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"483\":\n          description: InvalidS3ObjectException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidS3ObjectException\"\n        \"484\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"485\":\n          description: VideoTooLargeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VideoTooLargeException\"\n        \"486\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"487\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"488\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"489\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.StartFaceSearch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StartFaceSearchRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.StartLabelDetection:\n    post:\n      operationId: StartLabelDetection\n      description: <p>Starts asynchronous detection of labels in a stored video.</p>\n        <p>Amazon Rekognition Video can detect labels in a video. Labels are\n        instances of real-world entities. This includes objects like flower,\n        tree, and table; events like wedding, graduation, and birthday party;\n        concepts like landscape, evening, and nature; and activities like a\n        person getting out of a car or a person skiing.</p> <p>The video must be\n        stored in an Amazon S3 bucket. Use <a>Video</a> to specify the bucket\n        name and the filename of the video. <code>StartLabelDetection</code>\n        returns a job identifier (<code>JobId</code>) which you use to get the\n        results of the operation. When label detection is finished, Amazon\n        Rekognition Video publishes a completion status to the Amazon Simple\n        Notification Service topic that you specify in\n        <code>NotificationChannel</code>.</p> <p>To get the results of the label\n        detection operation, first check that the status value published to the\n        Amazon SNS topic is <code>SUCCEEDED</code>. If so, call\n        <a>GetLabelDetection</a> and pass the job identifier\n        (<code>JobId</code>) from the initial call to\n        <code>StartLabelDetection</code>.</p> <p/>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StartLabelDetectionResponse\"\n        \"480\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"481\":\n          description: IdempotentParameterMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IdempotentParameterMismatchException\"\n        \"482\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"483\":\n          description: InvalidS3ObjectException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidS3ObjectException\"\n        \"484\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"485\":\n          description: VideoTooLargeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VideoTooLargeException\"\n        \"486\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"487\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"488\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.StartLabelDetection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StartLabelDetectionRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.StartPersonTracking:\n    post:\n      operationId: StartPersonTracking\n      description: <p>Starts the asynchronous tracking of a person's path in a stored\n        video.</p> <p>Amazon Rekognition Video can track the path of people in a\n        video stored in an Amazon S3 bucket. Use <a>Video</a> to specify the\n        bucket name and the filename of the video.\n        <code>StartPersonTracking</code> returns a job identifier\n        (<code>JobId</code>) which you use to get the results of the operation.\n        When label detection is finished, Amazon Rekognition publishes a\n        completion status to the Amazon Simple Notification Service topic that\n        you specify in <code>NotificationChannel</code>. </p> <p>To get the\n        results of the person detection operation, first check that the status\n        value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If\n        so, call <a>GetPersonTracking</a> and pass the job identifier\n        (<code>JobId</code>) from the initial call to\n        <code>StartPersonTracking</code>.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StartPersonTrackingResponse\"\n        \"480\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"481\":\n          description: IdempotentParameterMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IdempotentParameterMismatchException\"\n        \"482\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"483\":\n          description: InvalidS3ObjectException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidS3ObjectException\"\n        \"484\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"485\":\n          description: VideoTooLargeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VideoTooLargeException\"\n        \"486\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"487\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"488\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.StartPersonTracking\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StartPersonTrackingRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.StartStreamProcessor:\n    post:\n      operationId: StartStreamProcessor\n      description: Starts processing a stream processor. You create a stream processor by\n        calling <a>CreateStreamProcessor</a>. To tell\n        <code>StartStreamProcessor</code> which stream processor to start, use\n        the value of the <code>Name</code> field specified in the call to\n        <code>CreateStreamProcessor</code>.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StartStreamProcessorResponse\"\n        \"480\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"481\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"482\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"483\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"484\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"485\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n        \"486\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.StartStreamProcessor\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StartStreamProcessorRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=RekognitionService.StopStreamProcessor:\n    post:\n      operationId: StopStreamProcessor\n      description: Stops a running stream processor that was created by\n        <a>CreateStreamProcessor</a>.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StopStreamProcessorResponse\"\n        \"480\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n        \"481\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n        \"482\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"483\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"484\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"485\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n        \"486\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - RekognitionService.StopStreamProcessor\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StopStreamProcessorRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\nservers:\n  - url: http://rekognition.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The Amazon Rekognition multi-region endpoint\n  - url: https://rekognition.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The Amazon Rekognition multi-region endpoint\n  - url: http://rekognition.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon Rekognition endpoint for China (Beijing) and China (Ningxia)\n  - url: https://rekognition.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon Rekognition endpoint for China (Beijing) and China (Ningxia)\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      required: false\n      schema:\n        type: string\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    CompareFacesResponse:\n      type: object\n      example:\n        FaceMatches:\n          - Face:\n              BoundingBox:\n                Height: 0.33481481671333313\n                Left: 0.31888890266418457\n                Top: 0.4933333396911621\n                Width: 0.25\n              Confidence: 99.9991226196289\n            Similarity: 100\n        SourceImageFace:\n          BoundingBox:\n            Height: 0.33481481671333313\n            Left: 0.31888890266418457\n            Top: 0.4933333396911621\n            Width: 0.25\n          Confidence: 99.9991226196289\n      properties:\n        SourceImageFace:\n          $ref: \"#/components/schemas/ComparedSourceImageFace\"\n        FaceMatches:\n          $ref: \"#/components/schemas/CompareFacesMatchList\"\n        UnmatchedFaces:\n          $ref: \"#/components/schemas/CompareFacesUnmatchList\"\n        SourceImageOrientationCorrection:\n          $ref: \"#/components/schemas/OrientationCorrection\"\n        TargetImageOrientationCorrection:\n          $ref: \"#/components/schemas/OrientationCorrection\"\n    CompareFacesRequest:\n      type: object\n      required:\n        - SourceImage\n        - TargetImage\n      properties:\n        SourceImage:\n          $ref: \"#/components/schemas/Image\"\n        TargetImage:\n          $ref: \"#/components/schemas/Image\"\n        SimilarityThreshold:\n          $ref: \"#/components/schemas/Percent\"\n    InvalidParameterException: {}\n    InvalidS3ObjectException: {}\n    ImageTooLargeException: {}\n    AccessDeniedException: {}\n    InternalServerError: {}\n    ThrottlingException: {}\n    ProvisionedThroughputExceededException: {}\n    InvalidImageFormatException: {}\n    CreateCollectionResponse:\n      type: object\n      example:\n        CollectionArn: aws:rekognition:us-west-2:123456789012:collection/myphotos\n        StatusCode: 200\n      properties:\n        StatusCode:\n          $ref: \"#/components/schemas/UInteger\"\n        CollectionArn:\n          $ref: \"#/components/schemas/String\"\n        FaceModelVersion:\n          $ref: \"#/components/schemas/String\"\n    CreateCollectionRequest:\n      type: object\n      required:\n        - CollectionId\n      properties:\n        CollectionId:\n          $ref: \"#/components/schemas/CollectionId\"\n    ResourceAlreadyExistsException: {}\n    CreateStreamProcessorResponse:\n      type: object\n      properties:\n        StreamProcessorArn:\n          $ref: \"#/components/schemas/StreamProcessorArn\"\n    CreateStreamProcessorRequest:\n      type: object\n      required:\n        - Input\n        - Output\n        - Name\n        - Settings\n        - RoleArn\n      properties:\n        Input:\n          $ref: \"#/components/schemas/StreamProcessorInput\"\n        Output:\n          $ref: \"#/components/schemas/StreamProcessorOutput\"\n        Name:\n          $ref: \"#/components/schemas/StreamProcessorName\"\n        Settings:\n          $ref: \"#/components/schemas/StreamProcessorSettings\"\n        RoleArn:\n          $ref: \"#/components/schemas/RoleArn\"\n    LimitExceededException: {}\n    ResourceInUseException: {}\n    DeleteCollectionResponse:\n      type: object\n      example:\n        StatusCode: 200\n      properties:\n        StatusCode:\n          $ref: \"#/components/schemas/UInteger\"\n    DeleteCollectionRequest:\n      type: object\n      required:\n        - CollectionId\n      properties:\n        CollectionId:\n          $ref: \"#/components/schemas/CollectionId\"\n    ResourceNotFoundException: {}\n    DeleteFacesResponse:\n      type: object\n      example:\n        DeletedFaces:\n          - ff43d742-0c13-5d16-a3e8-03d3f58e980b\n      properties:\n        DeletedFaces:\n          $ref: \"#/components/schemas/FaceIdList\"\n    DeleteFacesRequest:\n      type: object\n      required:\n        - CollectionId\n        - FaceIds\n      properties:\n        CollectionId:\n          $ref: \"#/components/schemas/CollectionId\"\n        FaceIds:\n          $ref: \"#/components/schemas/FaceIdList\"\n    DeleteStreamProcessorResponse:\n      type: object\n      properties: {}\n    DeleteStreamProcessorRequest:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          $ref: \"#/components/schemas/StreamProcessorName\"\n    DescribeCollectionResponse:\n      type: object\n      properties:\n        FaceCount:\n          $ref: \"#/components/schemas/ULong\"\n        FaceModelVersion:\n          $ref: \"#/components/schemas/String\"\n        CollectionARN:\n          $ref: \"#/components/schemas/String\"\n        CreationTimestamp:\n          $ref: \"#/components/schemas/DateTime\"\n    DescribeCollectionRequest:\n      type: object\n      required:\n        - CollectionId\n      properties:\n        CollectionId:\n          $ref: \"#/components/schemas/CollectionId\"\n    DescribeStreamProcessorResponse:\n      type: object\n      properties:\n        Name:\n          $ref: \"#/components/schemas/StreamProcessorName\"\n        StreamProcessorArn:\n          $ref: \"#/components/schemas/StreamProcessorArn\"\n        Status:\n          $ref: \"#/components/schemas/StreamProcessorStatus\"\n        StatusMessage:\n          $ref: \"#/components/schemas/String\"\n        CreationTimestamp:\n          $ref: \"#/components/schemas/DateTime\"\n        LastUpdateTimestamp:\n          $ref: \"#/components/schemas/DateTime\"\n        Input:\n          $ref: \"#/components/schemas/StreamProcessorInput\"\n        Output:\n          $ref: \"#/components/schemas/StreamProcessorOutput\"\n        RoleArn:\n          $ref: \"#/components/schemas/RoleArn\"\n        Settings:\n          $ref: \"#/components/schemas/StreamProcessorSettings\"\n    DescribeStreamProcessorRequest:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          $ref: \"#/components/schemas/StreamProcessorName\"\n    DetectFacesResponse:\n      type: object\n      example:\n        FaceDetails:\n          - BoundingBox:\n              Height: 0.18000000715255737\n              Left: 0.5555555820465088\n              Top: 0.33666667342185974\n              Width: 0.23999999463558197\n            Confidence: 100\n            Landmarks:\n              - Type: eyeLeft\n                X: 0.6394737362861633\n                Y: 0.40819624066352844\n              - Type: eyeRight\n                X: 0.7266660928726196\n                Y: 0.41039225459098816\n              - Type: eyeRight\n                X: 0.6912462115287781\n                Y: 0.44240960478782654\n              - Type: mouthDown\n                X: 0.6306198239326477\n                Y: 0.46700039505958557\n              - Type: mouthUp\n                X: 0.7215608954429626\n                Y: 0.47114261984825134\n            Pose:\n              Pitch: 4.050806522369385\n              Roll: 0.9950747489929199\n              Yaw: 13.693790435791016\n            Quality:\n              Brightness: 37.60169982910156\n              Sharpness: 80\n        OrientationCorrection: ROTATE_0\n      properties:\n        FaceDetails:\n          $ref: \"#/components/schemas/FaceDetailList\"\n        OrientationCorrection:\n          $ref: \"#/components/schemas/OrientationCorrection\"\n    DetectFacesRequest:\n      type: object\n      required:\n        - Image\n      properties:\n        Image:\n          $ref: \"#/components/schemas/Image\"\n        Attributes:\n          $ref: \"#/components/schemas/Attributes\"\n    DetectLabelsResponse:\n      type: object\n      example:\n        Labels:\n          - Confidence: 99.25072479248047\n            Name: People\n          - Confidence: 99.25074005126953\n            Name: Person\n      properties:\n        Labels:\n          $ref: \"#/components/schemas/Labels\"\n        OrientationCorrection:\n          $ref: \"#/components/schemas/OrientationCorrection\"\n        LabelModelVersion:\n          $ref: \"#/components/schemas/String\"\n    DetectLabelsRequest:\n      type: object\n      required:\n        - Image\n      properties:\n        Image:\n          $ref: \"#/components/schemas/Image\"\n        MaxLabels:\n          $ref: \"#/components/schemas/UInteger\"\n        MinConfidence:\n          $ref: \"#/components/schemas/Percent\"\n    DetectModerationLabelsResponse:\n      type: object\n      properties:\n        ModerationLabels:\n          $ref: \"#/components/schemas/ModerationLabels\"\n        ModerationModelVersion:\n          $ref: \"#/components/schemas/String\"\n    DetectModerationLabelsRequest:\n      type: object\n      required:\n        - Image\n      properties:\n        Image:\n          $ref: \"#/components/schemas/Image\"\n        MinConfidence:\n          $ref: \"#/components/schemas/Percent\"\n    DetectTextResponse:\n      type: object\n      properties:\n        TextDetections:\n          $ref: \"#/components/schemas/TextDetectionList\"\n    DetectTextRequest:\n      type: object\n      required:\n        - Image\n      properties:\n        Image:\n          $ref: \"#/components/schemas/Image\"\n    GetCelebrityInfoResponse:\n      type: object\n      properties:\n        Urls:\n          $ref: \"#/components/schemas/Urls\"\n        Name:\n          $ref: \"#/components/schemas/String\"\n    GetCelebrityInfoRequest:\n      type: object\n      required:\n        - Id\n      properties:\n        Id:\n          $ref: \"#/components/schemas/RekognitionUniqueId\"\n    GetCelebrityRecognitionResponse:\n      type: object\n      properties:\n        JobStatus:\n          $ref: \"#/components/schemas/VideoJobStatus\"\n        StatusMessage:\n          $ref: \"#/components/schemas/StatusMessage\"\n        VideoMetadata:\n          $ref: \"#/components/schemas/VideoMetadata\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationToken\"\n        Celebrities:\n          $ref: \"#/components/schemas/CelebrityRecognitions\"\n    GetCelebrityRecognitionRequest:\n      type: object\n      required:\n        - JobId\n      properties:\n        JobId:\n          $ref: \"#/components/schemas/JobId\"\n        MaxResults:\n          $ref: \"#/components/schemas/MaxResults\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationToken\"\n        SortBy:\n          $ref: \"#/components/schemas/CelebrityRecognitionSortBy\"\n    InvalidPaginationTokenException: {}\n    GetContentModerationResponse:\n      type: object\n      properties:\n        JobStatus:\n          $ref: \"#/components/schemas/VideoJobStatus\"\n        StatusMessage:\n          $ref: \"#/components/schemas/StatusMessage\"\n        VideoMetadata:\n          $ref: \"#/components/schemas/VideoMetadata\"\n        ModerationLabels:\n          $ref: \"#/components/schemas/ContentModerationDetections\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationToken\"\n        ModerationModelVersion:\n          $ref: \"#/components/schemas/String\"\n    GetContentModerationRequest:\n      type: object\n      required:\n        - JobId\n      properties:\n        JobId:\n          $ref: \"#/components/schemas/JobId\"\n        MaxResults:\n          $ref: \"#/components/schemas/MaxResults\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationToken\"\n        SortBy:\n          $ref: \"#/components/schemas/ContentModerationSortBy\"\n    GetFaceDetectionResponse:\n      type: object\n      properties:\n        JobStatus:\n          $ref: \"#/components/schemas/VideoJobStatus\"\n        StatusMessage:\n          $ref: \"#/components/schemas/StatusMessage\"\n        VideoMetadata:\n          $ref: \"#/components/schemas/VideoMetadata\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationToken\"\n        Faces:\n          $ref: \"#/components/schemas/FaceDetections\"\n    GetFaceDetectionRequest:\n      type: object\n      required:\n        - JobId\n      properties:\n        JobId:\n          $ref: \"#/components/schemas/JobId\"\n        MaxResults:\n          $ref: \"#/components/schemas/MaxResults\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationToken\"\n    GetFaceSearchResponse:\n      type: object\n      properties:\n        JobStatus:\n          $ref: \"#/components/schemas/VideoJobStatus\"\n        StatusMessage:\n          $ref: \"#/components/schemas/StatusMessage\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationToken\"\n        VideoMetadata:\n          $ref: \"#/components/schemas/VideoMetadata\"\n        Persons:\n          $ref: \"#/components/schemas/PersonMatches\"\n    GetFaceSearchRequest:\n      type: object\n      required:\n        - JobId\n      properties:\n        JobId:\n          $ref: \"#/components/schemas/JobId\"\n        MaxResults:\n          $ref: \"#/components/schemas/MaxResults\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationToken\"\n        SortBy:\n          $ref: \"#/components/schemas/FaceSearchSortBy\"\n    GetLabelDetectionResponse:\n      type: object\n      properties:\n        JobStatus:\n          $ref: \"#/components/schemas/VideoJobStatus\"\n        StatusMessage:\n          $ref: \"#/components/schemas/StatusMessage\"\n        VideoMetadata:\n          $ref: \"#/components/schemas/VideoMetadata\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationToken\"\n        Labels:\n          $ref: \"#/components/schemas/LabelDetections\"\n        LabelModelVersion:\n          $ref: \"#/components/schemas/String\"\n    GetLabelDetectionRequest:\n      type: object\n      required:\n        - JobId\n      properties:\n        JobId:\n          $ref: \"#/components/schemas/JobId\"\n        MaxResults:\n          $ref: \"#/components/schemas/MaxResults\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationToken\"\n        SortBy:\n          $ref: \"#/components/schemas/LabelDetectionSortBy\"\n    GetPersonTrackingResponse:\n      type: object\n      properties:\n        JobStatus:\n          $ref: \"#/components/schemas/VideoJobStatus\"\n        StatusMessage:\n          $ref: \"#/components/schemas/StatusMessage\"\n        VideoMetadata:\n          $ref: \"#/components/schemas/VideoMetadata\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationToken\"\n        Persons:\n          $ref: \"#/components/schemas/PersonDetections\"\n    GetPersonTrackingRequest:\n      type: object\n      required:\n        - JobId\n      properties:\n        JobId:\n          $ref: \"#/components/schemas/JobId\"\n        MaxResults:\n          $ref: \"#/components/schemas/MaxResults\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationToken\"\n        SortBy:\n          $ref: \"#/components/schemas/PersonTrackingSortBy\"\n    IndexFacesResponse:\n      type: object\n      example:\n        FaceRecords:\n          - Face:\n              BoundingBox:\n                Height: 0.33481481671333313\n                Left: 0.31888890266418457\n                Top: 0.4933333396911621\n                Width: 0.25\n              Confidence: 99.9991226196289\n              FaceId: ff43d742-0c13-5d16-a3e8-03d3f58e980b\n              ImageId: 465f4e93-763e-51d0-b030-b9667a2d94b1\n            FaceDetail:\n              BoundingBox:\n                Height: 0.33481481671333313\n                Left: 0.31888890266418457\n                Top: 0.4933333396911621\n                Width: 0.25\n              Confidence: 99.9991226196289\n              Landmarks:\n                - Type: eyeLeft\n                  X: 0.3976764678955078\n                  Y: 0.6248345971107483\n                - Type: eyeRight\n                  X: 0.4810936450958252\n                  Y: 0.6317117214202881\n                - Type: noseLeft\n                  X: 0.41986238956451416\n                  Y: 0.7111940383911133\n                - Type: mouthDown\n                  X: 0.40525302290916443\n                  Y: 0.7497701048851013\n                - Type: mouthUp\n                  X: 0.4753248989582062\n                  Y: 0.7558549642562866\n              Pose:\n                Pitch: -9.713645935058594\n                Roll: 4.707281112670898\n                Yaw: -24.438663482666016\n              Quality:\n                Brightness: 29.23358917236328\n                Sharpness: 80\n          - Face:\n              BoundingBox:\n                Height: 0.32592591643333435\n                Left: 0.5144444704055786\n                Top: 0.15111111104488373\n                Width: 0.24444444477558136\n              Confidence: 99.99950408935547\n              FaceId: 8be04dba-4e58-520d-850e-9eae4af70eb2\n              ImageId: 465f4e93-763e-51d0-b030-b9667a2d94b1\n            FaceDetail:\n              BoundingBox:\n                Height: 0.32592591643333435\n                Left: 0.5144444704055786\n                Top: 0.15111111104488373\n                Width: 0.24444444477558136\n              Confidence: 99.99950408935547\n              Landmarks:\n                - Type: eyeLeft\n                  X: 0.6006892323493958\n                  Y: 0.290842205286026\n                - Type: eyeRight\n                  X: 0.6808141469955444\n                  Y: 0.29609042406082153\n                - Type: noseLeft\n                  X: 0.6395332217216492\n                  Y: 0.3522595763206482\n                - Type: mouthDown\n                  X: 0.5892083048820496\n                  Y: 0.38689887523651123\n                - Type: mouthUp\n                  X: 0.674560010433197\n                  Y: 0.394125759601593\n              Pose:\n                Pitch: -4.683138370513916\n                Roll: 2.1029529571533203\n                Yaw: 6.716655254364014\n              Quality:\n                Brightness: 34.951698303222656\n                Sharpness: 160\n        OrientationCorrection: ROTATE_0\n      properties:\n        FaceRecords:\n          $ref: \"#/components/schemas/FaceRecordList\"\n        OrientationCorrection:\n          $ref: \"#/components/schemas/OrientationCorrection\"\n        FaceModelVersion:\n          $ref: \"#/components/schemas/String\"\n        UnindexedFaces:\n          $ref: \"#/components/schemas/UnindexedFaces\"\n    IndexFacesRequest:\n      type: object\n      required:\n        - CollectionId\n        - Image\n      properties:\n        CollectionId:\n          $ref: \"#/components/schemas/CollectionId\"\n        Image:\n          $ref: \"#/components/schemas/Image\"\n        ExternalImageId:\n          $ref: \"#/components/schemas/ExternalImageId\"\n        DetectionAttributes:\n          $ref: \"#/components/schemas/Attributes\"\n        MaxFaces:\n          $ref: \"#/components/schemas/MaxFacesToIndex\"\n        QualityFilter:\n          $ref: \"#/components/schemas/QualityFilter\"\n    ListCollectionsResponse:\n      type: object\n      example:\n        CollectionIds:\n          - myphotos\n      properties:\n        CollectionIds:\n          $ref: \"#/components/schemas/CollectionIdList\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationToken\"\n        FaceModelVersions:\n          $ref: \"#/components/schemas/FaceModelVersionList\"\n    ListCollectionsRequest:\n      type: object\n      properties:\n        NextToken:\n          $ref: \"#/components/schemas/PaginationToken\"\n        MaxResults:\n          $ref: \"#/components/schemas/PageSize\"\n    ListFacesResponse:\n      type: object\n      example:\n        Faces:\n          - BoundingBox:\n              Height: 0.18000000715255737\n              Left: 0.5555559992790222\n              Top: 0.336667001247406\n              Width: 0.23999999463558197\n            Confidence: 100\n            FaceId: 1c62e8b5-69a7-5b7d-b3cd-db4338a8a7e7\n            ImageId: 147fdf82-7a71-52cf-819b-e786c7b9746e\n          - BoundingBox:\n              Height: 0.16555599868297577\n              Left: 0.30963000655174255\n              Top: 0.7066670060157776\n              Width: 0.22074100375175476\n            Confidence: 100\n            FaceId: 29a75abe-397b-5101-ba4f-706783b2246c\n            ImageId: 147fdf82-7a71-52cf-819b-e786c7b9746e\n          - BoundingBox:\n              Height: 0.3234420120716095\n              Left: 0.3233329951763153\n              Top: 0.5\n              Width: 0.24222199618816376\n            Confidence: 99.99829864501953\n            FaceId: 38271d79-7bc2-5efb-b752-398a8d575b85\n            ImageId: d5631190-d039-54e4-b267-abd22c8647c5\n          - BoundingBox:\n              Height: 0.03555560111999512\n              Left: 0.37388700246810913\n              Top: 0.2477779984474182\n              Width: 0.04747769981622696\n            Confidence: 99.99210357666016\n            FaceId: 3b01bef0-c883-5654-ba42-d5ad28b720b3\n            ImageId: 812d9f04-86f9-54fc-9275-8d0dcbcb6784\n          - BoundingBox:\n              Height: 0.05333330109715462\n              Left: 0.2937690019607544\n              Top: 0.35666701197624207\n              Width: 0.07121659815311432\n            Confidence: 99.99919891357422\n            FaceId: 4839a608-49d0-566c-8301-509d71b534d1\n            ImageId: 812d9f04-86f9-54fc-9275-8d0dcbcb6784\n          - BoundingBox:\n              Height: 0.3249259889125824\n              Left: 0.5155559778213501\n              Top: 0.1513350009918213\n              Width: 0.24333299696445465\n            Confidence: 99.99949645996094\n            FaceId: 70008e50-75e4-55d0-8e80-363fb73b3a14\n            ImageId: d5631190-d039-54e4-b267-abd22c8647c5\n          - BoundingBox:\n              Height: 0.03777780011296272\n              Left: 0.7002969980239868\n              Top: 0.18777799606323242\n              Width: 0.05044509842991829\n            Confidence: 99.92639923095703\n            FaceId: 7f5f88ed-d684-5a88-b0df-01e4a521552b\n            ImageId: 812d9f04-86f9-54fc-9275-8d0dcbcb6784\n          - BoundingBox:\n              Height: 0.05555560067296028\n              Left: 0.13946600258350372\n              Top: 0.46333301067352295\n              Width: 0.07270029932260513\n            Confidence: 99.99469757080078\n            FaceId: 895b4e2c-81de-5902-a4bd-d1792bda00b2\n            ImageId: 812d9f04-86f9-54fc-9275-8d0dcbcb6784\n          - BoundingBox:\n              Height: 0.3259260058403015\n              Left: 0.5144439935684204\n              Top: 0.15111100673675537\n              Width: 0.24444399774074554\n            Confidence: 99.99949645996094\n            FaceId: 8be04dba-4e58-520d-850e-9eae4af70eb2\n            ImageId: 465f4e93-763e-51d0-b030-b9667a2d94b1\n          - BoundingBox:\n              Height: 0.18888899683952332\n              Left: 0.3783380091190338\n              Top: 0.2355560064315796\n              Width: 0.25222599506378174\n            Confidence: 99.9999008178711\n            FaceId: 908544ad-edc3-59df-8faf-6a87cc256cf5\n            ImageId: 3c731605-d772-541a-a5e7-0375dbc68a07\n          - BoundingBox:\n              Height: 0.33481499552726746\n              Left: 0.31888899207115173\n              Top: 0.49333301186561584\n              Width: 0.25\n            Confidence: 99.99909973144531\n            FaceId: ff43d742-0c13-5d16-a3e8-03d3f58e980b\n            ImageId: 465f4e93-763e-51d0-b030-b9667a2d94b1\n      properties:\n        Faces:\n          $ref: \"#/components/schemas/FaceList\"\n        NextToken:\n          $ref: \"#/components/schemas/String\"\n        FaceModelVersion:\n          $ref: \"#/components/schemas/String\"\n    ListFacesRequest:\n      type: object\n      required:\n        - CollectionId\n      properties:\n        CollectionId:\n          $ref: \"#/components/schemas/CollectionId\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationToken\"\n        MaxResults:\n          $ref: \"#/components/schemas/PageSize\"\n    ListStreamProcessorsResponse:\n      type: object\n      properties:\n        NextToken:\n          $ref: \"#/components/schemas/PaginationToken\"\n        StreamProcessors:\n          $ref: \"#/components/schemas/StreamProcessorList\"\n    ListStreamProcessorsRequest:\n      type: object\n      properties:\n        NextToken:\n          $ref: \"#/components/schemas/PaginationToken\"\n        MaxResults:\n          $ref: \"#/components/schemas/MaxResults\"\n    RecognizeCelebritiesResponse:\n      type: object\n      properties:\n        CelebrityFaces:\n          $ref: \"#/components/schemas/CelebrityList\"\n        UnrecognizedFaces:\n          $ref: \"#/components/schemas/ComparedFaceList\"\n        OrientationCorrection:\n          $ref: \"#/components/schemas/OrientationCorrection\"\n    RecognizeCelebritiesRequest:\n      type: object\n      required:\n        - Image\n      properties:\n        Image:\n          $ref: \"#/components/schemas/Image\"\n    SearchFacesResponse:\n      type: object\n      example:\n        FaceMatches:\n          - Face:\n              BoundingBox:\n                Height: 0.3259260058403015\n                Left: 0.5144439935684204\n                Top: 0.15111100673675537\n                Width: 0.24444399774074554\n              Confidence: 99.99949645996094\n              FaceId: 8be04dba-4e58-520d-850e-9eae4af70eb2\n              ImageId: 465f4e93-763e-51d0-b030-b9667a2d94b1\n            Similarity: 99.97222137451172\n          - Face:\n              BoundingBox:\n                Height: 0.16555599868297577\n                Left: 0.30963000655174255\n                Top: 0.7066670060157776\n                Width: 0.22074100375175476\n              Confidence: 100\n              FaceId: 29a75abe-397b-5101-ba4f-706783b2246c\n              ImageId: 147fdf82-7a71-52cf-819b-e786c7b9746e\n            Similarity: 97.04154968261719\n          - Face:\n              BoundingBox:\n                Height: 0.18888899683952332\n                Left: 0.3783380091190338\n                Top: 0.2355560064315796\n                Width: 0.25222599506378174\n              Confidence: 99.9999008178711\n              FaceId: 908544ad-edc3-59df-8faf-6a87cc256cf5\n              ImageId: 3c731605-d772-541a-a5e7-0375dbc68a07\n            Similarity: 95.94520568847656\n        SearchedFaceId: 70008e50-75e4-55d0-8e80-363fb73b3a14\n      properties:\n        SearchedFaceId:\n          $ref: \"#/components/schemas/FaceId\"\n        FaceMatches:\n          $ref: \"#/components/schemas/FaceMatchList\"\n        FaceModelVersion:\n          $ref: \"#/components/schemas/String\"\n    SearchFacesRequest:\n      type: object\n      required:\n        - CollectionId\n        - FaceId\n      properties:\n        CollectionId:\n          $ref: \"#/components/schemas/CollectionId\"\n        FaceId:\n          $ref: \"#/components/schemas/FaceId\"\n        MaxFaces:\n          $ref: \"#/components/schemas/MaxFaces\"\n        FaceMatchThreshold:\n          $ref: \"#/components/schemas/Percent\"\n    SearchFacesByImageResponse:\n      type: object\n      example:\n        FaceMatches:\n          - Face:\n              BoundingBox:\n                Height: 0.3234420120716095\n                Left: 0.3233329951763153\n                Top: 0.5\n                Width: 0.24222199618816376\n              Confidence: 99.99829864501953\n              FaceId: 38271d79-7bc2-5efb-b752-398a8d575b85\n              ImageId: d5631190-d039-54e4-b267-abd22c8647c5\n            Similarity: 99.97036743164062\n        SearchedFaceBoundingBox:\n          Height: 0.33481481671333313\n          Left: 0.31888890266418457\n          Top: 0.4933333396911621\n          Width: 0.25\n        SearchedFaceConfidence: 99.9991226196289\n      properties:\n        SearchedFaceBoundingBox:\n          $ref: \"#/components/schemas/BoundingBox\"\n        SearchedFaceConfidence:\n          $ref: \"#/components/schemas/Percent\"\n        FaceMatches:\n          $ref: \"#/components/schemas/FaceMatchList\"\n        FaceModelVersion:\n          $ref: \"#/components/schemas/String\"\n    SearchFacesByImageRequest:\n      type: object\n      required:\n        - CollectionId\n        - Image\n      properties:\n        CollectionId:\n          $ref: \"#/components/schemas/CollectionId\"\n        Image:\n          $ref: \"#/components/schemas/Image\"\n        MaxFaces:\n          $ref: \"#/components/schemas/MaxFaces\"\n        FaceMatchThreshold:\n          $ref: \"#/components/schemas/Percent\"\n    StartCelebrityRecognitionResponse:\n      type: object\n      properties:\n        JobId:\n          $ref: \"#/components/schemas/JobId\"\n    StartCelebrityRecognitionRequest:\n      type: object\n      required:\n        - Video\n      properties:\n        Video:\n          $ref: \"#/components/schemas/Video\"\n        ClientRequestToken:\n          $ref: \"#/components/schemas/ClientRequestToken\"\n        NotificationChannel:\n          $ref: \"#/components/schemas/NotificationChannel\"\n        JobTag:\n          $ref: \"#/components/schemas/JobTag\"\n    IdempotentParameterMismatchException: {}\n    VideoTooLargeException: {}\n    StartContentModerationResponse:\n      type: object\n      properties:\n        JobId:\n          $ref: \"#/components/schemas/JobId\"\n    StartContentModerationRequest:\n      type: object\n      required:\n        - Video\n      properties:\n        Video:\n          $ref: \"#/components/schemas/Video\"\n        MinConfidence:\n          $ref: \"#/components/schemas/Percent\"\n        ClientRequestToken:\n          $ref: \"#/components/schemas/ClientRequestToken\"\n        NotificationChannel:\n          $ref: \"#/components/schemas/NotificationChannel\"\n        JobTag:\n          $ref: \"#/components/schemas/JobTag\"\n    StartFaceDetectionResponse:\n      type: object\n      properties:\n        JobId:\n          $ref: \"#/components/schemas/JobId\"\n    StartFaceDetectionRequest:\n      type: object\n      required:\n        - Video\n      properties:\n        Video:\n          $ref: \"#/components/schemas/Video\"\n        ClientRequestToken:\n          $ref: \"#/components/schemas/ClientRequestToken\"\n        NotificationChannel:\n          $ref: \"#/components/schemas/NotificationChannel\"\n        FaceAttributes:\n          $ref: \"#/components/schemas/FaceAttributes\"\n        JobTag:\n          $ref: \"#/components/schemas/JobTag\"\n    StartFaceSearchResponse:\n      type: object\n      properties:\n        JobId:\n          $ref: \"#/components/schemas/JobId\"\n    StartFaceSearchRequest:\n      type: object\n      required:\n        - Video\n        - CollectionId\n      properties:\n        Video:\n          $ref: \"#/components/schemas/Video\"\n        ClientRequestToken:\n          $ref: \"#/components/schemas/ClientRequestToken\"\n        FaceMatchThreshold:\n          $ref: \"#/components/schemas/Percent\"\n        CollectionId:\n          $ref: \"#/components/schemas/CollectionId\"\n        NotificationChannel:\n          $ref: \"#/components/schemas/NotificationChannel\"\n        JobTag:\n          $ref: \"#/components/schemas/JobTag\"\n    StartLabelDetectionResponse:\n      type: object\n      properties:\n        JobId:\n          $ref: \"#/components/schemas/JobId\"\n    StartLabelDetectionRequest:\n      type: object\n      required:\n        - Video\n      properties:\n        Video:\n          $ref: \"#/components/schemas/Video\"\n        ClientRequestToken:\n          $ref: \"#/components/schemas/ClientRequestToken\"\n        MinConfidence:\n          $ref: \"#/components/schemas/Percent\"\n        NotificationChannel:\n          $ref: \"#/components/schemas/NotificationChannel\"\n        JobTag:\n          $ref: \"#/components/schemas/JobTag\"\n    StartPersonTrackingResponse:\n      type: object\n      properties:\n        JobId:\n          $ref: \"#/components/schemas/JobId\"\n    StartPersonTrackingRequest:\n      type: object\n      required:\n        - Video\n      properties:\n        Video:\n          $ref: \"#/components/schemas/Video\"\n        ClientRequestToken:\n          $ref: \"#/components/schemas/ClientRequestToken\"\n        NotificationChannel:\n          $ref: \"#/components/schemas/NotificationChannel\"\n        JobTag:\n          $ref: \"#/components/schemas/JobTag\"\n    StartStreamProcessorResponse:\n      type: object\n      properties: {}\n    StartStreamProcessorRequest:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          $ref: \"#/components/schemas/StreamProcessorName\"\n    StopStreamProcessorResponse:\n      type: object\n      properties: {}\n    StopStreamProcessorRequest:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          $ref: \"#/components/schemas/StreamProcessorName\"\n    UInteger:\n      type: integer\n      minimum: 0\n    AgeRange:\n      type: object\n      properties:\n        Low:\n          $ref: \"#/components/schemas/UInteger\"\n        High:\n          $ref: \"#/components/schemas/UInteger\"\n      description: <p>Structure containing the estimated age range, in years, for a\n        face.</p> <p>Amazon Rekognition estimates an age range for faces\n        detected in the input image. Estimated age ranges can overlap. A face of\n        a 5-year-old might have an estimated range of 4-6, while the face of a\n        6-year-old might have an estimated range of 4-8.</p>\n    Attribute:\n      type: string\n      enum:\n        - DEFAULT\n        - ALL\n    Attributes:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Attribute\"\n    Boolean:\n      type: boolean\n    Percent:\n      type: number\n      format: float\n      minimum: 0\n      maximum: 100\n    Beard:\n      type: object\n      properties:\n        Value:\n          $ref: \"#/components/schemas/Boolean\"\n        Confidence:\n          $ref: \"#/components/schemas/Percent\"\n      description: Indicates whether or not the face has a beard, and the confidence level\n        in the determination.\n    Float:\n      type: number\n      format: float\n    BoundingBox:\n      type: object\n      properties:\n        Width:\n          $ref: \"#/components/schemas/Float\"\n        Height:\n          $ref: \"#/components/schemas/Float\"\n        Left:\n          $ref: \"#/components/schemas/Float\"\n        Top:\n          $ref: \"#/components/schemas/Float\"\n      description: <p>Identifies the bounding box around the label, face, or text. The\n        <code>left</code> (x-coordinate) and <code>top</code> (y-coordinate) are\n        coordinates representing the top and left sides of the bounding box.\n        Note that the upper-left corner of the image is the origin (0,0). </p>\n        <p>The <code>top</code> and <code>left</code> values returned are ratios\n        of the overall image size. For example, if the input image is 700x200\n        pixels, and the top-left coordinate of the bounding box is 350x50\n        pixels, the API returns a <code>left</code> value of 0.5 (350/700) and a\n        <code>top</code> value of 0.25 (50/200).</p> <p>The <code>width</code>\n        and <code>height</code> values represent the dimensions of the bounding\n        box as a ratio of the overall image dimension. For example, if the input\n        image is 700x200 pixels, and the bounding box width is 70 pixels, the\n        width returned is 0.1. </p> <note> <p> The bounding box coordinates can\n        have negative values. For example, if Amazon Rekognition is able to\n        detect a face that is at the image edge and is only partially visible,\n        the service can return coordinates that are outside the image bounds\n        and, depending on the image edge, you might get negative values or\n        values greater than 1 for the <code>left</code> or <code>top</code>\n        values. </p> </note>\n    Urls:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Url\"\n    String:\n      type: string\n    RekognitionUniqueId:\n      type: string\n      pattern: \"[0-9A-Za-z]*\"\n    ComparedFace:\n      type: object\n      properties:\n        BoundingBox:\n          $ref: \"#/components/schemas/BoundingBox\"\n        Confidence:\n          $ref: \"#/components/schemas/Percent\"\n        Landmarks:\n          $ref: \"#/components/schemas/Landmarks\"\n        Pose:\n          $ref: \"#/components/schemas/Pose\"\n        Quality:\n          $ref: \"#/components/schemas/ImageQuality\"\n      description: Provides face metadata for target image faces that are analyzed by\n        <code>CompareFaces</code> and <code>RecognizeCelebrities</code>.\n    Celebrity:\n      type: object\n      properties:\n        Urls:\n          $ref: \"#/components/schemas/Urls\"\n        Name:\n          $ref: \"#/components/schemas/String\"\n        Id:\n          $ref: \"#/components/schemas/RekognitionUniqueId\"\n        Face:\n          $ref: \"#/components/schemas/ComparedFace\"\n        MatchConfidence:\n          $ref: \"#/components/schemas/Percent\"\n      description: Provides information about a celebrity recognized by the\n        <a>RecognizeCelebrities</a> operation.\n    FaceDetail:\n      type: object\n      properties:\n        BoundingBox:\n          $ref: \"#/components/schemas/BoundingBox\"\n        AgeRange:\n          $ref: \"#/components/schemas/AgeRange\"\n        Smile:\n          $ref: \"#/components/schemas/Smile\"\n        Eyeglasses:\n          $ref: \"#/components/schemas/Eyeglasses\"\n        Sunglasses:\n          $ref: \"#/components/schemas/Sunglasses\"\n        Gender:\n          $ref: \"#/components/schemas/Gender\"\n        Beard:\n          $ref: \"#/components/schemas/Beard\"\n        Mustache:\n          $ref: \"#/components/schemas/Mustache\"\n        EyesOpen:\n          $ref: \"#/components/schemas/EyeOpen\"\n        MouthOpen:\n          $ref: \"#/components/schemas/MouthOpen\"\n        Emotions:\n          $ref: \"#/components/schemas/Emotions\"\n        Landmarks:\n          $ref: \"#/components/schemas/Landmarks\"\n        Pose:\n          $ref: \"#/components/schemas/Pose\"\n        Quality:\n          $ref: \"#/components/schemas/ImageQuality\"\n        Confidence:\n          $ref: \"#/components/schemas/Percent\"\n      description: <p>Structure containing attributes of the face that the algorithm\n        detected.</p> <p>A <code>FaceDetail</code> object contains either the\n        default facial attributes or all facial attributes. The default\n        attributes are <code>BoundingBox</code>, <code>Confidence</code>,\n        <code>Landmarks</code>, <code>Pose</code>, and <code>Quality</code>.</p>\n        <p> <a>GetFaceDetection</a> is the only Amazon Rekognition Video stored\n        video operation that can return a <code>FaceDetail</code> object with\n        all attributes. To specify which attributes to return, use the\n        <code>FaceAttributes</code> input parameter for\n        <a>StartFaceDetection</a>. The following Amazon Rekognition Video\n        operations return only the default attributes. The corresponding Start\n        operations don't have a <code>FaceAttributes</code> input parameter.</p>\n        <ul> <li> <p>GetCelebrityRecognition</p> </li> <li>\n        <p>GetPersonTracking</p> </li> <li> <p>GetFaceSearch</p> </li> </ul>\n        <p>The Amazon Rekognition Image <a>DetectFaces</a> and <a>IndexFaces</a>\n        operations can return all facial attributes. To specify which attributes\n        to return, use the <code>Attributes</code> input parameter for\n        <code>DetectFaces</code>. For <code>IndexFaces</code>, use the\n        <code>DetectAttributes</code> input parameter.</p>\n    CelebrityDetail:\n      type: object\n      properties:\n        Urls:\n          $ref: \"#/components/schemas/Urls\"\n        Name:\n          $ref: \"#/components/schemas/String\"\n        Id:\n          $ref: \"#/components/schemas/RekognitionUniqueId\"\n        Confidence:\n          $ref: \"#/components/schemas/Percent\"\n        BoundingBox:\n          $ref: \"#/components/schemas/BoundingBox\"\n        Face:\n          $ref: \"#/components/schemas/FaceDetail\"\n      description: Information about a recognized celebrity.\n    CelebrityList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Celebrity\"\n    Timestamp:\n      type: integer\n    CelebrityRecognition:\n      type: object\n      properties:\n        Timestamp:\n          $ref: \"#/components/schemas/Timestamp\"\n        Celebrity:\n          $ref: \"#/components/schemas/CelebrityDetail\"\n      description: Information about a detected celebrity and the time the celebrity was\n        detected in a stored video. For more information, see\n        GetCelebrityRecognition in the Amazon Rekognition Developer Guide.\n    CelebrityRecognitionSortBy:\n      type: string\n      enum:\n        - ID\n        - TIMESTAMP\n    CelebrityRecognitions:\n      type: array\n      items:\n        $ref: \"#/components/schemas/CelebrityRecognition\"\n    ClientRequestToken:\n      type: string\n      pattern: ^[a-zA-Z0-9-_]+$\n      minLength: 1\n      maxLength: 64\n    CollectionId:\n      type: string\n      pattern: \"[a-zA-Z0-9_.\\\\-]+\"\n      minLength: 1\n      maxLength: 255\n    CollectionIdList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/CollectionId\"\n    CompareFacesMatch:\n      type: object\n      properties:\n        Similarity:\n          $ref: \"#/components/schemas/Percent\"\n        Face:\n          $ref: \"#/components/schemas/ComparedFace\"\n      description: Provides information about a face in a target image that matches the\n        source image face analyzed by <code>CompareFaces</code>. The\n        <code>Face</code> property contains the bounding box of the face in the\n        target image. The <code>Similarity</code> property is the confidence\n        that the source image face matches the face in the bounding box.\n    CompareFacesMatchList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/CompareFacesMatch\"\n    Image:\n      type: object\n      properties:\n        Bytes:\n          $ref: \"#/components/schemas/ImageBlob\"\n        S3Object:\n          $ref: \"#/components/schemas/S3Object\"\n      description: <p>Provides the input image either as bytes or an S3 object.</p> <p>You\n        pass image bytes to an Amazon Rekognition API operation by using the\n        <code>Bytes</code> property. For example, you would use the\n        <code>Bytes</code> property to pass an image loaded from a local file\n        system. Image bytes passed by using the <code>Bytes</code> property must\n        be base64-encoded. Your code may not need to encode image bytes if you\n        are using an AWS SDK to call Amazon Rekognition API operations. </p>\n        <p>For more information, see Analyzing an Image Loaded from a Local File\n        System in the Amazon Rekognition Developer Guide.</p> <p> You pass\n        images stored in an S3 bucket to an Amazon Rekognition API operation by\n        using the <code>S3Object</code> property. Images stored in an S3 bucket\n        do not need to be base64-encoded.</p> <p>The region for the S3 bucket\n        containing the S3 object must match the region you use for Amazon\n        Rekognition operations.</p> <p>If you use the AWS CLI to call Amazon\n        Rekognition operations, passing image bytes using the Bytes property is\n        not supported. You must first upload the image to an Amazon S3 bucket\n        and then call the operation using the S3Object property.</p> <p>For\n        Amazon Rekognition to process an S3 object, the user must have\n        permission to access the S3 object. For more information, see Resource\n        Based Policies in the Amazon Rekognition Developer Guide. </p>\n    ComparedSourceImageFace:\n      type: object\n      properties:\n        BoundingBox:\n          $ref: \"#/components/schemas/BoundingBox\"\n        Confidence:\n          $ref: \"#/components/schemas/Percent\"\n      description: \"Type that describes the face Amazon Rekognition chose to compare with\n        the faces in the target. This contains a bounding box for the selected\n        face and confidence level that the bounding box contains a face. Note\n        that Amazon Rekognition selects the largest face in the source image for\n        this comparison. \"\n    CompareFacesUnmatchList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ComparedFace\"\n    OrientationCorrection:\n      type: string\n      enum:\n        - ROTATE_0\n        - ROTATE_90\n        - ROTATE_180\n        - ROTATE_270\n    Landmarks:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Landmark\"\n    Pose:\n      type: object\n      properties:\n        Roll:\n          $ref: \"#/components/schemas/Degree\"\n        Yaw:\n          $ref: \"#/components/schemas/Degree\"\n        Pitch:\n          $ref: \"#/components/schemas/Degree\"\n      description: Indicates the pose of the face as determined by its pitch, roll, and yaw.\n    ImageQuality:\n      type: object\n      properties:\n        Brightness:\n          $ref: \"#/components/schemas/Float\"\n        Sharpness:\n          $ref: \"#/components/schemas/Float\"\n      description: \"Identifies face image brightness and sharpness. \"\n    ComparedFaceList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ComparedFace\"\n    ModerationLabel:\n      type: object\n      properties:\n        Confidence:\n          $ref: \"#/components/schemas/Percent\"\n        Name:\n          $ref: \"#/components/schemas/String\"\n        ParentName:\n          $ref: \"#/components/schemas/String\"\n      description: Provides information about a single type of unsafe content found in an\n        image or video. Each type of moderated content has a label within a\n        hierarchical taxonomy. For more information, see Detecting Unsafe\n        Content in the Amazon Rekognition Developer Guide.\n    ContentModerationDetection:\n      type: object\n      properties:\n        Timestamp:\n          $ref: \"#/components/schemas/Timestamp\"\n        ModerationLabel:\n          $ref: \"#/components/schemas/ModerationLabel\"\n      description: Information about an unsafe content label detection in a stored video.\n    ContentModerationDetections:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ContentModerationDetection\"\n    ContentModerationSortBy:\n      type: string\n      enum:\n        - NAME\n        - TIMESTAMP\n    StreamProcessorInput:\n      type: object\n      properties:\n        KinesisVideoStream:\n          $ref: \"#/components/schemas/KinesisVideoStream\"\n      description: \"Information about the source streaming video. \"\n    StreamProcessorOutput:\n      type: object\n      properties:\n        KinesisDataStream:\n          $ref: \"#/components/schemas/KinesisDataStream\"\n      description: Information about the Amazon Kinesis Data Streams stream to which a\n        Amazon Rekognition Video stream processor streams the results of a video\n        analysis. For more information, see CreateStreamProcessor in the Amazon\n        Rekognition Developer Guide.\n    StreamProcessorName:\n      type: string\n      pattern: \"[a-zA-Z0-9_.\\\\-]+\"\n      minLength: 1\n      maxLength: 128\n    StreamProcessorSettings:\n      type: object\n      properties:\n        FaceSearch:\n          $ref: \"#/components/schemas/FaceSearchSettings\"\n      description: Input parameters used to recognize faces in a streaming video analyzed\n        by a Amazon Rekognition stream processor.\n    RoleArn:\n      type: string\n      pattern: arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+\n    StreamProcessorArn:\n      type: string\n      pattern: (^arn:[a-z\\d-]+:rekognition:[a-z\\d-]+:\\d{12}:streamprocessor\\/.+$)\n    DateTime:\n      type: string\n      format: date-time\n    Degree:\n      type: number\n      format: float\n      minimum: -180\n      maximum: 180\n    FaceIdList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/FaceId\"\n      minItems: 1\n      maxItems: 4096\n    ULong:\n      type: integer\n      minimum: 0\n    StreamProcessorStatus:\n      type: string\n      enum:\n        - STOPPED\n        - STARTING\n        - RUNNING\n        - FAILED\n        - STOPPING\n    FaceDetailList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/FaceDetail\"\n    Labels:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Label\"\n    ModerationLabels:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ModerationLabel\"\n    TextDetectionList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/TextDetection\"\n    EmotionName:\n      type: string\n      enum:\n        - HAPPY\n        - SAD\n        - ANGRY\n        - CONFUSED\n        - DISGUSTED\n        - SURPRISED\n        - CALM\n        - UNKNOWN\n        - FEAR\n    Emotion:\n      type: object\n      properties:\n        Type:\n          $ref: \"#/components/schemas/EmotionName\"\n        Confidence:\n          $ref: \"#/components/schemas/Percent\"\n      description: The emotions that appear to be expressed on the face, and the confidence\n        level in the determination. The API is only making a determination of\n        the physical appearance of a person's face. It is not a determination of\n        the person’s internal emotional state and should not be used in such a\n        way. For example, a person pretending to have a sad face might not be\n        sad emotionally.\n    Emotions:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Emotion\"\n    ExternalImageId:\n      type: string\n      pattern: \"[a-zA-Z0-9_.\\\\-:]+\"\n      minLength: 1\n      maxLength: 255\n    EyeOpen:\n      type: object\n      properties:\n        Value:\n          $ref: \"#/components/schemas/Boolean\"\n        Confidence:\n          $ref: \"#/components/schemas/Percent\"\n      description: Indicates whether or not the eyes on the face are open, and the\n        confidence level in the determination.\n    Eyeglasses:\n      type: object\n      properties:\n        Value:\n          $ref: \"#/components/schemas/Boolean\"\n        Confidence:\n          $ref: \"#/components/schemas/Percent\"\n      description: Indicates whether or not the face is wearing eye glasses, and the\n        confidence level in the determination.\n    FaceId:\n      type: string\n      pattern: \"[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\"\n    ImageId:\n      type: string\n      pattern: \"[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\"\n    Face:\n      type: object\n      properties:\n        FaceId:\n          $ref: \"#/components/schemas/FaceId\"\n        BoundingBox:\n          $ref: \"#/components/schemas/BoundingBox\"\n        ImageId:\n          $ref: \"#/components/schemas/ImageId\"\n        ExternalImageId:\n          $ref: \"#/components/schemas/ExternalImageId\"\n        Confidence:\n          $ref: \"#/components/schemas/Percent\"\n      description: \"Describes the face properties such as the bounding box, face ID, image\n        ID of the input image, and external image ID that you assigned. \"\n    FaceAttributes:\n      type: string\n      enum:\n        - DEFAULT\n        - ALL\n    Smile:\n      type: object\n      properties:\n        Value:\n          $ref: \"#/components/schemas/Boolean\"\n        Confidence:\n          $ref: \"#/components/schemas/Percent\"\n      description: Indicates whether or not the face is smiling, and the confidence level\n        in the determination.\n    Sunglasses:\n      type: object\n      properties:\n        Value:\n          $ref: \"#/components/schemas/Boolean\"\n        Confidence:\n          $ref: \"#/components/schemas/Percent\"\n      description: Indicates whether or not the face is wearing sunglasses, and the\n        confidence level in the determination.\n    Gender:\n      type: object\n      properties:\n        Value:\n          $ref: \"#/components/schemas/GenderType\"\n        Confidence:\n          $ref: \"#/components/schemas/Percent\"\n      description: Gender of the face and the confidence level in the determination.\n    Mustache:\n      type: object\n      properties:\n        Value:\n          $ref: \"#/components/schemas/Boolean\"\n        Confidence:\n          $ref: \"#/components/schemas/Percent\"\n      description: Indicates whether or not the face has a mustache, and the confidence\n        level in the determination.\n    MouthOpen:\n      type: object\n      properties:\n        Value:\n          $ref: \"#/components/schemas/Boolean\"\n        Confidence:\n          $ref: \"#/components/schemas/Percent\"\n      description: Indicates whether or not the mouth on the face is open, and the\n        confidence level in the determination.\n    FaceDetection:\n      type: object\n      properties:\n        Timestamp:\n          $ref: \"#/components/schemas/Timestamp\"\n        Face:\n          $ref: \"#/components/schemas/FaceDetail\"\n      description: \"Information about a face detected in a video analysis request and the\n        time the face was detected in the video. \"\n    FaceDetections:\n      type: array\n      items:\n        $ref: \"#/components/schemas/FaceDetection\"\n    FaceList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Face\"\n    FaceMatch:\n      type: object\n      properties:\n        Similarity:\n          $ref: \"#/components/schemas/Percent\"\n        Face:\n          $ref: \"#/components/schemas/Face\"\n      description: Provides face metadata. In addition, it also provides the confidence in\n        the match of this face with the input face.\n    FaceMatchList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/FaceMatch\"\n    FaceModelVersionList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/String\"\n    FaceRecord:\n      type: object\n      properties:\n        Face:\n          $ref: \"#/components/schemas/Face\"\n        FaceDetail:\n          $ref: \"#/components/schemas/FaceDetail\"\n      description: Object containing both the face metadata (stored in the backend\n        database), and facial attributes that are detected but aren't stored in\n        the database.\n    FaceRecordList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/FaceRecord\"\n    FaceSearchSettings:\n      type: object\n      properties:\n        CollectionId:\n          $ref: \"#/components/schemas/CollectionId\"\n        FaceMatchThreshold:\n          $ref: \"#/components/schemas/Percent\"\n      description: Input face recognition parameters for an Amazon Rekognition stream\n        processor. <code>FaceRecognitionSettings</code> is a request parameter\n        for <a>CreateStreamProcessor</a>.\n    FaceSearchSortBy:\n      type: string\n      enum:\n        - INDEX\n        - TIMESTAMP\n    GenderType:\n      type: string\n      enum:\n        - Male\n        - Female\n    Polygon:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Point\"\n    Geometry:\n      type: object\n      properties:\n        BoundingBox:\n          $ref: \"#/components/schemas/BoundingBox\"\n        Polygon:\n          $ref: \"#/components/schemas/Polygon\"\n      description: Information about where the text detected by <a>DetectText</a> is\n        located on an image.\n    JobId:\n      type: string\n      pattern: ^[a-zA-Z0-9-_]+$\n      minLength: 1\n      maxLength: 64\n    MaxResults:\n      type: integer\n      minimum: 1\n    PaginationToken:\n      type: string\n      maxLength: 255\n    VideoJobStatus:\n      type: string\n      enum:\n        - IN_PROGRESS\n        - SUCCEEDED\n        - FAILED\n    StatusMessage:\n      type: string\n    VideoMetadata:\n      type: object\n      properties:\n        Codec:\n          $ref: \"#/components/schemas/String\"\n        DurationMillis:\n          $ref: \"#/components/schemas/ULong\"\n        Format:\n          $ref: \"#/components/schemas/String\"\n        FrameRate:\n          $ref: \"#/components/schemas/Float\"\n        FrameHeight:\n          $ref: \"#/components/schemas/ULong\"\n        FrameWidth:\n          $ref: \"#/components/schemas/ULong\"\n      description: Information about a video that Amazon Rekognition analyzed.\n        <code>Videometadata</code> is returned in every page of paginated\n        responses from a Amazon Rekognition video operation.\n    PersonMatches:\n      type: array\n      items:\n        $ref: \"#/components/schemas/PersonMatch\"\n    LabelDetectionSortBy:\n      type: string\n      enum:\n        - NAME\n        - TIMESTAMP\n    LabelDetections:\n      type: array\n      items:\n        $ref: \"#/components/schemas/LabelDetection\"\n    PersonTrackingSortBy:\n      type: string\n      enum:\n        - INDEX\n        - TIMESTAMP\n    PersonDetections:\n      type: array\n      items:\n        $ref: \"#/components/schemas/PersonDetection\"\n    ImageBlob:\n      type: string\n      minLength: 1\n      maxLength: 5242880\n    S3Object:\n      type: object\n      properties:\n        Bucket:\n          $ref: \"#/components/schemas/S3Bucket\"\n        Name:\n          $ref: \"#/components/schemas/S3ObjectName\"\n        Version:\n          $ref: \"#/components/schemas/S3ObjectVersion\"\n      description: <p>Provides the S3 bucket name and object name.</p> <p>The region for\n        the S3 bucket containing the S3 object must match the region you use for\n        Amazon Rekognition operations.</p> <p>For Amazon Rekognition to process\n        an S3 object, the user must have permission to access the S3 object. For\n        more information, see Resource-Based Policies in the Amazon Rekognition\n        Developer Guide. </p>\n    MaxFacesToIndex:\n      type: integer\n      minimum: 1\n    QualityFilter:\n      type: string\n      enum:\n        - NONE\n        - AUTO\n    UnindexedFaces:\n      type: array\n      items:\n        $ref: \"#/components/schemas/UnindexedFace\"\n    Instance:\n      type: object\n      properties:\n        BoundingBox:\n          $ref: \"#/components/schemas/BoundingBox\"\n        Confidence:\n          $ref: \"#/components/schemas/Percent\"\n      description: An instance of a label returned by Amazon Rekognition Image\n        (<a>DetectLabels</a>) or by Amazon Rekognition Video\n        (<a>GetLabelDetection</a>).\n    Instances:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Instance\"\n    JobTag:\n      type: string\n      pattern: \"[a-zA-Z0-9_.\\\\-:]+\"\n      minLength: 1\n      maxLength: 256\n    KinesisDataArn:\n      type: string\n      pattern: (^arn:([a-z\\d-]+):kinesis:([a-z\\d-]+):\\d{12}:.+$)\n    KinesisDataStream:\n      type: object\n      properties:\n        Arn:\n          $ref: \"#/components/schemas/KinesisDataArn\"\n      description: The Kinesis data stream Amazon Rekognition to which the analysis results\n        of a Amazon Rekognition stream processor are streamed. For more\n        information, see CreateStreamProcessor in the Amazon Rekognition\n        Developer Guide.\n    KinesisVideoArn:\n      type: string\n      pattern: (^arn:([a-z\\d-]+):kinesisvideo:([a-z\\d-]+):\\d{12}:.+$)\n    KinesisVideoStream:\n      type: object\n      properties:\n        Arn:\n          $ref: \"#/components/schemas/KinesisVideoArn\"\n      description: Kinesis video stream stream that provides the source streaming video for\n        a Amazon Rekognition Video stream processor. For more information, see\n        CreateStreamProcessor in the Amazon Rekognition Developer Guide.\n    Parents:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Parent\"\n    Label:\n      type: object\n      properties:\n        Name:\n          $ref: \"#/components/schemas/String\"\n        Confidence:\n          $ref: \"#/components/schemas/Percent\"\n        Instances:\n          $ref: \"#/components/schemas/Instances\"\n        Parents:\n          $ref: \"#/components/schemas/Parents\"\n      description: <p>Structure containing details about the detected label, including the\n        name, detected instances, parent labels, and level of confidence.</p>\n        <p> </p>\n    LabelDetection:\n      type: object\n      properties:\n        Timestamp:\n          $ref: \"#/components/schemas/Timestamp\"\n        Label:\n          $ref: \"#/components/schemas/Label\"\n      description: \"Information about a label detected in a video analysis request and the\n        time the label was detected in the video. \"\n    LandmarkType:\n      type: string\n      enum:\n        - eyeLeft\n        - eyeRight\n        - nose\n        - mouthLeft\n        - mouthRight\n        - leftEyeBrowLeft\n        - leftEyeBrowRight\n        - leftEyeBrowUp\n        - rightEyeBrowLeft\n        - rightEyeBrowRight\n        - rightEyeBrowUp\n        - leftEyeLeft\n        - leftEyeRight\n        - leftEyeUp\n        - leftEyeDown\n        - rightEyeLeft\n        - rightEyeRight\n        - rightEyeUp\n        - rightEyeDown\n        - noseLeft\n        - noseRight\n        - mouthUp\n        - mouthDown\n        - leftPupil\n        - rightPupil\n        - upperJawlineLeft\n        - midJawlineLeft\n        - chinBottom\n        - midJawlineRight\n        - upperJawlineRight\n    Landmark:\n      type: object\n      properties:\n        Type:\n          $ref: \"#/components/schemas/LandmarkType\"\n        X:\n          $ref: \"#/components/schemas/Float\"\n        Y:\n          $ref: \"#/components/schemas/Float\"\n      description: Indicates the location of the landmark on the face.\n    PageSize:\n      type: integer\n      minimum: 0\n      maximum: 4096\n    StreamProcessorList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/StreamProcessor\"\n    MaxFaces:\n      type: integer\n      minimum: 1\n      maximum: 4096\n    SNSTopicArn:\n      type: string\n      pattern: (^arn:aws:sns:.*:\\w{12}:.+$)\n    NotificationChannel:\n      type: object\n      required:\n        - SNSTopicArn\n        - RoleArn\n      properties:\n        SNSTopicArn:\n          $ref: \"#/components/schemas/SNSTopicArn\"\n        RoleArn:\n          $ref: \"#/components/schemas/RoleArn\"\n      description: The Amazon Simple Notification Service topic to which Amazon Rekognition\n        publishes the completion status of a video analysis operation. For more\n        information, see <a>api-video</a>.\n    Parent:\n      type: object\n      properties:\n        Name:\n          $ref: \"#/components/schemas/String\"\n      description: \"A parent label for a label. A label can have 0, 1, or more parents. \"\n    PersonIndex:\n      type: integer\n    PersonDetail:\n      type: object\n      properties:\n        Index:\n          $ref: \"#/components/schemas/PersonIndex\"\n        BoundingBox:\n          $ref: \"#/components/schemas/BoundingBox\"\n        Face:\n          $ref: \"#/components/schemas/FaceDetail\"\n      description: Details about a person detected in a video analysis request.\n    PersonDetection:\n      type: object\n      properties:\n        Timestamp:\n          $ref: \"#/components/schemas/Timestamp\"\n        Person:\n          $ref: \"#/components/schemas/PersonDetail\"\n      description: <p>Details and path tracking information for a single time a person's\n        path is tracked in a video. Amazon Rekognition operations that track\n        people's paths return an array of <code>PersonDetection</code> objects\n        with elements for each time a person's path is tracked in a video. </p>\n        <p>For more information, see GetPersonTracking in the Amazon Rekognition\n        Developer Guide. </p>\n    PersonMatch:\n      type: object\n      properties:\n        Timestamp:\n          $ref: \"#/components/schemas/Timestamp\"\n        Person:\n          $ref: \"#/components/schemas/PersonDetail\"\n        FaceMatches:\n          $ref: \"#/components/schemas/FaceMatchList\"\n      description: \"Information about a person whose face matches a face(s) in an Amazon\n        Rekognition collection. Includes information about the faces in the\n        Amazon Rekognition collection (<a>FaceMatch</a>), information about the\n        person (<a>PersonDetail</a>), and the time stamp for when the person was\n        detected in a video. An array of <code>PersonMatch</code> objects is\n        returned by <a>GetFaceSearch</a>. \"\n    Point:\n      type: object\n      properties:\n        X:\n          $ref: \"#/components/schemas/Float\"\n        Y:\n          $ref: \"#/components/schemas/Float\"\n      description: <p>The X and Y coordinates of a point on an image. The X and Y values\n        returned are ratios of the overall image size. For example, if the input\n        image is 700x200 and the operation returns X=0.5 and Y=0.25, then the\n        point is at the (350,50) pixel coordinate on the image.</p> <p>An array\n        of <code>Point</code> objects, <code>Polygon</code>, is returned by\n        <a>DetectText</a>. <code>Polygon</code> represents a fine-grained\n        polygon around detected text. For more information, see Geometry in the\n        Amazon Rekognition Developer Guide. </p>\n    Reason:\n      type: string\n      enum:\n        - EXCEEDS_MAX_FACES\n        - EXTREME_POSE\n        - LOW_BRIGHTNESS\n        - LOW_SHARPNESS\n        - LOW_CONFIDENCE\n        - SMALL_BOUNDING_BOX\n    Reasons:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Reason\"\n    S3Bucket:\n      type: string\n      pattern: \"[0-9A-Za-z\\\\.\\\\-_]*\"\n      minLength: 3\n      maxLength: 255\n    S3ObjectName:\n      type: string\n      minLength: 1\n      maxLength: 1024\n    S3ObjectVersion:\n      type: string\n      minLength: 1\n      maxLength: 1024\n    Video:\n      type: object\n      properties:\n        S3Object:\n          $ref: \"#/components/schemas/S3Object\"\n      description: Video file stored in an Amazon S3 bucket. Amazon Rekognition video start\n        operations such as <a>StartLabelDetection</a> use <code>Video</code> to\n        specify a video for analysis. The supported file formats are .mp4, .mov\n        and .avi.\n    StreamProcessor:\n      type: object\n      properties:\n        Name:\n          $ref: \"#/components/schemas/StreamProcessorName\"\n        Status:\n          $ref: \"#/components/schemas/StreamProcessorStatus\"\n      description: \"An object that recognizes faces in a streaming video. An Amazon\n        Rekognition stream processor is created by a call to\n        <a>CreateStreamProcessor</a>. The request parameters for\n        <code>CreateStreamProcessor</code> describe the Kinesis video stream\n        source for the streaming video, face recognition parameters, and where\n        to stream the analysis resullts. \"\n    TextTypes:\n      type: string\n      enum:\n        - LINE\n        - WORD\n    TextDetection:\n      type: object\n      properties:\n        DetectedText:\n          $ref: \"#/components/schemas/String\"\n        Type:\n          $ref: \"#/components/schemas/TextTypes\"\n        Id:\n          $ref: \"#/components/schemas/UInteger\"\n        ParentId:\n          $ref: \"#/components/schemas/UInteger\"\n        Confidence:\n          $ref: \"#/components/schemas/Percent\"\n        Geometry:\n          $ref: \"#/components/schemas/Geometry\"\n      description: <p>Information about a word or line of text detected by\n        <a>DetectText</a>.</p> <p>The <code>DetectedText</code> field contains\n        the text that Amazon Rekognition detected in the image. </p> <p>Every\n        word and line has an identifier (<code>Id</code>). Each word belongs to\n        a line and has a parent identifier (<code>ParentId</code>) that\n        identifies the line of text in which the word appears. The word\n        <code>Id</code> is also an index for the word within a line of words.\n        </p> <p>For more information, see Detecting Text in the Amazon\n        Rekognition Developer Guide.</p>\n    UnindexedFace:\n      type: object\n      properties:\n        Reasons:\n          $ref: \"#/components/schemas/Reasons\"\n        FaceDetail:\n          $ref: \"#/components/schemas/FaceDetail\"\n      description: A face that <a>IndexFaces</a> detected, but didn't index. Use the\n        <code>Reasons</code> response attribute to determine why a face wasn't\n        indexed.\n    Url:\n      type: string\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/amazonaws.com-rekognition-2016-06-27-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/amazonaws.com-rekognition-2016-06-27-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/#X-Amz-Target=RekognitionService.CreateCollection\": at 1:62890: post: operation \"CreateCollection\": at 1:63280: parse path \"/#X-Amz-Target=RekognitionService.CreateCollection\": path MUST NOT contain a fragment"
}