{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "adyen.com-CheckoutService-40-openapi.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/adyen.com-CheckoutService-40-openapi.yaml",
			"byteSize": 78583,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://checkout-test.adyen.com/v40\ninfo:\n  contact:\n    email: support@adyen.com\n    name: Adyen Support\n    url: https://support.adyen.com/\n    x-twitter: Adyen\n  description: \u003e-\n    Adyen Checkout API provides a simple and flexible way to initiate and\n    authorise online payments. You can use the same integration for payments\n    made with cards (including One-Click and 3D Secure), mobile wallets, and\n    local payment methods (e.g. iDEAL and Sofort).\n\n\n    This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [Checkout documentation](https://docs.adyen.com/developers/checkout).\n\n\n    ## Authentication\n\n    Each request to the Checkout API must be signed with an API key. For this, obtain an API Key from your Customer Area, as described in [How to get the API key](https://docs.adyen.com/developers/user-management/how-to-get-the-api-key). Then set this key to the `X-API-Key` header value, for example:\n\n\n    ```\n\n    curl\n\n    -H \"Content-Type: application/json\" \\\n\n    -H \"X-API-Key: Your_Checkout_API_key\" \\\n\n    ...\n\n    ```\n\n    Note that when going live, you need to generate a new API Key to access the [live endpoints](https://docs.adyen.com/developers/development-resources/live-endpoints).\n\n\n    ## Versioning\n\n    Checkout API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\n\n    For example:\n\n    ```\n\n    https://checkout-test.adyen.com/v40/payments\n\n    ```\n  termsOfService: https://docs.adyen.com/legal/terms-conditions\n  title: Adyen Checkout Service\n  version: \"40\"\n  x-apisguru-categories:\n    - payment\n  x-logo:\n    url: https://twitter.com/Adyen/profile_image?size=original\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.18\n      format: openapi\n      url: https://raw.githubusercontent.com/adyen/adyen-openapi/master/specs/3.0/CheckoutService-v40.json\n      version: \"3.0\"\n  x-preferred: false\n  x-providerName: adyen.com\n  x-serviceName: CheckoutService\npaths:\n  /paymentMethods:\n    post:\n      description: \u003e-\n        Queries the available payment methods for a transaction based on the\n        transaction context (like amount, country, and currency). Besides giving\n        back a list of the available payment methods, the response also returns\n        which input details you need to collect from the shopper (to be\n        submitted to `/payments`).\n\n\n        Although we highly recommend using this endpoint to ensure you are always offering the most up-to-date list of payment methods, its usage is optional. You can, for example, also cache the `/paymentMethods` response and update it once a week.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PaymentMethodsRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaymentMethodsResponse\"\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Returns available payment methods.\n      x-groupName: API Integration\n      x-sortIndex: 1\n  /paymentSession:\n    post:\n      description: \u003e-\n        Provides the data object that can be used to start the Checkout SDK. To\n        set up the payment, pass its amount, currency, and other required\n        parameters. We use this to optimise the payment flow and perform better\n        risk assessment of the transaction.\n\n\n        For more information, refer to [How it works](https://docs.adyen.com/developers/checkout/integrations-overview#howitworks).\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PaymentSetupRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaymentSetupResponse\"\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Creates a payment session.\n      x-groupName: SDK Integration\n      x-sortIndex: 1\n  /payments:\n    post:\n      description: \u003e-\n        Sends payment parameters (like amount, country, and currency) together\n        with the input details collected from the shopper. The response returns\n        the result of the payment request:\n\n        * For some payment methods (e.g. Visa, Mastercard, and SEPA Direct Debits) you'll get a final state in the `resultCode` (e.g. `authorised` or `refused`).\n\n        * For other payment methods, you'll receive `redirectShopper` as `resultCode` together with a `redirectUrl`. In this case, the shopper must finalize the payment on the page behind the `redirectUrl`.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PaymentRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaymentResponse\"\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Starts a transaction.\n      x-groupName: API Integration\n      x-sortIndex: 2\n  /payments/details:\n    post:\n      description: \u003e-\n        Submits details for a payment created using `/payments`. This step is\n        only needed when no final state has been reached on the `/payments`\n        request (for example for 3D Secure, or when getting redirected back\n        directly from a payment method using an app switch).\n\n\n        The exact details, which need to be sent to this endpoint, are always specified in the response of the associated `/payments` request. When sending in the request to `/payments/details`, make sure you send the corresponding `paymentData` as obtained during the `/payments` call.\n\n\n        In addition, the endpoint can be used to verify a `payload`, which is returned after coming back from the Checkout SDK or any of the redirect based methods on the Checkout API.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DetailsRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaymentResponse\"\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Submits details for a payment.\n      x-groupName: API Integration\n      x-sortIndex: 3\n  /payments/result:\n    post:\n      description: \u003e-\n        Verifies the payment result using the payload returned from the Checkout\n        SDK.\n\n\n        For more information, refer to [How it works](https://docs.adyen.com/developers/checkout/integrations-overview#howitworks).\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PaymentVerificationRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaymentVerificationResponse\"\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Verifies payment result.\n      x-groupName: SDK Integration\n      x-sortIndex: 2\ncomponents:\n  schemas:\n    AccountInfo:\n      properties:\n        accountAgeIndicator:\n          description: Indicator of how long this shopper account exists in the merchant's\n            environment.\n          enum:\n            - notApplicable\n            - thisTransaction\n            - lessThan30Days\n            - from30To60Days\n            - moreThan60Days\n          type: string\n        accountChangeDate:\n          description: Date when the shopper's account was last changed.\n          format: date-time\n          type: string\n        accountChangeIndicator:\n          description: Indicator when the shopper's account was last changed.\n          enum:\n            - thisTransaction\n            - lessThan30Days\n            - from30To60Days\n            - moreThan60Days\n          type: string\n        accountCreationDate:\n          description: Date when the shopper's account was created.\n          format: date-time\n          type: string\n        addCardAttemptsDay:\n          description: Number of attempts the shopper tried to add a card to their account\n            in the last day.\n          format: int32\n          type: integer\n        deliveryAddressUsageDate:\n          description: Date the selected delivery address was last used.\n          format: date-time\n          type: string\n        deliveryAddressUsageIndicator:\n          description: Indicator for when this delivery address was last used.\n          enum:\n            - thisTransaction\n            - lessThan30Days\n            - from30To60Days\n            - moreThan60Days\n          type: string\n        homePhone:\n          description: Shopper's home phone number (including the country code).\n          type: string\n        mobilePhone:\n          description: Shopper's mobile phone number (including the country code).\n          type: string\n        passwordChangeDate:\n          description: Date when the shopper has changed their password.\n          format: date-time\n          type: string\n        passwordChangeIndicator:\n          description: Indicator when the shopper has changed their password.\n          enum:\n            - notApplicable\n            - thisTransaction\n            - lessThan30Days\n            - from30To60Days\n            - moreThan60Days\n          type: string\n        pastTransactionsDay:\n          description: Number of transactions of this shopper in the past 24 hours.\n          format: int32\n          type: integer\n        pastTransactionsYear:\n          description: Number of transactions of this shopper in the past year.\n          format: int32\n          type: integer\n        paymentAccountAge:\n          description: Date this payment method was added to the shopper's account.\n          format: date-time\n          type: string\n        paymentAccountIndicator:\n          description: Indicator for the amount of time this payment method was enrolled\n            with this account.\n          enum:\n            - notApplicable\n            - thisTransaction\n            - lessThan30Days\n            - from30To60Days\n            - moreThan60Days\n          type: string\n        purchasesLast6Months:\n          description: Number of purchases in the last 6 months.\n          format: int32\n          type: integer\n        suspiciousActivity:\n          description: Whether suspicious activity was recorded on this account.\n          type: boolean\n        workPhone:\n          description: Shopper's work phone number (including the country code).\n          type: string\n    Address:\n      properties:\n        city:\n          description: \u003e-\n            The name of the city.\n\n            \u003eRequired if either houseNumberOrName, street, postalCode, or stateOrProvince are provided.\n          type: string\n        country:\n          description: \u003e-\n            The two-character country code of the address\n\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').\n          type: string\n        houseNumberOrName:\n          description: The number or name of the house.\n          type: string\n        postalCode:\n          description: \u003e-\n            The postal code.\n\n            \u003eA maximum of five (5) digits for an address in the USA, or a maximum of ten (10) characters for an address in all other countries.\n\n            \u003eRequired if either houseNumberOrName, street, city, or stateOrProvince are provided.\n          type: string\n        stateOrProvince:\n          description: \u003e-\n            The abbreviation of the state or province.\n\n            \u003eTwo (2) characters for an address in the USA or Canada, or a maximum of three (3) characters for an address in all other countries.\n\n            \u003eRequired for an address in the USA or Canada if either houseNumberOrName, street, city, or postalCode are provided.\n          type: string\n        street:\n          description: \u003e-\n            The name of the street.\n\n            \u003eThe house number should not be included in this field; it should be separately provided via `houseNumberOrName`.\n\n            \u003eRequired if either houseNumberOrName, city, postalCode, or stateOrProvince are provided.\n          type: string\n      required:\n        - country\n    Amount:\n      properties:\n        currency:\n          description: The three-character [ISO currency\n            code](https://docs.adyen.com/developers/development-resources/currency-codes).\n          maxLength: 3\n          minLength: 3\n          type: string\n        value:\n          description: \u003e-\n            The payable amount that can be charged for the transaction.\n\n\n            The transaction amount needs to be represented in minor units according to the [following table](https://docs.adyen.com/developers/development-resources/currency-codes).\n          format: int64\n          type: integer\n      required:\n        - value\n        - currency\n    Avs:\n      properties:\n        addressEditable:\n          description: Indicates whether the shopper is allowed to modify the billing\n            address for the current payment request.\n          type: boolean\n        enabled:\n          description: \u003e-\n            Specifies whether the shopper should enter their billing address\n            during checkout.\n\n\n            Allowed values:\n\n            * yes — Perform AVS checks for every card payment.\n\n            * automatic — Perform AVS checks only when required to optimize the conversion rate.\n\n            * no — Do not perform AVS checks.\n          enum:\n            - yes\n            - no\n            - automatic\n          type: string\n    BankAccount:\n      properties:\n        bankAccountNumber:\n          description: The bank account number (without separators).\n          type: string\n        bankCity:\n          description: The bank city.\n          type: string\n        bankLocationId:\n          description: The location id of the bank. The field value is `nil` in most cases.\n          type: string\n        bankName:\n          description: The name of the bank.\n          type: string\n        bic:\n          description: The [Business Identifier\n            Code](https://en.wikipedia.org/wiki/ISO_9362) (BIC) is the SWIFT\n            address assigned to a bank. The field value is `nil` in most cases.\n          type: string\n        countryCode:\n          description: |-\n            Country code where the bank is located.\n\n            A valid value is an ISO two-character country code (e.g. 'NL').\n          type: string\n        iban:\n          description: The [International Bank Account\n            Number](https://en.wikipedia.org/wiki/International_Bank_Account_Number)\n            (IBAN).\n          type: string\n        ownerName:\n          description: \u003e-\n            The name of the bank account holder.\n\n            If you submit a name with non-Latin characters, we automatically replace some of them with corresponding Latin characters to meet the FATF recommendations. For example:\n\n            * χ12 is converted to ch12.\n\n            * üA is converted to euA.\n\n            * Peter Møller is converted to Peter Mller, because banks don't accept 'ø'.\n\n            After replacement, the ownerName must have at least three alphanumeric characters (A-Z, a-z, 0-9), and at least one of them must be a valid Latin character (A-Z, a-z). For example:\n\n            * John17 - allowed.\n\n            * J17 - allowed.\n\n            * 171 - not allowed.\n\n            * John-7 - allowed.\n\n            \u003e If provided details don't match the required format, the response returns the error message: 203 'Invalid bank account holder name'.\n          type: string\n        taxId:\n          description: The bank account holder's tax ID.\n          type: string\n    BrowserInfo:\n      properties:\n        acceptHeader:\n          description: The accept header value of the shopper's browser.\n          maxLength: 50\n          minLength: 10\n          type: string\n        colorDepth:\n          description: The color depth of the shopper's device in bits per pixel. Should be\n            obtained by using the browser's screen.colorDepth property.\n          format: int32\n          type: integer\n        javaEnabled:\n          description: Boolean value indicating if the shopper's browser is able to execute\n            Java.\n          type: boolean\n        language:\n          description: The navigator.language value of the shopper's browser (as defined in\n            IETF BCP 47).\n          type: string\n        screenHeight:\n          description: The total height of the shopper's device screen in pixels.\n          format: int32\n          type: integer\n        screenWidth:\n          description: The total width of the shopper's device screen in pixels.\n          format: int32\n          type: integer\n        timeZoneOffset:\n          description: Time difference between UTC time and the shopper's browser local\n            time, in minutes.\n          format: int32\n          type: integer\n        userAgent:\n          description: The user agent value of the shopper's browser.\n          maxLength: 50\n          minLength: 10\n          type: string\n      required:\n        - userAgent\n        - acceptHeader\n    Card:\n      properties:\n        cvc:\n          description: \u003e-\n            The [card verification\n            code](https://docs.adyen.com/developers/payment-glossary#cardsecuritycodecvccvvcid)\n            (1-20 characters). Depending on the card brand, it is known also as:\n\n            * CVV2/CVC2 – length: 3 digits\n\n            * CID – length: 4 digits\n\n            \u003e If you are using [Client-Side Encryption](https://docs.adyen.com/developers/features/client-side-encryption), the CVC code is present in the encrypted data. You must never post the card details to the server.\n\n            \u003e This field must be always present in a [one-click payment request](https://docs.adyen.com/developers/classic-integration/recurring-payments).\n\n            \u003e When this value is returned in a response, it is always empty because it is not stored.\n          maxLength: 20\n          minLength: 1\n          type: string\n        expiryMonth:\n          description: |-\n            The card expiry month.\n            Format: 2 digits, zero-padded for single digits. For example:\n            * 03 = March\n            * 11 = November\n          maxLength: 2\n          minLength: 1\n          type: string\n        expiryYear:\n          description: |-\n            The card expiry year.\n            Format: 4 digits. For example: 2018\n          maxLength: 4\n          minLength: 4\n          type: string\n        holderName:\n          description: The name of the cardholder, as printed on the card.\n          maxLength: 50\n          minLength: 1\n          type: string\n        issueNumber:\n          description: The issue number of the card (for some UK debit cards only).\n          maxLength: 2\n          minLength: 1\n          type: string\n        number:\n          description: \u003e-\n            The card number (4-19 characters). Do not use any separators.\n\n            When this value is returned in a response, only the last 4 digits of the card number are returned.\n          maxLength: 19\n          minLength: 4\n          type: string\n        startMonth:\n          description: The month component of the start date (for some UK debit cards only).\n          maxLength: 2\n          minLength: 1\n          type: string\n        startYear:\n          description: The year component of the start date (for some UK debit cards only).\n          maxLength: 4\n          minLength: 4\n          type: string\n      required:\n        - number\n        - expiryMonth\n        - expiryYear\n        - holderName\n    Company:\n      properties:\n        homepage:\n          description: The company website's home page.\n          type: string\n        name:\n          description: The company name.\n          type: string\n        registrationNumber:\n          description: Registration number of the company.\n          type: string\n        registryLocation:\n          description: Registry location of the company.\n          type: string\n        taxId:\n          description: Tax ID of the company.\n          type: string\n        type:\n          description: The company type.\n          type: string\n    Configuration:\n      properties:\n        avs:\n          $ref: \"#/components/schemas/Avs\"\n          description: Describes the configuration for AVS ([Address Verification\n            System](https://en.wikipedia.org/wiki/Address_Verification_System)).\n        cardHolderName:\n          description: |-\n            Determines whether the cardholder name should be provided or not.\n\n            Permitted values:\n            * NONE\n            * OPTIONAL\n            * REQUIRED\n          enum:\n            - NONE\n            - OPTIONAL\n            - REQUIRED\n          type: string\n        installments:\n          $ref: \"#/components/schemas/Installments\"\n          description: Describes the configuration for [installment\n            payments](https://docs.adyen.com/developers/payment-methods/installment-payments).\n        shopperInput:\n          $ref: \"#/components/schemas/ShopperInput\"\n          description: Determines how to display the details fields.\n    DetailsRequest:\n      properties:\n        details:\n          description: Use this collection to submit the details that were returned as a\n            result of the `/payments` call.\n          type: object\n        paymentData:\n          description: The `paymentData` value that you received in the response to the\n            `/payments` call.\n          type: string\n      required:\n        - details\n        - paymentData\n    DeviceRenderOptions:\n      properties:\n        sdkInterface:\n          description: Supported SDK interface types.\n          enum:\n            - Html\n            - Native\n            - both\n          type: string\n        sdkUiType:\n          description: UI types supported for displaying specific challenges.\n          items:\n            enum:\n              - multiSelect\n              - otherHtml\n              - outOfBand\n              - singleSelect\n              - text\n            type: string\n          type: array\n    ForexQuote:\n      properties:\n        account:\n          description: The account name.\n          type: string\n        accountType:\n          description: The account type.\n          type: string\n        baseAmount:\n          $ref: \"#/components/schemas/Amount\"\n          description: The base amount.\n        basePoints:\n          description: The base points.\n          format: int32\n          type: integer\n        buy:\n          $ref: \"#/components/schemas/Amount\"\n          description: The buy rate.\n        interbank:\n          $ref: \"#/components/schemas/Amount\"\n          description: The interbank amount.\n        reference:\n          description: The reference assigned to the forex quote request.\n          type: string\n        sell:\n          $ref: \"#/components/schemas/Amount\"\n          description: The sell rate.\n        signature:\n          description: The signature to validate the integrity.\n          type: string\n        source:\n          description: The source of the forex quote.\n          type: string\n        type:\n          description: The type of forex.\n          type: string\n        validTill:\n          description: The date until which the forex quote is valid.\n          format: date-time\n          type: string\n      required:\n        - validTill\n        - basePoints\n    FraudCheckResult:\n      properties:\n        accountScore:\n          description: The fraud score generated by the risk check.\n          format: int32\n          type: integer\n        checkId:\n          description: The ID of the risk check.\n          format: int32\n          type: integer\n        name:\n          description: The name of the risk check.\n          type: string\n      required:\n        - checkId\n        - name\n        - accountScore\n    FraudResult:\n      properties:\n        accountScore:\n          description: The total fraud score generated by the risk checks.\n          format: int32\n          type: integer\n        results:\n          description: The result of the individual risk checks.\n          items:\n            $ref: \"#/components/schemas/FraudCheckResult\"\n          type: array\n      required:\n        - accountScore\n    InputDetail:\n      properties:\n        configuration:\n          description: Configuration parameters for the required input.\n          type: object\n        details:\n          description: Input details can also be provided recursively.\n          items:\n            $ref: \"#/components/schemas/SubInputDetail\"\n          type: array\n        itemSearchUrl:\n          description: In case of a select, the URL from which to query the items.\n          type: string\n        items:\n          description: In case of a select, the items to choose from.\n          items:\n            $ref: \"#/components/schemas/Item\"\n          type: array\n        key:\n          description: The value to provide in the result.\n          type: string\n        name:\n          description: The default name for this input field, which will be displayed by\n            the SDKs.\n          type: string\n        optional:\n          description: True if this input value is optional.\n          type: boolean\n        type:\n          description: The type of the required input.\n          type: string\n        validationType:\n          description: The type of validation to be applied to the input value.\n          enum:\n            - IBAN\n            - Name\n          type: string\n        value:\n          description: The value can be pre-filled, if available.\n          type: string\n    Installments:\n      properties:\n        value:\n          description: \u003e-\n            Defines the number of installments. Its value needs to be greater\n            than zero.\n\n\n            Usually, the maximum allowed number of installments is capped. For example, it may not be possible to split a payment in more than 24 installments. The acquirer sets this upper limit, so its value may vary.\n          format: int32\n          type: integer\n      required:\n        - value\n    Item:\n      properties:\n        id:\n          description: The value to provide in the result.\n          type: string\n        name:\n          description: The display name.\n          type: string\n    LineItem:\n      properties:\n        amountExcludingTax:\n          description: Item amount excluding the tax, in minor units.\n          format: int64\n          type: integer\n        amountIncludingTax:\n          description: Item amount including the tax, in minor units.\n          format: int64\n          type: integer\n        description:\n          description: Description of the line item.\n          type: string\n        id:\n          description: ID of the line item.\n          type: string\n        quantity:\n          description: Number of items.\n          format: int64\n          type: integer\n        taxAmount:\n          description: Tax amount, in minor units.\n          format: int64\n          type: integer\n        taxCategory:\n          description: \"Tax category: High, Low, None, Zero\"\n          enum:\n            - High\n            - Low\n            - None\n            - Zero\n          type: string\n        taxPercentage:\n          description: Tax percentage, in minor units.\n          format: int64\n          type: integer\n    MerchantRiskIndicator:\n      properties:\n        addressMatch:\n          description: Whether the chosen delivery address is identical to the billing\n            address.\n          type: boolean\n        deliveryAddressIndicator:\n          description: Indicator regarding the delivery address.\n          enum:\n            - shipToBillingAddress\n            - shipToVerifiedAddress\n            - shipToNewAddress\n            - shipToStore\n            - digitalGoods\n            - goodsNotShipped\n            - other\n          type: string\n        deliveryEmail:\n          description: The delivery email address (for digital goods).\n          type: string\n        deliveryTimeframe:\n          description: The estimated delivery time for the shopper to receive the goods.\n          enum:\n            - electronicDelivery\n            - sameDayShipping\n            - overnightShipping\n            - twoOrMoreDaysShipping\n          type: string\n        giftCardAmount:\n          $ref: \"#/components/schemas/Amount\"\n          description: The amount of prepaid or gift cards used for this purchase.\n        giftCardCount:\n          description: Number of individual prepaid or gift cards used for this purchase.\n          format: int32\n          type: integer\n        preOrderDate:\n          description: For pre-order purchases, the expected date this product will be\n            available to the shopper.\n          format: date-time\n          type: string\n        preOrderPurchase:\n          description: Whether this transaction is for pre-ordering a product.\n          type: boolean\n        reorderItems:\n          description: Whether the shopper has already purchased the same items in the past.\n          type: boolean\n    Name:\n      properties:\n        firstName:\n          description: The first name.\n          type: string\n        gender:\n          description: |-\n            The gender.\n            \u003eThe following values are permitted: `MALE`, `FEMALE`, `UNKNOWN`.\n          enum:\n            - MALE\n            - FEMALE\n            - UNKNOWN\n          maxLength: 1\n          minLength: 1\n          type: string\n        infix:\n          description: |-\n            The name's infix, if applicable.\n            \u003eA maximum length of twenty (20) characters is imposed.\n          type: string\n        lastName:\n          description: The last name.\n          type: string\n      required:\n        - firstName\n        - lastName\n        - gender\n    PaymentMethod:\n      properties:\n        configuration:\n          description: The configuration of the payment method.\n          type: object\n        details:\n          description: All input details to be provided to complete the payment with this\n            payment method.\n          items:\n            $ref: \"#/components/schemas/InputDetail\"\n          type: array\n        group:\n          $ref: \"#/components/schemas/PaymentMethodGroup\"\n          description: The group where this payment method belongs to.\n        name:\n          description: The displayable name of this payment method.\n          type: string\n        paymentMethodData:\n          description: Echo data required to send in next calls.\n          type: string\n        supportsRecurring:\n          description: Indicates whether this payment method supports tokenization or not.\n          type: boolean\n        type:\n          description: The unique payment method code.\n          type: string\n    PaymentMethodGroup:\n      properties:\n        name:\n          description: The name of the group.\n          type: string\n        paymentMethodData:\n          description: Echo data to be used if the payment method is displayed as part of\n            this group.\n          type: string\n        type:\n          description: The unique code of the group.\n          type: string\n    PaymentMethodsGroup:\n      properties:\n        groupType:\n          description: The type to submit for any payment method in this group.\n          type: string\n        name:\n          description: The human-readable name of this group.\n          type: string\n        types:\n          description: The types of payment methods that belong in this group.\n          items:\n            type: string\n          type: array\n    PaymentMethodsRequest:\n      properties:\n        additionalData:\n          description: \u003e-\n            This field contains additional data, which may be required for a\n            particular payment request.\n\n\n            The `additionalData` object consists of entries, each of which includes the key and value. For more information on possible key-value pairs, refer to the [additionalData section](https://docs.adyen.com/developers/api-reference/payments-api#paymentrequestadditionaldata).\n          type: object\n        allowedPaymentMethods:\n          description: List of payments methods to be presented to the shopper. To refer to\n            payment methods, use their `brandCode` from [Payment methods\n            overview](https://docs.adyen.com/developers/payment-methods/payment-methods-overview).\n          items:\n            type: string\n          type: array\n        amount:\n          $ref: \"#/components/schemas/Amount\"\n          description: The amount information for the transaction. For [BIN or card\n            verification](https://docs.adyen.com/developers/payment-methods/cards/bin-data-and-card-verification)\n            requests, set amount to 0 (zero).\n        blockedPaymentMethods:\n          description: List of payments methods to be hidden from the shopper. To refer to\n            payment methods, use their `brandCode` from [Payment methods\n            overview](https://docs.adyen.com/developers/payment-methods/payment-methods-overview).\n          items:\n            type: string\n          type: array\n        channel:\n          description: \u003e-\n            The platform where a payment transaction takes place. This field can\n            be used for filtering out payment methods that are only available on\n            specific platforms. Possible values:\n\n            * iOS\n\n            * Android\n\n            * Web\n          enum:\n            - iOS\n            - Android\n            - Web\n          type: string\n        countryCode:\n          description: The shopper's country code.\n          type: string\n        merchantAccount:\n          description: The merchant account identifier, with which you want to process the\n            transaction.\n          type: string\n        shopperLocale:\n          description: The combination of a language code and a country code to specify the\n            language to be used in the payment.\n          type: string\n        shopperReference:\n          description: \u003e-\n            The shopper's reference to uniquely identify this shopper (e.g. user\n            ID or account ID).\n\n            \u003e This field is required for recurring payments.\n          type: string\n      required:\n        - merchantAccount\n        - reference\n    PaymentMethodsResponse:\n      properties:\n        groups:\n          description: Groups of payment methods.\n          items:\n            $ref: \"#/components/schemas/PaymentMethodsGroup\"\n          type: array\n        oneClickPaymentMethods:\n          description: Detailed list of one-click payment methods.\n          items:\n            $ref: \"#/components/schemas/RecurringDetail\"\n          type: array\n        paymentMethods:\n          description: Detailed list of payment methods required to generate payment forms.\n          items:\n            $ref: \"#/components/schemas/PaymentMethod\"\n          type: array\n    PaymentRequest:\n      properties:\n        accountInfo:\n          $ref: \"#/components/schemas/AccountInfo\"\n          description: Shopper account information for 3D Secure 2.0.\n        additionalData:\n          description: \u003e-\n            This field contains additional data, which may be required for a\n            particular payment request.\n\n\n            The `additionalData` object consists of entries, each of which includes the key and value. For more information on possible key-value pairs, refer to the [additionalData section](https://docs.adyen.com/developers/api-reference/payments-api#paymentrequestadditionaldata).\n          type: object\n        amount:\n          $ref: \"#/components/schemas/Amount\"\n          description: The amount information for the transaction. For [BIN or card\n            verification](https://docs.adyen.com/developers/payment-methods/cards/bin-data-and-card-verification)\n            requests, set amount to 0 (zero).\n        billingAddress:\n          $ref: \"#/components/schemas/Address\"\n          description: The address where to send the invoice.\n        browserInfo:\n          $ref: \"#/components/schemas/BrowserInfo\"\n          description: The shopper's browser information.\n        captureDelayHours:\n          description: The delay between the authorisation and scheduled auto-capture,\n            specified in hours.\n          format: int32\n          type: integer\n        channel:\n          description: \u003e-\n            The platform where a payment transaction takes place. This field is\n            optional for filtering out payment methods that are only available\n            on specific platforms. If this value is not set, then we will try to\n            infer it from the `sdkVersion` or `token`.\n\n\n            Possible values:\n\n            * iOS\n\n            * Android\n\n            * Web\n          enum:\n            - iOS\n            - Android\n            - Web\n          type: string\n        company:\n          $ref: \"#/components/schemas/Company\"\n          description: Information regarding the company\n        countryCode:\n          description: \u003e-\n            The shopper country.\n\n\n            Format: [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\n\n            Example: NL or DE\n          type: string\n        dateOfBirth:\n          description: |-\n            The shopper's date of birth.\n\n            Format [ISO-8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DD\n          format: date-time\n          type: string\n        dccQuote:\n          $ref: \"#/components/schemas/ForexQuote\"\n          description: The forex quote as returned in the response of the forex service.\n        deliveryAddress:\n          $ref: \"#/components/schemas/Address\"\n          description: The address where the purchased goods should be delivered.\n        deliveryDate:\n          description: \u003e-\n            The date and time the purchased goods should be delivered.\n\n\n            Format [ISO 8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DDThh:mm:ss.sssTZD\n\n\n            Example: 2017-07-17T13:42:40.428+01:00\n          format: date-time\n          type: string\n        deviceFingerprint:\n          description: A string containing the shopper's device fingerprint. For more\n            information, refer to [Device\n            fingerprinting](https://docs.adyen.com/developers/risk-management/device-fingerprinting).\n          type: string\n        enableOneClick:\n          description: When true and `shopperReference` is provided, the shopper will be\n            asked if the payment details should be stored for future one-click\n            payments.\n          type: boolean\n        enablePayOut:\n          description: When true and `shopperReference` is provided, the payment details\n            will be tokenized for payouts.\n          type: boolean\n        enableRecurring:\n          description: When true and `shopperReference` is provided, the payment details\n            will be tokenized for recurring payments.\n          type: boolean\n        entityType:\n          description: The type of the entity the payment is processed for.\n          enum:\n            - NaturalPerson\n            - CompanyName\n          type: string\n        fraudOffset:\n          description: An integer value that is added to the normal fraud score. The value\n            can be either positive or negative.\n          format: int32\n          type: integer\n        installments:\n          $ref: \"#/components/schemas/Installments\"\n          description: Contains installment settings. For more information, refer to\n            [Installments](https://docs.adyen.com/developers/payment-methods/installment-payments).\n        lineItems:\n          description: Line items regarding the payment.\n          items:\n            $ref: \"#/components/schemas/LineItem\"\n          type: array\n        mcc:\n          description: The [merchant category\n            code](https://en.wikipedia.org/wiki/Merchant_category_code) (MCC) is\n            a four-digit number, which relates to a particular market segment.\n            This code reflects the predominant activity that is conducted by the\n            merchant.\n          type: string\n        merchantAccount:\n          description: The merchant account identifier, with which you want to process the\n            transaction.\n          type: string\n        merchantOrderReference:\n          description: \u003e-\n            This reference allows linking multiple transactions to each other.\n\n            \u003e We strongly recommend you send the `merchantOrderReference` value to benefit from linking payment requests when authorisation retries take place. In addition, we recommend you provide `retry.orderAttemptNumber`, `retry.chainAttemptNumber`, and `retry.skipRetry` values in `PaymentRequest.additionalData`.\n          type: string\n        merchantRiskIndicator:\n          $ref: \"#/components/schemas/MerchantRiskIndicator\"\n          description: Additional risk fields for 3D Secure 2.0.\n        metadata:\n          description: \u003e-\n            Metadata consists of entries, each of which includes a key and a\n            value.\n\n            Limitations: Error \"177\", \"Metadata size exceeds limit\"\n          type: object\n        orderReference:\n          description: The order reference to link multiple partial payments.\n          type: string\n        paymentMethod:\n          description: The collection that contains the type of the payment method and its\n            specific information (e.g. `idealIssuer`).\n          type: object\n        recurringProcessingModel:\n          description: \u003e-\n            Defines a recurring payment type.\n\n            Allowed values:\n\n            * `Subscription` – A transaction for a fixed or variable amount, which follows a fixed schedule.\n\n            * `CardOnFile` – Card details are stored to enable one-click or omnichannel journeys, or simply to streamline the checkout process. Any subscription not following a fixed schedule is also considered a card-on-file transaction.\n          enum:\n            - CardOnFile\n            - Subscription\n          type: string\n        redirectFromIssuerMethod:\n          description: Specifies the redirect method (GET or POST) when redirecting back\n            from the issuer.\n          type: string\n        redirectToIssuerMethod:\n          description: Specifies the redirect method (GET or POST) when redirecting to the\n            issuer.\n          type: string\n        reference:\n          description: \u003e-\n            The reference to uniquely identify a payment. This reference is used\n            in all communication with you about the payment status. We recommend\n            using a unique value per payment; however, it is not a requirement.\n\n            If you need to provide multiple references for a transaction, separate them with hyphens (\"-\").\n\n            Maximum length: 80 characters.\n          type: string\n        returnUrl:\n          description: The URL to return to.\n          type: string\n        sessionValidity:\n          description: The maximum validity of the session.\n          type: string\n        shopperEmail:\n          description: The shopper's email address. We recommend that you provide this\n            data, as it is used in velocity fraud checks.\n          type: string\n        shopperIP:\n          description: \u003e-\n            The shopper's IP address. We recommend that you provide this data,\n            as it is used in a number of risk checks (for instance, number of\n            payment attempts or location-based checks).\n\n            \u003e This field is mandatory for some merchants depending on your business model. For more information, [contact Support](https://support.adyen.com/hc/en-us/requests/new).\n          type: string\n        shopperInteraction:\n          description: \u003e-\n            Specifies the sales channel, through which the shopper gives their\n            card details, and whether the shopper is a returning customer.\n\n            For the web service API, Adyen assumes Ecommerce shopper interaction by default.\n\n\n            This field has the following possible values:\n\n            * `Ecommerce` - Online transactions where the cardholder is present (online). For better authorisation rates, we recommend sending the card security code (CSC) along with the request.\n\n            * `ContAuth` - Card on file and/or subscription transactions, where the cardholder is known to the merchant (returning customer). If the shopper is present (online), you can supply also the CSC to improve authorisation (one-click payment).\n\n            * `Moto` - Mail-order and telephone-order transactions where the shopper is in contact with the merchant via email or telephone.\n\n            * `POS` - Point-of-sale transactions where the shopper is physically present to make a payment using a secure payment terminal.\n          enum:\n            - Ecommerce\n            - ContAuth\n            - Moto\n            - POS\n          type: string\n        shopperLocale:\n          description: The combination of a language code and a country code to specify the\n            language to be used in the payment.\n          type: string\n        shopperName:\n          $ref: \"#/components/schemas/Name\"\n          description: The shopper's full name and gender (if specified).\n        shopperReference:\n          description: \u003e-\n            The shopper's reference to uniquely identify this shopper (e.g. user\n            ID or account ID).\n\n            \u003e This field is required for recurring payments.\n          type: string\n        shopperStatement:\n          description: The text to appear on the shopper's bank statement.\n          type: string\n        socialSecurityNumber:\n          description: The shopper's social security number.\n          type: string\n        splits:\n          description: The details of how the payment should be split when distributing a\n            payment to a MarketPay Marketplace and its Accounts.\n          items:\n            $ref: \"#/components/schemas/Split\"\n          type: array\n        telephoneNumber:\n          description: The shopper's telephone number.\n          type: string\n        threeDS2RequestData:\n          $ref: \"#/components/schemas/ThreeDS2RequestData\"\n          description: Request fields for 3D Secure 2.0.\n        trustedShopper:\n          description: Set to true if the payment should be routed to a trusted MID.\n          type: boolean\n      required:\n        - merchantAccount\n        - reference\n        - amount\n        - returnUrl\n        - paymentMethod\n    PaymentResponse:\n      properties:\n        additionalData:\n          description: This field contains additional data, which may be required to return\n            in a particular payment response. To choose data fields to be\n            returned, go to **Customer Area** \u003e **Account** \u003e **API URLs**.\n          type: object\n        details:\n          description: When non-empty, contains all the fields that you must submit to the\n            `/payments/details` endpoint.\n          items:\n            $ref: \"#/components/schemas/InputDetail\"\n          type: array\n        fraudResult:\n          $ref: \"#/components/schemas/FraudResult\"\n          description: The fraud result properties of the payment.\n        paymentData:\n          description: When non-empty, contains a value that you must submit to the\n            `/payments/details` endpoint.\n          type: string\n        pspReference:\n          description: \u003e-\n            Adyen's 16-character string reference associated with the\n            transaction/request. This value is globally unique; quote it when\n            communicating with us about this request.\n\n\n            \u003e `pspReference` is returned only for non-redirect payment methods.\n          type: string\n        redirect:\n          $ref: \"#/components/schemas/Redirect\"\n          description: When the payment flow requires a redirect, this object contains\n            information about the redirect URL.\n        refusalReason:\n          description: \u003e-\n            If the payment's authorisation is refused or an error occurs during\n            authorisation, this field holds Adyen's mapped reason for the\n            refusal or a description of the error.\n\n\n            When a transaction fails, the authorisation response includes `resultCode` and `refusalReason` values.\n          type: string\n        refusalReasonCode:\n          description: Code that specifies the refusal reason. For more information, see\n            [Authorisation refusal\n            reasons](https://docs.adyen.com/developers/development-resources/response-handling#authorisationrefusalreasons).\n          type: string\n        resultCode:\n          description: \u003e-\n            The result of the payment. Possible values:\n\n\n            * **Authorised** – Indicates the payment authorisation was successfully completed. This state serves as an indicator to proceed with the delivery of goods and services. This is a final state.\n\n            * **Refused** – Indicates the payment was refused. The reason is given in the `refusalReason` field. This is a final state.\n\n            * **RedirectShopper** – Indicates the shopper should be redirected to an external web page or app to complete the authorisation.\n\n            * **Received** – Indicates the payment has successfully been received by Adyen, and will be processed. This is the initial state for all payments.\n\n            * **Cancelled** – Indicates the payment has been cancelled (either by the shopper or the merchant) before processing was completed. This is a final state.\n\n            * **Pending** – Indicates that it is not possible to obtain the final status of the payment. This can happen if the systems providing final status information for the payment are unavailable, or if the shopper needs to take further action to complete the payment. For more information on handling a pending payment, refer to [Payments with pending status](https://docs.adyen.com/developers/development-resources/payments-with-pending-status).\n\n            * **Error** – Indicates an error occurred during processing of the payment. The reason is given in the `refusalReason` field. This is a final state.\n          enum:\n            - Authorised\n            - PartiallyAuthorised\n            - Refused\n            - Error\n            - Cancelled\n            - Received\n            - RedirectShopper\n          type: string\n    PaymentSetupRequest:\n      properties:\n        additionalData:\n          description: \u003e-\n            This field contains additional data, which may be required for a\n            particular payment request.\n\n\n            The `additionalData` object consists of entries, each of which includes the key and value. For more information on possible key-value pairs, refer to the [additionalData section](https://docs.adyen.com/developers/api-reference/payments-api#paymentrequestadditionaldata).\n          type: object\n        allowedPaymentMethods:\n          description: List of payments methods to be presented to the shopper. To refer to\n            payment methods, use their `brandCode` from [Payment methods\n            overview](https://docs.adyen.com/developers/payment-methods/payment-methods-overview).\n          items:\n            type: string\n          type: array\n        amount:\n          $ref: \"#/components/schemas/Amount\"\n          description: The amount information for the transaction. For [BIN or card\n            verification](https://docs.adyen.com/developers/payment-methods/cards/bin-data-and-card-verification)\n            requests, set amount to 0 (zero).\n        billingAddress:\n          $ref: \"#/components/schemas/Address\"\n          description: The address where to send the invoice.\n        blockedPaymentMethods:\n          description: List of payments methods to be hidden from the shopper. To refer to\n            payment methods, use their `brandCode` from [Payment methods\n            overview](https://docs.adyen.com/developers/payment-methods/payment-methods-overview).\n          items:\n            type: string\n          type: array\n        captureDelayHours:\n          description: The delay between the authorisation and scheduled auto-capture,\n            specified in hours.\n          format: int32\n          type: integer\n        channel:\n          description: \u003e-\n            The platform where a payment transaction takes place. This field is\n            optional for filtering out payment methods that are only available\n            on specific platforms. If this value is not set, then we will try to\n            infer it from the `sdkVersion` or `token`.\n\n\n            Possible values:\n\n            * iOS\n\n            * Android\n\n            * Web\n          enum:\n            - iOS\n            - Android\n            - Web\n          type: string\n        company:\n          $ref: \"#/components/schemas/Company\"\n          description: Information regarding the company\n        configuration:\n          $ref: \"#/components/schemas/Configuration\"\n          description: Specify configurations to enable additional features.\n        countryCode:\n          description: \u003e-\n            The shopper country.\n\n\n            Format: [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\n\n            Example: NL or DE\n          type: string\n        dateOfBirth:\n          description: |-\n            The shopper's date of birth.\n\n            Format [ISO-8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DD\n          format: date-time\n          type: string\n        dccQuote:\n          $ref: \"#/components/schemas/ForexQuote\"\n          description: The forex quote as returned in the response of the forex service.\n        deliveryAddress:\n          $ref: \"#/components/schemas/Address\"\n          description: The address where the purchased goods should be delivered.\n        deliveryDate:\n          description: \u003e-\n            The date and time the purchased goods should be delivered.\n\n\n            Format [ISO 8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DDThh:mm:ss.sssTZD\n\n\n            Example: 2017-07-17T13:42:40.428+01:00\n          format: date-time\n          type: string\n        enableOneClick:\n          description: When true and `shopperReference` is provided, the shopper will be\n            asked if the payment details should be stored for future one-click\n            payments.\n          type: boolean\n        enablePayOut:\n          description: When true and `shopperReference` is provided, the payment details\n            will be tokenized for payouts.\n          type: boolean\n        enableRecurring:\n          description: When true and `shopperReference` is provided, the payment details\n            will be tokenized for recurring payments.\n          type: boolean\n        entityType:\n          description: The type of the entity the payment is processed for.\n          enum:\n            - NaturalPerson\n            - CompanyName\n          type: string\n        fraudOffset:\n          description: An integer value that is added to the normal fraud score. The value\n            can be either positive or negative.\n          format: int32\n          type: integer\n        installments:\n          $ref: \"#/components/schemas/Installments\"\n          description: Contains installment settings. For more information, refer to\n            [Installments](https://docs.adyen.com/developers/payment-methods/installment-payments).\n        lineItems:\n          description: Line items regarding the payment.\n          items:\n            $ref: \"#/components/schemas/LineItem\"\n          type: array\n        mcc:\n          description: The [merchant category\n            code](https://en.wikipedia.org/wiki/Merchant_category_code) (MCC) is\n            a four-digit number, which relates to a particular market segment.\n            This code reflects the predominant activity that is conducted by the\n            merchant.\n          type: string\n        merchantAccount:\n          description: The merchant account identifier, with which you want to process the\n            transaction.\n          type: string\n        merchantOrderReference:\n          description: \u003e-\n            This reference allows linking multiple transactions to each other.\n\n            \u003e We strongly recommend you send the `merchantOrderReference` value to benefit from linking payment requests when authorisation retries take place. In addition, we recommend you provide `retry.orderAttemptNumber`, `retry.chainAttemptNumber`, and `retry.skipRetry` values in `PaymentRequest.additionalData`.\n          type: string\n        metadata:\n          description: \u003e-\n            Metadata consists of entries, each of which includes a key and a\n            value.\n\n            Limitations: Error \"177\", \"Metadata size exceeds limit\"\n          type: object\n        orderReference:\n          description: The order reference to link multiple partial payments.\n          type: string\n        origin:\n          description: \u003e-\n            Required for the Web integration.\n\n\n            Set this parameter to the page URL, on which you are loading the SDK.\n          type: string\n        reference:\n          description: \u003e-\n            The reference to uniquely identify a payment. This reference is used\n            in all communication with you about the payment status. We recommend\n            using a unique value per payment; however, it is not a requirement.\n\n            If you need to provide multiple references for a transaction, separate them with hyphens (\"-\").\n\n            Maximum length: 80 characters.\n          type: string\n        returnUrl:\n          description: The URL to return to.\n          type: string\n        sdkVersion:\n          description: The version of the SDK you are using (for Web SDK integrations only).\n          type: string\n        sessionValidity:\n          description: The maximum validity of the session.\n          type: string\n        shopperEmail:\n          description: The shopper's email address. We recommend that you provide this\n            data, as it is used in velocity fraud checks.\n          type: string\n        shopperIP:\n          description: \u003e-\n            The shopper's IP address. We recommend that you provide this data,\n            as it is used in a number of risk checks (for instance, number of\n            payment attempts or location-based checks).\n\n            \u003e This field is mandatory for some merchants depending on your business model. For more information, [contact Support](https://support.adyen.com/hc/en-us/requests/new).\n          type: string\n        shopperInteraction:\n          description: \u003e-\n            Specifies the sales channel, through which the shopper gives their\n            card details, and whether the shopper is a returning customer.\n\n            For the web service API, Adyen assumes Ecommerce shopper interaction by default.\n\n\n            This field has the following possible values:\n\n            * `Ecommerce` - Online transactions where the cardholder is present (online). For better authorisation rates, we recommend sending the card security code (CSC) along with the request.\n\n            * `ContAuth` - Card on file and/or subscription transactions, where the cardholder is known to the merchant (returning customer). If the shopper is present (online), you can supply also the CSC to improve authorisation (one-click payment).\n\n            * `Moto` - Mail-order and telephone-order transactions where the shopper is in contact with the merchant via email or telephone.\n\n            * `POS` - Point-of-sale transactions where the shopper is physically present to make a payment using a secure payment terminal.\n          enum:\n            - Ecommerce\n            - ContAuth\n            - Moto\n            - POS\n          type: string\n        shopperLocale:\n          description: The combination of a language code and a country code to specify the\n            language to be used in the payment.\n          type: string\n        shopperName:\n          $ref: \"#/components/schemas/Name\"\n          description: The shopper's full name and gender (if specified).\n        shopperReference:\n          description: \u003e-\n            The shopper's reference to uniquely identify this shopper (e.g. user\n            ID or account ID).\n\n            \u003e This field is required for recurring payments.\n          type: string\n        shopperStatement:\n          description: The text to appear on the shopper's bank statement.\n          type: string\n        socialSecurityNumber:\n          description: The shopper's social security number.\n          type: string\n        splits:\n          description: The details of how the payment should be split when distributing a\n            payment to a MarketPay Marketplace and its Accounts.\n          items:\n            $ref: \"#/components/schemas/Split\"\n          type: array\n        telephoneNumber:\n          description: The shopper's telephone number.\n          type: string\n        token:\n          description: \u003e-\n            The token obtained when initializing the SDK.\n\n\n            \u003e This parameter is required for iOS and Android; not required for Web.\n          type: string\n        trustedShopper:\n          description: Set to true if the payment should be routed to a trusted MID.\n          type: boolean\n      required:\n        - merchantAccount\n        - reference\n        - amount\n        - returnUrl\n        - countryCode\n    PaymentSetupResponse:\n      properties:\n        paymentSession:\n          description: The encoded payment session that you need to pass to the SDK.\n          type: string\n    PaymentVerificationRequest:\n      properties:\n        payload:\n          description: Encrypted and signed payment result data. You should receive this\n            value from the Checkout SDK after the shopper completes the payment.\n          type: string\n      required:\n        - payload\n    PaymentVerificationResponse:\n      properties:\n        additionalData:\n          description: This field contains additional data, which may be required to return\n            in a particular payment response. To choose data fields to be\n            returned, go to **Customer Area** \u003e **Account** \u003e **API URLs**.\n          type: object\n        fraudResult:\n          $ref: \"#/components/schemas/FraudResult\"\n          description: The fraud result properties of the payment.\n        merchantReference:\n          description: A unique value that you provided in the initial `/paymentSession`\n            request as a `reference` field.\n          type: string\n        paymentMethod:\n          description: The payment method used in the transaction.\n          type: string\n        pspReference:\n          description: \u003e-\n            Adyen's 16-character string reference associated with the\n            transaction/request. This value is globally unique; quote it when\n            communicating with us about this request.\n\n\n            \u003e `pspReference` is returned only for non-redirect payment methods.\n          type: string\n        refusalReason:\n          description: \u003e-\n            If the payment's authorisation is refused or an error occurs during\n            authorisation, this field holds Adyen's mapped reason for the\n            refusal or a description of the error.\n\n\n            When a transaction fails, the authorisation response includes `resultCode` and `refusalReason` values.\n          type: string\n        refusalReasonCode:\n          description: Code that specifies the refusal reason. For more information, see\n            [Authorisation refusal\n            reasons](https://docs.adyen.com/developers/development-resources/response-handling#authorisationrefusalreasons).\n          type: string\n        resultCode:\n          description: \u003e-\n            The result of the payment. Possible values:\n\n\n            * **Authorised** – Indicates the payment authorisation was successfully completed. This state serves as an indicator to proceed with the delivery of goods and services. This is a final state.\n\n            * **Refused** – Indicates the payment was refused. The reason is given in the `refusalReason` field. This is a final state.\n\n            * **RedirectShopper** – Indicates the shopper should be redirected to an external web page or app to complete the authorisation.\n\n            * **Received** – Indicates the payment has successfully been received by Adyen, and will be processed. This is the initial state for all payments.\n\n            * **Cancelled** – Indicates the payment has been cancelled (either by the shopper or the merchant) before processing was completed. This is a final state.\n\n            * **Pending** – Indicates that it is not possible to obtain the final status of the payment. This can happen if the systems providing final status information for the payment are unavailable, or if the shopper needs to take further action to complete the payment. For more information on handling a pending payment, refer to [Payments with pending status](https://docs.adyen.com/developers/development-resources/payments-with-pending-status).\n\n            * **Error** – Indicates an error occurred during processing of the payment. The reason is given in the `refusalReason` field. This is a final state.\n          enum:\n            - Authorised\n            - PartiallyAuthorised\n            - Refused\n            - Error\n            - Cancelled\n            - Received\n            - RedirectShopper\n          type: string\n        serviceError:\n          $ref: \"#/components/schemas/ServiceError\"\n          description: The type of the error.\n        shopperLocale:\n          description: The shopperLocale value provided in the payment request.\n          type: string\n      required:\n        - merchantReference\n        - paymentMethod\n        - shopperLocale\n    Recurring:\n      properties:\n        contract:\n          description: \u003e-\n            The type of recurring contract to be used.\n\n            Possible values:\n\n            * `ONECLICK` – Payment details can be used to initiate a one-click payment, where the shopper enters the [card security code (CVC/CVV)](https://docs.adyen.com/developers/payment-glossary#cardsecuritycodecvccvvcid).\n\n            * `RECURRING` – Payment details can be used without the card security code to initiate [card-not-present transactions](https://docs.adyen.com/developers/payment-glossary#cardnotpresentcnp).\n\n            * `ONECLICK,RECURRING` – Payment details can be used regardless of whether the shopper is on your site or not.\n\n            * `PAYOUT` – Payment details can be used to [make a payout](https://docs.adyen.com/developers/features/third-party-payouts).\n          enum:\n            - ONECLICK\n            - RECURRING\n            - PAYOUT\n          type: string\n        recurringDetailName:\n          description: A descriptive name for this detail.\n          type: string\n        recurringExpiry:\n          description: Date after which no further authorisations shall be performed. Only\n            for 3D Secure 2.0.\n          format: date-time\n          type: string\n        recurringFrequency:\n          description: Minimum number of days between authorisations. Only for 3D Secure\n            2.0.\n          type: string\n        tokenService:\n          description: The name of the token service.\n          enum:\n            - VISATOKENSERVICE\n            - MCTOKENSERVICE\n          type: string\n    RecurringDetail:\n      properties:\n        configuration:\n          description: The configuration of the payment method.\n          type: object\n        details:\n          description: All input details to be provided to complete the payment with this\n            payment method.\n          items:\n            $ref: \"#/components/schemas/InputDetail\"\n          type: array\n        group:\n          $ref: \"#/components/schemas/PaymentMethodGroup\"\n          description: The group where this payment method belongs to.\n        name:\n          description: The displayable name of this payment method.\n          type: string\n        paymentMethodData:\n          description: Echo data required to send in next calls.\n          type: string\n        recurringDetailReference:\n          description: The reference that uniquely identifies the recurring detail.\n          type: string\n        storedDetails:\n          $ref: \"#/components/schemas/StoredDetails\"\n          description: Contains information on previously stored payment details.\n        supportsRecurring:\n          description: Indicates whether this payment method supports tokenization or not.\n          type: boolean\n        type:\n          description: The unique payment method code.\n          type: string\n    Redirect:\n      properties:\n        data:\n          description: When the redirect URL must be accessed via POST, use this data to\n            post to the redirect URL.\n          type: object\n        method:\n          description: |-\n            The web method that you must use to access the redirect URL.\n\n            Possible values: GET, POST.\n          enum:\n            - GET\n            - POST\n          type: string\n        url:\n          description: The URL, to which you must redirect a shopper to complete a payment.\n          type: string\n    SDKEphemPubKey:\n      properties:\n        crv:\n          description: The `crv` value as received from the 3D Secure 2.0 SDK.\n          type: string\n        kty:\n          description: The `kty` value as received from the 3D Secure 2.0 SDK.\n          type: string\n        x:\n          description: The `x` value as received from the 3D Secure 2.0 SDK.\n          type: string\n        y:\n          description: The `y` value as received from the 3D Secure 2.0 SDK.\n          type: string\n    ServiceError:\n      properties:\n        errorCode:\n          type: string\n        errorType:\n          type: string\n        message:\n          type: string\n    ShopperInput:\n      properties:\n        billingAddress:\n          description: |-\n            Specifies visibility of billing address fields.\n\n            Permitted values:\n            * editable\n            * hidden\n            * readOnly\n          enum:\n            - editable\n            - hidden\n            - readOnly\n          type: string\n        deliveryAddress:\n          description: |-\n            Specifies visibility of delivery address fields.\n\n            Permitted values:\n            * editable\n            * hidden\n            * readOnly\n          enum:\n            - editable\n            - hidden\n            - readOnly\n          type: string\n        personalDetails:\n          description: |-\n            Specifies visibility of personal details.\n\n            Permitted values:\n            * editable\n            * hidden\n            * readOnly\n          enum:\n            - editable\n            - hidden\n            - readOnly\n          type: string\n    Split:\n      properties:\n        account:\n          description: |-\n            The account to which this split applies.\n\n            \u003eRequired if the type is `MarketPlace`.\n          type: string\n        amount:\n          $ref: \"#/components/schemas/SplitAmount\"\n          description: The amount of this split.\n        description:\n          description: A description of this split.\n          type: string\n        reference:\n          description: \u003e-\n            The reference of this split. Used to link other operations (e.g.\n            captures and refunds) to this split.\n\n\n            \u003eRequired if the type is `MarketPlace`.\n          type: string\n        type:\n          description: \u003e-\n            The type of this split.\n\n\n            \u003ePermitted values: `Default`, `PaymentFee`, `VAT`, `Commission`, `MarketPlace`, `Verification`.\n          enum:\n            - Commission\n            - Default\n            - MarketPlace\n            - PaymentFee\n            - VAT\n            - Verification\n          type: string\n      required:\n        - amount\n        - type\n    SplitAmount:\n      properties:\n        currency:\n          description: \u003e-\n            The three-character [ISO currency\n            code](https://docs.adyen.com/developers/development-resources/currency-codes).\n\n\n            If this value is not provided, the currency in which the payment is made will be used.\n          maxLength: 3\n          minLength: 3\n          type: string\n        value:\n          description: \u003e-\n            The payable amount that can be charged for the transaction.\n\n\n            The transaction amount needs to be represented in minor units according to the [following table](https://docs.adyen.com/developers/development-resources/currency-codes).\n          format: int64\n          type: integer\n      required:\n        - value\n    StoredDetails:\n      properties:\n        bank:\n          $ref: \"#/components/schemas/BankAccount\"\n          description: The stored bank account.\n        card:\n          $ref: \"#/components/schemas/Card\"\n          description: The stored card information.\n        emailAddress:\n          description: The email associated with stored payment details.\n          type: string\n    SubInputDetail:\n      properties:\n        configuration:\n          description: Configuration parameters for the required input.\n          type: object\n        items:\n          description: In case of a select, the items to choose from.\n          items:\n            $ref: \"#/components/schemas/Item\"\n          type: array\n        key:\n          description: The value to provide in the result.\n          type: string\n        optional:\n          description: True if this input is optional to provide.\n          type: boolean\n        type:\n          description: The type of the required input.\n          type: string\n        value:\n          description: The value can be pre-filled, if available.\n          type: string\n    ThreeDS2RequestData:\n      properties:\n        authenticationOnly:\n          description: If set to true, you will only do the 3D Secure 2.0 authentication,\n            not the payment authorization.\n          type: boolean\n        challengeIndicator:\n          description: Possibility to specify a preference for receiving a challenge from\n            the issuer.\n          enum:\n            - noPreference\n            - requestChallenge\n            - requestNoChallenge\n          type: string\n        notificationURL:\n          description: |-\n            URL the `CRes` value will be sent.\n            Only for `deviceChannel` set to **browser**.\n          type: string\n        threeDSRequestorURL:\n          description: URL of the (customer service) website that will be shown to the\n            shopper in case of technical errors during the 3DS2.0 process.\n          type: string\n      required:\n        - deviceChannel\n    ThreeDSecureData:\n      properties:\n        authenticationResponse:\n          description: The authentication response if the shopper was redirected.\n          enum:\n            - Y\n            - N\n            - U\n            - A\n          type: string\n        cavv:\n          description: The cardholder authentication value (base64 encoded, 20 bytes in a\n            decoded form).\n          format: byte\n          type: string\n        cavvAlgorithm:\n          description: The CAVV algorithm used.\n          type: string\n        directoryResponse:\n          description: The enrollment response from the 3D directory server.\n          enum:\n            - Y\n            - N\n            - U\n            - E\n          type: string\n        eci:\n          description: The electronic commerce indicator.\n          type: string\n        threeDSVersion:\n          description: The version of the 3D Secure protocol.\n          type: string\n        xid:\n          description: The transaction identifier (base64 encoded, 20 bytes in a decoded\n            form).\n          format: byte\n          type: string\nx-groups:\n  - SDK Integration\n  - API Integration\n"
		}
	},
	"Error": "parse: parse spec: paths: /paymentSession: post: operation \"\": requestBody: content: \"application/json\": parse schema: parse schema: resolve \"#/components/schemas/PaymentSetupRequest\": parse schema: property \"configuration\": parse schema: resolve \"#/components/schemas/Configuration\": parse schema: property \"avs\": parse schema: resolve \"#/components/schemas/Avs\": parse schema: property \"enabled\": parse enum values: parse value \"true\": expected type \"string\", got \"bool\""
}