{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/GoogleCloudPlatform/apigee-anthos-service-mesh-demo"
		},
		"file": {
			"name": "productservices.yaml",
			"size": 0,
			"path": "portal/api-catalog/apis/product-services/productservices.yaml",
			"byteSize": 4699,
			"content": "# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nopenapi: 3.0.2\ninfo:\n  description: API for managing Product resources.\n  version: 1.0.0\n  title: Products API\nservers:\n- url: \"https://{APIGEE_HOST}/v1/productservices\"\nsecurity:\n  - ApiKeyAuth: [] \npaths:\n  /products:\n    get:\n      summary: List 'Product' objects.\n      description: Retrieve a page of 'Product' objects from the server.  Follows\n        the standards for parameters from the [List AIP](  https://aip.dev/132).\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  products:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/ListOfProducts'\n    post:\n      summary: Creates a new 'Product' object.\n      description: Creates a new 'Product' object.\n      requestBody:\n        description: The Product object to create.\n        required: false\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Product'\n      responses:\n        \"201\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Product'\n  /products/{product}:\n    get:\n      summary: Retrieve Product object.\n      description: Retrieve a single Product object.\n      parameters:\n      - name: product\n        in: path\n        required: true\n        description: Unique identifier of the desired Product object.\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Product'\n        \"404\":\n          description: Product was not found.\n    put:\n      summary: Update Product object.\n      description: Update a single Product object.\n      parameters:\n      - name: product\n        in: path\n        required: true\n        description: Unique identifier of the desired Product object.\n        schema:\n          type: string\n      requestBody:\n        description: The Product object to update.\n        required: false\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Product'\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Product'\n        \"404\":\n          description: Product was not found.\n    delete:\n      summary: Delete Product object.\n      description: Delete a single Product object.\n      parameters:\n      - name: product\n        in: path\n        required: true\n        description: Unique identifier of the desired Product object.\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Successful response\n        \"404\":\n          description: Product was not found.\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      name: apikey\n      in: query\n  schemas:\n    ListOfProducts:\n      title: List of Product objects\n      type: array\n      items:\n        $ref: '#/components/schemas/Product'\n    Product:\n      title: Product\n      type: object\n      properties:\n        categories:\n          description: The categories of the Product\n          type: string\n        description:\n          description: The description of the Product\n          type: string\n          example: Add a modern touch to your outfits with these sleek aviator sunglasses.\n        id:\n          description: The id of the Product\n          type: string\n          example: OLJCESPC7Z\n        name:\n          description: The name of the Product\n          type: string\n          example: Sunglasses\n        picture:\n          description: The picture of the Product\n          type: string\n          example: /static/img/products/sunglasses.jpg\n        priceUsd:\n          description: The priceUsd of the Product\n          type: string\n",
			"canonicalURL": "/github.com/GoogleCloudPlatform/apigee-anthos-service-mesh-demo@7813d27c51acf84648330f531364085459edbcbf/-/blob/portal/api-catalog/apis/product-services/productservices.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/GoogleCloudPlatform/apigee-anthos-service-mesh-demo/blob/7813d27c51acf84648330f531364085459edbcbf/portal/api-catalog/apis/product-services/productservices.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse servers: at 1:3303: path parameter not specified: \"APIGEE_HOST\""
}