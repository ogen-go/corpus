{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackrox/jenkins-plugin"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "stackrox-container-image-scanner/api.yaml",
			"byteSize": 433192,
			"content": "openapi: 3.0.0\ninfo:\n  title: API Reference\n  version: '1'\n  description: API reference for the StackRox Security Platform\n  contact:\n    email: support@stackrox.com\n  license:\n    name: All Rights Reserved\n    url: https://www.stackrox.com/\npaths:\n  /v1/alerts:\n    get:\n      summary: List returns the slim list version of the alerts.\n      operationId: AlertService_ListAlerts\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1ListAlertsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.limit\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.offset\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.sortOption.field\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.sortOption.reversed\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - AlertService\n    delete:\n      operationId: AlertService_DeleteAlerts\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1DeleteAlertsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query.query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: query.pagination.limit\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: query.pagination.offset\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: query.pagination.sortOption.field\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: query.pagination.sortOption.reversed\n          in: query\n          required: false\n          schema:\n            type: boolean\n        - name: confirm\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - AlertService\n  /v1/alerts/resolve:\n    patch:\n      summary: ResolveAlertsByQuery marks alerts matching search query as resolved.\n      operationId: AlertService_ResolveAlerts\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1ResolveAlertsRequest'\n        required: true\n      tags:\n        - AlertService\n  /v1/alerts/summary/counts:\n    get:\n      summary: GetAlertsCounts returns the number of alerts in the requested cluster or category.\n      operationId: AlertService_GetAlertsCounts\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetAlertsCountsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: request.query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: request.pagination.limit\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: request.pagination.offset\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: request.pagination.sortOption.field\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: request.pagination.sortOption.reversed\n          in: query\n          required: false\n          schema:\n            type: boolean\n        - name: groupBy\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - UNSET\n              - CATEGORY\n              - CLUSTER\n            default: UNSET\n      tags:\n        - AlertService\n  /v1/alerts/summary/groups:\n    get:\n      summary: GetAlertsGroup returns alerts grouped by policy.\n      operationId: AlertService_GetAlertsGroup\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetAlertsGroupResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.limit\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.offset\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.sortOption.field\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.sortOption.reversed\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - AlertService\n  /v1/alerts/summary/timeseries:\n    get:\n      summary: GetAlertTimeseries returns the alerts sorted by time.\n      operationId: AlertService_GetAlertTimeseries\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetAlertTimeseriesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.limit\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.offset\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.sortOption.field\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.sortOption.reversed\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - AlertService\n  /v1/alerts/{id}:\n    get:\n      summary: GetAlert returns the alert given its id.\n      operationId: AlertService_GetAlert\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageAlert'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - AlertService\n  /v1/alerts/{id}/resolve:\n    patch:\n      summary: ResolveAlert marks the given alert (by ID) as resolved.\n      operationId: AlertService_ResolveAlert\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1ResolveAlertRequest'\n        required: true\n      tags:\n        - AlertService\n  /v1/alerts/{id}/snooze:\n    patch:\n      summary: SnoozeAlert is deprecated.\n      operationId: AlertService_SnoozeAlert\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1SnoozeAlertRequest'\n        required: true\n      tags:\n        - AlertService\n  /v1/alertscount:\n    get:\n      summary: CountAlerts counts how many alerts match the get request.\n      operationId: AlertService_CountAlerts\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1CountAlertsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.limit\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.offset\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.sortOption.field\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.sortOption.reversed\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - AlertService\n  /v1/apitokens:\n    get:\n      summary: GetAPITokens returns all the API tokens.\n      operationId: APITokenService_GetAPITokens\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetAPITokensResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: revoked\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - APITokenService\n  /v1/apitokens/generate:\n    post:\n      summary: GenerateToken generates API token for a given user and role.\n      operationId: APITokenService_GenerateToken\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GenerateTokenResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1GenerateTokenRequest'\n        required: true\n      tags:\n        - APITokenService\n  /v1/apitokens/revoke/{id}:\n    patch:\n      summary: RevokeToken removes the API token for a given id.\n      operationId: APITokenService_RevokeToken\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - APITokenService\n  /v1/apitokens/{id}:\n    get:\n      summary: GetAPIToken returns API token metadata for a given id.\n      operationId: APITokenService_GetAPIToken\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageTokenMetadata'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - APITokenService\n  /v1/authProviders:\n    get:\n      operationId: AuthProviderService_GetAuthProviders\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetAuthProvidersResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: name\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: type\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - AuthProviderService\n    post:\n      operationId: AuthProviderService_PostAuthProvider\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageAuthProvider'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        $ref: '#/components/requestBodies/storageAuthProvider'\n      tags:\n        - AuthProviderService\n  /v1/authProviders/exchangeToken:\n    post:\n      operationId: AuthProviderService_ExchangeToken\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1ExchangeTokenResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1ExchangeTokenRequest'\n        required: true\n      tags:\n        - AuthProviderService\n  /v1/authProviders/{id}:\n    get:\n      operationId: AuthProviderService_GetAuthProvider\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageAuthProvider'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - AuthProviderService\n    delete:\n      operationId: AuthProviderService_DeleteAuthProvider\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - AuthProviderService\n    put:\n      operationId: AuthProviderService_PutAuthProvider\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageAuthProvider'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: '#/components/requestBodies/storageAuthProvider'\n      tags:\n        - AuthProviderService\n    patch:\n      operationId: AuthProviderService_UpdateAuthProvider\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageAuthProvider'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1UpdateAuthProviderRequest'\n        required: true\n      tags:\n        - AuthProviderService\n  /v1/availableAuthProviders:\n    get:\n      operationId: AuthProviderService_ListAvailableProviderTypes\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1AvailableProviderTypesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - AuthProviderService\n  /v1/login/authproviders:\n    get:\n      operationId: AuthProviderService_GetLoginAuthProviders\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetLoginAuthProvidersResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - AuthProviderService\n  /v1/auth/status:\n    get:\n      operationId: AuthService_GetAuthStatus\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1AuthStatus'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - AuthService\n  /v1/externalbackups:\n    get:\n      summary: GetExternalBackups returns all external backup configurations.\n      operationId: ExternalBackupService_GetExternalBackups\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetExternalBackupsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - ExternalBackupService\n    post:\n      summary: PostExternalBackup creates an external backup configuration.\n      operationId: ExternalBackupService_PostExternalBackup\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageExternalBackup'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        $ref: '#/components/requestBodies/storageExternalBackup'\n      tags:\n        - ExternalBackupService\n  /v1/externalbackups/test:\n    post:\n      summary: TestExternalBackup tests an external backup configuration.\n      operationId: ExternalBackupService_TestExternalBackup\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        $ref: '#/components/requestBodies/storageExternalBackup'\n      tags:\n        - ExternalBackupService\n  /v1/externalbackups/test/updated:\n    post:\n      summary: TestUpdatedExternalBackup checks if the given external backup is correctly configured, with optional stored credential reconciliation.\n      operationId: ExternalBackupService_TestUpdatedExternalBackup\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        $ref: '#/components/requestBodies/v1UpdateExternalBackupRequest'\n      tags:\n        - ExternalBackupService\n  /v1/externalbackups/{externalBackup.id}:\n    patch:\n      summary: UpdateExternalBackup modifies a given external backup, with optional stored credential reconciliation.\n      operationId: ExternalBackupService_UpdateExternalBackup\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageExternalBackup'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: externalBackup.id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: '#/components/requestBodies/v1UpdateExternalBackupRequest'\n      tags:\n        - ExternalBackupService\n  /v1/externalbackups/{id}:\n    get:\n      summary: GetExternalBackup returns the external backup configuration given its ID.\n      operationId: ExternalBackupService_GetExternalBackup\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageExternalBackup'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - ExternalBackupService\n    delete:\n      summary: DeleteExternalBackup removes an external backup configuration given its ID.\n      operationId: ExternalBackupService_DeleteExternalBackup\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - ExternalBackupService\n    post:\n      summary: TriggerExternalBackup initiates an external backup for the given configuration.\n      operationId: ExternalBackupService_TriggerExternalBackup\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - ExternalBackupService\n    put:\n      summary: PutExternalBackup modifies a given external backup, without using stored credential reconciliation.\n      operationId: ExternalBackupService_PutExternalBackup\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageExternalBackup'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: '#/components/requestBodies/storageExternalBackup'\n      tags:\n        - ExternalBackupService\n  /v1/centralhealth/upgradestatus:\n    get:\n      operationId: CentralHealthService_GetUpgradeStatus\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetUpgradeStatusResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - CentralHealthService\n  /v1/cluster-init/ca-config:\n    get:\n      operationId: ClusterInitService_GetCAConfig\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetCAConfigResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - ClusterInitService\n  /v1/cluster-init/init-bundles:\n    get:\n      operationId: ClusterInitService_GetInitBundles\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1InitBundleMetasResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - ClusterInitService\n    post:\n      operationId: ClusterInitService_GenerateInitBundle\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1InitBundleGenResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1InitBundleGenRequest'\n        required: true\n      tags:\n        - ClusterInitService\n  /v1/cluster-init/init-bundles/revoke:\n    patch:\n      summary: |-\n        RevokeInitBundle deletes cluster init bundle. If this operation impacts any cluster\n        then its ID should be included in request.\n        If confirm_impacted_clusters_ids does not match with current impacted clusters\n        then request will fail with error that includes all impacted clusters.\n      operationId: ClusterInitService_RevokeInitBundle\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1InitBundleRevokeResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1InitBundleRevokeRequest'\n        required: true\n      tags:\n        - ClusterInitService\n  /v1/cluster-defaults:\n    get:\n      operationId: ClustersService_GetClusterDefaultValues\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1ClusterDefaultsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - ClustersService\n  /v1/clusters:\n    get:\n      operationId: ClustersService_GetClusters\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1ClustersList'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - ClustersService\n    post:\n      operationId: ClustersService_PostCluster\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1ClusterResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        $ref: '#/components/requestBodies/storageCluster'\n      tags:\n        - ClustersService\n  /v1/clusters-env/kernel-support-available:\n    get:\n      summary: GetKernelSupportAvailable is deprecated in favor of GetClusterDefaultValues.\n      operationId: ClustersService_GetKernelSupportAvailable\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1KernelSupportAvailableResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - ClustersService\n  /v1/clusters/{id}:\n    get:\n      operationId: ClustersService_GetCluster\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1ClusterResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - ClustersService\n    delete:\n      operationId: ClustersService_DeleteCluster\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - ClustersService\n    put:\n      operationId: ClustersService_PutCluster\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1ClusterResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: '#/components/requestBodies/storageCluster'\n      tags:\n        - ClustersService\n  /v1/complianceManagement/runs:\n    get:\n      operationId: ComplianceManagementService_GetRecentRuns\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetRecentComplianceRunsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: clusterId\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: standardId\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: since\n          in: query\n          required: false\n          schema:\n            type: string\n            format: date-time\n      tags:\n        - ComplianceManagementService\n  /v1/compliancemanagement/runs:\n    post:\n      operationId: ComplianceManagementService_TriggerRuns\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1TriggerComplianceRunsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1TriggerComplianceRunsRequest'\n        required: true\n      tags:\n        - ComplianceManagementService\n  /v1/compliancemanagement/runstatuses:\n    get:\n      operationId: ComplianceManagementService_GetRunStatuses\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetComplianceRunStatusesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: runIds\n          in: query\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      tags:\n        - ComplianceManagementService\n  /v1/compliance/aggregatedresults:\n    get:\n      operationId: ComplianceService_GetAggregatedResults\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageComplianceAggregationResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: groupBy\n          in: query\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - UNKNOWN\n                - STANDARD\n                - CLUSTER\n                - CATEGORY\n                - CONTROL\n                - NAMESPACE\n                - NODE\n                - DEPLOYMENT\n                - CHECK\n        - name: unit\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - UNKNOWN\n              - STANDARD\n              - CLUSTER\n              - CATEGORY\n              - CONTROL\n              - NAMESPACE\n              - NODE\n              - DEPLOYMENT\n              - CHECK\n            default: UNKNOWN\n        - name: where.query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: where.pagination.limit\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: where.pagination.offset\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: where.pagination.sortOption.field\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: where.pagination.sortOption.reversed\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - ComplianceService\n  /v1/compliance/results:\n    get:\n      operationId: ComplianceService_GetComplianceControlResults\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1ComplianceControlResultsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.limit\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.offset\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.sortOption.field\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.sortOption.reversed\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - ComplianceService\n  /v1/compliance/runresults:\n    get:\n      operationId: ComplianceService_GetRunResults\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetComplianceRunResultsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: clusterId\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: standardId\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: runId\n          description: |-\n            Specifies the run ID for which to return results. If empty, the most recent run is returned.\n            CAVEAT: Setting this field circumvents the results cache on the server-side, which may lead to significantly\n                    increased memory pressure and decreased performance.\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - ComplianceService\n  /v1/compliance/standards:\n    get:\n      operationId: ComplianceService_GetStandards\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetComplianceStandardsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - ComplianceService\n  /v1/compliance/standards/{id}:\n    get:\n      operationId: ComplianceService_GetStandard\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetComplianceStandardResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - ComplianceService\n  /v1/config:\n    get:\n      operationId: ConfigService_GetConfig\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageConfig'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - ConfigService\n    put:\n      operationId: ConfigService_PutConfig\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageConfig'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1PutConfigRequest'\n        required: true\n      tags:\n        - ConfigService\n  /v1/config/private:\n    get:\n      operationId: ConfigService_GetPrivateConfig\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storagePrivateConfig'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - ConfigService\n  /v1/config/public:\n    get:\n      operationId: ConfigService_GetPublicConfig\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storagePublicConfig'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - ConfigService\n  /v1/credentialexpiry:\n    get:\n      summary: GetCertExpiry returns information related to the expiry component mTLS certificate.\n      operationId: CredentialExpiryService_GetCertExpiry\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetCertExpiryResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: component\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - UNKNOWN\n              - CENTRAL\n              - SCANNER\n            default: UNKNOWN\n      tags:\n        - CredentialExpiryService\n  /v1/cves/suppress:\n    patch:\n      summary: SuppressCVE suppresses cves.\n      operationId: CVEService_SuppressCVEs\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1SuppressCVERequest'\n        required: true\n      tags:\n        - CVEService\n  /v1/cves/unsuppress:\n    patch:\n      summary: UnsuppressCVE unsuppresse    s cves.\n      operationId: CVEService_UnsuppressCVEs\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1UnsuppressCVERequest'\n        required: true\n      tags:\n        - CVEService\n  /v1/db/exportcaps:\n    get:\n      operationId: DBService_GetExportCapabilities\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetDBExportCapabilitiesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - DBService\n  /v1/db/interruptrestore/{processId}/{attemptId}:\n    post:\n      operationId: DBService_InterruptRestoreProcess\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1InterruptDBRestoreProcessResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: processId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: attemptId\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - DBService\n  /v1/db/restore:\n    get:\n      operationId: DBService_GetActiveRestoreProcess\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetActiveDBRestoreProcessResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - DBService\n  /v1/db/restore/{id}:\n    delete:\n      operationId: DBService_CancelRestoreProcess\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - DBService\n  /v1/debug/authz/trace:\n    get:\n      summary: Stream authorization traces for all incoming requests.\n      operationId: DebugService_StreamAuthzTraces\n      responses:\n        '200':\n          description: A successful response.(streaming responses)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    $ref: '#/components/schemas/v1AuthorizationTraceResponse'\n                  error:\n                    $ref: '#/components/schemas/runtimeStreamError'\n                title: Stream result of v1AuthorizationTraceResponse\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - DebugService\n  /v1/debug/loglevel:\n    get:\n      summary: Get the current logging level for StackRox services.\n      operationId: DebugService_GetLogLevel\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1LogLevelResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: modules\n          in: query\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      tags:\n        - DebugService\n    patch:\n      summary: Set logging level for StackRox services.\n      operationId: DebugService_SetLogLevel\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                properties: {}\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1LogLevelRequest'\n        required: true\n      tags:\n        - DebugService\n  /v1/deployments:\n    get:\n      summary: ListDeployments returns the list of deployments.\n      operationId: DeploymentService_ListDeployments\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1ListDeploymentsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.limit\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.offset\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.sortOption.field\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.sortOption.reversed\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - DeploymentService\n  /v1/deployments/metadata/labels:\n    get:\n      summary: GetLabels returns the labels used by deployments.\n      operationId: DeploymentService_GetLabels\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1DeploymentLabelsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - DeploymentService\n  /v1/deployments/{id}:\n    get:\n      summary: GetDeployment returns a deployment given its ID.\n      operationId: DeploymentService_GetDeployment\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageDeployment'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - DeploymentService\n  /v1/deploymentscount:\n    get:\n      summary: CountDeployments returns the number of deployments.\n      operationId: DeploymentService_CountDeployments\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1CountDeploymentsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.limit\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.offset\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.sortOption.field\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.sortOption.reversed\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - DeploymentService\n  /v1/deploymentswithprocessinfo:\n    get:\n      summary: ListDeploymentsWithProcessInfo returns the list of deployments with process information.\n      operationId: DeploymentService_ListDeploymentsWithProcessInfo\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1ListDeploymentsWithProcessInfoResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.limit\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.offset\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.sortOption.field\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.sortOption.reversed\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - DeploymentService\n  /v1/deploymentswithrisk/{id}:\n    get:\n      summary: GetDeploymentWithRisk returns a deployment and its risk given its ID.\n      operationId: DeploymentService_GetDeploymentWithRisk\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetDeploymentWithRiskResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - DeploymentService\n  /v1/detect/build:\n    post:\n      summary: DetectBuildTime checks if any images violate build time policies.\n      operationId: DetectionService_DetectBuildTime\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1BuildDetectionResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1BuildDetectionRequest'\n        required: true\n      tags:\n        - DetectionService\n  /v1/detect/deploy:\n    post:\n      summary: DetectDeployTime checks if any deployments violate deploy time policies.\n      operationId: DetectionService_DetectDeployTime\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1DeployDetectionResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1DeployDetectionRequest'\n        required: true\n      tags:\n        - DetectionService\n  /v1/detect/deploy/yaml:\n    post:\n      summary: DetectDeployTimeFromYAML checks if the given deployment yaml violates any deploy time policies.\n      operationId: DetectionService_DetectDeployTimeFromYAML\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1DeployDetectionResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1DeployYAMLDetectionRequest'\n        required: true\n      tags:\n        - DetectionService\n  /v1/featureflags:\n    get:\n      operationId: FeatureFlagService_GetFeatureFlags\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetFeatureFlagsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - FeatureFlagService\n  /v1/group:\n    get:\n      operationId: GroupService_GetGroup\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageGroup'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: authProviderId\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: key\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: value\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - GroupService\n  /v1/groups:\n    get:\n      operationId: GroupService_GetGroups\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetGroupsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: authProviderId\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: key\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: value\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - GroupService\n    delete:\n      operationId: GroupService_DeleteGroup\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: authProviderId\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: key\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: value\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - GroupService\n    post:\n      operationId: GroupService_CreateGroup\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        $ref: '#/components/requestBodies/storageGroup'\n      tags:\n        - GroupService\n    put:\n      operationId: GroupService_UpdateGroup\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        $ref: '#/components/requestBodies/storageGroup'\n      tags:\n        - GroupService\n  /v1/groupsbatch:\n    post:\n      operationId: GroupService_BatchUpdate\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1GroupBatchUpdateRequest'\n        required: true\n      tags:\n        - GroupService\n  /v1/imageintegrations:\n    get:\n      summary: GetImageIntegrations returns all image integrations that match the request filters.\n      operationId: ImageIntegrationService_GetImageIntegrations\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetImageIntegrationsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: name\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: cluster\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - ImageIntegrationService\n    post:\n      summary: PostImageIntegration creates a image integration.\n      operationId: ImageIntegrationService_PostImageIntegration\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageImageIntegration'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        $ref: '#/components/requestBodies/storageImageIntegration'\n      tags:\n        - ImageIntegrationService\n  /v1/imageintegrations/test:\n    post:\n      summary: TestImageIntegration checks if the given image integration is correctly configured, without using stored credential reconciliation.\n      operationId: ImageIntegrationService_TestImageIntegration\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        $ref: '#/components/requestBodies/storageImageIntegration'\n      tags:\n        - ImageIntegrationService\n  /v1/imageintegrations/test/updated:\n    post:\n      summary: TestUpdatedImageIntegration checks if the given image integration is correctly configured, with optional stored credential reconciliation.\n      operationId: ImageIntegrationService_TestUpdatedImageIntegration\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        $ref: '#/components/requestBodies/v1UpdateImageIntegrationRequest'\n      tags:\n        - ImageIntegrationService\n  /v1/imageintegrations/{config.id}:\n    patch:\n      summary: UpdateImageIntegration modifies a given image integration, with optional stored credential reconciliation.\n      operationId: ImageIntegrationService_UpdateImageIntegration\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: config.id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: '#/components/requestBodies/v1UpdateImageIntegrationRequest'\n      tags:\n        - ImageIntegrationService\n  /v1/imageintegrations/{id}:\n    get:\n      summary: GetImageIntegration returns the image integration given its ID.\n      operationId: ImageIntegrationService_GetImageIntegration\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageImageIntegration'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - ImageIntegrationService\n    delete:\n      summary: DeleteImageIntegration removes a image integration given its ID.\n      operationId: ImageIntegrationService_DeleteImageIntegration\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - ImageIntegrationService\n    put:\n      summary: PutImageIntegration modifies a given image integration, without using stored credential reconciliation.\n      operationId: ImageIntegrationService_PutImageIntegration\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: '#/components/requestBodies/storageImageIntegration'\n      tags:\n        - ImageIntegrationService\n  /v1/images:\n    get:\n      summary: ListImages returns all the images.\n      operationId: ImageService_ListImages\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1ListImagesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.limit\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.offset\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.sortOption.field\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.sortOption.reversed\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - ImageService\n    delete:\n      summary: DeleteImage removes the images based on a query\n      operationId: ImageService_DeleteImages\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1DeleteImagesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query.query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: query.pagination.limit\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: query.pagination.offset\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: query.pagination.sortOption.field\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: query.pagination.sortOption.reversed\n          in: query\n          required: false\n          schema:\n            type: boolean\n        - name: confirm\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - ImageService\n  /v1/images/cache/invalidate:\n    get:\n      summary: InvalidateScanAndRegistryCaches removes the image metadata cache.\n      operationId: ImageService_InvalidateScanAndRegistryCaches\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - ImageService\n  /v1/images/scan:\n    post:\n      summary: ScanImage scans a single image and returns the result\n      operationId: ImageService_ScanImage\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageImage'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1ScanImageRequest'\n        required: true\n      tags:\n        - ImageService\n  /v1/images/{id}:\n    get:\n      summary: GetImage returns the image given its ID.\n      operationId: ImageService_GetImage\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageImage'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: includeSnoozed\n          in: query\n          required: false\n          schema:\n            type: boolean\n        - name: stripDescription\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - ImageService\n  /v1/imagescount:\n    get:\n      summary: ListImages returns all the images.\n      operationId: ImageService_CountImages\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1CountImagesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.limit\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.offset\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.sortOption.field\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.sortOption.reversed\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - ImageService\n  /v1/watchedimages:\n    get:\n      summary: |-\n        GetWatchedImages returns the list of image names that are currently\n        being watched.\n      operationId: ImageService_GetWatchedImages\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetWatchedImagesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - ImageService\n    delete:\n      summary: |-\n        UnwatchImage marks an image name to no longer be watched.\n        It returns successfully if the image is no longer being watched\n        after the call, irrespective of whether the image was already being watched.\n      operationId: ImageService_UnwatchImage\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: name\n          description: |-\n            The name of the image to unwatch.\n            Should match the name of a previously watched image.\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - ImageService\n    post:\n      summary: WatchImage marks an image name as to be watched.\n      operationId: ImageService_WatchImage\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1WatchImageResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1WatchImageRequest'\n        required: true\n      tags:\n        - ImageService\n  /v1/integrationhealth/externalbackups:\n    get:\n      operationId: IntegrationHealthService_GetBackupPlugins\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetIntegrationHealthResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - IntegrationHealthService\n  /v1/integrationhealth/imageintegrations:\n    get:\n      operationId: IntegrationHealthService_GetImageIntegrations\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetIntegrationHealthResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - IntegrationHealthService\n  /v1/integrationhealth/notifiers:\n    get:\n      operationId: IntegrationHealthService_GetNotifiers\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetIntegrationHealthResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - IntegrationHealthService\n  /v1/integrationhealth/vulndefinitions:\n    get:\n      operationId: IntegrationHealthService_GetVulnDefinitionsInfo\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1VulnDefinitionsInfo'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - IntegrationHealthService\n  /v1/licenses/activekey:\n    get:\n      operationId: LicenseService_GetActiveLicenseKey\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetActiveLicenseKeyResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - LicenseService\n  /v1/licenses/add:\n    post:\n      operationId: LicenseService_AddLicense\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1AddLicenseResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1AddLicenseRequest'\n        required: true\n      tags:\n        - LicenseService\n  /v1/licenses/expiration:\n    get:\n      operationId: LicenseService_GetActiveLicenseExpiration\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetActiveLicenseExpirationResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - LicenseService\n  /v1/licenses/list:\n    get:\n      operationId: LicenseService_GetLicenses\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetLicensesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: active\n          in: query\n          required: false\n          schema:\n            type: boolean\n        - name: statuses\n          in: query\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - UNKNOWN\n                - VALID\n                - REVOKED\n                - NOT_YET_VALID\n                - EXPIRED\n                - OTHER\n      tags:\n        - LicenseService\n  /v1/metadata:\n    get:\n      operationId: MetadataService_GetMetadata\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Metadata'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - MetadataService\n  /v1/tls-challenge:\n    get:\n      operationId: MetadataService_TLSChallenge\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1TLSChallengeResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: challengeToken\n          description: generated challenge token by the service asking for TLS certs.\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - MetadataService\n  /v1/mitreattackvectors:\n    get:\n      summary: ListMitreAttackVectors returns all MITRE ATT\u0026CK vectors.\n      operationId: MitreAttackService_ListMitreAttackVectors\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1ListMitreAttackVectorsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - MitreAttackService\n  /v1/mitreattackvectors/{id}:\n    get:\n      summary: GetMitreAttackVector returns the full MITRE ATT\u0026CK vector for a tactic with all its techniques.\n      operationId: MitreAttackService_GetMitreAttackVector\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetMitreVectorResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - MitreAttackService\n  /v1/namespaces:\n    get:\n      operationId: NamespaceService_GetNamespaces\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetNamespacesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query.query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: query.pagination.limit\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: query.pagination.offset\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: query.pagination.sortOption.field\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: query.pagination.sortOption.reversed\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - NamespaceService\n  /v1/namespaces/{id}:\n    get:\n      operationId: NamespaceService_GetNamespace\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Namespace'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - NamespaceService\n  /v1/networkbaseline/{deploymentId}/peers:\n    patch:\n      operationId: NetworkBaselineService_ModifyBaselineStatusForPeers\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: deploymentId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1ModifyBaselineStatusForPeersRequest'\n        required: true\n      tags:\n        - NetworkBaselineService\n  /v1/networkbaseline/{deploymentId}/status:\n    post:\n      operationId: NetworkBaselineService_GetNetworkBaselineStatusForFlows\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1NetworkBaselineStatusResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: deploymentId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1NetworkBaselineStatusRequest'\n        required: true\n      tags:\n        - NetworkBaselineService\n  /v1/networkbaseline/{id}:\n    get:\n      operationId: NetworkBaselineService_GetNetworkBaseline\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageNetworkBaseline'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - NetworkBaselineService\n  /v1/networkbaseline/{id}/lock:\n    patch:\n      operationId: NetworkBaselineService_LockNetworkBaseline\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: '#/components/requestBodies/v1ResourceByID'\n      tags:\n        - NetworkBaselineService\n  /v1/networkbaseline/{id}/unlock:\n    patch:\n      operationId: NetworkBaselineService_UnlockNetworkBaseline\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: '#/components/requestBodies/v1ResourceByID'\n      tags:\n        - NetworkBaselineService\n  /v1/networkgraph/cluster/{clusterId}:\n    get:\n      operationId: NetworkGraphService_GetNetworkGraph\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1NetworkGraph'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: clusterId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: since\n          in: query\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - name: includePorts\n          in: query\n          required: false\n          schema:\n            type: boolean\n        - name: scope.query\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - NetworkGraphService\n  /v1/networkgraph/cluster/{clusterId}/externalentities:\n    get:\n      operationId: NetworkGraphService_GetExternalNetworkEntities\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetExternalNetworkEntitiesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: clusterId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - NetworkGraphService\n    post:\n      operationId: NetworkGraphService_CreateExternalNetworkEntity\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageNetworkEntity'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: clusterId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1CreateNetworkEntityRequest'\n        required: true\n      tags:\n        - NetworkGraphService\n  /v1/networkgraph/config:\n    get:\n      operationId: NetworkGraphService_GetNetworkGraphConfig\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageNetworkGraphConfig'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - NetworkGraphService\n    put:\n      operationId: NetworkGraphService_PutNetworkGraphConfig\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageNetworkGraphConfig'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1PutNetworkGraphConfigRequest'\n        required: true\n      tags:\n        - NetworkGraphService\n  /v1/networkgraph/externalentities/{id}:\n    delete:\n      operationId: NetworkGraphService_DeleteExternalNetworkEntity\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - NetworkGraphService\n    patch:\n      operationId: NetworkGraphService_PatchExternalNetworkEntity\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageNetworkEntity'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1PatchNetworkEntityRequest'\n        required: true\n      tags:\n        - NetworkGraphService\n  /v1/networkpolicies:\n    get:\n      operationId: NetworkPolicyService_GetNetworkPolicies\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1NetworkPoliciesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: clusterId\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: deploymentQuery\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - NetworkPolicyService\n  /v1/networkpolicies/allowedpeers/{id}:\n    get:\n      operationId: NetworkPolicyService_GetAllowedPeersFromCurrentPolicyForDeployment\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetAllowedPeersFromCurrentPolicyForDeploymentResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - NetworkPolicyService\n  /v1/networkpolicies/apply/deployment/{deploymentId}:\n    post:\n      operationId: NetworkPolicyService_ApplyNetworkPolicyYamlForDeployment\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: deploymentId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1ApplyNetworkPolicyYamlForDeploymentRequest'\n        required: true\n      tags:\n        - NetworkPolicyService\n  /v1/networkpolicies/apply/{clusterId}:\n    post:\n      operationId: NetworkPolicyService_ApplyNetworkPolicy\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: clusterId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: '#/components/requestBodies/storageNetworkPolicyModification'\n      tags:\n        - NetworkPolicyService\n  /v1/networkpolicies/baselinecomparison/{id}:\n    get:\n      operationId: NetworkPolicyService_GetDiffFlowsBetweenPolicyAndBaselineForDeployment\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetDiffFlowsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - NetworkPolicyService\n  /v1/networkpolicies/cluster/{clusterId}:\n    get:\n      operationId: NetworkPolicyService_GetNetworkGraph\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1NetworkGraph'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: clusterId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: includePorts\n          description: If set to true, include port-level information in the network policy graph.\n          in: query\n          required: false\n          schema:\n            type: boolean\n        - name: scope.query\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - NetworkPolicyService\n  /v1/networkpolicies/generate/baseline/{deploymentId}:\n    post:\n      operationId: NetworkPolicyService_GetBaselineGeneratedNetworkPolicyForDeployment\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetBaselineGeneratedPolicyForDeploymentResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: deploymentId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1GetBaselineGeneratedPolicyForDeploymentRequest'\n        required: true\n      tags:\n        - NetworkPolicyService\n  /v1/networkpolicies/generate/{clusterId}:\n    get:\n      operationId: NetworkPolicyService_GenerateNetworkPolicies\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GenerateNetworkPoliciesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: clusterId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: deleteExisting\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - UNKNOWN\n              - NONE\n              - GENERATED_ONLY\n              - ALL\n            default: UNKNOWN\n        - name: networkDataSince\n          in: query\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - name: includePorts\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - NetworkPolicyService\n  /v1/networkpolicies/graph/epoch:\n    get:\n      operationId: NetworkPolicyService_GetNetworkGraphEpoch\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1NetworkGraphEpoch'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: clusterId\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - NetworkPolicyService\n  /v1/networkpolicies/simulate/{clusterId}:\n    post:\n      operationId: NetworkPolicyService_SimulateNetworkGraph\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1SimulateNetworkGraphResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: clusterId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: includePorts\n          description: If set to true, include port-level information in the network policy graph.\n          in: query\n          required: false\n          schema:\n            type: boolean\n        - name: includeNodeDiff\n          in: query\n          required: false\n          schema:\n            type: boolean\n        - name: scope.query\n          in: query\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: '#/components/requestBodies/storageNetworkPolicyModification'\n      tags:\n        - NetworkPolicyService\n  /v1/networkpolicies/simulate/{clusterId}/notify:\n    post:\n      operationId: NetworkPolicyService_SendNetworkPolicyYAML\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: clusterId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: notifierIds\n          in: query\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      requestBody:\n        $ref: '#/components/requestBodies/storageNetworkPolicyModification'\n      tags:\n        - NetworkPolicyService\n  /v1/networkpolicies/undo/deployment/{id}:\n    get:\n      operationId: NetworkPolicyService_GetUndoModificationForDeployment\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetUndoModificationForDeploymentResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - NetworkPolicyService\n  /v1/networkpolicies/undo/{clusterId}:\n    get:\n      operationId: NetworkPolicyService_GetUndoModification\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetUndoModificationResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: clusterId\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - NetworkPolicyService\n  /v1/networkpolicies/undobaselinecomparison/{id}:\n    get:\n      operationId: NetworkPolicyService_GetDiffFlowsFromUndoModificationForDeployment\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetDiffFlowsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - NetworkPolicyService\n  /v1/networkpolicies/{id}:\n    get:\n      operationId: NetworkPolicyService_GetNetworkPolicy\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageNetworkPolicy'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - NetworkPolicyService\n  /v1/nodes/{clusterId}:\n    get:\n      operationId: NodeService_ListNodes\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1ListNodesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: clusterId\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - NodeService\n  /v1/nodes/{clusterId}/{nodeId}:\n    get:\n      operationId: NodeService_GetNode\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageNode'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: clusterId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: nodeId\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - NodeService\n  /v1/notifiers:\n    get:\n      summary: GetNotifiers returns all notifier configurations that match the request filters.\n      operationId: NotifierService_GetNotifiers\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetNotifiersResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: name\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: type\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - NotifierService\n    post:\n      summary: PostNotifier creates a notifier configuration.\n      operationId: NotifierService_PostNotifier\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageNotifier'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        $ref: '#/components/requestBodies/storageNotifier'\n      tags:\n        - NotifierService\n  /v1/notifiers/test:\n    post:\n      summary: TestNotifier checks if a notifier is correctly configured.\n      operationId: NotifierService_TestNotifier\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        $ref: '#/components/requestBodies/storageNotifier'\n      tags:\n        - NotifierService\n  /v1/notifiers/test/updated:\n    post:\n      summary: TestUpdatedNotifier checks if the given notifier is correctly configured, with optional stored credential reconciliation.\n      operationId: NotifierService_TestUpdatedNotifier\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        $ref: '#/components/requestBodies/v1UpdateNotifierRequest'\n      tags:\n        - NotifierService\n  /v1/notifiers/{id}:\n    get:\n      summary: GetNotifier returns the notifier configuration given its ID.\n      operationId: NotifierService_GetNotifier\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageNotifier'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - NotifierService\n    delete:\n      summary: DeleteNotifier removes a notifier configuration given its ID.\n      operationId: NotifierService_DeleteNotifier\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: force\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - NotifierService\n    put:\n      summary: PutNotifier modifies a given notifier, without using stored credential reconciliation.\n      operationId: NotifierService_PutNotifier\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: '#/components/requestBodies/storageNotifier'\n      tags:\n        - NotifierService\n  /v1/notifiers/{notifier.id}:\n    patch:\n      summary: UpdateNotifier modifies a given notifier, with optional stored credential reconciliation.\n      operationId: NotifierService_UpdateNotifier\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: notifier.id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: '#/components/requestBodies/v1UpdateNotifierRequest'\n      tags:\n        - NotifierService\n  /v1/ping:\n    get:\n      operationId: PingService_Ping\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1PongMessage'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - PingService\n  /v1/pods:\n    get:\n      summary: GetPods returns the pods.\n      operationId: PodService_GetPods\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1PodsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.limit\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.offset\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.sortOption.field\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.sortOption.reversed\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - PodService\n  /v1/policies:\n    get:\n      summary: ListPolicies returns the list of policies.\n      operationId: PolicyService_ListPolicies\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1ListPoliciesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.limit\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.offset\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.sortOption.field\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.sortOption.reversed\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - PolicyService\n    post:\n      summary: PostPolicy creates a new policy.\n      operationId: PolicyService_PostPolicy\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storagePolicy'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: enableStrictValidation\n          in: query\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        $ref: '#/components/requestBodies/storagePolicy'\n      tags:\n        - PolicyService\n  /v1/policies/dryrun:\n    post:\n      summary: DryRunPolicy evaluates the given policy and returns any alerts without creating the policy.\n      operationId: PolicyService_DryRunPolicy\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1DryRunResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        $ref: '#/components/requestBodies/storagePolicy'\n      tags:\n        - PolicyService\n  /v1/policies/dryrunjob:\n    post:\n      operationId: PolicyService_SubmitDryRunPolicyJob\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1JobId'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        $ref: '#/components/requestBodies/storagePolicy'\n      tags:\n        - PolicyService\n  /v1/policies/dryrunjob/{jobId}:\n    get:\n      operationId: PolicyService_QueryDryRunJobStatus\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1DryRunJobStatusResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: jobId\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - PolicyService\n    delete:\n      operationId: PolicyService_CancelDryRunJob\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: jobId\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - PolicyService\n  /v1/policies/export:\n    post:\n      summary: ExportPolicies takes a list of policy IDs and returns either the entire list of policies or an error message\n      operationId: PolicyService_ExportPolicies\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageExportPoliciesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1ExportPoliciesRequest'\n        required: true\n      tags:\n        - PolicyService\n  /v1/policies/from-search:\n    post:\n      operationId: PolicyService_PolicyFromSearch\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1PolicyFromSearchResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1PolicyFromSearchRequest'\n        required: true\n      tags:\n        - PolicyService\n  /v1/policies/import:\n    post:\n      summary: ImportPolicies accepts a list of Policies and returns a list of the policies which could not be imported\n      operationId: PolicyService_ImportPolicies\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1ImportPoliciesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1ImportPoliciesRequest'\n        required: true\n      tags:\n        - PolicyService\n  /v1/policies/reassess:\n    post:\n      summary: ReassessPolicies reevaluates all the policies.\n      operationId: PolicyService_ReassessPolicies\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - PolicyService\n  /v1/policies/{id}:\n    get:\n      summary: GetPolicy returns the requested policy by ID.\n      operationId: PolicyService_GetPolicy\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storagePolicy'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - PolicyService\n    delete:\n      summary: DeletePolicy removes a policy by ID.\n      operationId: PolicyService_DeletePolicy\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - PolicyService\n    put:\n      summary: PutPolicy modifies an existing policy.\n      operationId: PolicyService_PutPolicy\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: '#/components/requestBodies/storagePolicy'\n      tags:\n        - PolicyService\n    patch:\n      summary: PatchPolicy edits an existing policy.\n      operationId: PolicyService_PatchPolicy\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1PatchPolicyRequest'\n        required: true\n      tags:\n        - PolicyService\n  /v1/policies/{id}/mitrevectors:\n    get:\n      summary: GetMitreVectorsForPolicy returns the requested policy by ID.\n      operationId: PolicyService_GetPolicyMitreVectors\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetPolicyMitreVectorsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: options.excludePolicy\n          description: If set to true, policy is excluded from the response.\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - PolicyService\n  /v1/policies/{policyId}/notifiers:\n    patch:\n      summary: EnableDisablePolicyNotification enables or disables notifications for a policy by ID.\n      operationId: PolicyService_EnableDisablePolicyNotification\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: policyId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1EnableDisablePolicyNotificationRequest'\n        required: true\n      tags:\n        - PolicyService\n  /v1/policyCategories:\n    get:\n      summary: GetPolicyCategories returns the policy categories.\n      operationId: PolicyService_GetPolicyCategories\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1PolicyCategoriesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - PolicyService\n  /v1/policyCategories/{category}:\n    delete:\n      summary: DeletePolicyCategory removes the given policy category.\n      operationId: PolicyService_DeletePolicyCategory\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: category\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - PolicyService\n  /v1/policyCategories/{oldCategory}:\n    put:\n      summary: RenamePolicyCategory renames the given policy category.\n      operationId: PolicyService_RenamePolicyCategory\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: oldCategory\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1RenamePolicyCategoryRequest'\n        required: true\n      tags:\n        - PolicyService\n  /v1/probeupload/getexisting:\n    post:\n      operationId: ProbeUploadService_GetExistingProbes\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetExistingProbesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - ProbeUploadService\n  /v1/processbaselines:\n    delete:\n      summary: '`DeleteProcessBaselines` deletes baselines.'\n      operationId: ProcessBaselineService_DeleteProcessBaselines\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1DeleteProcessBaselinesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: confirm\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - ProcessBaselineService\n    put:\n      summary: |-\n        `AddToProcessBaselines` adds a list of process\n        names to each of a list of process baselines.\n      operationId: ProcessBaselineService_UpdateProcessBaselines\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1UpdateProcessBaselinesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1UpdateProcessBaselinesRequest'\n        required: true\n      tags:\n        - ProcessBaselineService\n  /v1/processbaselines/key:\n    get:\n      summary: |-\n        `GetProcessBaselineById` returns the single\n        process baseline referenced by the given ID.\n      operationId: ProcessBaselineService_GetProcessBaseline\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageProcessBaseline'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: key.deploymentId\n          description: |-\n            The idea is for the keys to be flexible.\n            Only certain combinations of these will be supported.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: key.containerName\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: key.clusterId\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: key.namespace\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - ProcessBaselineService\n  /v1/processbaselines/lock:\n    put:\n      summary: |-\n        `LockProcessBaselines` accepts a list of baseline IDs, locks\n        those baselines, and returns the updated baseline objects.\n      operationId: ProcessBaselineService_LockProcessBaselines\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1UpdateProcessBaselinesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1LockProcessBaselinesRequest'\n        required: true\n      tags:\n        - ProcessBaselineService\n  /v1/processes/deployment/{deploymentId}:\n    get:\n      summary: GetProcessesByDeployment returns the processes executed in the given deployment.\n      operationId: ProcessService_GetProcessesByDeployment\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetProcessesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: deploymentId\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - ProcessService\n  /v1/processes/deployment/{deploymentId}/grouped:\n    get:\n      summary: GetGroupedProcessByDeployment returns all the processes executed grouped by deployment.\n      operationId: ProcessService_GetGroupedProcessByDeployment\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetGroupedProcessesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: deploymentId\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - ProcessService\n  /v1/processes/deployment/{deploymentId}/grouped/container:\n    get:\n      summary: GetGroupedProcessByDeploymentAndContainer returns all the processes executed grouped by deployment and container.\n      operationId: ProcessService_GetGroupedProcessByDeploymentAndContainer\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetGroupedProcessesWithContainerResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: deploymentId\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - ProcessService\n  /v1/processwhitelists:\n    delete:\n      summary: DeleteProcessWhitelists deletes whitelists\n      operationId: ProcessWhitelistService_DeleteProcessWhitelists\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1DeleteProcessWhitelistsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: confirm\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - ProcessWhitelistService\n    put:\n      summary: AddToProcessWhitelists adds a list of process names to each of a list of process baselines\n      operationId: ProcessWhitelistService_UpdateProcessWhitelists\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1UpdateProcessWhitelistsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1UpdateProcessWhitelistsRequest'\n        required: true\n      tags:\n        - ProcessWhitelistService\n  /v1/processwhitelists/key:\n    get:\n      summary: GetProcessWhitelistById returns the single process whitelist referenced by the given ID.\n      operationId: ProcessWhitelistService_GetProcessWhitelist\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageProcessBaseline'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: key.deploymentId\n          description: |-\n            The idea is for the keys to be flexible.\n            Only certain combinations of these will be supported.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: key.containerName\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: key.clusterId\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: key.namespace\n          in: query\n          required: false\n          schema:\n            type: string\n      tags:\n        - ProcessWhitelistService\n  /v1/processwhitelists/lock:\n    put:\n      summary: LockProcessWhitelists accepts a list of baseline IDs, locks those baselines, and returns the updated baseline objects\n      operationId: ProcessWhitelistService_LockProcessWhitelists\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1UpdateProcessWhitelistsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1LockProcessWhitelistsRequest'\n        required: true\n      tags:\n        - ProcessWhitelistService\n  /v1/rbac/bindings:\n    get:\n      operationId: RbacService_ListRoleBindings\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1ListRoleBindingsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.limit\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.offset\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.sortOption.field\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.sortOption.reversed\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - RbacService\n  /v1/rbac/bindings/{id}:\n    get:\n      operationId: RbacService_GetRoleBinding\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetRoleBindingResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - RbacService\n  /v1/rbac/roles:\n    get:\n      operationId: RbacService_ListRoles\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1ListRolesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.limit\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.offset\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.sortOption.field\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.sortOption.reversed\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - RbacService\n  /v1/rbac/roles/{id}:\n    get:\n      operationId: RbacService_GetRole\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetRoleResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - RbacService\n  /v1/rbac/subject/{id}:\n    get:\n      summary: |-\n        Subjects served from this API are Groups and Users only.\n        Id in this case is the Name field, since for users and groups, that is unique, and subjects do not have IDs.\n      operationId: RbacService_GetSubject\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetSubjectResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - RbacService\n  /v1/rbac/subjects:\n    get:\n      operationId: RbacService_ListSubjects\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1ListSubjectsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.limit\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.offset\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.sortOption.field\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.sortOption.reversed\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - RbacService\n  /v1/report-configurations-count:\n    get:\n      summary: CountReportConfigurations returns the number of report configurations.\n      operationId: ReportConfigurationService_CountReportConfigurations\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1CountReportConfigurationsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.limit\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.offset\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.sortOption.field\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.sortOption.reversed\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - ReportConfigurationService\n  /v1/report/configurations:\n    get:\n      operationId: ReportConfigurationService_GetReportConfigurations\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetReportConfigurationsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.limit\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.offset\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.sortOption.field\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.sortOption.reversed\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - ReportConfigurationService\n    post:\n      summary: PostReportConfiguration creates a report configuration\n      operationId: ReportConfigurationService_PostReportConfiguration\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1PostReportConfigurationResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1PostReportConfigurationRequest'\n        required: true\n      tags:\n        - ReportConfigurationService\n  /v1/report/configurations/{id}:\n    get:\n      operationId: ReportConfigurationService_GetReportConfiguration\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetReportConfigurationResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - ReportConfigurationService\n    delete:\n      summary: DeleteReportConfiguration removes a report configuration given its id\n      operationId: ReportConfigurationService_DeleteReportConfiguration\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - ReportConfigurationService\n    put:\n      summary: UpdateReportConfiguration updates a report configuration\n      operationId: ReportConfigurationService_UpdateReportConfiguration\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1UpdateReportConfigurationRequest'\n        required: true\n      tags:\n        - ReportConfigurationService\n  /v1/report/run/{id}:\n    post:\n      operationId: ReportService_RunReport\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - ReportService\n  /v1/computeeffectiveaccessscope:\n    post:\n      summary: ComputeEffectiveAccessScope\n      description: |-\n        Returns effective access scope based on the rules in the request. Does\n        not persist anything; not idempotent due to possible changes to clusters\n        and namespaces. POST is chosen due to potentially large payload.\n\n        There are advantages in both keeping the response slim and detailed. If\n        only IDs of selected clusters and namespaces are included, response\n        latency and processing time are lower but the caller shall overlay the\n        response with its view of the world which is susceptible to consistency\n        issues. Listing all clusters and namespaces with related metadata is\n        convenient for the caller but bloat the message with secondary data.\n\n        We let the caller decide what level of detail they would like to have:\n\n          * Minimal, when only roots of included subtrees are listed by their\n            IDs. Clusters can be either INCLUDED (its namespaces are included but\n            are not listed) or PARTIAL (at least one namespace is explicitly\n            included). Namespaces can only be INCLUDED.\n\n          * Standard [default], when all known clusters and namespaces are listed\n            with their IDs and names. Clusters can be INCLUDED (all its\n            namespaces are explicitly listed as INCLUDED), PARTIAL (all its\n            namespaces are explicitly listed, some as INCLUDED and some as\n            EXCLUDED), and EXCLUDED (all its namespaces are explicitly listed as\n            EXCLUDED). Namespaces can be either INCLUDED or EXCLUDED.\n\n          * High, when every cluster and namespace is augmented with metadata.\n      operationId: RoleService_ComputeEffectiveAccessScope\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageEffectiveAccessScope'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: detail\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - STANDARD\n              - MINIMAL\n              - HIGH\n            default: STANDARD\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ComputeEffectiveAccessScopeRequestPayload'\n        required: true\n      tags:\n        - RoleService\n  /v1/mypermissions:\n    get:\n      operationId: RoleService_GetMyPermissions\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetPermissionsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - RoleService\n  /v1/permissionsets:\n    get:\n      operationId: RoleService_ListPermissionSets\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1ListPermissionSetsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - RoleService\n    post:\n      summary: PostPermissionSet\n      description: PermissionSet.id is disallowed in request and set in response.\n      operationId: RoleService_PostPermissionSet\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storagePermissionSet'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        $ref: '#/components/requestBodies/storagePermissionSet'\n      tags:\n        - RoleService\n  /v1/permissionsets/{id}:\n    get:\n      operationId: RoleService_GetPermissionSet\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storagePermissionSet'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - RoleService\n    delete:\n      operationId: RoleService_DeletePermissionSet\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - RoleService\n    put:\n      operationId: RoleService_PutPermissionSet\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          description: id is generated and cannot be changed.\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: '#/components/requestBodies/storagePermissionSet'\n      tags:\n        - RoleService\n  /v1/resources:\n    get:\n      operationId: RoleService_GetResources\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetResourcesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - RoleService\n  /v1/roles:\n    get:\n      operationId: RoleService_GetRoles\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetRolesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - RoleService\n  /v1/roles/{id}:\n    get:\n      operationId: RoleService_GetRole\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageRole'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - RoleService\n    delete:\n      operationId: RoleService_DeleteRole\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - RoleService\n  /v1/roles/{name}:\n    post:\n      operationId: RoleService_CreateRole\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: name\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: '#/components/requestBodies/storageRole'\n      tags:\n        - RoleService\n    put:\n      operationId: RoleService_UpdateRole\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: name\n          description: '`name` and `description` are provided by the user and can be changed.'\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: '#/components/requestBodies/storageRole'\n      tags:\n        - RoleService\n  /v1/simpleaccessscopes:\n    get:\n      operationId: RoleService_ListSimpleAccessScopes\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1ListSimpleAccessScopesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - RoleService\n    post:\n      summary: PostSimpleAccessScope\n      description: SimpleAccessScope.id is disallowed in request and set in response.\n      operationId: RoleService_PostSimpleAccessScope\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageSimpleAccessScope'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        $ref: '#/components/requestBodies/storageSimpleAccessScope'\n      tags:\n        - RoleService\n  /v1/simpleaccessscopes/{id}:\n    get:\n      operationId: RoleService_GetSimpleAccessScope\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageSimpleAccessScope'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - RoleService\n    delete:\n      operationId: RoleService_DeleteSimpleAccessScope\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - RoleService\n    put:\n      operationId: RoleService_PutSimpleAccessScope\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          description: '`id` is generated and cannot be changed.'\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: '#/components/requestBodies/storageSimpleAccessScope'\n      tags:\n        - RoleService\n  /v1/scopedaccessctrl/config:\n    post:\n      summary: AddAuthzPluginConfig creates a scoped access control plugin.\n      operationId: ScopedAccessControlService_AddAuthzPluginConfig\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageAuthzPluginConfig'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: updatePassword\n          description: When false, use the stored credentials of an existing scoped access control configuration given its ID.\n          in: query\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        $ref: '#/components/requestBodies/storageAuthzPluginConfig'\n      tags:\n        - ScopedAccessControlService\n  /v1/scopedaccessctrl/config/{config.id}:\n    put:\n      summary: UpdateAuthzPluginConfig modifies a scoped access control plugin.\n      operationId: ScopedAccessControlService_UpdateAuthzPluginConfig\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageAuthzPluginConfig'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: config.id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: updatePassword\n          description: When false, use the stored credentials of an existing scoped access control configuration given its ID.\n          in: query\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        $ref: '#/components/requestBodies/storageAuthzPluginConfig'\n      tags:\n        - ScopedAccessControlService\n    patch:\n      summary: UpdateAuthzPluginConfig modifies a scoped access control plugin.\n      operationId: ScopedAccessControlService_UpdateAuthzPluginConfig2\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageAuthzPluginConfig'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: config.id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: '#/components/requestBodies/v1UpsertAuthzPluginConfigRequest'\n      tags:\n        - ScopedAccessControlService\n  /v1/scopedaccessctrl/config/{id}:\n    delete:\n      summary: DeleteAuthzPluginConfig removes a scoped access control plugin.\n      operationId: ScopedAccessControlService_DeleteAuthzPluginConfig\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - ScopedAccessControlService\n  /v1/scopedaccessctrl/configs:\n    get:\n      summary: GetAuthzPluginConfigs returns all scoped access control plugins.\n      operationId: ScopedAccessControlService_GetAuthzPluginConfigs\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetAuthzPluginConfigsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - ScopedAccessControlService\n  /v1/scopedaccessctrl/test:\n    post:\n      summary: DryRunAuthzPluginConfig checks if the given scoped access control plugin is correctly configured.\n      operationId: ScopedAccessControlService_DryRunAuthzPluginConfig\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: updatePassword\n          description: When false, use the stored credentials of an existing scoped access control configuration given its ID.\n          in: query\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        $ref: '#/components/requestBodies/storageAuthzPluginConfig'\n      tags:\n        - ScopedAccessControlService\n  /v1/scopedaccessctrl/test/updated:\n    post:\n      summary: DryRunAuthzPluginConfig checks if the given scoped access control plugin is correctly configured.\n      operationId: ScopedAccessControlService_DryRunAuthzPluginConfig2\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        $ref: '#/components/requestBodies/v1UpsertAuthzPluginConfigRequest'\n      tags:\n        - ScopedAccessControlService\n  /v1/search:\n    get:\n      operationId: SearchService_Search\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1SearchResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: categories\n          in: query\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - SEARCH_UNSET\n                - ALERTS\n                - IMAGES\n                - IMAGE_COMPONENTS\n                - IMAGE_VULN_EDGE\n                - IMAGE_COMPONENT_EDGE\n                - POLICIES\n                - DEPLOYMENTS\n                - ACTIVE_COMPONENT\n                - PODS\n                - SECRETS\n                - PROCESS_INDICATORS\n                - COMPLIANCE\n                - CLUSTERS\n                - NAMESPACES\n                - NODES\n                - NODE_VULN_EDGE\n                - NODE_COMPONENT_EDGE\n                - COMPLIANCE_STANDARD\n                - COMPLIANCE_CONTROL_GROUP\n                - COMPLIANCE_CONTROL\n                - SERVICE_ACCOUNTS\n                - ROLES\n                - ROLEBINDINGS\n                - REPORT_CONFIGURATIONS\n                - PROCESS_BASELINES\n                - SUBJECTS\n                - RISKS\n                - VULNERABILITIES\n                - CLUSTER_VULNERABILITIES\n                - IMAGE_VULNERABILITIES\n                - NODE_VULNERABILITIES\n                - COMPONENT_VULN_EDGE\n                - CLUSTER_VULN_EDGE\n                - NETWORK_ENTITY\n                - VULN_REQUEST\n      tags:\n        - SearchService\n  /v1/search/autocomplete:\n    get:\n      operationId: SearchService_Autocomplete\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1AutocompleteResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: categories\n          in: query\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - SEARCH_UNSET\n                - ALERTS\n                - IMAGES\n                - IMAGE_COMPONENTS\n                - IMAGE_VULN_EDGE\n                - IMAGE_COMPONENT_EDGE\n                - POLICIES\n                - DEPLOYMENTS\n                - ACTIVE_COMPONENT\n                - PODS\n                - SECRETS\n                - PROCESS_INDICATORS\n                - COMPLIANCE\n                - CLUSTERS\n                - NAMESPACES\n                - NODES\n                - NODE_VULN_EDGE\n                - NODE_COMPONENT_EDGE\n                - COMPLIANCE_STANDARD\n                - COMPLIANCE_CONTROL_GROUP\n                - COMPLIANCE_CONTROL\n                - SERVICE_ACCOUNTS\n                - ROLES\n                - ROLEBINDINGS\n                - REPORT_CONFIGURATIONS\n                - PROCESS_BASELINES\n                - SUBJECTS\n                - RISKS\n                - VULNERABILITIES\n                - CLUSTER_VULNERABILITIES\n                - IMAGE_VULNERABILITIES\n                - NODE_VULNERABILITIES\n                - COMPONENT_VULN_EDGE\n                - CLUSTER_VULN_EDGE\n                - NETWORK_ENTITY\n                - VULN_REQUEST\n      tags:\n        - SearchService\n  /v1/search/metadata/options:\n    get:\n      operationId: SearchService_Options\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1SearchOptionsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: categories\n          in: query\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - SEARCH_UNSET\n                - ALERTS\n                - IMAGES\n                - IMAGE_COMPONENTS\n                - IMAGE_VULN_EDGE\n                - IMAGE_COMPONENT_EDGE\n                - POLICIES\n                - DEPLOYMENTS\n                - ACTIVE_COMPONENT\n                - PODS\n                - SECRETS\n                - PROCESS_INDICATORS\n                - COMPLIANCE\n                - CLUSTERS\n                - NAMESPACES\n                - NODES\n                - NODE_VULN_EDGE\n                - NODE_COMPONENT_EDGE\n                - COMPLIANCE_STANDARD\n                - COMPLIANCE_CONTROL_GROUP\n                - COMPLIANCE_CONTROL\n                - SERVICE_ACCOUNTS\n                - ROLES\n                - ROLEBINDINGS\n                - REPORT_CONFIGURATIONS\n                - PROCESS_BASELINES\n                - SUBJECTS\n                - RISKS\n                - VULNERABILITIES\n                - CLUSTER_VULNERABILITIES\n                - IMAGE_VULNERABILITIES\n                - NODE_VULNERABILITIES\n                - COMPONENT_VULN_EDGE\n                - CLUSTER_VULN_EDGE\n                - NETWORK_ENTITY\n                - VULN_REQUEST\n      tags:\n        - SearchService\n  /v1/secrets:\n    get:\n      summary: ListSecrets returns the list of secrets.\n      operationId: SecretService_ListSecrets\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1ListSecretsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.limit\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.offset\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.sortOption.field\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.sortOption.reversed\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - SecretService\n  /v1/secrets/{id}:\n    get:\n      summary: GetSecret returns a secret given its ID.\n      operationId: SecretService_GetSecret\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageSecret'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - SecretService\n  /v1/secretscount:\n    get:\n      summary: CountSecrets returns the number of secrets.\n      operationId: SecretService_CountSecrets\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1CountSecretsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.limit\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.offset\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.sortOption.field\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.sortOption.reversed\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - SecretService\n  /v1/sensorupgrades/cluster/{id}:\n    post:\n      operationId: SensorUpgradeService_TriggerSensorUpgrade\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - SensorUpgradeService\n  /v1/sensorupgrades/config:\n    get:\n      operationId: SensorUpgradeService_GetSensorUpgradeConfig\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetSensorUpgradeConfigResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - SensorUpgradeService\n    post:\n      operationId: SensorUpgradeService_UpdateSensorUpgradeConfig\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1UpdateSensorUpgradeConfigRequest'\n        required: true\n      tags:\n        - SensorUpgradeService\n  /v1/sensorupgrades/rotateclustercerts/{id}:\n    post:\n      operationId: SensorUpgradeService_TriggerSensorCertRotation\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - SensorUpgradeService\n  /v1/serviceaccounts:\n    get:\n      operationId: ServiceAccountService_ListServiceAccounts\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1ListServiceAccountResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.limit\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.offset\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.sortOption.field\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.sortOption.reversed\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - ServiceAccountService\n  /v1/serviceaccounts/{id}:\n    get:\n      operationId: ServiceAccountService_GetServiceAccount\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetServiceAccountResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - ServiceAccountService\n  /v1/authorities:\n    get:\n      summary: GetAuthorities returns the authorities currently in use.\n      operationId: ServiceIdentityService_GetAuthorities\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Authorities'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - ServiceIdentityService\n  /v1/serviceIdentities:\n    get:\n      operationId: ServiceIdentityService_GetServiceIdentities\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1ServiceIdentityResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - ServiceIdentityService\n    post:\n      summary: |-\n        CreateServiceIdentity creates a new key pair and certificate.\n        The key and certificate are not retained and can never be retrieved again.\n      operationId: ServiceIdentityService_CreateServiceIdentity\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1CreateServiceIdentityResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1CreateServiceIdentityRequest'\n        required: true\n      tags:\n        - ServiceIdentityService\n  /v1/signatureintegrations:\n    get:\n      operationId: SignatureIntegrationService_ListSignatureIntegrations\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1ListSignatureIntegrationsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - SignatureIntegrationService\n    post:\n      summary: |-\n        Integration id should not be set.\n        Returns signature integration with id filled.\n      operationId: SignatureIntegrationService_PostSignatureIntegration\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageSignatureIntegration'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        $ref: '#/components/requestBodies/storageSignatureIntegration'\n      tags:\n        - SignatureIntegrationService\n  /v1/signatureintegrations/{id}:\n    get:\n      operationId: SignatureIntegrationService_GetSignatureIntegration\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageSignatureIntegration'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - SignatureIntegrationService\n    delete:\n      operationId: SignatureIntegrationService_DeleteSignatureIntegration\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - SignatureIntegrationService\n    put:\n      operationId: SignatureIntegrationService_PutSignatureIntegration\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: '#/components/requestBodies/storageSignatureIntegration'\n      tags:\n        - SignatureIntegrationService\n  /v1/summary/counts:\n    get:\n      operationId: SummaryService_GetSummaryCounts\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1SummaryCountsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - SummaryService\n  /v1/telemetry/configure:\n    get:\n      operationId: TelemetryService_GetTelemetryConfiguration\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageTelemetryConfiguration'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - TelemetryService\n    put:\n      operationId: TelemetryService_ConfigureTelemetry\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageTelemetryConfiguration'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1ConfigureTelemetryRequest'\n        required: true\n      tags:\n        - TelemetryService\n  /v1/users:\n    get:\n      operationId: UserService_GetUsers\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetUsersResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - UserService\n  /v1/users/{id}:\n    get:\n      operationId: UserService_GetUser\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/storageUser'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - UserService\n  /v1/usersattributes:\n    get:\n      operationId: UserService_GetUsersAttributes\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetUsersAttributesResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      tags:\n        - UserService\n  /v1/cve/requests:\n    get:\n      summary: ListVulnerabilityRequests returns the list of vulnerability requests.\n      operationId: VulnerabilityRequestService_ListVulnerabilityRequests\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1ListVulnerabilityRequestsResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.limit\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.offset\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: pagination.sortOption.field\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: pagination.sortOption.reversed\n          in: query\n          required: false\n          schema:\n            type: boolean\n      tags:\n        - VulnerabilityRequestService\n  /v1/cve/requests/defer:\n    post:\n      summary: DeferVulnerability starts the deferral process for the specified vulnerability.\n      operationId: VulnerabilityRequestService_DeferVulnerability\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1DeferVulnResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1DeferVulnRequest'\n        required: true\n      tags:\n        - VulnerabilityRequestService\n  /v1/cve/requests/false-positive:\n    post:\n      summary: FalsePositiveVulnerability starts the process to mark the specified vulnerability as false-positive.\n      operationId: VulnerabilityRequestService_FalsePositiveVulnerability\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1FalsePositiveVulnResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1FalsePositiveVulnRequest'\n        required: true\n      tags:\n        - VulnerabilityRequestService\n  /v1/cve/requests/{id}:\n    get:\n      summary: GetVulnerabilityRequest returns the requested vulnerability request by ID.\n      operationId: VulnerabilityRequestService_GetVulnerabilityRequest\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1GetVulnerabilityRequestResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - VulnerabilityRequestService\n    delete:\n      summary: DeleteVulnerabilityRequest deletes a vulnerability request.\n      operationId: VulnerabilityRequestService_DeleteVulnerabilityRequest\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1Empty'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - VulnerabilityRequestService\n  /v1/cve/requests/{id}/approve:\n    post:\n      summary: |-\n        ApproveVulnRequest approve a vulnerability request. If it is an unwatch vulnerability request then the\n        associated vulnerabilities are not watched in workflows such as policy detection, risk, etc.\n      operationId: VulnerabilityRequestService_ApproveVulnerabilityRequest\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1ApproveVulnRequestResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1ApproveVulnRequest'\n        required: true\n      tags:\n        - VulnerabilityRequestService\n  /v1/cve/requests/{id}/deny:\n    post:\n      summary: DenyVulnRequest denies a vulnerability request.\n      operationId: VulnerabilityRequestService_DenyVulnerabilityRequest\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1DenyVulnRequestResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1DenyVulnRequest'\n        required: true\n      tags:\n        - VulnerabilityRequestService\n  /v1/cve/requests/{id}/undo:\n    post:\n      summary: UndoVulnerabilityRequest undoes a vulnerability request.\n      operationId: VulnerabilityRequestService_UndoVulnerabilityRequest\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1UndoVulnRequestResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      tags:\n        - VulnerabilityRequestService\n  /v1/cve/requests/{id}/update:\n    post:\n      summary: UpdateVulnerabilityRequest updates an existing vulnerability request. Currently only deferral expiration time can be updated.\n      operationId: VulnerabilityRequestService_UpdateVulnerabilityRequest\n      responses:\n        '200':\n          description: A successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1UpdateVulnRequestResponse'\n        default:\n          description: An unexpected error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/runtimeError'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1UpdateVulnRequest'\n        required: true\n      tags:\n        - VulnerabilityRequestService\nservers:\n  - url: https://staging.demo.stackrox.com\ncomponents:\n  requestBodies:\n    storageGroup:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/storageGroup'\n      required: true\n    v1UpsertAuthzPluginConfigRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/v1UpsertAuthzPluginConfigRequest'\n      required: true\n    v1ResourceByID:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/v1ResourceByID'\n      required: true\n    storageNetworkPolicyModification:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/storageNetworkPolicyModification'\n      required: true\n    v1UpdateNotifierRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/v1UpdateNotifierRequest'\n      required: true\n    storageAuthzPluginConfig:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/storageAuthzPluginConfig'\n      required: true\n    storageRole:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/storageRole'\n      required: true\n    v1UpdateExternalBackupRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/v1UpdateExternalBackupRequest'\n      required: true\n    storageSignatureIntegration:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/storageSignatureIntegration'\n      required: true\n    storageImageIntegration:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/storageImageIntegration'\n      required: true\n    storageSimpleAccessScope:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/storageSimpleAccessScope'\n      required: true\n    storageAuthProvider:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/storageAuthProvider'\n      required: true\n    storageExternalBackup:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/storageExternalBackup'\n      required: true\n    storageCluster:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/storageCluster'\n      required: true\n    v1UpdateImageIntegrationRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/v1UpdateImageIntegrationRequest'\n      required: true\n    storageNotifier:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/storageNotifier'\n      required: true\n    storagePolicy:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/storagePolicy'\n      required: true\n    storagePermissionSet:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/storagePermissionSet'\n      required: true\n  schemas:\n    AlertDeploymentContainer:\n      type: object\n      properties:\n        image:\n          $ref: '#/components/schemas/storageContainerImage'\n        name:\n          type: string\n    AlertEnforcement:\n      type: object\n      properties:\n        action:\n          $ref: '#/components/schemas/storageEnforcementAction'\n        message:\n          type: string\n    AlertGroupAlertCounts:\n      type: object\n      properties:\n        severity:\n          $ref: '#/components/schemas/storageSeverity'\n        count:\n          type: string\n          format: int64\n    AlertProcessViolation:\n      type: object\n      properties:\n        message:\n          type: string\n        processes:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageProcessIndicator'\n    AlertResource:\n      type: object\n      properties:\n        resourceType:\n          $ref: '#/components/schemas/AlertResourceResourceType'\n        name:\n          type: string\n        clusterId:\n          type: string\n        clusterName:\n          type: string\n        namespace:\n          type: string\n        namespaceId:\n          type: string\n      title: Represents an alert on a kubernetes resource (configmaps, secrets, etc.)\n    AlertResourceResourceType:\n      type: string\n      enum:\n        - UNKNOWN\n        - SECRETS\n        - CONFIGMAPS\n      default: UNKNOWN\n    AlertViolation:\n      type: object\n      properties:\n        message:\n          type: string\n        keyValueAttrs:\n          $ref: '#/components/schemas/ViolationKeyValueAttrs'\n        networkFlowInfo:\n          $ref: '#/components/schemas/ViolationNetworkFlowInfo'\n        type:\n          $ref: '#/components/schemas/AlertViolationType'\n        time:\n          type: string\n          format: date-time\n          description: |-\n            Indicates violation time. This field differs from top-level field 'time' which represents last time the alert\n            occurred in case of multiple occurrences of the policy alert. As of 55.0, this field is set only for kubernetes\n            event violations, but may not be limited to it in future.\n    AlertViolationType:\n      type: string\n      enum:\n        - GENERIC\n        - K8S_EVENT\n        - NETWORK_FLOW\n        - NETWORK_POLICY\n      default: GENERIC\n    ClusterAlertsAlertEvents:\n      type: object\n      properties:\n        severity:\n          $ref: '#/components/schemas/storageSeverity'\n        events:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1AlertEvent'\n    EnvironmentConfigEnvVarSource:\n      type: string\n      enum:\n        - UNSET\n        - RAW\n        - SECRET_KEY\n        - CONFIG_MAP_KEY\n        - FIELD\n        - RESOURCE_FIELD\n        - UNKNOWN\n      default: UNSET\n      title: For any update to EnvVarSource, please also update 'ui/src/messages/common.js'\n    GetAlertTimeseriesResponseClusterAlerts:\n      type: object\n      properties:\n        cluster:\n          type: string\n        severities:\n          type: array\n          items:\n            $ref: '#/components/schemas/ClusterAlertsAlertEvents'\n    GetAlertsCountsRequestRequestGroup:\n      type: string\n      enum:\n        - UNSET\n        - CATEGORY\n        - CLUSTER\n      default: UNSET\n    GetAlertsCountsResponseAlertGroup:\n      type: object\n      properties:\n        group:\n          type: string\n        counts:\n          type: array\n          items:\n            $ref: '#/components/schemas/AlertGroupAlertCounts'\n    KeyValueAttrsKeyValueAttr:\n      type: object\n      properties:\n        key:\n          type: string\n        value:\n          type: string\n    ListAlertCommonEntityInfo:\n      type: object\n      properties:\n        clusterName:\n          type: string\n        namespace:\n          type: string\n        clusterId:\n          type: string\n        namespaceId:\n          type: string\n        resourceType:\n          $ref: '#/components/schemas/storageListAlertResourceType'\n      description: Fields common to all entities that an alert might belong to.\n    ListAlertPolicyDevFields:\n      type: object\n      properties:\n        SORTName:\n          type: string\n    ListAlertResourceEntity:\n      type: object\n      properties:\n        name:\n          type: string\n    NetworkFlowInfoEntity:\n      type: object\n      properties:\n        name:\n          type: string\n        entityType:\n          $ref: '#/components/schemas/storageNetworkEntityInfoType'\n        deploymentNamespace:\n          type: string\n        deploymentType:\n          type: string\n        port:\n          type: integer\n          format: int32\n    PolicyMitreAttackVectors:\n      type: object\n      properties:\n        tactic:\n          type: string\n        techniques:\n          type: array\n          items:\n            type: string\n    PortConfigExposureLevel:\n      type: string\n      enum:\n        - UNSET\n        - EXTERNAL\n        - NODE\n        - INTERNAL\n        - HOST\n        - ROUTE\n      default: UNSET\n    ProcessSignalLineageInfo:\n      type: object\n      properties:\n        parentUid:\n          type: integer\n          format: int64\n        parentExecFilePath:\n          type: string\n    ViolationKeyValueAttrs:\n      type: object\n      properties:\n        attrs:\n          type: array\n          items:\n            $ref: '#/components/schemas/KeyValueAttrsKeyValueAttr'\n    ViolationNetworkFlowInfo:\n      type: object\n      properties:\n        protocol:\n          $ref: '#/components/schemas/storageL4Protocol'\n        source:\n          $ref: '#/components/schemas/NetworkFlowInfoEntity'\n        destination:\n          $ref: '#/components/schemas/NetworkFlowInfoEntity'\n    protobufAny:\n      type: object\n      properties:\n        typeUrl:\n          type: string\n          description: |-\n            A URL/resource name that uniquely identifies the type of the serialized\n            protocol buffer message. This string must contain at least\n            one \"/\" character. The last segment of the URL's path must represent\n            the fully qualified name of the type (as in\n            `path/google.protobuf.Duration`). The name should be in a canonical form\n            (e.g., leading \".\" is not accepted).\n\n            In practice, teams usually precompile into the binary all types that they\n            expect it to use in the context of Any. However, for URLs which use the\n            scheme `http`, `https`, or no scheme, one can optionally set up a type\n            server that maps type URLs to message definitions as follows:\n\n            * If no scheme is provided, `https` is assumed.\n            * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n              value in binary format, or produce an error.\n            * Applications are allowed to cache lookup results based on the\n              URL, or have them precompiled into a binary to avoid any\n              lookup. Therefore, binary compatibility needs to be preserved\n              on changes to types. (Use versioned type names to manage\n              breaking changes.)\n\n            Note: this functionality is not currently available in the official\n            protobuf release, and it is not used for type URLs beginning with\n            type.googleapis.com.\n\n            Schemes other than `http`, `https` (or the empty scheme) might be\n            used with implementation specific semantics.\n        value:\n          type: string\n          format: byte\n          description: Must be a valid serialized protocol buffer of the above specified type.\n      description: |-\n        `Any` contains an arbitrary serialized protocol buffer message along with a\n        URL that describes the type of the serialized message.\n\n        Protobuf library provides support to pack/unpack Any values in the form\n        of utility functions or additional generated methods of the Any type.\n\n        Example 1: Pack and unpack a message in C++.\n\n            Foo foo = ...;\n            Any any;\n            any.PackFrom(foo);\n            ...\n            if (any.UnpackTo(\u0026foo)) {\n              ...\n            }\n\n        Example 2: Pack and unpack a message in Java.\n\n            Foo foo = ...;\n            Any any = Any.pack(foo);\n            ...\n            if (any.is(Foo.class)) {\n              foo = any.unpack(Foo.class);\n            }\n\n         Example 3: Pack and unpack a message in Python.\n\n            foo = Foo(...)\n            any = Any()\n            any.Pack(foo)\n            ...\n            if any.Is(Foo.DESCRIPTOR):\n              any.Unpack(foo)\n              ...\n\n         Example 4: Pack and unpack a message in Go\n\n             foo := \u0026pb.Foo{...}\n             any, err := anypb.New(foo)\n             if err != nil {\n               ...\n             }\n             ...\n             foo := \u0026pb.Foo{}\n             if err := any.UnmarshalTo(foo); err != nil {\n               ...\n             }\n\n        The pack methods provided by protobuf library will by default use\n        'type.googleapis.com/full.type.name' as the type URL and the unpack\n        methods only use the fully qualified type name after the last '/'\n        in the type URL, for example \"foo.bar.com/x/y.z\" will yield type\n        name \"y.z\".\n\n\n        JSON\n        ====\n        The JSON representation of an `Any` value uses the regular\n        representation of the deserialized, embedded message, with an\n        additional field `@type` which contains the type URL. Example:\n\n            package google.profile;\n            message Person {\n              string first_name = 1;\n              string last_name = 2;\n            }\n\n            {\n              \"@type\": \"type.googleapis.com/google.profile.Person\",\n              \"firstName\": \u003cstring\u003e,\n              \"lastName\": \u003cstring\u003e\n            }\n\n        If the embedded message type is well-known and has a custom JSON\n        representation, that representation will be embedded adding a field\n        `value` which holds the custom JSON in addition to the `@type`\n        field. Example (for message [google.protobuf.Duration][]):\n\n            {\n              \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n              \"value\": \"1.212s\"\n            }\n    runtimeError:\n      type: object\n      properties:\n        error:\n          type: string\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n        details:\n          type: array\n          items:\n            $ref: '#/components/schemas/protobufAny'\n    storageAlert:\n      type: object\n      properties:\n        id:\n          type: string\n        policy:\n          $ref: '#/components/schemas/storagePolicy'\n        lifecycleStage:\n          $ref: '#/components/schemas/storageLifecycleStage'\n        clusterId:\n          type: string\n        clusterName:\n          type: string\n        namespace:\n          type: string\n        namespaceId:\n          type: string\n        deployment:\n          $ref: '#/components/schemas/storageAlertDeployment'\n        image:\n          $ref: '#/components/schemas/storageContainerImage'\n        resource:\n          $ref: '#/components/schemas/AlertResource'\n        violations:\n          type: array\n          items:\n            $ref: '#/components/schemas/AlertViolation'\n          description: For run-time phase alert, a maximum of 40 violations are retained.\n        processViolation:\n          $ref: '#/components/schemas/AlertProcessViolation'\n        enforcement:\n          $ref: '#/components/schemas/AlertEnforcement'\n        time:\n          type: string\n          format: date-time\n        firstOccurred:\n          type: string\n          format: date-time\n        resolvedAt:\n          type: string\n          format: date-time\n          description: The time at which the alert was resolved. Only set if ViolationState is RESOLVED.\n        state:\n          $ref: '#/components/schemas/storageViolationState'\n        snoozeTill:\n          type: string\n          format: date-time\n        tags:\n          type: array\n          items:\n            type: string\n    storageAlertDeployment:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        type:\n          type: string\n        namespace:\n          type: string\n        namespaceId:\n          type: string\n        labels:\n          type: object\n          additionalProperties:\n            type: string\n        clusterId:\n          type: string\n        clusterName:\n          type: string\n        containers:\n          type: array\n          items:\n            $ref: '#/components/schemas/AlertDeploymentContainer'\n        annotations:\n          type: object\n          additionalProperties:\n            type: string\n        inactive:\n          type: boolean\n    storageBooleanOperator:\n      type: string\n      enum:\n        - OR\n        - AND\n      default: OR\n    storageComparator:\n      type: string\n      enum:\n        - LESS_THAN\n        - LESS_THAN_OR_EQUALS\n        - EQUALS\n        - GREATER_THAN_OR_EQUALS\n        - GREATER_THAN\n      default: LESS_THAN\n    storageComponent:\n      type: object\n      properties:\n        name:\n          type: string\n        version:\n          type: string\n    storageContainerImage:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          $ref: '#/components/schemas/storageImageName'\n        notPullable:\n          type: boolean\n        isClusterLocal:\n          type: boolean\n      title: 'Next tag: 12'\n    storageDockerfileLineRuleField:\n      type: object\n      properties:\n        instruction:\n          type: string\n        value:\n          type: string\n    storageEnforcementAction:\n      type: string\n      enum:\n        - UNSET_ENFORCEMENT\n        - SCALE_TO_ZERO_ENFORCEMENT\n        - UNSATISFIABLE_NODE_CONSTRAINT_ENFORCEMENT\n        - KILL_POD_ENFORCEMENT\n        - FAIL_BUILD_ENFORCEMENT\n        - FAIL_KUBE_REQUEST_ENFORCEMENT\n        - FAIL_DEPLOYMENT_CREATE_ENFORCEMENT\n        - FAIL_DEPLOYMENT_UPDATE_ENFORCEMENT\n      default: UNSET_ENFORCEMENT\n      description: |2-\n         - FAIL_KUBE_REQUEST_ENFORCEMENT: FAIL_KUBE_REQUEST_ENFORCEMENT takes effect only if admission control webhook is enabled to listen on exec and port-forward events.\n         - FAIL_DEPLOYMENT_CREATE_ENFORCEMENT: FAIL_DEPLOYMENT_CREATE_ENFORCEMENT takes effect only if admission control webhook is configured to enforce on object creates.\n         - FAIL_DEPLOYMENT_UPDATE_ENFORCEMENT: FAIL_DEPLOYMENT_UPDATE_ENFORCEMENT takes effect only if admission control webhook is configured to enforce on object updates.\n    storageEventSource:\n      type: string\n      enum:\n        - NOT_APPLICABLE\n        - DEPLOYMENT_EVENT\n        - AUDIT_LOG_EVENT\n      default: NOT_APPLICABLE\n    storageExclusion:\n      type: object\n      properties:\n        name:\n          type: string\n        deployment:\n          $ref: '#/components/schemas/storageExclusionDeployment'\n        image:\n          $ref: '#/components/schemas/storageExclusionImage'\n        expiration:\n          type: string\n          format: date-time\n    storageExclusionDeployment:\n      type: object\n      properties:\n        name:\n          type: string\n        scope:\n          $ref: '#/components/schemas/storageScope'\n    storageExclusionImage:\n      type: object\n      properties:\n        name:\n          type: string\n    storageHostMountPolicy:\n      type: object\n      properties:\n        readOnly:\n          type: boolean\n    storageImageName:\n      type: object\n      properties:\n        registry:\n          type: string\n        remote:\n          type: string\n        tag:\n          type: string\n        fullName:\n          type: string\n    storageImageNamePolicy:\n      type: object\n      properties:\n        registry:\n          type: string\n        remote:\n          type: string\n        tag:\n          type: string\n    storageKeyValuePolicy:\n      type: object\n      properties:\n        key:\n          type: string\n        value:\n          type: string\n        envVarSource:\n          $ref: '#/components/schemas/EnvironmentConfigEnvVarSource'\n    storageL4Protocol:\n      type: string\n      enum:\n        - L4_PROTOCOL_UNKNOWN\n        - L4_PROTOCOL_TCP\n        - L4_PROTOCOL_UDP\n        - L4_PROTOCOL_ICMP\n        - L4_PROTOCOL_RAW\n        - L4_PROTOCOL_SCTP\n        - L4_PROTOCOL_ANY\n      default: L4_PROTOCOL_UNKNOWN\n    storageLifecycleStage:\n      type: string\n      enum:\n        - DEPLOY\n        - BUILD\n        - RUNTIME\n      default: DEPLOY\n    storageListAlert:\n      type: object\n      properties:\n        id:\n          type: string\n        lifecycleStage:\n          $ref: '#/components/schemas/storageLifecycleStage'\n        time:\n          type: string\n          format: date-time\n        policy:\n          $ref: '#/components/schemas/storageListAlertPolicy'\n        state:\n          $ref: '#/components/schemas/storageViolationState'\n        enforcementCount:\n          type: integer\n          format: int32\n        tags:\n          type: array\n          items:\n            type: string\n        enforcementAction:\n          $ref: '#/components/schemas/storageEnforcementAction'\n        commonEntityInfo:\n          $ref: '#/components/schemas/ListAlertCommonEntityInfo'\n        deployment:\n          $ref: '#/components/schemas/storageListAlertDeployment'\n        resource:\n          $ref: '#/components/schemas/ListAlertResourceEntity'\n    storageListAlertDeployment:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        clusterName:\n          type: string\n          description: This field is deprecated and can be found in CommonEntityInfo. It will be removed from here in a future release.\n        namespace:\n          type: string\n          description: This field is deprecated and can be found in CommonEntityInfo. It will be removed from here in a future release.\n        clusterId:\n          type: string\n          description: This field is deprecated and can be found in CommonEntityInfo. It will be removed from here in a future release.\n        inactive:\n          type: boolean\n        namespaceId:\n          type: string\n          description: This field is deprecated and can be found in CommonEntityInfo. It will be removed from here in a future release.\n    storageListAlertPolicy:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        severity:\n          $ref: '#/components/schemas/storageSeverity'\n        description:\n          type: string\n        categories:\n          type: array\n          items:\n            type: string\n        developerInternalFields:\n          $ref: '#/components/schemas/ListAlertPolicyDevFields'\n    storageListAlertResourceType:\n      type: string\n      enum:\n        - DEPLOYMENT\n        - SECRETS\n        - CONFIGMAPS\n      default: DEPLOYMENT\n      title: |-\n        A special ListAlert-only enumeration of all resource types. Unlike Alert.Resource.ResourceType this also includes deployment as a type\n        This must be kept in sync with Alert.Resource.ResourceType (excluding the deployment value)\n    storageNetworkEntityInfoType:\n      type: string\n      enum:\n        - UNKNOWN_TYPE\n        - DEPLOYMENT\n        - INTERNET\n        - LISTEN_ENDPOINT\n        - EXTERNAL_SOURCE\n      default: UNKNOWN_TYPE\n    storageNumericalPolicy:\n      type: object\n      properties:\n        op:\n          $ref: '#/components/schemas/storageComparator'\n        value:\n          type: number\n          format: float\n    storagePermissionLevel:\n      type: string\n      enum:\n        - UNSET\n        - NONE\n        - DEFAULT\n        - ELEVATED_IN_NAMESPACE\n        - ELEVATED_CLUSTER_WIDE\n        - CLUSTER_ADMIN\n      default: UNSET\n      title: |-\n        For any update to PermissionLevel, also update:\n        - pkg/searchbasedpolicies/builders/k8s_rbac.go\n        - ui/src/messages/common.js\n    storagePermissionPolicy:\n      type: object\n      properties:\n        permissionLevel:\n          $ref: '#/components/schemas/storagePermissionLevel'\n      description: K8S RBAC Permission level configuration.\n    storagePolicy:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        rationale:\n          type: string\n        remediation:\n          type: string\n        disabled:\n          type: boolean\n        categories:\n          type: array\n          items:\n            type: string\n        fields:\n          $ref: '#/components/schemas/storagePolicyFields'\n        lifecycleStages:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageLifecycleStage'\n        eventSource:\n          $ref: '#/components/schemas/storageEventSource'\n        whitelists:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageExclusion'\n        exclusions:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageExclusion'\n        scope:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageScope'\n        severity:\n          $ref: '#/components/schemas/storageSeverity'\n        enforcementActions:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageEnforcementAction'\n          description: |-\n            FAIL_DEPLOYMENT_CREATE_ENFORCEMENT takes effect only if admission control webhook is configured to enforce on object creates/updates.\n            FAIL_KUBE_REQUEST_ENFORCEMENT takes effect only if admission control webhook is enabled to listen on exec and port-forward events.\n            FAIL_DEPLOYMENT_UPDATE_ENFORCEMENT takes effect only if admission control webhook is configured to enforce on object updates.\n        notifiers:\n          type: array\n          items:\n            type: string\n        lastUpdated:\n          type: string\n          format: date-time\n        SORTName:\n          type: string\n          description: For internal use only.\n        SORTLifecycleStage:\n          type: string\n          description: For internal use only.\n        SORTEnforcement:\n          type: boolean\n          description: For internal use only.\n        policyVersion:\n          type: string\n        policySections:\n          type: array\n          items:\n            $ref: '#/components/schemas/storagePolicySection'\n        mitreAttackVectors:\n          type: array\n          items:\n            $ref: '#/components/schemas/PolicyMitreAttackVectors'\n        criteriaLocked:\n          type: boolean\n          description: Read-only field. If true, the policy's criteria fields are rendered read-only.\n        mitreVectorsLocked:\n          type: boolean\n          description: Read-only field. If true, the policy's MITRE ATT\u0026CK fields are rendered read-only.\n        isDefault:\n          type: boolean\n          description: Read-only field. Indicates the policy is a default policy if true and a custom policy if false.\n    storagePolicyFields:\n      type: object\n      properties:\n        imageName:\n          $ref: '#/components/schemas/storageImageNamePolicy'\n        imageAgeDays:\n          type: string\n          format: int64\n        lineRule:\n          $ref: '#/components/schemas/storageDockerfileLineRuleField'\n        cvss:\n          $ref: '#/components/schemas/storageNumericalPolicy'\n        cve:\n          type: string\n        component:\n          $ref: '#/components/schemas/storageComponent'\n        scanAgeDays:\n          type: string\n          format: int64\n        noScanExists:\n          type: boolean\n        env:\n          $ref: '#/components/schemas/storageKeyValuePolicy'\n        command:\n          type: string\n        args:\n          type: string\n        directory:\n          type: string\n        user:\n          type: string\n        volumePolicy:\n          $ref: '#/components/schemas/storageVolumePolicy'\n        portPolicy:\n          $ref: '#/components/schemas/storagePortPolicy'\n        requiredLabel:\n          $ref: '#/components/schemas/storageKeyValuePolicy'\n        requiredAnnotation:\n          $ref: '#/components/schemas/storageKeyValuePolicy'\n        disallowedAnnotation:\n          $ref: '#/components/schemas/storageKeyValuePolicy'\n        privileged:\n          type: boolean\n        dropCapabilities:\n          type: array\n          items:\n            type: string\n        addCapabilities:\n          type: array\n          items:\n            type: string\n        containerResourcePolicy:\n          $ref: '#/components/schemas/storageResourcePolicy'\n        processPolicy:\n          $ref: '#/components/schemas/storageProcessPolicy'\n        readOnlyRootFs:\n          type: boolean\n        fixedBy:\n          type: string\n        portExposurePolicy:\n          $ref: '#/components/schemas/storagePortExposurePolicy'\n        permissionPolicy:\n          $ref: '#/components/schemas/storagePermissionPolicy'\n        hostMountPolicy:\n          $ref: '#/components/schemas/storageHostMountPolicy'\n        whitelistEnabled:\n          type: boolean\n        requiredImageLabel:\n          $ref: '#/components/schemas/storageKeyValuePolicy'\n        disallowedImageLabel:\n          $ref: '#/components/schemas/storageKeyValuePolicy'\n        imageSignatureVerifiedBy:\n          type: string\n      title: 'Next Available Tag: 29'\n    storagePolicyGroup:\n      type: object\n      properties:\n        fieldName:\n          type: string\n        booleanOperator:\n          $ref: '#/components/schemas/storageBooleanOperator'\n        negate:\n          type: boolean\n        values:\n          type: array\n          items:\n            $ref: '#/components/schemas/storagePolicyValue'\n    storagePolicySection:\n      type: object\n      properties:\n        sectionName:\n          type: string\n        policyGroups:\n          type: array\n          items:\n            $ref: '#/components/schemas/storagePolicyGroup'\n    storagePolicyValue:\n      type: object\n      properties:\n        value:\n          type: string\n    storagePortExposurePolicy:\n      type: object\n      properties:\n        exposureLevels:\n          type: array\n          items:\n            $ref: '#/components/schemas/PortConfigExposureLevel'\n    storagePortPolicy:\n      type: object\n      properties:\n        port:\n          type: integer\n          format: int32\n        protocol:\n          type: string\n    storageProcessIndicator:\n      type: object\n      properties:\n        id:\n          type: string\n          title: A unique uuid for the Indicator message\n        deploymentId:\n          type: string\n        containerName:\n          type: string\n        podId:\n          type: string\n          title: Pod name\n        podUid:\n          type: string\n        signal:\n          $ref: '#/components/schemas/storageProcessSignal'\n        clusterId:\n          type: string\n        namespace:\n          type: string\n        containerStartTime:\n          type: string\n          format: date-time\n        imageId:\n          type: string\n      title: 'Next available tag: 13'\n    storageProcessPolicy:\n      type: object\n      properties:\n        name:\n          type: string\n        args:\n          type: string\n        ancestor:\n          type: string\n        uid:\n          type: string\n    storageProcessSignal:\n      type: object\n      properties:\n        id:\n          type: string\n          description: |-\n            A unique UUID for identifying the message\n            We have this here instead of at the top level\n            because we want to have each message to be\n            self contained.\n        containerId:\n          type: string\n          title: ID of container associated with this process\n        time:\n          type: string\n          format: date-time\n          title: Process creation time\n        name:\n          type: string\n          title: Process name\n        args:\n          type: string\n          title: Process arguments\n        execFilePath:\n          type: string\n          title: Process executable file path\n        pid:\n          type: integer\n          format: int64\n          title: Host process ID\n        uid:\n          type: integer\n          format: int64\n          title: Real user ID\n        gid:\n          type: integer\n          format: int64\n          title: Real group ID\n        lineage:\n          type: array\n          items:\n            type: string\n          title: Process Lineage\n        scraped:\n          type: boolean\n          title: Signal origin\n        lineageInfo:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProcessSignalLineageInfo'\n          title: Process LineageInfo\n    storageResourcePolicy:\n      type: object\n      properties:\n        cpuResourceRequest:\n          $ref: '#/components/schemas/storageNumericalPolicy'\n        cpuResourceLimit:\n          $ref: '#/components/schemas/storageNumericalPolicy'\n        memoryResourceRequest:\n          $ref: '#/components/schemas/storageNumericalPolicy'\n        memoryResourceLimit:\n          $ref: '#/components/schemas/storageNumericalPolicy'\n    storageScope:\n      type: object\n      properties:\n        cluster:\n          type: string\n        namespace:\n          type: string\n        label:\n          $ref: '#/components/schemas/storageScopeLabel'\n    storageScopeLabel:\n      type: object\n      properties:\n        key:\n          type: string\n        value:\n          type: string\n    storageSeverity:\n      type: string\n      enum:\n        - UNSET_SEVERITY\n        - LOW_SEVERITY\n        - MEDIUM_SEVERITY\n        - HIGH_SEVERITY\n        - CRITICAL_SEVERITY\n      default: UNSET_SEVERITY\n    storageViolationState:\n      type: string\n      enum:\n        - ACTIVE\n        - SNOOZED\n        - RESOLVED\n        - ATTEMPTED\n      default: ACTIVE\n    storageVolumePolicy:\n      type: object\n      properties:\n        name:\n          type: string\n        source:\n          type: string\n        destination:\n          type: string\n        readOnly:\n          type: boolean\n        type:\n          type: string\n    v1AlertEvent:\n      type: object\n      properties:\n        time:\n          type: string\n          format: int64\n        type:\n          $ref: '#/components/schemas/v1Type'\n        id:\n          type: string\n    v1CountAlertsResponse:\n      type: object\n      properties:\n        count:\n          type: integer\n          format: int32\n    v1DeleteAlertsResponse:\n      type: object\n      properties:\n        numDeleted:\n          type: integer\n          format: int64\n        dryRun:\n          type: boolean\n    v1Empty:\n      type: object\n    v1GetAlertTimeseriesResponse:\n      type: object\n      properties:\n        clusters:\n          type: array\n          items:\n            $ref: '#/components/schemas/GetAlertTimeseriesResponseClusterAlerts'\n    v1GetAlertsCountsResponse:\n      type: object\n      properties:\n        groups:\n          type: array\n          items:\n            $ref: '#/components/schemas/GetAlertsCountsResponseAlertGroup'\n    v1GetAlertsGroupResponse:\n      type: object\n      properties:\n        alertsByPolicies:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1GetAlertsGroupResponsePolicyGroup'\n    v1GetAlertsGroupResponsePolicyGroup:\n      type: object\n      properties:\n        policy:\n          $ref: '#/components/schemas/storageListAlertPolicy'\n        numAlerts:\n          type: string\n          format: int64\n    v1ListAlertsRequest:\n      type: object\n      properties:\n        query:\n          type: string\n        pagination:\n          $ref: '#/components/schemas/v1Pagination'\n    v1ListAlertsResponse:\n      type: object\n      properties:\n        alerts:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageListAlert'\n    v1Pagination:\n      type: object\n      properties:\n        limit:\n          type: integer\n          format: int32\n        offset:\n          type: integer\n          format: int32\n        sortOption:\n          $ref: '#/components/schemas/v1SortOption'\n    v1RawQuery:\n      type: object\n      properties:\n        query:\n          type: string\n        pagination:\n          $ref: '#/components/schemas/v1Pagination'\n      description: |-\n        RawQuery represents the search query string.\n        The format of the query string is \"\u003cfield name\u003e:\u003cvalue,value,...\u003e+\u003cfield name\u003e:\u003cvalue, value,...\u003e+...\"\n        For example:\n        To search for deployments named \"central\" and \"sensor\" in the namespace \"stackrox\", the query string would be\n        \"Deployment:central,sensor+Namespace:stackrox\"\n        RawQuery is used in ListAPIs to search for a particular object.\n    v1ResolveAlertRequest:\n      type: object\n      properties:\n        id:\n          type: string\n        whitelist:\n          type: boolean\n        addToBaseline:\n          type: boolean\n    v1ResolveAlertsRequest:\n      type: object\n      properties:\n        query:\n          type: string\n    v1SnoozeAlertRequest:\n      type: object\n      properties:\n        id:\n          type: string\n        snoozeTill:\n          type: string\n          format: date-time\n    v1SortOption:\n      type: object\n      properties:\n        field:\n          type: string\n        reversed:\n          type: boolean\n    v1Type:\n      type: string\n      enum:\n        - CREATED\n        - REMOVED\n      default: CREATED\n    storageTokenMetadata:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        roles:\n          type: array\n          items:\n            type: string\n        issuedAt:\n          type: string\n          format: date-time\n        expiration:\n          type: string\n          format: date-time\n        revoked:\n          type: boolean\n        role:\n          type: string\n    v1GenerateTokenRequest:\n      type: object\n      properties:\n        name:\n          type: string\n        role:\n          type: string\n        roles:\n          type: array\n          items:\n            type: string\n    v1GenerateTokenResponse:\n      type: object\n      properties:\n        token:\n          type: string\n        metadata:\n          $ref: '#/components/schemas/storageTokenMetadata'\n    v1GetAPITokensResponse:\n      type: object\n      properties:\n        tokens:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageTokenMetadata'\n    AvailableProviderTypesResponseAuthProviderType:\n      type: object\n      properties:\n        type:\n          type: string\n        suggestedAttributes:\n          type: array\n          items:\n            type: string\n    GetLoginAuthProvidersResponseLoginAuthProvider:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        type:\n          type: string\n        loginUrl:\n          type: string\n    UserInfoResourceToAccess:\n      type: object\n      properties:\n        resourceToAccess:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/storageAccess'\n      description: |-\n        ResourceToAccess represents a collection of permissions. It is wire\n        compatible with the old format of storage.Role and replaces it in\n        places where only aggregated permissions are required.\n    storageAccess:\n      type: string\n      enum:\n        - NO_ACCESS\n        - READ_ACCESS\n        - READ_WRITE_ACCESS\n      default: NO_ACCESS\n    storageAuthProvider:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        type:\n          type: string\n        uiEndpoint:\n          type: string\n        enabled:\n          type: boolean\n        config:\n          type: object\n          additionalProperties:\n            type: string\n        loginUrl:\n          type: string\n          description: The login URL will be provided by the backend, and may not be specified in a request.\n        validated:\n          type: boolean\n        extraUiEndpoints:\n          type: array\n          items:\n            type: string\n          description: |-\n            UI endpoints which to allow in addition to `ui_endpoint`. I.e., if a login request\n            is coming from any of these, the auth request will use these for the callback URL,\n            not ui_endpoint.\n        active:\n          type: boolean\n      title: 'Next Tag: 9'\n    storageServiceIdentity:\n      type: object\n      properties:\n        serial:\n          type: string\n          format: int64\n        serialStr:\n          type: string\n        id:\n          type: string\n        type:\n          $ref: '#/components/schemas/storageServiceType'\n        initBundleId:\n          type: string\n    storageServiceType:\n      type: string\n      enum:\n        - UNKNOWN_SERVICE\n        - SENSOR_SERVICE\n        - CENTRAL_SERVICE\n        - REMOTE_SERVICE\n        - COLLECTOR_SERVICE\n        - MONITORING_UI_SERVICE\n        - MONITORING_DB_SERVICE\n        - MONITORING_CLIENT_SERVICE\n        - BENCHMARK_SERVICE\n        - SCANNER_SERVICE\n        - SCANNER_DB_SERVICE\n        - ADMISSION_CONTROL_SERVICE\n      default: UNKNOWN_SERVICE\n    storageUserInfo:\n      type: object\n      properties:\n        username:\n          type: string\n        friendlyName:\n          type: string\n        permissions:\n          $ref: '#/components/schemas/UserInfoResourceToAccess'\n        roles:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageUserInfoRole'\n    storageUserInfoRole:\n      type: object\n      properties:\n        name:\n          type: string\n        resourceToAccess:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/storageAccess'\n      description: |-\n        Role is wire compatible with the old format of storage.Role and\n        hence only includes role name and associated permissions.\n    v1AuthStatus:\n      type: object\n      properties:\n        userId:\n          type: string\n        serviceId:\n          $ref: '#/components/schemas/storageServiceIdentity'\n        expires:\n          type: string\n          format: date-time\n        refreshUrl:\n          type: string\n        authProvider:\n          $ref: '#/components/schemas/storageAuthProvider'\n        userInfo:\n          $ref: '#/components/schemas/storageUserInfo'\n        userAttributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1UserAttribute'\n    v1AvailableProviderTypesResponse:\n      type: object\n      properties:\n        authProviderTypes:\n          type: array\n          items:\n            $ref: '#/components/schemas/AvailableProviderTypesResponseAuthProviderType'\n    v1ExchangeTokenRequest:\n      type: object\n      properties:\n        externalToken:\n          type: string\n          description: The external authentication token. The server will mask the value of this credential in responses and logs.\n        type:\n          type: string\n        state:\n          type: string\n    v1ExchangeTokenResponse:\n      type: object\n      properties:\n        token:\n          type: string\n        clientState:\n          type: string\n        test:\n          type: boolean\n        user:\n          $ref: '#/components/schemas/v1AuthStatus'\n    v1GetAuthProvidersResponse:\n      type: object\n      properties:\n        authProviders:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageAuthProvider'\n    v1GetLoginAuthProvidersResponse:\n      type: object\n      properties:\n        authProviders:\n          type: array\n          items:\n            $ref: '#/components/schemas/GetLoginAuthProvidersResponseLoginAuthProvider'\n    v1UpdateAuthProviderRequest:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        enabled:\n          type: boolean\n    v1UserAttribute:\n      type: object\n      properties:\n        key:\n          type: string\n        values:\n          type: array\n          items:\n            type: string\n    ScheduleDaysOfMonth:\n      type: object\n      properties:\n        days:\n          type: array\n          items:\n            type: integer\n            format: int32\n      title: 1 for 1st, 2 for 2nd .... 31 for 31st\n    ScheduleDaysOfWeek:\n      type: object\n      properties:\n        days:\n          type: array\n          items:\n            type: integer\n            format: int32\n      title: Sunday = 0, Monday = 1, .... Saturday =  6\n    ScheduleIntervalType:\n      type: string\n      enum:\n        - UNSET\n        - DAILY\n        - WEEKLY\n        - MONTHLY\n      default: UNSET\n    ScheduleWeeklyInterval:\n      type: object\n      properties:\n        day:\n          type: integer\n          format: int32\n    storageExternalBackup:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        type:\n          type: string\n        schedule:\n          $ref: '#/components/schemas/storageSchedule'\n        backupsToKeep:\n          type: integer\n          format: int32\n        s3:\n          $ref: '#/components/schemas/storageS3Config'\n        gcs:\n          $ref: '#/components/schemas/storageGCSConfig'\n        includeCertificates:\n          type: boolean\n    storageGCSConfig:\n      type: object\n      properties:\n        bucket:\n          type: string\n        serviceAccount:\n          type: string\n          description: The service account for the storage integration. The server will mask the value of this credential in responses and logs.\n        objectPrefix:\n          type: string\n        useWorkloadId:\n          type: boolean\n    storageS3Config:\n      type: object\n      properties:\n        bucket:\n          type: string\n        useIam:\n          type: boolean\n        accessKeyId:\n          type: string\n          description: The access key ID for the storage integration. The server will mask the value of this credential in responses and logs.\n        secretAccessKey:\n          type: string\n          description: The secret access key for the storage integration. The server will mask the value of this credential in responses and logs.\n        region:\n          type: string\n        objectPrefix:\n          type: string\n        endpoint:\n          type: string\n    storageSchedule:\n      type: object\n      properties:\n        intervalType:\n          $ref: '#/components/schemas/ScheduleIntervalType'\n        hour:\n          type: integer\n          format: int32\n        minute:\n          type: integer\n          format: int32\n        weekly:\n          $ref: '#/components/schemas/ScheduleWeeklyInterval'\n        daysOfWeek:\n          $ref: '#/components/schemas/ScheduleDaysOfWeek'\n        daysOfMonth:\n          $ref: '#/components/schemas/ScheduleDaysOfMonth'\n    v1GetExternalBackupsResponse:\n      type: object\n      properties:\n        externalBackups:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageExternalBackup'\n    v1UpdateExternalBackupRequest:\n      type: object\n      properties:\n        externalBackup:\n          $ref: '#/components/schemas/storageExternalBackup'\n        updatePassword:\n          type: boolean\n          description: When false, use the stored credentials of an existing external backup configuration given its ID.\n    v1CentralUpgradeStatus:\n      type: object\n      properties:\n        version:\n          type: string\n          title: Current Central Version\n        forceRollbackTo:\n          type: string\n          description: The version of previous replica in Central. This is the version we can force rollback to.\n        canRollbackAfterUpgrade:\n          type: boolean\n          description: If true, we can rollback to the current version if an upgrade failed.\n        spaceRequiredForRollbackAfterUpgrade:\n          type: string\n          format: int64\n          title: Current disk space stats for upgrade\n        spaceAvailableForRollbackAfterUpgrade:\n          type: string\n          format: int64\n    v1GetUpgradeStatusResponse:\n      type: object\n      properties:\n        upgradeStatus:\n          $ref: '#/components/schemas/v1CentralUpgradeStatus'\n    InitBundleMetaImpactedCluster:\n      type: object\n      properties:\n        name:\n          type: string\n        id:\n          type: string\n    InitBundleRevokeResponseInitBundleRevocationError:\n      type: object\n      properties:\n        id:\n          type: string\n        error:\n          type: string\n        impactedClusters:\n          type: array\n          items:\n            $ref: '#/components/schemas/InitBundleMetaImpactedCluster'\n    storageUser:\n      type: object\n      properties:\n        id:\n          type: string\n        authProviderId:\n          type: string\n        attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageUserAttribute'\n      description: User is an object that allows us to track the roles a user is tied to, and how they logged in.\n    storageUserAttribute:\n      type: object\n      properties:\n        key:\n          type: string\n        value:\n          type: string\n    v1GetCAConfigResponse:\n      type: object\n      properties:\n        helmValuesBundle:\n          type: string\n          format: byte\n    v1InitBundleGenRequest:\n      type: object\n      properties:\n        name:\n          type: string\n    v1InitBundleGenResponse:\n      type: object\n      properties:\n        meta:\n          $ref: '#/components/schemas/v1InitBundleMeta'\n        helmValuesBundle:\n          type: string\n          format: byte\n        kubectlBundle:\n          type: string\n          format: byte\n    v1InitBundleMeta:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        impactedClusters:\n          type: array\n          items:\n            $ref: '#/components/schemas/InitBundleMetaImpactedCluster'\n        createdAt:\n          type: string\n          format: date-time\n        createdBy:\n          $ref: '#/components/schemas/storageUser'\n        expiresAt:\n          type: string\n          format: date-time\n    v1InitBundleMetasResponse:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1InitBundleMeta'\n    v1InitBundleRevokeRequest:\n      type: object\n      properties:\n        ids:\n          type: array\n          items:\n            type: string\n        confirmImpactedClustersIds:\n          type: array\n          items:\n            type: string\n    v1InitBundleRevokeResponse:\n      type: object\n      properties:\n        initBundleRevocationErrors:\n          type: array\n          items:\n            $ref: '#/components/schemas/InitBundleRevokeResponseInitBundleRevocationError'\n        initBundleRevokedIds:\n          type: array\n          items:\n            type: string\n    ClusterHealthStatusHealthStatusLabel:\n      type: string\n      enum:\n        - UNINITIALIZED\n        - UNAVAILABLE\n        - UNHEALTHY\n        - DEGRADED\n        - HEALTHY\n      default: UNINITIALIZED\n      title: '- UNAVAILABLE: Only collector can have unavailable status'\n    ClusterUpgradeStatusUpgradability:\n      type: string\n      enum:\n        - UNSET\n        - UP_TO_DATE\n        - MANUAL_UPGRADE_REQUIRED\n        - AUTO_UPGRADE_POSSIBLE\n        - SENSOR_VERSION_HIGHER\n      default: UNSET\n      description: |2-\n         - SENSOR_VERSION_HIGHER: SENSOR_VERSION_HIGHER occurs when we detect that the sensor\n        is running a newer version than this Central. This is unexpected,\n        but can occur depending on the patches a customer does.\n        In this case, we will NOT automatically \"upgrade\" the sensor,\n        since that would be a downgrade, even if the autoupgrade setting is\n        on. The user will be allowed to manually trigger the upgrade, but they are\n        strongly discouraged from doing so without upgrading Central first, since this\n        is an unsupported configuration.\n    ClusterUpgradeStatusUpgradeProcessStatus:\n      type: object\n      properties:\n        active:\n          type: boolean\n        id:\n          type: string\n        targetVersion:\n          type: string\n        upgraderImage:\n          type: string\n        initiatedAt:\n          type: string\n          format: date-time\n        progress:\n          $ref: '#/components/schemas/storageUpgradeProgress'\n        type:\n          $ref: '#/components/schemas/UpgradeProcessStatusUpgradeProcessType'\n    UpgradeProcessStatusUpgradeProcessType:\n      type: string\n      enum:\n        - UPGRADE\n        - CERT_ROTATION\n      default: UPGRADE\n      description: |2-\n         - UPGRADE: UPGRADE represents a sensor version upgrade.\n         - CERT_ROTATION: CERT_ROTATION represents an upgrade process that only rotates the TLS certs\n        used by the cluster, without changing anything else.\n    UpgradeProgressUpgradeState:\n      type: string\n      enum:\n        - UPGRADE_INITIALIZING\n        - UPGRADER_LAUNCHING\n        - UPGRADER_LAUNCHED\n        - PRE_FLIGHT_CHECKS_COMPLETE\n        - UPGRADE_OPERATIONS_DONE\n        - UPGRADE_COMPLETE\n        - UPGRADE_INITIALIZATION_ERROR\n        - PRE_FLIGHT_CHECKS_FAILED\n        - UPGRADE_ERROR_ROLLING_BACK\n        - UPGRADE_ERROR_ROLLED_BACK\n        - UPGRADE_ERROR_ROLLBACK_FAILED\n        - UPGRADE_ERROR_UNKNOWN\n        - UPGRADE_TIMED_OUT\n      default: UPGRADE_INITIALIZING\n      description: |2-\n         - UPGRADER_LAUNCHING: In-progress states.\n         - UPGRADE_COMPLETE: The success state.\n        PLEASE NUMBER ALL IN-PROGRESS STATES ABOVE THIS\n        AND ALL ERROR STATES BELOW THIS.\n         - UPGRADE_INITIALIZATION_ERROR: Error states.\n    storageAWSProviderMetadata:\n      type: object\n      properties:\n        accountId:\n          type: string\n    storageAdmissionControlHealthInfo:\n      type: object\n      properties:\n        totalDesiredPods:\n          type: integer\n          format: int32\n        totalReadyPods:\n          type: integer\n          format: int32\n        statusErrors:\n          type: array\n          items:\n            type: string\n          description: Collection of errors that occurred while trying to obtain admission control health info.\n      description: |-\n        AdmissionControlHealthInfo carries data about admission control deployment but does not include admission control health status\n        derived from this data.\n        Aggregated admission control health status is not included because it is derived in central and not in the component that\n        first reports AdmissionControlHealthInfo (sensor).\n    storageAdmissionControllerConfig:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n        timeoutSeconds:\n          type: integer\n          format: int32\n        scanInline:\n          type: boolean\n        disableBypass:\n          type: boolean\n        enforceOnUpdates:\n          type: boolean\n    storageAuditLogFileState:\n      type: object\n      properties:\n        collectLogsSince:\n          type: string\n          format: date-time\n        lastAuditId:\n          type: string\n      title: |-\n        AuditLogFileState tracks the last audit log event timestamp and ID that was collected by Compliance\n        For internal use only\n    storageAzureProviderMetadata:\n      type: object\n      properties:\n        subscriptionId:\n          type: string\n    storageCluster:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        type:\n          $ref: '#/components/schemas/storageClusterType'\n        labels:\n          type: object\n          additionalProperties:\n            type: string\n        mainImage:\n          type: string\n        collectorImage:\n          type: string\n        centralApiEndpoint:\n          type: string\n        runtimeSupport:\n          type: boolean\n        collectionMethod:\n          $ref: '#/components/schemas/storageCollectionMethod'\n        admissionController:\n          type: boolean\n        admissionControllerUpdates:\n          type: boolean\n        admissionControllerEvents:\n          type: boolean\n        status:\n          $ref: '#/components/schemas/storageClusterStatus'\n        dynamicConfig:\n          $ref: '#/components/schemas/storageDynamicClusterConfig'\n        tolerationsConfig:\n          $ref: '#/components/schemas/storageTolerationsConfig'\n        priority:\n          type: string\n          format: int64\n        healthStatus:\n          $ref: '#/components/schemas/storageClusterHealthStatus'\n        slimCollector:\n          type: boolean\n        helmConfig:\n          $ref: '#/components/schemas/storageCompleteClusterConfig'\n        mostRecentSensorId:\n          $ref: '#/components/schemas/storageSensorDeploymentIdentification'\n        auditLogState:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/storageAuditLogFileState'\n          description: For internal use only.\n        initBundleId:\n          type: string\n        managedBy:\n          $ref: '#/components/schemas/storageManagerType'\n    storageClusterCertExpiryStatus:\n      type: object\n      properties:\n        sensorCertExpiry:\n          type: string\n          format: date-time\n        sensorCertNotBefore:\n          type: string\n          format: date-time\n    storageClusterHealthStatus:\n      type: object\n      properties:\n        id:\n          type: string\n        collectorHealthInfo:\n          $ref: '#/components/schemas/storageCollectorHealthInfo'\n        admissionControlHealthInfo:\n          $ref: '#/components/schemas/storageAdmissionControlHealthInfo'\n        sensorHealthStatus:\n          $ref: '#/components/schemas/ClusterHealthStatusHealthStatusLabel'\n        collectorHealthStatus:\n          $ref: '#/components/schemas/ClusterHealthStatusHealthStatusLabel'\n        overallHealthStatus:\n          $ref: '#/components/schemas/ClusterHealthStatusHealthStatusLabel'\n        admissionControlHealthStatus:\n          $ref: '#/components/schemas/ClusterHealthStatusHealthStatusLabel'\n        lastContact:\n          type: string\n          format: date-time\n          title: |-\n            For sensors not having health capability, this will be filled with gRPC connection poll. Otherwise,\n            this timestamp will be updated by central pipeline when message is processed\n        healthInfoComplete:\n          type: boolean\n          title: To track cases such as when sensor is healthy, but collector status data is unavailable because the sensor is on an old version\n    storageClusterStatus:\n      type: object\n      properties:\n        sensorVersion:\n          type: string\n        DEPRECATEDLastContact:\n          type: string\n          format: date-time\n          description: This field has been deprecated starting release 49.0. Use healthStatus.lastContact instead.\n        providerMetadata:\n          $ref: '#/components/schemas/storageProviderMetadata'\n        orchestratorMetadata:\n          $ref: '#/components/schemas/storageOrchestratorMetadata'\n        upgradeStatus:\n          $ref: '#/components/schemas/storageClusterUpgradeStatus'\n        certExpiryStatus:\n          $ref: '#/components/schemas/storageClusterCertExpiryStatus'\n    storageClusterType:\n      type: string\n      enum:\n        - GENERIC_CLUSTER\n        - KUBERNETES_CLUSTER\n        - OPENSHIFT_CLUSTER\n        - OPENSHIFT4_CLUSTER\n      default: GENERIC_CLUSTER\n    storageClusterUpgradeStatus:\n      type: object\n      properties:\n        upgradability:\n          $ref: '#/components/schemas/ClusterUpgradeStatusUpgradability'\n        upgradabilityStatusReason:\n          type: string\n        mostRecentProcess:\n          $ref: '#/components/schemas/ClusterUpgradeStatusUpgradeProcessStatus'\n    storageCollectionMethod:\n      type: string\n      enum:\n        - UNSET_COLLECTION\n        - NO_COLLECTION\n        - KERNEL_MODULE\n        - EBPF\n      default: UNSET_COLLECTION\n    storageCollectorHealthInfo:\n      type: object\n      properties:\n        version:\n          type: string\n          title: This is the version of the collector deamonset as returned by k8s API\n        totalDesiredPods:\n          type: integer\n          format: int32\n        totalReadyPods:\n          type: integer\n          format: int32\n        totalRegisteredNodes:\n          type: integer\n          format: int32\n        statusErrors:\n          type: array\n          items:\n            type: string\n          description: Collection of errors that occurred while trying to obtain collector health info.\n      description: |-\n        CollectorHealthInfo carries data about collector deployment but does not include collector health status derived from this data.\n        Aggregated collector health status is not included because it is derived in central and not in the component that\n        first reports CollectorHealthInfo (sensor).\n    storageCompleteClusterConfig:\n      type: object\n      properties:\n        dynamicConfig:\n          $ref: '#/components/schemas/storageDynamicClusterConfig'\n        staticConfig:\n          $ref: '#/components/schemas/storageStaticClusterConfig'\n        configFingerprint:\n          type: string\n        clusterLabels:\n          type: object\n          additionalProperties:\n            type: string\n      description: |-\n        Encodes a complete cluster configuration minus ID/Name identifiers\n        including static and dynamic settings.\n    storageDynamicClusterConfig:\n      type: object\n      properties:\n        admissionControllerConfig:\n          $ref: '#/components/schemas/storageAdmissionControllerConfig'\n        registryOverride:\n          type: string\n        disableAuditLogs:\n          type: boolean\n    storageGoogleProviderMetadata:\n      type: object\n      properties:\n        project:\n          type: string\n        clusterName:\n          type: string\n    storageManagerType:\n      type: string\n      enum:\n        - MANAGER_TYPE_UNKNOWN\n        - MANAGER_TYPE_MANUAL\n        - MANAGER_TYPE_HELM_CHART\n        - MANAGER_TYPE_KUBERNETES_OPERATOR\n      default: MANAGER_TYPE_UNKNOWN\n    storageOrchestratorMetadata:\n      type: object\n      properties:\n        version:\n          type: string\n        openshiftVersion:\n          type: string\n        buildDate:\n          type: string\n          format: date-time\n        apiVersions:\n          type: array\n          items:\n            type: string\n    storageProviderMetadata:\n      type: object\n      properties:\n        region:\n          type: string\n        zone:\n          type: string\n        google:\n          $ref: '#/components/schemas/storageGoogleProviderMetadata'\n        aws:\n          $ref: '#/components/schemas/storageAWSProviderMetadata'\n        azure:\n          $ref: '#/components/schemas/storageAzureProviderMetadata'\n        verified:\n          type: boolean\n    storageSensorDeploymentIdentification:\n      type: object\n      properties:\n        systemNamespaceId:\n          type: string\n        defaultNamespaceId:\n          type: string\n        appNamespace:\n          type: string\n        appNamespaceId:\n          type: string\n        appServiceaccountId:\n          type: string\n        k8sNodeName:\n          type: string\n      description: |-\n        StackRoxDeploymentIdentification aims at uniquely identifying a StackRox Sensor deployment. It is used to determine\n        whether a sensor connection comes from a sensor pod that has restarted or was recreated (possibly after a network\n        partition), or from a deployment in a different namespace or cluster.\n    storageStaticClusterConfig:\n      type: object\n      properties:\n        type:\n          $ref: '#/components/schemas/storageClusterType'\n        mainImage:\n          type: string\n        centralApiEndpoint:\n          type: string\n        collectionMethod:\n          $ref: '#/components/schemas/storageCollectionMethod'\n        collectorImage:\n          type: string\n        admissionController:\n          type: boolean\n        admissionControllerUpdates:\n          type: boolean\n        tolerationsConfig:\n          $ref: '#/components/schemas/storageTolerationsConfig'\n        slimCollector:\n          type: boolean\n        admissionControllerEvents:\n          type: boolean\n    storageTolerationsConfig:\n      type: object\n      properties:\n        disabled:\n          type: boolean\n    storageUpgradeProgress:\n      type: object\n      properties:\n        upgradeState:\n          $ref: '#/components/schemas/UpgradeProgressUpgradeState'\n        upgradeStatusDetail:\n          type: string\n        since:\n          type: string\n          format: date-time\n    v1ClusterDefaultsResponse:\n      type: object\n      properties:\n        mainImageRepository:\n          type: string\n        collectorImageRepository:\n          type: string\n        kernelSupportAvailable:\n          type: boolean\n    v1ClusterResponse:\n      type: object\n      properties:\n        cluster:\n          $ref: '#/components/schemas/storageCluster'\n    v1ClustersList:\n      type: object\n      properties:\n        clusters:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageCluster'\n    v1KernelSupportAvailableResponse:\n      type: object\n      properties:\n        kernelSupportAvailable:\n          type: boolean\n    v1ComplianceRun:\n      type: object\n      properties:\n        id:\n          type: string\n        clusterId:\n          type: string\n        standardId:\n          type: string\n        scheduleId:\n          type: string\n        startTime:\n          type: string\n          format: date-time\n        finishTime:\n          type: string\n          format: date-time\n        state:\n          $ref: '#/components/schemas/v1ComplianceRunState'\n        errorMessage:\n          type: string\n    v1ComplianceRunSelection:\n      type: object\n      properties:\n        clusterId:\n          type: string\n          description: The ID of the cluster. \"*\" means \"all clusters\".\n        standardId:\n          type: string\n          description: The ID of the compliance standard. \"*\" means \"all standards\".\n    v1ComplianceRunState:\n      type: string\n      enum:\n        - INVALID\n        - READY\n        - STARTED\n        - WAIT_FOR_DATA\n        - EVALUTING_CHECKS\n        - FINISHED\n      default: INVALID\n    v1GetComplianceRunStatusesResponse:\n      type: object\n      properties:\n        invalidRunIds:\n          type: array\n          items:\n            type: string\n        runs:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1ComplianceRun'\n    v1GetRecentComplianceRunsResponse:\n      type: object\n      properties:\n        complianceRuns:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1ComplianceRun'\n    v1TriggerComplianceRunsRequest:\n      type: object\n      properties:\n        selection:\n          $ref: '#/components/schemas/v1ComplianceRunSelection'\n    v1TriggerComplianceRunsResponse:\n      type: object\n      properties:\n        startedRuns:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1ComplianceRun'\n    CVSSV2AccessComplexity:\n      type: string\n      enum:\n        - ACCESS_HIGH\n        - ACCESS_MEDIUM\n        - ACCESS_LOW\n      default: ACCESS_HIGH\n    CVSSV2Authentication:\n      type: string\n      enum:\n        - AUTH_MULTIPLE\n        - AUTH_SINGLE\n        - AUTH_NONE\n      default: AUTH_MULTIPLE\n    CVSSV3Complexity:\n      type: string\n      enum:\n        - COMPLEXITY_LOW\n        - COMPLEXITY_HIGH\n      default: COMPLEXITY_LOW\n    CVSSV3Privileges:\n      type: string\n      enum:\n        - PRIVILEGE_NONE\n        - PRIVILEGE_LOW\n        - PRIVILEGE_HIGH\n      default: PRIVILEGE_NONE\n    CVSSV3UserInteraction:\n      type: string\n      enum:\n        - UI_NONE\n        - UI_REQUIRED\n      default: UI_NONE\n    ComplianceAggregationAggregationKey:\n      type: object\n      properties:\n        scope:\n          $ref: '#/components/schemas/storageComplianceAggregationScope'\n        id:\n          type: string\n      title: 'Next available tag: 3'\n    ComplianceAggregationSource:\n      type: object\n      properties:\n        clusterId:\n          type: string\n        standardId:\n          type: string\n        successfulRun:\n          $ref: '#/components/schemas/storageComplianceRunMetadata'\n        failedRuns:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageComplianceRunMetadata'\n      title: 'Next available tag: 5'\n    ComplianceResourceClusterName:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n    ComplianceResourceDeploymentName:\n      type: object\n      properties:\n        cluster:\n          $ref: '#/components/schemas/ComplianceResourceClusterName'\n        id:\n          type: string\n        name:\n          type: string\n        namespace:\n          type: string\n    ComplianceResourceNodeName:\n      type: object\n      properties:\n        cluster:\n          $ref: '#/components/schemas/ComplianceResourceClusterName'\n        id:\n          type: string\n        name:\n          type: string\n    ComplianceResultValueEvidence:\n      type: object\n      properties:\n        state:\n          $ref: '#/components/schemas/storageComplianceState'\n        message:\n          type: string\n        messageId:\n          type: integer\n          format: int32\n    ComplianceRunResultsEntityResults:\n      type: object\n      properties:\n        controlResults:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/storageComplianceResultValue'\n    ContainerConfigEnvironmentConfig:\n      type: object\n      properties:\n        key:\n          type: string\n        value:\n          type: string\n        envVarSource:\n          $ref: '#/components/schemas/EnvironmentConfigEnvVarSource'\n    EmbeddedVulnerabilityVulnerabilityType:\n      type: string\n      enum:\n        - UNKNOWN_VULNERABILITY\n        - IMAGE_VULNERABILITY\n        - K8S_VULNERABILITY\n        - ISTIO_VULNERABILITY\n        - NODE_VULNERABILITY\n        - OPENSHIFT_VULNERABILITY\n      default: UNKNOWN_VULNERABILITY\n    PortConfigExposureInfo:\n      type: object\n      properties:\n        level:\n          $ref: '#/components/schemas/PortConfigExposureLevel'\n        serviceName:\n          type: string\n          title: only set if level is not HOST\n        serviceId:\n          type: string\n        serviceClusterIp:\n          type: string\n        servicePort:\n          type: integer\n          format: int32\n        nodePort:\n          type: integer\n          format: int32\n          title: only set if level is HOST, NODE, EXTERNAL or ROUTE\n        externalIps:\n          type: array\n          items:\n            type: string\n          title: only set if level is EXTERNAL\n        externalHostnames:\n          type: array\n          items:\n            type: string\n          title: only set if level is EXTERNAL or ROUTE\n    SeccompProfileProfileType:\n      type: string\n      enum:\n        - UNCONFINED\n        - RUNTIME_DEFAULT\n        - LOCALHOST\n      default: UNCONFINED\n    SecurityContextSELinux:\n      type: object\n      properties:\n        user:\n          type: string\n        role:\n          type: string\n        type:\n          type: string\n        level:\n          type: string\n    SecurityContextSeccompProfile:\n      type: object\n      properties:\n        type:\n          $ref: '#/components/schemas/SeccompProfileProfileType'\n        localhostProfile:\n          type: string\n    VolumeMountPropagation:\n      type: string\n      enum:\n        - NONE\n        - HOST_TO_CONTAINER\n        - BIDIRECTIONAL\n      default: NONE\n    storageCVSSV2:\n      type: object\n      properties:\n        vector:\n          type: string\n        attackVector:\n          $ref: '#/components/schemas/storageCVSSV2AttackVector'\n        accessComplexity:\n          $ref: '#/components/schemas/CVSSV2AccessComplexity'\n        authentication:\n          $ref: '#/components/schemas/CVSSV2Authentication'\n        confidentiality:\n          $ref: '#/components/schemas/storageCVSSV2Impact'\n        integrity:\n          $ref: '#/components/schemas/storageCVSSV2Impact'\n        availability:\n          $ref: '#/components/schemas/storageCVSSV2Impact'\n        exploitabilityScore:\n          type: number\n          format: float\n        impactScore:\n          type: number\n          format: float\n        score:\n          type: number\n          format: float\n        severity:\n          $ref: '#/components/schemas/storageCVSSV2Severity'\n    storageCVSSV2AttackVector:\n      type: string\n      enum:\n        - ATTACK_LOCAL\n        - ATTACK_ADJACENT\n        - ATTACK_NETWORK\n      default: ATTACK_LOCAL\n    storageCVSSV2Impact:\n      type: string\n      enum:\n        - IMPACT_NONE\n        - IMPACT_PARTIAL\n        - IMPACT_COMPLETE\n      default: IMPACT_NONE\n    storageCVSSV2Severity:\n      type: string\n      enum:\n        - UNKNOWN\n        - LOW\n        - MEDIUM\n        - HIGH\n      default: UNKNOWN\n    storageCVSSV3:\n      type: object\n      properties:\n        vector:\n          type: string\n        exploitabilityScore:\n          type: number\n          format: float\n        impactScore:\n          type: number\n          format: float\n        attackVector:\n          $ref: '#/components/schemas/storageCVSSV3AttackVector'\n        attackComplexity:\n          $ref: '#/components/schemas/CVSSV3Complexity'\n        privilegesRequired:\n          $ref: '#/components/schemas/CVSSV3Privileges'\n        userInteraction:\n          $ref: '#/components/schemas/CVSSV3UserInteraction'\n        scope:\n          $ref: '#/components/schemas/storageCVSSV3Scope'\n        confidentiality:\n          $ref: '#/components/schemas/storageCVSSV3Impact'\n        integrity:\n          $ref: '#/components/schemas/storageCVSSV3Impact'\n        availability:\n          $ref: '#/components/schemas/storageCVSSV3Impact'\n        score:\n          type: number\n          format: float\n        severity:\n          $ref: '#/components/schemas/storageCVSSV3Severity'\n    storageCVSSV3AttackVector:\n      type: string\n      enum:\n        - ATTACK_LOCAL\n        - ATTACK_ADJACENT\n        - ATTACK_NETWORK\n        - ATTACK_PHYSICAL\n      default: ATTACK_LOCAL\n    storageCVSSV3Impact:\n      type: string\n      enum:\n        - IMPACT_NONE\n        - IMPACT_LOW\n        - IMPACT_HIGH\n      default: IMPACT_NONE\n    storageCVSSV3Scope:\n      type: string\n      enum:\n        - UNCHANGED\n        - CHANGED\n      default: UNCHANGED\n    storageCVSSV3Severity:\n      type: string\n      enum:\n        - UNKNOWN\n        - NONE\n        - LOW\n        - MEDIUM\n        - HIGH\n        - CRITICAL\n      default: UNKNOWN\n    storageComplianceAggregationResponse:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageComplianceAggregationResult'\n        sources:\n          type: array\n          items:\n            $ref: '#/components/schemas/ComplianceAggregationSource'\n        errorMessage:\n          type: string\n      title: 'Next available tag: 3'\n    storageComplianceAggregationResult:\n      type: object\n      properties:\n        aggregationKeys:\n          type: array\n          items:\n            $ref: '#/components/schemas/ComplianceAggregationAggregationKey'\n        unit:\n          $ref: '#/components/schemas/storageComplianceAggregationScope'\n        numPassing:\n          type: integer\n          format: int32\n        numFailing:\n          type: integer\n          format: int32\n        numSkipped:\n          type: integer\n          format: int32\n      title: 'Next available tag: 5'\n    storageComplianceAggregationScope:\n      type: string\n      enum:\n        - UNKNOWN\n        - STANDARD\n        - CLUSTER\n        - CATEGORY\n        - CONTROL\n        - NAMESPACE\n        - NODE\n        - DEPLOYMENT\n        - CHECK\n      default: UNKNOWN\n    storageComplianceControlResult:\n      type: object\n      properties:\n        resource:\n          $ref: '#/components/schemas/storageComplianceResource'\n        controlId:\n          type: string\n        value:\n          $ref: '#/components/schemas/storageComplianceResultValue'\n    storageComplianceDomain:\n      type: object\n      properties:\n        id:\n          type: string\n        cluster:\n          $ref: '#/components/schemas/storageCluster'\n        nodes:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/storageNode'\n        deployments:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/storageDeployment'\n      title: 'Next available tag: 5'\n    storageComplianceResource:\n      type: object\n      properties:\n        cluster:\n          $ref: '#/components/schemas/ComplianceResourceClusterName'\n        deployment:\n          $ref: '#/components/schemas/ComplianceResourceDeploymentName'\n        node:\n          $ref: '#/components/schemas/ComplianceResourceNodeName'\n        image:\n          $ref: '#/components/schemas/storageImageName'\n    storageComplianceResultValue:\n      type: object\n      properties:\n        evidence:\n          type: array\n          items:\n            $ref: '#/components/schemas/ComplianceResultValueEvidence'\n        overallState:\n          $ref: '#/components/schemas/storageComplianceState'\n    storageComplianceRunMetadata:\n      type: object\n      properties:\n        runId:\n          type: string\n        standardId:\n          type: string\n        clusterId:\n          type: string\n        startTimestamp:\n          type: string\n          format: date-time\n        finishTimestamp:\n          type: string\n          format: date-time\n        success:\n          type: boolean\n        errorMessage:\n          type: string\n        domainId:\n          type: string\n      title: 'Next available tag: 5'\n    storageComplianceRunResults:\n      type: object\n      properties:\n        domain:\n          $ref: '#/components/schemas/storageComplianceDomain'\n        runMetadata:\n          $ref: '#/components/schemas/storageComplianceRunMetadata'\n        clusterResults:\n          $ref: '#/components/schemas/ComplianceRunResultsEntityResults'\n        nodeResults:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/ComplianceRunResultsEntityResults'\n        deploymentResults:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/ComplianceRunResultsEntityResults'\n        machineConfigResults:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/ComplianceRunResultsEntityResults'\n      title: 'Next available tag: 6'\n    storageComplianceState:\n      type: string\n      enum:\n        - COMPLIANCE_STATE_UNKNOWN\n        - COMPLIANCE_STATE_SKIP\n        - COMPLIANCE_STATE_NOTE\n        - COMPLIANCE_STATE_SUCCESS\n        - COMPLIANCE_STATE_FAILURE\n        - COMPLIANCE_STATE_ERROR\n      default: COMPLIANCE_STATE_UNKNOWN\n    storageContainer:\n      type: object\n      properties:\n        id:\n          type: string\n        config:\n          $ref: '#/components/schemas/storageContainerConfig'\n        image:\n          $ref: '#/components/schemas/storageContainerImage'\n        securityContext:\n          $ref: '#/components/schemas/storageSecurityContext'\n        volumes:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageVolume'\n        ports:\n          type: array\n          items:\n            $ref: '#/components/schemas/storagePortConfig'\n        secrets:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageEmbeddedSecret'\n        resources:\n          $ref: '#/components/schemas/storageResources'\n        name:\n          type: string\n        livenessProbe:\n          $ref: '#/components/schemas/storageLivenessProbe'\n        readinessProbe:\n          $ref: '#/components/schemas/storageReadinessProbe'\n    storageContainerConfig:\n      type: object\n      properties:\n        env:\n          type: array\n          items:\n            $ref: '#/components/schemas/ContainerConfigEnvironmentConfig'\n        command:\n          type: array\n          items:\n            type: string\n        args:\n          type: array\n          items:\n            type: string\n        directory:\n          type: string\n        user:\n          type: string\n        uid:\n          type: string\n          format: int64\n        appArmorProfile:\n          type: string\n    storageContainerRuntime:\n      type: string\n      enum:\n        - UNKNOWN_CONTAINER_RUNTIME\n        - DOCKER_CONTAINER_RUNTIME\n        - CRIO_CONTAINER_RUNTIME\n      default: UNKNOWN_CONTAINER_RUNTIME\n    storageContainerRuntimeInfo:\n      type: object\n      properties:\n        type:\n          $ref: '#/components/schemas/storageContainerRuntime'\n        version:\n          type: string\n    storageDeployment:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        hash:\n          type: string\n          format: uint64\n        type:\n          type: string\n        namespace:\n          type: string\n        namespaceId:\n          type: string\n        orchestratorComponent:\n          type: boolean\n        replicas:\n          type: string\n          format: int64\n        labels:\n          type: object\n          additionalProperties:\n            type: string\n          description: 'TODO(ROX-6895): \"Label\" search term is ambiguous.'\n        podLabels:\n          type: object\n          additionalProperties:\n            type: string\n        labelSelector:\n          $ref: '#/components/schemas/storageLabelSelector'\n        created:\n          type: string\n          format: date-time\n        clusterId:\n          type: string\n        clusterName:\n          type: string\n        containers:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageContainer'\n        annotations:\n          type: object\n          additionalProperties:\n            type: string\n        priority:\n          type: string\n          format: int64\n        inactive:\n          type: boolean\n        imagePullSecrets:\n          type: array\n          items:\n            type: string\n        serviceAccount:\n          type: string\n        serviceAccountPermissionLevel:\n          $ref: '#/components/schemas/storagePermissionLevel'\n        automountServiceAccountToken:\n          type: boolean\n        hostNetwork:\n          type: boolean\n        hostPid:\n          type: boolean\n        hostIpc:\n          type: boolean\n        runtimeClass:\n          type: string\n        tolerations:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageToleration'\n        ports:\n          type: array\n          items:\n            $ref: '#/components/schemas/storagePortConfig'\n        stateTimestamp:\n          type: string\n          format: int64\n        riskScore:\n          type: number\n          format: float\n        processTags:\n          type: array\n          items:\n            type: string\n      title: 'Next available tag: 35'\n    storageEmbeddedNodeScanComponent:\n      type: object\n      properties:\n        name:\n          type: string\n        version:\n          type: string\n        vulns:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageEmbeddedVulnerability'\n        priority:\n          type: string\n          format: int64\n        topCvss:\n          type: number\n          format: float\n        riskScore:\n          type: number\n          format: float\n    storageEmbeddedSecret:\n      type: object\n      properties:\n        name:\n          type: string\n        path:\n          type: string\n    storageEmbeddedVulnerability:\n      type: object\n      properties:\n        cve:\n          type: string\n        cvss:\n          type: number\n          format: float\n        summary:\n          type: string\n        link:\n          type: string\n        fixedBy:\n          type: string\n        scoreVersion:\n          $ref: '#/components/schemas/storageEmbeddedVulnerabilityScoreVersion'\n        cvssV2:\n          $ref: '#/components/schemas/storageCVSSV2'\n        cvssV3:\n          $ref: '#/components/schemas/storageCVSSV3'\n        publishedOn:\n          type: string\n          format: date-time\n        lastModified:\n          type: string\n          format: date-time\n        vulnerabilityType:\n          $ref: '#/components/schemas/EmbeddedVulnerabilityVulnerabilityType'\n        vulnerabilityTypes:\n          type: array\n          items:\n            $ref: '#/components/schemas/EmbeddedVulnerabilityVulnerabilityType'\n        suppressed:\n          type: boolean\n        suppressActivation:\n          type: string\n          format: date-time\n        suppressExpiry:\n          type: string\n          format: date-time\n        firstSystemOccurrence:\n          type: string\n          format: date-time\n          description: Time when the CVE was first seen in the system.\n        firstImageOccurrence:\n          type: string\n          format: date-time\n          description: Time when the CVE was first seen in the image.\n        firstNodeOccurrence:\n          type: string\n          format: date-time\n          description: Time when the CVE was first seen in the node.\n        severity:\n          $ref: '#/components/schemas/storageVulnerabilitySeverity'\n        state:\n          $ref: '#/components/schemas/storageVulnerabilityState'\n      title: 'Next Tag: 21'\n    storageEmbeddedVulnerabilityScoreVersion:\n      type: string\n      enum:\n        - V2\n        - V3\n      default: V2\n    storageLabelSelector:\n      type: object\n      properties:\n        matchLabels:\n          type: object\n          additionalProperties:\n            type: string\n          description: |-\n            This is actually a oneof, but we can't make it one due to backwards\n            compatibility constraints.\n        requirements:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageLabelSelectorRequirement'\n      description: 'Next available tag: 3'\n      title: |-\n        Label selector components are joined with logical AND, see\n            https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\n    storageLabelSelectorOperator:\n      type: string\n      enum:\n        - UNKNOWN\n        - IN\n        - NOT_IN\n        - EXISTS\n        - NOT_EXISTS\n      default: UNKNOWN\n    storageLabelSelectorRequirement:\n      type: object\n      properties:\n        key:\n          type: string\n        op:\n          $ref: '#/components/schemas/storageLabelSelectorOperator'\n        values:\n          type: array\n          items:\n            type: string\n      title: 'Next available tag: 4'\n    storageLivenessProbe:\n      type: object\n      properties:\n        defined:\n          type: boolean\n    storageNode:\n      type: object\n      properties:\n        id:\n          type: string\n          description: A unique ID identifying this node.\n        name:\n          type: string\n          description: The (host)name of the node. Might or might not be the same as ID.\n        taints:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageTaint'\n          title: Taints on the host\n        clusterId:\n          type: string\n        clusterName:\n          type: string\n        labels:\n          type: object\n          additionalProperties:\n            type: string\n          description: 'TODO(ROX-6895): \"Label\" search term is ambiguous.'\n        annotations:\n          type: object\n          additionalProperties:\n            type: string\n        joinedAt:\n          type: string\n          format: date-time\n          title: When the cluster reported the node was added\n        internalIpAddresses:\n          type: array\n          items:\n            type: string\n          title: node internal IP addresses\n        externalIpAddresses:\n          type: array\n          items:\n            type: string\n          title: node external IP addresses\n        containerRuntimeVersion:\n          type: string\n          title: From NodeInfo\n        containerRuntime:\n          $ref: '#/components/schemas/storageContainerRuntimeInfo'\n        kernelVersion:\n          type: string\n        operatingSystem:\n          type: string\n          description: 'From NodeInfo. Operating system reported by the node (ex: linux).'\n        osImage:\n          type: string\n          description: From NodeInfo. OS image reported by the node from /etc/os-release.\n        kubeletVersion:\n          type: string\n        kubeProxyVersion:\n          type: string\n        lastUpdated:\n          type: string\n          format: date-time\n        k8sUpdated:\n          type: string\n          format: date-time\n          description: Time we received an update from Kubernetes.\n        scan:\n          $ref: '#/components/schemas/storageNodeScan'\n        components:\n          type: integer\n          format: int32\n        cves:\n          type: integer\n          format: int32\n        fixableCves:\n          type: integer\n          format: int32\n        priority:\n          type: string\n          format: int64\n        riskScore:\n          type: number\n          format: float\n        topCvss:\n          type: number\n          format: float\n      title: |-\n        Node represents information about a node in the cluster.\n        next available tag: 27\n    storageNodeScan:\n      type: object\n      properties:\n        scanTime:\n          type: string\n          format: date-time\n        operatingSystem:\n          type: string\n        components:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageEmbeddedNodeScanComponent'\n    storagePortConfig:\n      type: object\n      properties:\n        name:\n          type: string\n        containerPort:\n          type: integer\n          format: int32\n        protocol:\n          type: string\n        exposure:\n          $ref: '#/components/schemas/PortConfigExposureLevel'\n        exposedPort:\n          type: integer\n          format: int32\n        exposureInfos:\n          type: array\n          items:\n            $ref: '#/components/schemas/PortConfigExposureInfo'\n      title: 'Next Available Tag: 6'\n    storageReadinessProbe:\n      type: object\n      properties:\n        defined:\n          type: boolean\n    storageResources:\n      type: object\n      properties:\n        cpuCoresRequest:\n          type: number\n          format: float\n        cpuCoresLimit:\n          type: number\n          format: float\n        memoryMbRequest:\n          type: number\n          format: float\n        memoryMbLimit:\n          type: number\n          format: float\n    storageSecurityContext:\n      type: object\n      properties:\n        privileged:\n          type: boolean\n        selinux:\n          $ref: '#/components/schemas/SecurityContextSELinux'\n        dropCapabilities:\n          type: array\n          items:\n            type: string\n        addCapabilities:\n          type: array\n          items:\n            type: string\n        readOnlyRootFilesystem:\n          type: boolean\n        seccompProfile:\n          $ref: '#/components/schemas/SecurityContextSeccompProfile'\n        allowPrivilegeEscalation:\n          type: boolean\n    storageTaint:\n      type: object\n      properties:\n        key:\n          type: string\n        value:\n          type: string\n        taintEffect:\n          $ref: '#/components/schemas/storageTaintEffect'\n    storageTaintEffect:\n      type: string\n      enum:\n        - UNKNOWN_TAINT_EFFECT\n        - NO_SCHEDULE_TAINT_EFFECT\n        - PREFER_NO_SCHEDULE_TAINT_EFFECT\n        - NO_EXECUTE_TAINT_EFFECT\n      default: UNKNOWN_TAINT_EFFECT\n    storageToleration:\n      type: object\n      properties:\n        key:\n          type: string\n        operator:\n          $ref: '#/components/schemas/storageTolerationOperator'\n        value:\n          type: string\n        taintEffect:\n          $ref: '#/components/schemas/storageTaintEffect'\n    storageTolerationOperator:\n      type: string\n      enum:\n        - TOLERATION_OPERATION_UNKNOWN\n        - TOLERATION_OPERATOR_EXISTS\n        - TOLERATION_OPERATOR_EQUAL\n      default: TOLERATION_OPERATION_UNKNOWN\n    storageVolume:\n      type: object\n      properties:\n        name:\n          type: string\n        source:\n          type: string\n        destination:\n          type: string\n        readOnly:\n          type: boolean\n        type:\n          type: string\n        mountPropagation:\n          $ref: '#/components/schemas/VolumeMountPropagation'\n    storageVulnerabilitySeverity:\n      type: string\n      enum:\n        - UNKNOWN_VULNERABILITY_SEVERITY\n        - LOW_VULNERABILITY_SEVERITY\n        - MODERATE_VULNERABILITY_SEVERITY\n        - IMPORTANT_VULNERABILITY_SEVERITY\n        - CRITICAL_VULNERABILITY_SEVERITY\n      default: UNKNOWN_VULNERABILITY_SEVERITY\n    storageVulnerabilityState:\n      type: string\n      enum:\n        - OBSERVED\n        - DEFERRED\n        - FALSE_POSITIVE\n      default: OBSERVED\n      description: VulnerabilityState indicates if vulnerability is being observed or deferred(/suppressed). By default, it vulnerabilities are observed.\n    v1ComplianceControl:\n      type: object\n      properties:\n        id:\n          type: string\n        standardId:\n          type: string\n        groupId:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        implemented:\n          type: boolean\n        interpretationText:\n          type: string\n    v1ComplianceControlGroup:\n      type: object\n      properties:\n        id:\n          type: string\n        standardId:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        numImplementedChecks:\n          type: integer\n          format: int32\n    v1ComplianceControlResultsResponse:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageComplianceControlResult'\n    v1ComplianceStandard:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/v1ComplianceStandardMetadata'\n        groups:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1ComplianceControlGroup'\n        controls:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1ComplianceControl'\n    v1ComplianceStandardMetadata:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        numImplementedChecks:\n          type: integer\n          format: int32\n        scopes:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1ComplianceStandardMetadataScope'\n        dynamic:\n          type: boolean\n    v1ComplianceStandardMetadataScope:\n      type: string\n      enum:\n        - UNSET\n        - CLUSTER\n        - NAMESPACE\n        - DEPLOYMENT\n        - NODE\n      default: UNSET\n    v1GetComplianceRunResultsResponse:\n      type: object\n      properties:\n        results:\n          $ref: '#/components/schemas/storageComplianceRunResults'\n        failedRuns:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageComplianceRunMetadata'\n    v1GetComplianceStandardResponse:\n      type: object\n      properties:\n        standard:\n          $ref: '#/components/schemas/v1ComplianceStandard'\n    v1GetComplianceStandardsResponse:\n      type: object\n      properties:\n        standards:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1ComplianceStandardMetadata'\n    BannerConfigSize:\n      type: string\n      enum:\n        - UNSET\n        - SMALL\n        - MEDIUM\n        - LARGE\n      default: UNSET\n    storageAlertRetentionConfig:\n      type: object\n      properties:\n        resolvedDeployRetentionDurationDays:\n          type: integer\n          format: int32\n        deletedRuntimeRetentionDurationDays:\n          type: integer\n          format: int32\n          description: This runtime alert retention configuration takes precedence after `allRuntimeRetentionDurationDays`.\n        allRuntimeRetentionDurationDays:\n          type: integer\n          format: int32\n          description: |-\n            This runtime alert retention configuration has highest precedence. All runtime alerts, including attempted\n            alerts and deleted deployment alerts, are deleted even if respective retention is longer.\n        attemptedDeployRetentionDurationDays:\n          type: integer\n          format: int32\n        attemptedRuntimeRetentionDurationDays:\n          type: integer\n          format: int32\n          description: This runtime alert retention configuration has lowest precedence.\n    storageBannerConfig:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n        text:\n          type: string\n        size:\n          $ref: '#/components/schemas/BannerConfigSize'\n        color:\n          type: string\n        backgroundColor:\n          type: string\n    storageConfig:\n      type: object\n      properties:\n        publicConfig:\n          $ref: '#/components/schemas/storagePublicConfig'\n        privateConfig:\n          $ref: '#/components/schemas/storagePrivateConfig'\n    storageLoginNotice:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n        text:\n          type: string\n    storagePrivateConfig:\n      type: object\n      properties:\n        DEPRECATEDAlertRetentionDurationDays:\n          type: integer\n          format: int32\n          title: will be deprecated after migration is ready\n        alertConfig:\n          $ref: '#/components/schemas/storageAlertRetentionConfig'\n        imageRetentionDurationDays:\n          type: integer\n          format: int32\n        expiredVulnReqRetentionDurationDays:\n          type: integer\n          format: int32\n      title: 'next available tag: 5'\n    storagePublicConfig:\n      type: object\n      properties:\n        loginNotice:\n          $ref: '#/components/schemas/storageLoginNotice'\n        header:\n          $ref: '#/components/schemas/storageBannerConfig'\n        footer:\n          $ref: '#/components/schemas/storageBannerConfig'\n    v1PutConfigRequest:\n      type: object\n      properties:\n        config:\n          $ref: '#/components/schemas/storageConfig'\n    v1GetCertExpiryComponent:\n      type: string\n      enum:\n        - UNKNOWN\n        - CENTRAL\n        - SCANNER\n      default: UNKNOWN\n    v1GetCertExpiryResponse:\n      type: object\n      properties:\n        expiry:\n          type: string\n          format: date-time\n    v1SuppressCVERequest:\n      type: object\n      properties:\n        ids:\n          type: array\n          items:\n            type: string\n        duration:\n          type: string\n    v1UnsuppressCVERequest:\n      type: object\n      properties:\n        ids:\n          type: array\n          items:\n            type: string\n    DBExportManifestEncodingType:\n      type: string\n      enum:\n        - UNKNOWN\n        - UNCOMPREESSED\n        - DEFLATED\n      default: UNKNOWN\n      description: The encoding of the file data in the restore body, usually for compression purposes.\n    DBRestoreProcessStatusResumeInfo:\n      type: object\n      properties:\n        pos:\n          type: string\n          format: int64\n    DBRestoreRequestHeaderLocalFileInfo:\n      type: object\n      properties:\n        path:\n          type: string\n          description: The full path of the file.\n        bytesSize:\n          type: string\n          format: int64\n          description: The size of the file, in bytes. 0 if unknown.\n      description: |-\n        LocalFileInfo provides information about the file on the local machine of the user initiating the restore\n        process, in order to provide information to other users about ongoing restore processes.\n    v1DBExportFormat:\n      type: object\n      properties:\n        formatName:\n          type: string\n        files:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1DBExportFormatFile'\n      description: DBExportFormat describes a format (= a collection of files) for the database export.\n    v1DBExportFormatFile:\n      type: object\n      properties:\n        name:\n          type: string\n        optional:\n          type: boolean\n    v1DBExportManifest:\n      type: object\n      properties:\n        files:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1DBExportManifestFile'\n      description: |-\n        A DB export manifest describes the file contents of a restore request. To prevent data loss, a manifest is always\n        interpreted as binding, i.e., the server must ensure that it will read and make use of every file listed in the\n        manifest, otherwise it must reject the request.\n    v1DBExportManifestFile:\n      type: object\n      properties:\n        name:\n          type: string\n          description: |-\n            The name of the file. This may or may not be a (relative) file path and up to the server to interpret.\n            For databases exported as ZIP files, this is the path relative to the root of the archive.\n        encoding:\n          $ref: '#/components/schemas/DBExportManifestEncodingType'\n        encodedSize:\n          type: string\n          format: int64\n        decodedSize:\n          type: string\n          format: int64\n        decodedCrc32:\n          type: integer\n          format: int64\n          description: The CRC32 (IEEE) checksum of the decoded(!) data.\n      description: A single file in the restore body.\n    v1DBRestoreProcessMetadata:\n      type: object\n      properties:\n        id:\n          type: string\n          description: An ID identifying the restore process. Auto-assigned.\n        header:\n          $ref: '#/components/schemas/v1DBRestoreRequestHeader'\n        startTime:\n          type: string\n          format: date-time\n          description: The time at which the restore process was started.\n        initiatingUserName:\n          type: string\n          description: The user who initiated the database restore process.\n      description: |-\n        The metadata of an ongoing or completed restore process. This is the *static* metadata, which will not change\n        (i.e., it is not a status).\n    v1DBRestoreProcessStatus:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/v1DBRestoreProcessMetadata'\n        attemptId:\n          type: string\n        state:\n          $ref: '#/components/schemas/v1DBRestoreProcessStatusState'\n        resumeInfo:\n          $ref: '#/components/schemas/DBRestoreProcessStatusResumeInfo'\n        error:\n          type: string\n        bytesRead:\n          type: string\n          format: int64\n        filesProcessed:\n          type: string\n          format: int64\n    v1DBRestoreProcessStatusState:\n      type: string\n      enum:\n        - UNKNOWN\n        - NOT_STARTED\n        - IN_PROGRESS\n        - PAUSED\n        - COMPLETED\n      default: UNKNOWN\n    v1DBRestoreRequestHeader:\n      type: object\n      properties:\n        formatName:\n          type: string\n          description: The name of the database export format. Mandatory.\n        manifest:\n          $ref: '#/components/schemas/v1DBExportManifest'\n        localFile:\n          $ref: '#/components/schemas/DBRestoreRequestHeaderLocalFileInfo'\n    v1GetActiveDBRestoreProcessResponse:\n      type: object\n      properties:\n        activeStatus:\n          $ref: '#/components/schemas/v1DBRestoreProcessStatus'\n    v1GetDBExportCapabilitiesResponse:\n      type: object\n      properties:\n        formats:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1DBExportFormat'\n        supportedEncodings:\n          type: array\n          items:\n            $ref: '#/components/schemas/DBExportManifestEncodingType'\n    v1InterruptDBRestoreProcessResponse:\n      type: object\n      properties:\n        resumeInfo:\n          $ref: '#/components/schemas/DBRestoreProcessStatusResumeInfo'\n    AuthorizationTraceResponseResponseStatus:\n      type: string\n      enum:\n        - UNKNOWN_STATUS\n        - SUCCESS\n        - FAILURE\n      default: UNKNOWN_STATUS\n    AuthorizationTraceResponseTrace:\n      type: object\n      properties:\n        scopeCheckerType:\n          type: string\n        builtIn:\n          $ref: '#/components/schemas/TraceBuiltInAuthorizer'\n    AuthorizationTraceResponseUserRole:\n      type: object\n      properties:\n        name:\n          type: string\n        permissions:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/storageAccess'\n        accessScopeName:\n          type: string\n        accessScope:\n          $ref: '#/components/schemas/SimpleAccessScopeRules'\n    SimpleAccessScopeRules:\n      type: object\n      properties:\n        includedClusters:\n          type: array\n          items:\n            type: string\n        includedNamespaces:\n          type: array\n          items:\n            $ref: '#/components/schemas/SimpleAccessScopeRulesNamespace'\n        clusterLabelSelectors:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageSetBasedLabelSelector'\n        namespaceLabelSelectors:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageSetBasedLabelSelector'\n      description: |-\n        Each element of any repeated field is an individual rule. Rules are\n        joined by logical OR: if there exists a rule allowing resource `x`,\n        `x` is in the access scope.\n    SimpleAccessScopeRulesNamespace:\n      type: object\n      properties:\n        clusterName:\n          type: string\n          description: Both fields must be set.\n        namespaceName:\n          type: string\n    TraceBuiltInAuthorizer:\n      type: object\n      properties:\n        clustersTotalNum:\n          type: integer\n          format: int32\n        namespacesTotalNum:\n          type: integer\n          format: int32\n        deniedAuthzDecisions:\n          type: object\n          additionalProperties:\n            type: integer\n            format: int32\n        allowedAuthzDecisions:\n          type: object\n          additionalProperties:\n            type: integer\n            format: int32\n        effectiveAccessScopes:\n          type: object\n          additionalProperties:\n            type: string\n    runtimeStreamError:\n      type: object\n      properties:\n        grpcCode:\n          type: integer\n          format: int32\n        httpCode:\n          type: integer\n          format: int32\n        message:\n          type: string\n        httpStatus:\n          type: string\n        details:\n          type: array\n          items:\n            $ref: '#/components/schemas/protobufAny'\n    storageSetBasedLabelSelector:\n      type: object\n      properties:\n        requirements:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageSetBasedLabelSelectorRequirement'\n      description: |-\n        SetBasedLabelSelector only allows set-based label requirements.\n\n        Next available tag: 3\n    storageSetBasedLabelSelectorOperator:\n      type: string\n      enum:\n        - UNKNOWN\n        - IN\n        - NOT_IN\n        - EXISTS\n        - NOT_EXISTS\n      default: UNKNOWN\n    storageSetBasedLabelSelectorRequirement:\n      type: object\n      properties:\n        key:\n          type: string\n        op:\n          $ref: '#/components/schemas/storageSetBasedLabelSelectorOperator'\n        values:\n          type: array\n          items:\n            type: string\n      title: 'Next available tag: 4'\n    v1AuthorizationTraceResponse:\n      type: object\n      properties:\n        arrivedAt:\n          type: string\n          format: date-time\n        processedAt:\n          type: string\n          format: date-time\n        request:\n          $ref: '#/components/schemas/v1AuthorizationTraceResponseRequest'\n        response:\n          $ref: '#/components/schemas/v1AuthorizationTraceResponseResponse'\n        user:\n          $ref: '#/components/schemas/v1AuthorizationTraceResponseUser'\n        trace:\n          $ref: '#/components/schemas/AuthorizationTraceResponseTrace'\n    v1AuthorizationTraceResponseRequest:\n      type: object\n      properties:\n        endpoint:\n          type: string\n        method:\n          type: string\n    v1AuthorizationTraceResponseResponse:\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/AuthorizationTraceResponseResponseStatus'\n        error:\n          type: string\n    v1AuthorizationTraceResponseUser:\n      type: object\n      properties:\n        username:\n          type: string\n        friendlyName:\n          type: string\n        aggregatedPermissions:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/storageAccess'\n        roles:\n          type: array\n          items:\n            $ref: '#/components/schemas/AuthorizationTraceResponseUserRole'\n    v1LogLevelRequest:\n      type: object\n      properties:\n        level:\n          type: string\n        modules:\n          type: array\n          items:\n            type: string\n    v1LogLevelResponse:\n      type: object\n      properties:\n        level:\n          type: string\n        moduleLevels:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1ModuleLevel'\n    v1ModuleLevel:\n      type: object\n      properties:\n        module:\n          type: string\n        level:\n          type: string\n    ContainerNameAndBaselineStatusBaselineStatus:\n      type: string\n      enum:\n        - INVALID\n        - NOT_GENERATED\n        - UNLOCKED\n        - LOCKED\n      default: INVALID\n    DeploymentLabelsResponseLabelValues:\n      type: object\n      properties:\n        values:\n          type: array\n          items:\n            type: string\n    ListDeploymentsWithProcessInfoResponseDeploymentWithProcessInfo:\n      type: object\n      properties:\n        deployment:\n          $ref: '#/components/schemas/storageListDeployment'\n        whitelistStatuses:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageContainerNameAndBaselineStatus'\n        baselineStatuses:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageContainerNameAndBaselineStatus'\n    ResultFactor:\n      type: object\n      properties:\n        message:\n          type: string\n        url:\n          type: string\n    storageContainerNameAndBaselineStatus:\n      type: object\n      properties:\n        containerName:\n          type: string\n        baselineStatus:\n          $ref: '#/components/schemas/ContainerNameAndBaselineStatusBaselineStatus'\n        anomalousProcessesExecuted:\n          type: boolean\n      description: |-\n        `ContainerNameAndBaselineStatus` represents a cached result\n        of process evaluation on a specific container name.\n    storageListDeployment:\n      type: object\n      properties:\n        id:\n          type: string\n        hash:\n          type: string\n          format: uint64\n        name:\n          type: string\n        cluster:\n          type: string\n        clusterId:\n          type: string\n        namespace:\n          type: string\n        created:\n          type: string\n          format: date-time\n        priority:\n          type: string\n          format: int64\n      title: 'Next available tag: 9'\n    storageRisk:\n      type: object\n      properties:\n        id:\n          type: string\n        subject:\n          $ref: '#/components/schemas/storageRiskSubject'\n        score:\n          type: number\n          format: float\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageRiskResult'\n    storageRiskResult:\n      type: object\n      properties:\n        name:\n          type: string\n        factors:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResultFactor'\n        score:\n          type: number\n          format: float\n    storageRiskSubject:\n      type: object\n      properties:\n        id:\n          type: string\n        namespace:\n          type: string\n        clusterId:\n          type: string\n        type:\n          $ref: '#/components/schemas/storageRiskSubjectType'\n    storageRiskSubjectType:\n      type: string\n      enum:\n        - UNKNOWN\n        - DEPLOYMENT\n        - NAMESPACE\n        - CLUSTER\n        - NODE\n        - NODE_COMPONENT\n        - IMAGE\n        - IMAGE_COMPONENT\n        - SERVICEACCOUNT\n      default: UNKNOWN\n      title: 'Next tag: 9'\n    v1CountDeploymentsResponse:\n      type: object\n      properties:\n        count:\n          type: integer\n          format: int32\n    v1DeploymentLabelsResponse:\n      type: object\n      properties:\n        labels:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/DeploymentLabelsResponseLabelValues'\n        values:\n          type: array\n          items:\n            type: string\n    v1GetDeploymentWithRiskResponse:\n      type: object\n      properties:\n        deployment:\n          $ref: '#/components/schemas/storageDeployment'\n        risk:\n          $ref: '#/components/schemas/storageRisk'\n    v1ListDeploymentsResponse:\n      type: object\n      properties:\n        deployments:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageListDeployment'\n    v1ListDeploymentsWithProcessInfoResponse:\n      type: object\n      properties:\n        deployments:\n          type: array\n          items:\n            $ref: '#/components/schemas/ListDeploymentsWithProcessInfoResponseDeploymentWithProcessInfo'\n    DeployDetectionResponseRun:\n      type: object\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n        alerts:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageAlert'\n    v1BuildDetectionRequest:\n      type: object\n      properties:\n        image:\n          $ref: '#/components/schemas/storageContainerImage'\n        imageName:\n          type: string\n        noExternalMetadata:\n          type: boolean\n        sendNotifications:\n          type: boolean\n        policyCategories:\n          type: array\n          items:\n            type: string\n    v1BuildDetectionResponse:\n      type: object\n      properties:\n        alerts:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageAlert'\n    v1DeployDetectionRequest:\n      type: object\n      properties:\n        deployment:\n          $ref: '#/components/schemas/storageDeployment'\n        noExternalMetadata:\n          type: boolean\n        enforcementOnly:\n          type: boolean\n        clusterId:\n          type: string\n    v1DeployDetectionResponse:\n      type: object\n      properties:\n        runs:\n          type: array\n          items:\n            $ref: '#/components/schemas/DeployDetectionResponseRun'\n        ignoredObjectRefs:\n          type: array\n          items:\n            type: string\n          description: 'The reference will be in the format: namespace/name[\u003cgroup\u003e/\u003cversion\u003e, Kind=\u003ckind\u003e].'\n    v1DeployYAMLDetectionRequest:\n      type: object\n      properties:\n        yaml:\n          type: string\n        noExternalMetadata:\n          type: boolean\n        enforcementOnly:\n          type: boolean\n        policyCategories:\n          type: array\n          items:\n            type: string\n    v1FeatureFlag:\n      type: object\n      properties:\n        name:\n          type: string\n        envVar:\n          type: string\n        enabled:\n          type: boolean\n    v1GetFeatureFlagsResponse:\n      type: object\n      properties:\n        featureFlags:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1FeatureFlag'\n    storageGroup:\n      type: object\n      properties:\n        props:\n          $ref: '#/components/schemas/storageGroupProperties'\n        roleName:\n          type: string\n          description: This is the name of the role that will apply to users in this group.\n      description: 'Group is a GroupProperties : Role mapping.'\n    storageGroupProperties:\n      type: object\n      properties:\n        authProviderId:\n          type: string\n        key:\n          type: string\n        value:\n          type: string\n      description: |-\n        GroupProperties defines the properties of a unique group.\n        Groups apply to users when their properties match. For instance:\n        If the GroupProperties on has a auth_provider_id, then that group applies to all users logged in\n        with that auth provider. If it has a claim key, then it applies to all users with that auth provider\n        and claim key, etc.\n        This can be used to create default groups/roles for All source provider (no fields set), a specific\n        auth provider (only auth_provider_id field set) etc.\n    v1GetGroupsResponse:\n      type: object\n      properties:\n        groups:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageGroup'\n      title: |-\n        API for updating Groups and getting users.\n        Next Available Tag: 2\n    v1GroupBatchUpdateRequest:\n      type: object\n      properties:\n        previousGroups:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageGroup'\n          description: |-\n            Previous groups are the groups expected to be present in the store.\n            Performs a diff on the GroupProperties present in previous_groups and required_groups:\n            1) if in previous_groups but not required_groups, it gets deleted.\n            2) if in previous_groups and required_groups, it gets updated.\n            3) if not in previous_groups but in required_groups, it gets added.\n        requiredGroups:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageGroup'\n          description: Required groups are the groups we want to mutate the previous groups into.\n      title: |-\n        GroupBatchUpdateRequest is an in transaction batch update to the groups present.\n        Next Available Tag: 3\n    ECRConfigAuthorizationData:\n      type: object\n      properties:\n        username:\n          type: string\n        password:\n          type: string\n        expiresAt:\n          type: string\n          format: date-time\n      description: |-\n        An authorization data represents the IAM authentication credentials and\n        can be used to access any Amazon ECR registry that the IAM principal has\n        access to.\n    storageAnchoreConfig:\n      type: object\n      properties:\n        endpoint:\n          type: string\n        username:\n          type: string\n        password:\n          type: string\n          description: The password for the integration. The server will mask the value of this credential in responses and logs.\n        insecure:\n          type: boolean\n    storageClairConfig:\n      type: object\n      properties:\n        endpoint:\n          type: string\n        insecure:\n          type: boolean\n    storageClairifyConfig:\n      type: object\n      properties:\n        endpoint:\n          type: string\n        grpcEndpoint:\n          type: string\n        numConcurrentScans:\n          type: integer\n          format: int32\n    storageDTRConfig:\n      type: object\n      properties:\n        username:\n          type: string\n        password:\n          type: string\n          description: The password for the integration. The server will mask the value of this credential in responses and logs.\n        endpoint:\n          type: string\n        insecure:\n          type: boolean\n    storageDockerConfig:\n      type: object\n      properties:\n        endpoint:\n          type: string\n        username:\n          type: string\n        password:\n          type: string\n          description: The password for the integration. The server will mask the value of this credential in responses and logs.\n        insecure:\n          type: boolean\n    storageECRConfig:\n      type: object\n      properties:\n        registryId:\n          type: string\n        accessKeyId:\n          type: string\n          description: The access key ID for the integration. The server will mask the value of this credential in responses and logs.\n        secretAccessKey:\n          type: string\n          description: The secret access key for the integration. The server will mask the value of this credential in responses and logs.\n        region:\n          type: string\n        useIam:\n          type: boolean\n        endpoint:\n          type: string\n        useAssumeRole:\n          type: boolean\n        assumeRoleId:\n          type: string\n        assumeRoleExternalId:\n          type: string\n        authorizationData:\n          $ref: '#/components/schemas/ECRConfigAuthorizationData'\n    storageGoogleConfig:\n      type: object\n      properties:\n        endpoint:\n          type: string\n        serviceAccount:\n          type: string\n          description: The service account for the integration. The server will mask the value of this credential in responses and logs.\n        project:\n          type: string\n    storageIBMRegistryConfig:\n      type: object\n      properties:\n        endpoint:\n          type: string\n        apiKey:\n          type: string\n          description: The API key for the integration. The server will mask the value of this credential in responses and logs.\n    storageImageIntegration:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        type:\n          type: string\n        categories:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageImageIntegrationCategory'\n        dtr:\n          $ref: '#/components/schemas/storageDTRConfig'\n        clairify:\n          $ref: '#/components/schemas/storageClairifyConfig'\n        docker:\n          $ref: '#/components/schemas/storageDockerConfig'\n        quay:\n          $ref: '#/components/schemas/storageQuayConfig'\n        ecr:\n          $ref: '#/components/schemas/storageECRConfig'\n        tenable:\n          $ref: '#/components/schemas/storageTenableConfig'\n        google:\n          $ref: '#/components/schemas/storageGoogleConfig'\n        clair:\n          $ref: '#/components/schemas/storageClairConfig'\n        anchore:\n          $ref: '#/components/schemas/storageAnchoreConfig'\n        ibm:\n          $ref: '#/components/schemas/storageIBMRegistryConfig'\n        autogenerated:\n          type: boolean\n        clusterId:\n          type: string\n        skipTestIntegration:\n          type: boolean\n      title: 'Next Tag: 21'\n    storageImageIntegrationCategory:\n      type: string\n      enum:\n        - REGISTRY\n        - SCANNER\n        - NODE_SCANNER\n      default: REGISTRY\n      description: |2-\n         - NODE_SCANNER: Image and Node integrations are currently done on the same form in the UI\n        so the image integration is also currently used for node integrations.\n        This decision was made because we currently only support one node scanner (our scanner).\n    storageQuayConfig:\n      type: object\n      properties:\n        endpoint:\n          type: string\n        oauthToken:\n          type: string\n          description: The OAuth token for the integration. The server will mask the value of this credential in responses and logs.\n        insecure:\n          type: boolean\n    storageTenableConfig:\n      type: object\n      properties:\n        accessKey:\n          type: string\n          description: The access key for the integration. The server will mask the value of this credential in responses and logs.\n        secretKey:\n          type: string\n          description: The secret key for the integration. The server will mask the value of this credential in responses and logs.\n    v1GetImageIntegrationsResponse:\n      type: object\n      properties:\n        integrations:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageImageIntegration'\n    v1UpdateImageIntegrationRequest:\n      type: object\n      properties:\n        config:\n          $ref: '#/components/schemas/storageImageIntegration'\n        updatePassword:\n          type: boolean\n          description: When false, use the stored credentials of an existing image integration given its ID.\n    WatchImageResponseErrorType:\n      type: string\n      enum:\n        - NO_ERROR\n        - INVALID_IMAGE_NAME\n        - NO_VALID_INTEGRATION\n        - SCAN_FAILED\n      default: NO_ERROR\n    scannerV1Components:\n      type: object\n      properties:\n        namespace:\n          type: string\n        osComponents:\n          type: array\n          items:\n            $ref: '#/components/schemas/scannerV1OSComponent'\n        rhelComponents:\n          type: array\n          items:\n            $ref: '#/components/schemas/scannerV1RHELComponent'\n        languageComponents:\n          type: array\n          items:\n            $ref: '#/components/schemas/scannerV1LanguageComponent'\n    scannerV1Executable:\n      type: object\n      properties:\n        path:\n          type: string\n        requiredFeatures:\n          type: array\n          items:\n            $ref: '#/components/schemas/scannerV1FeatureNameVersion'\n    scannerV1FeatureNameVersion:\n      type: object\n      properties:\n        name:\n          type: string\n        version:\n          type: string\n    scannerV1JavaComponent:\n      type: object\n      properties:\n        implementationVersion:\n          type: string\n        mavenVersion:\n          type: string\n        origins:\n          type: array\n          items:\n            type: string\n        specificationVersion:\n          type: string\n        bundleName:\n          type: string\n    scannerV1LanguageComponent:\n      type: object\n      properties:\n        type:\n          $ref: '#/components/schemas/scannerV1SourceType'\n        name:\n          type: string\n        version:\n          type: string\n        location:\n          type: string\n        java:\n          $ref: '#/components/schemas/scannerV1JavaComponent'\n        python:\n          $ref: '#/components/schemas/scannerV1PythonComponent'\n        addedBy:\n          type: string\n    scannerV1Note:\n      type: string\n      enum:\n        - OS_CVES_UNAVAILABLE\n        - OS_CVES_STALE\n        - LANGUAGE_CVES_UNAVAILABLE\n        - CERTIFIED_RHEL_SCAN_UNAVAILABLE\n      default: OS_CVES_UNAVAILABLE\n    scannerV1OSComponent:\n      type: object\n      properties:\n        name:\n          type: string\n        namespace:\n          type: string\n        version:\n          type: string\n        addedBy:\n          type: string\n        executables:\n          type: array\n          items:\n            $ref: '#/components/schemas/scannerV1Executable'\n    scannerV1PythonComponent:\n      type: object\n      properties:\n        homepage:\n          type: string\n        authorEmail:\n          type: string\n        downloadUrl:\n          type: string\n        summary:\n          type: string\n        description:\n          type: string\n    scannerV1RHELComponent:\n      type: object\n      properties:\n        id:\n          type: string\n          format: int64\n        name:\n          type: string\n        namespace:\n          type: string\n        version:\n          type: string\n        arch:\n          type: string\n        module:\n          type: string\n        cpes:\n          type: array\n          items:\n            type: string\n        addedBy:\n          type: string\n        executables:\n          type: array\n          items:\n            $ref: '#/components/schemas/scannerV1Executable'\n    scannerV1SourceType:\n      type: string\n      enum:\n        - UNSET_SOURCE_TYPE\n        - JAVA\n        - PYTHON\n        - NPM\n        - GEM\n        - DOTNETCORERUNTIME\n      default: UNSET_SOURCE_TYPE\n    storageCosignSignature:\n      type: object\n      properties:\n        rawSignature:\n          type: string\n          format: byte\n        signaturePayload:\n          type: string\n          format: byte\n    storageDataSource:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n    storageEmbeddedImageScanComponent:\n      type: object\n      properties:\n        name:\n          type: string\n        version:\n          type: string\n        license:\n          $ref: '#/components/schemas/storageLicense'\n        vulns:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageEmbeddedVulnerability'\n        layerIndex:\n          type: integer\n          format: int32\n        priority:\n          type: string\n          format: int64\n        source:\n          $ref: '#/components/schemas/storageSourceType'\n        location:\n          type: string\n        topCvss:\n          type: number\n          format: float\n        riskScore:\n          type: number\n          format: float\n        fixedBy:\n          type: string\n          description: Component version that fixes all the fixable vulnerabilities in this component.\n        executables:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageEmbeddedImageScanComponentExecutable'\n          title: Values are cleared after moving to cache, remove them from the grpc return as well\n      title: 'Next Tag: 13'\n    storageEmbeddedImageScanComponentExecutable:\n      type: object\n      properties:\n        path:\n          type: string\n        dependencies:\n          type: array\n          items:\n            type: string\n    storageImage:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          $ref: '#/components/schemas/storageImageName'\n        metadata:\n          $ref: '#/components/schemas/storageImageMetadata'\n        scan:\n          $ref: '#/components/schemas/storageImageScan'\n        signatureVerificationData:\n          $ref: '#/components/schemas/storageImageSignatureVerificationData'\n        signature:\n          $ref: '#/components/schemas/storageImageSignature'\n        components:\n          type: integer\n          format: int32\n        cves:\n          type: integer\n          format: int32\n        fixableCves:\n          type: integer\n          format: int32\n        lastUpdated:\n          type: string\n          format: date-time\n        notPullable:\n          type: boolean\n        isClusterLocal:\n          type: boolean\n        priority:\n          type: string\n          format: int64\n        riskScore:\n          type: number\n          format: float\n        topCvss:\n          type: number\n          format: float\n        notes:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageImageNote'\n      title: 'Next Tag: 18'\n    storageImageLayer:\n      type: object\n      properties:\n        instruction:\n          type: string\n        value:\n          type: string\n        created:\n          type: string\n          format: date-time\n        author:\n          type: string\n        empty:\n          type: boolean\n    storageImageMetadata:\n      type: object\n      properties:\n        v1:\n          $ref: '#/components/schemas/storageV1Metadata'\n        v2:\n          $ref: '#/components/schemas/storageV2Metadata'\n        layerShas:\n          type: array\n          items:\n            type: string\n          title: We never need both sets of layers so consolidate them. They will be ordered by oldest-\u003enewest\n        dataSource:\n          $ref: '#/components/schemas/storageDataSource'\n        version:\n          type: string\n          format: uint64\n          title: Version is used to determine if the metadata needs to be re-pulled\n      title: |-\n        If any fields of ImageMetadata are modified including subfields, please check pkg/images/enricher/metadata.go\n        to ensure that those changes will be automatically picked up\n        Next Tag: 6\n    storageImageNote:\n      type: string\n      enum:\n        - MISSING_METADATA\n        - MISSING_SCAN_DATA\n        - MISSING_SIGNATURE\n        - MISSING_SIGNATURE_VERIFICATION_DATA\n      default: MISSING_METADATA\n    storageImageScan:\n      type: object\n      properties:\n        scannerVersion:\n          type: string\n        scanTime:\n          type: string\n          format: date-time\n        components:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageEmbeddedImageScanComponent'\n        operatingSystem:\n          type: string\n        dataSource:\n          $ref: '#/components/schemas/storageDataSource'\n        notes:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageImageScanNote'\n      title: 'Next tag: 7'\n    storageImageScanNote:\n      type: string\n      enum:\n        - UNSET\n        - OS_UNAVAILABLE\n        - PARTIAL_SCAN_DATA\n        - OS_CVES_UNAVAILABLE\n        - OS_CVES_STALE\n        - LANGUAGE_CVES_UNAVAILABLE\n        - CERTIFIED_RHEL_SCAN_UNAVAILABLE\n      default: UNSET\n    storageImageSignature:\n      type: object\n      properties:\n        signatures:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageSignature'\n        fetched:\n          type: string\n          format: date-time\n    storageImageSignatureVerificationData:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageImageSignatureVerificationResult'\n    storageImageSignatureVerificationResult:\n      type: object\n      properties:\n        verificationTime:\n          type: string\n          format: date-time\n        verifierId:\n          type: string\n          description: verifier_id correlates to the ID of the signature integration used to verify the signature.\n        status:\n          $ref: '#/components/schemas/storageImageSignatureVerificationResultStatus'\n        description:\n          type: string\n          description: description is set in the case of an error with the specific error's message. Otherwise, this will not be set.\n      title: 'Next Tag: 5'\n    storageImageSignatureVerificationResultStatus:\n      type: string\n      enum:\n        - UNSET\n        - VERIFIED\n        - FAILED_VERIFICATION\n        - INVALID_SIGNATURE_ALGO\n        - CORRUPTED_SIGNATURE\n        - GENERIC_ERROR\n      default: UNSET\n      description: |-\n        Status represents the status of the result.\n\n         - VERIFIED: VERIFIED is set when the signature's verification was successful.\n         - FAILED_VERIFICATION: FAILED_VERIFICATION is set when the signature's verification failed.\n         - INVALID_SIGNATURE_ALGO: INVALID_SIGNATURE_ALGO is set when the signature's algorithm is invalid and unsupported.\n         - CORRUPTED_SIGNATURE: CORRUPTED_SIGNATURE is set when the raw signature is corrupted, i.e. wrong base64 encoding.\n         - GENERIC_ERROR: GENERIC_ERROR is set when an error occurred during verification that cannot be associated with a specific\n        status.\n    storageLicense:\n      type: object\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n        url:\n          type: string\n    storageListImage:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        components:\n          type: integer\n          format: int32\n        cves:\n          type: integer\n          format: int32\n        fixableCves:\n          type: integer\n          format: int32\n        created:\n          type: string\n          format: date-time\n        lastUpdated:\n          type: string\n          format: date-time\n        priority:\n          type: string\n          format: int64\n    storageSignature:\n      type: object\n      properties:\n        cosign:\n          $ref: '#/components/schemas/storageCosignSignature'\n    storageSourceType:\n      type: string\n      enum:\n        - OS\n        - PYTHON\n        - JAVA\n        - RUBY\n        - NODEJS\n        - DOTNETCORERUNTIME\n        - INFRASTRUCTURE\n      default: OS\n    storageV1Metadata:\n      type: object\n      properties:\n        digest:\n          type: string\n        created:\n          type: string\n          format: date-time\n        author:\n          type: string\n        layers:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageImageLayer'\n        user:\n          type: string\n        command:\n          type: array\n          items:\n            type: string\n        entrypoint:\n          type: array\n          items:\n            type: string\n        volumes:\n          type: array\n          items:\n            type: string\n        labels:\n          type: object\n          additionalProperties:\n            type: string\n    storageV2Metadata:\n      type: object\n      properties:\n        digest:\n          type: string\n    storageWatchedImage:\n      type: object\n      properties:\n        name:\n          type: string\n    v1CountImagesResponse:\n      type: object\n      properties:\n        count:\n          type: integer\n          format: int32\n    v1DeleteImagesResponse:\n      type: object\n      properties:\n        numDeleted:\n          type: integer\n          format: int64\n        dryRun:\n          type: boolean\n    v1GetWatchedImagesResponse:\n      type: object\n      properties:\n        watchedImages:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageWatchedImage'\n    v1ListImagesResponse:\n      type: object\n      properties:\n        images:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageListImage'\n    v1ScanImageInternalResponse:\n      type: object\n      properties:\n        image:\n          $ref: '#/components/schemas/storageImage'\n    v1ScanImageRequest:\n      type: object\n      properties:\n        imageName:\n          type: string\n        force:\n          type: boolean\n        includeSnoozed:\n          type: boolean\n    v1WatchImageRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          description: |-\n            The name of the image.\n            This must be fully qualified, including a tag,\n            but must NOT include a SHA.\n    v1WatchImageResponse:\n      type: object\n      properties:\n        normalizedName:\n          type: string\n          title: |-\n            If the image was scanned successfully, this returns the normalized name of the image.\n            This depends on what we get from the registry.\n            For example, \"docker.io/wordpress:latest\" -\u003e \"docker.io/library/wordpress:latest\"\n        errorType:\n          $ref: '#/components/schemas/WatchImageResponseErrorType'\n        errorMessage:\n          type: string\n          description: Only set if error_type is NOT equal to \"NO_ERROR\".\n    storageIntegrationHealth:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        type:\n          $ref: '#/components/schemas/storageIntegrationHealthType'\n        status:\n          $ref: '#/components/schemas/storageIntegrationHealthStatus'\n        errorMessage:\n          type: string\n        lastTimestamp:\n          type: string\n          format: date-time\n          title: Timestamp when the status was ascertained\n    storageIntegrationHealthStatus:\n      type: string\n      enum:\n        - UNINITIALIZED\n        - UNHEALTHY\n        - HEALTHY\n      default: UNINITIALIZED\n    storageIntegrationHealthType:\n      type: string\n      enum:\n        - UNKNOWN\n        - IMAGE_INTEGRATION\n        - NOTIFIER\n        - BACKUP\n      default: UNKNOWN\n    v1GetIntegrationHealthResponse:\n      type: object\n      properties:\n        integrationHealth:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageIntegrationHealth'\n    v1VulnDefinitionsInfo:\n      type: object\n      properties:\n        lastUpdatedTimestamp:\n          type: string\n          format: date-time\n    LicenseContact:\n      type: object\n      properties:\n        phone:\n          type: string\n        email:\n          type: string\n        url:\n          type: string\n        name:\n          type: string\n    LicenseRestrictions:\n      type: object\n      properties:\n        notValidBefore:\n          type: string\n          format: date-time\n        notValidAfter:\n          type: string\n          format: date-time\n        enforcementUrl:\n          type: string\n          description: URL for on-line license enforcement. Must be set unless allow_offline is true.\n        allowOffline:\n          type: boolean\n          description: Allow offline use (i.e., no online license enforcement).\n        maxNodes:\n          type: integer\n          format: int32\n          description: Maximum number of nodes. Must be set unless no_node_restriction is true.\n        noNodeRestriction:\n          type: boolean\n          description: Do not restrict the number of nodes.\n        buildFlavors:\n          type: array\n          items:\n            type: string\n          description: |-\n            Build flavors of the product this license is valid for (e.g., \"development\" or \"release\"). Must be set unless\n            no_build_flavor_restriction is true.\n        noBuildFlavorRestriction:\n          type: boolean\n          description: Do not restrict license to certain build flavors.\n        deploymentEnvironments:\n          type: array\n          items:\n            type: string\n          description: |-\n            Deployment environments that are valid for the product, such as `gcp` or `gcp/ultra-current-825`. Must be\n            set unless no_deployment_environment_restriction is true.\n        noDeploymentEnvironmentRestriction:\n          type: boolean\n          description: Do not restrict license to certain deployment environments.\n    licenseLicense:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/licenseLicenseMetadata'\n        supportContact:\n          $ref: '#/components/schemas/LicenseContact'\n        restrictions:\n          $ref: '#/components/schemas/LicenseRestrictions'\n    licenseLicenseMetadata:\n      type: object\n      properties:\n        id:\n          type: string\n        signingKeyId:\n          type: string\n        issueDate:\n          type: string\n          format: date-time\n        licensedForId:\n          type: string\n        licensedForName:\n          type: string\n    v1AddLicenseRequest:\n      type: object\n      properties:\n        licenseKey:\n          type: string\n        activate:\n          type: boolean\n          description: Indicates whether the license represented by this key should be made the active license.\n    v1AddLicenseResponse:\n      type: object\n      properties:\n        license:\n          $ref: '#/components/schemas/v1LicenseInfo'\n        accepted:\n          type: boolean\n          description: |-\n            Indicates whether or not the license was accepted by the product. Only licenses which are either valid or\n            not yet valid will be accepted. Note that we prefer this over a GRPC error, as it might be helpful to show the,\n            e.g., contact information from the decoded blob.\n    v1GetActiveLicenseExpirationResponse:\n      type: object\n      properties:\n        expirationTime:\n          type: string\n          format: date-time\n    v1GetActiveLicenseKeyResponse:\n      type: object\n      properties:\n        licenseKey:\n          type: string\n    v1GetLicensesResponse:\n      type: object\n      properties:\n        licenses:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1LicenseInfo'\n    v1LicenseInfo:\n      type: object\n      properties:\n        license:\n          $ref: '#/components/schemas/licenseLicense'\n        status:\n          $ref: '#/components/schemas/v1LicenseInfoStatus'\n        statusReason:\n          type: string\n        active:\n          type: boolean\n    v1LicenseInfoStatus:\n      type: string\n      enum:\n        - UNKNOWN\n        - VALID\n        - REVOKED\n        - NOT_YET_VALID\n        - EXPIRED\n        - OTHER\n      default: UNKNOWN\n    MetadataLicenseStatus:\n      type: string\n      enum:\n        - NONE\n        - INVALID\n        - EXPIRED\n        - RESTARTING\n        - VALID\n      default: NONE\n    v1Metadata:\n      type: object\n      properties:\n        version:\n          type: string\n        buildFlavor:\n          type: string\n        releaseBuild:\n          type: boolean\n        licenseStatus:\n          $ref: '#/components/schemas/MetadataLicenseStatus'\n    v1TLSChallengeResponse:\n      type: object\n      properties:\n        trustInfoSerialized:\n          type: string\n          format: byte\n          title: signed data which is returned to the caller, is validated against the signature\n        signature:\n          type: string\n          format: byte\n    storageMitreAttackVector:\n      type: object\n      properties:\n        tactic:\n          $ref: '#/components/schemas/storageMitreTactic'\n        techniques:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageMitreTechnique'\n    storageMitreTactic:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n    storageMitreTechnique:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n    v1GetMitreVectorResponse:\n      type: object\n      properties:\n        mitreAttackVector:\n          $ref: '#/components/schemas/storageMitreAttackVector'\n    v1ListMitreAttackVectorsResponse:\n      type: object\n      properties:\n        mitreAttackVectors:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageMitreAttackVector'\n    storageNamespaceMetadata:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        clusterId:\n          type: string\n        clusterName:\n          type: string\n        labels:\n          type: object\n          additionalProperties:\n            type: string\n          description: 'TODO(ROX-6895): \"Label\" search term is ambiguous.'\n        creationTime:\n          type: string\n          format: date-time\n        priority:\n          type: string\n          format: int64\n        annotations:\n          type: object\n          additionalProperties:\n            type: string\n    v1GetNamespacesResponse:\n      type: object\n      properties:\n        namespaces:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1Namespace'\n    v1Namespace:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/storageNamespaceMetadata'\n        numDeployments:\n          type: integer\n          format: int32\n        numSecrets:\n          type: integer\n          format: int32\n        numNetworkPolicies:\n          type: integer\n          format: int32\n    DeploymentListenPort:\n      type: object\n      properties:\n        port:\n          type: integer\n          format: int64\n        l4protocol:\n          $ref: '#/components/schemas/storageL4Protocol'\n    NetworkEntityInfoExternalSource:\n      type: object\n      properties:\n        name:\n          type: string\n        cidr:\n          type: string\n        default:\n          type: boolean\n          description: '`default` indicates whether the external source is user-generated or system-generated.'\n      description: Update normalizeDupNameExtSrcs(...) in `central/networkgraph/aggregator/aggregator.go` whenever this message is updated.\n    storageNetworkBaseline:\n      type: object\n      properties:\n        deploymentId:\n          type: string\n          description: This is the ID of the baseline.\n        clusterId:\n          type: string\n        namespace:\n          type: string\n        peers:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageNetworkBaselinePeer'\n        forbiddenPeers:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageNetworkBaselinePeer'\n          description: |-\n            A list of peers that will never be added to the baseline.\n            For now, this contains peers that the user has manually removed.\n            This is used to ensure we don't add it back in the event\n            we see the flow again.\n        observationPeriodEnd:\n          type: string\n          format: date-time\n        locked:\n          type: boolean\n          title: |-\n            Indicates if this baseline has been locked by user.\n            Here locking means:\n              1: Do not let system automatically add any allowed peer to baseline\n              2: Start reporting violations on flows that are not in the baseline\n        deploymentName:\n          type: string\n      title: |-\n        NetworkBaseline represents a network baseline of a deployment. It contains all\n        the baseline peers and their respective connections.\n        next available tag: 8\n    storageNetworkBaselineConnectionProperties:\n      type: object\n      properties:\n        ingress:\n          type: boolean\n          title: |-\n            Whether this connection is an ingress/egress, from the PoV\n            of the deployment whose baseline this is in\n        port:\n          type: integer\n          format: int64\n          title: May be 0 if not applicable (e.g., icmp), and denotes the destination port\n        protocol:\n          $ref: '#/components/schemas/storageL4Protocol'\n      title: |-\n        NetworkBaselineConnectionProperties represents information about a baseline connection\n        next available tag: 4\n    storageNetworkBaselinePeer:\n      type: object\n      properties:\n        entity:\n          $ref: '#/components/schemas/storageNetworkEntity'\n        properties:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageNetworkBaselineConnectionProperties'\n          title: Will always have at least one element\n      title: |-\n        NetworkBaselinePeer represents a baseline peer.\n        next available tag: 3\n    storageNetworkEntity:\n      type: object\n      properties:\n        info:\n          $ref: '#/components/schemas/storageNetworkEntityInfo'\n        scope:\n          $ref: '#/components/schemas/storageNetworkEntityScope'\n    storageNetworkEntityInfo:\n      type: object\n      properties:\n        type:\n          $ref: '#/components/schemas/storageNetworkEntityInfoType'\n        id:\n          type: string\n        deployment:\n          $ref: '#/components/schemas/storageNetworkEntityInfoDeployment'\n        externalSource:\n          $ref: '#/components/schemas/NetworkEntityInfoExternalSource'\n    storageNetworkEntityInfoDeployment:\n      type: object\n      properties:\n        name:\n          type: string\n        namespace:\n          type: string\n        cluster:\n          type: string\n        listenPorts:\n          type: array\n          items:\n            $ref: '#/components/schemas/DeploymentListenPort'\n    storageNetworkEntityScope:\n      type: object\n      properties:\n        clusterId:\n          type: string\n    v1ModifyBaselineStatusForPeersRequest:\n      type: object\n      properties:\n        deploymentId:\n          type: string\n        peers:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1NetworkBaselinePeerStatus'\n    v1NetworkBaselinePeerEntity:\n      type: object\n      properties:\n        id:\n          type: string\n        type:\n          $ref: '#/components/schemas/storageNetworkEntityInfoType'\n    v1NetworkBaselinePeerStatus:\n      type: object\n      properties:\n        peer:\n          $ref: '#/components/schemas/v1NetworkBaselineStatusPeer'\n        status:\n          $ref: '#/components/schemas/v1NetworkBaselinePeerStatusStatus'\n    v1NetworkBaselinePeerStatusStatus:\n      type: string\n      enum:\n        - BASELINE\n        - ANOMALOUS\n      default: BASELINE\n      title: |-\n        Status of this peer connection. As of now we only have two statuses:\n          - BASELINE: the connection is in the current deployment baseline\n          - ANOMALOUS: the connection is not recognized by the current deployment baseline\n    v1NetworkBaselineStatusPeer:\n      type: object\n      properties:\n        entity:\n          $ref: '#/components/schemas/v1NetworkBaselinePeerEntity'\n        port:\n          type: integer\n          format: int64\n          description: The port and protocol of the destination of the given connection.\n        protocol:\n          $ref: '#/components/schemas/storageL4Protocol'\n        ingress:\n          type: boolean\n          description: |-\n            A boolean representing whether the query is for an ingress or egress\n            connection. This is defined with respect to the current deployment.\n            Thus:\n              - If the connection in question is in the outEdges of the current deployment,\n                this should be false.\n              - If it is in the outEdges of the peer deployment, this\n                should be true.\n    v1NetworkBaselineStatusRequest:\n      type: object\n      properties:\n        deploymentId:\n          type: string\n        peers:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1NetworkBaselineStatusPeer'\n    v1NetworkBaselineStatusResponse:\n      type: object\n      properties:\n        statuses:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1NetworkBaselinePeerStatus'\n    v1ResourceByID:\n      type: object\n      properties:\n        id:\n          type: string\n    storageNetworkGraphConfig:\n      type: object\n      properties:\n        hideDefaultExternalSrcs:\n          type: boolean\n    v1CreateNetworkEntityRequest:\n      type: object\n      properties:\n        clusterId:\n          type: string\n        entity:\n          $ref: '#/components/schemas/NetworkEntityInfoExternalSource'\n    v1GetExternalNetworkEntitiesResponse:\n      type: object\n      properties:\n        entities:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageNetworkEntity'\n    v1NetworkEdgeProperties:\n      type: object\n      properties:\n        port:\n          type: integer\n          format: int64\n        protocol:\n          $ref: '#/components/schemas/storageL4Protocol'\n        lastActiveTimestamp:\n          type: string\n          format: date-time\n    v1NetworkEdgePropertiesBundle:\n      type: object\n      properties:\n        properties:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1NetworkEdgeProperties'\n    v1NetworkGraph:\n      type: object\n      properties:\n        epoch:\n          type: integer\n          format: int64\n        nodes:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1NetworkNode'\n    v1NetworkGraphScope:\n      type: object\n      properties:\n        query:\n          type: string\n    v1NetworkNode:\n      type: object\n      properties:\n        entity:\n          $ref: '#/components/schemas/storageNetworkEntityInfo'\n        internetAccess:\n          type: boolean\n        policyIds:\n          type: array\n          items:\n            type: string\n        nonIsolatedIngress:\n          type: boolean\n        nonIsolatedEgress:\n          type: boolean\n        queryMatch:\n          type: boolean\n        outEdges:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/v1NetworkEdgePropertiesBundle'\n    v1PatchNetworkEntityRequest:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n    v1PutNetworkGraphConfigRequest:\n      type: object\n      properties:\n        config:\n          $ref: '#/components/schemas/storageNetworkGraphConfig'\n    GenerateNetworkPoliciesRequestDeleteExistingPoliciesMode:\n      type: string\n      enum:\n        - UNKNOWN\n        - NONE\n        - GENERATED_ONLY\n        - ALL\n      default: UNKNOWN\n    storageIPBlock:\n      type: object\n      properties:\n        cidr:\n          type: string\n        except:\n          type: array\n          items:\n            type: string\n    storageNetworkPolicy:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        clusterId:\n          type: string\n        clusterName:\n          type: string\n        namespace:\n          type: string\n        labels:\n          type: object\n          additionalProperties:\n            type: string\n        annotations:\n          type: object\n          additionalProperties:\n            type: string\n        spec:\n          $ref: '#/components/schemas/storageNetworkPolicySpec'\n        yaml:\n          type: string\n        apiVersion:\n          type: string\n        created:\n          type: string\n          format: date-time\n    storageNetworkPolicyApplicationUndoRecord:\n      type: object\n      properties:\n        user:\n          type: string\n        applyTimestamp:\n          type: string\n          format: date-time\n        originalModification:\n          $ref: '#/components/schemas/storageNetworkPolicyModification'\n        undoModification:\n          $ref: '#/components/schemas/storageNetworkPolicyModification'\n    storageNetworkPolicyEgressRule:\n      type: object\n      properties:\n        ports:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageNetworkPolicyPort'\n        to:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageNetworkPolicyPeer'\n    storageNetworkPolicyIngressRule:\n      type: object\n      properties:\n        ports:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageNetworkPolicyPort'\n        from:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageNetworkPolicyPeer'\n    storageNetworkPolicyModification:\n      type: object\n      properties:\n        applyYaml:\n          type: string\n        toDelete:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageNetworkPolicyReference'\n      title: 'Next available tag: 3'\n    storageNetworkPolicyPeer:\n      type: object\n      properties:\n        podSelector:\n          $ref: '#/components/schemas/storageLabelSelector'\n        namespaceSelector:\n          $ref: '#/components/schemas/storageLabelSelector'\n        ipBlock:\n          $ref: '#/components/schemas/storageIPBlock'\n    storageNetworkPolicyPort:\n      type: object\n      properties:\n        protocol:\n          $ref: '#/components/schemas/storageProtocol'\n        port:\n          type: integer\n          format: int32\n        portName:\n          type: string\n    storageNetworkPolicyReference:\n      type: object\n      properties:\n        namespace:\n          type: string\n        name:\n          type: string\n      title: 'Next available tag: 3'\n    storageNetworkPolicySpec:\n      type: object\n      properties:\n        podSelector:\n          $ref: '#/components/schemas/storageLabelSelector'\n        ingress:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageNetworkPolicyIngressRule'\n        egress:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageNetworkPolicyEgressRule'\n        policyTypes:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageNetworkPolicyType'\n    storageNetworkPolicyType:\n      type: string\n      enum:\n        - UNSET_NETWORK_POLICY_TYPE\n        - INGRESS_NETWORK_POLICY_TYPE\n        - EGRESS_NETWORK_POLICY_TYPE\n      default: UNSET_NETWORK_POLICY_TYPE\n    storageProtocol:\n      type: string\n      enum:\n        - UNSET_PROTOCOL\n        - TCP_PROTOCOL\n        - UDP_PROTOCOL\n        - SCTP_PROTOCOL\n      default: UNSET_PROTOCOL\n    v1ApplyNetworkPolicyYamlForDeploymentRequest:\n      type: object\n      properties:\n        deploymentId:\n          type: string\n        modification:\n          $ref: '#/components/schemas/storageNetworkPolicyModification'\n    v1GenerateNetworkPoliciesResponse:\n      type: object\n      properties:\n        modification:\n          $ref: '#/components/schemas/storageNetworkPolicyModification'\n      title: 'Next available tag: 2'\n    v1GetAllowedPeersFromCurrentPolicyForDeploymentResponse:\n      type: object\n      properties:\n        allowedPeers:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1NetworkBaselineStatusPeer'\n    v1GetBaselineGeneratedPolicyForDeploymentRequest:\n      type: object\n      properties:\n        deploymentId:\n          type: string\n        deleteExisting:\n          $ref: '#/components/schemas/GenerateNetworkPoliciesRequestDeleteExistingPoliciesMode'\n        includePorts:\n          type: boolean\n    v1GetBaselineGeneratedPolicyForDeploymentResponse:\n      type: object\n      properties:\n        modification:\n          $ref: '#/components/schemas/storageNetworkPolicyModification'\n    v1GetDiffFlowsGroupedFlow:\n      type: object\n      properties:\n        entity:\n          $ref: '#/components/schemas/storageNetworkEntityInfo'\n        properties:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageNetworkBaselineConnectionProperties'\n    v1GetDiffFlowsReconciledFlow:\n      type: object\n      properties:\n        entity:\n          $ref: '#/components/schemas/storageNetworkEntityInfo'\n        added:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageNetworkBaselineConnectionProperties'\n        removed:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageNetworkBaselineConnectionProperties'\n        unchanged:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageNetworkBaselineConnectionProperties'\n    v1GetDiffFlowsResponse:\n      type: object\n      properties:\n        added:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1GetDiffFlowsGroupedFlow'\n        removed:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1GetDiffFlowsGroupedFlow'\n        reconciled:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1GetDiffFlowsReconciledFlow'\n    v1GetUndoModificationForDeploymentResponse:\n      type: object\n      properties:\n        undoRecord:\n          $ref: '#/components/schemas/storageNetworkPolicyApplicationUndoRecord'\n    v1GetUndoModificationResponse:\n      type: object\n      properties:\n        undoRecord:\n          $ref: '#/components/schemas/storageNetworkPolicyApplicationUndoRecord'\n    v1NetworkGraphDiff:\n      type: object\n      properties:\n        DEPRECATEDNodeDiffs:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/v1NetworkNodeDiff'\n        nodeDiffs:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/v1NetworkNodeDiff'\n    v1NetworkGraphEpoch:\n      type: object\n      properties:\n        epoch:\n          type: integer\n          format: int64\n    v1NetworkNodeDiff:\n      type: object\n      properties:\n        policyIds:\n          type: array\n          items:\n            type: string\n        DEPRECATEDOutEdges:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/v1NetworkEdgePropertiesBundle'\n        outEdges:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/v1NetworkEdgePropertiesBundle'\n        nonIsolatedIngress:\n          type: boolean\n        nonIsolatedEgress:\n          type: boolean\n    v1NetworkPoliciesResponse:\n      type: object\n      properties:\n        networkPolicies:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageNetworkPolicy'\n    v1NetworkPolicyInSimulation:\n      type: object\n      properties:\n        policy:\n          $ref: '#/components/schemas/storageNetworkPolicy'\n        status:\n          $ref: '#/components/schemas/v1NetworkPolicyInSimulationStatus'\n        oldPolicy:\n          $ref: '#/components/schemas/storageNetworkPolicy'\n    v1NetworkPolicyInSimulationStatus:\n      type: string\n      enum:\n        - INVALID\n        - UNCHANGED\n        - MODIFIED\n        - ADDED\n        - DELETED\n      default: INVALID\n    v1SimulateNetworkGraphResponse:\n      type: object\n      properties:\n        simulatedGraph:\n          $ref: '#/components/schemas/v1NetworkGraph'\n        policies:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1NetworkPolicyInSimulation'\n        added:\n          $ref: '#/components/schemas/v1NetworkGraphDiff'\n        removed:\n          $ref: '#/components/schemas/v1NetworkGraphDiff'\n    v1ListNodesResponse:\n      type: object\n      properties:\n        nodes:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageNode'\n    AWSSecurityHubCredentials:\n      type: object\n      properties:\n        accessKeyId:\n          type: string\n        secretAccessKey:\n          type: string\n    EmailAuthMethod:\n      type: string\n      enum:\n        - DISABLED\n        - PLAIN\n        - LOGIN\n      default: DISABLED\n    JiraPriorityMapping:\n      type: object\n      properties:\n        severity:\n          $ref: '#/components/schemas/storageSeverity'\n        priorityName:\n          type: string\n    SyslogLocalFacility:\n      type: string\n      enum:\n        - LOCAL0\n        - LOCAL1\n        - LOCAL2\n        - LOCAL3\n        - LOCAL4\n        - LOCAL5\n        - LOCAL6\n        - LOCAL7\n      default: LOCAL0\n    SyslogTCPConfig:\n      type: object\n      properties:\n        hostname:\n          type: string\n        port:\n          type: integer\n          format: int32\n        skipTlsVerify:\n          type: boolean\n        useTls:\n          type: boolean\n    storageAWSSecurityHub:\n      type: object\n      properties:\n        region:\n          type: string\n        credentials:\n          $ref: '#/components/schemas/AWSSecurityHubCredentials'\n        accountId:\n          type: string\n    storageCSCC:\n      type: object\n      properties:\n        serviceAccount:\n          type: string\n          description: The service account for the integration. The server will mask the value of this credential in responses and logs.\n        sourceId:\n          type: string\n    storageEmail:\n      type: object\n      properties:\n        server:\n          type: string\n        sender:\n          type: string\n        username:\n          type: string\n        password:\n          type: string\n          description: The password for the integration. The server will mask the value of this credential in responses and logs.\n        disableTLS:\n          type: boolean\n        DEPRECATEDUseStartTLS:\n          type: boolean\n        from:\n          type: string\n        startTLSAuthMethod:\n          $ref: '#/components/schemas/EmailAuthMethod'\n    storageGeneric:\n      type: object\n      properties:\n        endpoint:\n          type: string\n        skipTLSVerify:\n          type: boolean\n        caCert:\n          type: string\n        username:\n          type: string\n        password:\n          type: string\n          description: The password for the integration. The server will mask the value of this credential in responses and logs.\n        headers:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageKeyValuePair'\n        extraFields:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageKeyValuePair'\n        auditLoggingEnabled:\n          type: boolean\n    storageJira:\n      type: object\n      properties:\n        url:\n          type: string\n        username:\n          type: string\n        password:\n          type: string\n          description: The password for the integration. The server will mask the value of this credential in responses and logs.\n        issueType:\n          type: string\n        priorityMappings:\n          type: array\n          items:\n            $ref: '#/components/schemas/JiraPriorityMapping'\n        defaultFieldsJson:\n          type: string\n    storageKeyValuePair:\n      type: object\n      properties:\n        key:\n          type: string\n        value:\n          type: string\n    storageNotifier:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        type:\n          type: string\n        uiEndpoint:\n          type: string\n        labelKey:\n          type: string\n        labelDefault:\n          type: string\n        jira:\n          $ref: '#/components/schemas/storageJira'\n        email:\n          $ref: '#/components/schemas/storageEmail'\n        cscc:\n          $ref: '#/components/schemas/storageCSCC'\n        splunk:\n          $ref: '#/components/schemas/storageSplunk'\n        pagerduty:\n          $ref: '#/components/schemas/storagePagerDuty'\n        generic:\n          $ref: '#/components/schemas/storageGeneric'\n        sumologic:\n          $ref: '#/components/schemas/storageSumoLogic'\n        awsSecurityHub:\n          $ref: '#/components/schemas/storageAWSSecurityHub'\n        syslog:\n          $ref: '#/components/schemas/storageSyslog'\n    storagePagerDuty:\n      type: object\n      properties:\n        apiKey:\n          type: string\n          description: The API key for the integration. The server will mask the value of this credential in responses and logs.\n    storageSplunk:\n      type: object\n      properties:\n        httpToken:\n          type: string\n          description: The HTTP token for the integration. The server will mask the value of this credential in responses and logs.\n        httpEndpoint:\n          type: string\n        insecure:\n          type: boolean\n        truncate:\n          type: string\n          format: int64\n        auditLoggingEnabled:\n          type: boolean\n        derivedSourceType:\n          type: boolean\n          title: derived_source_type is deprecated in lieu of source_types\n        sourceTypes:\n          type: object\n          additionalProperties:\n            type: string\n    storageSumoLogic:\n      type: object\n      properties:\n        httpSourceAddress:\n          type: string\n        skipTLSVerify:\n          type: boolean\n    storageSyslog:\n      type: object\n      properties:\n        localFacility:\n          $ref: '#/components/schemas/SyslogLocalFacility'\n        tcpConfig:\n          $ref: '#/components/schemas/SyslogTCPConfig'\n    v1GetNotifiersResponse:\n      type: object\n      properties:\n        notifiers:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageNotifier'\n    v1UpdateNotifierRequest:\n      type: object\n      properties:\n        notifier:\n          $ref: '#/components/schemas/storageNotifier'\n        updatePassword:\n          type: boolean\n          description: When false, use the stored credentials of an existing notifier configuration given its ID.\n    v1PongMessage:\n      type: object\n      properties:\n        status:\n          type: string\n    PodContainerInstanceList:\n      type: object\n      properties:\n        instances:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageContainerInstance'\n    storageContainerInstance:\n      type: object\n      properties:\n        instanceId:\n          $ref: '#/components/schemas/storageContainerInstanceID'\n        containingPodId:\n          type: string\n          description: The pod containing this container instance (kubernetes only).\n        containerName:\n          type: string\n          description: Container name.\n        containerIps:\n          type: array\n          items:\n            type: string\n          description: The IP addresses of this container.\n        started:\n          type: string\n          format: date-time\n          title: The start time of the container\n        imageDigest:\n          type: string\n          title: Image ID\n        finished:\n          type: string\n          format: date-time\n          description: The finish time of the container, if it finished.\n        exitCode:\n          type: integer\n          format: int32\n          description: The exit code of the container. Only valid when finished is populated.\n        terminationReason:\n          type: string\n          description: The reason for the container's termination, if it finished.\n      description: ContainerInstanceID allows to uniquely identify a container within a cluster.\n    storageContainerInstanceID:\n      type: object\n      properties:\n        containerRuntime:\n          $ref: '#/components/schemas/storageContainerRuntime'\n        id:\n          type: string\n          description: The ID of the container, specific to the given runtime.\n        node:\n          type: string\n          description: The node on which this container runs.\n    storagePod:\n      type: object\n      properties:\n        id:\n          type: string\n          title: Pod UID\n        name:\n          type: string\n        deploymentId:\n          type: string\n        namespace:\n          type: string\n        clusterId:\n          type: string\n        liveInstances:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageContainerInstance'\n        terminatedInstances:\n          type: array\n          items:\n            $ref: '#/components/schemas/PodContainerInstanceList'\n          description: |-\n            Must be a list of lists, so we can perform search queries (does not work for maps that aren't \u003cstring, string\u003e)\n            There is one bucket (list) per container name.\n        started:\n          type: string\n          format: date-time\n          description: Time Kubernetes reports the pod was created.\n      description: Pod represents information for a currently running pod or deleted pod in an active deployment.\n    v1PodsResponse:\n      type: object\n      properties:\n        pods:\n          type: array\n          items:\n            $ref: '#/components/schemas/storagePod'\n    GetPolicyMitreVectorsRequestOptions:\n      type: object\n      properties:\n        excludePolicy:\n          type: boolean\n          description: If set to true, policy is excluded from the response.\n    storageExportPoliciesResponse:\n      type: object\n      properties:\n        policies:\n          type: array\n          items:\n            $ref: '#/components/schemas/storagePolicy'\n      title: |-\n        ExportPoliciesResponse is used by the API but it is defined in storage because we expect customers to store them.\n        We do backwards-compatibility checks on objects in the storge folder and those checks should be applied to this object\n    storageListPolicy:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        severity:\n          $ref: '#/components/schemas/storageSeverity'\n        disabled:\n          type: boolean\n        lifecycleStages:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageLifecycleStage'\n        notifiers:\n          type: array\n          items:\n            type: string\n        lastUpdated:\n          type: string\n          format: date-time\n        eventSource:\n          $ref: '#/components/schemas/storageEventSource'\n        isDefault:\n          type: boolean\n    v1DryRunJobStatusResponse:\n      type: object\n      properties:\n        pending:\n          type: boolean\n        result:\n          $ref: '#/components/schemas/v1DryRunResponse'\n    v1DryRunResponse:\n      type: object\n      properties:\n        alerts:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1DryRunResponseAlert'\n    v1DryRunResponseAlert:\n      type: object\n      properties:\n        deployment:\n          type: string\n        violations:\n          type: array\n          items:\n            type: string\n    v1EnableDisablePolicyNotificationRequest:\n      type: object\n      properties:\n        policyId:\n          type: string\n        notifierIds:\n          type: array\n          items:\n            type: string\n        disable:\n          type: boolean\n    v1ExportPoliciesRequest:\n      type: object\n      properties:\n        policyIds:\n          type: array\n          items:\n            type: string\n    v1GetPolicyMitreVectorsResponse:\n      type: object\n      properties:\n        policy:\n          $ref: '#/components/schemas/storagePolicy'\n        vectors:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageMitreAttackVector'\n    v1ImportPoliciesMetadata:\n      type: object\n      properties:\n        overwrite:\n          type: boolean\n    v1ImportPoliciesRequest:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/v1ImportPoliciesMetadata'\n        policies:\n          type: array\n          items:\n            $ref: '#/components/schemas/storagePolicy'\n    v1ImportPoliciesResponse:\n      type: object\n      properties:\n        responses:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1ImportPolicyResponse'\n        allSucceeded:\n          type: boolean\n    v1ImportPolicyError:\n      type: object\n      properties:\n        message:\n          type: string\n        type:\n          type: string\n        duplicateName:\n          type: string\n        validationError:\n          type: string\n    v1ImportPolicyResponse:\n      type: object\n      properties:\n        succeeded:\n          type: boolean\n        policy:\n          $ref: '#/components/schemas/storagePolicy'\n        errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1ImportPolicyError'\n    v1JobId:\n      type: object\n      properties:\n        jobId:\n          type: string\n    v1ListPoliciesResponse:\n      type: object\n      properties:\n        policies:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageListPolicy'\n    v1PatchPolicyRequest:\n      type: object\n      properties:\n        id:\n          type: string\n        disabled:\n          type: boolean\n    v1PolicyCategoriesResponse:\n      type: object\n      properties:\n        categories:\n          type: array\n          items:\n            type: string\n    v1PolicyFromSearchRequest:\n      type: object\n      properties:\n        searchParams:\n          type: string\n    v1PolicyFromSearchResponse:\n      type: object\n      properties:\n        policy:\n          $ref: '#/components/schemas/storagePolicy'\n        alteredSearchTerms:\n          type: array\n          items:\n            type: string\n        hasNestedFields:\n          type: boolean\n    v1RenamePolicyCategoryRequest:\n      type: object\n      properties:\n        oldCategory:\n          type: string\n        newCategory:\n          type: string\n    v1GetExistingProbesResponse:\n      type: object\n      properties:\n        existingFiles:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1ProbeUploadManifestFile'\n    v1ProbeUploadManifestFile:\n      type: object\n      properties:\n        name:\n          type: string\n        size:\n          type: string\n          format: int64\n        crc32:\n          type: integer\n          format: int64\n    storageBaselineElement:\n      type: object\n      properties:\n        element:\n          $ref: '#/components/schemas/storageBaselineItem'\n        auto:\n          type: boolean\n    storageBaselineItem:\n      type: object\n      properties:\n        processName:\n          type: string\n    storageProcessBaseline:\n      type: object\n      properties:\n        id:\n          type: string\n        key:\n          $ref: '#/components/schemas/storageProcessBaselineKey'\n        elements:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageBaselineElement'\n        elementGraveyard:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageBaselineElement'\n        created:\n          type: string\n          format: date-time\n        userLockedTimestamp:\n          type: string\n          format: date-time\n        stackRoxLockedTimestamp:\n          type: string\n          format: date-time\n        lastUpdate:\n          type: string\n          format: date-time\n    storageProcessBaselineKey:\n      type: object\n      properties:\n        deploymentId:\n          type: string\n          description: |-\n            The idea is for the keys to be flexible.\n            Only certain combinations of these will be supported.\n        containerName:\n          type: string\n        clusterId:\n          type: string\n        namespace:\n          type: string\n    v1DeleteProcessBaselinesResponse:\n      type: object\n      properties:\n        numDeleted:\n          type: integer\n          format: int32\n        dryRun:\n          type: boolean\n    v1LockProcessBaselinesRequest:\n      type: object\n      properties:\n        keys:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageProcessBaselineKey'\n        locked:\n          type: boolean\n    v1ProcessBaselineUpdateError:\n      type: object\n      properties:\n        error:\n          type: string\n        key:\n          $ref: '#/components/schemas/storageProcessBaselineKey'\n    v1UpdateProcessBaselinesRequest:\n      type: object\n      properties:\n        keys:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageProcessBaselineKey'\n        addElements:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageBaselineItem'\n        removeElements:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageBaselineItem'\n    v1UpdateProcessBaselinesResponse:\n      type: object\n      properties:\n        baselines:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageProcessBaseline'\n        errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1ProcessBaselineUpdateError'\n    v1GetGroupedProcessesResponse:\n      type: object\n      properties:\n        groups:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1ProcessNameGroup'\n    v1GetGroupedProcessesWithContainerResponse:\n      type: object\n      properties:\n        groups:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1ProcessNameAndContainerNameGroup'\n    v1GetProcessesResponse:\n      type: object\n      properties:\n        processes:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageProcessIndicator'\n    v1ProcessGroup:\n      type: object\n      properties:\n        args:\n          type: string\n        signals:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageProcessIndicator'\n    v1ProcessNameAndContainerNameGroup:\n      type: object\n      properties:\n        name:\n          type: string\n        containerName:\n          type: string\n        timesExecuted:\n          type: integer\n          format: int64\n        groups:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1ProcessGroup'\n        suspicious:\n          type: boolean\n    v1ProcessNameGroup:\n      type: object\n      properties:\n        name:\n          type: string\n        timesExecuted:\n          type: integer\n          format: int64\n        groups:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1ProcessGroup'\n    v1DeleteProcessWhitelistsResponse:\n      type: object\n      properties:\n        numDeleted:\n          type: integer\n          format: int32\n        dryRun:\n          type: boolean\n    v1LockProcessWhitelistsRequest:\n      type: object\n      properties:\n        keys:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageProcessBaselineKey'\n        locked:\n          type: boolean\n    v1ProcessWhitelistUpdateError:\n      type: object\n      properties:\n        error:\n          type: string\n        key:\n          $ref: '#/components/schemas/storageProcessBaselineKey'\n    v1UpdateProcessWhitelistsRequest:\n      type: object\n      properties:\n        keys:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageProcessBaselineKey'\n        addElements:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageBaselineItem'\n        removeElements:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageBaselineItem'\n    v1UpdateProcessWhitelistsResponse:\n      type: object\n      properties:\n        whitelists:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageProcessBaseline'\n        errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1ProcessWhitelistUpdateError'\n    storageK8sRole:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        namespace:\n          type: string\n        clusterId:\n          type: string\n        clusterName:\n          type: string\n        clusterRole:\n          type: boolean\n        labels:\n          type: object\n          additionalProperties:\n            type: string\n          description: 'TODO(ROX-6895): \"Label\" search term is ambiguous.'\n        annotations:\n          type: object\n          additionalProperties:\n            type: string\n        createdAt:\n          type: string\n          format: date-time\n        rules:\n          type: array\n          items:\n            $ref: '#/components/schemas/storagePolicyRule'\n      title: |-\n        Properties of an individual k8s Role or ClusterRole.\n        ////////////////////////////////////////\n    storageK8sRoleBinding:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        namespace:\n          type: string\n        clusterId:\n          type: string\n        clusterName:\n          type: string\n        clusterRole:\n          type: boolean\n        labels:\n          type: object\n          additionalProperties:\n            type: string\n          description: 'TODO(ROX-6895): \"Label\" search term is ambiguous.'\n        annotations:\n          type: object\n          additionalProperties:\n            type: string\n        createdAt:\n          type: string\n          format: date-time\n        subjects:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageSubject'\n        roleId:\n          type: string\n      title: |-\n        Properties of an individual k8s RoleBinding or ClusterRoleBinding.\n        ////////////////////////////////////////\n    storagePolicyRule:\n      type: object\n      properties:\n        verbs:\n          type: array\n          items:\n            type: string\n        apiGroups:\n          type: array\n          items:\n            type: string\n        resources:\n          type: array\n          items:\n            type: string\n        nonResourceUrls:\n          type: array\n          items:\n            type: string\n        resourceNames:\n          type: array\n          items:\n            type: string\n      title: |-\n        Properties of an individual rules that grant permissions to resources.\n        ////////////////////////////////////////\n    storageSubject:\n      type: object\n      properties:\n        id:\n          type: string\n        kind:\n          $ref: '#/components/schemas/storageSubjectKind'\n        name:\n          type: string\n        namespace:\n          type: string\n        clusterId:\n          type: string\n        clusterName:\n          type: string\n      title: |-\n        Properties of an individual subjects who are granted roles via role bindings.\n        ////////////////////////////////////////\n    storageSubjectKind:\n      type: string\n      enum:\n        - UNSET_KIND\n        - SERVICE_ACCOUNT\n        - USER\n        - GROUP\n      default: UNSET_KIND\n    v1GetRoleBindingResponse:\n      type: object\n      properties:\n        binding:\n          $ref: '#/components/schemas/storageK8sRoleBinding'\n    v1GetRoleResponse:\n      type: object\n      properties:\n        role:\n          $ref: '#/components/schemas/storageK8sRole'\n    v1GetSubjectResponse:\n      type: object\n      properties:\n        subject:\n          $ref: '#/components/schemas/storageSubject'\n        clusterRoles:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageK8sRole'\n        scopedRoles:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1ScopedRoles'\n    v1ListRoleBindingsResponse:\n      type: object\n      properties:\n        bindings:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageK8sRoleBinding'\n      title: |-\n        A list of k8s role bindings (free of scoped information)\n        Next Tag: 2\n    v1ListRolesResponse:\n      type: object\n      properties:\n        roles:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageK8sRole'\n      title: |-\n        A list of k8s roles (free of scoped information)\n        Next Tag: 2\n    v1ListSubjectsResponse:\n      type: object\n      properties:\n        subjectAndRoles:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1SubjectAndRoles'\n      title: |-\n        A list of k8s subjects (users and groups only, for service accounts, try the service account service)\n        Next Tag: 2\n    v1ScopedRoles:\n      type: object\n      properties:\n        namespace:\n          type: string\n        roles:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageK8sRole'\n    v1SubjectAndRoles:\n      type: object\n      properties:\n        subject:\n          $ref: '#/components/schemas/storageSubject'\n        roles:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageK8sRole'\n    ReportConfigurationReportType:\n      type: string\n      enum:\n        - VULNERABILITY\n      default: VULNERABILITY\n    ReportLastRunStatusRunStatus:\n      type: string\n      enum:\n        - SUCCESS\n        - FAILURE\n      default: SUCCESS\n    VulnerabilityReportFiltersFixability:\n      type: string\n      enum:\n        - BOTH\n        - FIXABLE\n        - NOT_FIXABLE\n      default: BOTH\n    storageEmailNotifierConfiguration:\n      type: object\n      properties:\n        notifierId:\n          type: string\n        mailingLists:\n          type: array\n          items:\n            type: string\n    storageReportConfiguration:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        type:\n          $ref: '#/components/schemas/ReportConfigurationReportType'\n        vulnReportFilters:\n          $ref: '#/components/schemas/storageVulnerabilityReportFilters'\n        scopeId:\n          type: string\n        emailConfig:\n          $ref: '#/components/schemas/storageEmailNotifierConfiguration'\n        schedule:\n          $ref: '#/components/schemas/storageSchedule'\n        lastRunStatus:\n          $ref: '#/components/schemas/storageReportLastRunStatus'\n        lastSuccessfulRunTime:\n          type: string\n          format: date-time\n    storageReportLastRunStatus:\n      type: object\n      properties:\n        reportStatus:\n          $ref: '#/components/schemas/ReportLastRunStatusRunStatus'\n        lastRunTime:\n          type: string\n          format: date-time\n        errorMsg:\n          type: string\n    storageVulnerabilityReportFilters:\n      type: object\n      properties:\n        fixability:\n          $ref: '#/components/schemas/VulnerabilityReportFiltersFixability'\n        sinceLastReport:\n          type: boolean\n        severities:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageVulnerabilitySeverity'\n    v1CountReportConfigurationsResponse:\n      type: object\n      properties:\n        count:\n          type: integer\n          format: int32\n    v1GetReportConfigurationResponse:\n      type: object\n      properties:\n        reportConfig:\n          $ref: '#/components/schemas/storageReportConfiguration'\n    v1GetReportConfigurationsResponse:\n      type: object\n      properties:\n        reportConfigs:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageReportConfiguration'\n    v1PostReportConfigurationRequest:\n      type: object\n      properties:\n        reportConfig:\n          $ref: '#/components/schemas/storageReportConfiguration'\n    v1PostReportConfigurationResponse:\n      type: object\n      properties:\n        reportConfig:\n          $ref: '#/components/schemas/storageReportConfiguration'\n    v1UpdateReportConfigurationRequest:\n      type: object\n      properties:\n        id:\n          type: string\n        reportConfig:\n          $ref: '#/components/schemas/storageReportConfiguration'\n    ComputeEffectiveAccessScopeRequestDetail:\n      type: string\n      enum:\n        - STANDARD\n        - MINIMAL\n        - HIGH\n      default: STANDARD\n    ComputeEffectiveAccessScopeRequestPayload:\n      type: object\n      properties:\n        simpleRules:\n          $ref: '#/components/schemas/SimpleAccessScopeRules'\n    storageEffectiveAccessScope:\n      type: object\n      properties:\n        clusters:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageEffectiveAccessScopeCluster'\n      description: |-\n        EffectiveAccessScope describes which clusters and namespaces are \"in scope\"\n        given current state. Basically, if AccessScope is applied to the currently\n        known clusters and namespaces, the result is EffectiveAccessScope.\n\n        EffectiveAccessScope represents a tree with nodes marked as included and\n        excluded. If a node is included, all its child nodes are included.\n    storageEffectiveAccessScopeCluster:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        state:\n          $ref: '#/components/schemas/storageEffectiveAccessScopeState'\n        labels:\n          type: object\n          additionalProperties:\n            type: string\n        namespaces:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageEffectiveAccessScopeNamespace'\n    storageEffectiveAccessScopeNamespace:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        state:\n          $ref: '#/components/schemas/storageEffectiveAccessScopeState'\n        labels:\n          type: object\n          additionalProperties:\n            type: string\n    storageEffectiveAccessScopeState:\n      type: string\n      enum:\n        - UNKNOWN\n        - INCLUDED\n        - EXCLUDED\n        - PARTIAL\n      default: UNKNOWN\n    storagePermissionSet:\n      type: object\n      properties:\n        id:\n          type: string\n          description: id is generated and cannot be changed.\n        name:\n          type: string\n          description: '`name` and `description` are provided by the user and can be changed.'\n        description:\n          type: string\n        resourceToAccess:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/storageAccess'\n      description: This encodes a set of permissions for StackRox resources.\n    storageRole:\n      type: object\n      properties:\n        name:\n          type: string\n          description: '`name` and `description` are provided by the user and can be changed.'\n        description:\n          type: string\n        permissionSetId:\n          type: string\n          description: The associated PermissionSet and AccessScope for this Role.\n        accessScopeId:\n          type: string\n        globalAccess:\n          $ref: '#/components/schemas/storageAccess'\n        resourceToAccess:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/storageAccess'\n          description: Deprecated 2021-04-20 in favor of `permission_set_id`.\n      description: |-\n        A role specifies which actions are allowed for which subset of cluster\n        objects. Permissions be can either specified directly via setting\n        resource_to_access together with global_access or by referencing a\n        permission set by its id in permission_set_name.\n    storageSimpleAccessScope:\n      type: object\n      properties:\n        id:\n          type: string\n          description: '`id` is generated and cannot be changed.'\n        name:\n          type: string\n          description: '`name` and `description` are provided by the user and can be changed.'\n        description:\n          type: string\n        rules:\n          $ref: '#/components/schemas/SimpleAccessScopeRules'\n      description: |-\n        Simple access scope is a (simple) selection criteria for scoped resources.\n        It does *not* allow multi-component AND-rules nor set operations on names.\n    v1GetPermissionsResponse:\n      type: object\n      properties:\n        resourceToAccess:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/storageAccess'\n      description: |-\n        GetPermissionsResponse is wire-compatible with the old format of the Role\n        message and represents a collection of aggregated permissions.\n    v1GetResourcesResponse:\n      type: object\n      properties:\n        resources:\n          type: array\n          items:\n            type: string\n    v1GetRolesResponse:\n      type: object\n      properties:\n        roles:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageRole'\n    v1ListPermissionSetsResponse:\n      type: object\n      properties:\n        permissionSets:\n          type: array\n          items:\n            $ref: '#/components/schemas/storagePermissionSet'\n    v1ListSimpleAccessScopesResponse:\n      type: object\n      properties:\n        accessScopes:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageSimpleAccessScope'\n    storageAuthzPluginConfig:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        enabled:\n          type: boolean\n        endpointConfig:\n          $ref: '#/components/schemas/storageHTTPEndpointConfig'\n    storageHTTPEndpointConfig:\n      type: object\n      properties:\n        endpoint:\n          type: string\n        skipTlsVerify:\n          type: boolean\n        caCert:\n          type: string\n        username:\n          type: string\n        password:\n          type: string\n          description: The password for the integration. The server will mask the value of this credential in responses and logs.\n        headers:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageKeyValuePair'\n        clientCertPem:\n          type: string\n          description: The client certificate in PEM format for the integration.\n        clientKeyPem:\n          type: string\n          description: The client key in PEM format for the integration. The server will mask the value of this credential in responses and logs.\n    v1GetAuthzPluginConfigsResponse:\n      type: object\n      properties:\n        configs:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageAuthzPluginConfig'\n    v1UpsertAuthzPluginConfigRequest:\n      type: object\n      properties:\n        config:\n          $ref: '#/components/schemas/storageAuthzPluginConfig'\n        updatePassword:\n          type: boolean\n          description: When false, use the stored credentials of an existing scoped access control configuration given its ID.\n    SearchResponseCount:\n      type: object\n      properties:\n        category:\n          $ref: '#/components/schemas/v1SearchCategory'\n        count:\n          type: string\n          format: int64\n    SearchResultMatches:\n      type: object\n      properties:\n        values:\n          type: array\n          items:\n            type: string\n    v1AutocompleteResponse:\n      type: object\n      properties:\n        values:\n          type: array\n          items:\n            type: string\n    v1SearchCategory:\n      type: string\n      enum:\n        - SEARCH_UNSET\n        - ALERTS\n        - IMAGES\n        - IMAGE_COMPONENTS\n        - IMAGE_VULN_EDGE\n        - IMAGE_COMPONENT_EDGE\n        - POLICIES\n        - DEPLOYMENTS\n        - ACTIVE_COMPONENT\n        - PODS\n        - SECRETS\n        - PROCESS_INDICATORS\n        - COMPLIANCE\n        - CLUSTERS\n        - NAMESPACES\n        - NODES\n        - NODE_VULN_EDGE\n        - NODE_COMPONENT_EDGE\n        - COMPLIANCE_STANDARD\n        - COMPLIANCE_CONTROL_GROUP\n        - COMPLIANCE_CONTROL\n        - SERVICE_ACCOUNTS\n        - ROLES\n        - ROLEBINDINGS\n        - REPORT_CONFIGURATIONS\n        - PROCESS_BASELINES\n        - SUBJECTS\n        - RISKS\n        - VULNERABILITIES\n        - CLUSTER_VULNERABILITIES\n        - IMAGE_VULNERABILITIES\n        - NODE_VULNERABILITIES\n        - COMPONENT_VULN_EDGE\n        - CLUSTER_VULN_EDGE\n        - NETWORK_ENTITY\n        - VULN_REQUEST\n      default: SEARCH_UNSET\n      title: 'Next available tag: 37'\n    v1SearchOptionsResponse:\n      type: object\n      properties:\n        options:\n          type: array\n          items:\n            type: string\n    v1SearchResponse:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1SearchResult'\n        counts:\n          type: array\n          items:\n            $ref: '#/components/schemas/SearchResponseCount'\n    v1SearchResult:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        category:\n          $ref: '#/components/schemas/v1SearchCategory'\n        fieldToMatches:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/SearchResultMatches'\n        score:\n          type: number\n          format: double\n        location:\n          type: string\n          description: |-\n            Location is intended to be a unique, yet human readable,\n            identifier for the result. For example, for a deployment,\n            the location will be \"$cluster_name/$namespace/$deployment_name.\n            It is displayed in the UI in the global search results, underneath\n            the name for each result.\n    ImagePullSecretRegistry:\n      type: object\n      properties:\n        name:\n          type: string\n        username:\n          type: string\n    storageCert:\n      type: object\n      properties:\n        subject:\n          $ref: '#/components/schemas/storageCertName'\n        issuer:\n          $ref: '#/components/schemas/storageCertName'\n        sans:\n          type: array\n          items:\n            type: string\n        startDate:\n          type: string\n          format: date-time\n        endDate:\n          type: string\n          format: date-time\n        algorithm:\n          type: string\n    storageCertName:\n      type: object\n      properties:\n        commonName:\n          type: string\n        country:\n          type: string\n        organization:\n          type: string\n        organizationUnit:\n          type: string\n        locality:\n          type: string\n        province:\n          type: string\n        streetAddress:\n          type: string\n        postalCode:\n          type: string\n        names:\n          type: array\n          items:\n            type: string\n    storageImagePullSecret:\n      type: object\n      properties:\n        registries:\n          type: array\n          items:\n            $ref: '#/components/schemas/ImagePullSecretRegistry'\n    storageListSecret:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        clusterId:\n          type: string\n        clusterName:\n          type: string\n        namespace:\n          type: string\n        types:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageSecretType'\n        createdAt:\n          type: string\n          format: date-time\n    storageSecret:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        clusterId:\n          type: string\n        clusterName:\n          type: string\n        namespace:\n          type: string\n        type:\n          type: string\n        labels:\n          type: object\n          additionalProperties:\n            type: string\n        annotations:\n          type: object\n          additionalProperties:\n            type: string\n        createdAt:\n          type: string\n          format: date-time\n        files:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageSecretDataFile'\n          description: |-\n            Metadata about the secrets.\n            The secret need not be a file, but rather may be an arbitrary value.\n        relationship:\n          $ref: '#/components/schemas/storageSecretRelationship'\n      title: |-\n        Flat secret object.\n        Any properties of an individual secret.\n        (regardless of time, scope, or context)\n        ////////////////////////////////////////\n    storageSecretContainerRelationship:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Id of the container the secret is mounted in.\n        path:\n          type: string\n          description: Path is a container specific mounting directory.\n      title: |-\n        Secrets can be mounted in a path in a container.\n        Next Tag: 3\n    storageSecretDataFile:\n      type: object\n      properties:\n        name:\n          type: string\n        type:\n          $ref: '#/components/schemas/storageSecretType'\n        cert:\n          $ref: '#/components/schemas/storageCert'\n        imagePullSecret:\n          $ref: '#/components/schemas/storageImagePullSecret'\n      description: |-\n        Metadata about secret. Additional information is presented for a certificate file and\n        imagePullSecret, but the \"file\" may also represent some arbitrary value.\n    storageSecretDeploymentRelationship:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Id of the deployment using the secret within a container.\n        name:\n          type: string\n          description: Name of the deployment.\n      title: |-\n        Secrets can be used by a deployment.\n        Next Tag: 3\n    storageSecretRelationship:\n      type: object\n      properties:\n        id:\n          type: string\n          title: Secret id\n        containerRelationships:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageSecretContainerRelationship'\n          title: Container id to relationship.s\n        deploymentRelationships:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageSecretDeploymentRelationship'\n          description: Deployment id to relationship.\n      title: |-\n        The combined relationships that belong to the secret.\n        Next Tag: 6\n    storageSecretType:\n      type: string\n      enum:\n        - UNDETERMINED\n        - PUBLIC_CERTIFICATE\n        - CERTIFICATE_REQUEST\n        - PRIVACY_ENHANCED_MESSAGE\n        - OPENSSH_PRIVATE_KEY\n        - PGP_PRIVATE_KEY\n        - EC_PRIVATE_KEY\n        - RSA_PRIVATE_KEY\n        - DSA_PRIVATE_KEY\n        - CERT_PRIVATE_KEY\n        - ENCRYPTED_PRIVATE_KEY\n        - IMAGE_PULL_SECRET\n      default: UNDETERMINED\n    v1CountSecretsResponse:\n      type: object\n      properties:\n        count:\n          type: integer\n          format: int32\n    v1ListSecretsResponse:\n      type: object\n      properties:\n        secrets:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageListSecret'\n      title: |-\n        A list of secrets with their relationships.\n        Next Tag: 2\n    storageSensorUpgradeConfig:\n      type: object\n      properties:\n        enableAutoUpgrade:\n          type: boolean\n          description: Whether to automatically trigger upgrades for out-of-date sensors.\n      description: SensorUpgradeConfig encapsulates configuration relevant to sensor auto-upgrades.\n    v1GetSensorUpgradeConfigResponse:\n      type: object\n      properties:\n        config:\n          $ref: '#/components/schemas/storageSensorUpgradeConfig'\n    v1UpdateSensorUpgradeConfigRequest:\n      type: object\n      properties:\n        config:\n          $ref: '#/components/schemas/storageSensorUpgradeConfig'\n    storageServiceAccount:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        namespace:\n          type: string\n        clusterName:\n          type: string\n        clusterId:\n          type: string\n        labels:\n          type: object\n          additionalProperties:\n            type: string\n          description: 'TODO(ROX-6895): \"Label\" search term is ambiguous.'\n        annotations:\n          type: object\n          additionalProperties:\n            type: string\n        createdAt:\n          type: string\n          format: date-time\n        automountToken:\n          type: boolean\n        secrets:\n          type: array\n          items:\n            type: string\n        imagePullSecrets:\n          type: array\n          items:\n            type: string\n      title: |-\n        Any properties of an individual service account.\n        (regardless of time, scope, or context)\n        ////////////////////////////////////////\n    v1GetServiceAccountResponse:\n      type: object\n      properties:\n        saAndRole:\n          $ref: '#/components/schemas/v1ServiceAccountAndRoles'\n      title: |-\n        One service account\n        Next Tag: 2\n    v1ListServiceAccountResponse:\n      type: object\n      properties:\n        saAndRoles:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1ServiceAccountAndRoles'\n      title: |-\n        A list of service accounts (free of scoped information)\n        Next Tag: 2\n    v1SADeploymentRelationship:\n      type: object\n      properties:\n        id:\n          type: string\n          title: Id of the deployment using the service account\n        name:\n          type: string\n          description: Name of the deployment.\n      title: |-\n        Service accounts can be used by a deployment.\n        Next Tag: 3\n    v1ServiceAccountAndRoles:\n      type: object\n      properties:\n        serviceAccount:\n          $ref: '#/components/schemas/storageServiceAccount'\n        clusterRoles:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageK8sRole'\n        scopedRoles:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1ScopedRoles'\n        deploymentRelationships:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1SADeploymentRelationship'\n      title: |-\n        A service account and the roles that reference it\n        Next Tag: 5\n    v1Authorities:\n      type: object\n      properties:\n        authorities:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1Authority'\n    v1Authority:\n      type: object\n      properties:\n        certificatePem:\n          type: string\n          format: byte\n    v1CreateServiceIdentityRequest:\n      type: object\n      properties:\n        id:\n          type: string\n        type:\n          $ref: '#/components/schemas/storageServiceType'\n    v1CreateServiceIdentityResponse:\n      type: object\n      properties:\n        identity:\n          $ref: '#/components/schemas/storageServiceIdentity'\n        certificatePem:\n          type: string\n          format: byte\n        privateKeyPem:\n          type: string\n          format: byte\n    v1ServiceIdentityResponse:\n      type: object\n      properties:\n        identities:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageServiceIdentity'\n    CosignPublicKeyVerificationPublicKey:\n      type: object\n      properties:\n        name:\n          type: string\n        publicKeyPemEnc:\n          type: string\n    storageCosignPublicKeyVerification:\n      type: object\n      properties:\n        publicKeys:\n          type: array\n          items:\n            $ref: '#/components/schemas/CosignPublicKeyVerificationPublicKey'\n    storageSignatureIntegration:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        cosign:\n          $ref: '#/components/schemas/storageCosignPublicKeyVerification'\n    v1ListSignatureIntegrationsResponse:\n      type: object\n      properties:\n        integrations:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageSignatureIntegration'\n    v1SummaryCountsResponse:\n      type: object\n      properties:\n        numAlerts:\n          type: string\n          format: int64\n        numClusters:\n          type: string\n          format: int64\n        numDeployments:\n          type: string\n          format: int64\n        numImages:\n          type: string\n          format: int64\n        numSecrets:\n          type: string\n          format: int64\n        numNodes:\n          type: string\n          format: int64\n    storageTelemetryConfiguration:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n        lastSetTime:\n          type: string\n          format: date-time\n    v1ConfigureTelemetryRequest:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n    v1GetUsersAttributesResponse:\n      type: object\n      properties:\n        usersAttributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1UserAttributeTuple'\n      title: 'Next Tag: 2'\n    v1GetUsersResponse:\n      type: object\n      properties:\n        users:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageUser'\n      title: 'Next Tag: 2'\n    v1UserAttributeTuple:\n      type: object\n      properties:\n        authProviderId:\n          type: string\n        key:\n          type: string\n        value:\n          type: string\n      title: |-\n        UserAttributeTuple descript the auth:key:value tuple that decides group membership.\n        Next Tag: 4\n    ScopeGlobal:\n      type: object\n    VulnerabilityRequestCVEs:\n      type: object\n      properties:\n        ids:\n          type: array\n          items:\n            type: string\n    VulnerabilityRequestScopeImage:\n      type: object\n      properties:\n        registry:\n          type: string\n        remote:\n          type: string\n        tag:\n          type: string\n    storageDeferralRequest:\n      type: object\n      properties:\n        expiry:\n          $ref: '#/components/schemas/storageRequestExpiry'\n    storageFalsePositiveRequest:\n      type: object\n    storageRequestComment:\n      type: object\n      properties:\n        id:\n          type: string\n        message:\n          type: string\n        user:\n          $ref: '#/components/schemas/storageSlimUser'\n        createdAt:\n          type: string\n          format: date-time\n    storageRequestExpiry:\n      type: object\n      properties:\n        expiresWhenFixed:\n          type: boolean\n          description: Indicates that this request expires when the associated vulnerability is fixed.\n        expiresOn:\n          type: string\n          format: date-time\n          description: Indicates the timestamp when this request expires.\n    storageRequestStatus:\n      type: string\n      enum:\n        - PENDING\n        - APPROVED\n        - DENIED\n        - APPROVED_PENDING_UPDATE\n      default: PENDING\n      description: |-\n        Indicates the status of a request. Requests canceled by the user before they are acted upon by the approver\n        are not tracked/persisted (with the exception of audit logs if it is turned on).\n\n         - PENDING: Default request state. It indicates that the request has not been fulfilled and that an action (approve/deny) is required.\n         - APPROVED: Indicates that the request has been approved by the approver.\n         - DENIED: Indicates that the request has been denied by the approver.\n         - APPROVED_PENDING_UPDATE: Indicates that the original request was approved, but an update is still pending an approval or denial.\n    storageSlimUser:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n    storageVulnerabilityRequest:\n      type: object\n      properties:\n        id:\n          type: string\n        targetState:\n          $ref: '#/components/schemas/storageVulnerabilityState'\n        status:\n          $ref: '#/components/schemas/storageRequestStatus'\n        expired:\n          type: boolean\n          description: |-\n            Indicates if this request is a historical request that is no longer in effect\n            due to deferral expiry, cancellation, or restarting cve observation.\n        requestor:\n          $ref: '#/components/schemas/storageSlimUser'\n        approvers:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageSlimUser'\n        createdAt:\n          type: string\n          format: date-time\n        lastUpdated:\n          type: string\n          format: date-time\n        comments:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageRequestComment'\n        scope:\n          $ref: '#/components/schemas/storageVulnerabilityRequestScope'\n        deferralReq:\n          $ref: '#/components/schemas/storageDeferralRequest'\n        fpRequest:\n          $ref: '#/components/schemas/storageFalsePositiveRequest'\n        cves:\n          $ref: '#/components/schemas/VulnerabilityRequestCVEs'\n        updatedDeferralReq:\n          $ref: '#/components/schemas/storageDeferralRequest'\n      description: |-\n        Next available tag: 21\n        VulnerabilityRequest encapsulates a request such as deferral request and false-positive request.\n    storageVulnerabilityRequestScope:\n      type: object\n      properties:\n        imageScope:\n          $ref: '#/components/schemas/VulnerabilityRequestScopeImage'\n        globalScope:\n          $ref: '#/components/schemas/ScopeGlobal'\n    v1ApproveVulnRequest:\n      type: object\n      properties:\n        id:\n          type: string\n        comment:\n          type: string\n    v1ApproveVulnRequestResponse:\n      type: object\n      properties:\n        requestInfo:\n          $ref: '#/components/schemas/storageVulnerabilityRequest'\n    v1DeferVulnRequest:\n      type: object\n      properties:\n        cve:\n          type: string\n        comment:\n          type: string\n        scope:\n          $ref: '#/components/schemas/storageVulnerabilityRequestScope'\n        expiresWhenFixed:\n          type: boolean\n        expiresOn:\n          type: string\n          format: date-time\n    v1DeferVulnResponse:\n      type: object\n      properties:\n        requestInfo:\n          $ref: '#/components/schemas/storageVulnerabilityRequest'\n    v1DenyVulnRequest:\n      type: object\n      properties:\n        id:\n          type: string\n        comment:\n          type: string\n    v1DenyVulnRequestResponse:\n      type: object\n      properties:\n        requestInfo:\n          $ref: '#/components/schemas/storageVulnerabilityRequest'\n    v1FalsePositiveVulnRequest:\n      type: object\n      properties:\n        cve:\n          type: string\n        scope:\n          $ref: '#/components/schemas/storageVulnerabilityRequestScope'\n        comment:\n          type: string\n    v1FalsePositiveVulnResponse:\n      type: object\n      properties:\n        requestInfo:\n          $ref: '#/components/schemas/storageVulnerabilityRequest'\n    v1GetVulnerabilityRequestResponse:\n      type: object\n      properties:\n        requestInfo:\n          $ref: '#/components/schemas/storageVulnerabilityRequest'\n    v1ListVulnerabilityRequestsResponse:\n      type: object\n      properties:\n        requestInfos:\n          type: array\n          items:\n            $ref: '#/components/schemas/storageVulnerabilityRequest'\n    v1UndoVulnRequestResponse:\n      type: object\n      properties:\n        requestInfo:\n          $ref: '#/components/schemas/storageVulnerabilityRequest'\n    v1UpdateVulnRequest:\n      type: object\n      properties:\n        id:\n          type: string\n        comment:\n          type: string\n        expiry:\n          $ref: '#/components/schemas/storageRequestExpiry'\n    v1UpdateVulnRequestResponse:\n      type: object\n      properties:\n        requestInfo:\n          $ref: '#/components/schemas/storageVulnerabilityRequest'\n  ##########################\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n    bearerAuth:\n      type: http\n      scheme: bearer\nsecurity:\n  - basicAuth: [ ]\n  - bearerAuth: [ ]\n",
			"canonicalURL": "/github.com/stackrox/jenkins-plugin@c05f4722eda458418221fd5a7c4f13e2118f65ea/-/blob/stackrox-container-image-scanner/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackrox/jenkins-plugin/blob/c05f4722eda458418221fd5a7c4f13e2118f65ea/stackrox-container-image-scanner/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: at 1:229820: duplicate path: \"/v1/externalbackups/{id}\""
}