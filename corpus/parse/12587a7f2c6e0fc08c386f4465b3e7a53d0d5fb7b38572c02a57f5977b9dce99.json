{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/godaddy.subscriptions/openapi.yml",
			"byteSize": 37024,
			"content": "openapi: 3.0.1\ninfo:\n  x-ballerina-display:\n    label: GoDaddy Subscriptions\n    iconPath: \"icon.png\"\n  title: GoDaddy  API\n  description: \u003e-\n    This is a generated connector for [GoDaddy Subscriptions API\n    v1](https://developer.godaddy.com/doc/endpoint/subscriptions) OpenAPI\n    specification.\n\n    The GoDaddy Subscriptions API provides capability to access GoDaddy operations\n    related to subscriptions.\n  version: '1.0'\n  x-ballerina-init-description: \u003e-\n    The connector initialization requires setting the API credentials. \n\n    Create a [GoDaddy](https://sg.godaddy.com/) and obtain tokens by following\n    [this guide](https://developer.godaddy.com/getstarted).\nservers:\n  - url: https://api.ote-godaddy.com/\ntags:\n  - name: v1\n    description: ''\npaths:\n  /v1/subscriptions:\n    get:\n      tags:\n        - v1\n      summary: Retrieve a list of Subscriptions for the specified Shopper\n      operationId: listSubscriptions\n      parameters:\n        - name: X-Shopper-Id\n          in: header\n          description: Shopper ID to return subscriptions for when not using JWT\n          schema:\n            type: string\n        - name: X-Market-Id\n          in: header\n          description: The market that the response should be formatted for\n          schema:\n            type: string\n            default: en-US\n        - name: productGroupKeys\n          in: query\n          description: Only return Subscriptions with the specified product groups\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n        - name: includes\n          in: query\n          description: Optional details to be included in the response\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n            enum:\n              - addons\n              - relations\n        - name: offset\n          in: query\n          description: \u003e-\n            Number of Subscriptions to skip before starting to return paged\n            results (must be a multiple of the limit)\n          schema:\n            type: integer\n            default: 0\n        - name: limit\n          in: query\n          description: \u003e-\n            Number of Subscriptions to retrieve in this page, starting after\n            offset\n          schema:\n            maximum: 2000\n            minimum: 1\n            type: integer\n            default: 25\n        - name: sort\n          in: query\n          description: \u003e-\n            Property name that will be used to sort results. \"-\" indicates\n            descending\n          schema:\n            type: string\n            default: '-expiresAt'\n            enum:\n              - expiresAt\n              - '-expiresAt'\n      responses:\n        '200':\n          description: Request was successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionList'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/SubscriptionList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/SubscriptionList'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/SubscriptionList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SubscriptionList'\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: Invalid query parameter (custom message returned for each parameter)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /v1/subscriptions/productGroups:\n    get:\n      tags:\n        - v1\n      summary: Retrieve a list of ProductGroups for the specified Shopper\n      operationId: listProductGroups\n      parameters:\n        - name: X-Shopper-Id\n          in: header\n          description: Shopper ID to return data for when not using JWT\n          schema:\n            type: string\n        - name: X-Market-Id\n          in: header\n          description: The market that the response should be formatted for\n          schema:\n            type: string\n            default: en-US\n      responses:\n        '200':\n          description: Request was successful\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ProductGroup'\n            application/javascript:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ProductGroup'\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ProductGroup'\n            text/javascript:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ProductGroup'\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ProductGroup'\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /v1/subscriptions/{subscriptionId}:\n    get:\n      tags:\n        - v1\n      summary: Retrieve details for the specified Subscription\n      operationId: getSubscription\n      parameters:\n        - name: X-Shopper-Id\n          in: header\n          description: Shopper ID to be operated on, if different from JWT\n          schema:\n            type: string\n        - name: X-Market-Id\n          in: header\n          description: Unique identifier of the Market in which the request is happening\n          schema:\n            type: string\n            default: en-US\n        - name: subscriptionId\n          in: path\n          description: Unique identifier of the Subscription to retrieve\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Request was successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscription'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Subscription'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Subscription'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Subscription'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Subscription'\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: Invalid Subscription Id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '504':\n          description: Gateway timeout\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      tags:\n        - v1\n      summary: Cancel the specified Subscription\n      operationId: cancelSubscription\n      parameters:\n        - name: X-Shopper-Id\n          in: header\n          description: Shopper ID to cancel subscriptions for when not using JWT\n          schema:\n            type: string\n        - name: subscriptionId\n          in: path\n          description: Unique identifier of the Subscription to cancel\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Request was successful\n          content: {}\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Authenticated user is not allowed access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '422':\n          description: \u003e-\n            Failed to determine if the domain is protected (invalid domain\n            ID)\u003cbr\u003eInvalid Subscription Id\u003cbr\u003eThe Office 365 Subscription cannot\n            be cancelled (shopper is migrating)\u003cbr\u003eThe Subscription cannot be\n            cancelled\u003cbr\u003eThe Subscription cannot be cancelled (PFID is disabled\n            for cancellation)\u003cbr\u003eThe Subscription cannot be cancelled (domain is\n            protected)\u003cbr\u003eThe domain alert Subscription cannot be cancelled\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '429':\n          description: Too many requests received within interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorLimit'\n        '500':\n          description: \u003e-\n            Failed to determine if the Office 365 account is migrating\u003cbr\u003eFailed\n            to determine if the domain alert is cancellable\u003cbr\u003eFailed to\n            determine if the domain is protected\u003cbr\u003eInternal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '504':\n          description: Gateway timeout\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/javascript:\n              schema:\n                $ref: '#/components/schemas/Error'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n    patch:\n      tags:\n        - v1\n      summary: Update details for the specified Subscription\n      description: \u003e-\n        Only Subscription properties that can be changed without immediate\n        financial impact can be modified via PATCH, whereas some properties can\n        be changed by purchasing a renewal\u003cbr/\u003e\u003cstrong\u003eThis endpoint only\n        supports JWT authentication\u003c/strong\u003e\n      operationId: updateSubscription\n      parameters:\n        - name: subscriptionId\n          in: path\n          description: Unique identifier of the Subscription to update\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Details of the Subscription to change\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionUpdate'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SubscriptionUpdate'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/SubscriptionUpdate'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/SubscriptionUpdate'\n        required: true\n      responses:\n        '204':\n          description: Request was successful\n          content: {}\n        '400':\n          description: Request was malformed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Authentication info not sent or invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: \u003e-\n            Authenticated user is not allowed access \u003cbr\u003e This method only\n            supports JWT authentication\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Subscription not found \u003cbr\u003e Payment profile not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-codegen-request-body-name: subscription\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: Authorization\n      x-ballerina-apikey-description: \u003e-\n        Provide your API Key as `Authorization`. Eg: {Authorization : sso-key\n        [\u003cAPI_KEY\u003e]:[\u003cAPI_SECRET\u003e]}\n  schemas:\n    Error:\n      required:\n        - code\n      type: object\n      properties:\n        code:\n          type: string\n          description: \u003e-\n            Short identifier for the error, suitable for indicating the specific\n            error within client code\n          format: constant\n        fields:\n          type: array\n          description: \u003e-\n            List of the specific fields, and the errors found with their\n            contents\n          items:\n            $ref: '#/components/schemas/ErrorField'\n        message:\n          type: string\n          description: Human-readable, English description of the error\n    ErrorField:\n      required:\n        - code\n        - path\n      type: object\n      properties:\n        code:\n          type: string\n          description: \u003e-\n            Short identifier for the error, suitable for indicating the specific\n            error within client code\n          format: constant\n        message:\n          type: string\n          description: \u003e-\n            Human-readable, English description of the problem with the contents\n            of the field\n        path:\n          type: string\n          description: \u003e-\n            \u003cul\u003e\n\n            \u003cli style='margin-left: 12px;'\u003eJSONPath referring to a field\n            containing an error\u003c/li\u003e\n\n            \u003cstrong style='margin-left: 12px;'\u003eOR\u003c/strong\u003e\n\n            \u003cli style='margin-left: 12px;'\u003eJSONPath referring to a field that\n            refers to an object containing an error, with more detail in\n            `pathRelated`\u003c/li\u003e\n\n            \u003c/ul\u003e\n          format: json-path\n        pathRelated:\n          type: string\n          description: \u003e-\n            JSONPath referring to a field containing an error, which is\n            referenced by `path`\n          format: json-path\n    ErrorLimit:\n      required:\n        - code\n        - retryAfterSec\n      type: object\n      properties:\n        code:\n          type: string\n          description: \u003e-\n            Short identifier for the error, suitable for indicating the specific\n            error within client code\n          format: constant\n        fields:\n          type: array\n          description: \u003e-\n            List of the specific fields, and the errors found with their\n            contents\n          items:\n            $ref: '#/components/schemas/ErrorField'\n        message:\n          type: string\n          description: Human-readable, English description of the error\n        retryAfterSec:\n          type: integer\n          description: Number of seconds to wait before attempting a similar request\n          format: integer-positive\n    Pagination:\n      type: object\n      properties:\n        first:\n          type: string\n          description: URI to access the first page\n        last:\n          type: string\n          description: URI to access the last page\n        next:\n          type: string\n          description: URI to access the next page\n        previous:\n          type: string\n          description: URI to access the previous page\n        total:\n          type: integer\n          description: Number of records available\n    ProductGroup:\n      required:\n        - productGroupKey\n        - subscriptionCount\n      type: object\n      properties:\n        productGroupKey:\n          type: string\n          description: Primary key of a grouping of related Subscriptions\n        subscriptionCount:\n          type: integer\n          description: The number of Subscriptions that the shopper owns in this group\n    Subscription:\n      required:\n        - billing\n        - createdAt\n        - priceLocked\n        - product\n        - renewAuto\n        - renewable\n        - status\n        - subscriptionId\n        - upgradeable\n      type: object\n      properties:\n        addons:\n          type: array\n          description: \u003e-\n            An array of additional products that have been purchased to augment\n            this Subscription\n          items:\n            $ref: '#/components/schemas/SubscriptionAddon'\n        billing:\n          $ref: '#/components/schemas/SubscriptionBilling'\n        cancelable:\n          type: boolean\n          description: Whether or not the Subscription is allowed to be canceled\n        createdAt:\n          type: string\n          description: When the Subscription was created\n          format: iso-datetime\n        expiresAt:\n          type: string\n          description: When the Subscription will expire\n          format: iso-datetime\n        label:\n          type: string\n          description: A human readable description of this Subscription\n        launchUrl:\n          type: string\n          description: The url to use or manage this Subscription's active product\n          format: url\n        paymentProfileId:\n          type: integer\n          description: \u003e-\n            Unique identifier of the payment profile that will be used to\n            automatically renew this Subscription\n        priceLocked:\n          type: boolean\n          description: \u003e-\n            Whether the renewal price will be based from the list price or a\n            locked-in price for this shopper\n        product:\n          $ref: '#/components/schemas/SubscriptionProduct'\n        relations:\n          $ref: '#/components/schemas/SubscriptionRelations'\n        renewAuto:\n          type: boolean\n          description: \u003e-\n            Whether or not the Subscription is set to be automatically renewed\n            via the billing agent\n        renewable:\n          type: boolean\n          description: Whether or not the Subscription is allowed to be renewed\n        status:\n          type: string\n          description: Whether the Subscription is active or the specific non-active state\n          enum:\n            - ACTIVE\n            - PENDING\n            - CANCELED\n        subscriptionId:\n          type: string\n          description: Unique identifier of the Subscription\n        upgradeable:\n          type: boolean\n          description: Whether or not the Subscription is allowed to be upgraded\n    SubscriptionAddon:\n      required:\n        - commitment\n        - pfid\n        - quantity\n      type: object\n      properties:\n        commitment:\n          type: string\n          description: The financial commitment the customer has in the product\n          enum:\n            - PAID\n            - FREE\n            - TRIAL\n        pfid:\n          type: integer\n          description: Unique identifier of the add-in product\n        quantity:\n          type: integer\n    SubscriptionBilling:\n      required:\n        - commitment\n        - renewAt\n        - status\n      type: object\n      properties:\n        commitment:\n          type: string\n          description: The financial commitment the customer has in the product\n          enum:\n            - PAID\n            - FREE\n            - TRIAL\n        pastDueTypes:\n          type: array\n          description: The types of charges that are past due when `status` is PAST_DUE\n          items:\n            type: string\n            enum:\n              - ADDON\n              - BURST\n              - SUBSCRIPTION\n        renewAt:\n          type: string\n          description: \u003e-\n            The point in time after which the Subscription will bill for\n            automatic renewal\n          format: iso-datetime\n        status:\n          type: string\n          description: Whether payments are past due\n          enum:\n            - CURRENT\n            - PAST_DUE\n    SubscriptionList:\n      required:\n        - pagination\n        - subscriptions\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        subscriptions:\n          type: array\n          description: A collection of subscriptions\n          items:\n            $ref: '#/components/schemas/Subscription'\n    SubscriptionProduct:\n      required:\n        - label\n        - namespace\n        - pfid\n        - productGroupKey\n        - renewalPeriod\n        - renewalPeriodUnit\n        - renewalPfid\n        - supportBillOn\n      type: object\n      properties:\n        label:\n          type: string\n          description: A human readable description of the Product that is subscribed\n        namespace:\n          type: string\n          description: Grouping of related Subscriptions\n        pfid:\n          type: integer\n          description: Unique identifier of the Product that is subscribed\n        productGroupKey:\n          type: string\n          description: Primary key of a grouping of related Subscriptions\n        renewalPeriod:\n          type: integer\n          description: \u003e-\n            The number of `renewalPeriodUnits` that will be added by the\n            `renewalPfid`\n        renewalPeriodUnit:\n          type: string\n          description: The unit of time that `renewalPeriod` is measured in\n          enum:\n            - MONTH\n            - QUARTER\n            - SEMI_ANNUAL\n            - YEAR\n        renewalPfid:\n          type: integer\n          description: Unique identifier of the renewal Product\n        supportBillOn:\n          type: boolean\n          description: \u003e-\n            Whether the product supports the `billOn` option on the renewal\n            endpoint\n    SubscriptionRelations:\n      type: object\n      properties:\n        children:\n          type: array\n          description: \u003e-\n            A set of related Subscriptions that will be canceled automatically\n            if this Subscription is canceled\n          items:\n            type: string\n        parent:\n          type: string\n          description: Unique identifier of this Subscription's parent\n    SubscriptionUpdate:\n      type: object\n      properties:\n        paymentProfileId:\n          type: integer\n          description: \u003e-\n            Unique identifier of the payment profile you want to be used for\n            automatic renewal\n        renewAuto:\n          type: boolean\n          description: Whether or not you want the Subscription renew automatically\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@d8de4a705adce6beeffb8dd580f8d61a7d2662dc/-/blob/openapi/godaddy.subscriptions/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/d8de4a705adce6beeffb8dd580f8d61a7d2662dc/openapi/godaddy.subscriptions/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/v1/subscriptions\": get: operation \"listSubscriptions\": parameters: parse parameter \"includes\": schema: at 1:9313: parse enum values: parse value \"\\\"addons\\\"\": expected type \"array\", got \"string\""
}