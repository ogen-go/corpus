{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Abrasel-Nacional/docs"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 179554,
			"content": "openapi: 3.0.3\ninfo:\n  title: Open Delivery API\n  version: \"1.0.1\"\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0\n  contact:\n    url: https://www.opendelivery.org.br\n    x-author: Guilherme Munhoz Camargo - Programmers\n  x-logo:\n    url: https://gui-camargo.github.io/OD/logo-open-delivery_small.png\n    altText: Open Delivery logo\n\n  description: |-\n    # ► ------- OPEN DELIVERY ------- ◄\n\n    # └► Introduction\n      **Open Delivery** proposes to solve the challenge of organizing the flow of information between merchants and **Ordering Applications**, establishing a single communication standard for all, through a set of REST APIs.\n      Thus, menus and orders are standardized and customer requests are received in a single place, in an organized and efficient way, allowing the merchant to work with more partners in the delivery environment.\n\n    # └► Table Of Contents\n\n    The documentation is separated as follows:\n\n    **[General and Common Information](#section/-GENERAL-INFO-)**    \n    This is information that is valid for all versions that exist so far.\n      - **[How to Start](#section/How-to-Start-(Setup-Guide))**\n      - **[Open Delivery API Evolution](#section/Open-Delivery-API-Evolution)**\n      - **[General Guidelines](#section/General-Guidelines)**\n      - **[Error Handling](#section/Error-Handling)**\n\n\n    **API Reference**   \n      - **[Working Versions](#tag/versionsSection)**\n      - **[Security](#tag/securitySection)**\n      - **[Merchant](#tag/merchantSection)**\n      - **[Order](#tag/orderSection)**\n\n    # └► Changelog\n      \n      Latest Changes:\n      \n      ### Version [1.0.1] - Oct 17, 2022\n\n      - Fixed the `type` field in the [GET /orders/{orderId}](#operation/ordersDetails) where the `INDOOR` option (included in version 1.0.1) was not being displayed.\n\n      ### Version [1.0.1] - Aug 01, 2022\n\n      - Added the possibility to indicate orders with scheduled delivery.  \n      With this the following changes were made:\n\n        - [GET /merchant](#operation/getMerchant)\n          - `service` \u003e Added a new optional field `serviceTiming`, where the merchant can indicate the delivery timing available for that service.\n          \n          ```\n          ...\n          \"serviceTiming\":\n              {\n                  \"timing\": [\"INSTANT\", \"SCHEDULED\"],\n                  \"schedule\":\n                      {\n                          \"scheduleTimeWindow\": \"15_MINUTES\",\n                          \"scheduleStartWindow\": \"15_MINUTES\",\n                          \"scheduleEndWindow\": \"15_MINUTES\",\n                      },\n          ...\n          ```\n        - [GET /orders/{orderId}](#operation/ordersDetails)\n          - Added `SCHEDULED` option to the `orderTiming` field.\n\n          - Added a new property called `schedule` where the delivery window for scheduled orders will be specified with the following structure:\n            ```\n                {\n                  ...\n                  \"schedule\": {\n                    \"scheduledDateTimeStart\": \"2019-08-24T14:15:22Z\",\n                    \"scheduledDateTimeEnd\": \"2019-08-24T14:15:22Z\"\n                    },\n                  ...\n                }\n            ```\n\n      - Added a new service type called **INDOOR**.  \n        The following places are affected:\n\n        - [GET /merchant](#operation/getMerchant)\n          - added option `INDOOR` to `serviceType` field of entity `service`.\n\n        - [GET /orders/{orderId}](#operation/ordersDetails)\n\n          - added option `INDOOR` to `type` field of entity `order`.\n          - added new property: `indoor` with the following structure:     \n\n          ```\n          {\n            ...\n            \"indoor\": {\n              \"mode\": \"PLACE\",\n              \"indoorDateTime\": \"2019-08-24T14:15:22Z\",\n              \"place\": \"string\"\n            },\n            ...\n          }\n          ```\n      - Added a new endpoint so that **Merchant** can send information related to its [GET /merchant](#operation/getMerchant) endpoint to the **Ordering APPLICATION**:\n\n        - [PUT /v1/merchantOnboarding](#operation/putMerchantOnboarding) \n\n      - Added a new [Working Versions](#tag/versionsSection) section with endpoints so that both the Software Service and the Ordering Application can check which version of the Open Delivery API the other end is using. The endpoints created were:\n\n        - [GET /v1/versions/orderingApp](#operation/getOrderingAppVersions)\n        - [GET /v1/versions/merchant](#operation/getMerchantVersions)\n\n      - Added the `status` property to entities `Item`, `ItemOffer` and `Option` on the [GET /merchant](#operation/getMerchant) endpoint.\n      \n      - Added HTTP Status code 422 on the following endpoints:\n        - [POST /v1/orders/{orderId}/confirm](#operation/confirmOrder)\n        - [POST /v1/orders/{orderId}/readyForPickup](#operation/orderReady)\n        - [POST /v1/orders/{orderId}/dispatch](#operation/dispatchOrder)\n        - [POST /v1/orders/{orderId}/requestCancellation](#operation/requestCancellation)\n        - [POST /v1/orders/{orderId}/acceptCancellation](#operation/cancellationAccepted)\n        - [POST /v1/orders/{orderId}/denyCancellation](#operation/cancellationDenied)\n\n      - Added HTTP Status code 204 on the following endpoints:\n        - [POST /v1/merchantUpdated](#operation/menuUpdated)\n        - [POST /v1/orderUpdate](#operation/newEvent)\n        - [POST /v1/orders/{orderId}/acceptCancellation](#operation/cancellationAccepted)\n        - [POST /v1/orders/{orderId}/denyCancellation](#operation/cancellationDenied)\n      \n      - Removed the **requirement** of the fields:\n        - [GET /merchant](#operation/getMerchant)\n          - `menu` \u003e `description`\n          - `menu` \u003e `disclaimer`\n          - `category` \u003e `description`\n          - `optionGroup` \u003e `description`\n\n      #### Other Changes:\n\n      - Added a new [Developer Tools](#section/Developer-Tools) section where links to partner tools to help with API development will be listed.\n\n      - [Order Overview](#tag/ordersOverview)\n\n        - The lifecycle and order flow diagrams have been updated to better reflect the service types.\n\n      - Overall revisions of grammatical errors, syntax, examples and descriptions.\n\n\n    ### Version [v1.0.0] - Apr 18, 2022\n\n    - Initial release.\n\n\n    # └► Issues and Suggestions\n\n    In case of doubts, suggestions, improvements, problems or any information regarding the documentation presented here, access the project's Github repo and open a new issue.\n        \n    \u003e https://github.com/Abrasel-Nacional/docs/issues\n\n    # └► Developer Tools\n\n    This section has some tools to help you implement the Open Delivery API. \n\n    **Disclaimer**: The tools listed below are tools made available by partners of the Open Delivery project and are the sole responsibility of their authors. The Open Delivery does not provide support for these tools.\n\n    **SCHEMA VALIDATORS**\n\n    \u003e [Open Delivery - API Schema Validator (by Programmers IT)](https://programmersit.github.io/opendelivery-api-schema-validator/)     \n    \u003e Tool for comparing a JSON file with Open Delivery schemas.\n\n    **MERCHANT RELATED TOOLS**\n    \u003e [Open Delivery - Menu Generator (by Programmers IT)](https://programmersit.github.io/opendelivery-menu-generator/)  \n    \u003e Tool for graphical visualization of the different fields and entities that compose the Merchant object.\n    \n\n    # └► Versions\n\n    This section has links to all versions of Open Delivery:\n\n    - **RELEASE**   \n    \n      Contains the standards already published:  \n      **MERCHANT** | **ORDERS**\n\n      - **v1.0.1** - (Latest release)\n      - [v1.0.0](https://abrasel-nacional.github.io/docs/versions/1.0.0/)\n\n\n    - **BETA**  \n\n      Contains the standards still in tests:  \n      **LOGISTICS** | **FINANCIAL RECONCILIATION** | **CONTRACTS**\n\n      - [BETA VERSION](https://abrasel-nacional.github.io/docs/versions/beta/)\n\n    - **RELEASE CANDIDATE**\n\n      Contains evolutions and improvements of the standards already published and that will be part of the release version in the future.\n\n      - [RELEASE CANDIDATE VERSION](https://abrasel-nacional.github.io/docs/versions/rc/)\n\n    # \n    # ► ------- GENERAL INFO -------- ◄\n\n    # └► How to Start (Setup Guide)\n\n    The Open Delivery API proposes the implementation of a single communication standard between the various parts that make up the delivery environment. This documentation contains all the definitions needed for interested systems and platforms to implement it.\n\n    Open Delivery does not have a server or baseURL. It is up to each company that implements the standard to use its infrastructure to host the endpoints.\n\n    This section seeks to summarize the Open Delivery documentation as a whole, helping the different parts of the integrations to understand what needs to be developed and parameterized. \n\n    First, it is recommended to read all the documentation to understand the different processes and flows of the integrations. \n\n    After reading and understanding the documentation as a whole, companies interested in implementing the standard in their platforms and systems can use this guide to assist in the implementation.\n\n    ## Parties Involved\n\n    - **ORDERING APPLICATION**: It is the platform where the final consumer will choose his items and place the order. It is responsible for reading the merchant data exposed by the SOFTWARE SERVICE and sending the orders to the SOFTWARE SERVICE as well.\n              \n    - **SOFTWARE SERVICE**: It is the merchant management platform. It is responsible for exposing the merchant data (registration data, service data, and menus) and receiving the orders from the ORDERING APPLICATION.\n\n      \u003e There may also be applications that will perform a hub function, connecting the ORDERING APPLICATION to the SOFTWARE SERVICE. In this context, these intermediate applications, can play the role of both the ORDERING APPLICATION (when communicating with a SOFTWARE SERVICE) as well as the SOFTWARE SERVICE (when communicating with the ORDERING APPLICATION).\n\n    ## Development\n\n    Since Open Delivery is not the host of the APIs, it is up to the companies interested in using the standard to develop the Open Delivery standard APIs in their systems and platforms using this documentation as a guideline. \n\n    Listed below are the different Routes that each party needs to implement and make available in their systems:\n\n    | |ORDERING APPLICATION|SOFTWARE SERVICE|\n    |-|:------------------:|:--------------:|\n    |**[AUTHENTICATION](#tag/authentication)**||||\n    |[POST /oauth/token](#operation/getToken)|X||\n    |--------------------------------|||\n    |**[MERCHANT](#tag/merchantSection)**||||\n    |[GET /v1/merchant](#operation/getMerchant)||X|\n    |[POST /v1/merchantUpdated](#operation/menuUpdated)|X|\n    |[GET /v1/merchantStatus](#tag/merchantStatus)|X||\n    |--------------------------------|||\n    |**[ORDER](#tag/ordersSection)**||||\n    |[GET /v1/events:polling ](#operation/pollingEvents)|X||\n    |[POST /v1/events/acknowledgment](#operation/pollingAcknowledgment)|X||\n    |[POST /v1/orderUpdate](#operation/newEvent)||X|\n    ||||\n    |[GET /v1/orders/{orderId}](#operation/ordersDetails)|X||\n    |[POST /v1/orders/{orderId}/confirm](#operation/confirmOrder)|X||\n    |[POST /v1/orders/{orderId}/readyForPickup](#operation/orderReady)|X||\n    |[POST /v1/orders/{orderId}/dispatch](#operation/dispatchOrder)|X|\n    ||||\n    |[POST /v1/orders/{orderId}/requestCancellation](#operation/requestCancellation)|X||\n    |[POST /v1/orders/{orderId}/acceptCancellation](#operation/cancellationAccepted) |X||\n    |[POST /v1/orders/{orderId}/denyCancellation](#operation/cancellationDenied)|X||\n    \n\n      ## Parametrizations\n\n      \u003e **IMPORTANT: Before reading this section, it is recommended the reading of the complete documentation, for a better understanding of the different required parameterizations.**\n\n      Once the endpoints are implemented, the parties interested in integrating via the Open Delivery stantard should provide some parameters for the other party to correctly connect to its routes. \n\n      Below is a list of information that each party must provide to the other party for the integrations to occur, i.e., you should consider that the information below will be created as parameters on the endpoint that will call the endpoints.\n\n      - **PARAMETERS IN THE SOFTWARE SERVICE   \n      (ORDERING APPLICATION --\u003e SOFTWARE SERVICE)**\n\n        - **{baseURL}** : The {baseURL} is the parameter that indicates the base address, i.e. the constant part of the address, where the routes will be called. The **Ordering Application** can provide up to 2 different base URLs:\n          - {baseURL} for authentication: where the token route will be hosted.\n          - {baseURL} for the other routes.\n\n          The **Ordering Application** can use only one {baseURL} if it wishes.\n        \n        - **clientId** and **clientSecret**: The **Ordering Application** is responsible for providing the credentials for authentication to be performed through the authentication endpoint. \n        \n            \u003e IMPORTANT: As described in the authentication section of the documentation, credentials must be generated BY MERCHANT and not by **Software Service**, that is, even if several MERCHANTS use the same **Software Service**, each of the MERCHANT will have a unique clientId and clientSecret.\n\n        - **AppId**: It is the unique ID of the **Ordering Application**. It must be generated by the **Ordering Application** itself, and once generated, it must be informed to all the **Software Service**S that it will integrate. Since the **AppId** is a unique key of the **Ordering Application**, you must not create oneAppId** per **Software Service**S, but the same key for all of them.\n      \u003e The companies that play the role of hub, intermediating the integrations between the **Ordering Application** and the **Software Service**, must also generate their own **AppId**, different from the **Ordering Application**'s AppId.\n\n      - **PARAMETERS IN ORDERING APPLICATION  \n      (SOFTWARE SERVICE --\u003e ORDERING APPLICATION)**\n\n        - **{baseURL} from the `GET /merchant` endpoint:** The **Ordering Application** must be provided with the {baseURL} to access the GET /merchant route to obtain the merchant's information. \n\n          \u003e IMPORTANT: Each merchant that the **Software Service** works with must have a unique {baseURL}.\n        - **apiKey**: If the GET /merchant endpoint is implemented using authentication, it is necessary that the **Software Service** provides the apiKey referring to the entered merchant.\n        \n        - **Order Event Webhook**: If both parties are going to work with sending order events via webhook, it is necessary to provide the URL of the webhook.   \n          Default webhook route: \n\n          `POST {baseURL}/newEvent`\n\n    # └► Open Delivery API Evolution\n\n      The **Open Delivery** API seeks to respect [SemVer](https://semver.org/). In this sense, compatible changes should not generate a new major version.\n\n      The API version is composed of 4 elements: major, minor, patch and release candidate. The version v[x] in the URL path is the major element of the API version. The evolution of the version is as follows:\n\n      - **Major**: incompatible, contract-breaking changes (v1.0.0 → v2.0.0)\n      - **Minor**: compatible, non-breaking changes (v1.1.0 → v1.2.0)\n      - **Patch**: bugfixes, clarifications to specifications, no functional changes (v1.1.1 → v1.1.2)\n      - **Release candidate**: pre-release versions of any future patch, minor or major (v1.0.0-rc.1 → v1.0.0-rc.22)\n      Non-breaking changes and clarifications to specifications may occur at any time. Customers should be prepared to handle these changes without breaking.\n\n      The following changes are expected and considered backward compatible:\n\n      - Addition of new features to the **Open Delivery** API;\n      - Addition of new optional parameters;\n      - Addition of new fields in **Open Delivery** API responses;\n      - Change of fields sorting;\n      - Addition of new elements in enumerations.\n\n    # └► General Guidelines\n\n      - **Date-Time, Date and Time values**: For properties that require a Date-Time, Date or Time value, use the formats specified in date-time, date and time formats (following the [RFC3339](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14) specifications)\n      \n      \u003e **ALL DATES MUST BE SENT USING UTC AS DEFAULT.**   \n      \u003e (This way it is simpler for the receiving agent to convert to local time.)\n\n      For example:\n      \n      **2017-05-01T06:30:00Z** for date-time (As defined by date-time - [RFC3339](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14))\\\n      **2017-05-01** for date (As defined by full-date - [RFC3339](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14))\\\n      **08:08:00Z** for time (As defined by full-time - [RFC3339](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14))\n\n    - **IDs**: Use an id property to identify all unique entities within an entity type. An id is a unique identifier of the entity of that type, but across entities, IDs can overlap.\n\n    - **Null** values: Do not use the value null in place of objects. If an object is optional, you must omit it from your feed.\n\n    - **{baseURL}** : Since Open Delivery is not the host of the APIs, it is up to the companies interested in using the standard to provide the {baseURL}. Companies can provide up to two {baseURL}:\n        - {baseURL} for authentication: where the **[Get Access Token](#operation/getToken)** route will be hosted.\n        - {baseURL} for all other routes.\n\n        \u003e It is also possible to use the same {baseURL} for all routes.\n\n    - **Sending arrays as request parameters:**\n\n      To send an array parameter on a request for any endpoint, use the following format:   \n      \n      - For `QUERY` parameters:\n      ```\n      ?param=X\u0026param=Y\u0026param=Z\n      ```\n\n      - For `HEADER` parameters:\n      ```\n          param: X\n          param: Y\n          param: Z\n      ```\n\n\n\n    # └► Error Handling\n\n      The API returns HTTP status codes to indicate success or failure of requests.\n\n      `2xx` codes indicate success.  \n      `4xx` codes indicate failure caused by the information sent by the client or the current state of the entities.  \n      `5xx` codes codes indicate service problems on the API side.\n\n    **General**\n\n    This section gathers errors that could be returned by any endpoints listed in the API.\n\n    `BadRequest`\n\n      * __Meaning__: Invalid request.\n      * __HTTP Status Code__: [400 Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1).\n\n    `Forbidden`\n\n      * __Meaning__: Authenticated client request that violates some authorization rule.\n      * __HTTP Status Code__: [403 Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3).\n\n    `NotFound`\n\n      * __Meaning__: Entity not found.\n      * __HTTP Status Code__: [404 Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4).\n\n\n    `InternalServerError`\n\n      * __Meaning__: Unexpected condition when processing requisition.\n      * __HTTP Status Code__: [500 Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1).\n\n    `ServiceUnavailable`\n\n      * __Meaning__: Service is not currently available. Requested service may be under maintenance or outside the operating window.\n      * __HTTP Status Code__: [503 Service Unavailable](https://tools.ietf.org/html/rfc7231#section-6.6.4).\n\n    `GatewayTimeout`\n\n      * __Meaning__: Indicates that the service took longer than expected to return.\n      * __HTTP Status Code__: [504 Gateway Timeout](https://tools.ietf.org/html/rfc7231#section-6.6.5).\n\n\n    #   \n    # ► ------- API REFERENCE ------- ◄\n\n#############################################################\n\ntags:\n  # Versions\n\n  - name: versionsSection\n    x-displayName: \"└─■ WORKING VERSIONS\"\n    x-traitTag: true\n\n  - name: versionsEndpoint\n    x-displayName: \"└───● Versions Listing\"\n    description: |-\n\n      Because Open Delivery does not have its own servers and relies on the implementation of the endpoints by the platforms of the companies using the standard, it can happen that two platforms are using different versions of the Open Delivery API.\n\n      This section includes endpoints to get the current version that each platform is using.\n\n  # Authentication\n\n  - name: securitySection\n    x-displayName: \"└─■ SECURITY\"\n    x-traitTag: true\n\n  - name: authentication\n    x-displayName: \"└───● Authentication\"\n    description: |-\n\n      **Open Delivery** suports two types of authentication methods: **OAuth 2** and **apiKey**.\n\n      \u003cSecurityDefinitions /\u003e\n\n  # Merchant Tags\n\n  - name: merchantSection\n    x-displayName: \"└─■ MERCHANT\"\n    x-traitTag: true\n\n  - name: merchantOverview\n    x-displayName: \"└───● Merchant Overview\"\n    description: |-\n\n      The Merchant entity will be the entity used by the **Ordering Application** to fetch all the data from a merchant and display it to the user.\n      It is the responsibility of the merchant **Software Service** to provide the endpoint and the responsibility of the **Ordering Application** to fetch the information.\n\n      ## Merchant API Usage\n\n      The merchant must 'choose' a **Software Service**, which will be responsible for exposing its data on the **[GET /v1/merchant](#operation/getMerchant)** endpoint. This endpoint will be used by the ordering system to get the updated merchant infos (BasicInfos, Services and Menus).\n\n      \u003cdiv align=\"center\"\u003e\n        \u003cimg src=\"https://abrasel-nacional.github.io/docs/images/menu_flow.png\" /\u003e\n      \u003c/div\u003e\n\n      The **Ordering Application** can check for merchant updates in the following ways:    \n      1.\tMake a new request on the **[GET /v1/merchant](#operation/getMerchant)** endpoint whenever the TTL expires;  \n      2.\tThe **Ordering Application** can optionally provide a **[webhook](#operation/menuUpdated)** , where the merchant **Software Service** can send a merchant update notification;  \n      3.\tIf the **Software Service** **[refuses](#operation/cancelDenied)** an order for any reason, upon receiving the refusal, it is recommended that the **Ordering Application** make a new request on the **[GET /v1/merchant](#operation/getMerchant)** endpoint.\n\n  - name: merchantStructure\n    x-displayName: └───● Merchant Structure\n    description: |-\n\n      The structure of the Merchant model consists of the following top-level properties:\n\n      - **BasicInfo**: Information about the merchant.\n      - **Services entities**: Timing, location, and conditions of the merchant service.\n      - **Menu entities**: Details of the merchnat menus.\n\n      The following diagram shows how Basic Info, Service, and Menu properties represent a single merchant:\n\n      \u003cdiv align=\"center\"\u003e\n        \u003cimg src=\"https://abrasel-nacional.github.io/docs/images/merchant_structure.png\" /\u003e\n      \u003c/div\u003e\n\n      The following schema lists the properties for the `Merchant` model:\n\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/MerchantDescription\" /\u003e     \n\n      # BasicInfo\n\n      A merchant `BasicInfo` defines properties such as the merchant name, location address, website, description, telephone number, for a merchant that the merchant **Software Service** serves. \n      Typically, this data is static.\n\n      The following schema lists the properties for the `BasicInfo` type: \n\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/BasicInfo\" /\u003e\n\n      # Service\n\n      The `Service` defines the capabilities of a delivery organization in a geographic region.\n      A `Service` defines properties such as the service type (`DELIVERY` or `TAKEOUT`), hours available, and area served.  \n      Each Service must be linked to a `Menu`, through the `menuId` property.   \n      `Service` is expected to change.\n\n      \u003cdiv align=\"center\"\u003e\n        \u003cimg src=\"https://abrasel-nacional.github.io/docs/images/merchant_services.png\" /\u003e\n      \u003c/div\u003e\n\n      The following schema lists the properties for the `Service` type: \n\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Service\" /\u003e\n\n      # Menu\n\n      A `Menu` is a set of linked properties such as categories, items, offers and availability.  \n      In order to be displayed by the **Ordering Application**, a `Menu` needs to be linked to a `Service` through the `menuId` property.\n\n      \u003cdiv align=\"center\"\u003e\n        \u003cimg src=\"https://abrasel-nacional.github.io/docs/images/merchant_menus.png\" /\u003e\n      \u003c/div\u003e\n\n      Data in a `Menu` entity is expected to change.\n\n      The following schema lists the properties for the `Menu` type: \n\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Menu\" /\u003e\n\n      ## Category\n\n      A `Category` is the propertie in which the merchant has to organize its `ItemsOffers` in order \n      to make it easier for the user to find what he wants to buy. Categories have statuses and accepts `Availability` entities.\n\n      The following schema lists the properties for the `Category` type: \n\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Category\" /\u003e\n\n      ## Item\n\n      A `Item` propertie is the menu entity that carries all the general item information, like:\n      name, description, external code, image, nutricional information, and EAN (European Article Number).\n      The `Item` can be offered in a `Menu` as a main item or an option. And, for the same store, it can even be reused in different `Menus`.\n\n      The following schema lists the properties for the `Item` type: \n\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Item\" /\u003e\n\n      ## ItemOffer\n\n      The `ItemOffer` can be considered the offering of a item, and it is used to set the item price and `Availability`.\n      The `ItemOffer` is a `Item` related to the `Category`.\n\n      The following schema lists the properties for the `ItemOffer` type: \n\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/ItemOffer\" /\u003e\n\n      ## OptionGroup and Option\n\n      The `OptionGroup` is the entity used to group customizations of a product, for example: \"Choose your beverage:\"\n      An `OptionGroup` can be shared by several items.\n      The `OptionGroup` has its own statuses, and can be activated or desactivated when needed. \n\n      `Options` are the complements of a OptionGroup. It can be defined as: \"A `Item` related to a `OptionGroup`\". \n      It is possible to set the `Option` price to 0.00 regardless of whether it is mandatory or optional.\n\n      The following schema lists the properties for the `OptionGroup` type: \n\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/OptionGroup\" /\u003e\n\n\n      ## Availability\n\n      The `Availability` entity defines specific times and days to control the availability of `Categories` and `Item offerings` within the `Menu`.\n      It is also possible to set special times for holidays.\n\n      The following schema lists the properties for the `Availability` type: \n\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Availability\" /\u003e\n\n  - name: merchantEndpoints\n    x-displayName: \"└───● Merchant Endpoint\"\n    description: |-\n\n  - name: merchantStatus\n    x-displayName: \"└───● Onboarding and Status\"\n    description: |-\n\n      This section contains routes for registering and updating the Merchant endpoint information, as well as the read status of this endpoint.\n\n  - name: merchantUpdate\n    x-displayName: \"└───● Merchant Update\"\n    description: |-\n      ### Merchant Update Notification\n\n      **[Webhook](#operation/menuUpdated)** is sent to notify the **Ordering Application** that an new update has happened on the merchant information.\n\n      The **Ordering Application** that implements this webhook, should return an HTTP 200 response code with an empty response body to acknowledge receipt of the webhook event. \n      If the merchant **Software Service** does not receive a 200 acknowledgement response, than the webhook event will be resent based on the **Software Service** policies.\n\n  # Orders Tags\n\n  - name: ordersSection\n    x-displayName: \"└─■ ORDERS\"\n    x-traitTag: true\n\n  - name: ordersOverview\n    x-displayName: └───● Order Overview\n    description: |-\n\n      This overview summarizes the **Open Delivery** Ordering flow and how it interacts with merchant **Software Service** and **Ordering Application**.\n\n\n      ### Order Events\n\n      \u003cdiv align=\"center\"\u003e\n        \u003cimg src=\"https://abrasel-nacional.github.io/docs/images/order_life_cicle.png\" /\u003e\n        \u003cbr /\u003e\n        \u003cbr /\u003e\n        \u003cbr /\u003e\n        \u003cbr /\u003e\n        \u003cbr /\u003e\n      \u003c/div\u003e\n\n      ### Understanding the Order Flow\n\n      \u003cdiv align=\"center\"\u003e\n        \u003cimg src=\"https://abrasel-nacional.github.io/docs/images/order_integrations2.png\" /\u003e\n      \u003c/div\u003e\n\n      The order flow has the following Macro steps:\n\n      ### Order Event Reception\n\n      Through Order Events, the '**Ordering Application**' communicates to the '**Software Service**' the existence of a new order, as well as the other events of the order lifecycle.\n\n      **Open Delivery** provides two ways for merchant **Software Service** to be aware of new events:\n\n      - **[Polling](#tag/ordersPolling)**: \n      Receiving events through polling provided by the '**Ordering Application**' is the standard way **Open Delivery** works, and its implementation is mandatory.\n\n      - **[Webhook](#tag/ordersWebhook)**:\n        Optionally it is recommended the implementation of a **webhook** by the merchant **Software Service** for the **Ordering Applications** to send new events directly, ensuring a much faster communication.\n\n        \u003e As this implementation is not mandatory, it is recommended that the merchant **Software Service** contacts the **Ordering Application** to find out if it is possible to work with this possibility.\n\n      ### Order Details\n\n      Once the new order event is received, it is necessary to get the **[order details](#tag/ordersDetails)**, such as items purchased, delivery addresses, and payment methods.\n\n      ### Events Updates\n\n      After getting the order details, the merchant needs to notify the '**Ordering Application**' of the order progress.\n\n      Through the **Open Delivery** API it is possible to:\n\n      - **[Confirm](#operation/confirmOrder)** receipt of order;\n      - Notify that an order is **[ready for pickup](#operation/orderReady)**;\n      - Notify that an order has been **[dispatched](#operation/dispatchOrder)**.\n\n      Whenever a merchant triggers one of these actions, the '**Ordering Application**' will send a new event to the mechart **Software Service**, acknowledging the new order status within the '**Ordering Application**'.\n\n      \u003e For `TAKEOUT` orders, it is possible to optionally assign a **pickup area** that will be informed through an event to the merchant.\n      \u003e This must be provided by the **Ordering Application** interface.\n\n      ### Order Cancellation\n\n      **Open Delivery** provides API's to send **[cancellation](#tag/ordersCancellation)** requests from either system.\n      These requests can be accepted or denied depending on the rules that the company has.\n    x-traitTag: true\n\n  - name: ordersPolling\n    x-displayName: └───● Polling (Required)\n    description: |-\n\n      Receiving events via Polling works as follows:\n\n      \u003cdiv align=\"center\"\u003e\n        \u003cimg src=\"https://abrasel-nacional.github.io/docs/images/polling.png\" /\u003e\n      \u003c/div\u003e\n\n      ### Query new order events\n\n      In order to receive new order events, the merchant **Software Service** must make requests on the polling endpoint regularly at a certain time interval, determined by the '**Ordering Application**'. \n      Whenever there is a new event the response will send the response code 200 with the list of events. If there are no new events, the response will send the response code 204.\n\n      \u003e It is important that the **Software Service** performs the requests within the timeframe determined by the **Ordering Application**, as blocking and penalties may occur depending on the application's rules.\n\n      **Availability of new events in polling:** \n\n      The **Ordering Application** may have specific rules about the maximum time new events are available in polling before they are removed.\n          \n      \u003e Always check with the **Ordering Application** what the rules are for using the polling service. \n\n      **Duplicate Events**\n\n      Eventually the **Ordering Application** may return the same event more than once, for example the `CREATED` event, including old orders. For this reason it is important that the **Software Application** handles the uniqueness of requests and events through id and the date.\n\n      Therefore, when receiving an event, the **Software Service** must check the event id and validate that this event (id) has not been processed before. If this event has already been received previously, it must be discarded.\n\n      \u003e **Please note**: merchant **Software Services** should only accept a new order or update the status of an order after validating that the event has not been processed before.\n\n      It is also possible for the **Software Service** to make a request for the same event more than once (for example, requesting the `POST /v1/orders/{orderId}/confirm` endpoint repeatedly).\n\n      In these cases the **Ordering Application** can handle this situation in two different ways:\n\n        - If the processing of the requests is done synchronously, then the **Ordering Application** should return **`HTTP 422`**, indicating that that event has been received before.\n\n        - If the processing is done asynchronously, then it is recommended that the **Ordering Application** polls the corresponding event again, because for some reason the **Software Service** could not read that event before.\n            \n      ### Acknowledgment Events\n\n      When receiving new events, the **Software Service** should always send acknowledgement so that the **Ordering Application** does not send that same event again;\n\n      \u003e**Important recommendations**:\n      \u003e\n      \u003e Merchants **Software Service** should make an acknowledgment request for each polling request with results.  \n      \u003e If it receives events that are not used by the itself, it needs to send the acknowledgment of these events anyway so that it is not receiving them every polling again.   \n      \u003e **Open Delivery** recommends that this be the default treatment for all events not yet mapped in the **Software Service** application.  \n      \u003e **Software Services** only needs to send acknowledgment of the event once.\"\n\n  - name: ordersWebhook\n    x-displayName: └───● Webhook (Optional)\n    description: |-\n\n      Receiving events via Webhook works as follows:\n\n      \u003cdiv align=\"center\"\u003e\n        \u003cimg src=\"https://abrasel-nacional.github.io/docs/images/webhook.png\" /\u003e\n      \u003c/div\u003e\n\n      ### Order Event Notification\n      Webhook is sent to notify the merchant **Software Service** that an new order event has happened on the **Ordering Application**.\n\n      The merchant **Software Service** that implements this webhook, should return an HTTP `200` response code with an empty response body to acknowledge receipt of the webhook event. \n      If the **Ordering Application** does not receive a `200` acknowledgement response, than the webhook event will be resent based on the **Ordering Application** policies.\n\n      ### Webhook Headers\n      **Open Delivery** will include security headers for all requests made to the merchant **Software Service** webhook URL.\n\n      **Header Description**\n\n      | Header            | Description |\n      | ----------------- | ----------- |\n      | X-App-Id          | An Unique Identificator of the **Ordering Application** |\n      | X-App-MerchantId   | An Unique Identificator of the **Merchant** receiving the order |      \n      | X-App-Signature   | SHA256 hash of the request body, using the client secret as the key |\n\n        \n      **Webhook Security** \n\n      Webhook messages are signed so that the merchant **Software Service** can verify that the sender is a valid **Ordering Application**. \n      Webhooks requests contain an X-App-Signature header. \n      The value of this field is a lowercased hexadecimal HMAC signature of the webhook HTTP request body, using the client secret as a key and SHA256 as the hash function.\n\n  - name: ordersDetails\n    x-displayName: └───● Order Details\n    description: |-\n\n      Before confirming or canceling an order, it is necessary to get the order details so that the merchant **Software Service** user can check if he will be able to prepare and deliver this order, such as checking if he has all the necessary items and if he is available to make the delivery to the informed address.\n\n      Through the GET /orders/{id} endpoint the merchant **Software Service** can get all the details of an order.\n\n      This endpoint returns the code 200 and the content of the request. If an invalid request id or the id of an expired order is entered (depending on the **Ordering Application** policy) the endpoint returns 404.\n\n      In this section you will find all the details of the payload of an order:\n\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Order\" /\u003e\n\n  - name: ordersStatus\n    x-displayName: └───● Order Event Update\n    description: |-\n\n      Following the order lifecycle, the merchant **Software Service** needs to notify the **Ordering Application** of the upcoming order status.\n\n      After acknowledging receipt of a new order event (either via polling or webhook) is expected that the **Software Service** explicitly \n      **POST [/orders/{orderId}/confirm](#operation/confirmOrder)** or **POST [/orders/{orderId}/requestCancellation](#operation/requestCancellation)** within a time window set by the **Ordering Application**.\n      Otherwise the order can time out and auto-cancel and the merchant can suffer a penalty based on the **Ordering Application** policy.   \n      Order acceptances should be posted as quickly as possible to minimize consumer cancellations.\n\n      When the order is ready, it is expected that a request will be sent to **[/orders/{orderId}/readyForPickup](#operation/orderReady)**\n\n      When the order goes out for Delivery, it is expected that a request will be sent to **[/orders/{orderId}/dispatch](#operation/dispatchOrder)**.\n\n      \u003e When sending requests to these endpoints, is expected that the **Ordering Application** notifies the consumer of the progress of the order.\n\n  - name: ordersCancellation\n    x-displayName: └───● Order Cancellation\n    description: |-\n\n      An order can be canceled for several reasons and the initiative to cancel an order can come from the merchant, the customer, or the **Ordering Application**.   \n      It may also happen that the delivery person requests the cancellation in some scenarios, such as when the customer is not found at the delivery address.\n\n      \u003e **Cancellation Rules**\n      \u003e  \n      \u003e It is expected that both the **Ordering Application** and merchant **Software Service** have their own order cancellation policies and inform their users.\n\n      A cancellation request will always be an asynchronous processing, where one party makes a cancellation request and the other accepts or refuses it.\"\n\n      A cancellation request must always contain:\n\n      - **reason**: Open text field indicating the reason for the cancellation.\n      - **code**: An enumerator containing a cancellation reason.  \n      - **mode**: Field indicating whether the cancellation occurred Automatically or Manually.\n\n      The cancellation can be requested by:\n\n      ### **Software Service** (Merchant):\n\n      \u003cdiv align=\"center\"\u003e\n        \u003cimg src=\"https://abrasel-nacional.github.io/docs/images/software_cancel_request.png\" /\u003e\n      \u003c/div\u003e\n\n      If the merchant wants to cancel an order, it must make a **POST [/orders/{orderId}/requestCancellation](#operation/requestCancellation)** request.\n\n      \u003e **Penalties**\n      \u003e\n      \u003e Avoid order cancellations! Excessive cancellations can result in some penalties (depending on the **Ordering Application**'s** policy) such as having the merchant temporarily closed on the platform.\n\n      **Cancellation Validation**\n\n      The Cancellation request does not guarantee that the order is cancelled. When sending a request [/orders/{orderId}/requestCancellation](#operation/requestCancellation), the **Ordering Application** will send the code 202 (accepted) in response.\n      This does not yet mean that the request has been cancelled. It means that the request has been accepted and will be processed by the **Ordering Application** cancellation service. As a result of this request, the merchant **Software Service** may receive at the next polling (or via webhook) one of the following events:\n\n      - CANCELLATION_REQUEST_DENIED\n      - CANCELLED\n\n      The order should only be Canceled when the CANCELLED event is generated.\n\n      \u003e Cancellation rules may vary depending on the timing of the order (before or after confirmation). In some situations it is possible that the **Ordering Application** cancellation service will consult with the consumer on whether or not the consumer accepts the cancellation of the order.\n\n      ``` \n      Cancellation codes:\n\n      - SYSTEMIC_ISSUES\n      - DUPLICATE_APPLICATION\n      - UNAVAILABLE_ITEM\n      - RESTAURANT_WITHOUT_DELIVERY_MAN\n      - OUTDATED_MENU\n      - ORDER_OUTSIDE_THE_DELIVERY_AREA\n      - BLOCKED_CUSTOMER\n      - OUTSIDE_DELIVERY_HOURS\n      - INTERNAL_DIFFICULTIES_OF_THE_RESTAURANT\n      - RISK_AREA\n      ``` \n\n      \u003e **Important**: It is recommended that the **Ordering Application** makes a new request on the [GET /v1/merchant](#operation/getMerchant) endpoint whenever a merchant makes a Cancellation request.\n\n      ### **Ordering Application**\n\n      \u003cdiv align=\"center\"\u003e\n        \u003cimg src=\"https://abrasel-nacional.github.io/docs/images/orderingApp_cancel_request.png\" /\u003e\n      \u003c/div\u003e\n\n      Cancellation by **Ordering Application** can happen by:\n      ```\n      code: CONSUMER_CANCELLATION_REQUESTED\n      ```  \n\n      The consumer can request the cancellation of an order. \n      Depending on the cancellation rules applied, this option may not be enabled for all merchants. \n      It may also only be allowed at certain times, such as before the order is confirmed.\n      ```\n      code: OTHER_CANCELLATION_REASON\n      ```\n\n      Ordering Aplications may cancel the order for reasons other than via customer.\n\n      **Cancellation Handshake**\n\n      When the request occurs the merchant **Software Service** will receive an ORDER_CANCELLATION_REQUESTED event in polling (or via webhook) and must manifest itself through the following endpoints:\n\n      **[/orders/{orderId}/acceptCancellation](#operation/cancellationAccepted)**  \n      **[/orders/{orderId}/denyCancellation](#operation/cancellationDenied)**\n\n      This request will be processed by the **Ordering Application**'s** cancellation service (asynchronously) and the merchant **Software Service** will receive in the next polling (or webhook) the following event(s):\n\n      CANCELLATION_DENIED or CANCELLED\n\nx-tagGroups:\n  - name: \"\"\n    tags:\n      - versionsSection\n      - versionsEndpoint\n  - name: \"_______________________________________\"\n    tags:\n      - securitySection\n      - authentication\n  - name: \"_______________________________________\"\n    tags:\n      - merchantSection\n  - name: \"└──◌ Overview and Structure\"\n    tags:\n      - merchantOverview\n      - merchantStructure\n  - name: \"└──◌ api\"\n    tags:\n      - merchantEndpoints\n  - name: \"└──◌ Updates and Status\"\n    tags:\n      - merchantUpdate\n      - merchantStatus\n  - name: \"_______________________________________\"\n    tags:\n      - ordersSection\n  - name: \"└──◌ Overview\"\n    tags:\n      - ordersOverview\n  - name: └──◌ Events\n    tags:\n      - ordersPolling\n      - ordersWebhook\n  - name: └──◌ Details\n    tags:\n      - ordersDetails\n  - name: └──◌ Actions\n    tags:\n      - ordersStatus\n      - ordersCancellation\n\n#############################################################\n\npaths:\n  # Versions\n\n  /v1/versions/orderingApp:\n    get:\n      operationId: \"getOrderingAppVersions\"\n      tags:\n        - \"versionsEndpoint\"\n      summary: \"Get Current Ordering Application API Version\"\n      description: |-\n        Requests the current version of the endpoints hosted on the **ORDERING APPLICATION** side.\n        \u003cbr /\u003e\u003cbr /\u003e\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eHOST:\u003c/span\u003e **ORDERING APPLICATION**\n\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eDIRECTION:\u003c/span\u003e\n        \u003cdiv align=\"center\"\u003e\n          \u003cimg src=\"https://abrasel-nacional.github.io/docs/images/directionGETSS_OA.png\" /\u003e\n        \u003c/div\u003e\n      responses:\n        \"200\":\n          description: \"Successful returns Ordering Application API version.\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/VersionOrderingApp\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailable\"\n\n  /v1/versions/merchant:\n    get:\n      operationId: \"getMerchantVersions\"\n      tags:\n        - \"versionsEndpoint\"\n      summary: \"Get Current Merchant API Version\"\n      description: |-\n        Requests the version of the endpoints hosted on the **SOFTWARE SERVICE** side, related to the MERCHANTS.\n        \u003cbr /\u003e\u003cbr /\u003e\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eHOST:\u003c/span\u003e **ORDERING APPLICATION**\n\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eDIRECTION:\u003c/span\u003e\n        \u003cdiv align=\"center\"\u003e\n          \u003cimg src=\"https://abrasel-nacional.github.io/docs/images/directionGETOA_SS.png\" /\u003e\n        \u003c/div\u003e\n      responses:\n        \"200\":\n          description: \"Successful returns Merchant API version.\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/VersionMerchant\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailable\"\n\n  # Authentication\n\n  /oauth/token:\n    post:\n      operationId: \"getToken\"\n      tags:\n        - \"authentication\"\n      summary: \"Get Access Token\"\n      description: |-\n        Requests new access token for accessing **Ordering Application** API resources.\n        \u003cbr /\u003e\u003cbr /\u003e\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eHOST:\u003c/span\u003e **ORDERING APPLICATION**\n\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eDIRECTION:\u003c/span\u003e\n        \u003cdiv align=\"center\"\u003e\n          \u003cimg src=\"https://abrasel-nacional.github.io/docs/images/directionPOSTSS_OA.png\" /\u003e\n        \u003c/div\u003e\n      requestBody:\n        $ref: \"#/components/requestBodies/Token\"\n      responses:\n        \"200\":\n          description: \"Successful returns token request.\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/TokenResponse\"\n        \"401\":\n          description: \"Bad credentials\"\n        \"500\":\n          description: \"Unexpected error\"\n\n  # Merchant\n\n  /v1/merchant:\n    get:\n      tags:\n        - \"merchantEndpoints\"\n      operationId: \"getMerchant\"\n      summary: \"Get information of a Merchant\"\n      security:\n        - {}\n        - apiKey: []\n      description: |-\n        Endpoint to get all data of a specific merchant, such as basic info, menus, and services.\n\n         \u003e  This endpoint can optionally require an **apiKey** for authentication.\n         \u003e  Check with the **Software Service** that hosts the endpoint whether authentication is required or not.\n\n        \u003cbr /\u003e\u003cbr /\u003e\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eHOST:\u003c/span\u003e **SOFTWARE SERVICE**\n\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eDIRECTION:\u003c/span\u003e\n        \u003cdiv align=\"center\"\u003e\n          \u003cimg src=\"https://abrasel-nacional.github.io/docs/images/directionGETOA_SS.png\" /\u003e\n        \u003c/div\u003e\n      responses:\n        \"200\":\n          description: \"Successful returns Merchant information.\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Merchant\"\n              examples:\n                menuExample:\n                  $ref: \"#/components/examples/merchantExample\"\n        \"403\":\n          $ref: \"#/components/responses/AccessDenied\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailable\"\n\n  /v1/merchantStatus:\n    get:\n      parameters:\n        - in: \"query\"\n          name: \"merchantId\"\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Merchant/properties/id\"\n      tags:\n        - \"merchantStatus\"\n      operationId: \"getMerchantStatus\"\n      summary: \"Health Check on a Merchant\"\n      security:\n        - OAuth2: [od.all]\n      description: |-\n        Get specific merchant info reading status provided by the **Ordering Application**.\n        \u003cbr /\u003e\u003cbr /\u003e\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eHOST:\u003c/span\u003e **ORDERING APPLICATION**\n\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eDIRECTION:\u003c/span\u003e\n        \u003cdiv align=\"center\"\u003e\n          \u003cimg src=\"https://abrasel-nacional.github.io/docs/images/directionGETSS_OA.png\" /\u003e\n        \u003c/div\u003e\n      responses:\n        \"200\":\n          description: \"Successful returns Merchant Status information.\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/MerchantStatus\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"403\":\n          $ref: \"#/components/responses/AccessDenied\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailable\"\n\n  /v1/merchantOnboarding:\n    put:\n      tags:\n        - \"merchantStatus\"\n      operationId: \"putMerchantOnboarding\"\n      summary: \"Register / Update Merchant endpoint info.\"\n      security:\n        - OAuth2: [od.all]\n      description: |-\n        Register and update the **Merchant** endpoint [GET /v1/merchant](#operation/getMerchant) information in the **Ordering Application**.\n        \u003cbr /\u003e\u003cbr /\u003e\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eHOST:\u003c/span\u003e **ORDERING APPLICATION**\n\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eDIRECTION:\u003c/span\u003e\n        \u003cdiv align=\"center\"\u003e\n          \u003cimg src=\"https://abrasel-nacional.github.io/docs/images/directionPUTSS_OA.png\" /\u003e\n        \u003c/div\u003e\n      parameters:\n        - in: \"query\"\n          name: \"merchantId\"\n          required: true\n          schema:\n            type: string\n            description: \"The Id of the Merchant for whom you want to complete or change registration info.\"\n      requestBody:\n        required: true\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/MerchantAPIInfo\"\n      responses:\n        \"201\":\n          description: \"Resource has been created.\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/MerchantAPIInfo\"\n        \"204\":\n          description: \"Request has been processed. Return has no content.\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"403\":\n          $ref: \"#/components/responses/AccessDenied\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailable\"\n\n  # Orders\n\n  \"/v1/events:polling\":\n    get:\n      operationId: pollingEvents\n      parameters:\n        - name: \"x-polling-merchants\"\n          in: \"header\"\n          required: true\n          schema:\n            type: array\n            description: |-\n              Subset of merchants to fetch events from. Must either be omitted or non-empty.\n              \u003e At this time, this field will only return data from the authenticated merchant, since authentication occurs per merchant and not per application. This field may be used in future versions.\n            items:\n              $ref: \"#/components/schemas/Merchant/properties/id\"\n        - name: \"eventType\"\n          in: \"query\"\n          schema:\n            type: array\n            description: |-\n              Desired event types. All other events not selected by group will be automatically acknowledged and omitted from the response. \n              Must either be omitted or non-empty.\n\n              **Event Types definitions:**\n              \u003e `CREATED` : Order created.\\\n              \u003e `CONFIRMED` : Order confirmed.\\\n              \u003e `DISPATCHED` : Order went out for delivery.\\\n              \u003e `READY_FOR_PICKUP`: Order ready for pickup.\\\n              \u003e `PICKUP_AREA_ASSIGNED` : Designated area to pick up the order.\\\n              \u003e `CONCLUDED` : Order completed.\\\n              \u003e `CANCELLATION_REQUESTED` : Sent by the **Software Service** to the **Ordering Application**.\\\n              \u003e `CANCELLATION_REQUEST_DENIED` : It must be sent from the **Ordering Application** to the **Software Service**.\\\n              \u003e `CANCELLED` : When the order is actually cancelled.\\\n              \u003e `ORDER_CANCELLATION_REQUEST`: It must be sent from the **Ordering Application** to the **Software Service**.\n            items:\n              $ref: \"#/components/schemas/Event/properties/eventType\"\n\n      tags:\n        - \"ordersPolling\"\n      summary: \"Get New Events\"\n      security:\n        - OAuth2: [od.all]\n      description: |-\n        \"Polls events for any orders from merchants associated with the authenticated user.\n        Each event received from this endpoint must be properly acknowledged, otherwise it will continue to be returned on further requests.\n        In the body of the request, send an array containing only the event ids. Each request accepts a list of at most 2000 event ids.\"\n        \u003cbr /\u003e\u003cbr /\u003e\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eHOST:\u003c/span\u003e **ORDERING APPLICATION**\n\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eDIRECTION:\u003c/span\u003e\n        \u003cdiv align=\"center\"\u003e\n          \u003cimg src=\"https://abrasel-nacional.github.io/docs/images/directionGETSS_OA.png\" /\u003e\n        \u003c/div\u003e\n      responses:\n        \"200\":\n          description: \"Successful returns list of polled events .\"\n          content:\n            \"application/json\":\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Event\"\n        \"204\":\n          description: \"No content.\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"403\":\n          $ref: \"#/components/responses/AccessDenied\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailable\"\n\n  /v1/events/acknowledgment:\n    post:\n      requestBody:\n        $ref: \"#/components/requestBodies/AckEvents\"\n      tags:\n        - \"ordersPolling\"\n      operationId: pollingAcknowledgment\n      summary: \"Acknowledge Events\"\n      security:\n        - OAuth2: [od.all]\n      description: |-\n        Acknowledge a set of events, dismissing them from future polling calls.\n        \u003cbr /\u003e\u003cbr /\u003e\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eHOST:\u003c/span\u003e **ORDERING APPLICATION**\n\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eDIRECTION:\u003c/span\u003e\n        \u003cdiv align=\"center\"\u003e\n          \u003cimg src=\"https://abrasel-nacional.github.io/docs/images/directionPOSTSS_OA.png\" /\u003e\n        \u003c/div\u003e\n      responses:\n        \"202\":\n          $ref: \"#/components/responses/Accepted\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"403\":\n          $ref: \"#/components/responses/AccessDenied\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailable\"\n\n  /v1/orders/{orderId}:\n    get:\n      parameters:\n        - name: \"orderId\"\n          required: true\n          in: \"path\"\n          schema:\n            $ref: \"#/components/schemas/Order/properties/id\"\n      tags:\n        - \"ordersDetails\"\n      operationId: ordersDetails\n      summary: \"Get Order Details\"\n      security:\n        - OAuth2: [od.all]\n      description: |-\n        Endpoint to consult the details of an order.\n        \u003cbr /\u003e\u003cbr /\u003e\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eHOST:\u003c/span\u003e **ORDERING APPLICATION**\n\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eDIRECTION:\u003c/span\u003e\n        \u003cdiv align=\"center\"\u003e\n          \u003cimg src=\"https://abrasel-nacional.github.io/docs/images/directionGETSS_OA.png\" /\u003e\n        \u003c/div\u003e\n      responses:\n        \"200\":\n          description: \"Order returning success.\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Order\"\n              # examples:\n              #   orderExample:\n              #     $ref: \"#/components/examples/orderExample\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"403\":\n          $ref: \"#/components/responses/AccessDenied\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailable\"\n\n  /v1/orders/{orderId}/confirm:\n    post:\n      parameters:\n        - name: orderId\n          in: \"path\"\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Order/properties/id\"\n      requestBody:\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/OrderConfirmed\"\n      tags:\n        - \"ordersStatus\"\n      operationId: confirmOrder\n      summary: \"Confirm\"\n      security:\n        - OAuth2: [od.all]\n      description: |-\n        Confirms receipt of order.\n        \u003cbr /\u003e\u003cbr /\u003e\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eHOST:\u003c/span\u003e **ORDERING APPLICATION**\n\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eDIRECTION:\u003c/span\u003e\n        \u003cdiv align=\"center\"\u003e\n          \u003cimg src=\"https://abrasel-nacional.github.io/docs/images/directionPOSTSS_OA.png\" /\u003e\n        \u003c/div\u003e\n      responses:\n        \"202\":\n          $ref: \"#/components/responses/Accepted\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"403\":\n          $ref: \"#/components/responses/AccessDenied\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailable\"\n\n  /v1/orders/{orderId}/requestCancellation:\n    post:\n      parameters:\n        - name: orderId\n          in: \"path\"\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Order/properties/id\"\n      requestBody:\n        $ref: \"#/components/requestBodies/CancelRequest\"\n      tags:\n        - \"ordersCancellation\"\n      operationId: \"requestCancellation\"\n      summary: \"Request order cancellation\"\n      security:\n        - OAuth2: [od.all]\n      description: |-\n        Request order cancellation.\n        \u003cbr /\u003e\u003cbr /\u003e\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eHOST:\u003c/span\u003e **ORDERING APPLICATION**\n\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eDIRECTION:\u003c/span\u003e\n        \u003cdiv align=\"center\"\u003e\n          \u003cimg src=\"https://abrasel-nacional.github.io/docs/images/directionPOSTSS_OA.png\" /\u003e\n        \u003c/div\u003e\n      responses:\n        \"202\":\n          $ref: \"#/components/responses/Accepted\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"403\":\n          $ref: \"#/components/responses/AccessDenied\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailable\"\n\n  /v1/orders/{orderId}/acceptCancellation:\n    post:\n      parameters:\n        - name: orderId\n          in: \"path\"\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Order/properties/id\"\n      tags:\n        - \"ordersCancellation\"\n      operationId: \"cancellationAccepted\"\n      summary: \"Accept order cancellation\"\n      security:\n        - OAuth2: [od.all]\n      description: |-\n        Accept order cancellation\"\n        \u003cbr /\u003e\u003cbr /\u003e\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eHOST:\u003c/span\u003e **ORDERING APPLICATION**\n\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eDIRECTION:\u003c/span\u003e\n        \u003cdiv align=\"center\"\u003e\n          \u003cimg src=\"https://abrasel-nacional.github.io/docs/images/directionPOSTSS_OA.png\" /\u003e\n        \u003c/div\u003e\n      responses:\n        \"200\":\n          description: Status 200 available for compatibility reasons. Please use status 204 instead.\n        \"204\":\n          description: Order cancellation has been confirmed. No response content.\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"403\":\n          $ref: \"#/components/responses/AccessDenied\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailable\"\n\n  /v1/orders/{orderId}/denyCancellation:\n    post:\n      parameters:\n        - name: orderId\n          in: \"path\"\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Order/properties/id\"\n      requestBody:\n        $ref: \"#/components/requestBodies/CancelDenied\"\n      tags:\n        - \"ordersCancellation\"\n      operationId: \"cancellationDenied\"\n      summary: \"Deny order cancellation\"\n      security:\n        - OAuth2: [od.all]\n      description: |-\n        Order Cancellation denied.\n        \u003cbr /\u003e\u003cbr /\u003e\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eHOST:\u003c/span\u003e **ORDERING APPLICATION**\n\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eDIRECTION:\u003c/span\u003e\n        \u003cdiv align=\"center\"\u003e\n          \u003cimg src=\"https://abrasel-nacional.github.io/docs/images/directionPOSTSS_OA.png\" /\u003e\n        \u003c/div\u003e\n      responses:\n        \"200\":\n          description: Status 200 available for compatibility reasons. Please use status 204 instead.\n        \"204\":\n          description: Order cancellation has been denied. No response content.\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"403\":\n          $ref: \"#/components/responses/AccessDenied\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailable\"\n\n  /v1/orders/{orderId}/readyForPickup:\n    post:\n      parameters:\n        - name: orderId\n          in: \"path\"\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Order/properties/id\"\n      tags:\n        - \"ordersStatus\"\n      summary: \"Ready For Pickup\"\n      operationId: \"orderReady\"\n      security:\n        - OAuth2: [od.all]\n      description: |-\n        Informs you that the order is ready for pickup\n        \u003cbr /\u003e\u003cbr /\u003e\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eHOST:\u003c/span\u003e **ORDERING APPLICATION**\n\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eDIRECTION:\u003c/span\u003e\n        \u003cdiv align=\"center\"\u003e\n          \u003cimg src=\"https://abrasel-nacional.github.io/docs/images/directionPOSTSS_OA.png\" /\u003e\n        \u003c/div\u003e\n      responses:\n        \"202\":\n          $ref: \"#/components/responses/Accepted\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"403\":\n          $ref: \"#/components/responses/AccessDenied\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailable\"\n\n  /v1/orders/{orderId}/dispatch:\n    post:\n      parameters:\n        - name: orderId\n          in: \"path\"\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Order/properties/id\"\n      tags:\n        - \"ordersStatus\"\n      operationId: \"dispatchOrder\"\n      summary: \"Dispatch\"\n      security:\n        - OAuth2: [od.all]\n      description: |-\n        Dispatch an Order.\n        \u003cbr /\u003e\u003cbr /\u003e\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eHOST:\u003c/span\u003e **ORDERING APPLICATION**\n\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eDIRECTION:\u003c/span\u003e\n        \u003cdiv align=\"center\"\u003e\n          \u003cimg src=\"https://abrasel-nacional.github.io/docs/images/directionPOSTSS_OA.png\" /\u003e\n        \u003c/div\u003e\n      responses:\n        \"202\":\n          $ref: \"#/components/responses/Accepted\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"403\":\n          $ref: \"#/components/responses/AccessDenied\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailable\"\n\nx-webhooks:\n  # Merchant\n\n  /v1/menuUpdated:\n    post:\n      summary: New Merchant Update Notification\n      description: |-\n\n        \u003e **POST /v1/merchantUpdate** \n\n\n        Information about a update in the systems.\n\n        This endpoint can be used in the following ways:\n\n        **1 - Sent with an empty body:**  \n        This will force **Ordering Application** to make a new request to the **[GET /v1/merchant](#operation/getMerchant)** endpoint to update all the **merchant** information.\n\n        **2 - Sent with only the `merchantStatus` field:**  \n        This will force the opening or closing of the **merchant** within the **Ordering Application**, without forcing a new **[GET /v1/merchant](#operation/getMerchant)** call.\n\n        **3 - Sent only with the `entityType` and `updatedObjects` fields:**  \n        This will force the **Ordering Application** to update only the sent objects, without forcing a new **[GET /v1/merchant](#operation/getMerchant)** call.\n        \u003e When the `entityType` field is populated, the `updatedObjects` field cannot be empty.\n\n        **4 - Sent the `merchantStatus`, `entityType` and `updatedObjects` fields:**  \n        This will force scenarios 2 and 3 to happen simultaneously.\n\n        \u003cbr /\u003e\u003cbr /\u003e  \n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eHOST:\u003c/span\u003e **ORDERING APPLICATION**  \n\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eDIRECTION:\u003c/span\u003e\n        \u003cdiv align=\"center\"\u003e\n          \u003cimg src=\"https://abrasel-nacional.github.io/docs/images/directionPOSTSS_OA.png\" /\u003e\n        \u003c/div\u003e\n      operationId: menuUpdated\n      tags:\n        - merchantUpdate\n      security:\n        - OAuth2: [od.all]\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/MerchantUpdate\"\n      responses:\n        \"200\":\n          description: Status 200 available for compatibility reasons. Please use status 204 instead.\n        \"204\":\n          description: Data was received successfully. No response content.\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"403\":\n          $ref: \"#/components/responses/AccessDenied\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailable\"\n\n  # Order\n\n  /v1/newEvent:\n    post:\n      parameters:\n        - in: \"header\"\n          name: \"X-App-Id\"\n          required: true\n          schema:\n            type: \"string\"\n            format: \"UUID\"\n            description: \"An unique Identificator of the `**Ordering Applications**`. The same ID must be sent to all `**Software Service**s` that implements this webhook.\"\n        - in: \"header\"\n          name: \"X-App-MerchantId\"\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Merchant/properties/id\"\n            description: \"An unique Identificator of the Merchant \"\n        - in: \"header\"\n          name: \"X-App-Signature\"\n          required: true\n          schema:\n            type: \"string\"\n            format: \"SHA256\"\n            description: \"SHA256 hash of the request body, using the client secret as the key\"\n      summary: New Order Event Notification\n      description: |-\n        \u003e **POST /v1/newEvent** \n\n        Information about a new event in the systems\n        \u003cbr /\u003e\u003cbr /\u003e\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eHOST:\u003c/span\u003e **SOFTWARE SERVICE**\n\n        \u003cspan style=\"text-decoration:underline; color:#26323880; font-size:13.006px\"\u003eDIRECTION:\u003c/span\u003e\n        \u003cdiv align=\"center\"\u003e\n          \u003cimg src=\"https://abrasel-nacional.github.io/docs/images/directionPOSTOA_SS.png\" /\u003e\n        \u003c/div\u003e\n      operationId: newEvent\n      tags:\n        - ordersWebhook\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Event\"\n      responses:\n        \"200\":\n          description: Status 200 available for compatibility reasons. Please use status 204 instead.\n        \"204\":\n          description: Data was received successfully. No response content.\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"403\":\n          $ref: \"#/components/responses/AccessDenied\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailable\"\n\n#############################################################\n\ncomponents:\n\n  securitySchemes:\n    apiKey:\n      type: apiKey\n      description:\n        \"The apiKey is a key that should be generated by the endpoint's host and passed to its clients.\n        Each client of the endpoint can have its own key.\n        The creation and content of the key is of responsibility of the endpoint's host.\n\n        \u003e As of the time of this release, only the **[GET /v1/merchant](#operation/getMerchant)** endpoint can require authentication via apiKey.\"\n\n      in: header\n      name: X-API-KEY\n\n    OAuth2:\n      type: oauth2\n      description:\n        \"Oauth2 should be used for all API calls from the **`Software Service`** to the **`Ordering Application`**.\\n\n\n        As of the time of this release only one scope will be used for all endpoints: `od.all`.\n\n        ### Generating a Client Credentials Token\n\n        To generate a client credentials token, the merchant **Software Service** must retrieve the **clientId** and **clientSecret** from a **Ordering Application** Company and access the [/oauth/token](#operation/getToken) endpoint.\n\n        \u003e The **Ordering Application** MUST provide one `clientId` and `clientSecret` credentials for each individual merchant it will work with, even if these merchants use the same **Software Service**.\n\n        ### Usage\n\n        The **accessToken** field will contain the token used to authenticate against the **Open Delivery** APIs. Once you’ve obtained this token, you can provide it in the “Authorization” header of requests you make to endpoints that require client credentials scopes.\n\n        The **expiresIn** field indicates the lifetime of the access token, provided in seconds. This should be cached and re-used across requests until (or shortly before) expiration, not re-generated per request.\n\n        ```\n\n        curl \\n\n        -H 'authorization: Bearer \u003cTOKEN\u003e' \\n\n        https://{baseURL}/v1/events:polling\n\n        ```\n\n        \u003e Refresh Token is not available at this version.\"\n      flows:\n        clientCredentials:\n          tokenUrl: oauth/token\n          scopes:\n            od.all: \"Access to all **Open Delivery** APIs\"\n\n  requestBodies:\n    Token:\n      required: true\n      content:\n        \"application/x-www-form-urlencoded\":\n          schema:\n            $ref: \"#/components/schemas/TokenRequest\"\n          examples:\n            newToken:\n              $ref: \"#/components/examples/tokenExample\"\n\n    AckEvents:\n      required: true\n      content:\n        \"application/json\":\n          schema:\n            type: \"array\"\n            items:\n              $ref: \"#/components/schemas/AckEvents\"\n\n    ConfirmedOrder:\n      description: \"Order confirmation.\"\n      content:\n        \"application/json\":\n          schema:\n            $ref: \"#/components/schemas/OrderConfirmed\"\n\n    CancelRequest:\n      required: true\n      content:\n        \"application/json\":\n          schema:\n            $ref: \"#/components/schemas/RequestCancelled\"\n\n    CancelDenied:\n      description: \"Request for order cancellation has been denied.\"\n      required: true\n      content:\n        \"application/json\":\n          schema:\n            $ref: \"#/components/schemas/RequestDenied\"\n\n  responses:\n    OK:\n      description: \"Request has been processed.\"\n    Accepted:\n      description: \"Request has been accepted for processing.\"\n    Created:\n      description: \"Resource has been created.\"\n    NoContent:\n      description: \"Request has been processed.\"\n    BadRequest:\n      description: \"Bad Request\"\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    NotFound:\n      description: \"The requested resource was not found.\"\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    AccessDenied:\n      description: \"Authenticated participant request that violates some authorization rule.\"\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    UnprocessableEntity:\n      description: \"Server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions. (Check that the instruction has not been sent before.)\"\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    ServiceUnavailable:\n      description: \"Service is not currently available. Requested service may be under maintenance or outside the operating window.\"\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n  schemas:\n    # Versions\n\n    VersionRequest:\n      type: \"object\"\n      title: \"TokenRequest\"\n      required: [\"client_id\", \"client_secret\", \"grant_type\"]\n      properties:\n        client_id:\n          type: \"string\"\n          description: \"Client identifier provided by the **Ordering Application**.\"\n        client_secret:\n          type: \"integer\"\n          description: \"Client Secret provided by the **Ordering Application**.\"\n        grant_type:\n          type: \"string\"\n          description: \"The OAuth grant type. Currently, the only supported grant type is `client_credentials`.\"\n          enum:\n            - \"client_credentials\"\n\n    VersionOrderingApp:\n      type: \"object\"\n      properties:\n        merchant:\n          type: \"object\"\n          description: \"Information regarding the **Merchant's** standard endpoints.\"\n          properties:\n            version:\n              type: \"string\"\n              description: |-\n                Current version for MERCHANT endpoints.\n\n                Existing MERCHANT routes:\n\n                \u003e - \"POST /v1/merchantUpdated\"\n                \u003e - \"GET /v1/merchantStatus\"\n              enum:\n              - \"1.0.0\"\n              - \"1.0.1\"\n        order:\n          type: \"object\"\n          description: \"Information regarding the **Order's** standard endpoints.\"\n          properties:\n            version:\n              type: \"string\"\n              description: |-\n                Current version for ORDER endpoints.\n\n                Existing ORDER routes:\n\n                \u003e  - \"GET /v1/events:polling\"\n                \u003e  - \"POST /v1/events/acknowledgment\"\n                \u003e  - \"GET /v1/orders/{orderId}\"\n                \u003e  - \"POST /v1/orders/{orderId}/confirm\"\n                \u003e  - \"POST /v1/orders/{orderId}/readyForPickup\"\n                \u003e  - \"POST /v1/orders/{orderId}/dispatch\"\n                \u003e  - \"POST /v1/orders/{orderId}/requestCancellation\"\n                \u003e  - \"POST /v1/orders/{orderId}/acceptCancellation\"\n                \u003e  - \"POST /v1/orders/{orderId}/denyCancellation\"\n              enum:\n                - \"1.0.0\"\n                - \"1.0.1\"\n            availableEventsMethods:\n              type: array\n              description: \"Lists which methods for obtaining new order events the **Software Service** can use with this **Ordering Application**.\"\n              items:\n                type: \"string\"\n                enum:\n                  - \"POLLING\"\n                  - \"WEBHOOK\"\n                      \n    VersionMerchant:\n      type: \"object\"\n      properties:\n        merchantEndpoint:\n          type: \"string\"\n          description: |-\n            Current version for the `GET /v1/merchant` endpoint.\n          enum:\n            - \"1.0.0\"\n            - \"1.0.1\"\n        ordersWebhook:\n          type: \"string\"\n          description: |-\n            Current version for the `/v1/orderUpdate` webhook.\n          enum:\n            - \"1.0.0\"\n            - \"1.0.1\"\n\n    # Authentication\n\n    TokenRequest:\n      type: \"object\"\n      title: \"TokenRequest\"\n      required: [\"client_id\", \"client_secret\", \"grant_type\"]\n      properties:\n        client_id:\n          type: \"string\"\n          description: \"Client identifier provided by the **Ordering Application**.\"\n        client_secret:\n          type: \"integer\"\n          description: \"Client Secret provided by the **Ordering Application**.\"\n        grant_type:\n          type: \"string\"\n          description: \"The OAuth grant type. Currently, the only supported grant type is `client_credentials`.\"\n          enum:\n            - \"client_credentials\"\n\n    TokenResponse:\n      type: \"object\"\n      title: \"TokenResponse\"\n      required: [\"access_token, token_type\"]\n      properties:\n        access_token:\n          type: \"string\"\n          description: \"A JWT representing the access token.\"\n        token_type:\n          type: \"string\"\n          description: \"The token type. Currently, the only supported type is `bearer`\"\n          enum:\n            - \"bearer\"\n        expires_in:\n          type: \"number\"\n          format: \"double\"\n          description: \"The token expiration time in seconds\"\n\n    #Merchant\n\n    Merchant:\n      type: \"object\"\n      title: \"MenuEntity\"\n      required:\n        [\n          \"lastUpdate\",\n          \"TTL\",\n          id,\n          \"status\",\n          \"basicInfo\",\n          \"services\",\n          \"items\",\n          \"menus\",\n          \"categories\",\n          \"itemOffers\",\n        ]\n      properties:\n        lastUpdate:\n          type: \"string\"\n          format: \"date-time\"\n          description: \"The last modified date and time in ISO timestamp format but with type String. \\n\\nThis should be used in conjuction of the TTL field to update the information on the ordering aplication. \\n\\n(UTC date-time in ISO timestamp format).\"\n          example: \"2021-05-27T20:45:10.332Z\"\n        TTL:\n          type: \"integer\"\n          description: \"Time to Live (in seconds).\n            \\nMin: 500\n            Max: 86400.\n            \\nA new request must be done when the TTL expires.\"\n          example: 500\n        id:\n          type: \"string\"\n          description: |-\n            Unique Identifier. Identifies the merchant in the different systems that the merchant will communicate.  \n            This id must be generated by the merchant's **`Software Service`**.\n\n            \u003e To avoid duplicates between different merchants it is recommended that the software creates the merchantId using:  \n            \u003e `Merchant Document + UUID`\n\n            \u003e If this is not possible, it is recommended to at least use a UUID.\n\n          minLength: 36\n          maxLength: 100\n          example: \"22815773000169-dbc7e35a-c936-4665-9e13-eb55eb8b6824\"\n        status:\n          type: \"string\"\n          description: \"Indicates if the Merchant is Avaliable or Unavaliable. Only use this type when you must close (disable) the merchant due to an unexpected event and you don't know when the service will be re-established (e.g. do not use for holidays).\"\n          enum:\n            - AVAILABLE\n            - UNAVAILABLE\n          example: \"AVAILABLE\"\n        basicInfo:\n          type: \"object\"\n          description: \"A required entity to implement. Describes basic info of a merchant.\"\n          allOf:\n            - $ref: \"#/components/schemas/BasicInfo\"\n        services:\n          type: \"array\"\n          description: \"A required entity to implement. Describes food ordering services details for a merchant.\"\n          items:\n            $ref: \"#/components/schemas/Service\"\n        menus:\n          type: \"array\"\n          description: \"A required entity to implement. Describes an array of menus.\"\n          items:\n            $ref: \"#/components/schemas/Menu\"\n        categories:\n          type: \"array\"\n          description: \"A required entity to implement. Describes an array of sections in the menu where `ItemOffers` will be showed.\"\n          items:\n            type: \"object\"\n            $ref: \"#/components/schemas/Category\"\n        itemOffers:\n          type: \"array\"\n          description: \"A required entity to implement. Describes an array of offers for the `Items`.\"\n          items:\n            type: \"object\"\n            $ref: \"#/components/schemas/ItemOffer\"\n        items:\n          type: \"array\"\n          description: \"A required entity to implement. Describes an array of items. To be used with an `ItemOffer` or an `Option`.\"\n          items:\n            $ref: \"#/components/schemas/Item\"\n        optionGroups:\n          type: \"array\"\n          description: \"An optional entity to implement. Describes additional options of an `ItemOffer`.\"\n          items:\n            $ref: \"#/components/schemas/OptionGroup\"\n        availabilities:\n          type: \"array\"\n          description: \"An optional entity to implement. Describes the time period during which a `Category` or an `ItemOffer` entity is served.\"\n          items:\n            type: \"object\"\n            allOf:\n              - $ref: \"#/components/schemas/Availability\"\n\n    MerchantDescription:\n      type: \"object\"\n      title: \"MenuEntity\"\n      required:\n        [\n          \"lastUpdate\",\n          \"TTL\",\n          id,\n          \"status\",\n          \"basicInfo\",\n          \"services\",\n          \"items\",\n          \"menus\",\n          \"categories\",\n          \"itemOffers\",\n        ]\n      properties:\n        lastUpdate:\n          type: \"string\"\n          format: \"date-time\"\n          description: \"The last modified date and time. \\n\\nThis should be used in conjuction of the TTL field to update the information on the ordering aplication. \\n\\n(UTC date-time in ISO timestamp format).\"\n        TTL:\n          type: \"integer\"\n          description: \"Time to Live (in seconds).\n            \\nMin: 500\n            Max: 86400.\n            \\nA new request must be done when the TTL expires.\"\n        id:\n          type: \"string\"\n          format: \"UUID\"\n          description:\n            \"Unique Identifier. Must be formatted with `Merchant Document + UUID`\n            \\n\\n This id must be generated by the company responsible for the merchant's menu and have to be informed in the Order object by the ***Ordering Application***.\"\n        status:\n          type: \"string\"\n          description: \"Indicates if the entity is Avaliable or Unavaliable. Only use this type when you must disable the entity due to an unexpected event and you don't know when the service will be re-established (e.g. do not use for holidays).\"\n          enum:\n            - AVAILABLE\n            - UNAVAILABLE\n        basicInfo:\n          type: \"object\"\n          description: \"See: **[BasicInfo](#section/BasicInfo)**\n            \\n\\n A required entity to implement. Describes basic info of a merchant.\"\n        services:\n          type: \"array\"\n          description: \"See: **[Service](#section/Service)**\n            \\n\\n A required entity to implement. Describes food ordering services details for a merchant.\"\n          items:\n            type: \"object\"\n        menus:\n          type: \"array\"\n          description: \"See: **[Menu](#section/Menu)**\n            \\n\\n A required entity to implement. Describes an array of menus.\"\n          items:\n            type: \"object\"\n        items:\n          type: \"array\"\n          description: \"See: **[Item](#section/Menu/Item)**\n            \\n\\n A required entity to implement. Describes an array of items. To be used with an `ItemOffer` or an `OptionGroups`.\"\n          items:\n            type: \"object\"\n        categories:\n          type: \"array\"\n          description: \"See: **[Category](#section/Menu/Category)**\n            \\n\\n A required entity to implement. Describes an array of sections in the menu where `ItemOffers` will be showed.\"\n          items:\n            type: \"object\"\n        itemOffers:\n          type: \"array\"\n          description: \"See: **[ItemOffers](#section/Menu/ItemOffer)**\n            \\n\\n A required entity to implement. Describes an array of offers for the `Items`.\"\n          items:\n            type: \"object\"\n        optionGroups:\n          type: \"array\"\n          description: \"See: **[Options](#section/Menu/OptionGroup-and-Option)**\n            \\n\\n An optional entity to implement. Describes additional options of an `ItemOffer`.\"\n          items:\n            type: \"object\"\n        availabilities:\n          type: \"array\"\n          description: \"See: **[Availability](#section/Menu/Availability)**\n            \\n\\n An optional entity to implement. Describes the time period during which a `Category` or an `ItemOffer` entity is served.\"\n          items:\n            type: \"object\"\n\n    BasicInfo:\n      type: \"object\"\n      title: \"BasicInfo\"\n      required:\n        [\n          \"name\",\n          \"document\",\n          \"corporateName\",\n          \"description\",\n          \"averagePreparationTime\",\n          \"minOrderValue\",\n          \"merchantType\",\n          \"merchantCategories\",\n          \"address\",\n          \"contactEmails\",\n          \"contactPhones\",\n          \"logoImage\"\n        ]\n      properties:\n        name:\n          type: \"string\"\n          description: \"Merchant Public Name\"\n          maxLength: 500\n          example: \"Pizza Plaza\"\n        document:\n          type: \"string\"\n          description: \"Merchant Document\"\n          pattern: \"/^\\\\d{14}$/\"\n          example: \"22815773000169\"\n        corporateName:\n          type: \"string\"\n          description: \"Merchant Corporate Name\"\n          maxLength: 500\n          example: \"Food Company\"\n        description:\n          type: \"string\"\n          description: \"Merchant Description\"\n          example: \"Food company specializing in pizzas.\"\n        averageTicket:\n          type: \"number\"\n          format: \"decimal\"\n          description: \"Average Ticket. Can be used to show the price range of items available at the merchant. It is not mandatory, but recommended to be used.\"\n          example: 90\n        averagePreparationTime:\n          type: \"number\"\n          format: \"double\"\n          description: \"Average amount of time preparing an order takes, in minutes.\"\n          example: 20\n        minOrderValue:\n          type: \"object\"\n          description: \"Minimum order value that the merchant accepts.\"\n          allOf:\n            - $ref: \"#/components/schemas/Price\"\n        merchantType:\n          type: \"string\"\n          description: \"Merchant Type.\n\n            Currently, only `RESTAURANT` is accepted.\"\n          enum:\n            - \"RESTAURANT\"\n          example: \"RESTAURANT\"\n        merchantCategories:\n          type: \"array\"\n          description: \"Merchant Categories\"\n          items:\n            type: \"string\"\n            enum:\n              - \"BURGERS\"\n              - \"PIZZA\"\n              - \"FAST_FOOD\"\n              - \"HOT_DOG\"\n              - \"JAPANESE\"\n              - \"DESSERTS\"\n              - \"AMERICAN\"\n              - \"ICE_CREAM\"\n              - \"BBQ\"\n              - \"SANDWICH\"\n              - \"MEXICAN\"\n              - \"BRAZILIAN\"\n              - \"PASTRY\"\n              - \"ARABIAN\"\n              - \"COMFORT_FOOD\"\n              - \"VEGETARIAN\"\n              - \"VEGAN\"\n              - \"BAKERY\"\n              - \"HEALTHY\"\n              - \"ITALIAN\"\n              - \"CHINESE\"\n              - \"JUICE_SMOOTHIES\"\n              - \"SEAFOOD\"\n              - \"CAFE\"\n              - \"SALADS\"\n              - \"COFFEE_TEA\"\n              - \"PASTA\"\n              - \"BREAKFAST_BRUNCH\"\n              - \"LATIN_AMERICAN\"\n              - \"CONVENIENCE\"\n              - \"PUB\"\n              - \"HAWAIIAN\"\n              - \"EUROPEAN\"\n              - \"FAMILY_MEALS\"\n              - \"FRENCH\"\n              - \"INDIAN\"\n              - \"PORTUGUESE\"\n              - \"SPANISH\"\n              - \"GOURMET\"\n              - \"KIDS_FRIENDLY\"\n              - \"SOUTH_AMERICAN\"\n              - \"SPECIALTY_FOODS\"\n              - \"ARGENTINIAN\"\n              - \"PREMIUM\"\n              - \"AFFORDABLE_MEALS\"\n          example: [\"PIZZA\", \"FAMILY_MEALS\", \"PREMIUM\"]\n        address:\n          type: \"object\"\n          description: \"Merchant Address\"\n          allOf:\n            - $ref: \"#/components/schemas/Address\"\n        contactEmails:\n          type: \"array\"\n          description: \"Merchant Contact Emails\"\n          items:\n            type: \"string\"\n          example: [\"food@company.com\"]\n        contactPhones:\n          type: \"object\"\n          description: \"Merchant Contact Phones\"\n          allOf:\n            - $ref: \"#/components/schemas/ContactPhones\"\n        logoImage:\n          type: \"object\"\n          description: \"Image to be used as the merchant logo\"\n          allOf:\n            - $ref: \"#/components/schemas/Image\"\n        bannerImage:\n          type: \"object\"\n          description: \"Image to be used as the merchant banner (the banner display depends on the client application interface)\"\n          allOf:\n            - $ref: \"#/components/schemas/Image\"\n        createdAt:\n          type: \"string\"\n          format: date-time\n          description: \"Merchant creation date and time. \\n\\n(UTC date-time in ISO timestamp format).\"\n\n    ListMerchant:\n      type: \"array\"\n      title: \"MerchantList\"\n      required: [\"merchantId\", \"name\"]\n      items:\n        type: \"object\"\n        properties:\n          \"merchantId\":\n            type: \"string\"\n            format: \"UUID\"\n          \"name\":\n            type: \"string\"\n            description: \"Restaurant Name\"\n          \"merchantURL\":\n            type: \"string\"\n            description: \"Optional merchant URL.\"\n\n    Service:\n      type: \"object\"\n      title: \"Service\"\n      required: [id, \"status\", \"serviceType\", \"menuId\", \"serviceHours\"]\n      properties:\n        id:\n          type: \"string\"\n          format: \"UUID\"\n          description: \"Unique Identifier\"\n          example: \"f078e8e2-3044-4eec-b4a8-8359810de123\"\n        status:\n          type: \"string\"\n          description: \"Indicates if the entity is Avaliable or Unavaliable. Only use this type when you must disable the entity due to an unexpected event and you don't know when the service will be re-established (e.g. do not use for holidays).\"\n          enum:\n            - AVAILABLE\n            - UNAVAILABLE\n          example: \"AVAILABLE\"\n        serviceType:\n          type: \"string\"\n          description: |- \n            The type of service being offered:  \n            `DELIVERY` - for orders that will be delivered to the customer's address.  \n            `TAKEOUT` - orders that will be picked up at the establishment by the customer  \n            `INDOOR` - orders that will be consumed inside the establishment.  \n          enum:\n            - DELIVERY\n            - TAKEOUT\n            - INDOOR\n          example: \"DELIVERY\"\n        serviceTiming:\n          type: \"object\"\n          title: \"Service Timing\"\n          description: \"Information regarding the accepted service times.\"\n          properties:\n            timing:\n              type: \"array\"\n              description: \"Indicates whether the service accepts orders with immediate delivery or scheduled delivery. Please inform all accepted types in the field. \\n\\nIf not informed, defaults to the `INSTANT` option.\"\n              items:\n                type: \"string\"\n                enum:\n                  - INSTANT\n                  - SCHEDULED\n              example: [\"INSTANT\", \"SCHEDULED\"]\n            schedule:\n              type: \"object\"\n              description: \"Information regarding the time windows for scheduling.\"\n              required:\n                [scheduleTimeWindow, scheduleStartWindow, scheduleEndWindow]\n              properties:\n                scheduleTimeWindow:\n                  type: string\n                  description: |-\n                    Time window where scheduling will be possible. \n                    \n                    \u003e Example: If `15_MINUTES` is chosen, then the available scheduling times will be displayed every 15 minutes (e.g. 9:15, 9:30, 9:45, 10:00).\n                  enum:\n                    - 15_MINUTES\n                    - 30_MINUTES\n                    - 45_MINUTES\n                    - 60_MINUTES\n                    - 90_MINUTES\n                    - 120_MINUTES\n                scheduleStartWindow:\n                  type: string\n                  description: |-\n                    Informs how long after the merchant has opened (considering the `serviceHours` entity) the first schedule time will be displayed.\n\n                    \u003e Example: Service starts at 9:00 and the option `45_MINUTES` was entered, then the first available time for scheduling will be 9:45.\n                  enum:\n                    - 15_MINUTES\n                    - 30_MINUTES\n                    - 45_MINUTES\n                    - 60_MINUTES\n                    - 90_MINUTES\n                    - 120_MINUTES\n                scheduleEndWindow:\n                  type: string\n                  description:  |-\n                    Informs how long before the merchant closes (considering the `serviceHours` entity) the last schedule time will be displayed.\n\n                    \u003e Example: Service ends at 23:00 and the option `60_MINUTES` was entered, then the last available time for scheduling will be 22:00.                \n                  enum:\n                    - 15_MINUTES\n                    - 30_MINUTES\n                    - 45_MINUTES\n                    - 60_MINUTES\n                    - 90_MINUTES\n                    - 120_MINUTES\n        menuId:\n          description: \"The id value of the `Menu` entity correlated to this `Service` entity.\"\n          type: string\n          format: UUID\n          example: \"f627ccdc-6789-456f-a782-148538d5035b\"\n        serviceArea:\n          type: \"object\"\n          description: \"A conditional entity to implement (required if the Service entity associated has serviceType set to `DELIVERY`). Describes the geographical region in which food can be delivered.\"\n          allOf:\n            - $ref: \"#/components/schemas/ServiceArea\"\n        serviceHours:\n          type: \"object\"\n          description: \"A required entity to implement. Describes the time window which users can place orders.\"\n          allOf:\n            - $ref: \"#/components/schemas/ServiceHours\"\n\n    ServiceArea:\n      type: \"object\"\n      title: \"Service Area\"\n      required: [id]\n      properties:\n        id:\n          type: \"string\"\n          format: \"UUID\"\n          description: \"A unique identifier of the service area.\"\n          example: \"01339e6d-520b-429e-bc7c-dcfd2df42278\"\n        polygon:\n          type: \"array\"\n          description: \"If the `polygon` is chosen to be used, `geoRadius` is not required.\\n\\n\\n\\nA polygon or multipolygon expressed as a series of three or more space delimited points.\"\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/Polygon\"\n        geoRadius:\n          type: \"object\"\n          description: \"If the `geoRadius` is chosen to be used, `polygon` is not required. Indicates the approximate radius (in meters) of the CIRCLE area.\"\n          allOf:\n            - $ref: \"#/components/schemas/GeoRadius\"\n\n    Polygon:\n      type: \"object\"\n      title: \"Polygon\"\n      required: [geoCoordinates]\n      properties:\n        geoCoordinates:\n          type: \"array\"\n          description: \"Coordinates of each point of the polygon. It is recommended that the first and last points be the same, but it is not required.\\n\\n\\n\\nEach point in a polygon or multipolygon is defined by a latitude point followed by a longitude point. You also must specify the points in a counter-clockwise direction.\"\n          items:\n            type: \"object\"\n            title: \"geoCoordinate\"\n            required: [\"latitude\", \"longitude\"]\n            properties:\n              latitude:\n                type: \"number\"\n                format: \"float\"\n                description: \"Indicates the latitude coordinate of the polygon point.\\n\\n\\n\\nLatitude in degrees. Values are restricted to the range [[-90, 90]].\\n\\n\\n\\nThe precision should be **at least 5 decimal places (multipleOf: 0.00001)**.\"\n                example: -23.54809\n              longitude:\n                type: \"number\"\n                format: \"float\"\n                description: \"Indicates the longitude coordinate of the polygon point.\\n\\n\\n\\nLongitude in degrees. Values are restricted to the range [[-180, 180]].\\n\\n\\n\\nThe precision should be **at least 5 decimal places (multipleOf: 0.00001)**.\"\n                example: -46.63638\n        price:\n          type: \"object\"\n          description: \"Price of the fee for this polygon\"\n          allOf:\n            - $ref: \"#/components/schemas/Price\"\n          example: { value: 5, currency: \"BRL\" }\n        estimateDeliveryTime:\n          type: \"integer\"\n          description: \"Estimate delivery time for this polygon in minutes\"\n\n    GeoRadius:\n      type: \"object\"\n      title: \"GeoRadius\"\n      required: [geoMidpointLatitude, geoMidpointLongitude, radius]\n      properties:\n        geoMidpointLatitude:\n          type: \"number\"\n          format: \"float\"\n          description: \"Indicates the latitude coordinate at the center of the CIRCLE area.\\n\\n\\n\\nLatitude in degrees. Values are restricted to the range [[-90, 90]].\\n\\n\\n\\nThe precision should be **at least 5 decimal places (multipleOf: 0.00001)**.\"\n          example: -23.54809\n        geoMidpointLongitude:\n          type: \"number\"\n          format: \"float\"\n          description: \"Indicates the longitude coordinate at the center of the CIRCLE area.\\n\\n\\n\\nLongitude in degrees. Values are restricted to the range [[-180, 180]].\\n\\n\\n\\nThe precision should be **at least 5 decimal places (multipleOf: 0.00001)**.\"\n          example: -46.63638\n        radius:\n          type: \"array\"\n          description: \"Informations about each radius of the CIRCLE that the merchant serves.\"\n          items:\n            type: \"object\"\n            title: \"radius\"\n            required: [\"size\"]\n            properties:\n              size:\n                type: \"integer\"\n                description: \"The size of the CIRCLE radius in meters.\"\n              price:\n                type: \"object\"\n                description: \"Price of the fee for this CIRCLE size.\"\n                allOf:\n                  - $ref: \"#/components/schemas/Price\"\n                example: { value: 5, currency: \"BRL\" }\n              estimateDeliveryTime:\n                type: \"integer\"\n                description: \"Estimate delivery time for this CIRCLE size in minutes.\"\n\n    ItemPrice:\n      type: \"object\"\n      title: \"Item Price\"\n      required: [\"value\", \"originalValue\", \"currency\"]\n      properties:\n        value:\n          type: \"number\"\n          format: \"decimal\"\n          description: \"The actual price value. 4 decimals places are accepted\"\n          example: 50\n        originalValue:\n          type: \"number\"\n          format: \"decimal\"\n          description: \"The orginal price value. 4 decimals places are accepted\"\n          example: 50\n        currency:\n          type: \"string\"\n          pattern: \"^[A-Z]{3}$\"\n          description: \"The 3-letter ISO 4217 currency code.\"\n          example: \"BRL\"\n\n    ServiceHours:\n      type: \"object\"\n      title: \"Service Hours\"\n      required: [id, \"weekHours\"]\n      properties:\n        id:\n          type: \"string\"\n          format: \"UUID\"\n          description: \"A unique identifier of the service hours.\"\n          example: \"fb093d8c-2ca5-40fb-afcf-472fbdae81cc\"\n        weekHours:\n          type: array\n          description: \"A list of the day(s) of the week and time periods for which the service is valid.\"\n          items:\n            type: \"object\"\n            allOf:\n              - $ref: \"#/components/schemas/Hours\"\n        holidayHours:\n          type: array\n          description: \"Map of holiday dates, each with optional `timePeriods`. If a date does not have a time period specified, the restaurant will be closed for that date.\"\n          items:\n            type: \"object\"\n            allOf:\n              - $ref: \"#/components/schemas/HolidayHours\"\n\n    Hours:\n      type: \"object\"\n      title: \"Hours\"\n      required: [\"dayOfWeek\", \"timePeriods\"]\n      properties:\n        dayOfWeek:\n          type: array\n          description: \"Day of the week for which these service hours are valid\"\n          items:\n            type: \"string\"\n            enum:\n              - \"MONDAY\"\n              - \"TUESDAY\"\n              - \"WEDNESDAY\"\n              - \"THURSDAY\"\n              - \"FRIDAY\"\n              - \"SATURDAY\"\n              - \"SUNDAY\"\n          example:\n            [\n              \"MONDAY\",\n              \"TUESDAY\",\n              \"WEDNESDAY\",\n              \"THURSDAY\",\n              \"FRIDAY\",\n              \"SATURDAY\",\n              \"SUNDAY\",\n            ]\n        timePeriods:\n          type: \"object\"\n          description: \"Time window from which users' orders can be placed.\"\n          allOf:\n            - $ref: \"#/components/schemas/TimePeriods\"\n\n    TimePeriods:\n      type: \"object\"\n      title: \"Time Periods\"\n      required: [\"startTime\", \"endTime\"]\n      properties:\n        startTime:\n          type: string\n          format: time\n          description: \"Indicates the specific time of day in ISO format starting from which users' orders can be placed.\"\n          example: \"10:00:00.000Z\"\n        endTime:\n          type: string\n          format: time\n          description: \"Indicates the specific time of day in ISO format beyond which users' orders cannot be placed.\"\n          example: \"18:00:00.000Z\"\n\n    HolidayHours:\n      type: \"object\"\n      title: \"Holiday Hours\"\n      required: [\"date\", \"timePeriods\"]\n      properties:\n        date:\n          type: string\n          format: date\n          description: \"date\"\n          example: \"7/4/2021\"\n        timePeriods:\n          type: \"object\"\n          description: \"hours\"\n          allOf:\n            - $ref: \"#/components/schemas/TimePeriods\"\n\n    Item:\n      type: \"object\"\n      title: \"Item\"\n      required: [id, \"name\", \"description\", \"externalCode\", \"unit\"]\n      properties:\n        id:\n          type: \"string\"\n          format: \"UUID\"\n          description: \"A unique identifier of the item.\"\n          example: \"732bd31e-77fc-47ee-88ee-a0437f97b198\"\n        name:\n          type: \"string\"\n          description: \"Item name\"\n          maxLength: 150\n          example: \"1/2 Pepperoni\"\n        description:\n          type: \"string\"\n          description: \"Item Description\"\n          example: \"Pepperoni flavored pizza with LOTS of pepperoni.\"\n        externalCode:\n          type: \"string\"\n          description: \"Item External Code. (Tipically the merchant **Software Service** item code)\"\n          example: \"233467\"\n        status:\n          type: \"string\"\n          description: \"Indicates if the entity is Avaliable or Unavaliable. Only use this type when you must disable the entity due to an unexpected event and you don't know when the service will be re-established (e.g. do not use for holidays). Default is `AVAILABLE`.\"\n          enum:\n            - AVAILABLE\n            - UNAVAILABLE\n          example: \"AVAILABLE\"        \n        image:\n          type: \"object\"\n          description: \"Image of the item\"\n          allOf:\n            - $ref: \"#/components/schemas/Image\"\n        nutritionalInfo:\n          type: \"object\"\n          description: \"Nutrition information for the dish.\"\n          allOf:\n            - $ref: \"#/components/schemas/NutritionalInfo\"\n        serving:\n          type: \"integer\"\n          description: \"Field to show the number of people the portion serves.\"\n          example: 2\n        unit:\n          type: \"string\"\n          description: \"Measure Unit of the Item\"\n          example: \"kg\"\n        ean:\n          type: \"string\"\n          description: \"EAN (European Article Number)\"\n          example: \"7896005202074\"\n\n    NutritionalInfo:\n      type: \"object\"\n      title: \"Nutritional Info\"\n      required: [\"description\", \"calories\"]\n      properties:\n        description:\n          type: \"string\"\n          description: 'Nutrition information in free text. For example \"Contains preservatives\".'\n          example: \"Contains preservatives\"\n        calories:\n          type: \"string\"\n          description: \"The number of calories in Cal, kcal, or kJ, using the following format: value Cal or min-max Cal\"\n          pattern: \"^[0-9]+(\\\\.[0-9]+)? ?(- ?[0-9]+(\\\\.[0-9]+)?)? [a-zA-Z]+$\"\n          example: \"2000 Cal\"\n        allergen:\n          type: \"array\"\n          description: \"Allergens of this Item\"\n          items:\n            type: \"string\"\n            enum:\n              - \"ALMONDS\"\n              - \"ALPHA_ISOMETHYL_IONONE\"\n              - \"ALCOHOL\"\n              - \"AMYL_CINNAMAL\"\n              - \"ANISE_ALCOHOL\"\n              - \"BARLEY\"\n              - \"BENZYL_ALCOHOL\"\n              - \"BENZYL_BENZOATE\"\n              - \"BENZYL_CINNAMATE\"\n              - \"BENZYL_SALICYLATE\"\n              - \"BRAZIL_NUTS\"\n              - \"BUTYLPHENYL_METHYLPROPIONATE\"\n              - \"CARROTS\"\n              - \"CASHEW_NUTS\"\n              - \"CELERY\"\n              - \"CEREALS_CONTAINING_GLUTEN\"\n              - \"CINNAMAL\"\n              - \"CINNAMYL_ALCOHOL\"\n              - \"CITRAL\"\n              - \"CITRONELLOL\"\n              - \"COCOA\"\n              - \"CORIANDER\"\n              - \"CORN\"\n              - \"COUMARIN\"\n              - \"CRUSTACEANS\"\n              - \"EGGS\"\n              - \"EUGENOL\"\n              - \"EVERNIA_FURFURACEA\"\n              - \"EVERNIA_PRUNASTRI\"\n              - \"FARNESOL\"\n              - \"FISH\"\n              - \"GERANIOL\"\n              - \"GLUTEN\"\n              - \"HAZELNUTS\"\n              - \"HEXYL_CINNAMAL\"\n              - \"HYDROXYCITRONELLAL\"\n              - \"KAMUT\"\n              - \"LACTOSE\"\n              - \"LUPINE\"\n              - \"MACADAMIA_NUTS\"\n              - \"METHYL_2_OCTYNOATE\"\n              - \"MILK\"\n              - \"MOLLUSCS\"\n              - \"MUSTARD\"\n              - \"NO_DECLARED_ALLERGENS\"\n              - \"OAT\"\n              - \"PEANUTS\"\n              - \"PEAS\"\n              - \"PECAN_NUTS\"\n              - \"PISTACHIOS\"\n              - \"POD_FRUITS\"\n              - \"QUEENSLAND_NUTS\"\n              - \"RYE\"\n              - \"SESAME_SEEDS\"\n              - \"SOYBEANS\"\n              - \"SPELT\"\n              - \"SULPHUR_DIOXIDE\"\n              - \"TREE_NUTS\"\n              - \"TREE_NUT_TRACES\"\n              - \"WALNUTS\"\n              - \"WHEAT\"\n            example: \"GLUTEN\"\n        additives:\n          type: \"array\"\n          description: \"Additives of this Item\"\n          items:\n            type: \"string\"\n\n        suitableDiet:\n          type: \"array\"\n          description: \"The dish complies with the described dietary restriction\"\n          items:\n            type: \"string\"\n            enum:\n              - \"DIABETIC\"\n              - \"GLUTEN_FREE\"\n              - \"HALAL\"\n              - \"HINDU\"\n              - \"KOSHER\"\n              - \"LOW_CALORIE\"\n              - \"LOW_FAT\"\n              - \"LOW_LACTOSE\"\n              - \"LOW_SALT\"\n              - \"VEGAN\"\n              - \"VEGETARIAN\"\n        isAlcoholic:\n          type: \"boolean\"\n          description: \"Indicates if an item is alcoholic.\"\n          example: false\n\n    Menu:\n      type: \"object\"\n      title: \"Menu\"\n      required: [id, \"name\", \"externalCode\", \"categoryId\"]\n      properties:\n        id:\n          type: \"string\"\n          format: \"UUID\"\n          description: \"A unique identifier of the menu.\"\n          example: \"f627ccdc-6789-456f-a782-148538d5035b\"\n        name:\n          type: \"string\"\n          description: \"Menu name\"\n          maxLength: 500\n          example: \"Pizzas\"\n        description:\n          type: \"string\"\n          description: \"Menu Description\"\n          example: \"Pizza menu\"\n        externalCode:\n          type: \"string\"\n          description: \"Menu External Code. (Tipically the merchant **Software Service** menu code)\"\n          example: \"123\"\n        disclaimer:\n          type: \"string\"\n          description: \"Disclaimer\"\n          example: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\"\n        disclaimerURL:\n          type: \"string\"\n          format: \"uri\"\n          description: \"Disclaimer URL\"\n        categoryId:\n          type: \"array\"\n          description: \"A list of the id values of the child `Category` entities that correspond to this `Menu` entity. Default assumes all `Category` entities are available in this menu.\"\n          items:\n            type: \"string\"\n            format: \"UUID\"\n          example:\n            [\n              \"92fad022-2c28-4239-a026-989f5b555cb7\",\n              \"6bb71850-1d40-49f9-8046-b13e068c0cca\",\n            ]\n\n    Category:\n      type: \"object\"\n      title: \"Category\"\n      required:\n        [id, \"index\", \"name\", \"externalCode\", \"status\", \"availabilityId\"]\n      properties:\n        id:\n          type: \"string\"\n          format: \"UUID\"\n          description: \"A unique identifier of the category.\"\n          example: \"92fad022-2c28-4239-a026-989f5b555cb7\"\n        index:\n          type: \"integer\"\n          description: \"Category display index.\"\n          example: 0\n        name:\n          type: \"string\"\n          description: \"Category name.\"\n          maxLength: 150\n          example: \"Salted Pizza\"\n        description:\n          type: \"string\"\n          description: \"Category description.\"\n          example: \"Salted pizza flavors.\"\n        image:\n          type: \"object\"\n          description: \"Image of the category (the category image display depends on the client application interface)\"\n          allOf:\n            - $ref: \"#/components/schemas/Image\"\n        externalCode:\n          type: \"string\"\n          description: \"Category External Code. (Tipically the merchant **Software Service** category code)\"\n          example: \"13\"\n        status:\n          type: \"string\"\n          description: \"Indicates if the entity is Avaliable or Unavaliable. Only use this type when you must disable the entity due to an unexpected event and you don't know when the service will be re-established (e.g. do not use for holidays).\"\n          enum:\n            - AVAILABLE\n            - UNAVAILABLE\n          example: \"AVAILABLE\"\n        availabilityId:\n          type: \"array\"\n          description: \"The id values of `Availability` entities which provide details on when the category is available. Default assumes a `Category` is available at all times.\"\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/Availability/properties/id\"\n          example: [\"11d063c4-73a7-4f87-a0eb-71636cc02029\"]\n        itemOfferId:\n          type: array\n          description: \"A list of the id values of the child `ItemOffer` entities that correspond to this `Category` entity. Default assumes all `ItemOffer` entities are available in this category.\"\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/ItemOffer/properties/id\"\n          example: [\"f080cfb3-5c4a-4eb7-907d-2de3bbb5dfb9\"]\n\n    ItemOffer:\n      type: \"object\"\n      title: \"ItemOffer\"\n      required: [id, \"itemId\", \"index\", \"price\", \"availabilityId\"]\n      properties:\n        id:\n          type: \"string\"\n          format: \"UUID\"\n          description: \"A unique identifier of the item offer.\"\n          example: \"f080cfb3-5c4a-4eb7-907d-2de3bbb5dfb9\"\n        itemId:\n          type: \"string\"\n          description: \"The id value of the `Item` entity correlated to this `ItemOffer` entity.\"\n          example: \"732bd31e-77fc-47ee-88ee-a0437f97b198\"\n        index:\n          type: integer\n          description: \"ItemOffer display index.\"\n          example: 0\n        status:\n          type: \"string\"\n          description: \"Indicates if the entity is Avaliable or Unavaliable. Only use this type when you must disable the entity due to an unexpected event and you don't know when the service will be re-established (e.g. do not use for holidays). Default is `AVAILABLE`.\"\n          enum:\n            - AVAILABLE\n            - UNAVAILABLE\n          example: \"AVAILABLE\"        \n        price:\n          type: \"object\"\n          description: \"Price of the menu item offer. Original and actual values can be informed, for showing discounts.\"\n          allOf:\n            - $ref: \"#/components/schemas/ItemPrice\"\n          example: { value: 43, originalValue: 43, currency: \"BRL\" }\n        availabilityId:\n          type: \"array\"\n          description: \"The id values of `Availability` entities which provide details on when the menu item offer is available. Default assumes an `ItemOffer` is available at all times.\"\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/Availability/properties/id\"\n          example: [\"11d063c4-73a7-4f87-a0eb-71636cc02029\"]\n        optionGroupsId:\n          type: \"array\"\n          description: \"A list of the id values of the child `OptionGroup` entities that correspond to this `ItemOffer` entity.\"\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/OptionGroup/properties/id\"\n          example: [\"fe67e551-f42f-499a-8afb-0ed893c71fa3\"]\n\n    OptionGroup:\n      type: \"object\"\n      title: \"Option Group\"\n      required:\n        [\n          id,\n          \"index\",\n          \"name\",\n          \"externalCode\",\n          \"status\",\n          \"minPermitted\",\n          \"maxPermitted\",\n        ]\n      properties:\n        id:\n          type: \"string\"\n          format: \"UUID\"\n          description: \"A unique identifier of the option group.\"\n          example: \"fe67e551-f42f-499a-8afb-0ed893c71fa3\"\n        index:\n          type: integer\n          description: \"Option Group display index.\"\n          example: 0\n        name:\n          type: \"string\"\n          description: \"Option Group Name.\"\n          maxLength: 150\n          example: \"Choose your salted pizza flavor\"\n        description:\n          type: \"string\"\n          description: \"Option Group Description.\"\n          example: \"Choose your salted pizza flavor.\"\n        externalCode:\n          type: \"string\"\n          description: \"Option External Code. (Tipically the merchant **Software Service** option group code)\"\n          example: \"12\"\n        status:\n          type: \"string\"\n          description: \"Indicates if the entity is Avaliable or Unavaliable. Only use this type when you must disable the entity due to an unexpected event and you don't know when the service will be re-established (e.g. do not use for holidays).\"\n          enum:\n            - AVAILABLE\n            - UNAVAILABLE\n          example: \"AVAILABLE\"\n        minPermitted:\n          type: integer\n          description: \"The minimum number of options which should be selected in the option group.\"\n          example: 2\n        maxPermitted:\n          type: integer\n          description: \"The maximum number of options which should be selected in the option group.\"\n          example: 2\n        options:\n          type: array\n          description: \"A list of `Option` entities that correspond to this option group\"\n          items:\n            type: \"object\"\n            description: \"options\"\n            allOf:\n              - $ref: \"#/components/schemas/Option\"\n\n    Option:\n      type: \"object\"\n      title: \"Option\"\n      required: [id]\n      properties:\n        id:\n          type: \"string\"\n          format: \"UUID\"\n          description: \"A unique identifier of the option.\"\n          example: \"e5232f14-430c-4a94-8ff6-289d5a16a87a\"\n        itemId:\n          type: \"string\"\n          description: \"The id value of the `Item` entity correlated to this `Option` entity.\"\n          example: \"502ecf11-0509-48ed-b63c-6211c48fd9b9\"\n        index:\n          type: integer\n          description: \"Option display index.\"\n          example: 0\n        status:\n          type: \"string\"\n          description: \"Indicates if the entity is Avaliable or Unavaliable. Only use this type when you must disable the entity due to an unexpected event and you don't know when the service will be re-established (e.g. do not use for holidays). Default is `AVAILABLE`.\"\n          enum:\n            - AVAILABLE\n            - UNAVAILABLE\n          example: \"AVAILABLE\"\n        price:\n          type: \"object\"\n          description: \"Price of the option. Original and actual values can be informed, for showing discounts.\"\n          allOf:\n            - $ref: \"#/components/schemas/ItemPrice\"\n        maxPermitted:\n          type: integer\n          description: \"The maximum quantity of this option which can be selected in the option group.\"\n          example: 1\n\n    Availability:\n      type: \"object\"\n      title: \"Availability\"\n      required: [id, \"hours\"]\n      properties:\n        id:\n          type: \"string\"\n          format: \"UUID\"\n          description: \"A unique identifier of the availability.\"\n          example: \"11d063c4-73a7-4f87-a0eb-71636cc02029\"\n        startDate:\n          type: \"string\"\n          description: \"Availability start date. If not informed, the availabilty is already avaliable.\"\n          example: \"05/01/2021\"\n        endDate:\n          type: \"string\"\n          description: \"Availability end date. If not informed, the availabilty is always avaliable.\"\n          example: \"05/30/2021\"\n        hours:\n          type: \"array\"\n          description: \"Hours\"\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/Hours\"\n\n    MerchantStatus:\n      type: \"object\"\n      title: \"Merchant Status\"\n      required: [\"lastRead\", \"status\"]\n      properties:\n        lastRead:\n          type: \"string\"\n          format: \"date-time\"\n          description: \"Date of last attempt to read merchant information. \\n\\n(UTC date-time in ISO timestamp format).\"\n        status:\n          type: \"string\"\n          description: \"Reading attempt status\"\n          enum:\n            - SUCCESS\n            - PROCESSING\n            - FAIL\n        moreInfo:\n          type: \"string\"\n          description: \"Open field to provide any relevant information to the caller. Eg: Error messages or causes.\"\n\n    MerchantUpdate:\n      type: object\n      required: [\"\"]\n      discriminator:\n        propertyName: entityType\n        mapping:\n          SERVICE: \"#/components/schemas/ServiceUpdate\"\n          MENU: \"#/components/schemas/MenuUpdate\"\n          CATEGORY: \"#/components/schemas/CategoryUpdate\"\n          ITEM: \"#/components/schemas/ItemUpdate\"\n          ITEM_OFFER: \"#/components/schemas/ItemOfferUpdate\"\n          OPTION_GROUP: \"#/components/schemas/OptionGroupUpdate\"\n          OPTION: \"#/components/schemas/OptionUpdate\"\n          AVAILABILITY: \"#/components/schemas/AvailabilityUpdate\"\n      properties:\n        merchantStatus:\n          allOf:\n            - $ref: \"#/components/schemas/Merchant/properties/status\"\n        entityType:\n          type: \"string\"\n          description: \"The entity type of the updated object.\"\n\n    ServiceUpdate:\n      description: Updated Service Object\n      allOf:\n        - $ref: \"#/components/schemas/MerchantUpdate\"\n        - type: object\n          properties:\n            updatedObjects:\n              description: \"Updated `Service` entity objects\"\n              type: array\n              items:\n                allOf:\n                  - $ref: \"#/components/schemas/Service\"\n\n    MenuUpdate:\n      description: Updated Menu Object\n      allOf:\n        - $ref: \"#/components/schemas/MerchantUpdate\"\n        - type: object\n          properties:\n            updatedObjects:\n              description: \"Updated `Menu` entity objects\"\n              type: array\n              items:\n                allOf:\n                  - $ref: \"#/components/schemas/Menu\"\n\n    CategoryUpdate:\n      description: Updated `Category` Object\n      allOf:\n        - $ref: \"#/components/schemas/MerchantUpdate\"\n        - type: object\n          properties:\n            updatedObjects:\n              description: \"Updated `Category` entity objects\"\n              type: array\n              items:\n                allOf:\n                  - $ref: \"#/components/schemas/Category\"\n\n    ItemUpdate:\n      description: Updated `Item` Object\n      allOf:\n        - $ref: \"#/components/schemas/MerchantUpdate\"\n        - type: object\n          properties:\n            updatedObjects:\n              description: \"Updated `Item` entity objects\"\n              type: array\n              items:\n                allOf:\n                  - $ref: \"#/components/schemas/Item\"\n\n    ItemOfferUpdate:\n      description: Updated `ItemOffer` Object\n      allOf:\n        - $ref: \"#/components/schemas/MerchantUpdate\"\n        - type: object\n          properties:\n            updatedObjects:\n              description: \"Updated `ItemOffer` entity objects\"\n              type: array\n              items:\n                allOf:\n                  - $ref: \"#/components/schemas/ItemOffer\"\n\n    OptionGroupUpdate:\n      description: Updated `OptionGroup` Object\n      allOf:\n        - $ref: \"#/components/schemas/MerchantUpdate\"\n        - type: object\n          properties:\n            updatedObjects:\n              description: \"Updated `OptionGroup` entity objects\"\n              type: array\n              items:\n                allOf:\n                  - $ref: \"#/components/schemas/OptionGroup\"\n\n    OptionUpdate:\n      description: Updated `Option` Object\n      allOf:\n        - $ref: \"#/components/schemas/MerchantUpdate\"\n        - type: object\n          properties:\n            updatedObjects:\n              description: \"Updated `Option` entity objects\"\n              type: array\n              items:\n                allOf:\n                  - $ref: \"#/components/schemas/Option\"\n\n    AvailabilityUpdate:\n      description: Updated `Availability` Object\n      allOf:\n        - $ref: \"#/components/schemas/MerchantUpdate\"\n        - type: object\n          properties:\n            updatedObjects:\n              description: \"Updated `Availability` entity objects\"\n              type: array\n              items:\n                allOf:\n                  - $ref: \"#/components/schemas/Availability\"\n\n    #Orders\n\n    AckEvents:\n      type: \"object\"\n      title: \"Ack Events\"\n      required: [id, \"orderId\", \"eventType\"]\n      properties:\n        id:\n          type: \"string\"\n          format: \"UUID\"\n          description: \"A unique identifier of the event.\"\n        orderId:\n          $ref: \"#/components/schemas/Order/properties/id\"\n        eventType:\n          $ref: \"#/components/schemas/Event/properties/eventType\"\n\n    Order:\n      type: \"object\"\n      title: \"Order\"\n      required:\n        [\n          id,\n          \"type\",\n          \"displayId\",\n          \"createdAt\",\n          \"orderTiming\",\n          \"preparationStartDateTime\",\n          \"merchant\",\n          \"items\",\n          \"total\",\n          \"payments\",\n          \"customer\",\n        ]\n      properties:\n        id:\n          type: \"string\"\n          format: \"UUID\"\n          description: \"The unique identifier of the order. The order ID is generated by the **Ordering Application**.\"\n        \"type\":\n          type: \"string\"\n          description: |-\n            `DELIVERY` - for orders that will be delivered to the customer's address.  \n            `TAKEOUT` - orders that will be picked up at the establishment by the customer  \n            `INDOOR` - orders that will be consumed inside the establishment.  \n\n          enum:\n            - \"DELIVERY\"\n            - \"TAKEOUT\"\n            - \"INDOOR\"\n        displayId:\n          type: \"string\"\n          description: \"Order Id shown in the **Ordering Application** interface for the customer.\"\n        sourceAppId:\n          type: \"string\"\n          format: UUID\n          description: \"This field must be filled in with the AppId of the **Ordering Application** that originated the order. This field is to help the applications that will work as a Hub, intermediating the requests from the **Ordering Application** with the **Software Service**.\"\n        createdAt:\n          type: \"string\"\n          format: date-time\n          description: \"Order creation date and time. \\n\\n(UTC date-time in ISO timestamp format).\"\n        orderTiming:\n          type: \"string\"\n          description: \"Order Timing. Indicates whether the ORDER will have immediate or scheduled delivery.\"\n          enum:\n            - \"INSTANT\"\n            - \"SCHEDULED\"\n        preparationStartDateTime:\n          type: \"string\"\n          format: \"date-time\"\n          description:\n            \"Suggestion for the preparation start time after Order creation. This can be used by the **Ordering Application** to inform the merchant to delay the start of the preparation for any reason. Default is the same time as the order creation time.\n            \\n\\n(UTC date-time in ISO timestamp format).\"\n        merchant:\n          type: \"object\"\n          required: [id, \"name\"]\n          description: \"Merchant information.\"\n          properties:\n            id:\n              allOf:\n                - $ref: \"#/components/schemas/Merchant/properties/id\"\n            name:\n              allOf:\n                - $ref: \"#/components/schemas/BasicInfo/properties/name\"\n        items:\n          type: \"array\"\n          description: \"Order items.\"\n          items:\n            type: \"object\"\n            required:\n              [\n                id,\n                \"name\",\n                \"unit\",\n                \"quantity\",\n                \"unitPrice\",\n                \"totalPrice\",\n                \"externalCode\",\n              ]\n            properties:\n              id:\n                type: \"string\"\n                format: \"UUID\"\n                description: \"A unique identifier of the item.\"\n              index:\n                type: \"integer\"\n                description: \"Item's position.\"\n              name:\n                type: \"string\"\n                description: \"Product name\"\n              externalCode:\n                type: \"string\"\n                description: \"External product code.\"\n              unit:\n                type: \"string\"\n                description: \"Measure unit of the item.\"\n                enum:\n                  - \"UNIT\"\n              ean:\n                type: \"string\"\n                description: \"EAN is the barcode standard used on items.\"\n              quantity:\n                type: \"number\"\n                format: \"decimal\"\n                description: \"Amount of items.\"\n              specialInstructions:\n                type: \"string\"\n                description: \"Special instructions about the items.\"\n              unitPrice:\n                type: \"object\"\n                allOf:\n                  - $ref: \"#/components/schemas/Price\"\n                description: \"Price per unit.\"\n              optionsPrice:\n                type: \"object\"\n                allOf:\n                  - $ref: \"#/components/schemas/Price\"\n                description: \"Pricing options.\"\n              totalPrice:\n                type: \"object\"\n                description: Total Price of the item. (quantity * unitPrice + optionsPrice)\n                allOf:\n                  - $ref: \"#/components/schemas/Price\"\n              options:\n                type: \"array\"\n                description: \"Options related to the item.\"\n                items:\n                  type: \"object\"\n                  required:\n                    [\n                      id,\n                      \"name\",\n                      \"externalCode\",\n                      \"unit\",\n                      \"quantity\",\n                      \"unitPrice\",\n                      \"price\",\n                    ]\n                  properties:\n                    index:\n                      type: \"integer\"\n                      description: \"Option's position.\"\n                    id:\n                      type: \"string\"\n                      format: \"UUID\"\n                      description: \"A unique identifier of the item.\"\n                    name:\n                      type: \"string\"\n                      description: \"Options name\"\n                    externalCode:\n                      type: \"string\"\n                      description: \"External product code.\"\n                    unit:\n                      type: \"string\"\n                      description: \"Measure unit of the item.\"\n                    ean:\n                      type: \"string\"\n                      description: \"EAN is the barcode standard used on items.\"\n                    quantity:\n                      type: \"number\"\n                      format: \"decimal\"\n                    unitPrice:\n                      type: \"object\"\n                      allOf:\n                        - $ref: \"#/components/schemas/Price\"\n                      description: \"Price per unit.\"\n                    totalPrice:\n                      type: \"object\"\n                      description: Total Price of the option. (quantity * unitPrice)\n                      allOf:\n                        - $ref: \"#/components/schemas/Price\"\n                    specialInstructions:\n                      type: \"string\"\n                      description: \"More instructions, if needed.\"\n        otherFees:\n          type: \"array\"\n          description: \"Other fees that may apply.\"\n          items:\n            type: \"object\"\n            required: [\"name\", \"type\", \"receivedBy\", \"price\"]\n            properties:\n              name:\n                type: \"string\"\n                description: \"Name related to the other fees.\"\n              type:\n                type: \"string\"\n                enum:\n                  - \"DELIVERY_FEE\"\n                  - \"SERVICE_FEE\"\n                  - \"TIP\"\n              receivedBy:\n                type: \"string\"\n                enum:\n                  - \"MARKETPLACE\"\n                  - \"MERCHANT\"\n                  - \"LOGISTIC_SERVICES\"\n              receiverDocument:\n                type: \"string\"\n                description: \"Mandatory for marketplace.\"\n              price:\n                type: \"object\"\n                description: \"The fee price\"\n                allOf:\n                  - $ref: \"#/components/schemas/Price\"\n              observation:\n                type: \"string\"\n                description: \"Any extra comments.\"\n        discounts:\n          type: \"array\"\n          description: \"Any discounts that may apply.\"\n          items:\n            type: \"object\"\n            required: [\"value\", \"target\", \"sponsorshipValues\"]\n            properties:\n              amount:\n                type: \"object\"\n                description: Amount value of the discount.\n                allOf:\n                  - $ref: \"#/components/schemas/Price\"\n              target:\n                type: \"string\"\n                enum:\n                  - \"CART\"\n                  - \"DELIVERY_FEE\"\n                  - \"ITEM\"\n              targetId:\n                type: \"string\"\n                description: \"Only mandatory for `target` = `ITEM`.\"\n              sponsorshipValues:\n                description: \"Values sponsored by either party. The sum of the amounts listed in this atribute must match the value informed in the `amount` atribute above.\"\n                type: \"array\"\n                items:\n                  type: \"object\"\n                  required: [\"name\", \"value\"]\n                  properties:\n                    name:\n                      type: \"string\"\n                      enum:\n                        - \"MARKETPLACE\"\n                        - \"MERCHANT\"\n                    amount:\n                      type: \"object\"\n                      description: Discount amount given by the sponsor.\n                      allOf:\n                        - $ref: \"#/components/schemas/Price\"\n        total:\n          type: \"object\"\n          required: [\"items\", \"otherFees\", \"orderAmount\", \"discount\"]\n          description: \"Set of fields with the sum of the values previously described in the order.\"\n          properties:\n            itemsPrice:\n              type: \"object\"\n              description: \"Sum of the total price of the items listed in the `items` attribute.\"\n              allOf:\n                - $ref: \"#/components/schemas/Price\"\n            otherFees:\n              type: \"object\"\n              description: \"Sum of the total value of other fees listed in the `otherFees` attribute. If there isn't one, use 0.\"\n              allOf:\n                - $ref: \"#/components/schemas/Price\"\n            discount:\n              type: \"object\"\n              description: \"Sum of any discounts that may be listed in the `discounts` attribute. If there isn't one, use 0.\"\n              allOf:\n                - $ref: \"#/components/schemas/Price\"\n            orderAmount:\n              type: \"object\"\n              description: \"The final value of the order (itemsPrice + otherFees - discounts). \"\n              allOf:\n                - $ref: \"#/components/schemas/Price\"\n        payments:\n          type: \"object\"\n          required: [\"prepaid\", \"pending\", \"methods\"]\n          description: \"All the description of the payment, such as methods, pre-payments, change, etc.\"\n          properties:\n            prepaid:\n              type: \"number\"\n              format: \"decimal\"\n              description: \"Amount paid in advance.\"\n            pending:\n              type: \"number\"\n              format: \"decimal\"\n              description: \"Amount that is still to be paid.\"\n            methods:\n              type: \"array\"\n              description: \"The payment method used. Whether it was online, on delivery, credit card, voucher, cash, etc.\"\n              items:\n                type: \"object\"\n                required: [\"value\", \"currency\", \"type\", \"method\"]\n                properties:\n                  value:\n                    type: \"number\"\n                    format: \"decimal\"\n                    description: \"Price value. 4 decimals places are accepted\"\n                  currency:\n                    allOf:\n                      - $ref: \"#/components/schemas/Price/properties/currency\"\n                  type:\n                    type: \"string\"\n                    description: \"`PREPAID` if the payment was made through some platform, or `PENDING` if it going to be paid on delivery or in cash, for example.\"\n                    enum:\n                      - \"PREPAID\"\n                      - \"PENDING\"\n                  method:\n                    type: \"string\"\n                    enum:\n                      - \"CREDIT\"\n                      - \"DEBIT\"\n                      - \"MEAL_VOUCHER\"\n                      - \"FOOD_VOUCHER\"\n                      - \"DIGITAL_WALLET\"\n                      - \"PIX\"\n                      - \"CASH\"\n                      - \"CREDIT_DEBIT\"\n                      - \"COUPON\"\n                      - \"REDEEM\"\n                      - \"PREPAID_REDEEM\"\n                      - \"OTHER\"\n                  methodInfo:\n                    type: \"string\"\n                    description: |-\n                      Additional information regarding the payment method.  \n                      It can be used to indicate some useful information of the chosen payment method, such as the name of the wallet, the card brand or an authorization number.  \n\n                      This field can be used for any `method` entered, but it is highly recommended to fill it in when the chosen `method` is `OTHER`.\n                  changeFor:\n                    type: \"number\"\n                    format: \"decimal\"\n                    description: |- \n                      Indicates the total that will be paid in cash by the customer and that should be considered for the calculation of the change   \n                      (ex. customer will pay a $43 order with a $50 bill. Then 50.00 must be entered.). \n                      \n                      Only mandatory when `method` is `CASH`.\n        customer:\n          type: \"object\"\n          required:\n            [id, \"phone\", \"documentNumber\", \"name\", \"ordersCountOnMerchant\"]\n          description: \"Customer related information.\"\n          properties:\n            id:\n              type: \"string\"\n              format: \"UUID\"\n              description: \"A unique identifier related to the consumer. If the Ordering Application does not have an Id for the customer, this Id can be generated when creating the order. \"\n            phone:\n              type: \"object\"\n              description: \"Customer's phone. Here you can enter the customer's phone number directly (provided that the customer has given permission for this data to be shared, according to local policies) or another phone number (such as the ordering application's call center phone number) where the merchant can communicate about order issues that affect the customer (such as health issues).\"\n              required: [\"number\"]\n              properties:\n                number:\n                  type: \"string\"\n                extension:\n                  type: \"string\"\n            documentNumber:\n              description: \"Customer document. This document is mandatory for dealing with tax issues.\"\n              type: \"string\"\n            name:\n              type: \"string\"\n              description: \"Customer's name.\"\n            ordersCountOnMerchant:\n              description: \"Total number of orders that the customer already placed within the merchant.\"\n              type: \"number\"\n              format: \"decimal\"\n        schedule:\n          type: \"object\"\n          description: \"Information for scheduled orders. Required if `orderTiming` is `SCHEDULED`.\"\n          required: [\"scheduledDateTimeStart\", \"scheduledDateTimeEnd\"]\n          properties:\n            scheduledDateTimeStart:\n              type: \"string\"\n              format: date-time\n              description: \"Date and time for when the order is ready. It can be calculated by the **Ordering Application** using the average preparation time of the dishes. Default is the same time as order creation time. \\n\\n(UTC date-time in ISO timestamp format).\"\n            scheduledDateTimeEnd:\n              type: \"string\"\n              format: date-time\n              description: \"Date and time for when the order is ready. It can be calculated by the **Ordering Application** using the average preparation time of the dishes. Default is the same time as order creation time. \\n\\n(UTC date-time in ISO timestamp format).\"\n        delivery:\n          type: \"object\"\n          description: \"Information for DELIVERY orders. Required if the chosen `type` is `DELIVERY`.\"\n          required:\n            [\"deliveredBy\", \"deliveryAddress\", \"estimatedDeliveryDateTime\"]\n          properties:\n            deliveredBy:\n              type: \"string\"\n              enum:\n                - \"MERCHANT\"\n                - \"MARKETPLACE\"\n            deliveryAddress:\n              type: \"object\"\n              description: \"The address to which the order will be delivered.\"\n              required:\n                [\n                  \"country\",\n                  \"street\",\n                  \"formattedAddress\",\n                  \"number\",\n                  \"city\",\n                  \"postalCode\",\n                  \"coordinates\",\n                  \"district\",\n                  \"state\",\n                ]\n              properties:\n                country:\n                  type: \"string\"\n                  pattern: \"^[A-Z]{2}$\"\n                  description: \"Two-letter [ISO 3166-1 alpha-2](https://www.iso.org/standard/72482.html) country code.\"\n                  example: \"BR\"\n                state:\n                  type: \"string\"\n                  description: \"State or country subdivision. It is recommended (but not required) that you use the [ISO 3166-2](https://www.iso.org/standard/72483.html) representation. \"\n                  example: \"BR-SP\"\n                city:\n                  type: \"string\"\n                  description: \"City name.\"\n                  example: \"São Paulo\"\n                district:\n                  type: \"string\"\n                  description: \"Neighborhood or District.\"\n                  example: \"Moema\"\n                street:\n                  type: \"string\"\n                  description: \"Street name.\"\n                  example: \"Plaza Avenue\"\n                number:\n                  type: \"string\"\n                  description: \"Street number.\"\n                  example: \"100\"\n                complement:\n                  type: \"string\"\n                  description: \"Address complement.\"\n                  example: \"BL 02 AP 31\"\n                reference:\n                  type: \"string\"\n                  description: \"Address reference.\"\n                  example: \"Yellow House\"\n                formattedAddress:\n                  type: \"string\"\n                  description: \"Full Formated Address Text\"\n                  example: \"Plaza Avenue, 100, BL 02 AP 31, Moema - São Paulo, SP - Brazil\"\n                postalCode:\n                  type: \"string\"\n                  description: \"Postal Code\"\n                  example: \"20111-000\"\n                coordinates:\n                  type: \"object\"\n                  required: [\"latitude\", \"longitude\"]\n                  properties:\n                    latitude:\n                      type: \"number\"\n                      format: \"float\"\n                      description: \"Latitude in degrees. Values are restricted to the range [[-90, 90]].\\n\\n\\n\\nThe precision should be **at least 5 decimal places (multipleOf: 0.00001)**.\"\n                      example: -23.54823\n                    longitude:\n                      type: \"number\"\n                      format: \"float\"\n                      description: \"Longitude in degrees. Values are restricted to the range [[-180, 180]].\\n\\n\\n\\nThe precision should be **at least 5 decimal places (multipleOf: 0.00001)**.\"\n                      example: -46.63632\n            estimatedDeliveryDateTime:\n              type: \"string\"\n              format: date-time\n              description: \"Estimated delivery date and time. The same date showed to the customer, in the **Ordering Application** interface. \\n\\n(UTC date-time in ISO timestamp format).\"\n            deliveryDateTime:\n              type: \"string\"\n              format: date-time\n              description: \"Delivery date. The date time that the delivery actually took place. \\n\\n(UTC date-time in ISO timestamp format).\"\n        takeout:\n          type: \"object\"\n          description: \"Information for TAKEOUT orders. Required if the chosen `type` is `TAKEOUT`.\"\n          required: [\"mode\", \"takeoutDateTime\"]\n          properties:\n            mode:\n              type: \"string\"\n              enum:\n                - \"DEFAULT\"\n                - \"PICKUP_AREA\"\n            takeoutDateTime:\n              type: \"string\"\n              format: date-time\n              description: \"Takeout date and time. It can be calculated by the **Ordering Application** using the average preparation time of the dishes. Default is the same time as order creation time. \\n\\n(UTC date-time in ISO timestamp format).\"\n        indoor:\n          type: \"object\"\n          description: \"Information for INDOOR orders. Required if the chosen `type` is `INDOOR`.\"\n          required: [\"mode\", \"indoorDateTime\"]\n          properties:\n            mode:\n              type: \"string\"\n              description: |-\n                Indoor mode identifier:\n\n                - `DEFAULT`: Used for orders placed in the **Ordering Application** to be consumed inside the merchant without a specific location.\n\n                - `PLACE`: Used for orders placed in the **Ordering Application** to be consumed inside the merchant at a specific location already specified, such as a **table** or a **counter**.\n              enum:\n                - \"DEFAULT\"\n                - \"PLACE\"\n            indoorDateTime:\n              type: \"string\"\n              format: date-time\n              description: \"Date and time for when the order is ready. It can be calculated by the **Ordering Application** using the average preparation time of the dishes. Default is the same time as order creation time. \\n\\n(UTC date-time in ISO timestamp format).\"\n            place:\n              type: \"string\"\n              description: \"Place identifier (Required if mode is `PLACE`)\"\n        extraInfo:\n          type: \"string\"\n          description: \"Extra information, if necessary.\"\n\n    OrderConfirmed:\n      type: \"object\"\n      title: \"Order Confirmed\"\n      required: [\"createdAt\", \"orderExternalCode\"]\n      properties:\n        reason:\n          type: \"string\"\n          description: \"Free field for more information about the order confirmation, such as which employee accepted the order, for example.\"\n        createdAt:\n          type: \"string\"\n          format: date-time\n          description: \"Order creation date and time. \\n\\n(UTC date-time in ISO timestamp format).\"\n        orderExternalCode:\n          type: \"string\"\n          description: \"External order code, which can be used by merchant or marketplace.\"\n\n    RequestCancelled:\n      type: \"object\"\n      title: \"Request Cancelled\"\n      required: [\"reason\", \"code\", \"mode\"]\n      properties:\n        reason:\n          type: \"string\"\n          description: \"Open text field indicating the reason for the cancellation.\"\n        code:\n          type: \"string\"\n          enum:\n            - SYSTEMIC_ISSUES\n            - DUPLICATE_APPLICATION\n            - UNAVAILABLE_ITEM\n            - RESTAURANT_WITHOUT_DELIVERY_MAN\n            - OUTDATED_MENU\n            - ORDER_OUTSIDE_THE_DELIVERY_AREA\n            - BLOCKED_CUSTOMER\n            - OUTSIDE_DELIVERY_HOURS\n            - INTERNAL_DIFFICULTIES_OF THE RESTAURANT\n            - RISK_AREA\n        mode:\n          type: \"string\"\n          enum:\n            - \"AUTO\"\n            - \"MANUAL\"\n        outOfStockItems:\n          type: \"array\"\n          description: \"Items that are not in the merchant's inventory.\"\n          items:\n            format: UUID\n            type: string\n        invalidItems:\n          type: \"array\"\n          description: \"Items that do not exist in the merchant's inventory.\"\n          items:\n            format: \"UUID\"\n            type: string\n\n    RequestDenied:\n      type: \"object\"\n      title: \"Request Cancelled\"\n      required: [\"reason\", \"code\"]\n      properties:\n        reason:\n          type: \"string\"\n          description: \"Open text field indicating the reason for the cancellation.\"\n        code:\n          type: \"string\"\n          enum:\n            - \"DISH_ALREADY_DONE\"\n            - \"OUT_FOR_DELIVERY\"\n\n    Event:\n      type: \"object\"\n      title: \"Event\"\n      required: [\"eventId\", \"eventType\", \"orderId\", \"orderURL\", \"createdAt\"]\n      discriminator:\n        propertyName: eventType\n        mapping:\n          CREATED: \"#/components/schemas/EventMetadata\"\n          CONFIRMED: \"#/components/schemas/EventMetadataConfirm\"\n          READY_FOR_PICKUP: \"#/components/schemas/EventMetadata\"\n          DISPATCHED: \"#/components/schemas/EventMetadata\"\n          PICKUP_AREA_ASSIGNED: \"#/components/schemas/EventMetadataPickup\"\n          CONCLUDED: \"#/components/schemas/EventMetadata\"\n          ORDER_CANCELLATION_REQUESTED: \"#/components/schemas/EventMetadataCancel\"\n          CANCELLATION_REQUESTED: \"#/components/schemas/EventMetadataCancel\"\n          CANCELLATION_REQUEST_DENIED: \"#/components/schemas/EventMetadataCancel\"\n          CANCELLED: \"#/components/schemas/EventMetadataCancel\"\n      properties:\n        eventId:\n          type: \"string\"\n          format: \"UUID\"\n          description: \"A unique identifier of the event.\"\n        eventType:\n          type: \"string\"\n          description: \"The event type. **[Click here](#operation/pollingEvents)** for definitions of each type.\"\n          enum:\n            - \"CREATED\"\n            - \"CONFIRMED\"\n            - \"DISPATCHED\"\n            - \"READY_FOR_PICKUP\"\n            - \"PICKUP_AREA_ASSIGNED\"\n            - \"CONCLUDED\"\n            - \"CANCELLATION_REQUESTED\"\n            - \"CANCELLATION_REQUEST_DENIED\"\n            - \"CANCELLED\"\n            - \"ORDER_CANCELLATION_REQUEST\"\n        orderId:\n          allOf:\n            - $ref: \"#/components/schemas/Order/properties/id\"\n        orderURL:\n          type: \"string\"\n          format: \"uri\"\n          description: \"The URL to get the order details\"\n        createdAt:\n          type: \"string\"\n          format: date-time\n          description: \"Order creation date and time. \\n\\n(UTC date-time in ISO timestamp format).\"\n        sourceAppId:\n          type: \"string\"\n          format: UUID\n          description: \"This field must be filled in with the AppId of the **Ordering Application** that originated the order. This field is to help the applications that will work as a Hub, intermediating the requests from the **Ordering Application** with the **Software Service**.\"\n\n    EventMetadataCancel:\n      description: Metadata\n      required: [\"metadata\"]\n      allOf:\n        - $ref: \"#/components/schemas/Event\"\n        - type: object\n        - properties:\n            metadata:\n              required: [\"reason\", \"code\"]\n              type: object\n              description: \"Information related to the Event Type\"\n              properties:\n                reason:\n                  type: \"string\"\n                  description: \"Reason for the cancellation\"\n                code:\n                  type: \"string\"\n                  description: \"Cancelation reason code\"\n                  enum:\n                    - CONSUMER_CANCELLATION_REQUESTED\n                    - OTHER_CANCELLATION_REASON\n                clientId:\n                  type: \"string\"\n                  description: \"The ID of the client system that generated the action that resulted in this event (to be used with application with multiple stations).\"\n\n    EventMetadata:\n      description: Metadata\n      allOf:\n        - $ref: \"#/components/schemas/Event\"\n\n    EventMetadataPickup:\n      description: Metadata\n      allOf:\n        - $ref: \"#/components/schemas/Event\"\n        - type: object\n        - properties:\n            metadata:\n              type: object\n              description: \"Information related to the Event Type\"\n              required: [\"pickupArea\"]\n              properties:\n                pickupArea:\n                  type: \"string\"\n                  description: \"Information about the pickup area that the merchant needs to deliver the order. Eg: Parking Lot Number\"\n\n    EventMetadataConfirm:\n      description: Metadata\n      required: [\"metadata\"]\n      allOf:\n        - $ref: \"#/components/schemas/Event\"\n        - type: object\n        - properties:\n            metadata:\n              type: object\n              description: \"Information related to the Event Type\"\n              properties:\n                # expectedPreparationStartTime: Removed field. See Issue (https://github.com/Abrasel-Nacional/Open-Delivery-Beta-Test/issues/7)\n                #   type: \"string\"\n                #   format: \"date-time\"\n                #   description: \"Expected preparation start time after Order Confirmation. This can be used by the **Ordering Application** to inform the merchant to delay the start of the preparation for any reason.\"\n                clientId:\n                  type: \"string\"\n                  description: \"The ID of the client system that generated the action that resulted in this event (to be used with application with multiple stations)\"\n\n    #Common\n\n    Address:\n      type: \"object\"\n      title: \"Address\"\n      required:\n        [\n          \"country\",\n          \"state\",\n          \"city\",\n          \"district\",\n          \"street\",\n          \"number\",\n          \"postalCode\",\n          \"complement\",\n          \"latitude\",\n          \"longitude\",\n        ]\n      properties:\n        \"country\":\n          type: \"string\"\n          pattern: \"^[A-Z]{2}$\"\n          description: \"Two-letter [ISO 3166-1 alpha-2](https://www.iso.org/standard/72482.html) country code.\"\n          example: \"BR\"\n        state:\n          type: \"string\"\n          description: \"State or country subdivision. It is recommended (but not required) that you use the [ISO 3166-2](https://www.iso.org/standard/72483.html) representation. \"\n          example: \"BR-SP\"\n        \"city\":\n          type: \"string\"\n          description: \"City name.\"\n          example: \"São Paulo\"\n        \"district\":\n          type: \"string\"\n          description: \"District or Neighborhood name.\"\n          example: \"Moema\"\n        \"street\":\n          type: \"string\"\n          description: \"Street Name.\"\n          example: \"Plaza Avenue\"\n        \"number\":\n          type: \"string\"\n          description: \"Street Number.\"\n          example: \"100\"\n        \"postalCode\":\n          type: \"string\"\n          description: \"Postal Code\"\n          example: \"20111-000\"\n        \"complement\":\n          type: \"string\"\n          description: \"Address complement.\"\n          example: \"BL 02 AP 31\"\n        \"reference\":\n          type: \"string\"\n          description: \"Address reference.\"\n          example: \"Yellow House\"\n        \"latitude\":\n          type: \"number\"\n          format: \"float\"\n          description: \"Latitude in degrees. Values are restricted to the range [[-90, 90]].\\n\\n\\n\\nThe precision should be **at least 5 decimal places (multipleOf: 0.00001)**.\"\n          example: -23.54809\n        \"longitude\":\n          type: \"number\"\n          format: \"float\"\n          description: \"Longitude in degrees. Values are restricted to the range [[-180, 180]].\\n\\n\\n\\nThe precision should be **at least 5 decimal places (multipleOf: 0.00001)**.\"\n          example: -46.63638\n\n    AddressLogistics:\n      type: \"object\"\n      title: \"Address\"\n      required:\n        [\n          \"country\",\n          \"state\",\n          \"city\",\n          \"district\",\n          \"street\",\n          \"number\",\n          \"postalCode\",\n          \"complement\",\n        ]\n      properties:\n        \"country\":\n          type: \"string\"\n          pattern: \"^[A-Z]{2}$\"\n          description: \"Two-letter [ISO 3166-1 alpha-2](https://www.iso.org/standard/72482.html) country code.\"\n          example: \"BR\"\n        state:\n          type: \"string\"\n          description: \"State or country subdivision. It is recommended (but not required) that you use the [ISO 3166-2](https://www.iso.org/standard/72483.html) representation. \"\n          example: \"BR-SP\"\n        \"city\":\n          type: \"string\"\n          description: \"City name.\"\n          example: \"São Paulo\"\n        \"district\":\n          type: \"string\"\n          description: \"District or Neighborhood name.\"\n          example: \"Moema\"\n        \"street\":\n          type: \"string\"\n          description: \"Street Name.\"\n          example: \"Plaza Avenue\"\n        \"number\":\n          type: \"string\"\n          description: \"Street Number.\"\n          example: \"100\"\n        \"postalCode\":\n          type: \"string\"\n          description: \"Postal Code\"\n          example: \"20111-000\"\n        \"complement\":\n          type: \"string\"\n          description: \"Address complement.\"\n          example: \"BL 02 AP 31\"\n        \"reference\":\n          type: \"string\"\n          description: \"Address reference.\"\n          example: \"Yellow House\"\n        \"latitude\":\n          type: \"number\"\n          format: \"float\"\n          description: \"Latitude in degrees. Values are restricted to the range [[-90, 90]].\\n\\n\\n\\nThe precision should be **at least 5 decimal places (multipleOf: 0.00001)**.\"\n          example: -23.54809\n        \"longitude\":\n          type: \"number\"\n          format: \"float\"\n          description: \"Longitude in degrees. Values are restricted to the range [[-180, 180]].\\n\\n\\n\\nThe precision should be **at least 5 decimal places (multipleOf: 0.00001)**.\"\n          example: -46.63638\n\n    ContactPhones:\n      type: \"object\"\n      title: \"Contact Phones\"\n      required: [\"commercialNumber\"]\n      properties:\n        \"commercialNumber\":\n          type: \"string\"\n          description: \"Telephone number of the merchant\"\n          example: \"11999999999\"\n        \"whatsappNumber\":\n          type: \"string\"\n          description: \"Whatsapp number of the merchant\"\n          example: \"11998888888\"\n\n    Price:\n      type: \"object\"\n      title: \"Price\"\n      required: [\"value\", \"currency\"]\n      properties:\n        value:\n          type: \"number\"\n          format: \"decimal\"\n          description: \"Price value. 4 decimals places are accepted\"\n          example: 40\n        currency:\n          type: \"string\"\n          pattern: \"^[A-Z]{3}$\"\n          description: \"The 3-letter ISO 4217 currency code.\"\n          example: \"BRL\"\n\n    Repository:\n      type: \"object\"\n      title: \"Repository\"\n      required:\n        [\n          \"document\",\n          \"corporateName\",\n          \"postalCode\",\n          \"email\",\n          \"website\",\n          \"baseApiUrl\",\n          \"TTL\",\n          \"hostCompanyDocument\",\n        ]\n      properties:\n        document:\n          type: \"string\"\n          description: \"Company registration document\"\n          pattern: \"/^\\\\d{14}$/\"\n        corporateName:\n          type: \"string\"\n          description: \"Corporate Name\"\n          maxLength: 500\n        postalCode:\n          type: \"string\"\n          description: \"Postal Code\"\n        email:\n          type: \"string\"\n          description: \"Contact Email. It is recommended that a contact be made available to deal with specific **Open Delivery** issues.\"\n        website:\n          type: \"string\"\n          format: \"URL\"\n          description: \"Company Website. It is recommended to have a website (or landing page) with information about how the company works with Open Delivery.\"\n        baseApiUrl:\n          type: \"string\"\n          format: \"URL\"\n          description: \"Base URL of the endpoints with the company's data. It will be used by the indexing system to search the establishments under the responsibility of the menu software (see endpoint) and to search public menus (see endpoint).\"\n        hostCompanyDocument:\n          type: \"string\"\n          description: \"**Software Service** registration document that provides the merchant information.\"\n          pattern: \"/^\\\\d{14}$/\"\n        TTL:\n          type: \"integer\"\n          description: \"Time to Live (in seconds).\n            \\nA new request must be done when the TTL expires.\"\n\n    Error:\n      type: object\n      required: [\"title\", \"status\"]\n      properties:\n        title:\n          type: string\n          description: \"Short description of the problem.\"\n          example: \"Unexpected error\"\n        status:\n          type: integer\n          description: \"HTTP code of the returned status.\"\n          example: 500\n\n    Image:\n      description: Image Object\n      type: object\n      required: [\"URL\", \"CRC\"]\n      properties:\n        URL:\n          type: \"string\"\n          format: \"uri\"\n          description:\n            \"URL pointing to an image of the merchant logo.\\n\\n Image requirements:\n            \\n - Hosted on a secure connection (SSL).\n            \\n - File size must be less than 10MB.\n            \\n - Image must be in JPEG, PNG or GIF format.\n            \\n - Both width and height must be between 320px and 1144px.\"\n          example: \"https://food-company.com/image.jpg\"\n        CRC-32:\n          type: string\n          format: \"CRC32\"\n          description: \"CRC-32 of the image file. This field can be used to check for changes in the image file.\"\n          example: \"96b41025\"\n\n    MerchantAPIInfo:\n      type: \"object\"\n      required: [\"baseURL\"]\n      description: \"Information about the endpoints that are hosted at the **Software Service**.\"\n      properties:\n        getMerchantURL:\n          type: object\n          description: \"Information about the merchant's **Software Service's** [GET /v1/merchant](#operation/getMerchant) access. This endpoint has the necessary information for the **Ordering Application** to be able to make the merchant's available on their plataform.\"\n          properties:\n            baseURL:\n              type: \"string\"\n              format: \"uri\"\n              description: \"The URL for accessing the endpoint.\"\n            apiKey:\n              type: \"string\"\n              description: \"The API_KEY for accessing the endpoint (see [AUTHENTICATION](#tag/authentication) section form more information).\"\n        ordersWebhookURL:  \n          type: string\n          format: \"uri\"\n          description: \"Information about the merchant's **Software Service's** [POST /v1/orderUpdate](#operation/newEvent) webhook access. This is where the **Ordering Application** will sent the order's events to the **Software Service** as they happen.\"\n  \n  examples:\n    tokenExample:\n      summary: New Token\n      value:\n        client_id: \"user1234\"\n        client_secret: \"ty23yhmas4ldfias9834023jsdf032j023f02\"\n        grant_type: \"client_credentials\"\n\n    orderExample:\n      summary: \"Sample Order\"\n      value:\n        id: \"4818e72f-2304-466f-9fe7-af08f34ac4ed\"\n        type: \"DELIVERY\"\n        displayId: \"12345\"\n        createdAt: \"2021-05-27T19:38:10.332Z\"\n        orderTiming: \"INSTANT\"\n        preparationStartDateTime: \"2021-05-27T19:45:10.332Z\"\n        merchant:\n          id: \"7fb59cb8-5808-40c8-b967-1b3f20ee39cd\"\n          name: \"Plaza Pizza\"\n        items:\n          [\n            {\n              id: 732bd31e-77fc-47ee-88ee-a0437f97b198\",\n              index: 0,\n              name: \"Medium - 2 flavors\",\n              externalCode: \"22\",\n              unit: \"UNIT\",\n              quantity: 1,\n              specialInstructions: \"Do not put onions.\",\n              unitPrice: { value: 43.00, currency: \"BRL\" },\n              optionsPrice: { value: 50.00, currency: \"BRL\" },\n              totalPrice: { value: 50.00, currency: \"BRL\" },\n              options:\n                [\n                  {\n                    id: e5232f14-430c-4a94-8ff6-289d5a16a87a\",\n                    name: \"1/2 Pepperoni\",\n                    externalCode: \"23\",\n                    unit: \"UNIT\",\n                    quantity: 1,\n                    unitPrice: { value: 50.00, currency: \"BRL\" },\n                    price: { value: 50.00, currency: \"BRL\" },\n                    specialInstructions: \"None\",\n                  },\n                  {\n                    id: 7e507cab-7235-4f75-a0c2-e955fb2f2048\",\n                    name: \"1/2 Mozzarella\",\n                    externalCode: \"24\",\n                    unit: \"UNIT\",\n                    quantity: 1,\n                    unitPrice: { value: 30.00, currency: \"BRL\" },\n                    price: { value: 30.00, currency: \"BRL\" },\n                    specialInstructions: \"None\",\n                  },\n                ],\n            },\n          ]\n        otherFees:\n          [\n            {\n              name: \"Delivery\",\n              type: \"DELIVERY_FEE\",\n              receivedBy: \"MARKETPLACE\",\n              receiverDocument: \"1234\",\n              price: { value: 5.00, currency: \"BRL\" },\n              observation: \"None\",\n            },\n          ]\n        discounts:\n          [\n            {\n              amount: { value: 20.00, currency: \"BRL\" },\n              target: \"DELIVERY_FEE\",\n              sponsorshipValues:\n                [\n                  {\n                    name: \"MARKETPLACE\",\n                    amount: { value: 10.00, currency: \"BRL\" },\n                  },\n                  {\n                    name: \"MERCHANT\",\n                    amount: { value: 10.00, currency: \"BRL\" },\n                  },\n                ],\n            },\n          ]\n        total:\n          {\n            itemsPrice: { value: 50.00, currency: \"BRL\" },\n            otherFees: { value: 5.00, currency: \"BRL\" },\n            discount: { value: 20.00, currency: \"BRL\" },\n            orderAmount: { value: 35.50, currency: \"BRL\" },\n          }\n        payments:\n          prepaid: 55.00\n          pending: 0\n          methods:\n            [\n              {\n                value: 55.00,\n                currency: \"BRL\",\n                method: \"FOOD_VOUCHER\",\n                methodInfo: \"None\",\n              },\n            ]\n        customer:\n          id: d9730653-a8ba-4e85-8dbb-b5697e6ae8d5\"\n          phone:\n            number: \"11999999999\"\n            extension: \"0\"\n          documentNumber: \"12345\"\n          name: \"John\"\n          ordersCountOnMerchant: 1\n        delivery:\n          deliveredBy: \"MERCHANT\"\n          deliveryAddress:\n            country: \"BR\"\n            streetName: \"Gomes de Carvalho Street\"\n            formattedAddress: \"string\"\n            streetNumber: \"100\"\n            city: \"São Paulo\"\n            postalCode: \"20111-000\"\n            coordinates:\n              latitude: -23.54754\n              longitude: -46.63611\n            neighborhood: \"Moema\"\n            state: \"SP\"\n            complement: \"102\"\n        estimatedDeliveryDateTime: \"2021-05-27T20:45:10.332Z\"\n        deliveryDateTime: \"2021-05-27T20:47:10.443Z\"\n        extraInfo: \"None\"\n\n    merchantExample:\n      summary: \"Merchant Example\"\n      value:\n        lastUpdate: \"2021-05-27T20:45:10.332Z\"\n        TTL: 500\n        id: \"22815773000169-dbc7e35a-c936-4665-9e13-eb55eb8b6824\"\n        status: \"AVAILABLE\"\n        basicInfo:\n          name: \"Pizza Plaza\"\n          document: \"22815773000169\"\n          corporateName: \"Food Company\"\n          description: \"Food company specializing in pizzas.\"\n          averageTicket: 90.00\n          averagePreparationTime: 20\n          minOrderValue:\n            value: 20.00\n            currency: \"BRL\"\n          merchantType: \"RESTAURANT\"\n          merchantCategories: [\"PIZZA\", \"FAMILY_MEALS\", \"PREMIUM\"]\n          address:\n            country: \"BR\"\n            state: \"SP\"\n            city: \"São Paulo\"\n            district: \"Moema\"\n            street: \"Plaza Avenue\"\n            number: \"100\"\n            postalCode: \"20111-000\"\n            complement: \"2001\"\n            reference: \"Yellow house\"\n            latitude: -23.54804\n            longitude: -46.63630\n          contactEmails: [\"food@company.com\"]\n          contactPhones:\n            { commercialNumber: \"11999999999\", whatsappNumber: \"11998888888\" }\n          logoImage:\n            URL: \"https://food-company.com/logo.png\"\n            CRC-32: 432098ASDSR\n          bannerImage:\n            URL: \"https://food-company.com/banner.png\"\n            CRC-32: 09345UIHF98\n          createdAt: \"2021-05-10T20:45:10.332Z\"\n        services:\n          [\n            {\n              id: \"f078e8e2-3044-4eec-b4a8-8359810de123\",\n              status: \"AVAILABLE\",\n              serviceType: \"DELIVERY\",\n              menuId: \"f627ccdc-6789-456f-a782-148538d5035b\",\n              serviceArea:\n                {\n                  \"id\": \"f078e8e2-3044-4eec-b4a8-8359810de124\",\n                  \"polygon\":\n                    [\n                      {\n                        \"geoCoordinates\":\n                          [\n                            { \"latitude\": -20.23330, \"longitude\": -20.83830 },\n                            { \"latitude\": -20.85008, \"longitude\": -21.00007 },\n                            { \"latitude\": -21.15002, \"longitude\": -21.95483 },\n                          ],\n                        \"price\": { \"value\": 5, \"currency\": \"BRL\" },\n                        \"estimateDeliveryTime\": 25,\n                      },\n                    ],\n                  \"geoRadius\":\n                    {\n                      \"geoMidpointLatitude\": -20.2333,\n                      \"geoMidpointLongitude\": -20.8383,\n                      \"radius\":\n                        [\n                          {\n                            \"size\": 10,\n                            \"price\": { \"value\": 5.50, \"currency\": \"BRL\" },\n                            \"estimateDeliveryTime\": 10,\n                          },\n                        ],\n                    },\n                },\n              serviceHours:\n                {\n                  id: \"fb093d8c-2ca5-40fb-afcf-472fbdae81cc\",\n                  weekHours:\n                    [\n                      {\n                        dayOfWeek:\n                          [\n                            \"MONDAY\",\n                            \"TUESDAY\",\n                            \"WEDNESDAY\",\n                            \"THURSDAY\",\n                            \"FRIDAY\",\n                          ],\n                        timePeriods:\n                          {\n                            startTime: \"10:00:00.000Z\",\n                            endTime: \"18:00:00.000Z\",\n                          },\n                      },\n                      {\n                        dayOfWeek: [\"SATURDAY\", \"SUNDAY\"],\n                        timePeriods:\n                          {\n                            startTime: \"14:00:00.000Z\",\n                            endTime: \"18:00:00.000Z\",\n                          },\n                      },\n                    ],\n                  holidayHours:\n                    [\n                      {\n                        date: \"2021-05-27\",\n                        timePeriods:\n                          {\n                            startTime: \"12:00:00.000Z\",\n                            endTime: \"17:00:00.000Z\",\n                          },\n                      },\n                    ],\n                },\n            },\n          ]\n        items:\n          [\n            {\n              id: \"732bd31e-77fc-47ee-88ee-a0437f97b198\",\n              name: \"Medium - 2 flavors\",\n              description: \"Medium two-flavored pizza.\",\n              externalCode: \"23\",\n              image:\n                {\n                  URL: \"https://www.food-place.com/images/medium-pizza.png\",\n                  CRC-32: 09345UIHF98,\n                },\n              serving: 8,\n              unit: \"unit\",\n            },\n            {\n              id: \"b728fd88-4af0-43f7-956f-95c251f01ddd\",\n              name: \"Small - 1 flavor\",\n              description: \"Small one-flavored pizza.\",\n              externalCode: \"23\",\n              image:\n                {\n                  URL: \"https://www.food-place.com/images/small-pizza.png\",\n                  CRC-32: 09345UIHF98,\n                },\n              serving: 4,\n              unit: \"unit\",\n            },\n            {\n              id: \"502ecf11-0509-48ed-b63c-6211c48fd9b9\",\n              name: \"1/2 Pepperoni\",\n              description: \"Pepperoni flavored pizza with LOTS of pepperoni.\",\n              externalCode: \"23\",\n              image:\n                {\n                  URL: \"https://www.food-place.com/images/pepperoni.png\",\n                  CRC-32: 09345UIHF98,\n                },\n              nutritionalInfo:\n                {\n                  description: \"Contains preservatives\",\n                  calories: \"2000 Cal\",\n                  allergen: [\"GLUTEN\"],\n                },\n              unit: \"unit\",\n            },\n            {\n              id: 7e507cab-7235-4f75-a0c2-e955fb2f2048,\n              name: \"1/2 Mozzarella\",\n              description: \"Delicious mozzarella pizza.\",\n              externalCode: \"24\",\n              image:\n                {\n                  URL: \"https://www.food-place.com/images/mozzarella.png\",\n                  CRC-32: 09345UIHF98,\n                },\n              nutritionalInfo:\n                {\n                  description: \"Contains preservatives\",\n                  calories: \"2500 Cal\",\n                  allergen: [\"GLUTEN\", \"LACTOSE\"],\n                },\n              unit: \"unit\",\n            },\n            {\n              id: 2c0f3447-5309-49cc-a167-4eac5c664470,\n              name: \"Banana\",\n              description: \"Banana Pizza with cream.\",\n              externalCode: \"25\",\n              image:\n                {\n                  URL: \"https://www.food-place.com/images/banana.png\",\n                  CRC-32: 09345UIHF98,\n                },\n              nutritionalInfo:\n                {\n                  description: \"Contains preservatives\",\n                  calories: \"2500 Cal\",\n                  allergen: [\"GLUTEN\"],\n                },\n              unit: \"unit\",\n            },\n          ]\n        menus:\n          [\n            {\n              id: \"f627ccdc-6789-456f-a782-148538d5035b\",\n              name: \"Pizzas\",\n              description: \"Pizza menu\",\n              externalCode: \"123\",\n              disclaimer: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n              categoryId:\n                [\n                  \"92fad022-2c28-4239-a026-989f5b555cb7\",\n                  \"6bb71850-1d40-49f9-8046-b13e068c0cca\",\n                ],\n            },\n          ]\n        categories:\n          [\n            {\n              id: \"92fad022-2c28-4239-a026-989f5b555cb7\",\n              index: 0,\n              name: \"Salted Pizza\",\n              description: \"Salted pizza flavors.\",\n              image:\n                {\n                  URL: \"https://food-company.com/category1.png\",\n                  CRC-32: 09345UIHF98,\n                },\n              externalCode: \"13\",\n              status: \"AVAILABLE\",\n              availabilityId: [\"11d063c4-73a7-4f87-a0eb-71636cc02029\"],\n              itemOfferId: [\"f080cfb3-5c4a-4eb7-907d-2de3bbb5dfb9\"],\n            },\n            {\n              id: \"6bb71850-1d40-49f9-8046-b13e068c0cca\",\n              index: 1,\n              name: \"Sweeted Pizza\",\n              description: \"Sweeted pizza flavors.\",\n              image:\n                {\n                  URL: \"https://food-company.com/category2.png\",\n                  CRC-32: 09345UIHF98,\n                },\n              externalCode: \"13\",\n              status: \"AVAILABLE\",\n              availabilityId: [\"11d063c4-73a7-4f87-a0eb-71636cc02029\"],\n              itemOfferId: [\"377b99ba-5413-43d1-b875-7cdcaa72860e\"],\n            },\n          ]\n        itemOffers:\n          [\n            {\n              id: f080cfb3-5c4a-4eb7-907d-2de3bbb5dfb9,\n              itemId: 732bd31e-77fc-47ee-88ee-a0437f97b198,\n              index: 0,\n              price: { value: 43.00, originalValue: 43.00, currency: \"BRL\" },\n              availabilityId: [\"11d063c4-73a7-4f87-a0eb-71636cc02029\"],\n              optionGroupsId: [\"fe67e551-f42f-499a-8afb-0ed893c71fa3\"],\n            },\n            {\n              id: 377b99ba-5413-43d1-b875-7cdcaa72860e,\n              itemId: 7e507cab-7235-4f75-a0c2-e955fb2f2048,\n              index: 1,\n              price: { value: 30.00, originalValue: 30.00, currency: \"BRL\" },\n              availabilityId: [\"11d063c4-73a7-4f87-a0eb-71636cc02029\"],\n              optionGroupsId: [\"c524c066-96fa-458d-b78c-3712661529b3\"],\n            },\n          ]\n        optionGroups:\n          [\n            {\n              id: \"fe67e551-f42f-499a-8afb-0ed893c71fa3\",\n              index: 0,\n              name: \"Choose your salted pizza flavor\",\n              description: \"Choose your salted pizza flavor.\",\n              externalCode: \"12\",\n              status: \"AVAILABLE\",\n              minPermitted: 2,\n              maxPermitted: 2,\n              options:\n                [\n                  {\n                    id: \"e5232f14-430c-4a94-8ff6-289d5a16a87a\",\n                    itemId: \"502ecf11-0509-48ed-b63c-6211c48fd9b9\",\n                    index: 0,\n                    price:\n                      { value: 50.00, originalValue: 50.00, currency: \"BRL\" },\n                    maxPermitted: 1,\n                  },\n                  {\n                    id: \"e5232f14-430c-4a94-8ff6-289d5a16a87b\",\n                    itemId: \"7e507cab-7235-4f75-a0c2-e955fb2f2048\",\n                    index: 1,\n                    price:\n                      { value: 43.00, originalValue: 43.00, currency: \"BRL\" },\n                    maxPermitted: 1,\n                  },\n                ],\n            },\n            {\n              id: \"c524c066-96fa-458d-b78c-3712661529b3\",\n              index: 0,\n              name: \"Choose your sweeted pizza flavor\",\n              description: \"Choose your sweeted pizza flavor.\",\n              externalCode: \"12\",\n              status: \"AVAILABLE\",\n              minPermitted: 1,\n              maxPermitted: 1,\n              options:\n                [\n                  {\n                    id: \"2419d582-357f-4149-9089-12321537f147\",\n                    itemId: \"2c0f3447-5309-49cc-a167-4eac5c664470\",\n                    index: 0,\n                    price:\n                      { value: 30.00, originalValue: 30.00, currency: \"BRL\" },\n                    maxPermitted: 1,\n                  },\n                ],\n            },\n          ]\n        availabilities:\n          [\n            {\n              id: \"11d063c4-73a7-4f87-a0eb-71636cc02029\",\n              startDate: \"05/01/2021\",\n              endDate: \"05/30/2021\",\n              hours:\n                [\n                  {\n                    dayOfWeek:\n                      [\"MONDAY\", \"TUESDAY\", \"WEDNESDAY\", \"THURSDAY\", \"FRIDAY\"],\n                    timePeriods:\n                      { startTime: \"10:00:00.000Z\", endTime: \"18:00:00.000Z\" },\n                  },\n                  {\n                    dayOfWeek: [\"SATURDAY\", \"SUNDAY\"],\n                    timePeriods:\n                      { startTime: \"14:00:00.000Z\", endTime: \"18:00:00.000Z\" },\n                  },\n                ],\n            },\n          ]\n",
			"canonicalURL": "/github.com/Abrasel-Nacional/docs@156163e2a83f01bd33b3d72f5a08c016037d76ef/-/blob/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Abrasel-Nacional/docs/blob/156163e2a83f01bd33b3d72f5a08c016037d76ef/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/v1/events/acknowledgment\": post: operation \"pollingAcknowledgment\": security: parse security scheme \"OAuth2\": oauth2: flow \"clientCredentials\": at openapi.yaml:1671:21: \"tokenUrl\" MUST be in the form of a URL: parse \"oauth/token\": invalid URI for request"
}