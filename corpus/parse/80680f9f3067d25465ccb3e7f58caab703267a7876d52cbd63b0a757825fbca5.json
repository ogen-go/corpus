{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/openfigi/openapi.yml",
			"byteSize": 11854,
			"content": "openapi: 3.0.0\ninfo:\n  x-ballerina-display:\n    label: OpenFIGI\n    iconPath: \"icon.png\"\n  version: 1.4.0\n  title: OpenFIGI API\n  description: \u003e- \n    This is a generated connector for [OpenFIGI API v3](https://www.openfigi.com/api) OpenAPI Specification.\n    \n    OpenFIGI API provides capability to access multiple tools for identifying, mapping and requesting a free and open symbology dataset. \n    This user friendly platform provides the ultimate understanding for how a unique identifier combined with accurate, \n    associated metadata can eliminate redundant mapping processes, streamline the trade workflow and reduce operational risk.\n  termsOfService: 'https://openfigi.com/docs/terms-of-service'\n  x-ballerina-init-description: \u003e-\n    The connector initialization requires setting the API credentials. \n    \n    Create an [OpenFIGI account](https://www.openfigi.com/) \n    and obtain tokens following [this guide](https://www.openfigi.com/api#api-key).\n  contact:\n    name: OpenFIGI API Support\n    url: 'https://openfigi.com/api'\n    email: support@openfigi.com\n  license:\n    name: Apache 2.0\n    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'\nservers:\n  - url: 'https://api.openfigi.com/{basePath}'\n    description: Production Tier\n    variables:\n      basePath:\n        default: v3\n        enum:\n          - v1\n          - v2\n          - v3\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: X-OPENFIGI-APIKEY\n      description: \u003e-\n       All request are sent with API key using the HTTP header X-OPENFIGI-APIKEY. With a valid API key, you will be subject \n       to a higher rate-limit and request size. Sign-up for an [OpenFIGI account](https://www.openfigi.com/) to obtain an API key and Follow this link (https://www.openfigi.com/api) \n       for more details.\n  schemas:\n    Values:\n      type: object\n      properties:\n        values:\n          type: array\n          items:\n            type: string\n    NullableNumberInterval:\n      type: array\n      items:\n        type: number\n        nullable: true\n      maxItems: 2\n      minItems: 2\n      nullable: true\n      description: At least one entry should be non-null.\n    NullableDateInterval:\n      type: array\n      items:\n        type: string\n        format: date\n        nullable: true\n      maxItems: 2\n      minItems: 2\n      nullable: true\n      description: At least one entry should be non-null.\n    MappingJob:\n      type: object\n      required:\n        - idType\n        - idValue\n      description: \u003e-\n        For V3: securityType2 is required when idType is BASE_TICKER or\n        ID_EXCH_SYMBOL.  expiration is required when securityType2 is Option or\n        Warrant.  maturity is required when securityType2 is Pool.\n      properties:\n        idType:\n          type: string\n          description: Type of third party identifier\n          enum:\n            - ID_ISIN\n            - ID_BB_UNIQUE\n            - ID_SEDOL\n            - ID_COMMON\n            - ID_WERTPAPIER\n            - ID_CUSIP\n            - ID_BB\n            - ID_ITALY\n            - ID_EXCH_SYMBOL\n            - ID_FULL_EXCHANGE_SYMBOL\n            - COMPOSITE_ID_BB_GLOBAL\n            - ID_BB_GLOBAL_SHARE_CLASS_LEVEL\n            - ID_BB_SEC_NUM_DES\n            - ID_BB_GLOBAL\n            - TICKER\n            - ID_CUSIP_8_CHR\n            - OCC_SYMBOL\n            - UNIQUE_ID_FUT_OPT\n            - OPRA_SYMBOL\n            - TRADING_SYSTEM_IDENTIFIER\n            - ID_CINS\n            - ID_SHORT_CODE\n            - BASE_TICKER\n            - VENDOR_INDEX_CODE\n        idValue:\n          description: The value for the represented third party identifier\n          oneOf:\n            - type: string\n            - type: integer\n          default: string\n        exchCode:\n          description: Exchange code of the desired instrument(s) (cannot use in conjunction with micCode)\n          type: string\n          nullable: true\n        micCode:\n          description: ISO market identification code(MIC) of the desired instrument(s) (cannot use in conjunction with exchCode)\n          type: string\n          nullable: true\n        currency:\n          description: Currency associated to the desired instrument(s)\n          type: string\n          nullable: true\n        marketSecDes:\n          description: Market sector description of the desired instrument(s)\n          type: string\n          nullable: true\n        securityType:\n          description: Security type of the desired instrument(s)\n          type: string\n          nullable: true\n        securityType2:\n          description: An alternative security type of the desired instrument(s)\n          type: string\n          nullable: true\n        includeUnlistedEquities:\n          description: Set to true to include equity instruments that are not listed on an exchange\n          type: boolean\n          nullable: true\n        optionType:\n          description: Will filter instruments based on option type\n          type: string\n          enum:\n            - Put\n            - Call\n          nullable: true\n        strike:\n          $ref: '#/components/schemas/NullableNumberInterval'\n        contractSize:\n          $ref: '#/components/schemas/NullableNumberInterval'\n        coupon:\n          $ref: '#/components/schemas/NullableNumberInterval'\n        expiration:\n          $ref: '#/components/schemas/NullableDateInterval'\n        maturity:\n          $ref: '#/components/schemas/NullableDateInterval'\n        stateCode:\n          description: State code of the desired instrument(s)\n          type: string\n          enum:\n            - AB\n            - AC\n            - AH\n            - AK\n            - AL\n            - AM\n            - AR\n            - AS\n            - AT\n            - AZ\n            - BC\n            - BJ\n            - CA\n            - CB\n            - CO\n            - CQ\n            - CT\n            - CZ\n            - DC\n            - DE\n            - EH\n            - FH\n            - FI\n            - FJ\n            - FL\n            - FO\n            - FS\n            - GA\n            - GD\n            - GF\n            - GM\n            - GS\n            - GU\n            - GX\n            - GZ\n            - HA\n            - HB\n            - HE\n            - HG\n            - HI\n            - HL\n            - HN\n            - HO\n            - HS\n            - IA\n            - ID\n            - IG\n            - IK\n            - IL\n            - IN\n            - IT\n            - JL\n            - JS\n            - JX\n            - KA\n            - KC\n            - KN\n            - KO\n            - KS\n            - KT\n            - KU\n            - KY\n            - LA\n            - LN\n            - MA\n            - MB\n            - MD\n            - ME\n            - MG\n            - MI\n            - MN\n            - MO\n            - MS\n            - MT\n            - MZ\n            - NB\n            - NC\n            - ND\n            - NE\n            - NG\n            - NH\n            - NJ\n            - NL\n            - NM\n            - NN\n            - NR\n            - NS\n            - NT\n            - NU\n            - NV\n            - NW\n            - NX\n            - NY\n            - OH\n            - OK\n            - 'ON'\n            - OR\n            - OS\n            - OT\n            - OY\n            - PA\n            - PE\n            - PR\n            - QC\n            - QH\n            - QL\n            - RI\n            - SA\n            - SC\n            - SD\n            - SH\n            - SI\n            - SK\n            - SN\n            - ST\n            - SX\n            - SZ\n            - TA\n            - TG\n            - TJ\n            - TK\n            - TN\n            - TS\n            - TT\n            - TX\n            - TY\n            - UT\n            - VA\n            - VI\n            - VT\n            - WA\n            - WI\n            - WK\n            - WV\n            - WY\n            - XJ\n            - XZ\n            - YA\n            - YN\n            - YT\n            - YU\n            - ZJ\n          nullable: true\n    BulkMappingJob:\n      type: array\n      items:\n        $ref: '#/components/schemas/MappingJob'\n    FigiResult:\n      type: object\n      properties:\n        figi:\n          description: FIGI assigned to the instrument\n          type: string\n        securityType:\n          description: Enum-like attributes of the instrument\n          type: string\n          nullable: true\n        marketSector: \n          description: Enum-like attributes of the instrument\n          type: string\n          nullable: true\n        ticker:\n          description: Various attributes of the instrument\n          type: string\n          nullable: true\n        name:\n          description: Various attributes of the instrument\n          type: string\n          nullable: true\n        exchCode:\n          description: Enum-like attributes of the instrument\n          type: string\n          nullable: true\n        shareClassFIGI:\n          description: Various attributes of the instrument\n          type: string\n          nullable: true\n        compositeFIGI:\n          description: Various attributes of the instrument\n          type: string\n          nullable: true\n        securityType2:\n          description: Enum-like attributes of the instrument\n          type: string\n          nullable: true\n        securityDescription:\n          description: Various attributes of the instrument\n          type: string\n          nullable: true\n        metadata:\n          description: Exists when API is unable to show non-FIGI fields.\n          type: string\n          nullable: true\n    MappingJobResultFigiNotFound:\n      type: object\n      properties:\n        warning:\n          type: string\n    MappingJobResultFigiList:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/FigiResult'\n    MappingJobResult:\n        $ref: '#/components/schemas/MappingJobResultFigiList'\n    BulkMappingJobResult:\n      type: array\n      items:\n        $ref: '#/components/schemas/MappingJobResult'\nsecurity:\n  - {}\n  - ApiKeyAuth: []\npaths:\n  /mapping:\n    post:\n      operationId: mapIdentifiers\n      description: Allows mapping from third-party identifiers to FIGIs.\n      requestBody:\n        description: A list of third-party identifiers and extra filters.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BulkMappingJob'\n      responses:\n        '200':\n          description: A list of FIGIs and their metadata.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BulkMappingJobResult'\n  '/mapping/values/{key}':\n    get:\n      operationId: GetValues\n      description: Get values for enum-like fields.\n      responses:\n        '200':\n          description: The list of values.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Values\"\n        '400':\n          description: Invalid request (key).\n          content:\n            '*/*':\n              schema:\n                type: string\n        '500':\n          description: Internal server error.\n          content:\n            '*/*':\n              schema:\n                type: string\n      parameters:\n        - name: key\n          in: path\n          description: Key of MappingJob for which to get possible values.\n          x-ballerina-apikey-description: \"Provide your API Key as `X-OPENFIGI-APIKEY`. Eg: {X-OPENFIGI-APIKEY : \u003cYour API Key\u003e}\"\n          required: true\n          schema:\n            type: string\n            enum:\n              - idType\n              - exchCode\n              - micCode\n              - currency\n              - marketSecDes\n              - securityType\n              - securityType2\n          style: simple\n\n    ",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/openfigi/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/openfigi/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"MappingJob\": parse schema: property \"idValue\": parse default: unexpected type: \"\""
}