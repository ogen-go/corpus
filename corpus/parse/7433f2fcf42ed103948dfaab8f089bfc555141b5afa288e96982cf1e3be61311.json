{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/metasv/metasv-java-sdk"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "api/openapi.yaml",
			"byteSize": 82631,
			"content": "openapi: 3.0.3\ninfo:\n  contact:\n    email: heqiming@metasv.com\n    name: MetaSV team\n  description: API definition for MetaSV provided apis\n  license:\n    name: MIT License\n    url: https://opensource.org/licenses/MIT\n  title: MetaSV API Spec\n  version: 2.1.4\nservers:\n- url: https://apiv2.metasv.com\ntags:\n- description: block related apis\n  name: block\n- description: transaction related apis\n  name: tx\n- description: address related apis\n  name: address\n- description: output spent status (outpoint of vin) apis\n  name: outpoint\n- description: merchant apis\n  name: merchant\n- description: xpub related apis\n  name: xpub\n- description: sensible contract related apis\n  name: sensible\n- description: user account related apis\n  name: user\npaths:\n  /block/info:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlockchainInfo'\n          description: Get blockchain info success.\n      security:\n      - bearerAuth: []\n      summary: Get current blockchain info from full node.\n      tags:\n      - block\n      x-accepts: application/json\n  /block:\n    get:\n      parameters:\n      - description: paging flag, height of last item in last page\n        explode: true\n        in: query\n        name: last\n        required: false\n        schema:\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/BlockHeader'\n                maxItems: 100\n                type: array\n          description: successfully get lists\n      security:\n      - bearerAuth: []\n      summary: Get recent block list by paging. 30 items per page.\n      tags:\n      - block\n      x-accepts: application/json\n  /block/{blockId}:\n    get:\n      parameters:\n      - description: The block id, height or hash acceptable.\n        explode: false\n        in: path\n        name: blockId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlockHeader'\n          description: get block info success\n        \"404\":\n          description: block info not found\n      security:\n      - bearerAuth: []\n      summary: Get block request by height or hash\n      tags:\n      - block\n      x-accepts: application/json\n  /tx/{txid}:\n    get:\n      description: This api is parsed from raw hex, you can use /tx/{txid}/raw to\n        parse tx by yourself, If you want detail input info, use '/vin/{txid}' to\n        get detailed input info including address and value.\n      parameters:\n      - description: the request ID to search, txhash\n        explode: false\n        in: path\n        name: txid\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Return source script code or not (default false).\n        explode: true\n        in: query\n        name: showScript\n        required: false\n        schema:\n          type: boolean\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TxDetail'\n          description: Get transaction detail success.\n        \"404\":\n          description: Transaction not found\n      security:\n      - bearerAuth: []\n      summary: Get transaction detail by specific txid.\n      tags:\n      - tx\n      x-accepts: application/json\n  /tx/{txid}/raw:\n    get:\n      parameters:\n      - description: the request ID to search, txhash\n        explode: false\n        in: path\n        name: txid\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TxRaw'\n          description: Get transaction raw hex success.\n        \"404\":\n          description: Transaction not found\n      security:\n      - bearerAuth: []\n      summary: Get transaction raw hex by specific txid.\n      tags:\n      - tx\n      x-accepts: application/json\n  /tx/{txid}/seen:\n    get:\n      parameters:\n      - description: the request ID to search, txhash\n        explode: false\n        in: path\n        name: txid\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: boolean\n          description: Return true if the transaction is found.\n        \"404\":\n          description: Transaction not found.\n      security:\n      - bearerAuth: []\n      summary: Whether MetaSV have seen this tx before. This is a fast approach to\n        know if the tx exist or not.\n      tags:\n      - tx\n      x-accepts: application/json\n  /tx/broadcast:\n    post:\n      description: This api will broadcast to metasv fullnode directly, If you want\n        to use merchant api, see /merchant/boardcast.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TxRaw'\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BroadcastResult'\n          description: Broadcast success, txid returned\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BroadcastResult'\n          description: Broadcast Failed\n      security:\n      - bearerAuth: []\n      summary: Broadcast tx to metasv fullnode.\n      tags:\n      - tx\n      x-contentType: application/json\n      x-accepts: application/json\n  /tx/broadcast/async:\n    post:\n      description: This api will not broadcast to metasv fullnode directly, the tx\n        will be cached and later send to fullnode.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TxRaw'\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: Acknowledged. txid returned dsha256(rawHex).\n      security:\n      - bearerAuth: []\n      summary: Broadcast tx to metasv asyn(tx size no bigger than 250K).\n      tags:\n      - tx\n      x-contentType: application/json\n      x-accepts: application/json\n  /tx/broadcast/async/{txid}/state:\n    get:\n      description: Use this api to query async broadcast status, possible status PENDING,\n        BROADCASTED, INVALID, UNKNOWN\n      parameters:\n      - description: the request ID to search, txhash\n        explode: false\n        in: path\n        name: txid\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AsyncBroadcastResult'\n          description: Acknowledged. txid returned dsha256(rawHex).\n      security:\n      - bearerAuth: []\n      summary: Query aync broadcast result.\n      tags:\n      - tx\n      x-accepts: application/json\n  /address/{address}/balance:\n    get:\n      parameters:\n      - description: the requested address\n        explode: false\n        in: path\n        name: address\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AddressBalance'\n          description: Get address detail success.\n      security:\n      - bearerAuth: []\n      summary: Get address balance by specific address.\n      tags:\n      - address\n      x-accepts: application/json\n  /address/{address}/utxo:\n    get:\n      parameters:\n      - description: the requested address\n        explode: false\n        in: path\n        name: address\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The last id of the last query(Paging flag)\n        explode: true\n        in: query\n        name: flag\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/AddressUtxo'\n                maxItems: 100\n                type: array\n          description: Get address utxos success.\n      security:\n      - bearerAuth: []\n      summary: Get address utxos by specific address(100 per page).\n      tags:\n      - address\n      x-accepts: application/json\n  /outpoint/{txid}/{index}:\n    get:\n      description: Get detailed info for a utxo(or txo if spent), Only outputs spent\n        no longer than one month are available. (Premium feature will support full\n        history)\n      parameters:\n      - description: The txid of the output\n        explode: false\n        in: path\n        name: txid\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The index of the output in the tx.\n        explode: false\n        in: path\n        name: index\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OutputInfo'\n          description: Get outpoint success.\n      security:\n      - bearerAuth: []\n      summary: Get tx output(outpoint for vin) spent status.\n      tags:\n      - outpoint\n      x-accepts: application/json\n  /vin/{txid}/detail:\n    get:\n      description: Search output points by spent txid. Use this api to get detailed\n        inputs for the tx.\n      parameters:\n      - description: The txid of the vins\n        explode: false\n        in: path\n        name: txid\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/OutputInfoDetail'\n                type: array\n          description: Get vin list success.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: Get all output point of vins in the tx with detailed output script.\n      tags:\n      - outpoint\n      - tx\n      x-accepts: application/json\n  /merchant/broadcast:\n    post:\n      description: This api will broadcast to taal, you can broadcast tx with fee\n        rate 0.25 sat/b by this api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TxRaw'\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BroadcastResult'\n          description: Broadcast success, txid returned\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BroadcastResult'\n          description: Broadcast Failed\n      security:\n      - bearerAuth: []\n      summary: Broadcast tx to coorperated miner merchant APIs(TAAL).\n      tags:\n      - merchant\n      x-contentType: application/json\n      x-accepts: application/json\n  /merchant/utxo:\n    post:\n      description: Selects a set of Utxos with total value higher than the given amount\n        from a given address list . In case of HD wallets, multiple addresses can\n        be specified.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UtxoPickRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/AddressUtxo'\n                type: array\n          description: utxo pick success\n      security:\n      - bearerAuth: []\n      summary: Pick utxos by addresses and amount.\n      tags:\n      - merchant\n      x-contentType: application/json\n      x-accepts: application/json\n  /xpubs:\n    get:\n      parameters:\n      - description: The last xpub of the last query(Paging flag)\n        explode: true\n        in: query\n        name: flag\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: Get all registered xpub strings.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: Get all registered xpub strings. 300 per page.\n      tags:\n      - xpub\n      x-accepts: application/json\n  /xpubs/count:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Get total count success.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: Get the total count of registered xpubs.\n      tags:\n      - xpub\n      x-accepts: application/json\n  /xpub:\n    post:\n      description: You have to register xpub before you can query them.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/XpubRequest'\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/XpubResult'\n          description: Register success, xpub returned.\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/XpubResult'\n          description: Register success, while xpub already exists. xpub returned.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/XpubResult'\n          description: Register forbidden. Not authorized or exceed register limit.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/XpubResult'\n          description: Bad request, xpub is not valid or skipHeight is beyond current\n            block height.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: Register a new xpub.\n      tags:\n      - xpub\n      x-contentType: application/json\n      x-accepts: application/json\n  /xpub/{xpub}:\n    delete:\n      description: You can use this api to delete your registered xpub.\n      parameters:\n      - description: the xpub to search\n        explode: false\n        in: path\n        name: xpub\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/XpubResult'\n          description: Delete success.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: Delete a registered xpub.\n      tags:\n      - xpub\n      x-accepts: application/json\n    get:\n      description: This api returns the xpub detail you registered, authentication\n        is required.\n      parameters:\n      - description: the xpub to search\n        explode: false\n        in: path\n        name: xpub\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/XpubDetail'\n          description: Get xpub detail success.\n        \"404\":\n          description: Xpub not found or not registered by your account.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: Get xpub detail and status. Only registered xpub available.\n      tags:\n      - xpub\n      x-accepts: application/json\n  /xpub/{xpub}/balance:\n    get:\n      description: This api returns confirmed balance(same as address balance), not\n        sumed utxos.\n      parameters:\n      - description: the xpub to search\n        explode: false\n        in: path\n        name: xpub\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/XpubBalance'\n          description: Get xpub balance success.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: Get xpub balances including confirmed and unconfirmed.\n      tags:\n      - xpub\n      x-accepts: application/json\n  /xpub/{xpub}/utxo:\n    get:\n      parameters:\n      - description: the requested xpub\n        explode: false\n        in: path\n        name: xpub\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The max items returned in this query(default 300), not bigger\n          than 5000.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int64\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/XpubUtxo'\n                maxItems: 300\n                type: array\n          description: Get xpub utxos success.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: Get xpub utxos by specific xpub.\n      tags:\n      - xpub\n      x-accepts: application/json\n  /xpub/{xpub}/utxo/count:\n    get:\n      parameters:\n      - description: the requested xpub\n        explode: false\n        in: path\n        name: xpub\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Get total utxo count success.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: Get valid utxo count(including confirmed and unconfirmed).\n      tags:\n      - xpub\n      x-accepts: application/json\n  /xpub/{xpub}/txs:\n    get:\n      parameters:\n      - description: the requested xpub\n        explode: false\n        in: path\n        name: xpub\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The last id of the last query(Paging flag)\n        explode: true\n        in: query\n        name: flag\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/XPubTransaction'\n                maxItems: 100\n                type: array\n          description: Get xpub transactions success.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: Get xpub transaction history by specific xpub(100 per page).\n      tags:\n      - xpub\n      x-accepts: application/json\n  /xpub/{xpub}/address/{address}:\n    get:\n      parameters:\n      - description: the requested xpub\n        explode: false\n        in: path\n        name: xpub\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: the requested address\n        explode: false\n        in: path\n        name: address\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/XpubAddress'\n          description: Get xpub address success.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n        \"404\":\n          description: Address not found in the xpub.\n      security:\n      - bearerAuth: []\n      summary: Get xpub address type and index. Only index under max index is valid.\n        Otherwise not found.\n      tags:\n      - xpub\n      x-accepts: application/json\n  /xpubLite/{xpub}/utxo:\n    get:\n      parameters:\n      - description: the requested xpub\n        explode: false\n        in: path\n        name: xpub\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The max items returned in this query(default 300), not bigger\n          than 5000.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/XpubUtxo'\n                maxItems: 300\n                type: array\n          description: Get xpub utxos success.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: Get xpub utxos by specific xpub(300 per page).\n      tags:\n      - xpub\n      x-accepts: application/json\n  /xpubLite/{xpub}/address/{address}:\n    get:\n      parameters:\n      - description: the requested xpub\n        explode: false\n        in: path\n        name: xpub\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: the requested address\n        explode: false\n        in: path\n        name: address\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/XpubAddress'\n          description: Get xpub address success.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n        \"404\":\n          description: Address not found in the xpub.\n      security:\n      - bearerAuth: []\n      summary: Get xpub address type and index. Only index under /0/70 /1/30 is valid.\n        Otherwise not found.\n      tags:\n      - xpub\n      x-accepts: application/json\n  /xpubLite/{xpub}/balance:\n    get:\n      description: This api returns confirmed balance(same as address balance), not\n        sumed utxos.\n      parameters:\n      - description: the xpub to search\n        explode: false\n        in: path\n        name: xpub\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/XpubLiteBalance'\n          description: Get xpub balance success.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: Get xpub balances including confirmed and unconfirmed.\n      tags:\n      - xpub\n      x-accepts: application/json\n  /sensible/ft/address/{address}/utxo:\n    get:\n      parameters:\n      - description: the requested address\n        explode: false\n        in: path\n        name: address\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Filter by contract code hash\n        explode: true\n        in: query\n        name: codeHash\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Filter by contract genesis\n        explode: true\n        in: query\n        name: genesis\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The flag of the last query Item(Paging flag)\n        explode: true\n        in: query\n        name: flag\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SensibleFtUtxo'\n                maxItems: 100\n                type: array\n          description: Get sensible ft utxo success.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: Get all sensible token utxos for specific address.\n      tags:\n      - sensible\n      x-accepts: application/json\n  /sensible/ft/address/{address}/balance:\n    get:\n      parameters:\n      - description: the requested address\n        explode: false\n        in: path\n        name: address\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Filter by contract code hash\n        explode: true\n        in: query\n        name: codeHash\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Filter by contract genesis\n        explode: true\n        in: query\n        name: genesis\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SensibleFtBalance'\n                maxItems: 100\n                type: array\n          description: Get sensible ft balances success.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: Get all sensible token balances for specific address.\n      tags:\n      - sensible\n      x-accepts: application/json\n  /sensible/ft/address/{address}/balance/confirmed:\n    get:\n      parameters:\n      - description: the requested address\n        explode: false\n        in: path\n        name: address\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Filter by contract code hash\n        explode: true\n        in: query\n        name: codeHash\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Filter by contract genesis\n        explode: true\n        in: query\n        name: genesis\n        required: true\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: int64\n                type: integer\n          description: Get sensible ft balances succes（ingore unconfirmed txs）.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: Get all sensible token balances for specific address ignoring all unconfirmed\n        txs.\n      tags:\n      - sensible\n      x-accepts: application/json\n  /sensible/nft/address/{address}/utxo:\n    get:\n      parameters:\n      - description: the requested address\n        explode: false\n        in: path\n        name: address\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Filter by contract code hash\n        explode: true\n        in: query\n        name: codeHash\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Filter by contract genesis\n        explode: true\n        in: query\n        name: genesis\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The flag of the last query Item(Paging flag)\n        explode: true\n        in: query\n        name: flag\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SensibleNftUtxo'\n                maxItems: 300\n                type: array\n          description: Get sensible nft utxo success.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: Get all sensible nft token utxos for specific address.\n      tags:\n      - sensible\n      x-accepts: application/json\n  /sensible/nft/address/{address}/summary:\n    get:\n      parameters:\n      - description: the requested address\n        explode: false\n        in: path\n        name: address\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SensibleNftAddressSummary'\n                maxItems: 300\n                type: array\n          description: Get sensible nft utxo success.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: Get nft summary(NFT count group by genesis) for address.\n      tags:\n      - sensible\n      x-accepts: application/json\n  /sensible/nft/address/{address}/count/confirmed:\n    get:\n      parameters:\n      - description: the requested address\n        explode: false\n        in: path\n        name: address\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Filter by contract code hash\n        explode: true\n        in: query\n        name: codeHash\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Filter by contract genesis\n        explode: true\n        in: query\n        name: genesis\n        required: true\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Get sensible nft utxo success.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: Get confirmed utxo count for specific nft(ignore all unconfirmed txs).\n      tags:\n      - sensible\n      x-accepts: application/json\n  /sensible/nft/genesis/{codeHash}/{genesis}/utxo:\n    get:\n      parameters:\n      - description: Code hash of the token.\n        explode: false\n        in: path\n        name: codeHash\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Contract genesis\n        explode: false\n        in: path\n        name: genesis\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Find exact token Index.\n        explode: true\n        in: query\n        name: tokenIndex\n        required: false\n        schema:\n          format: int64\n          type: integer\n        style: form\n      - description: Token index not bigger than this(include this).\n        explode: true\n        in: query\n        name: max\n        required: false\n        schema:\n          format: int64\n          type: integer\n        style: form\n      - description: Token index not less than this(include this).\n        explode: true\n        in: query\n        name: min\n        required: false\n        schema:\n          format: int64\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SensibleNftUtxo'\n                maxItems: 300\n                type: array\n          description: Get sensible nft utxo success.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: Get all sensible nft token utxos by codeHash and genesisId.\n      tags:\n      - sensible\n      x-accepts: application/json\n  /sensible/nft/genesis/{codeHash}/{genesis}/summary:\n    get:\n      parameters:\n      - description: Code hash of the token.\n        explode: false\n        in: path\n        name: codeHash\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Contract genesis\n        explode: false\n        in: path\n        name: genesis\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SensibleNftGenesisSummary'\n                maxItems: 300\n                type: array\n          description: Get sensible nft utxo success(result cached for 60s)..\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: Get nft summary(count group by address) for specific codeHash and genesisId(result\n        cached for 60s).\n      tags:\n      - sensible\n      x-accepts: application/json\n  /sensible/nft/sell/address/{address}/utxo:\n    get:\n      parameters:\n      - description: Owner address.\n        explode: false\n        in: path\n        name: address\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Filter by contract code hash\n        explode: true\n        in: query\n        name: codeHash\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Filter by contract genesis\n        explode: true\n        in: query\n        name: genesis\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The flag of the last query Item(Paging flag)\n        explode: true\n        in: query\n        name: flag\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SensibleNftSellUtxo'\n                maxItems: 300\n                type: array\n          description: Get sensible nft sell utxo success.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: Get all sensible sell sell utxos for specific address.\n      tags:\n      - sensible\n      x-accepts: application/json\n  /sensible/nft/sell/genesis/{codeHash}/{genesis}/utxo:\n    get:\n      parameters:\n      - description: Code hash of the token.\n        explode: false\n        in: path\n        name: codeHash\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Contract genesis\n        explode: false\n        in: path\n        name: genesis\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Find exact token Index.\n        explode: true\n        in: query\n        name: tokenIndex\n        required: false\n        schema:\n          format: int64\n          type: integer\n        style: form\n      - description: Token index not bigger than this(include this).\n        explode: true\n        in: query\n        name: max\n        required: false\n        schema:\n          format: int64\n          type: integer\n        style: form\n      - description: Token index not less than this(include this).\n        explode: true\n        in: query\n        name: min\n        required: false\n        schema:\n          format: int64\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SensibleNftSellUtxo'\n                maxItems: 300\n                type: array\n          description: Get sensible nft sell utxo success.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: Get all sensible nft token utxos by codeHash and genesisId.\n      tags:\n      - sensible\n      x-accepts: application/json\n  /sensible/nft/sellV2/address/{address}/utxo:\n    get:\n      parameters:\n      - description: Owner address.\n        explode: false\n        in: path\n        name: address\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Filter by contract code hash\n        explode: true\n        in: query\n        name: codeHash\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Filter by contract genesis\n        explode: true\n        in: query\n        name: genesis\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The flag of the last query Item(Paging flag)\n        explode: true\n        in: query\n        name: flag\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SensibleNftSellV2Utxo'\n                maxItems: 300\n                type: array\n          description: Get sensible nft sell utxo success.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: Get all sensible sell sell utxos for specific address.\n      tags:\n      - sensible\n      x-accepts: application/json\n  /sensible/nft/sellV2/genesis/{codeHash}/{genesis}/utxo:\n    get:\n      parameters:\n      - description: Code hash of the token.\n        explode: false\n        in: path\n        name: codeHash\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Contract genesis\n        explode: false\n        in: path\n        name: genesis\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Find exact token Index.\n        explode: true\n        in: query\n        name: tokenIndex\n        required: false\n        schema:\n          format: int64\n          type: integer\n        style: form\n      - description: Token index not bigger than this(include this).\n        explode: true\n        in: query\n        name: max\n        required: false\n        schema:\n          format: int64\n          type: integer\n        style: form\n      - description: Token index not less than this(include this).\n        explode: true\n        in: query\n        name: min\n        required: false\n        schema:\n          format: int64\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SensibleNftSellV2Utxo'\n                maxItems: 300\n                type: array\n          description: Get sensible nft sell utxo success.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: Get all sensible nft token utxos by codeHash and genesisId.\n      tags:\n      - sensible\n      x-accepts: application/json\n  /sensible/nft/auction/codeHash/{codeHash}/nftId/{nftId}/utxo:\n    get:\n      parameters:\n      - description: Code hash of the token.\n        explode: false\n        in: path\n        name: codeHash\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Nft id of this auction.\n        explode: false\n        in: path\n        name: nftId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SensibleNftAuctionUtxo'\n                maxItems: 300\n                type: array\n          description: Get sensible nft sell utxo success.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: Get all sensible nft token utxos by codeHash and genesisId.\n      tags:\n      - sensible\n      x-accepts: application/json\n  /user/clientPubkey:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: Get all registered client public keys.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: See https://github.com/metasv/metasv-client-signature for details.\n        Get all trusted public keys.\n      tags:\n      - user\n      x-accepts: application/json\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ClientPubkeyRequest'\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientPubkeyResult'\n          description: Register success, pubkey returned.\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientPubkeyResult'\n          description: Register success, while pubkey already exists. pubkey returned.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientPubkeyResult'\n          description: Register forbidden. Not authorized or exceed register limit.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientPubkeyResult'\n          description: Bad request, pubkey is not valid, or already registered by\n            others.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: See https://github.com/metasv/metasv-client-signature for details.\n        Register new client public key.\n      tags:\n      - user\n      x-contentType: application/json\n      x-accepts: application/json\n  /user/clientPubkey/{pubkey}:\n    delete:\n      description: See https://github.com/metasv/metasv-client-signature for details.\n        You can use this api to delete your registered public key.\n      parameters:\n      - description: the pubkey to delete\n        explode: false\n        in: path\n        name: pubkey\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientPubkeyResult'\n          description: Delete success.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: Delete a registered client public key.\n      tags:\n      - user\n      x-accepts: application/json\n  /user/traffic:\n    get:\n      description: Return hourly summed outbound traffic bytes.\n      parameters:\n      - description: define start query time(unix timestamp)\n        explode: true\n        in: query\n        name: startTime\n        required: false\n        schema:\n          format: int64\n          type: integer\n        style: form\n      - description: define end query time(unix timestamp)\n        explode: true\n        in: query\n        name: endTime\n        required: false\n        schema:\n          format: int64\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/UserHourlyTraffic'\n                maxItems: 50\n                type: array\n          description: Get hourly traffic success.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: Get traffic details for every hour(valid in six months).\n      tags:\n      - user\n      x-accepts: application/json\n  /user/traffic/sum:\n    get:\n      description: Return  summed outbound traffic bytes in current month.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserTrafficSum'\n          description: Get hourly traffic success.\n        \"401\":\n          $ref: '#/components/schemas/UnauthorizedError'\n      security:\n      - bearerAuth: []\n      summary: Sum all traffic in the current month.\n      tags:\n      - user\n      x-accepts: application/json\ncomponents:\n  schemas:\n    UnauthorizedError:\n      description: Access token is missing or invalid\n    BlockchainInfo:\n      example:\n        difficulty: difficulty\n        headers: 6\n        chain: chain\n        chainwork: chainwork\n        medianTime: 1\n        blocks: 0\n        bestBlockHash: bestBlockHash\n      properties:\n        chain:\n          description: mainnet or testnet\n          type: string\n        blocks:\n          description: current block count\n          type: integer\n        headers:\n          description: current block header count\n          type: integer\n        bestBlockHash:\n          description: current highest blockhash\n          type: string\n        difficulty:\n          description: decimal string for current difficulty\n          type: string\n        medianTime:\n          description: current median time\n          format: int64\n          type: integer\n        chainwork:\n          description: current pow\n          type: string\n      type: object\n    BlockHeader:\n      example:\n        reward: 5\n        minerAddress: minerAddress\n        blockHash: blockHash\n        outputCount: 9\n        bits: 2\n        merkleRoot: merkleRoot\n        version: 6\n        nonce: 4\n        miner: miner\n        medianTime: 5\n        coinbase: coinbase\n        size: 3\n        txCount: 2\n        prevBlockHash: prevBlockHash\n        height: 0\n        timestamp: 1\n        inputCount: 7\n      properties:\n        height:\n          description: Block height.\n          type: integer\n        blockHash:\n          description: Block hash.\n          type: string\n        version:\n          description: Block version.\n          type: integer\n        prevBlockHash:\n          description: The block hash of the previous block.\n          type: string\n        merkleRoot:\n          description: Hex formatted block merkle root.\n          type: string\n        timestamp:\n          description: Block timestamp.\n          format: int64\n          type: integer\n        medianTime:\n          description: Block median timestamp.\n          format: int64\n          type: integer\n        reward:\n          description: Miner total rewards, including miner fee.\n          format: int64\n          type: integer\n        miner:\n          description: Guessed miner name.\n          type: string\n        minerAddress:\n          description: Miner address that received rewards.\n          type: string\n        txCount:\n          description: Total txs count included in the block.\n          type: integer\n        inputCount:\n          description: Total input count in the block.\n          type: integer\n        outputCount:\n          description: Total output count in the block\n          type: integer\n        size:\n          description: Size of the block\n          format: int64\n          type: integer\n        bits:\n          description: Target bits.\n          format: int64\n          type: integer\n        nonce:\n          description: Block nonce\n          format: int64\n          type: integer\n        coinbase:\n          description: Hex formated coinbase info.\n          type: string\n      type: object\n    BlockTx:\n      description: Tx simple info for block tx list.\n      example:\n        blockHash: blockHash\n        outputCount: 5\n        size: 6\n        lockTime: 5\n        fee: 2\n        txid: txid\n        confirmations: 7\n        height: 0\n        inputCount: 1\n        timestamp: 9\n      properties:\n        txid:\n          description: Transaction hash.\n          type: string\n        height:\n          description: Block height of this tx.\n          type: integer\n        blockHash:\n          description: Hash of the block\n          type: string\n        size:\n          description: transaction size\n          format: int64\n          type: integer\n        inputCount:\n          description: Input count in this transaction\n          type: integer\n        outputCount:\n          description: Output count in this transaction.\n          type: integer\n        lockTime:\n          description: Lock time of this transaction\n          format: int64\n          type: integer\n        fee:\n          description: Trasaction fee.\n          format: int64\n          type: integer\n        confirmations:\n          description: Confirmations of this transaction, -1 if unconfirmed.\n          type: integer\n        timestamp:\n          description: Block timestamp for the transaction, confirmed tx only.\n          format: int64\n          type: integer\n      type: object\n    TxDetail:\n      description: Parsed tx info\n      example:\n        outputs:\n        - address: address\n          lockScript: lockScript\n          index: 7\n          value: 1\n        - address: address\n          lockScript: lockScript\n          index: 7\n          value: 1\n        txDetail:\n          blockHash: blockHash\n          outputCount: 5\n          size: 6\n          lockTime: 5\n          fee: 2\n          txid: txid\n          confirmations: 7\n          height: 0\n          inputCount: 1\n          timestamp: 9\n        inputs:\n        - utxoIndex: 2\n          utxoTxid: utxoTxid\n          address: address\n          unlockScript: unlockScript\n          index: 3\n          value: 4\n        - utxoIndex: 2\n          utxoTxid: utxoTxid\n          address: address\n          unlockScript: unlockScript\n          index: 3\n          value: 4\n      properties:\n        txDetail:\n          $ref: '#/components/schemas/BlockTx'\n        inputs:\n          items:\n            $ref: '#/components/schemas/TxInput'\n          type: array\n        outputs:\n          items:\n            $ref: '#/components/schemas/TxOutput'\n          type: array\n      type: object\n    TxInput:\n      description: Parsed inputs from raw tx. Use output api to get value and spent\n        info.\n      example:\n        utxoIndex: 2\n        utxoTxid: utxoTxid\n        address: address\n        unlockScript: unlockScript\n        index: 3\n        value: 4\n      properties:\n        index:\n          description: Input index of the tx.\n          type: integer\n        utxoTxid:\n          description: The outpoint utxo txid that this input spent\n          type: string\n        utxoIndex:\n          description: The outpoint utxo index that this input spent\n          type: integer\n        address:\n          description: Parsed address from pubkey(P2PKH input only).\n          type: string\n        value:\n          description: satoshi value of this input.\n          format: int64\n          type: integer\n        unlockScript:\n          description: The hex of the input script.\n          type: string\n      type: object\n    TxOutput:\n      description: Parsed outputs from raw tx.\n      example:\n        address: address\n        lockScript: lockScript\n        index: 7\n        value: 1\n      properties:\n        index:\n          description: Output index of the tx.\n          type: integer\n        value:\n          description: Bitcoin Value in this output.\n          format: int64\n          type: integer\n        address:\n          description: Parsed address from output\n          type: string\n        lockScript:\n          description: Hex formatted lockScript\n          type: string\n      type: object\n    TxRaw:\n      description: Raw hex formatted Tx returned.\n      example:\n        hex: hex\n      properties:\n        hex:\n          description: hex formatted raw tx.\n          type: string\n      type: object\n    BroadcastResult:\n      description: Broadcast result\n      example:\n        txid: txid\n        message: message\n      properties:\n        txid:\n          description: return txid if broadcast success\n          type: string\n        message:\n          description: return messages if broadcast failed\n          type: string\n      type: object\n    AsyncBroadcastResult:\n      description: Broadcast result\n      example:\n        txid: txid\n        state: state\n        message: message\n      properties:\n        txid:\n          description: the txid of this tx\n          type: string\n        state:\n          description: the state of this tx, possible values PENDING, BROADCASTED,\n            INVALID, UNKNOWN\n          type: string\n        message:\n          description: return messages if broadcast failed\n          type: string\n      type: object\n    AddressBalance:\n      description: The current balance for a particular address\n      example:\n        unconfirmed: 6\n        address: address\n        confirmed: 0\n      properties:\n        address:\n          description: current address\n          type: string\n        confirmed:\n          description: confirmed balance\n          format: int64\n          type: integer\n        unconfirmed:\n          description: unconfirmed balance\n          format: int64\n          type: integer\n      type: object\n    AddressUtxo:\n      description: Utxos by address(or addresses) order by height asc.\n      example:\n        outIndex: 0\n        flag: flag\n        address: address\n        txid: txid\n        value: 6\n        height: 1\n      properties:\n        flag:\n          description: paging flag\n          type: string\n        address:\n          description: Address of the utxo\n          type: string\n        txid:\n          description: txid of the utxo\n          type: string\n        outIndex:\n          description: output index in the tx\n          type: integer\n        value:\n          description: Value of the utxo\n          format: int64\n          type: integer\n        height:\n          description: Height of the utxo, -1 if not confirmed\n          type: integer\n      type: object\n    AddressTx:\n      description: Transaction history of the address.\n      properties:\n        flag:\n          description: Paging flag\n          type: string\n        address:\n          description: The address of the record\n          type: string\n        time:\n          description: timestamp of the tx\n          format: int64\n          type: integer\n        height:\n          description: Block Height of the tx, -1 if not confirmed\n          type: integer\n        income:\n          description: total income of the address from this tx\n          format: int64\n          type: integer\n        outcome:\n          description: total outcome of the address from this tx\n          format: int64\n          type: integer\n        txid:\n          description: txid of this record\n          type: string\n      type: object\n    OutputInfo:\n      description: spent status and value info of the output.\n      example:\n        address: address\n        spent: true\n        spentIndex: 1\n        txid: txid\n        index: 0\n        spentHeight: 5\n        spentTxid: spentTxid\n        value: 6\n      properties:\n        txid:\n          description: txid that this output is in.\n          type: string\n        index:\n          description: index of this output in the tx.\n          type: integer\n        address:\n          description: parsed address of this output, empty for non standard.\n          type: string\n        value:\n          description: value of this output\n          format: int64\n          type: integer\n        spent:\n          description: this output is spent or not, true if spent\n          type: boolean\n        spentTxid:\n          description: txid that spent this output\n          type: string\n        spentIndex:\n          description: vin index of the spent tx\n          type: integer\n        spentHeight:\n          description: height of the spent tx(-1 if unconfirmed, 0 if unspent)\n          type: integer\n      type: object\n    OutputInfoDetail:\n      description: spent status and value info of the output with detailed output\n        script.\n      example:\n        address: address\n        spent: true\n        spentIndex: 1\n        txid: txid\n        index: 0\n        spentHeight: 5\n        spentTxid: spentTxid\n        value: 6\n        script: script\n      properties:\n        txid:\n          description: txid that this output is in.\n          type: string\n        index:\n          description: index of this output in the tx.\n          type: integer\n        script:\n          description: output scrypt in hex format\n          type: string\n        address:\n          description: parsed address of this output, empty for non standard.\n          type: string\n        value:\n          description: value of this output\n          format: int64\n          type: integer\n        spent:\n          description: this output is spent or not, true if spent\n          type: boolean\n        spentTxid:\n          description: txid that spent this output\n          type: string\n        spentIndex:\n          description: vin index of the spent tx\n          type: integer\n        spentHeight:\n          description: height of the spent tx(-1 if unconfirmed, 0 if unspent)\n          type: integer\n      type: object\n    UtxoPickRequest:\n      description: Request object to batch pick utxo\n      example:\n        addresses:\n        - addresses\n        - addresses\n        amount: 0\n      properties:\n        addresses:\n          description: The address list to pick utxo from\n          items:\n            type: string\n          type: array\n        amount:\n          description: The total amount you want to pick\n          format: int64\n          type: integer\n      type: object\n    XpubRequest:\n      description: Request object to register(or delete) a new xpub\n      example:\n        initReceiveIndex: 6\n        initChangeIndex: 1\n        xpub: xpub\n        skipHeight: 0\n      properties:\n        xpub:\n          description: The xpub to register.\n          type: string\n        skipHeight:\n          description: Skip transactions before this height. Default is 0. Ignore\n            this while deleting xpub.\n          type: integer\n        initReceiveIndex:\n          description: Set the init maxReceiveIndex to {initReceiveIndex}(less than\n            5000) before the initial crawl , default is 200. This could increase cost.\n          type: integer\n        initChangeIndex:\n          description: Set the init maxChangeIndex(less than 5000) before the initial\n            crawl , default is 200. This could increase cost.\n          type: integer\n      type: object\n    XpubResult:\n      description: XpubRegister result\n      example:\n        message: message\n        xpub: xpub\n      properties:\n        xpub:\n          description: return xpub if broadcast success\n          type: string\n        message:\n          description: return messages if broadcast failed\n          type: string\n      type: object\n    XpubDetail:\n      description: Registered Xpub detail\n      example:\n        mode: 5\n        maxChangeIndex: 5\n        receiveIndex: 0\n        maxReceiveIndex: 6\n        processHeight: 7\n        changeIndex: 1\n        xpub: xpub\n        skipHeight: 2\n      properties:\n        xpub:\n          description: String encoded extended pubkey (xpub)\n          type: string\n        receiveIndex:\n          description: Next unused receive index, path /0/index\n          type: integer\n        maxReceiveIndex:\n          description: Max lookahead receive index.\n          type: integer\n        changeIndex:\n          description: Next unused change index, path /1/index\n          type: integer\n        maxChangeIndex:\n          description: Max lookahead change index.\n          type: integer\n        mode:\n          description: Current xpub process mode, 0 means preparing(not ready), 1\n            means synchronizing(ready)\n          type: integer\n        skipHeight:\n          description: Skip blocks before skipHeight while searching transactions.\n            This will speed up sync time.\n          type: integer\n        processHeight:\n          description: Xpub current processed height.\n          type: integer\n      type: object\n    XpubBalance:\n      description: Registered Xpub balance including confirmed and unconfirmed\n      example:\n        unconfirmed: 6\n        confirmed: 0\n      properties:\n        confirmed:\n          description: confirmed balance\n          format: int64\n          type: integer\n        unconfirmed:\n          description: unconfirmed balance\n          format: int64\n          type: integer\n      type: object\n    XpubLiteBalance:\n      description: Balance for xpub lite wallet\n      example:\n        balance: 0\n      properties:\n        balance:\n          description: confirmed balance plus unconfirmed balance\n          format: int64\n          type: integer\n      type: object\n    XpubUtxo:\n      description: Utxo belongs to the specified xpub\n      example:\n        address: address\n        flag: 2\n        addressType: 0\n        addressIndex: 6\n        txid: txid\n        xpub: xpub\n        value: 5\n        txIndex: 1\n        height: 5\n      properties:\n        xpub:\n          description: xpub of the utxo\n          type: string\n        address:\n          description: Address string of this utxo\n          type: string\n        addressType:\n          description: Address type, 0 for receive address, 1 for change address.\n            path is {{addressType}}/{{addressIndex}}\n          type: integer\n        addressIndex:\n          description: Address index. Address path in the xpub is {{addressType}}/{{addressIndex}}\n          type: integer\n        txid:\n          description: Txid for this utxo.\n          type: string\n        txIndex:\n          description: Output index for the Utxo.\n          type: integer\n        value:\n          description: Satoshi value of the utxo.\n          format: int64\n          type: integer\n        height:\n          description: The height of this utxo, -1 for unconfirmed utxo.\n          type: integer\n        flag:\n          description: The paging flag of utxo\n          format: int64\n          type: integer\n      type: object\n    XpubAddress:\n      description: Address detail in the wallet\n      example:\n        address: address\n        addressType: 0\n        addressIndex: 6\n        xpub: xpub\n      properties:\n        xpub:\n          description: xpub in the query\n          type: string\n        address:\n          description: Address in the query\n          type: string\n        addressType:\n          description: Address type, 0 for receive address, 1 for change address.\n            path is {{addressType}}/{{addressIndex}}\n          type: integer\n        addressIndex:\n          description: Address index. Address path in the xpub is {{addressType}}/{{addressIndex}}\n          type: integer\n      type: object\n    XPubTransaction:\n      description: Xpub transaction history\n      example:\n        income: 1\n        maxChangeIndex: 6\n        blockIndex: 2\n        flag: flag\n        maxReceiveIndex: 0\n        txid: txid\n        blockTime: 7\n        xpub: xpub\n        outcome: 5\n        height: 5\n      properties:\n        xpub:\n          description: query xpub\n          type: string\n        txid:\n          description: Txid for this transaction.\n          type: string\n        maxReceiveIndex:\n          description: Max lookahead receive index when processing this transaction.\n          type: integer\n        maxChangeIndex:\n          description: Max lookahead change index when processing this transaction.\n          type: integer\n        income:\n          description: Total received satoshis(Including all address)\n          format: int64\n          type: integer\n        outcome:\n          description: Total spent satoshis(Including all address)\n          format: int64\n          type: integer\n        height:\n          description: Height for this transaction. -1 for unconfirmed\n          type: integer\n        blockIndex:\n          description: Block index for this transaction, -1 for unconfirmed\n          type: integer\n        blockTime:\n          description: Block timestamp for this transaction, if unconfirmed, the time\n            is first seen time.\n          format: int64\n          type: integer\n        flag:\n          description: Paging flag, format blockTimestamp_blockIndex\n          type: string\n      type: object\n    ClientPubkeyRequest:\n      description: Request object to register(or delete) a new client public key.\n      example:\n        pubkey: pubkey\n      properties:\n        pubkey:\n          description: The hex format public key to register. (i.e. 02fd17dd0c52e54e5eed4ebe1e75df5e48df422f81c26520d44380bef1691fdd98)\n          type: string\n      type: object\n    ClientPubkeyResult:\n      description: Client public key result\n      example:\n        message: message\n        pubkey: pubkey\n      properties:\n        pubkey:\n          description: return pubkey if created successfully\n          type: string\n        message:\n          description: return messages if broadcast failed\n          type: string\n      type: object\n    SensibleFtUtxo:\n      description: Sensible fungible token Utxo belongs to the specified address\n      example:\n        symbol: symbol\n        satoshi: 5\n        address: address\n        flag: flag\n        codeHash: codeHash\n        txid: txid\n        sensibleId: sensibleId\n        genesis: genesis\n        valueString: valueString\n        name: name\n        satoshiString: satoshiString\n        decimal: 0\n        value: 1\n        txIndex: 6\n        height: 5\n      properties:\n        address:\n          description: Address string of this utxo\n          type: string\n        codeHash:\n          description: Codehash of this utxo.\n          type: string\n        genesis:\n          description: Genesis of this utxo.\n          type: string\n        name:\n          description: Name of the token.\n          type: string\n        symbol:\n          description: Symbol of the token.\n          type: string\n        sensibleId:\n          description: SensibleId of the token\n          type: string\n        decimal:\n          description: The decimal position.\n          type: integer\n        txid:\n          description: Txid for this utxo.\n          type: string\n        txIndex:\n          description: Output index for the Utxo.\n          type: integer\n        value:\n          description: Token value of the utxo(Irrelavant to satoshi value).\n          format: int64\n          type: integer\n        valueString:\n          description: Token value of the utxo(In string format)\n          type: string\n        satoshi:\n          description: Bsv value of the utxo(Irrelavant to token value)\n          format: int64\n          type: integer\n        satoshiString:\n          description: Bsv value of the utxo(In string format)\n          type: string\n        height:\n          description: The height of this utxo, -1 for unconfirmed utxo.\n          type: integer\n        flag:\n          description: Flag used for paging\n          type: string\n      type: object\n    SensibleFtBalance:\n      description: Sensible fungible token balance\n      example:\n        utxoCount: 6\n        unconfirmed: 5\n        genesis: genesis\n        symbol: symbol\n        codeHash: codeHash\n        name: name\n        unconfirmedString: unconfirmedString\n        sensibleId: sensibleId\n        decimal: 0\n        confirmed: 1\n        confirmedString: confirmedString\n      properties:\n        codeHash:\n          description: Codehash of the token.\n          type: string\n        genesis:\n          description: Genesis of the token.\n          type: string\n        name:\n          description: Name of the token.\n          type: string\n        symbol:\n          description: Symbol of the token.\n          type: string\n        decimal:\n          description: The decimal position.\n          type: integer\n        sensibleId:\n          description: SensibleId of the token\n          type: string\n        utxoCount:\n          description: Number of utxos for this token.\n          type: integer\n        confirmed:\n          description: Confirmed balance of the token.\n          format: int64\n          type: integer\n        confirmedString:\n          description: Confirmed balance of the token(In string format).\n          type: string\n        unconfirmed:\n          description: Unconfirmed balance of the token.\n          format: int64\n          type: integer\n        unconfirmedString:\n          description: Unconfirmed balance of the token(In string format).\n          type: string\n      type: object\n    SensibleNftUtxo:\n      description: Sensible non fungible token Utxo belongs to the specified address\n      example:\n        metaTxid: metaTxid\n        satoshi: 2\n        address: address\n        flag: flag\n        metaOutputIndex: 1\n        codeHash: codeHash\n        txid: txid\n        tokenIndex: 5\n        sensibleId: sensibleId\n        genesis: genesis\n        tokenSupply: 5\n        satoshiString: satoshiString\n        txIndex: 0\n        height: 6\n      properties:\n        address:\n          description: Address string of this utxo\n          type: string\n        txid:\n          description: Txid for this utxo.\n          type: string\n        txIndex:\n          description: Output index for the Utxo.\n          type: integer\n        codeHash:\n          description: Codehash of this utxo.\n          type: string\n        genesis:\n          description: Genesis of this utxo.\n          type: string\n        sensibleId:\n          description: SensibleId of the token\n          type: string\n        height:\n          description: The height of this utxo, -1 for unconfirmed utxo.\n          type: integer\n        metaTxid:\n          description: The metanet tx describing the nft.\n          type: string\n        metaOutputIndex:\n          description: Symbol of the token.\n          type: integer\n        tokenSupply:\n          description: The total supply of this NFT.\n          format: int64\n          type: integer\n        tokenIndex:\n          description: The index of this NFT.\n          format: int64\n          type: integer\n        satoshi:\n          description: Bsv value of the utxo(Irrelavant to token value)\n          format: int64\n          type: integer\n        satoshiString:\n          description: Bsv value of the utxo(In string format)\n          type: string\n        flag:\n          description: Flag used for paging\n          type: string\n      type: object\n    SensibleNftAddressSummary:\n      description: Get nft summary(count group by genesis) for specific address.\n      example:\n        genesis: genesis\n        metaTxid: metaTxid\n        metaOutputIndex: 0\n        codeHash: codeHash\n        tokenSupply: 6\n        count: 1\n        sensibleId: sensibleId\n      properties:\n        codeHash:\n          description: Codehash of this NFT series.\n          type: string\n        genesis:\n          description: Genesis of this NFT series..\n          type: string\n        sensibleId:\n          description: SensibleId of the token\n          type: string\n        metaTxid:\n          description: The metanet tx describing the nft.\n          type: string\n        metaOutputIndex:\n          description: Symbol of the token.\n          type: integer\n        tokenSupply:\n          description: The total supply of this NFT.\n          format: int64\n          type: integer\n        count:\n          description: The count of this nft that the address owns.\n          type: integer\n      type: object\n    SensibleNftGenesisSummary:\n      description: Get summary(count group by address) for specific genesis.\n      example:\n        metaTxid: metaTxid\n        address: address\n        metaOutputIndex: 0\n        tokenSupply: 6\n        count: 1\n        sensibleId: sensibleId\n      properties:\n        address:\n          description: Owner address.\n          type: string\n        sensibleId:\n          description: SensibleId of the token\n          type: string\n        metaTxid:\n          description: The metanet tx describing the nft.\n          type: string\n        metaOutputIndex:\n          description: Symbol of the token.\n          type: integer\n        tokenSupply:\n          description: The total supply of this NFT.\n          format: int64\n          type: integer\n        count:\n          description: The count of this nft that the address owns.\n          type: integer\n      type: object\n    SensibleNftSellUtxo:\n      description: Sensible nft sell Utxo belongs to the specified address\n      example:\n        satoshi: 5\n        metaTxid: metaTxid\n        address: address\n        flag: flag\n        metaOutputIndex: 2\n        codeHash: codeHash\n        isReady: true\n        contractAddress: contractAddress\n        txid: txid\n        tokenIndex: 6\n        sensibleId: sensibleId\n        genesis: genesis\n        price: 1\n        tokenSupply: 7\n        satoshiString: satoshiString\n        txIndex: 0\n        height: 5\n      properties:\n        address:\n          description: Address string of this utxo\n          type: string\n        contractAddress:\n          description: Address calculated from contract hash(p2ch).\n          type: string\n        txid:\n          description: Txid for this utxo.\n          type: string\n        txIndex:\n          description: Output index for the Utxo.\n          type: integer\n        codeHash:\n          description: Codehash of this utxo.\n          type: string\n        genesis:\n          description: Genesis of this utxo.\n          type: string\n        tokenIndex:\n          description: The index of this NFT.\n          format: int64\n          type: integer\n        price:\n          description: the price of nft.\n          format: int64\n          type: integer\n        satoshi:\n          description: Bsv value of the utxo(Irrelavant to token value)\n          format: int64\n          type: integer\n        satoshiString:\n          description: Bsv value of the utxo(In string format)\n          type: string\n        height:\n          description: The height of this utxo, -1 for unconfirmed utxo.\n          type: integer\n        isReady:\n          description: Is current nft transfered into sell contract, If not ready,\n            the following fields will be null\n          type: boolean\n        sensibleId:\n          description: SensibleId of the token\n          type: string\n        metaTxid:\n          description: The metanet tx describing the nft.\n          type: string\n        metaOutputIndex:\n          description: Symbol of the token.\n          type: integer\n        tokenSupply:\n          description: The total supply of this NFT.\n          format: int64\n          type: integer\n        flag:\n          description: Flag used for paging\n          type: string\n      type: object\n    SensibleNftSellV2Utxo:\n      description: Sensible nft sell v2 Utxo belongs to the specified address\n      example:\n        satoshi: 5\n        metaTxid: metaTxid\n        address: address\n        flag: flag\n        metaOutputIndex: 7\n        codeHash: codeHash\n        sellerAddressPkh: sellerAddressPkh\n        isReady: true\n        contractAddress: contractAddress\n        txid: txid\n        nftId: nftId\n        tokenIndex: 6\n        sensibleId: sensibleId\n        feeRate: 5\n        genesis: genesis\n        price: 1\n        tokenSupply: 9\n        satoshiString: satoshiString\n        feeAddressPkh: feeAddressPkh\n        txIndex: 0\n        height: 2\n      properties:\n        address:\n          description: Address string of this utxo\n          type: string\n        contractAddress:\n          description: Address calculated from contract hash(p2ch).\n          type: string\n        txid:\n          description: Txid for this utxo.\n          type: string\n        txIndex:\n          description: Output index for the Utxo.\n          type: integer\n        codeHash:\n          description: Codehash of this utxo.\n          type: string\n        genesis:\n          description: Genesis of this utxo.\n          type: string\n        tokenIndex:\n          description: The index of this NFT.\n          format: int64\n          type: integer\n        price:\n          description: the price of nft.\n          format: int64\n          type: integer\n        feeAddressPkh:\n          description: The address to receive fees.\n          type: string\n        feeRate:\n          description: feeRate\n          type: integer\n        nftId:\n          description: nftId\n          type: string\n        sellerAddressPkh:\n          description: The address pkh of seller\n          type: string\n        satoshi:\n          description: Bsv value of the utxo(Irrelavant to token value)\n          format: int64\n          type: integer\n        satoshiString:\n          description: Bsv value of the utxo(In string format)\n          type: string\n        height:\n          description: The height of this utxo, -1 for unconfirmed utxo.\n          type: integer\n        isReady:\n          description: Is current nft transfered into sell contract, If not ready,\n            the following fields will be null\n          type: boolean\n        sensibleId:\n          description: SensibleId of the token\n          type: string\n        metaTxid:\n          description: The metanet tx describing the nft.\n          type: string\n        metaOutputIndex:\n          description: Symbol of the token.\n          type: integer\n        tokenSupply:\n          description: The total supply of this NFT.\n          format: int64\n          type: integer\n        flag:\n          description: Flag used for paging\n          type: string\n      type: object\n    SensibleNftAuctionUtxo:\n      description: Sensible nft auction Utxo belongs to the specified address\n      example:\n        satoshi: 3\n        address: address\n        bidTimestamp: 1\n        flag: flag\n        codeHash: codeHash\n        isReady: true\n        txid: txid\n        nftId: nftId\n        contractAddress: contractAddress\n        startBsvPrice: 9\n        sensibleId: sensibleId\n        feeRate: 2\n        senderAddressPkh: senderAddressPkh\n        genesis: genesis\n        feeAmount: 5\n        nftCodeHash: nftCodeHash\n        bidBsvPrice: 6\n        bidderAddressPkh: bidderAddressPkh\n        satoshiString: satoshiString\n        feeAddressPkh: feeAddressPkh\n        endTimestamp: 5\n        txIndex: 0\n        height: 7\n      properties:\n        address:\n          description: Address string of this utxo\n          type: string\n        txid:\n          description: Txid for this utxo.\n          type: string\n        txIndex:\n          description: Output index for the Utxo.\n          type: integer\n        bidBsvPrice:\n          description: bidBsvPrice\n          format: int64\n          type: integer\n        bidTimestamp:\n          description: bidTimestamp\n          format: int64\n          type: integer\n        bidderAddressPkh:\n          description: bidderAddressPkh\n          type: string\n        codeHash:\n          description: Codehash of this utxo.\n          type: string\n        genesis:\n          description: Genesis of this utxo.\n          type: string\n        endTimestamp:\n          description: endTimestamp\n          format: int64\n          type: integer\n        feeAddressPkh:\n          description: feeAddressPkh\n          type: string\n        feeAmount:\n          description: feeAmount\n          format: int64\n          type: integer\n        feeRate:\n          description: feeRate\n          type: integer\n        height:\n          description: The height of this utxo, -1 for unconfirmed utxo.\n          type: integer\n        nftCodeHash:\n          description: nftCodeHash\n          type: string\n        nftId:\n          description: nftId of the auctioning fnt\n          type: string\n        senderAddressPkh:\n          description: senderAddressPkh\n          type: string\n        sensibleId:\n          description: SensibleId of the utxo\n          type: string\n        startBsvPrice:\n          description: startBsvPrice\n          format: int64\n          type: integer\n        satoshi:\n          description: Bsv value of the utxo(Irrelavant to token value)\n          format: int64\n          type: integer\n        satoshiString:\n          description: Bsv value of the utxo(In string format)\n          type: string\n        contractAddress:\n          description: The hash160 of the script(p2ch address)\n          type: string\n        isReady:\n          description: this the nft send to this contract address\n          type: boolean\n        flag:\n          description: Flag used for paging\n          type: string\n      type: object\n    UserHourlyTraffic:\n      description: Summed outbound traffic within particular hour.\n      example:\n        hourTime: 0\n        totalBytes: 6\n        hourTimeString: hourTimeString\n      properties:\n        hourTime:\n          description: The unix timestamp of the beginning of the hour.\n          format: int64\n          type: integer\n        hourTimeString:\n          description: Parsed utc time string for readability.\n          type: string\n        totalBytes:\n          description: Total outbound bytes within this hour\n          format: int64\n          type: integer\n      type: object\n    UserTrafficSum:\n      description: Summed outbound traffic for this month and lastMonth.\n      example:\n        lastMonth: 6\n        thisMonth: 0\n      properties:\n        thisMonth:\n          description: Summed traffic for currentMonth.\n          format: int64\n          type: integer\n        lastMonth:\n          description: Summed traffic for lastMonth.\n          format: int64\n          type: integer\n      type: object\n  securitySchemes:\n    bearerAuth:\n      bearerFormat: JWT\n      scheme: bearer\n      type: http\n\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /sensible/nft/sell/address/{address}/utxo: get: responses: 401: resolve \"#/components/schemas/UnauthorizedError\" reference: invalid response reference"
}