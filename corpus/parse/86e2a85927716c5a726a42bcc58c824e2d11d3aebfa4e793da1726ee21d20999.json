{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/ote-godaddy.com/orders/1.0.0/openapi.yaml",
			"byteSize": 32135,
			"content": "openapi: 3.0.0\nservers:\n  - url: //api.ote-godaddy.com\ninfo:\n  title: \"\"\n  version: 1.0.0\n  x-apisguru-categories:\n    - hosting\n  x-origin:\n    - format: swagger\n      url: https://developer.godaddy.com/swagger/swagger_orders.json\n      version: \"2.0\"\n  x-providerName: ote-godaddy.com\n  x-serviceName: orders\ntags:\n  - description: \"\"\n    name: v1\npaths:\n  /v1/orders:\n    get:\n      description: \u003cstrong\u003eAPI Resellers\u003c/strong\u003e\u003cul\u003e\u003cli\u003eThis endpoint does not support subaccounts and therefore API Resellers should not supply an X-Shopper-Id header\u003c/li\u003e\u003c/ul\u003e\n      operationId: list\n      parameters:\n        - description: Start of range indicating what time-frame should be returned. Inclusive\n          in: query\n          name: periodStart\n          required: false\n          schema:\n            type: string\n        - description: End of range indicating what time-frame should be returned. Inclusive\n          in: query\n          name: periodEnd\n          required: false\n          schema:\n            type: string\n        - description: Domain name to use as the filter of results\n          in: query\n          name: domain\n          required: false\n          schema:\n            type: string\n        - description: Product group id to use as the filter of results\n          in: query\n          name: productGroupId\n          required: false\n          schema:\n            type: integer\n        - description: Payment profile id to use as the filter of results\n          in: query\n          name: paymentProfileId\n          required: false\n          schema:\n            type: integer\n        - description: Parent order id to use as the filter of results\n          in: query\n          name: parentOrderId\n          required: false\n          schema:\n            type: string\n        - description: Number of results to skip for pagination\n          in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: Maximum number of items to return\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 25\n            maximum: 10000\n            minimum: 1\n            type: integer\n        - description: Property name that will be used to sort results. '-' indicates descending\n          in: query\n          name: sort\n          required: false\n          schema:\n            default: -createdAt\n            enum:\n              - createdAt\n              - -createdAt\n              - orderId\n              - -orderId\n              - pricing.total\n              - -pricing.total\n            type: string\n        - description: Shopper ID to be operated on, if different from JWT\u003cbr/\u003e\u003cb\u003eReseller subaccounts are not supported\u003c/b\u003e\n          in: header\n          name: X-Shopper-Id\n          required: false\n          schema:\n            type: string\n        - description: Unique identifier of the Market in which the request is happening\n          in: header\n          name: X-Market-Id\n          required: false\n          schema:\n            default: en-US\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/OrderList\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OrderList\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/OrderList\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/OrderList\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/OrderList\"\n          description: Request was successful\n        \"400\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Request was malformed\n        \"401\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Authentication info not sent or invalid\n        \"403\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Authenticated user is not allowed access\n        \"429\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n          description: Too many requests received within interval\n        \"500\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Internal server error\n        \"504\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Gateway timeout\n      summary: Retrieve a list of orders for the authenticated shopper. Only one filter may be used at a time\n      tags:\n        - v1\n  \"/v1/orders/{orderId}\":\n    get:\n      description: \u003cstrong\u003eAPI Resellers\u003c/strong\u003e\u003cul\u003e\u003cli\u003eThis endpoint does not support subaccounts and therefore API Resellers should not supply an X-Shopper-Id header\u003c/li\u003e\u003c/ul\u003e\n      operationId: get\n      parameters:\n        - description: Order id whose details are to be retrieved\n          in: path\n          name: orderId\n          required: true\n          schema:\n            type: string\n        - description: Shopper ID to be operated on, if different from JWT\u003cbr/\u003e\u003cb\u003eReseller subaccounts are not supported\u003c/b\u003e\n          in: header\n          name: X-Shopper-Id\n          required: false\n          schema:\n            type: string\n        - description: Unique identifier of the Market in which the request is happening\n          in: header\n          name: X-Market-Id\n          required: false\n          schema:\n            default: en-US\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n          description: Request was successful\n        \"400\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Request was malformed\n        \"401\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Authentication info not sent or invalid\n        \"403\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Authenticated user is not allowed access\n        \"404\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Resource not found\n        \"429\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n          description: Too many requests received within interval\n        \"500\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Internal server error\n        \"504\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Gateway timeout\n      summary: Retrieve details for specified order\n      tags:\n        - v1\ncomponents:\n  schemas:\n    Address:\n      properties:\n        address1:\n          format: street-address\n          type: string\n        address2:\n          format: street-address2\n          type: string\n        city:\n          format: city-name\n          type: string\n        country:\n          default: US\n          description: |-\n            Two-letter ISO country code to be used as a hint for target region\u003cbr/\u003e\u003cbr/\u003e\n            NOTE: These are sample values, there are many\n            \u003ca href='http://www.iso.org/iso/country_codes.htm'\u003emore\u003c/a\u003e\n          enum:\n            - AC\n            - AD\n            - AE\n            - AF\n            - AG\n            - AI\n            - AL\n            - AM\n            - AO\n            - AQ\n            - AR\n            - AS\n            - AT\n            - AU\n            - AW\n            - AX\n            - AZ\n            - BA\n            - BB\n            - BD\n            - BE\n            - BF\n            - BG\n            - BH\n            - BI\n            - BJ\n            - BM\n            - BN\n            - BO\n            - BQ\n            - BR\n            - BS\n            - BT\n            - BV\n            - BW\n            - BY\n            - BZ\n            - CA\n            - CC\n            - CD\n            - CF\n            - CG\n            - CH\n            - CI\n            - CK\n            - CL\n            - CM\n            - CN\n            - CO\n            - CR\n            - CV\n            - CW\n            - CX\n            - CY\n            - CZ\n            - DE\n            - DJ\n            - DK\n            - DM\n            - DO\n            - DZ\n            - EC\n            - EE\n            - EG\n            - EH\n            - ER\n            - ES\n            - ET\n            - FI\n            - FJ\n            - FK\n            - FM\n            - FO\n            - FR\n            - GA\n            - GB\n            - GD\n            - GE\n            - GF\n            - GG\n            - GH\n            - GI\n            - GL\n            - GM\n            - GN\n            - GP\n            - GQ\n            - GR\n            - GS\n            - GT\n            - GU\n            - GW\n            - GY\n            - HK\n            - HM\n            - HN\n            - HR\n            - HT\n            - HU\n            - ID\n            - IE\n            - IL\n            - IM\n            - IN\n            - IO\n            - IQ\n            - IS\n            - IT\n            - JE\n            - JM\n            - JO\n            - JP\n            - KE\n            - KG\n            - KH\n            - KI\n            - KM\n            - KN\n            - KR\n            - KV\n            - KW\n            - KY\n            - KZ\n            - LA\n            - LB\n            - LC\n            - LI\n            - LK\n            - LR\n            - LS\n            - LT\n            - LU\n            - LV\n            - LY\n            - MA\n            - MC\n            - MD\n            - ME\n            - MG\n            - MH\n            - MK\n            - ML\n            - MM\n            - MN\n            - MO\n            - MP\n            - MQ\n            - MR\n            - MS\n            - MT\n            - MU\n            - MV\n            - MW\n            - MX\n            - MY\n            - MZ\n            - NA\n            - NC\n            - NE\n            - NF\n            - NG\n            - NI\n            - NL\n            - NO\n            - NP\n            - NR\n            - NU\n            - NZ\n            - OM\n            - PA\n            - PE\n            - PF\n            - PG\n            - PH\n            - PK\n            - PL\n            - PM\n            - PN\n            - PR\n            - PS\n            - PT\n            - PW\n            - PY\n            - QA\n            - RE\n            - RO\n            - RS\n            - RU\n            - RW\n            - SA\n            - SB\n            - SC\n            - SE\n            - SG\n            - SH\n            - SI\n            - SJ\n            - SK\n            - SL\n            - SM\n            - SN\n            - SO\n            - SR\n            - ST\n            - SV\n            - SX\n            - SZ\n            - TC\n            - TD\n            - TF\n            - TG\n            - TH\n            - TJ\n            - TK\n            - TL\n            - TM\n            - TN\n            - TO\n            - TP\n            - TR\n            - TT\n            - TV\n            - TW\n            - TZ\n            - UA\n            - UG\n            - UM\n            - US\n            - UY\n            - UZ\n            - VA\n            - VC\n            - VE\n            - VG\n            - VI\n            - VN\n            - VU\n            - WF\n            - WS\n            - YE\n            - YT\n            - ZA\n            - ZM\n            - ZW\n          format: iso-country-code\n          type: string\n        postalCode:\n          description: Postal or zip code\n          format: postal-code\n          type: string\n        state:\n          description: State or province or territory\n          format: state-province-territory\n          type: string\n      required:\n        - address1\n        - city\n        - state\n        - postalCode\n        - country\n    BillTo:\n      properties:\n        contact:\n          $ref: \"#/components/schemas/Contact\"\n        taxId:\n          description: Tax id used for calculating the tax the customer is required to pay\n          type: string\n      required:\n        - contact\n    Contact:\n      properties:\n        addressMailing:\n          $ref: \"#/components/schemas/Address\"\n        email:\n          format: email\n          type: string\n        fax:\n          format: phone\n          type: string\n        jobTitle:\n          type: string\n        nameFirst:\n          format: person-name\n          type: string\n        nameLast:\n          format: person-name\n          type: string\n        nameMiddle:\n          type: string\n        organization:\n          format: organization-name\n          type: string\n        phone:\n          format: phone\n          type: string\n      required:\n        - nameFirst\n        - nameLast\n        - email\n        - phone\n        - addressMailing\n    Error:\n      properties:\n        code:\n          description: Short identifier for the error, suitable for indicating the specific error within client code\n          format: constant\n          type: string\n        fields:\n          description: List of the specific fields, and the errors found with their contents\n          items:\n            $ref: \"#/components/schemas/ErrorField\"\n          type: array\n        message:\n          description: Human-readable, English description of the error\n          type: string\n      required:\n        - code\n    ErrorField:\n      properties:\n        code:\n          description: Short identifier for the error, suitable for indicating the specific error within client code\n          format: constant\n          type: string\n        message:\n          description: Human-readable, English description of the problem with the contents of the field\n          type: string\n        path:\n          description: |-\n            \u003cul\u003e\n            \u003cli style='margin-left: 12px;'\u003eJSONPath referring to a field containing an error\u003c/li\u003e\n            \u003cstrong style='margin-left: 12px;'\u003eOR\u003c/strong\u003e\n            \u003cli style='margin-left: 12px;'\u003eJSONPath referring to a field that refers to an object containing an error, with more detail in `pathRelated`\u003c/li\u003e\n            \u003c/ul\u003e\n          format: json-path\n          type: string\n        pathRelated:\n          description: JSONPath referring to a field containing an error, which is referenced by `path`\n          format: json-path\n          type: string\n      required:\n        - path\n        - code\n    ErrorLimit:\n      properties:\n        code:\n          description: Short identifier for the error, suitable for indicating the specific error within client code\n          format: constant\n          type: string\n        fields:\n          description: List of the specific fields, and the errors found with their contents\n          items:\n            $ref: \"#/components/schemas/ErrorField\"\n          type: array\n        message:\n          description: Human-readable, English description of the error\n          type: string\n        retryAfterSec:\n          description: Number of seconds to wait before attempting a similar request\n          format: integer-positive\n          type: integer\n      required:\n        - retryAfterSec\n        - code\n    LineItem:\n      properties:\n        domains:\n          description: A collection of domain names purchased if the current product is domain\n          items:\n            type: string\n          type: array\n        label:\n          description: Human readable description of the current product\n          type: string\n        period:\n          default: 1\n          format: double\n          type: number\n        periodUnit:\n          default: MONTH\n          description: The unit of time that periodCount is measured in\n          enum:\n            - MONTH\n            - QUARTER\n            - SEMI_ANNUAL\n            - YEAR\n            - ONE_TIME\n          type: string\n        pfid:\n          description: Unique identifier of the current product\n          type: integer\n        pricing:\n          $ref: \"#/components/schemas/LineItemPricing\"\n        quantity:\n          description: Number of the current product included in the specified order\n          format: integer-positive\n          type: integer\n        taxCollector:\n          $ref: \"#/components/schemas/LineItemTaxCollector\"\n      required:\n        - label\n        - quantity\n        - pricing\n    LineItemPricing:\n      properties:\n        discount:\n          description: Discount off of sale price for given `quantity` and `period` \u003cpre\u003e`discount` = `sale` - `subtotal`\u003c/pre\u003e\n          format: currency-micro-unit\n          type: integer\n        fees:\n          $ref: \"#/components/schemas/OrderFee\"\n        list:\n          description: List price for given `quantity` and `period`\n          format: currency-micro-unit\n          type: integer\n        sale:\n          description: Actual price for the current product\n          format: currency-micro-unit\n          type: integer\n        savings:\n          description: Savings off of list price for given `quantity` and `period` \u003cpre\u003e`savings` = `list` - `subtotal`\u003c/pre\u003e\n          format: currency-micro-unit\n          type: integer\n        subtotal:\n          description: Price with any discounts and without taxes or fees for given `quantity` and `period`\n          format: currency-micro-unit\n          type: integer\n        taxes:\n          description: Taxes for given `quantity` and `period`\n          format: currency-micro-unit\n          type: integer\n        unit:\n          description: Pricing for a single unit of the given item\n          type: object\n      required:\n        - subtotal\n        - list\n        - savings\n        - sale\n        - discount\n        - taxes\n        - fees\n        - unit\n    LineItemPricingTaxDetail:\n      properties:\n        amount:\n          description: Tax amount\n          format: currency-micro-unit\n          type: integer\n        rate:\n          format: double\n          type: number\n      required:\n        - \"\"\n    LineItemSummary:\n      properties:\n        label:\n          description: Product label of the current line item\n          type: string\n      required:\n        - label\n    LineItemTaxCollector:\n      properties:\n        taxCollectorId:\n          description: Unique identifier for the company\n          format: integer-positive\n          type: integer\n      required:\n        - taxCollectorId\n    LineItemUnitPricing:\n      properties:\n        discount:\n          description: Discount without consideration of `quantity` and `period`\n          format: currency-micro-unit\n          type: integer\n        fees:\n          $ref: \"#/components/schemas/OrderFee\"\n        list:\n          description: List price without consideration of `quantity` and `period`\n          format: currency-micro-unit\n          type: integer\n        sale:\n          description: Sale price without consideration of `quantity` and `period`\n          format: currency-micro-unit\n          type: integer\n        savings:\n          description: Savings without consideration of `quantity` and `period`\n          format: currency-micro-unit\n          type: integer\n        taxes:\n          description: Taxes without consideration of `quantity` and `period`\n          format: currency-micro-unit\n          type: integer\n      required:\n        - discount\n        - fees\n        - list\n        - sale\n        - savings\n        - taxes\n    Order:\n      properties:\n        billTo:\n          $ref: \"#/components/schemas/BillTo\"\n        createdAt:\n          description: Date and time when the current order is created on\n          format: iso-datetime\n          type: string\n        currency:\n          description: Currency in which the order has been placed\n          format: iso-currency-code\n          type: string\n        items:\n          items:\n            $ref: \"#/components/schemas/LineItem\"\n          type: array\n        orderId:\n          description: Unique identifier of current order\n          type: string\n        parentOrderId:\n          description: |-\n            Unique identifier of the parent order. All refund/chargeback orders are tied to the original order.\n            The orginal order's `orderId` is the `parentOrderId` of refund/chargeback orders\n          type: string\n        payments:\n          items:\n            $ref: \"#/components/schemas/Payment\"\n          type: array\n        pricing:\n          $ref: \"#/components/schemas/OrderPricing\"\n      required:\n        - orderId\n        - currency\n        - createdAt\n        - pricing\n        - billTo\n        - payments\n        - items\n    OrderFee:\n      properties:\n        icann:\n          description: Domain registration transaction fee charged by ICANN\n          format: currency-micro-unit\n          type: integer\n        total:\n          description: Sum of all fees\n          format: currency-micro-unit\n          type: integer\n      required:\n        - total\n    OrderList:\n      properties:\n        orders:\n          description: A collection of orders\n          items:\n            $ref: \"#/components/schemas/OrderSummary\"\n          type: array\n        pagination:\n          $ref: \"#/components/schemas/Pagination\"\n      required:\n        - orders\n        - pagination\n    OrderPricing:\n      properties:\n        discount:\n          description: Discount from promotional pricing\n          format: currency-micro-unit\n          type: integer\n        fees:\n          $ref: \"#/components/schemas/OrderFee\"\n        id:\n          format: double\n          type: number\n        list:\n          description: Sum of list prices for the entire cart\n          format: currency-micro-unit\n          type: integer\n        savings:\n          description: Savings off of list price \u003cpre\u003e`savings` = `list` - `subtotal`\u003c/pre\u003e\n          format: currency-micro-unit\n          type: integer\n        subtotal:\n          description: Price with `discount` and without taxes or fees\n          format: currency-micro-unit\n          type: integer\n        taxDetails:\n          description: A collection of line item tax details\n          items:\n            $ref: \"#/components/schemas/LineItemPricingTaxDetail\"\n          type: array\n        taxes:\n          description: Taxes for the entire cart\n          format: currency-micro-unit\n          type: integer\n        total:\n          description: Price the customer pays \u003cpre\u003e`total` = `subtotal` + `taxes` + `fees.total`\u003c/pre\u003e\n          format: currency-micro-unit\n          type: integer\n      required:\n        - total\n        - subtotal\n        - list\n        - savings\n        - discount\n        - taxes\n        - fees\n    OrderSummary:\n      properties:\n        createdAt:\n          description: Date and time when the current order was created\n          format: iso-datetime\n          type: string\n        currency:\n          description: Currency in which the order was placed\n          format: iso-currency-code\n          type: string\n        items:\n          description: Sets of two or more line items in current order\n          items:\n            $ref: \"#/components/schemas/LineItemSummary\"\n          type: array\n        orderId:\n          description: Unique identifier of the current order\n          type: integer\n        parentOrderId:\n          description: |-\n            Unique identifier of the parent order. All refund/chargeback orders are tied to the original order.\n            The orginal order's `orderId` is the `parentOrderId` of refund/chargeback orders\n          type: string\n        pricing:\n          $ref: \"#/components/schemas/OrderSummaryPricing\"\n      required:\n        - orderId\n        - currency\n        - createdAt\n        - pricing\n        - items\n    OrderSummaryPricing:\n      properties:\n        total:\n          description: Total amount charged for the current order. Negative for Refund and Chargeback\n          format: currency-micro-unit\n          type: string\n      required:\n        - total\n    Pagination:\n      properties:\n        first:\n          description: URI to access the first page\n          type: string\n        last:\n          description: URI to access the last page\n          type: string\n        next:\n          description: URI to access the next page\n          type: string\n        previous:\n          description: URI to access the previous page\n          type: string\n        total:\n          description: Number of records available\n          type: integer\n    Payment:\n      properties:\n        amount:\n          description: Amount paid by the current payment\n          format: currency-micro-unit\n          type: integer\n        category:\n          description: |-\n            The category of payment method used at the time of purchase.\n            Most common values are listed in the enum.\n          enum:\n            - CREDIT_CARD\n            - PAYPAL\n            - ACH\n            - GIFT_CARD\n            - IN_STORE_CREDIT\n            - PREPAID\n          type: string\n        paymentProfileId:\n          description: Unique identifier of the payment profile used by current payment\n          type: string\n        subcategory:\n          description: |-\n            The subcategory of payment method used at the time of purchase.\n             This field is only set for certain payment categories, such as ACH and CREDIT_CARD.\n            Most common values are listed in the enum.\n          enum:\n            - CHECKING_PERSONAL\n            - CHECKING_BUSINESS\n            - VISA\n            - MASTER_CARD\n            - AMEX\n            - JCB\n            - UNIONPAY\n          type: string\n      required:\n        - paymentProfileId\n        - amount\n        - category\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Address\": parse schema: property \"country\": parse enum values: parse value \"false\": expected type \"string\", got \"bool\""
}