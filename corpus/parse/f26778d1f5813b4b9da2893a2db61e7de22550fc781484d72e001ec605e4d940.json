{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/4lch4/Ansel"
		},
		"file": {
			"name": "Ansel-API.yaml",
			"size": 0,
			"path": "apps/api/openapi/Ansel-API.yaml",
			"byteSize": 4532,
			"content": "openapi: 3.1.0\ninfo:\n  title: Ansel-API\n  version: '1.0'\n  summary: An API for interacting with S3/B2 compatible storage methods\n  description: 'Ansel is an API for interacting with S3/B2 compatible storage mediums. Provides endpoints for uploading, updating, retrieving, and deleting assets within the storage medium.'\n  contact:\n    name: 4lch4\n    url: 'https://4lch4.social'\n    email: ansel@4lch4.email\n  license:\n    name: GPL-3.0-only\n    identifier: GPL-3.0-only\nservers:\n  - url: 'http://localhost:8080'\n    description: Local Test\n  - url: 'https://test.ansel.cloud'\n    description: Ansel Test\n  - url: 'https://ansel.cloud'\n    description: Ansel Prod\npaths:\n  /list:\n    get:\n      summary: List Folders w/in a Bucket\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                x-examples:\n                  example-1:\n                    count: 54\n                    data:\n                      - alcha\n                      - ami\n                      - battsie\n                      - bite\n                      - blush\n                      - cats\n                      - cheeki\n                      - cheeky\n                      - coffee\n                      - confused\n                      - cry\n                      - dance\n                      - dingle\n                      - disgusted\n                      - dodge\n                      - dreamy\n                      - edge\n                      - foupa\n                      - honkers\n                      - hug\n                      - kayla\n                      - key\n                      - kick\n                      - kill\n                      - killme\n                      - kiss\n                      - lewd\n                      - lick\n                      - love\n                      - miku\n                      - nobulli\n                      - nod\n                      - not-working\n                      - pat\n                      - poke\n                      - pout\n                      - punch\n                      - rawr\n                      - rekt\n                      - rin\n                      - rose\n                      - scare\n                      - shank\n                      - slap\n                      - spank\n                      - spoopy\n                      - squirtle\n                      - sunless\n                      - tickle\n                      - trump\n                      - vapenation\n                      - wave\n                      - whack\n                      - zorika\n                properties:\n                  count:\n                    type: number\n                    description: The amount of folders available.\n                  data:\n                    type: array\n                    uniqueItems: true\n                    description: An array of folder names.\n                    items:\n                      type: string\n                required:\n                  - count\n                  - data\n        '500':\n          description: Internal Server Error\n      operationId: listFolders\n      description: Lists all of the top-level folders within a given bucket. Useful for organi\n  '/:name':\n    get:\n      summary: Your GET endpoint\n      tags: []\n      responses: {}\n      operationId: getRandomAsset\n      description: Retrieves a random asset from a given folder.\n    post:\n      summary: ''\n      operationId: uploadAsset\n      responses:\n        '200':\n          description: OK\n      description: Upload an asset to the given folder and assign it the next ID in the sequence.\n  '/:name/:id':\n    get:\n      summary: Your GET endpoint\n      tags: []\n      responses: {}\n      operationId: getAsset\n      description: Retrieves an asset from the given folder with the given ID.\n    post:\n      summary: ''\n      operationId: uploadAssetById\n      responses:\n        '200':\n          description: OK\n      description: Upload a new asset to the given folder with the given ID.\n    put:\n      summary: ''\n      operationId: updateAsset\n      responses:\n        '200':\n          description: OK\n      description: Update an existing asset from the given folder with the given ID.\n    delete:\n      summary: ''\n      operationId: deleteAsset\n      responses:\n        '200':\n          description: OK\n      description: Delete the asset within the given folder with the given ID.\ncomponents:\n  schemas: {}\n",
			"canonicalURL": "/github.com/4lch4/Ansel@b00674bc90cfa29982acb0c5788e6ba65c6387ef/-/blob/apps/api/openapi/Ansel-API.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/4lch4/Ansel/blob/b00674bc90cfa29982acb0c5788e6ba65c6387ef/apps/api/openapi/Ansel-API.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /:name: get: operation \"getRandomAsset\": responses: no responses"
}