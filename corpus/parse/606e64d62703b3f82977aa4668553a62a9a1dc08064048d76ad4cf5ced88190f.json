{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/networknt/light-docker"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "light-oauth2/mysql/config/oauth2-provider/openapi.yaml",
			"byteSize": 3810,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: OAuth2 provider Registration\n  license:\n    name: MIT\nservers:\n  - url: 'http://light-oauth2.swagger.io'\npaths:\n  /oauth2/provider:\n    post:\n      summary: 'Registe a new oauth provider '\n      operationId: createProvider\n      requestBody:\n        description: provider object\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Provider'\n      tags:\n        - providers\n      security:\n        - provider_auth:\n            - 'read:provider'\n            - write.provider\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Provider'\n        '201':\n          description: Null response\n    put:\n      summary: 'Update oauth provider '\n      operationId: updateProvider\n      requestBody:\n        description: provider object\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Provider'\n      tags:\n        - providers\n      security:\n        - provider_auth:\n            - 'read:provider'\n            - write.provider\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Provider'\n        '201':\n          description: Null response\n    get:\n      summary: 'Return list of registed oauth provider '\n      operationId: getProviders\n      tags:\n        - providers\n      security:\n        - provider_auth:\n            - 'read:provider'\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Provider'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/oauth2/provider/{providerId}':\n    delete:\n      summary: delete a provider by providerId\n      operationId: deleteProviderById\n      tags:\n        - providers\n      parameters:\n        - name: providerId\n          in: path\n          required: true\n          description: The id of the provider\n          schema:\n            type: string\n      security:\n        - provider_auth:\n            - 'read:provider'\n            - 'write:provider'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Provider'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\ncomponents:\n  securitySchemes:\n    provider_auth:\n      type: oauth2\n      description: This API uses OAuth 2 with the client credential grant flow.\n      flows:\n        clientCredentials:\n          tokenUrl: 'https://localhost:6882/token'\n          scopes:\n            'write:provider': modify provider\n            'read:provider': read provider\n  schemas:\n    Provider:\n      required:\n        - serverUrl\n      properties:\n        providerId:\n          type: string\n        serverUrl:\n          type: string\n        uri:\n          type: string\n        providerName:\n          type: string\n    Error:\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n",
			"canonicalURL": "/github.com/networknt/light-docker@781ec1d6ea78dbd6aa6391f9470936a6d779d4b0/-/blob/light-oauth2/mysql/config/oauth2-provider/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/networknt/light-docker/blob/781ec1d6ea78dbd6aa6391f9470936a6d779d4b0/light-oauth2/mysql/config/oauth2-provider/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/oauth2/provider\": at 1:746: put: operation \"updateProvider\": at 1:1736: security: parse security scheme \"provider_auth\": at 1:360: oauth2: at 1:446: flow \"clientCredentials\": at 1:467: unknown scope \"write.provider\""
}