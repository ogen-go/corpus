{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/chainjet/platform"
		},
		"file": {
			"name": "aws-models-lex-2017-04-19.json",
			"size": 0,
			"path": "schemas/openapi3/aws-models-lex-2017-04-19.json",
			"byteSize": 344578,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"version\": \"2017-04-19\",\n    \"x-release\": \"v4\",\n    \"title\": \"Amazon Lex Model Building Service\",\n    \"description\": \"Amazon Lex is an AWS service for building conversational voice and text interfaces. Use these actions to create, update, and delete conversational bots for new and existing client applications.\",\n    \"x-categories\": [\"machine-learning\"],\n    \"x-logo\": {\n      \"url\": \"https://raw.githubusercontent.com/chainjet/assets/master/integrations/aws/Arch_Amazon-Lex_64.svg\"\n    },\n    \"termsOfService\": \"https://aws.amazon.com/service-terms/\",\n    \"contact\": {\n      \"name\": \"Mike Ralphson\",\n      \"email\": \"mike.ralphson@gmail.com\",\n      \"url\": \"https://github.com/mermade/aws2openapi\",\n      \"x-twitter\": \"PermittedSoc\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0 License\",\n      \"url\": \"http://www.apache.org/licenses/\"\n    },\n    \"x-providerName\": \"amazonaws.com\",\n    \"x-serviceName\": \"lex-models\",\n    \"x-origin\": [\n      {\n        \"contentType\": \"application/json\",\n        \"url\": \"https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/lex-models-2017-04-19.normal.json\",\n        \"converter\": {\n          \"url\": \"https://github.com/mermade/aws2openapi\",\n          \"version\": \"1.0.0\"\n        },\n        \"x-apisguru-driver\": \"external\"\n      }\n    ],\n    \"x-apiClientRegistration\": {\n      \"url\": \"https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\"\n    },\n    \"x-apisguru-categories\": [\"cloud\"],\n    \"x-preferred\": true\n  },\n  \"externalDocs\": {\n    \"description\": \"Amazon Web Services documentation\",\n    \"url\": \"https://docs.aws.amazon.com/lex/\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://models.lex.{region}.amazonaws.com\",\n      \"variables\": {\n        \"region\": {\n          \"description\": \"The AWS region\",\n          \"enum\": [\n            \"us-east-1\",\n            \"us-east-2\",\n            \"us-west-1\",\n            \"us-west-2\",\n            \"us-gov-west-1\",\n            \"us-gov-east-1\",\n            \"ca-central-1\",\n            \"eu-north-1\",\n            \"eu-west-1\",\n            \"eu-west-2\",\n            \"eu-west-3\",\n            \"eu-central-1\",\n            \"eu-south-1\",\n            \"af-south-1\",\n            \"ap-northeast-1\",\n            \"ap-northeast-2\",\n            \"ap-northeast-3\",\n            \"ap-southeast-1\",\n            \"ap-southeast-2\",\n            \"ap-east-1\",\n            \"ap-south-1\",\n            \"sa-east-1\",\n            \"me-south-1\"\n          ],\n          \"default\": \"us-east-1\"\n        }\n      },\n      \"description\": \"The Amazon Lex Model Building Service multi-region endpoint\"\n    },\n    {\n      \"url\": \"https://models.lex.{region}.amazonaws.com\",\n      \"variables\": {\n        \"region\": {\n          \"description\": \"The AWS region\",\n          \"enum\": [\n            \"us-east-1\",\n            \"us-east-2\",\n            \"us-west-1\",\n            \"us-west-2\",\n            \"us-gov-west-1\",\n            \"us-gov-east-1\",\n            \"ca-central-1\",\n            \"eu-north-1\",\n            \"eu-west-1\",\n            \"eu-west-2\",\n            \"eu-west-3\",\n            \"eu-central-1\",\n            \"eu-south-1\",\n            \"af-south-1\",\n            \"ap-northeast-1\",\n            \"ap-northeast-2\",\n            \"ap-northeast-3\",\n            \"ap-southeast-1\",\n            \"ap-southeast-2\",\n            \"ap-east-1\",\n            \"ap-south-1\",\n            \"sa-east-1\",\n            \"me-south-1\"\n          ],\n          \"default\": \"us-east-1\"\n        }\n      },\n      \"description\": \"The Amazon Lex Model Building Service multi-region endpoint\"\n    },\n    {\n      \"url\": \"http://models.lex.{region}.amazonaws.com.cn\",\n      \"variables\": {\n        \"region\": {\n          \"description\": \"The AWS region\",\n          \"enum\": [\"cn-north-1\", \"cn-northwest-1\"],\n          \"default\": \"cn-north-1\"\n        }\n      },\n      \"description\": \"The Amazon Lex Model Building Service endpoint for China (Beijing) and China (Ningxia)\"\n    },\n    {\n      \"url\": \"https://models.lex.{region}.amazonaws.com.cn\",\n      \"variables\": {\n        \"region\": {\n          \"description\": \"The AWS region\",\n          \"enum\": [\"cn-north-1\", \"cn-northwest-1\"],\n          \"default\": \"cn-north-1\"\n        }\n      },\n      \"description\": \"The Amazon Lex Model Building Service endpoint for China (Beijing) and China (Ningxia)\"\n    }\n  ],\n  \"x-hasEquivalentPaths\": true,\n  \"paths\": {\n    \"/bots/{name}/versions\": {\n      \"post\": {\n        \"operationId\": \"CreateBotVersion\",\n        \"description\": \"\u003cp\u003eCreates a new version of the bot based on the \u003ccode\u003e$LATEST\u003c/code\u003e version. If the \u003ccode\u003e$LATEST\u003c/code\u003e version of this resource hasn't changed since you created the last version, Amazon Lex doesn't create a new version. It returns the last created version.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eYou can update only the \u003ccode\u003e$LATEST\u003c/code\u003e version of the bot. You can't update the numbered versions that you create with the \u003ccode\u003eCreateBotVersion\u003c/code\u003e operation.\u003c/p\u003e \u003c/note\u003e \u003cp\u003e When you create the first version of a bot, Amazon Lex sets the version to 1. Subsequent versions increment by 1. For more information, see \u003ca\u003eversioning-intro\u003c/a\u003e. \u003c/p\u003e \u003cp\u003e This operation requires permission for the \u003ccode\u003elex:CreateBotVersion\u003c/code\u003e action. \u003c/p\u003e\",\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CreateBotVersionResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"ConflictException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ConflictException\" }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"PreconditionFailedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PreconditionFailedException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the bot that you want to create a new version of. The name is case sensitive. \",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 2,\n              \"maxLength\": 50\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"checksum\": {\n                    \"description\": \"Identifies a specific revision of the \u003ccode\u003e$LATEST\u003c/code\u003e version of the bot. If you specify a checksum and the \u003ccode\u003e$LATEST\u003c/code\u003e version of the bot has a different checksum, a \u003ccode\u003ePreconditionFailedException\u003c/code\u003e exception is returned and Amazon Lex doesn't publish a new version. If you don't specify a checksum, Amazon Lex publishes the \u003ccode\u003e$LATEST\u003c/code\u003e version.\",\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"summary\": \"Create Bot Version\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/intents/{name}/versions\": {\n      \"post\": {\n        \"operationId\": \"CreateIntentVersion\",\n        \"description\": \"\u003cp\u003eCreates a new version of an intent based on the \u003ccode\u003e$LATEST\u003c/code\u003e version of the intent. If the \u003ccode\u003e$LATEST\u003c/code\u003e version of this intent hasn't changed since you last updated it, Amazon Lex doesn't create a new version. It returns the last version you created.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eYou can update only the \u003ccode\u003e$LATEST\u003c/code\u003e version of the intent. You can't update the numbered versions that you create with the \u003ccode\u003eCreateIntentVersion\u003c/code\u003e operation.\u003c/p\u003e \u003c/note\u003e \u003cp\u003e When you create a version of an intent, Amazon Lex sets the version to 1. Subsequent versions increment by 1. For more information, see \u003ca\u003eversioning-intro\u003c/a\u003e. \u003c/p\u003e \u003cp\u003eThis operation requires permissions to perform the \u003ccode\u003elex:CreateIntentVersion\u003c/code\u003e action. \u003c/p\u003e\",\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CreateIntentVersionResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"ConflictException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ConflictException\" }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"PreconditionFailedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PreconditionFailedException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the intent that you want to create a new version of. The name is case sensitive. \",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 1,\n              \"maxLength\": 100\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"checksum\": {\n                    \"description\": \"Checksum of the \u003ccode\u003e$LATEST\u003c/code\u003e version of the intent that should be used to create the new version. If you specify a checksum and the \u003ccode\u003e$LATEST\u003c/code\u003e version of the intent has a different checksum, Amazon Lex returns a \u003ccode\u003ePreconditionFailedException\u003c/code\u003e exception and doesn't publish a new version. If you don't specify a checksum, Amazon Lex publishes the \u003ccode\u003e$LATEST\u003c/code\u003e version.\",\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"summary\": \"Create Intent Version\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/slottypes/{name}/versions\": {\n      \"post\": {\n        \"operationId\": \"CreateSlotTypeVersion\",\n        \"description\": \"\u003cp\u003eCreates a new version of a slot type based on the \u003ccode\u003e$LATEST\u003c/code\u003e version of the specified slot type. If the \u003ccode\u003e$LATEST\u003c/code\u003e version of this resource has not changed since the last version that you created, Amazon Lex doesn't create a new version. It returns the last version that you created. \u003c/p\u003e \u003cnote\u003e \u003cp\u003eYou can update only the \u003ccode\u003e$LATEST\u003c/code\u003e version of a slot type. You can't update the numbered versions that you create with the \u003ccode\u003eCreateSlotTypeVersion\u003c/code\u003e operation.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eWhen you create a version of a slot type, Amazon Lex sets the version to 1. Subsequent versions increment by 1. For more information, see \u003ca\u003eversioning-intro\u003c/a\u003e. \u003c/p\u003e \u003cp\u003eThis operation requires permissions for the \u003ccode\u003elex:CreateSlotTypeVersion\u003c/code\u003e action.\u003c/p\u003e\",\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CreateSlotTypeVersionResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"ConflictException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ConflictException\" }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"PreconditionFailedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PreconditionFailedException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the slot type that you want to create a new version for. The name is case sensitive. \",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 1,\n              \"maxLength\": 100\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"checksum\": {\n                    \"description\": \"Checksum for the \u003ccode\u003e$LATEST\u003c/code\u003e version of the slot type that you want to publish. If you specify a checksum and the \u003ccode\u003e$LATEST\u003c/code\u003e version of the slot type has a different checksum, Amazon Lex returns a \u003ccode\u003ePreconditionFailedException\u003c/code\u003e exception and doesn't publish the new version. If you don't specify a checksum, Amazon Lex publishes the \u003ccode\u003e$LATEST\u003c/code\u003e version.\",\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"summary\": \"Create Slot Type Version\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/bots/{name}\": {\n      \"delete\": {\n        \"operationId\": \"DeleteBot\",\n        \"description\": \"\u003cp\u003eDeletes all versions of the bot, including the \u003ccode\u003e$LATEST\u003c/code\u003e version. To delete a specific version of the bot, use the \u003ca\u003eDeleteBotVersion\u003c/a\u003e operation. The \u003ccode\u003eDeleteBot\u003c/code\u003e operation doesn't immediately remove the bot schema. Instead, it is marked for deletion and removed later.\u003c/p\u003e \u003cp\u003eAmazon Lex stores utterances indefinitely for improving the ability of your bot to respond to user inputs. These utterances are not removed when the bot is deleted. To remove the utterances, use the \u003ca\u003eDeleteUtterances\u003c/a\u003e operation.\u003c/p\u003e \u003cp\u003eIf a bot has an alias, you can't delete it. Instead, the \u003ccode\u003eDeleteBot\u003c/code\u003e operation returns a \u003ccode\u003eResourceInUseException\u003c/code\u003e exception that includes a reference to the alias that refers to the bot. To remove the reference to the bot, delete the alias. If you get the same exception again, delete the referring alias until the \u003ccode\u003eDeleteBot\u003c/code\u003e operation is successful.\u003c/p\u003e \u003cp\u003eThis operation requires permissions for the \u003ccode\u003elex:DeleteBot\u003c/code\u003e action.\u003c/p\u003e\",\n        \"responses\": {\n          \"204\": { \"description\": \"Success\" },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"ConflictException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ConflictException\" }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"ResourceInUseException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResourceInUseException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the bot. The name is case sensitive. \",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 2,\n              \"maxLength\": 50\n            }\n          }\n        ],\n        \"summary\": \"Delete Bot\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/bots/{botName}/aliases/{name}\": {\n      \"delete\": {\n        \"operationId\": \"DeleteBotAlias\",\n        \"description\": \"\u003cp\u003eDeletes an alias for the specified bot. \u003c/p\u003e \u003cp\u003eYou can't delete an alias that is used in the association between a bot and a messaging channel. If an alias is used in a channel association, the \u003ccode\u003eDeleteBot\u003c/code\u003e operation returns a \u003ccode\u003eResourceInUseException\u003c/code\u003e exception that includes a reference to the channel association that refers to the bot. You can remove the reference to the alias by deleting the channel association. If you get the same exception again, delete the referring association until the \u003ccode\u003eDeleteBotAlias\u003c/code\u003e operation is successful.\u003c/p\u003e\",\n        \"responses\": {\n          \"204\": { \"description\": \"Success\" },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"ConflictException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ConflictException\" }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"ResourceInUseException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResourceInUseException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the alias to delete. The name is case sensitive. \",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 1,\n              \"maxLength\": 100\n            }\n          },\n          {\n            \"name\": \"botName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the bot that the alias points to.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 2,\n              \"maxLength\": 50\n            }\n          }\n        ],\n        \"summary\": \"Delete Bot Alias\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ],\n      \"get\": {\n        \"operationId\": \"GetBotAlias\",\n        \"description\": \"\u003cp\u003eReturns information about an Amazon Lex bot alias. For more information about aliases, see \u003ca\u003eversioning-aliases\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eThis operation requires permissions for the \u003ccode\u003elex:GetBotAlias\u003c/code\u003e action.\u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/GetBotAliasResponse\" }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the bot alias. The name is case sensitive.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 1,\n              \"maxLength\": 100\n            }\n          },\n          {\n            \"name\": \"botName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the bot.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 2,\n              \"maxLength\": 50\n            }\n          }\n        ],\n        \"summary\": \"Get Bot Alias\"\n      },\n      \"put\": {\n        \"operationId\": \"PutBotAlias\",\n        \"description\": \"\u003cp\u003eCreates an alias for the specified version of the bot or replaces an alias for the specified bot. To change the version of the bot that the alias points to, replace the alias. For more information about aliases, see \u003ca\u003eversioning-aliases\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eThis operation requires permissions for the \u003ccode\u003elex:PutBotAlias\u003c/code\u003e action. \u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/PutBotAliasResponse\" }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ConflictException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ConflictException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"PreconditionFailedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PreconditionFailedException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the alias. The name is \u003ci\u003enot\u003c/i\u003e case sensitive.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 1,\n              \"maxLength\": 100\n            }\n          },\n          {\n            \"name\": \"botName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the bot.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 2,\n              \"maxLength\": 50\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\"botVersion\"],\n                \"properties\": {\n                  \"description\": {\n                    \"description\": \"A description of the alias.\",\n                    \"type\": \"string\",\n                    \"minLength\": 0,\n                    \"maxLength\": 200\n                  },\n                  \"botVersion\": {\n                    \"description\": \"The version of the bot.\",\n                    \"type\": \"string\",\n                    \"pattern\": \"\\\\$LATEST|[0-9]+\",\n                    \"minLength\": 1,\n                    \"maxLength\": 64\n                  },\n                  \"checksum\": {\n                    \"description\": \"\u003cp\u003eIdentifies a specific revision of the \u003ccode\u003e$LATEST\u003c/code\u003e version.\u003c/p\u003e \u003cp\u003eWhen you create a new bot alias, leave the \u003ccode\u003echecksum\u003c/code\u003e field blank. If you specify a checksum you get a \u003ccode\u003eBadRequestException\u003c/code\u003e exception.\u003c/p\u003e \u003cp\u003eWhen you want to update a bot alias, set the \u003ccode\u003echecksum\u003c/code\u003e field to the checksum of the most recent revision of the \u003ccode\u003e$LATEST\u003c/code\u003e version. If you don't specify the \u003ccode\u003e checksum\u003c/code\u003e field, or if the checksum does not match the \u003ccode\u003e$LATEST\u003c/code\u003e version, you get a \u003ccode\u003ePreconditionFailedException\u003c/code\u003e exception.\u003c/p\u003e\",\n                    \"type\": \"string\"\n                  },\n                  \"conversationLogs\": {\n                    \"description\": \"Provides the settings needed for conversation logs.\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"logSettings\": {\n                        \"allOf\": [\n                          {\n                            \"$ref\": \"#/components/schemas/LogSettingsRequestList\"\n                          },\n                          {\n                            \"description\": \"The settings for your conversation logs. You can log the conversation text, conversation audio, or both.\"\n                          }\n                        ]\n                      },\n                      \"iamRoleArn\": {\n                        \"allOf\": [\n                          { \"$ref\": \"#/components/schemas/IamRoleArn\" },\n                          {\n                            \"description\": \"The Amazon Resource Name (ARN) of an IAM role with permission to write to your CloudWatch Logs for text logs and your S3 bucket for audio logs. If audio encryption is enabled, this role also provides access permission for the AWS KMS key used for encrypting audio logs. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/lex/latest/dg/conversation-logs-role-and-policy.html\\\"\u003eCreating an IAM Role and Policy for Conversation Logs\u003c/a\u003e.\"\n                          }\n                        ]\n                      }\n                    }\n                  },\n                  \"tags\": {\n                    \"description\": \"A list of tags to add to the bot alias. You can only add tags when you create an alias, you can't use the \u003ccode\u003ePutBotAlias\u003c/code\u003e operation to update the tags on a bot alias. To update tags, use the \u003ccode\u003eTagResource\u003c/code\u003e operation.\",\n                    \"type\": \"array\",\n                    \"items\": { \"$ref\": \"#/components/schemas/Tag\" },\n                    \"minItems\": 0,\n                    \"maxItems\": 200\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"summary\": \"Put Bot Alias\"\n      }\n    },\n    \"/bots/{botName}/aliases/{aliasName}/channels/{name}\": {\n      \"delete\": {\n        \"operationId\": \"DeleteBotChannelAssociation\",\n        \"description\": \"\u003cp\u003eDeletes the association between an Amazon Lex bot and a messaging platform.\u003c/p\u003e \u003cp\u003eThis operation requires permission for the \u003ccode\u003elex:DeleteBotChannelAssociation\u003c/code\u003e action.\u003c/p\u003e\",\n        \"responses\": {\n          \"204\": { \"description\": \"Success\" },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"ConflictException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ConflictException\" }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the association. The name is case sensitive. \",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 1,\n              \"maxLength\": 100\n            }\n          },\n          {\n            \"name\": \"botName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the Amazon Lex bot.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 2,\n              \"maxLength\": 50\n            }\n          },\n          {\n            \"name\": \"aliasName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"An alias that points to the specific version of the Amazon Lex bot to which this association is being made.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 1,\n              \"maxLength\": 100\n            }\n          }\n        ],\n        \"summary\": \"Delete Bot Channel Association\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ],\n      \"get\": {\n        \"operationId\": \"GetBotChannelAssociation\",\n        \"description\": \"\u003cp\u003eReturns information about the association between an Amazon Lex bot and a messaging platform.\u003c/p\u003e \u003cp\u003eThis operation requires permissions for the \u003ccode\u003elex:GetBotChannelAssociation\u003c/code\u003e action.\u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetBotChannelAssociationResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the association between the bot and the channel. The name is case sensitive. \",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 1,\n              \"maxLength\": 100\n            }\n          },\n          {\n            \"name\": \"botName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the Amazon Lex bot.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 2,\n              \"maxLength\": 50\n            }\n          },\n          {\n            \"name\": \"aliasName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"An alias pointing to the specific version of the Amazon Lex bot to which this association is being made.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 1,\n              \"maxLength\": 100\n            }\n          }\n        ],\n        \"summary\": \"Get Bot Channel Association\"\n      }\n    },\n    \"/bots/{name}/versions/{version}\": {\n      \"delete\": {\n        \"operationId\": \"DeleteBotVersion\",\n        \"description\": \"\u003cp\u003eDeletes a specific version of a bot. To delete all versions of a bot, use the \u003ca\u003eDeleteBot\u003c/a\u003e operation. \u003c/p\u003e \u003cp\u003eThis operation requires permissions for the \u003ccode\u003elex:DeleteBotVersion\u003c/code\u003e action.\u003c/p\u003e\",\n        \"responses\": {\n          \"204\": { \"description\": \"Success\" },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"ConflictException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ConflictException\" }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"ResourceInUseException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResourceInUseException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the bot.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 2,\n              \"maxLength\": 50\n            }\n          },\n          {\n            \"name\": \"version\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The version of the bot to delete. You cannot delete the \u003ccode\u003e$LATEST\u003c/code\u003e version of the bot. To delete the \u003ccode\u003e$LATEST\u003c/code\u003e version, use the \u003ca\u003eDeleteBot\u003c/a\u003e operation.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"[0-9]+\",\n              \"minLength\": 1,\n              \"maxLength\": 64\n            }\n          }\n        ],\n        \"summary\": \"Delete Bot Version\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/intents/{name}\": {\n      \"delete\": {\n        \"operationId\": \"DeleteIntent\",\n        \"description\": \"\u003cp\u003eDeletes all versions of the intent, including the \u003ccode\u003e$LATEST\u003c/code\u003e version. To delete a specific version of the intent, use the \u003ca\u003eDeleteIntentVersion\u003c/a\u003e operation.\u003c/p\u003e \u003cp\u003e You can delete a version of an intent only if it is not referenced. To delete an intent that is referred to in one or more bots (see \u003ca\u003ehow-it-works\u003c/a\u003e), you must remove those references first. \u003c/p\u003e \u003cnote\u003e \u003cp\u003e If you get the \u003ccode\u003eResourceInUseException\u003c/code\u003e exception, it provides an example reference that shows where the intent is referenced. To remove the reference to the intent, either update the bot or delete it. If you get the same exception when you attempt to delete the intent again, repeat until the intent has no references and the call to \u003ccode\u003eDeleteIntent\u003c/code\u003e is successful. \u003c/p\u003e \u003c/note\u003e \u003cp\u003e This operation requires permission for the \u003ccode\u003elex:DeleteIntent\u003c/code\u003e action. \u003c/p\u003e\",\n        \"responses\": {\n          \"204\": { \"description\": \"Success\" },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"ConflictException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ConflictException\" }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"ResourceInUseException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResourceInUseException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the intent. The name is case sensitive. \",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 1,\n              \"maxLength\": 100\n            }\n          }\n        ],\n        \"summary\": \"Delete Intent\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/intents/{name}/versions/{version}\": {\n      \"delete\": {\n        \"operationId\": \"DeleteIntentVersion\",\n        \"description\": \"\u003cp\u003eDeletes a specific version of an intent. To delete all versions of a intent, use the \u003ca\u003eDeleteIntent\u003c/a\u003e operation. \u003c/p\u003e \u003cp\u003eThis operation requires permissions for the \u003ccode\u003elex:DeleteIntentVersion\u003c/code\u003e action.\u003c/p\u003e\",\n        \"responses\": {\n          \"204\": { \"description\": \"Success\" },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"ConflictException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ConflictException\" }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"ResourceInUseException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResourceInUseException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the intent.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 1,\n              \"maxLength\": 100\n            }\n          },\n          {\n            \"name\": \"version\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The version of the intent to delete. You cannot delete the \u003ccode\u003e$LATEST\u003c/code\u003e version of the intent. To delete the \u003ccode\u003e$LATEST\u003c/code\u003e version, use the \u003ca\u003eDeleteIntent\u003c/a\u003e operation.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"[0-9]+\",\n              \"minLength\": 1,\n              \"maxLength\": 64\n            }\n          }\n        ],\n        \"summary\": \"Delete Intent Version\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ],\n      \"get\": {\n        \"operationId\": \"GetIntent\",\n        \"description\": \"\u003cp\u003e Returns information about an intent. In addition to the intent name, you must specify the intent version. \u003c/p\u003e \u003cp\u003e This operation requires permissions to perform the \u003ccode\u003elex:GetIntent\u003c/code\u003e action. \u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/GetIntentResponse\" }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the intent. The name is case sensitive. \",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 1,\n              \"maxLength\": 100\n            }\n          },\n          {\n            \"name\": \"version\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The version of the intent.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"\\\\$LATEST|[0-9]+\",\n              \"minLength\": 1,\n              \"maxLength\": 64\n            }\n          }\n        ],\n        \"summary\": \"Get Intent\"\n      }\n    },\n    \"/slottypes/{name}\": {\n      \"delete\": {\n        \"operationId\": \"DeleteSlotType\",\n        \"description\": \"\u003cp\u003eDeletes all versions of the slot type, including the \u003ccode\u003e$LATEST\u003c/code\u003e version. To delete a specific version of the slot type, use the \u003ca\u003eDeleteSlotTypeVersion\u003c/a\u003e operation.\u003c/p\u003e \u003cp\u003e You can delete a version of a slot type only if it is not referenced. To delete a slot type that is referred to in one or more intents, you must remove those references first. \u003c/p\u003e \u003cnote\u003e \u003cp\u003e If you get the \u003ccode\u003eResourceInUseException\u003c/code\u003e exception, the exception provides an example reference that shows the intent where the slot type is referenced. To remove the reference to the slot type, either update the intent or delete it. If you get the same exception when you attempt to delete the slot type again, repeat until the slot type has no references and the \u003ccode\u003eDeleteSlotType\u003c/code\u003e call is successful. \u003c/p\u003e \u003c/note\u003e \u003cp\u003eThis operation requires permission for the \u003ccode\u003elex:DeleteSlotType\u003c/code\u003e action.\u003c/p\u003e\",\n        \"responses\": {\n          \"204\": { \"description\": \"Success\" },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"ConflictException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ConflictException\" }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"ResourceInUseException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResourceInUseException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the slot type. The name is case sensitive. \",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 1,\n              \"maxLength\": 100\n            }\n          }\n        ],\n        \"summary\": \"Delete Slot Type\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/slottypes/{name}/version/{version}\": {\n      \"delete\": {\n        \"operationId\": \"DeleteSlotTypeVersion\",\n        \"description\": \"\u003cp\u003eDeletes a specific version of a slot type. To delete all versions of a slot type, use the \u003ca\u003eDeleteSlotType\u003c/a\u003e operation. \u003c/p\u003e \u003cp\u003eThis operation requires permissions for the \u003ccode\u003elex:DeleteSlotTypeVersion\u003c/code\u003e action.\u003c/p\u003e\",\n        \"responses\": {\n          \"204\": { \"description\": \"Success\" },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"ConflictException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ConflictException\" }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"ResourceInUseException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResourceInUseException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the slot type.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 1,\n              \"maxLength\": 100\n            }\n          },\n          {\n            \"name\": \"version\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The version of the slot type to delete. You cannot delete the \u003ccode\u003e$LATEST\u003c/code\u003e version of the slot type. To delete the \u003ccode\u003e$LATEST\u003c/code\u003e version, use the \u003ca\u003eDeleteSlotType\u003c/a\u003e operation.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"[0-9]+\",\n              \"minLength\": 1,\n              \"maxLength\": 64\n            }\n          }\n        ],\n        \"summary\": \"Delete Slot Type Version\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/bots/{botName}/utterances/{userId}\": {\n      \"delete\": {\n        \"operationId\": \"DeleteUtterances\",\n        \"description\": \"\u003cp\u003eDeletes stored utterances.\u003c/p\u003e \u003cp\u003eAmazon Lex stores the utterances that users send to your bot. Utterances are stored for 15 days for use with the \u003ca\u003eGetUtterancesView\u003c/a\u003e operation, and then stored indefinitely for use in improving the ability of your bot to respond to user input.\u003c/p\u003e \u003cp\u003eUse the \u003ccode\u003eDeleteUtterances\u003c/code\u003e operation to manually delete stored utterances for a specific user. When you use the \u003ccode\u003eDeleteUtterances\u003c/code\u003e operation, utterances stored for improving your bot's ability to respond to user input are deleted immediately. Utterances stored for use with the \u003ccode\u003eGetUtterancesView\u003c/code\u003e operation are deleted after 15 days.\u003c/p\u003e \u003cp\u003eThis operation requires permissions for the \u003ccode\u003elex:DeleteUtterances\u003c/code\u003e action.\u003c/p\u003e\",\n        \"responses\": {\n          \"204\": { \"description\": \"Success\" },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"botName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the bot that stored the utterances.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 2,\n              \"maxLength\": 50\n            }\n          },\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \" The unique identifier for the user that made the utterances. This is the user ID that was sent in the \u003ca href=\\\"http://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostContent.html\\\"\u003ePostContent\u003c/a\u003e or \u003ca href=\\\"http://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostText.html\\\"\u003ePostText\u003c/a\u003e operation request that contained the utterance.\",\n            \"schema\": { \"type\": \"string\", \"minLength\": 2, \"maxLength\": 100 }\n          }\n        ],\n        \"summary\": \"Delete Utterances\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/bots/{name}/versions/{versionoralias}\": {\n      \"get\": {\n        \"operationId\": \"GetBot\",\n        \"description\": \"\u003cp\u003eReturns metadata information for a specific bot. You must provide the bot name and the bot version or alias. \u003c/p\u003e \u003cp\u003e This operation requires permissions for the \u003ccode\u003elex:GetBot\u003c/code\u003e action. \u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/GetBotResponse\" }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the bot. The name is case sensitive. \",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 2,\n              \"maxLength\": 50\n            }\n          },\n          {\n            \"name\": \"versionoralias\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The version or alias of the bot.\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"summary\": \"Get Bot\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/bots/{botName}/aliases/\": {\n      \"get\": {\n        \"operationId\": \"GetBotAliases\",\n        \"description\": \"\u003cp\u003eReturns a list of aliases for a specified Amazon Lex bot.\u003c/p\u003e \u003cp\u003eThis operation requires permissions for the \u003ccode\u003elex:GetBotAliases\u003c/code\u003e action.\u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetBotAliasesResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"botName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the bot.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 2,\n              \"maxLength\": 50\n            }\n          },\n          {\n            \"name\": \"nextToken\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"A pagination token for fetching the next page of aliases. If the response to this call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of aliases, specify the pagination token in the next request. \",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"maxResults\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"The maximum number of aliases to return in the response. The default is 50. . \",\n            \"schema\": { \"type\": \"integer\", \"minimum\": 1, \"maximum\": 50 }\n          },\n          {\n            \"name\": \"nameContains\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Substring to match in bot alias names. An alias will be returned if any part of its name matches the substring. For example, \\\"xyz\\\" matches both \\\"xyzabc\\\" and \\\"abcxyz.\\\"\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 1,\n              \"maxLength\": 100\n            }\n          }\n        ],\n        \"summary\": \"Get Bot Aliases\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/bots/{botName}/aliases/{aliasName}/channels/\": {\n      \"get\": {\n        \"operationId\": \"GetBotChannelAssociations\",\n        \"description\": \"\u003cp\u003e Returns a list of all of the channels associated with the specified bot. \u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eGetBotChannelAssociations\u003c/code\u003e operation requires permissions for the \u003ccode\u003elex:GetBotChannelAssociations\u003c/code\u003e action.\u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetBotChannelAssociationsResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"botName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the Amazon Lex bot in the association.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 2,\n              \"maxLength\": 50\n            }\n          },\n          {\n            \"name\": \"aliasName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"An alias pointing to the specific version of the Amazon Lex bot to which this association is being made.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^(-|^([A-Za-z]_?)+$)$\",\n              \"minLength\": 1,\n              \"maxLength\": 100\n            }\n          },\n          {\n            \"name\": \"nextToken\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"A pagination token for fetching the next page of associations. If the response to this call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of associations, specify the pagination token in the next request. \",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"maxResults\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"The maximum number of associations to return in the response. The default is 50. \",\n            \"schema\": { \"type\": \"integer\", \"minimum\": 1, \"maximum\": 50 }\n          },\n          {\n            \"name\": \"nameContains\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Substring to match in channel association names. An association will be returned if any part of its name matches the substring. For example, \\\"xyz\\\" matches both \\\"xyzabc\\\" and \\\"abcxyz.\\\" To return all bot channel associations, use a hyphen (\\\"-\\\") as the \u003ccode\u003enameContains\u003c/code\u003e parameter.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 1,\n              \"maxLength\": 100\n            }\n          }\n        ],\n        \"summary\": \"Get Bot Channel Associations\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/bots/{name}/versions/\": {\n      \"get\": {\n        \"operationId\": \"GetBotVersions\",\n        \"description\": \"\u003cp\u003eGets information about all of the versions of a bot.\u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eGetBotVersions\u003c/code\u003e operation returns a \u003ccode\u003eBotMetadata\u003c/code\u003e object for each version of a bot. For example, if a bot has three numbered versions, the \u003ccode\u003eGetBotVersions\u003c/code\u003e operation returns four \u003ccode\u003eBotMetadata\u003c/code\u003e objects in the response, one for each numbered version and one for the \u003ccode\u003e$LATEST\u003c/code\u003e version. \u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eGetBotVersions\u003c/code\u003e operation always returns at least one version, the \u003ccode\u003e$LATEST\u003c/code\u003e version.\u003c/p\u003e \u003cp\u003eThis operation requires permissions for the \u003ccode\u003elex:GetBotVersions\u003c/code\u003e action.\u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetBotVersionsResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the bot for which versions should be returned.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 2,\n              \"maxLength\": 50\n            }\n          },\n          {\n            \"name\": \"nextToken\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"A pagination token for fetching the next page of bot versions. If the response to this call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of versions, specify the pagination token in the next request. \",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"maxResults\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"The maximum number of bot versions to return in the response. The default is 10.\",\n            \"schema\": { \"type\": \"integer\", \"minimum\": 1, \"maximum\": 50 }\n          }\n        ],\n        \"summary\": \"Get Bot Versions\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/bots/\": {\n      \"get\": {\n        \"operationId\": \"GetBots\",\n        \"description\": \"\u003cp\u003eReturns bot information as follows: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eIf you provide the \u003ccode\u003enameContains\u003c/code\u003e field, the response includes information for the \u003ccode\u003e$LATEST\u003c/code\u003e version of all bots whose name contains the specified string.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf you don't specify the \u003ccode\u003enameContains\u003c/code\u003e field, the operation returns information about the \u003ccode\u003e$LATEST\u003c/code\u003e version of all of your bots.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eThis operation requires permission for the \u003ccode\u003elex:GetBots\u003c/code\u003e action.\u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/GetBotsResponse\" }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"nextToken\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"A pagination token that fetches the next page of bots. If the response to this call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of bots, specify the pagination token in the next request. \",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"maxResults\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"The maximum number of bots to return in the response that the request will return. The default is 10.\",\n            \"schema\": { \"type\": \"integer\", \"minimum\": 1, \"maximum\": 50 }\n          },\n          {\n            \"name\": \"nameContains\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Substring to match in bot names. A bot will be returned if any part of its name matches the substring. For example, \\\"xyz\\\" matches both \\\"xyzabc\\\" and \\\"abcxyz.\\\"\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 2,\n              \"maxLength\": 50\n            }\n          }\n        ],\n        \"summary\": \"Get Bots\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/builtins/intents/{signature}\": {\n      \"get\": {\n        \"operationId\": \"GetBuiltinIntent\",\n        \"description\": \"\u003cp\u003eReturns information about a built-in intent.\u003c/p\u003e \u003cp\u003eThis operation requires permission for the \u003ccode\u003elex:GetBuiltinIntent\u003c/code\u003e action.\u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetBuiltinIntentResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"signature\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The unique identifier for a built-in intent. To find the signature for an intent, see \u003ca href=\\\"https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents\\\"\u003eStandard Built-in Intents\u003c/a\u003e in the \u003ci\u003eAlexa Skills Kit\u003c/i\u003e.\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"summary\": \"Get Builtin Intent\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/builtins/intents/\": {\n      \"get\": {\n        \"operationId\": \"GetBuiltinIntents\",\n        \"description\": \"\u003cp\u003eGets a list of built-in intents that meet the specified criteria.\u003c/p\u003e \u003cp\u003eThis operation requires permission for the \u003ccode\u003elex:GetBuiltinIntents\u003c/code\u003e action.\u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetBuiltinIntentsResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"locale\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"A list of locales that the intent supports.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"en-US\",\n                \"en-GB\",\n                \"de-DE\",\n                \"en-AU\",\n                \"es-US\",\n                \"es-US\",\n                \"fr-FR\",\n                \"fr-CA\",\n                \"it-IT\",\n                \"it-IT\",\n                \"it-IT\",\n                \"ja-JP\",\n                \"ko-KR\"\n              ]\n            }\n          },\n          {\n            \"name\": \"signatureContains\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Substring to match in built-in intent signatures. An intent will be returned if any part of its signature matches the substring. For example, \\\"xyz\\\" matches both \\\"xyzabc\\\" and \\\"abcxyz.\\\" To find the signature for an intent, see \u003ca href=\\\"https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents\\\"\u003eStandard Built-in Intents\u003c/a\u003e in the \u003ci\u003eAlexa Skills Kit\u003c/i\u003e.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"nextToken\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"A pagination token that fetches the next page of intents. If this API call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of intents, use the pagination token in the next request.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"maxResults\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"The maximum number of intents to return in the response. The default is 10.\",\n            \"schema\": { \"type\": \"integer\", \"minimum\": 1, \"maximum\": 50 }\n          }\n        ],\n        \"summary\": \"Get Builtin Intents\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/builtins/slottypes/\": {\n      \"get\": {\n        \"operationId\": \"GetBuiltinSlotTypes\",\n        \"description\": \"\u003cp\u003eGets a list of built-in slot types that meet the specified criteria.\u003c/p\u003e \u003cp\u003eFor a list of built-in slot types, see \u003ca href=\\\"https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/slot-type-reference\\\"\u003eSlot Type Reference\u003c/a\u003e in the \u003ci\u003eAlexa Skills Kit\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eThis operation requires permission for the \u003ccode\u003elex:GetBuiltInSlotTypes\u003c/code\u003e action.\u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetBuiltinSlotTypesResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"locale\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"A list of locales that the slot type supports.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"en-US\",\n                \"en-GB\",\n                \"de-DE\",\n                \"en-AU\",\n                \"es-US\",\n                \"es-US\",\n                \"fr-FR\",\n                \"fr-CA\",\n                \"it-IT\",\n                \"it-IT\",\n                \"it-IT\",\n                \"ja-JP\",\n                \"ko-KR\"\n              ]\n            }\n          },\n          {\n            \"name\": \"signatureContains\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Substring to match in built-in slot type signatures. A slot type will be returned if any part of its signature matches the substring. For example, \\\"xyz\\\" matches both \\\"xyzabc\\\" and \\\"abcxyz.\\\"\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"nextToken\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"A pagination token that fetches the next page of slot types. If the response to this API call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of slot types, specify the pagination token in the next request.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"maxResults\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"The maximum number of slot types to return in the response. The default is 10.\",\n            \"schema\": { \"type\": \"integer\", \"minimum\": 1, \"maximum\": 50 }\n          }\n        ],\n        \"summary\": \"Get Builtin Slot Types\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/exports/#name\u0026version\u0026resourceType\u0026exportType\": {\n      \"get\": {\n        \"operationId\": \"GetExport\",\n        \"description\": \"Exports the contents of a Amazon Lex resource in a specified format. \",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/GetExportResponse\" }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"description\": \"The name of the bot to export.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"[a-zA-Z_]+\",\n              \"minLength\": 1,\n              \"maxLength\": 100\n            }\n          },\n          {\n            \"name\": \"version\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"description\": \"The version of the bot to export.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"[0-9]+\",\n              \"minLength\": 1,\n              \"maxLength\": 64\n            }\n          },\n          {\n            \"name\": \"resourceType\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"description\": \"The type of resource to export. \",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"BOT\", \"INTENT\", \"SLOT_TYPE\"]\n            }\n          },\n          {\n            \"name\": \"exportType\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"description\": \"The format of the exported data.\",\n            \"schema\": { \"type\": \"string\", \"enum\": [\"ALEXA_SKILLS_KIT\", \"LEX\"] }\n          }\n        ],\n        \"summary\": \"Get Export\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/imports/{importId}\": {\n      \"get\": {\n        \"operationId\": \"GetImport\",\n        \"description\": \"Gets information about an import job started with the \u003ccode\u003eStartImport\u003c/code\u003e operation.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/GetImportResponse\" }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"importId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The identifier of the import job information to return.\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"summary\": \"Get Import\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/intents/{name}/versions/\": {\n      \"get\": {\n        \"operationId\": \"GetIntentVersions\",\n        \"description\": \"\u003cp\u003eGets information about all of the versions of an intent.\u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eGetIntentVersions\u003c/code\u003e operation returns an \u003ccode\u003eIntentMetadata\u003c/code\u003e object for each version of an intent. For example, if an intent has three numbered versions, the \u003ccode\u003eGetIntentVersions\u003c/code\u003e operation returns four \u003ccode\u003eIntentMetadata\u003c/code\u003e objects in the response, one for each numbered version and one for the \u003ccode\u003e$LATEST\u003c/code\u003e version. \u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eGetIntentVersions\u003c/code\u003e operation always returns at least one version, the \u003ccode\u003e$LATEST\u003c/code\u003e version.\u003c/p\u003e \u003cp\u003eThis operation requires permissions for the \u003ccode\u003elex:GetIntentVersions\u003c/code\u003e action.\u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetIntentVersionsResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the intent for which versions should be returned.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 1,\n              \"maxLength\": 100\n            }\n          },\n          {\n            \"name\": \"nextToken\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"A pagination token for fetching the next page of intent versions. If the response to this call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of versions, specify the pagination token in the next request. \",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"maxResults\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"The maximum number of intent versions to return in the response. The default is 10.\",\n            \"schema\": { \"type\": \"integer\", \"minimum\": 1, \"maximum\": 50 }\n          }\n        ],\n        \"summary\": \"Get Intent Versions\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/intents/\": {\n      \"get\": {\n        \"operationId\": \"GetIntents\",\n        \"description\": \"\u003cp\u003eReturns intent information as follows: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eIf you specify the \u003ccode\u003enameContains\u003c/code\u003e field, returns the \u003ccode\u003e$LATEST\u003c/code\u003e version of all intents that contain the specified string.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e If you don't specify the \u003ccode\u003enameContains\u003c/code\u003e field, returns information about the \u003ccode\u003e$LATEST\u003c/code\u003e version of all intents. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e The operation requires permission for the \u003ccode\u003elex:GetIntents\u003c/code\u003e action. \u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/GetIntentsResponse\" }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"nextToken\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"A pagination token that fetches the next page of intents. If the response to this API call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of intents, specify the pagination token in the next request. \",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"maxResults\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"The maximum number of intents to return in the response. The default is 10.\",\n            \"schema\": { \"type\": \"integer\", \"minimum\": 1, \"maximum\": 50 }\n          },\n          {\n            \"name\": \"nameContains\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Substring to match in intent names. An intent will be returned if any part of its name matches the substring. For example, \\\"xyz\\\" matches both \\\"xyzabc\\\" and \\\"abcxyz.\\\"\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 1,\n              \"maxLength\": 100\n            }\n          }\n        ],\n        \"summary\": \"Get Intents\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/slottypes/{name}/versions/{version}\": {\n      \"get\": {\n        \"operationId\": \"GetSlotType\",\n        \"description\": \"\u003cp\u003eReturns information about a specific version of a slot type. In addition to specifying the slot type name, you must specify the slot type version.\u003c/p\u003e \u003cp\u003eThis operation requires permissions for the \u003ccode\u003elex:GetSlotType\u003c/code\u003e action.\u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/GetSlotTypeResponse\" }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the slot type. The name is case sensitive. \",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 1,\n              \"maxLength\": 100\n            }\n          },\n          {\n            \"name\": \"version\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The version of the slot type. \",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"\\\\$LATEST|[0-9]+\",\n              \"minLength\": 1,\n              \"maxLength\": 64\n            }\n          }\n        ],\n        \"summary\": \"Get Slot Type\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/slottypes/{name}/versions/\": {\n      \"get\": {\n        \"operationId\": \"GetSlotTypeVersions\",\n        \"description\": \"\u003cp\u003eGets information about all versions of a slot type.\u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eGetSlotTypeVersions\u003c/code\u003e operation returns a \u003ccode\u003eSlotTypeMetadata\u003c/code\u003e object for each version of a slot type. For example, if a slot type has three numbered versions, the \u003ccode\u003eGetSlotTypeVersions\u003c/code\u003e operation returns four \u003ccode\u003eSlotTypeMetadata\u003c/code\u003e objects in the response, one for each numbered version and one for the \u003ccode\u003e$LATEST\u003c/code\u003e version. \u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eGetSlotTypeVersions\u003c/code\u003e operation always returns at least one version, the \u003ccode\u003e$LATEST\u003c/code\u003e version.\u003c/p\u003e \u003cp\u003eThis operation requires permissions for the \u003ccode\u003elex:GetSlotTypeVersions\u003c/code\u003e action.\u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetSlotTypeVersionsResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the slot type for which versions should be returned.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 1,\n              \"maxLength\": 100\n            }\n          },\n          {\n            \"name\": \"nextToken\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"A pagination token for fetching the next page of slot type versions. If the response to this call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of versions, specify the pagination token in the next request. \",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"maxResults\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"The maximum number of slot type versions to return in the response. The default is 10.\",\n            \"schema\": { \"type\": \"integer\", \"minimum\": 1, \"maximum\": 50 }\n          }\n        ],\n        \"summary\": \"Get Slot Type Versions\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/slottypes/\": {\n      \"get\": {\n        \"operationId\": \"GetSlotTypes\",\n        \"description\": \"\u003cp\u003eReturns slot type information as follows: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eIf you specify the \u003ccode\u003enameContains\u003c/code\u003e field, returns the \u003ccode\u003e$LATEST\u003c/code\u003e version of all slot types that contain the specified string.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e If you don't specify the \u003ccode\u003enameContains\u003c/code\u003e field, returns information about the \u003ccode\u003e$LATEST\u003c/code\u003e version of all slot types. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e The operation requires permission for the \u003ccode\u003elex:GetSlotTypes\u003c/code\u003e action. \u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetSlotTypesResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"nextToken\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"A pagination token that fetches the next page of slot types. If the response to this API call is truncated, Amazon Lex returns a pagination token in the response. To fetch next page of slot types, specify the pagination token in the next request.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"maxResults\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"The maximum number of slot types to return in the response. The default is 10.\",\n            \"schema\": { \"type\": \"integer\", \"minimum\": 1, \"maximum\": 50 }\n          },\n          {\n            \"name\": \"nameContains\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Substring to match in slot type names. A slot type will be returned if any part of its name matches the substring. For example, \\\"xyz\\\" matches both \\\"xyzabc\\\" and \\\"abcxyz.\\\"\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 1,\n              \"maxLength\": 100\n            }\n          }\n        ],\n        \"summary\": \"Get Slot Types\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/bots/{botname}/utterances#view=aggregation\u0026bot_versions\u0026status_type\": {\n      \"get\": {\n        \"operationId\": \"GetUtterancesView\",\n        \"description\": \"\u003cp\u003eUse the \u003ccode\u003eGetUtterancesView\u003c/code\u003e operation to get information about the utterances that your users have made to your bot. You can use this list to tune the utterances that your bot responds to.\u003c/p\u003e \u003cp\u003eFor example, say that you have created a bot to order flowers. After your users have used your bot for a while, use the \u003ccode\u003eGetUtterancesView\u003c/code\u003e operation to see the requests that they have made and whether they have been successful. You might find that the utterance \\\"I want flowers\\\" is not being recognized. You could add this utterance to the \u003ccode\u003eOrderFlowers\u003c/code\u003e intent so that your bot recognizes that utterance.\u003c/p\u003e \u003cp\u003eAfter you publish a new version of a bot, you can get information about the old version and the new so that you can compare the performance across the two versions. \u003c/p\u003e \u003cp\u003eUtterance statistics are generated once a day. Data is available for the last 15 days. You can request information for up to 5 versions of your bot in each request. Amazon Lex returns the most frequent utterances received by the bot in the last 15 days. The response contains information about a maximum of 100 utterances for each version.\u003c/p\u003e \u003cp\u003eIf you set \u003ccode\u003echildDirected\u003c/code\u003e field to true when you created your bot, or if you opted out of participating in improving Amazon Lex, utterances are not available.\u003c/p\u003e \u003cp\u003eThis operation requires permissions for the \u003ccode\u003elex:GetUtterancesView\u003c/code\u003e action.\u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetUtterancesViewResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"botname\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the bot for which utterance information should be returned.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 2,\n              \"maxLength\": 50\n            }\n          },\n          {\n            \"name\": \"bot_versions\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"description\": \"An array of bot versions for which utterance information should be returned. The limit is 5 versions per request.\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": { \"$ref\": \"#/components/schemas/Version\" },\n              \"minItems\": 1,\n              \"maxItems\": 5\n            }\n          },\n          {\n            \"name\": \"status_type\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"description\": \"To return utterances that were recognized and handled, use \u003ccode\u003eDetected\u003c/code\u003e. To return utterances that were not recognized, use \u003ccode\u003eMissed\u003c/code\u003e.\",\n            \"schema\": { \"type\": \"string\", \"enum\": [\"Detected\", \"Missed\"] }\n          },\n          {\n            \"name\": \"view\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"enum\": [\"aggregation\"] }\n          }\n        ],\n        \"summary\": \"Get Utterances View\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/tags/{resourceArn}\": {\n      \"get\": {\n        \"operationId\": \"ListTagsForResource\",\n        \"description\": \"Gets a list of tags associated with the specified resource. Only bots, bot aliases, and bot channels can have tags associated with them.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ListTagsForResourceResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"resourceArn\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The Amazon Resource Name (ARN) of the resource to get a list of tags for.\",\n            \"schema\": { \"type\": \"string\", \"minLength\": 1, \"maxLength\": 1011 }\n          }\n        ],\n        \"summary\": \"List Tags For Resource\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ],\n      \"post\": {\n        \"operationId\": \"TagResource\",\n        \"description\": \"Adds the specified tags to the specified resource. If a tag key already exists, the existing value is replaced with the new value.\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/TagResourceResponse\" }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"ConflictException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ConflictException\" }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"resourceArn\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The Amazon Resource Name (ARN) of the bot, bot alias, or bot channel to tag.\",\n            \"schema\": { \"type\": \"string\", \"minLength\": 1, \"maxLength\": 1011 }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\"tags\"],\n                \"properties\": {\n                  \"tags\": {\n                    \"description\": \"A list of tag keys to add to the resource. If a tag key already exists, the existing value is replaced with the new value.\",\n                    \"type\": \"array\",\n                    \"items\": { \"$ref\": \"#/components/schemas/Tag\" },\n                    \"minItems\": 0,\n                    \"maxItems\": 200\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"summary\": \"Tag Resource\"\n      }\n    },\n    \"/bots/{name}/versions/$LATEST\": {\n      \"put\": {\n        \"operationId\": \"PutBot\",\n        \"description\": \"\u003cp\u003eCreates an Amazon Lex conversational bot or replaces an existing bot. When you create or update a bot you are only required to specify a name, a locale, and whether the bot is directed toward children under age 13. You can use this to add intents later, or to remove intents from an existing bot. When you create a bot with the minimum information, the bot is created or updated but Amazon Lex returns the \u003ccode/\u003e response \u003ccode\u003eFAILED\u003c/code\u003e. You can build the bot after you add one or more intents. For more information about Amazon Lex bots, see \u003ca\u003ehow-it-works\u003c/a\u003e. \u003c/p\u003e \u003cp\u003eIf you specify the name of an existing bot, the fields in the request replace the existing values in the \u003ccode\u003e$LATEST\u003c/code\u003e version of the bot. Amazon Lex removes any fields that you don't provide values for in the request, except for the \u003ccode\u003eidleTTLInSeconds\u003c/code\u003e and \u003ccode\u003eprivacySettings\u003c/code\u003e fields, which are set to their default values. If you don't specify values for required fields, Amazon Lex throws an exception.\u003c/p\u003e \u003cp\u003eThis operation requires permissions for the \u003ccode\u003elex:PutBot\u003c/code\u003e action. For more information, see \u003ca\u003esecurity-iam\u003c/a\u003e.\u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/PutBotResponse\" }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ConflictException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ConflictException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"PreconditionFailedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PreconditionFailedException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the bot. The name is \u003ci\u003enot\u003c/i\u003e case sensitive. \",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 2,\n              \"maxLength\": 50\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\"locale\", \"childDirected\"],\n                \"properties\": {\n                  \"description\": {\n                    \"description\": \"A description of the bot.\",\n                    \"type\": \"string\",\n                    \"minLength\": 0,\n                    \"maxLength\": 200\n                  },\n                  \"intents\": {\n                    \"description\": \"An array of \u003ccode\u003eIntent\u003c/code\u003e objects. Each intent represents a command that a user can express. For example, a pizza ordering bot might support an OrderPizza intent. For more information, see \u003ca\u003ehow-it-works\u003c/a\u003e.\",\n                    \"type\": \"array\",\n                    \"items\": { \"$ref\": \"#/components/schemas/Intent\" }\n                  },\n                  \"enableModelImprovements\": {\n                    \"description\": \"\u003cp\u003eSet to \u003ccode\u003etrue\u003c/code\u003e to enable access to natural language understanding improvements. \u003c/p\u003e \u003cp\u003eWhen you set the \u003ccode\u003eenableModelImprovements\u003c/code\u003e parameter to \u003ccode\u003etrue\u003c/code\u003e you can use the \u003ccode\u003enluIntentConfidenceThreshold\u003c/code\u003e parameter to configure confidence scores. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/lex/latest/dg/confidence-scores.html\\\"\u003eConfidence Scores\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eYou can only set the \u003ccode\u003eenableModelImprovements\u003c/code\u003e parameter in certain Regions. If you set the parameter to \u003ccode\u003etrue\u003c/code\u003e, your bot has access to accuracy improvements.\u003c/p\u003e \u003cp\u003eThe Regions where you can set the \u003ccode\u003eenableModelImprovements\u003c/code\u003e parameter to \u003ccode\u003etrue\u003c/code\u003e are:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eUS East (N. Virginia) (us-east-1)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eUS West (Oregon) (us-west-2)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAsia Pacific (Sydney) (ap-southeast-2)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eEU (Ireland) (eu-west-1)\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIn other Regions, the \u003ccode\u003eenableModelImprovements\u003c/code\u003e parameter is set to \u003ccode\u003etrue\u003c/code\u003e by default. In these Regions setting the parameter to \u003ccode\u003efalse\u003c/code\u003e throws a \u003ccode\u003eValidationException\u003c/code\u003e exception.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eAsia Pacific (Singapore) (ap-southeast-1)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAsia Pacific (Tokyo) (ap-northeast-1)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eEU (Frankfurt) (eu-central-1)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eEU (London) (eu-west-2)\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\",\n                    \"type\": \"boolean\"\n                  },\n                  \"nluIntentConfidenceThreshold\": {\n                    \"description\": \"\u003cp\u003eDetermines the threshold where Amazon Lex will insert the \u003ccode\u003eAMAZON.FallbackIntent\u003c/code\u003e, \u003ccode\u003eAMAZON.KendraSearchIntent\u003c/code\u003e, or both when returning alternative intents in a \u003ca href=\\\"https://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostContent.html\\\"\u003ePostContent\u003c/a\u003e or \u003ca href=\\\"https://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostText.html\\\"\u003ePostText\u003c/a\u003e response. \u003ccode\u003eAMAZON.FallbackIntent\u003c/code\u003e and \u003ccode\u003eAMAZON.KendraSearchIntent\u003c/code\u003e are only inserted if they are configured for the bot.\u003c/p\u003e \u003cp\u003eYou must set the \u003ccode\u003eenableModelImprovements\u003c/code\u003e parameter to \u003ccode\u003etrue\u003c/code\u003e to use confidence scores.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eUS East (N. Virginia) (us-east-1)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eUS West (Oregon) (us-west-2)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAsia Pacific (Sydney) (ap-southeast-2)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eEU (Ireland) (eu-west-1)\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIn other Regions, the \u003ccode\u003eenableModelImprovements\u003c/code\u003e parameter is set to \u003ccode\u003etrue\u003c/code\u003e by default.\u003c/p\u003e \u003cp\u003eFor example, suppose a bot is configured with the confidence threshold of 0.80 and the \u003ccode\u003eAMAZON.FallbackIntent\u003c/code\u003e. Amazon Lex returns three alternative intents with the following confidence scores: IntentA (0.70), IntentB (0.60), IntentC (0.50). The response from the \u003ccode\u003ePostText\u003c/code\u003e operation would be:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eAMAZON.FallbackIntent\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIntentA\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIntentB\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIntentC\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\",\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"minimum\": 0,\n                    \"maximum\": 1\n                  },\n                  \"clarificationPrompt\": {\n                    \"description\": \"Obtains information from the user. To define a prompt, provide one or more messages and specify the number of attempts to get information from the user. If you provide more than one message, Amazon Lex chooses one of the messages to use to prompt the user. For more information, see \u003ca\u003ehow-it-works\u003c/a\u003e.\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"messages\": {\n                        \"allOf\": [\n                          { \"$ref\": \"#/components/schemas/MessageList\" },\n                          {\n                            \"description\": \"An array of objects, each of which provides a message string and its type. You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\"\n                          }\n                        ]\n                      },\n                      \"maxAttempts\": {\n                        \"allOf\": [\n                          { \"$ref\": \"#/components/schemas/PromptMaxAttempts\" },\n                          {\n                            \"description\": \"The number of times to prompt the user for information.\"\n                          }\n                        ]\n                      },\n                      \"responseCard\": {\n                        \"allOf\": [\n                          { \"$ref\": \"#/components/schemas/ResponseCard\" },\n                          {\n                            \"description\": \"A response card. Amazon Lex uses this prompt at runtime, in the \u003ccode\u003ePostText\u003c/code\u003e API response. It substitutes session attributes and slot values for placeholders in the response card. For more information, see \u003ca\u003eex-resp-card\u003c/a\u003e. \"\n                          }\n                        ]\n                      }\n                    }\n                  },\n                  \"abortStatement\": {\n                    \"description\": \"A collection of messages that convey information to the user. At runtime, Amazon Lex selects the message to convey. \",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"messages\": {\n                        \"allOf\": [\n                          { \"$ref\": \"#/components/schemas/MessageList\" },\n                          { \"description\": \"A collection of message objects.\" }\n                        ]\n                      },\n                      \"responseCard\": {\n                        \"allOf\": [\n                          { \"$ref\": \"#/components/schemas/ResponseCard\" },\n                          {\n                            \"description\": \" At runtime, if the client is using the \u003ca href=\\\"http://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostText.html\\\"\u003ePostText\u003c/a\u003e API, Amazon Lex includes the response card in the response. It substitutes all of the session attributes and slot values for placeholders in the response card. \"\n                          }\n                        ]\n                      }\n                    }\n                  },\n                  \"idleSessionTTLInSeconds\": {\n                    \"description\": \"\u003cp\u003eThe maximum time in seconds that Amazon Lex retains the data gathered in a conversation.\u003c/p\u003e \u003cp\u003eA user interaction session remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Lex deletes any data provided before the timeout.\u003c/p\u003e \u003cp\u003eFor example, suppose that a user chooses the OrderPizza intent, but gets sidetracked halfway through placing an order. If the user doesn't complete the order within the specified time, Amazon Lex discards the slot information that it gathered, and the user must start over.\u003c/p\u003e \u003cp\u003eIf you don't include the \u003ccode\u003eidleSessionTTLInSeconds\u003c/code\u003e element in a \u003ccode\u003ePutBot\u003c/code\u003e operation request, Amazon Lex uses the default value. This is also true if the request replaces an existing bot.\u003c/p\u003e \u003cp\u003eThe default is 300 seconds (5 minutes).\u003c/p\u003e\",\n                    \"type\": \"integer\",\n                    \"minimum\": 60,\n                    \"maximum\": 86400\n                  },\n                  \"voiceId\": {\n                    \"description\": \"The Amazon Polly voice ID that you want Amazon Lex to use for voice interactions with the user. The locale configured for the voice must match the locale of the bot. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/polly/latest/dg/voicelist.html\\\"\u003eVoices in Amazon Polly\u003c/a\u003e in the \u003ci\u003eAmazon Polly Developer Guide\u003c/i\u003e.\",\n                    \"type\": \"string\"\n                  },\n                  \"checksum\": {\n                    \"description\": \"\u003cp\u003eIdentifies a specific revision of the \u003ccode\u003e$LATEST\u003c/code\u003e version.\u003c/p\u003e \u003cp\u003eWhen you create a new bot, leave the \u003ccode\u003echecksum\u003c/code\u003e field blank. If you specify a checksum you get a \u003ccode\u003eBadRequestException\u003c/code\u003e exception.\u003c/p\u003e \u003cp\u003eWhen you want to update a bot, set the \u003ccode\u003echecksum\u003c/code\u003e field to the checksum of the most recent revision of the \u003ccode\u003e$LATEST\u003c/code\u003e version. If you don't specify the \u003ccode\u003e checksum\u003c/code\u003e field, or if the checksum does not match the \u003ccode\u003e$LATEST\u003c/code\u003e version, you get a \u003ccode\u003ePreconditionFailedException\u003c/code\u003e exception.\u003c/p\u003e\",\n                    \"type\": \"string\"\n                  },\n                  \"processBehavior\": {\n                    \"description\": \"\u003cp\u003eIf you set the \u003ccode\u003eprocessBehavior\u003c/code\u003e element to \u003ccode\u003eBUILD\u003c/code\u003e, Amazon Lex builds the bot so that it can be run. If you set the element to \u003ccode\u003eSAVE\u003c/code\u003e Amazon Lex saves the bot, but doesn't build it. \u003c/p\u003e \u003cp\u003eIf you don't specify this value, the default value is \u003ccode\u003eBUILD\u003c/code\u003e.\u003c/p\u003e\",\n                    \"type\": \"string\",\n                    \"enum\": [\"SAVE\", \"BUILD\"]\n                  },\n                  \"locale\": {\n                    \"description\": \"\u003cp\u003e Specifies the target locale for the bot. Any intent used in the bot must be compatible with the locale of the bot. \u003c/p\u003e \u003cp\u003eThe default is \u003ccode\u003een-US\u003c/code\u003e.\u003c/p\u003e\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"en-US\",\n                      \"en-GB\",\n                      \"de-DE\",\n                      \"en-AU\",\n                      \"es-US\",\n                      \"es-US\",\n                      \"fr-FR\",\n                      \"fr-CA\",\n                      \"it-IT\",\n                      \"it-IT\",\n                      \"it-IT\",\n                      \"ja-JP\",\n                      \"ko-KR\"\n                    ]\n                  },\n                  \"childDirected\": {\n                    \"description\": \"\u003cp\u003eFor each Amazon Lex bot created with the Amazon Lex Model Building Service, you must specify whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children's Online Privacy Protection Act (COPPA) by specifying \u003ccode\u003etrue\u003c/code\u003e or \u003ccode\u003efalse\u003c/code\u003e in the \u003ccode\u003echildDirected\u003c/code\u003e field. By specifying \u003ccode\u003etrue\u003c/code\u003e in the \u003ccode\u003echildDirected\u003c/code\u003e field, you confirm that your use of Amazon Lex \u003cb\u003eis\u003c/b\u003e related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. By specifying \u003ccode\u003efalse\u003c/code\u003e in the \u003ccode\u003echildDirected\u003c/code\u003e field, you confirm that your use of Amazon Lex \u003cb\u003eis not\u003c/b\u003e related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. You may not specify a default value for the \u003ccode\u003echildDirected\u003c/code\u003e field that does not accurately reflect whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA.\u003c/p\u003e \u003cp\u003eIf your use of Amazon Lex relates to a website, program, or other application that is directed in whole or in part, to children under age 13, you must obtain any required verifiable parental consent under COPPA. For information regarding the use of Amazon Lex in connection with websites, programs, or other applications that are directed or targeted, in whole or in part, to children under age 13, see the \u003ca href=\\\"https://aws.amazon.com/lex/faqs#data-security\\\"\u003eAmazon Lex FAQ.\u003c/a\u003e \u003c/p\u003e\",\n                    \"type\": \"boolean\"\n                  },\n                  \"detectSentiment\": {\n                    \"description\": \"When set to \u003ccode\u003etrue\u003c/code\u003e user utterances are sent to Amazon Comprehend for sentiment analysis. If you don't specify \u003ccode\u003edetectSentiment\u003c/code\u003e, the default is \u003ccode\u003efalse\u003c/code\u003e.\",\n                    \"type\": \"boolean\"\n                  },\n                  \"createVersion\": {\n                    \"description\": \"When set to \u003ccode\u003etrue\u003c/code\u003e a new numbered version of the bot is created. This is the same as calling the \u003ccode\u003eCreateBotVersion\u003c/code\u003e operation. If you don't specify \u003ccode\u003ecreateVersion\u003c/code\u003e, the default is \u003ccode\u003efalse\u003c/code\u003e.\",\n                    \"type\": \"boolean\"\n                  },\n                  \"tags\": {\n                    \"description\": \"A list of tags to add to the bot. You can only add tags when you create a bot, you can't use the \u003ccode\u003ePutBot\u003c/code\u003e operation to update the tags on a bot. To update tags, use the \u003ccode\u003eTagResource\u003c/code\u003e operation.\",\n                    \"type\": \"array\",\n                    \"items\": { \"$ref\": \"#/components/schemas/Tag\" },\n                    \"minItems\": 0,\n                    \"maxItems\": 200\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"summary\": \"Put Bot\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/intents/{name}/versions/$LATEST\": {\n      \"put\": {\n        \"operationId\": \"PutIntent\",\n        \"description\": \"\u003cp\u003eCreates an intent or replaces an existing intent.\u003c/p\u003e \u003cp\u003eTo define the interaction between the user and your bot, you use one or more intents. For a pizza ordering bot, for example, you would create an \u003ccode\u003eOrderPizza\u003c/code\u003e intent. \u003c/p\u003e \u003cp\u003eTo create an intent or replace an existing intent, you must provide the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eIntent name. For example, \u003ccode\u003eOrderPizza\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eSample utterances. For example, \\\"Can I order a pizza, please.\\\" and \\\"I want to order a pizza.\\\"\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eInformation to be gathered. You specify slot types for the information that your bot will request from the user. You can specify standard slot types, such as a date or a time, or custom slot types such as the size and crust of a pizza.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eHow the intent will be fulfilled. You can provide a Lambda function or configure the intent to return the intent information to the client application. If you use a Lambda function, when all of the intent information is available, Amazon Lex invokes your Lambda function. If you configure your intent to return the intent information to the client application. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eYou can specify other optional information in the request, such as:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eA confirmation prompt to ask the user to confirm an intent. For example, \\\"Shall I order your pizza?\\\"\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eA conclusion statement to send to the user after the intent has been fulfilled. For example, \\\"I placed your pizza order.\\\"\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eA follow-up prompt that asks the user for additional activity. For example, asking \\\"Do you want to order a drink with your pizza?\\\"\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf you specify an existing intent name to update the intent, Amazon Lex replaces the values in the \u003ccode\u003e$LATEST\u003c/code\u003e version of the intent with the values in the request. Amazon Lex removes fields that you don't provide in the request. If you don't specify the required fields, Amazon Lex throws an exception. When you update the \u003ccode\u003e$LATEST\u003c/code\u003e version of an intent, the \u003ccode\u003estatus\u003c/code\u003e field of any bot that uses the \u003ccode\u003e$LATEST\u003c/code\u003e version of the intent is set to \u003ccode\u003eNOT_BUILT\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca\u003ehow-it-works\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eThis operation requires permissions for the \u003ccode\u003elex:PutIntent\u003c/code\u003e action.\u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/PutIntentResponse\" }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ConflictException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ConflictException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"PreconditionFailedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PreconditionFailedException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"\u003cp\u003eThe name of the intent. The name is \u003ci\u003enot\u003c/i\u003e case sensitive. \u003c/p\u003e \u003cp\u003eThe name can't match a built-in intent name, or a built-in intent name with \\\"AMAZON.\\\" removed. For example, because there is a built-in intent called \u003ccode\u003eAMAZON.HelpIntent\u003c/code\u003e, you can't create a custom intent called \u003ccode\u003eHelpIntent\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eFor a list of built-in intents, see \u003ca href=\\\"https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents\\\"\u003eStandard Built-in Intents\u003c/a\u003e in the \u003ci\u003eAlexa Skills Kit\u003c/i\u003e.\u003c/p\u003e\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 1,\n              \"maxLength\": 100\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"description\": {\n                    \"description\": \"A description of the intent.\",\n                    \"type\": \"string\",\n                    \"minLength\": 0,\n                    \"maxLength\": 200\n                  },\n                  \"slots\": {\n                    \"description\": \"An array of intent slots. At runtime, Amazon Lex elicits required slot values from the user using prompts defined in the slots. For more information, see \u003ca\u003ehow-it-works\u003c/a\u003e. \",\n                    \"type\": \"array\",\n                    \"items\": { \"$ref\": \"#/components/schemas/Slot\" },\n                    \"minItems\": 0,\n                    \"maxItems\": 100\n                  },\n                  \"sampleUtterances\": {\n                    \"description\": \"\u003cp\u003eAn array of utterances (strings) that a user might say to signal the intent. For example, \\\"I want {PizzaSize} pizza\\\", \\\"Order {Quantity} {PizzaSize} pizzas\\\". \u003c/p\u003e \u003cp\u003eIn each utterance, a slot name is enclosed in curly braces. \u003c/p\u003e\",\n                    \"type\": \"array\",\n                    \"items\": { \"$ref\": \"#/components/schemas/Utterance\" },\n                    \"minItems\": 0,\n                    \"maxItems\": 1500\n                  },\n                  \"confirmationPrompt\": {\n                    \"description\": \"Obtains information from the user. To define a prompt, provide one or more messages and specify the number of attempts to get information from the user. If you provide more than one message, Amazon Lex chooses one of the messages to use to prompt the user. For more information, see \u003ca\u003ehow-it-works\u003c/a\u003e.\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"messages\": {\n                        \"allOf\": [\n                          { \"$ref\": \"#/components/schemas/MessageList\" },\n                          {\n                            \"description\": \"An array of objects, each of which provides a message string and its type. You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\"\n                          }\n                        ]\n                      },\n                      \"maxAttempts\": {\n                        \"allOf\": [\n                          { \"$ref\": \"#/components/schemas/PromptMaxAttempts\" },\n                          {\n                            \"description\": \"The number of times to prompt the user for information.\"\n                          }\n                        ]\n                      },\n                      \"responseCard\": {\n                        \"allOf\": [\n                          { \"$ref\": \"#/components/schemas/ResponseCard\" },\n                          {\n                            \"description\": \"A response card. Amazon Lex uses this prompt at runtime, in the \u003ccode\u003ePostText\u003c/code\u003e API response. It substitutes session attributes and slot values for placeholders in the response card. For more information, see \u003ca\u003eex-resp-card\u003c/a\u003e. \"\n                          }\n                        ]\n                      }\n                    }\n                  },\n                  \"rejectionStatement\": {\n                    \"description\": \"A collection of messages that convey information to the user. At runtime, Amazon Lex selects the message to convey. \",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"messages\": {\n                        \"allOf\": [\n                          { \"$ref\": \"#/components/schemas/MessageList\" },\n                          { \"description\": \"A collection of message objects.\" }\n                        ]\n                      },\n                      \"responseCard\": {\n                        \"allOf\": [\n                          { \"$ref\": \"#/components/schemas/ResponseCard\" },\n                          {\n                            \"description\": \" At runtime, if the client is using the \u003ca href=\\\"http://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostText.html\\\"\u003ePostText\u003c/a\u003e API, Amazon Lex includes the response card in the response. It substitutes all of the session attributes and slot values for placeholders in the response card. \"\n                          }\n                        ]\n                      }\n                    }\n                  },\n                  \"followUpPrompt\": {\n                    \"description\": \"A prompt for additional activity after an intent is fulfilled. For example, after the \u003ccode\u003eOrderPizza\u003c/code\u003e intent is fulfilled, you might prompt the user to find out whether the user wants to order drinks.\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"prompt\": {\n                        \"allOf\": [\n                          { \"$ref\": \"#/components/schemas/Prompt\" },\n                          {\n                            \"description\": \"Prompts for information from the user. \"\n                          }\n                        ]\n                      },\n                      \"rejectionStatement\": {\n                        \"allOf\": [\n                          { \"$ref\": \"#/components/schemas/Statement\" },\n                          {\n                            \"description\": \"If the user answers \\\"no\\\" to the question defined in the \u003ccode\u003eprompt\u003c/code\u003e field, Amazon Lex responds with this statement to acknowledge that the intent was canceled. \"\n                          }\n                        ]\n                      }\n                    }\n                  },\n                  \"conclusionStatement\": {\n                    \"description\": \"A collection of messages that convey information to the user. At runtime, Amazon Lex selects the message to convey. \",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"messages\": {\n                        \"allOf\": [\n                          { \"$ref\": \"#/components/schemas/MessageList\" },\n                          { \"description\": \"A collection of message objects.\" }\n                        ]\n                      },\n                      \"responseCard\": {\n                        \"allOf\": [\n                          { \"$ref\": \"#/components/schemas/ResponseCard\" },\n                          {\n                            \"description\": \" At runtime, if the client is using the \u003ca href=\\\"http://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostText.html\\\"\u003ePostText\u003c/a\u003e API, Amazon Lex includes the response card in the response. It substitutes all of the session attributes and slot values for placeholders in the response card. \"\n                          }\n                        ]\n                      }\n                    }\n                  },\n                  \"dialogCodeHook\": {\n                    \"description\": \"Specifies a Lambda function that verifies requests to a bot or fulfills the user's request to a bot..\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"uri\": {\n                        \"allOf\": [\n                          { \"$ref\": \"#/components/schemas/LambdaARN\" },\n                          {\n                            \"description\": \"The Amazon Resource Name (ARN) of the Lambda function.\"\n                          }\n                        ]\n                      },\n                      \"messageVersion\": {\n                        \"allOf\": [\n                          { \"$ref\": \"#/components/schemas/MessageVersion\" },\n                          {\n                            \"description\": \"The version of the request-response that you want Amazon Lex to use to invoke your Lambda function. For more information, see \u003ca\u003eusing-lambda\u003c/a\u003e.\"\n                          }\n                        ]\n                      }\n                    }\n                  },\n                  \"fulfillmentActivity\": {\n                    \"description\": \"\u003cp\u003e Describes how the intent is fulfilled after the user provides all of the information required for the intent. You can provide a Lambda function to process the intent, or you can return the intent information to the client application. We recommend that you use a Lambda function so that the relevant logic lives in the Cloud and limit the client-side code primarily to presentation. If you need to update the logic, you only update the Lambda function; you don't need to upgrade your client application. \u003c/p\u003e \u003cp\u003eConsider the following examples:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eIn a pizza ordering application, after the user provides all of the information for placing an order, you use a Lambda function to place an order with a pizzeria. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIn a gaming application, when a user says \\\"pick up a rock,\\\" this information must go back to the client application so that it can perform the operation and update the graphics. In this case, you want Amazon Lex to return the intent data to the client. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"allOf\": [\n                          {\n                            \"$ref\": \"#/components/schemas/FulfillmentActivityType\"\n                          },\n                          {\n                            \"description\": \" How the intent should be fulfilled, either by running a Lambda function or by returning the slot data to the client application. \"\n                          }\n                        ]\n                      },\n                      \"codeHook\": {\n                        \"allOf\": [\n                          { \"$ref\": \"#/components/schemas/CodeHook\" },\n                          {\n                            \"description\": \" A description of the Lambda function that is run to fulfill the intent. \"\n                          }\n                        ]\n                      }\n                    }\n                  },\n                  \"parentIntentSignature\": {\n                    \"description\": \"A unique identifier for the built-in intent to base this intent on. To find the signature for an intent, see \u003ca href=\\\"https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents\\\"\u003eStandard Built-in Intents\u003c/a\u003e in the \u003ci\u003eAlexa Skills Kit\u003c/i\u003e.\",\n                    \"type\": \"string\"\n                  },\n                  \"checksum\": {\n                    \"description\": \"\u003cp\u003eIdentifies a specific revision of the \u003ccode\u003e$LATEST\u003c/code\u003e version.\u003c/p\u003e \u003cp\u003eWhen you create a new intent, leave the \u003ccode\u003echecksum\u003c/code\u003e field blank. If you specify a checksum you get a \u003ccode\u003eBadRequestException\u003c/code\u003e exception.\u003c/p\u003e \u003cp\u003eWhen you want to update a intent, set the \u003ccode\u003echecksum\u003c/code\u003e field to the checksum of the most recent revision of the \u003ccode\u003e$LATEST\u003c/code\u003e version. If you don't specify the \u003ccode\u003e checksum\u003c/code\u003e field, or if the checksum does not match the \u003ccode\u003e$LATEST\u003c/code\u003e version, you get a \u003ccode\u003ePreconditionFailedException\u003c/code\u003e exception.\u003c/p\u003e\",\n                    \"type\": \"string\"\n                  },\n                  \"createVersion\": {\n                    \"description\": \"When set to \u003ccode\u003etrue\u003c/code\u003e a new numbered version of the intent is created. This is the same as calling the \u003ccode\u003eCreateIntentVersion\u003c/code\u003e operation. If you do not specify \u003ccode\u003ecreateVersion\u003c/code\u003e, the default is \u003ccode\u003efalse\u003c/code\u003e.\",\n                    \"type\": \"boolean\"\n                  },\n                  \"kendraConfiguration\": {\n                    \"description\": \"Provides configuration information for the AMAZON.KendraSearchIntent intent. When you use this intent, Amazon Lex searches the specified Amazon Kendra index and returns documents from the index that match the user's utterance. For more information, see \u003ca href=\\\"http://docs.aws.amazon.com/lex/latest/dg/built-in-intent-kendra-search.html\\\"\u003e AMAZON.KendraSearchIntent\u003c/a\u003e.\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"kendraIndex\": {\n                        \"allOf\": [\n                          { \"$ref\": \"#/components/schemas/KendraIndexArn\" },\n                          {\n                            \"description\": \"The Amazon Resource Name (ARN) of the Amazon Kendra index that you want the AMAZON.KendraSearchIntent intent to search. The index must be in the same account and Region as the Amazon Lex bot. If the Amazon Kendra index does not exist, you get an exception when you call the \u003ccode\u003ePutIntent\u003c/code\u003e operation.\"\n                          }\n                        ]\n                      },\n                      \"queryFilterString\": {\n                        \"allOf\": [\n                          { \"$ref\": \"#/components/schemas/QueryFilterString\" },\n                          {\n                            \"description\": \"\u003cp\u003eA query filter that Amazon Lex sends to Amazon Kendra to filter the response from the query. The filter is in the format defined by Amazon Kendra. For more information, see \u003ca href=\\\"http://docs.aws.amazon.com/kendra/latest/dg/filtering.html\\\"\u003eFiltering queries\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eYou can override this filter string with a new filter string at runtime.\u003c/p\u003e\"\n                          }\n                        ]\n                      },\n                      \"role\": {\n                        \"allOf\": [\n                          { \"$ref\": \"#/components/schemas/roleArn\" },\n                          {\n                            \"description\": \"The Amazon Resource Name (ARN) of an IAM role that has permission to search the Amazon Kendra index. The role must be in the same account and Region as the Amazon Lex bot. If the role does not exist, you get an exception when you call the \u003ccode\u003ePutIntent\u003c/code\u003e operation.\"\n                          }\n                        ]\n                      }\n                    }\n                  },\n                  \"inputContexts\": {\n                    \"description\": \"An array of \u003ccode\u003eInputContext\u003c/code\u003e objects that lists the contexts that must be active for Amazon Lex to choose the intent in a conversation with the user.\",\n                    \"type\": \"array\",\n                    \"items\": { \"$ref\": \"#/components/schemas/InputContext\" },\n                    \"minItems\": 0,\n                    \"maxItems\": 5\n                  },\n                  \"outputContexts\": {\n                    \"description\": \"An array of \u003ccode\u003eOutputContext\u003c/code\u003e objects that lists the contexts that the intent activates when the intent is fulfilled.\",\n                    \"type\": \"array\",\n                    \"items\": { \"$ref\": \"#/components/schemas/OutputContext\" },\n                    \"minItems\": 0,\n                    \"maxItems\": 10\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"summary\": \"Put Intent\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/slottypes/{name}/versions/$LATEST\": {\n      \"put\": {\n        \"operationId\": \"PutSlotType\",\n        \"description\": \"\u003cp\u003eCreates a custom slot type or replaces an existing custom slot type.\u003c/p\u003e \u003cp\u003eTo create a custom slot type, specify a name for the slot type and a set of enumeration values, which are the values that a slot of this type can assume. For more information, see \u003ca\u003ehow-it-works\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eIf you specify the name of an existing slot type, the fields in the request replace the existing values in the \u003ccode\u003e$LATEST\u003c/code\u003e version of the slot type. Amazon Lex removes the fields that you don't provide in the request. If you don't specify required fields, Amazon Lex throws an exception. When you update the \u003ccode\u003e$LATEST\u003c/code\u003e version of a slot type, if a bot uses the \u003ccode\u003e$LATEST\u003c/code\u003e version of an intent that contains the slot type, the bot's \u003ccode\u003estatus\u003c/code\u003e field is set to \u003ccode\u003eNOT_BUILT\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eThis operation requires permissions for the \u003ccode\u003elex:PutSlotType\u003c/code\u003e action.\u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/PutSlotTypeResponse\" }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ConflictException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ConflictException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"PreconditionFailedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PreconditionFailedException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"\u003cp\u003eThe name of the slot type. The name is \u003ci\u003enot\u003c/i\u003e case sensitive. \u003c/p\u003e \u003cp\u003eThe name can't match a built-in slot type name, or a built-in slot type name with \\\"AMAZON.\\\" removed. For example, because there is a built-in slot type called \u003ccode\u003eAMAZON.DATE\u003c/code\u003e, you can't create a custom slot type called \u003ccode\u003eDATE\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eFor a list of built-in slot types, see \u003ca href=\\\"https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/slot-type-reference\\\"\u003eSlot Type Reference\u003c/a\u003e in the \u003ci\u003eAlexa Skills Kit\u003c/i\u003e.\u003c/p\u003e\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 1,\n              \"maxLength\": 100\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"description\": {\n                    \"description\": \"A description of the slot type.\",\n                    \"type\": \"string\",\n                    \"minLength\": 0,\n                    \"maxLength\": 200\n                  },\n                  \"enumerationValues\": {\n                    \"description\": \"\u003cp\u003eA list of \u003ccode\u003eEnumerationValue\u003c/code\u003e objects that defines the values that the slot type can take. Each value can have a list of \u003ccode\u003esynonyms\u003c/code\u003e, which are additional values that help train the machine learning model about the values that it resolves for a slot. \u003c/p\u003e \u003cp\u003eA regular expression slot type doesn't require enumeration values. All other slot types require a list of enumeration values.\u003c/p\u003e \u003cp\u003eWhen Amazon Lex resolves a slot value, it generates a resolution list that contains up to five possible values for the slot. If you are using a Lambda function, this resolution list is passed to the function. If you are not using a Lambda function you can choose to return the value that the user entered or the first value in the resolution list as the slot value. The \u003ccode\u003evalueSelectionStrategy\u003c/code\u003e field indicates the option to use. \u003c/p\u003e\",\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/EnumerationValue\"\n                    },\n                    \"minItems\": 0,\n                    \"maxItems\": 10000\n                  },\n                  \"checksum\": {\n                    \"description\": \"\u003cp\u003eIdentifies a specific revision of the \u003ccode\u003e$LATEST\u003c/code\u003e version.\u003c/p\u003e \u003cp\u003eWhen you create a new slot type, leave the \u003ccode\u003echecksum\u003c/code\u003e field blank. If you specify a checksum you get a \u003ccode\u003eBadRequestException\u003c/code\u003e exception.\u003c/p\u003e \u003cp\u003eWhen you want to update a slot type, set the \u003ccode\u003echecksum\u003c/code\u003e field to the checksum of the most recent revision of the \u003ccode\u003e$LATEST\u003c/code\u003e version. If you don't specify the \u003ccode\u003e checksum\u003c/code\u003e field, or if the checksum does not match the \u003ccode\u003e$LATEST\u003c/code\u003e version, you get a \u003ccode\u003ePreconditionFailedException\u003c/code\u003e exception.\u003c/p\u003e\",\n                    \"type\": \"string\"\n                  },\n                  \"valueSelectionStrategy\": {\n                    \"description\": \"\u003cp\u003eDetermines the slot resolution strategy that Amazon Lex uses to return slot type values. The field can be set to one of the following values:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eORIGINAL_VALUE\u003c/code\u003e - Returns the value entered by the user, if the user value is similar to the slot value.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eTOP_RESOLUTION\u003c/code\u003e - If there is a resolution list for the slot, return the first value in the resolution list as the slot type value. If there is no resolution list, null is returned.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf you don't specify the \u003ccode\u003evalueSelectionStrategy\u003c/code\u003e, the default is \u003ccode\u003eORIGINAL_VALUE\u003c/code\u003e.\u003c/p\u003e\",\n                    \"type\": \"string\",\n                    \"enum\": [\"ORIGINAL_VALUE\", \"TOP_RESOLUTION\"]\n                  },\n                  \"createVersion\": {\n                    \"description\": \"When set to \u003ccode\u003etrue\u003c/code\u003e a new numbered version of the slot type is created. This is the same as calling the \u003ccode\u003eCreateSlotTypeVersion\u003c/code\u003e operation. If you do not specify \u003ccode\u003ecreateVersion\u003c/code\u003e, the default is \u003ccode\u003efalse\u003c/code\u003e.\",\n                    \"type\": \"boolean\"\n                  },\n                  \"parentSlotTypeSignature\": {\n                    \"description\": \"\u003cp\u003eThe built-in slot type used as the parent of the slot type. When you define a parent slot type, the new slot type has all of the same configuration as the parent.\u003c/p\u003e \u003cp\u003eOnly \u003ccode\u003eAMAZON.AlphaNumeric\u003c/code\u003e is supported.\u003c/p\u003e\",\n                    \"type\": \"string\",\n                    \"pattern\": \"^((AMAZON\\\\.)_?|[A-Za-z]_?)+\",\n                    \"minLength\": 1,\n                    \"maxLength\": 100\n                  },\n                  \"slotTypeConfigurations\": {\n                    \"description\": \"Configuration information that extends the parent built-in slot type. The configuration is added to the settings for the parent slot type.\",\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/SlotTypeConfiguration\"\n                    },\n                    \"minItems\": 0,\n                    \"maxItems\": 10\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"summary\": \"Put Slot Type\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/imports/\": {\n      \"post\": {\n        \"operationId\": \"StartImport\",\n        \"description\": \"Starts a job to import a resource to Amazon Lex.\",\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/StartImportResponse\" }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\"payload\", \"resourceType\", \"mergeStrategy\"],\n                \"properties\": {\n                  \"payload\": {\n                    \"description\": \"A zip archive in binary format. The archive should contain one file, a JSON file containing the resource to import. The resource should match the type specified in the \u003ccode\u003eresourceType\u003c/code\u003e field.\",\n                    \"type\": \"string\"\n                  },\n                  \"resourceType\": {\n                    \"description\": \"\u003cp\u003eSpecifies the type of resource to export. Each resource also exports any resources that it depends on. \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eA bot exports dependent intents.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAn intent exports dependent slot types.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\",\n                    \"type\": \"string\",\n                    \"enum\": [\"BOT\", \"INTENT\", \"SLOT_TYPE\"]\n                  },\n                  \"mergeStrategy\": {\n                    \"description\": \"\u003cp\u003eSpecifies the action that the \u003ccode\u003eStartImport\u003c/code\u003e operation should take when there is an existing resource with the same name.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eFAIL_ON_CONFLICT - The import operation is stopped on the first conflict between a resource in the import file and an existing resource. The name of the resource causing the conflict is in the \u003ccode\u003efailureReason\u003c/code\u003e field of the response to the \u003ccode\u003eGetImport\u003c/code\u003e operation.\u003c/p\u003e \u003cp\u003eOVERWRITE_LATEST - The import operation proceeds even if there is a conflict with an existing resource. The $LASTEST version of the existing resource is overwritten with the data from the import file.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\",\n                    \"type\": \"string\",\n                    \"enum\": [\"OVERWRITE_LATEST\", \"FAIL_ON_CONFLICT\"]\n                  },\n                  \"tags\": {\n                    \"description\": \"A list of tags to add to the imported bot. You can only add tags when you import a bot, you can't add tags to an intent or slot type.\",\n                    \"type\": \"array\",\n                    \"items\": { \"$ref\": \"#/components/schemas/Tag\" },\n                    \"minItems\": 0,\n                    \"maxItems\": 200\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"summary\": \"Start Import\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/tags/{resourceArn}#tagKeys\": {\n      \"delete\": {\n        \"operationId\": \"UntagResource\",\n        \"description\": \"Removes tags from a bot, bot alias or bot channel.\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UntagResourceResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"ConflictException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ConflictException\" }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"resourceArn\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The Amazon Resource Name (ARN) of the resource to remove the tags from.\",\n            \"schema\": { \"type\": \"string\", \"minLength\": 1, \"maxLength\": 1011 }\n          },\n          {\n            \"name\": \"tagKeys\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"description\": \"A list of tag keys to remove from the resource. If a tag key does not exist on the resource, it is ignored.\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": { \"$ref\": \"#/components/schemas/TagKey\" },\n              \"minItems\": 0,\n              \"maxItems\": 200\n            }\n          }\n        ],\n        \"summary\": \"Untag Resource\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/migrations/{migrationId}\": {\n      \"get\": {\n        \"operationId\": \"GetMigration\",\n        \"description\": \"Provides details about an ongoing or complete migration from an Amazon Lex V1 bot to an Amazon Lex V2 bot. Use this operation to view the migration alerts and warnings related to the migration.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetMigrationResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"migrationId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The unique identifier of the migration to view. The \u003ccode\u003emigrationID\u003c/code\u003e is returned by the operation.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^[0-9a-zA-Z]+$\",\n              \"minLength\": 10,\n              \"maxLength\": 10\n            }\n          }\n        ],\n        \"summary\": \"Get Migration\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/migrations\": {\n      \"get\": {\n        \"operationId\": \"GetMigrations\",\n        \"description\": \"Gets a list of migrations between Amazon Lex V1 and Amazon Lex V2.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetMigrationsResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"sortByAttribute\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"The field to sort the list of migrations by. You can sort by the Amazon Lex V1 bot name or the date and time that the migration was started.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"V1_BOT_NAME\", \"MIGRATION_DATE_TIME\"]\n            }\n          },\n          {\n            \"name\": \"sortByOrder\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"The order so sort the list.\",\n            \"schema\": { \"type\": \"string\", \"enum\": [\"ASCENDING\", \"DESCENDING\"] }\n          },\n          {\n            \"name\": \"v1BotNameContains\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Filters the list to contain only bots whose name contains the specified string. The string is matched anywhere in bot name.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([A-Za-z]_?)+$\",\n              \"minLength\": 2,\n              \"maxLength\": 50\n            }\n          },\n          {\n            \"name\": \"migrationStatusEquals\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Filters the list to contain only migrations in the specified state.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"IN_PROGRESS\", \"COMPLETED\", \"FAILED\"]\n            }\n          },\n          {\n            \"name\": \"maxResults\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"The maximum number of migrations to return in the response. The default is 10.\",\n            \"schema\": { \"type\": \"integer\", \"minimum\": 1, \"maximum\": 50 }\n          },\n          {\n            \"name\": \"nextToken\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"A pagination token that fetches the next page of migrations. If the response to this operation is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of migrations, specify the pagination token in the request.\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"summary\": \"Get Migrations\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ],\n      \"post\": {\n        \"operationId\": \"StartMigration\",\n        \"description\": \"\u003cp\u003eStarts migrating a bot from Amazon Lex V1 to Amazon Lex V2. Migrate your bot when you want to take advantage of the new features of Amazon Lex V2.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\\\"https://docs.aws.amazon.com/lex/latest/dg/migrate.html\\\"\u003eMigrating a bot\u003c/a\u003e in the \u003ci\u003eAmazon Lex developer guide\u003c/i\u003e.\u003c/p\u003e\",\n        \"responses\": {\n          \"202\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StartMigrationResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InternalFailureException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalFailureException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"AccessDeniedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AccessDeniedException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"v1BotName\",\n                  \"v1BotVersion\",\n                  \"v2BotName\",\n                  \"v2BotRole\",\n                  \"migrationStrategy\"\n                ],\n                \"properties\": {\n                  \"v1BotName\": {\n                    \"description\": \"The name of the Amazon Lex V1 bot that you are migrating to Amazon Lex V2.\",\n                    \"type\": \"string\",\n                    \"pattern\": \"^([A-Za-z]_?)+$\",\n                    \"minLength\": 2,\n                    \"maxLength\": 50\n                  },\n                  \"v1BotVersion\": {\n                    \"description\": \"The version of the bot to migrate to Amazon Lex V2. You can migrate the \u003ccode\u003e$LATEST\u003c/code\u003e version as well as any numbered version.\",\n                    \"type\": \"string\",\n                    \"pattern\": \"\\\\$LATEST|[0-9]+\",\n                    \"minLength\": 1,\n                    \"maxLength\": 64\n                  },\n                  \"v2BotName\": {\n                    \"description\": \"\u003cp\u003eThe name of the Amazon Lex V2 bot that you are migrating the Amazon Lex V1 bot to. \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eIf the Amazon Lex V2 bot doesn't exist, you must use the \u003ccode\u003eCREATE_NEW\u003c/code\u003e migration strategy.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf the Amazon Lex V2 bot exists, you must use the \u003ccode\u003eUPDATE_EXISTING\u003c/code\u003e migration strategy to change the contents of the Amazon Lex V2 bot.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\",\n                    \"type\": \"string\",\n                    \"pattern\": \"^([0-9a-zA-Z][_-]?)+$\",\n                    \"minLength\": 1,\n                    \"maxLength\": 100\n                  },\n                  \"v2BotRole\": {\n                    \"description\": \"The IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.\",\n                    \"type\": \"string\",\n                    \"pattern\": \"^arn:[\\\\w\\\\-]+:iam::[\\\\d]{12}:role/.+$\",\n                    \"minLength\": 20,\n                    \"maxLength\": 2048\n                  },\n                  \"migrationStrategy\": {\n                    \"description\": \"\u003cp\u003eThe strategy used to conduct the migration.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCREATE_NEW\u003c/code\u003e - Creates a new Amazon Lex V2 bot and migrates the Amazon Lex V1 bot to the new bot.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUPDATE_EXISTING\u003c/code\u003e - Overwrites the existing Amazon Lex V2 bot metadata and the locale being migrated. It doesn't change any other locales in the Amazon Lex V2 bot. If the locale doesn't exist, a new locale is created in the Amazon Lex V2 bot.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\",\n                    \"type\": \"string\",\n                    \"enum\": [\"CREATE_NEW\", \"UPDATE_EXISTING\"]\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"summary\": \"Start Migration\"\n      }\n    }\n  },\n  \"components\": {\n    \"parameters\": {\n      \"X-Amz-Content-Sha256\": {\n        \"name\": \"X-Amz-Content-Sha256\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Date\": {\n        \"name\": \"X-Amz-Date\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Algorithm\": {\n        \"name\": \"X-Amz-Algorithm\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Credential\": {\n        \"name\": \"X-Amz-Credential\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Security-Token\": {\n        \"name\": \"X-Amz-Security-Token\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Signature\": {\n        \"name\": \"X-Amz-Signature\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-SignedHeaders\": {\n        \"name\": \"X-Amz-SignedHeaders\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      }\n    },\n    \"securitySchemes\": {\n      \"hmac\": {\n        \"type\": \"apiKey\",\n        \"name\": \"Authorization\",\n        \"in\": \"header\",\n        \"description\": \"Amazon Signature authorization v4\",\n        \"x-amazon-apigateway-authtype\": \"awsSigv4\"\n      }\n    },\n    \"schemas\": {\n      \"CreateBotVersionResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BotName\" },\n              { \"description\": \"The name of the bot.\" }\n            ]\n          },\n          \"description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Description\" },\n              { \"description\": \"A description of the bot.\" }\n            ]\n          },\n          \"intents\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/IntentList\" },\n              {\n                \"description\": \"An array of \u003ccode\u003eIntent\u003c/code\u003e objects. For more information, see \u003ca\u003ePutBot\u003c/a\u003e.\"\n              }\n            ]\n          },\n          \"clarificationPrompt\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Prompt\" },\n              {\n                \"description\": \"The message that Amazon Lex uses when it doesn't understand the user's request. For more information, see \u003ca\u003ePutBot\u003c/a\u003e. \"\n              }\n            ]\n          },\n          \"abortStatement\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Statement\" },\n              {\n                \"description\": \"The message that Amazon Lex uses to cancel a conversation. For more information, see \u003ca\u003ePutBot\u003c/a\u003e.\"\n              }\n            ]\n          },\n          \"status\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Status\" },\n              {\n                \"description\": \" When you send a request to create or update a bot, Amazon Lex sets the \u003ccode\u003estatus\u003c/code\u003e response element to \u003ccode\u003eBUILDING\u003c/code\u003e. After Amazon Lex builds the bot, it sets \u003ccode\u003estatus\u003c/code\u003e to \u003ccode\u003eREADY\u003c/code\u003e. If Amazon Lex can't build the bot, it sets \u003ccode\u003estatus\u003c/code\u003e to \u003ccode\u003eFAILED\u003c/code\u003e. Amazon Lex returns the reason for the failure in the \u003ccode\u003efailureReason\u003c/code\u003e response element. \"\n              }\n            ]\n          },\n          \"failureReason\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              {\n                \"description\": \"If \u003ccode\u003estatus\u003c/code\u003e is \u003ccode\u003eFAILED\u003c/code\u003e, Amazon Lex provides the reason that it failed to build the bot.\"\n              }\n            ]\n          },\n          \"lastUpdatedDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              {\n                \"description\": \"The date when the \u003ccode\u003e$LATEST\u003c/code\u003e version of this bot was updated. \"\n              }\n            ]\n          },\n          \"createdDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              { \"description\": \"The date when the bot version was created.\" }\n            ]\n          },\n          \"idleSessionTTLInSeconds\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SessionTTL\" },\n              {\n                \"description\": \"The maximum time in seconds that Amazon Lex retains the data gathered in a conversation. For more information, see \u003ca\u003ePutBot\u003c/a\u003e.\"\n              }\n            ]\n          },\n          \"voiceId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              {\n                \"description\": \"The Amazon Polly voice ID that Amazon Lex uses for voice interactions with the user.\"\n              }\n            ]\n          },\n          \"checksum\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              {\n                \"description\": \"Checksum identifying the version of the bot that was created.\"\n              }\n            ]\n          },\n          \"version\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Version\" },\n              { \"description\": \"The version of the bot. \" }\n            ]\n          },\n          \"locale\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Locale\" },\n              { \"description\": \" Specifies the target locale for the bot. \" }\n            ]\n          },\n          \"childDirected\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Boolean\" },\n              {\n                \"description\": \"\u003cp\u003eFor each Amazon Lex bot created with the Amazon Lex Model Building Service, you must specify whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children's Online Privacy Protection Act (COPPA) by specifying \u003ccode\u003etrue\u003c/code\u003e or \u003ccode\u003efalse\u003c/code\u003e in the \u003ccode\u003echildDirected\u003c/code\u003e field. By specifying \u003ccode\u003etrue\u003c/code\u003e in the \u003ccode\u003echildDirected\u003c/code\u003e field, you confirm that your use of Amazon Lex \u003cb\u003eis\u003c/b\u003e related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. By specifying \u003ccode\u003efalse\u003c/code\u003e in the \u003ccode\u003echildDirected\u003c/code\u003e field, you confirm that your use of Amazon Lex \u003cb\u003eis not\u003c/b\u003e related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. You may not specify a default value for the \u003ccode\u003echildDirected\u003c/code\u003e field that does not accurately reflect whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA.\u003c/p\u003e \u003cp\u003eIf your use of Amazon Lex relates to a website, program, or other application that is directed in whole or in part, to children under age 13, you must obtain any required verifiable parental consent under COPPA. For information regarding the use of Amazon Lex in connection with websites, programs, or other applications that are directed or targeted, in whole or in part, to children under age 13, see the \u003ca href=\\\"https://aws.amazon.com/lex/faqs#data-security\\\"\u003eAmazon Lex FAQ.\u003c/a\u003e \u003c/p\u003e\"\n              }\n            ]\n          },\n          \"enableModelImprovements\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Boolean\" },\n              {\n                \"description\": \"Indicates whether the bot uses accuracy improvements. \u003ccode\u003etrue\u003c/code\u003e indicates that the bot is using the imoprovements, otherwise, \u003ccode\u003efalse\u003c/code\u003e.\"\n              }\n            ]\n          },\n          \"detectSentiment\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Boolean\" },\n              {\n                \"description\": \"Indicates whether utterances entered by the user should be sent to Amazon Comprehend for sentiment analysis.\"\n              }\n            ]\n          }\n        }\n      },\n      \"NotFoundException\": {},\n      \"ConflictException\": {},\n      \"LimitExceededException\": {},\n      \"InternalFailureException\": {},\n      \"BadRequestException\": {},\n      \"PreconditionFailedException\": {},\n      \"CreateIntentVersionResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/IntentName\" },\n              { \"description\": \"The name of the intent.\" }\n            ]\n          },\n          \"description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Description\" },\n              { \"description\": \"A description of the intent.\" }\n            ]\n          },\n          \"slots\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SlotList\" },\n              {\n                \"description\": \"An array of slot types that defines the information required to fulfill the intent.\"\n              }\n            ]\n          },\n          \"sampleUtterances\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/IntentUtteranceList\" },\n              {\n                \"description\": \"An array of sample utterances configured for the intent. \"\n              }\n            ]\n          },\n          \"confirmationPrompt\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Prompt\" },\n              {\n                \"description\": \"If defined, the prompt that Amazon Lex uses to confirm the user's intent before fulfilling it. \"\n              }\n            ]\n          },\n          \"rejectionStatement\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Statement\" },\n              {\n                \"description\": \"If the user answers \\\"no\\\" to the question defined in \u003ccode\u003econfirmationPrompt\u003c/code\u003e, Amazon Lex responds with this statement to acknowledge that the intent was canceled. \"\n              }\n            ]\n          },\n          \"followUpPrompt\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/FollowUpPrompt\" },\n              {\n                \"description\": \"If defined, Amazon Lex uses this prompt to solicit additional user activity after the intent is fulfilled. \"\n              }\n            ]\n          },\n          \"conclusionStatement\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Statement\" },\n              {\n                \"description\": \"After the Lambda function specified in the \u003ccode\u003efulfillmentActivity\u003c/code\u003e field fulfills the intent, Amazon Lex conveys this statement to the user. \"\n              }\n            ]\n          },\n          \"dialogCodeHook\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/CodeHook\" },\n              {\n                \"description\": \"If defined, Amazon Lex invokes this Lambda function for each user input.\"\n              }\n            ]\n          },\n          \"fulfillmentActivity\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/FulfillmentActivity\" },\n              { \"description\": \" Describes how the intent is fulfilled. \" }\n            ]\n          },\n          \"parentIntentSignature\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BuiltinIntentSignature\" },\n              { \"description\": \"A unique identifier for a built-in intent.\" }\n            ]\n          },\n          \"lastUpdatedDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              { \"description\": \"The date that the intent was updated. \" }\n            ]\n          },\n          \"createdDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              { \"description\": \"The date that the intent was created.\" }\n            ]\n          },\n          \"version\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Version\" },\n              {\n                \"description\": \"The version number assigned to the new version of the intent.\"\n              }\n            ]\n          },\n          \"checksum\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              { \"description\": \"Checksum of the intent version created.\" }\n            ]\n          },\n          \"kendraConfiguration\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/KendraConfiguration\" },\n              {\n                \"description\": \"Configuration information, if any, for connectin an Amazon Kendra index with the \u003ccode\u003eAMAZON.KendraSearchIntent\u003c/code\u003e intent.\"\n              }\n            ]\n          },\n          \"inputContexts\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/InputContextList\" },\n              {\n                \"description\": \"An array of \u003ccode\u003eInputContext\u003c/code\u003e objects that lists the contexts that must be active for Amazon Lex to choose the intent in a conversation with the user.\"\n              }\n            ]\n          },\n          \"outputContexts\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/OutputContextList\" },\n              {\n                \"description\": \"An array of \u003ccode\u003eOutputContext\u003c/code\u003e objects that lists the contexts that the intent activates when the intent is fulfilled.\"\n              }\n            ]\n          }\n        }\n      },\n      \"CreateSlotTypeVersionResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SlotTypeName\" },\n              { \"description\": \"The name of the slot type.\" }\n            ]\n          },\n          \"description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Description\" },\n              { \"description\": \"A description of the slot type.\" }\n            ]\n          },\n          \"enumerationValues\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/EnumerationValues\" },\n              {\n                \"description\": \"A list of \u003ccode\u003eEnumerationValue\u003c/code\u003e objects that defines the values that the slot type can take.\"\n              }\n            ]\n          },\n          \"lastUpdatedDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              {\n                \"description\": \"The date that the slot type was updated. When you create a resource, the creation date and last update date are the same.\"\n              }\n            ]\n          },\n          \"createdDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              { \"description\": \"The date that the slot type was created.\" }\n            ]\n          },\n          \"version\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Version\" },\n              {\n                \"description\": \"The version assigned to the new slot type version. \"\n              }\n            ]\n          },\n          \"checksum\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              {\n                \"description\": \"Checksum of the \u003ccode\u003e$LATEST\u003c/code\u003e version of the slot type.\"\n              }\n            ]\n          },\n          \"valueSelectionStrategy\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SlotValueSelectionStrategy\" },\n              {\n                \"description\": \"The strategy that Amazon Lex uses to determine the value of the slot. For more information, see \u003ca\u003ePutSlotType\u003c/a\u003e.\"\n              }\n            ]\n          },\n          \"parentSlotTypeSignature\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/CustomOrBuiltinSlotTypeName\" },\n              {\n                \"description\": \"The built-in slot type used a the parent of the slot type.\"\n              }\n            ]\n          },\n          \"slotTypeConfigurations\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SlotTypeConfigurations\" },\n              {\n                \"description\": \"Configuration information that extends the parent built-in slot type.\"\n              }\n            ]\n          }\n        }\n      },\n      \"ResourceInUseException\": {},\n      \"GetBotResponse\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"version\": \"$LATEST\",\n          \"name\": \"DocOrderPizzaBot\",\n          \"abortStatement\": {\n            \"messages\": [\n              {\n                \"content\": \"I don't understand. Can you try again?\",\n                \"contentType\": \"PlainText\"\n              },\n              {\n                \"content\": \"I'm sorry, I don't understand.\",\n                \"contentType\": \"PlainText\"\n              }\n            ]\n          },\n          \"checksum\": \"20172ee3-fa06-49b2-bbc5-667c090303e9\",\n          \"childDirected\": true,\n          \"clarificationPrompt\": {\n            \"maxAttempts\": 1,\n            \"messages\": [\n              {\n                \"content\": \"I'm sorry, I didn't hear that. Can you repeate what you just said?\",\n                \"contentType\": \"PlainText\"\n              },\n              {\n                \"content\": \"Can you say that again?\",\n                \"contentType\": \"PlainText\"\n              }\n            ]\n          },\n          \"createdDate\": 1494360160.133,\n          \"description\": \"Orders a pizza from a local pizzeria.\",\n          \"idleSessionTTLInSeconds\": 300,\n          \"intents\": [\n            { \"intentName\": \"DocOrderPizza\", \"intentVersion\": \"$LATEST\" }\n          ],\n          \"lastUpdatedDate\": 1494360160.133,\n          \"locale\": \"en-US\",\n          \"status\": \"NOT_BUILT\"\n        },\n        \"properties\": {\n          \"name\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BotName\" },\n              { \"description\": \"The name of the bot.\" }\n            ]\n          },\n          \"description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Description\" },\n              { \"description\": \"A description of the bot.\" }\n            ]\n          },\n          \"intents\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/IntentList\" },\n              {\n                \"description\": \"An array of \u003ccode\u003eintent\u003c/code\u003e objects. For more information, see \u003ca\u003ePutBot\u003c/a\u003e.\"\n              }\n            ]\n          },\n          \"enableModelImprovements\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Boolean\" },\n              {\n                \"description\": \"Indicates whether the bot uses accuracy improvements. \u003ccode\u003etrue\u003c/code\u003e indicates that the bot is using the imoprovements, otherwise, \u003ccode\u003efalse\u003c/code\u003e.\"\n              }\n            ]\n          },\n          \"nluIntentConfidenceThreshold\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ConfidenceThreshold\" },\n              {\n                \"description\": \"The score that determines where Amazon Lex inserts the \u003ccode\u003eAMAZON.FallbackIntent\u003c/code\u003e, \u003ccode\u003eAMAZON.KendraSearchIntent\u003c/code\u003e, or both when returning alternative intents in a \u003ca href=\\\"https://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostContent.html\\\"\u003ePostContent\u003c/a\u003e or \u003ca href=\\\"https://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostText.html\\\"\u003ePostText\u003c/a\u003e response. \u003ccode\u003eAMAZON.FallbackIntent\u003c/code\u003e is inserted if the confidence score for all intents is below this value. \u003ccode\u003eAMAZON.KendraSearchIntent\u003c/code\u003e is only inserted if it is configured for the bot.\"\n              }\n            ]\n          },\n          \"clarificationPrompt\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Prompt\" },\n              {\n                \"description\": \"The message Amazon Lex uses when it doesn't understand the user's request. For more information, see \u003ca\u003ePutBot\u003c/a\u003e. \"\n              }\n            ]\n          },\n          \"abortStatement\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Statement\" },\n              {\n                \"description\": \"The message that Amazon Lex returns when the user elects to end the conversation without completing it. For more information, see \u003ca\u003ePutBot\u003c/a\u003e.\"\n              }\n            ]\n          },\n          \"status\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Status\" },\n              {\n                \"description\": \"\u003cp\u003eThe status of the bot. \u003c/p\u003e \u003cp\u003eWhen the status is \u003ccode\u003eBUILDING\u003c/code\u003e Amazon Lex is building the bot for testing and use.\u003c/p\u003e \u003cp\u003eIf the status of the bot is \u003ccode\u003eREADY_BASIC_TESTING\u003c/code\u003e, you can test the bot using the exact utterances specified in the bot's intents. When the bot is ready for full testing or to run, the status is \u003ccode\u003eREADY\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIf there was a problem with building the bot, the status is \u003ccode\u003eFAILED\u003c/code\u003e and the \u003ccode\u003efailureReason\u003c/code\u003e field explains why the bot did not build.\u003c/p\u003e \u003cp\u003eIf the bot was saved but not built, the status is \u003ccode\u003eNOT_BUILT\u003c/code\u003e.\u003c/p\u003e\"\n              }\n            ]\n          },\n          \"failureReason\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              {\n                \"description\": \"If \u003ccode\u003estatus\u003c/code\u003e is \u003ccode\u003eFAILED\u003c/code\u003e, Amazon Lex explains why it failed to build the bot.\"\n              }\n            ]\n          },\n          \"lastUpdatedDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              {\n                \"description\": \"The date that the bot was updated. When you create a resource, the creation date and last updated date are the same. \"\n              }\n            ]\n          },\n          \"createdDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              { \"description\": \"The date that the bot was created.\" }\n            ]\n          },\n          \"idleSessionTTLInSeconds\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SessionTTL\" },\n              {\n                \"description\": \"The maximum time in seconds that Amazon Lex retains the data gathered in a conversation. For more information, see \u003ca\u003ePutBot\u003c/a\u003e.\"\n              }\n            ]\n          },\n          \"voiceId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              {\n                \"description\": \"The Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user. For more information, see \u003ca\u003ePutBot\u003c/a\u003e.\"\n              }\n            ]\n          },\n          \"checksum\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              {\n                \"description\": \"Checksum of the bot used to identify a specific revision of the bot's \u003ccode\u003e$LATEST\u003c/code\u003e version.\"\n              }\n            ]\n          },\n          \"version\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Version\" },\n              {\n                \"description\": \"The version of the bot. For a new bot, the version is always \u003ccode\u003e$LATEST\u003c/code\u003e.\"\n              }\n            ]\n          },\n          \"locale\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Locale\" },\n              { \"description\": \" The target locale for the bot. \" }\n            ]\n          },\n          \"childDirected\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Boolean\" },\n              {\n                \"description\": \"\u003cp\u003eFor each Amazon Lex bot created with the Amazon Lex Model Building Service, you must specify whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children's Online Privacy Protection Act (COPPA) by specifying \u003ccode\u003etrue\u003c/code\u003e or \u003ccode\u003efalse\u003c/code\u003e in the \u003ccode\u003echildDirected\u003c/code\u003e field. By specifying \u003ccode\u003etrue\u003c/code\u003e in the \u003ccode\u003echildDirected\u003c/code\u003e field, you confirm that your use of Amazon Lex \u003cb\u003eis\u003c/b\u003e related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. By specifying \u003ccode\u003efalse\u003c/code\u003e in the \u003ccode\u003echildDirected\u003c/code\u003e field, you confirm that your use of Amazon Lex \u003cb\u003eis not\u003c/b\u003e related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. You may not specify a default value for the \u003ccode\u003echildDirected\u003c/code\u003e field that does not accurately reflect whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA.\u003c/p\u003e \u003cp\u003eIf your use of Amazon Lex relates to a website, program, or other application that is directed in whole or in part, to children under age 13, you must obtain any required verifiable parental consent under COPPA. For information regarding the use of Amazon Lex in connection with websites, programs, or other applications that are directed or targeted, in whole or in part, to children under age 13, see the \u003ca href=\\\"https://aws.amazon.com/lex/faqs#data-security\\\"\u003eAmazon Lex FAQ.\u003c/a\u003e \u003c/p\u003e\"\n              }\n            ]\n          },\n          \"detectSentiment\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Boolean\" },\n              {\n                \"description\": \"Indicates whether user utterances should be sent to Amazon Comprehend for sentiment analysis.\"\n              }\n            ]\n          }\n        }\n      },\n      \"GetBotAliasResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/AliasName\" },\n              { \"description\": \"The name of the bot alias.\" }\n            ]\n          },\n          \"description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Description\" },\n              { \"description\": \"A description of the bot alias.\" }\n            ]\n          },\n          \"botVersion\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Version\" },\n              {\n                \"description\": \"The version of the bot that the alias points to.\"\n              }\n            ]\n          },\n          \"botName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BotName\" },\n              { \"description\": \"The name of the bot that the alias points to.\" }\n            ]\n          },\n          \"lastUpdatedDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              {\n                \"description\": \"The date that the bot alias was updated. When you create a resource, the creation date and the last updated date are the same.\"\n              }\n            ]\n          },\n          \"createdDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              { \"description\": \"The date that the bot alias was created.\" }\n            ]\n          },\n          \"checksum\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              { \"description\": \"Checksum of the bot alias.\" }\n            ]\n          },\n          \"conversationLogs\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ConversationLogsResponse\" },\n              {\n                \"description\": \"The settings that determine how Amazon Lex uses conversation logs for the alias.\"\n              }\n            ]\n          }\n        }\n      },\n      \"GetBotAliasesResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"BotAliases\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BotAliasMetadataList\" },\n              {\n                \"description\": \"An array of \u003ccode\u003eBotAliasMetadata\u003c/code\u003e objects, each describing a bot alias.\"\n              }\n            ]\n          },\n          \"nextToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/NextToken\" },\n              {\n                \"description\": \"A pagination token for fetching next page of aliases. If the response to this call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of aliases, specify the pagination token in the next request. \"\n              }\n            ]\n          }\n        }\n      },\n      \"GetBotChannelAssociationResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BotChannelName\" },\n              {\n                \"description\": \"The name of the association between the bot and the channel.\"\n              }\n            ]\n          },\n          \"description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Description\" },\n              {\n                \"description\": \"A description of the association between the bot and the channel.\"\n              }\n            ]\n          },\n          \"botAlias\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/AliasName\" },\n              {\n                \"description\": \"An alias pointing to the specific version of the Amazon Lex bot to which this association is being made.\"\n              }\n            ]\n          },\n          \"botName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BotName\" },\n              { \"description\": \"The name of the Amazon Lex bot.\" }\n            ]\n          },\n          \"createdDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              {\n                \"description\": \"The date that the association between the bot and the channel was created.\"\n              }\n            ]\n          },\n          \"type\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ChannelType\" },\n              { \"description\": \"The type of the messaging platform.\" }\n            ]\n          },\n          \"botConfiguration\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ChannelConfigurationMap\" },\n              {\n                \"description\": \"Provides information that the messaging platform needs to communicate with the Amazon Lex bot.\"\n              }\n            ]\n          },\n          \"status\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ChannelStatus\" },\n              {\n                \"description\": \"\u003cp\u003eThe status of the bot channel. \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCREATED\u003c/code\u003e - The channel has been created and is ready for use.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIN_PROGRESS\u003c/code\u003e - Channel creation is in progress.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eFAILED\u003c/code\u003e - There was an error creating the channel. For information about the reason for the failure, see the \u003ccode\u003efailureReason\u003c/code\u003e field.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\"\n              }\n            ]\n          },\n          \"failureReason\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              {\n                \"description\": \"If \u003ccode\u003estatus\u003c/code\u003e is \u003ccode\u003eFAILED\u003c/code\u003e, Amazon Lex provides the reason that it failed to create the association.\"\n              }\n            ]\n          }\n        }\n      },\n      \"GetBotChannelAssociationsResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"botChannelAssociations\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BotChannelAssociationList\" },\n              {\n                \"description\": \"An array of objects, one for each association, that provides information about the Amazon Lex bot and its association with the channel. \"\n              }\n            ]\n          },\n          \"nextToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/NextToken\" },\n              {\n                \"description\": \"A pagination token that fetches the next page of associations. If the response to this call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of associations, specify the pagination token in the next request. \"\n              }\n            ]\n          }\n        }\n      },\n      \"GetBotVersionsResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"bots\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BotMetadataList\" },\n              {\n                \"description\": \"An array of \u003ccode\u003eBotMetadata\u003c/code\u003e objects, one for each numbered version of the bot plus one for the \u003ccode\u003e$LATEST\u003c/code\u003e version.\"\n              }\n            ]\n          },\n          \"nextToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/NextToken\" },\n              {\n                \"description\": \"A pagination token for fetching the next page of bot versions. If the response to this call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of versions, specify the pagination token in the next request. \"\n              }\n            ]\n          }\n        }\n      },\n      \"GetBotsResponse\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"bots\": [\n            {\n              \"version\": \"$LATEST\",\n              \"name\": \"DocOrderPizzaBot\",\n              \"createdDate\": 1494360160.133,\n              \"description\": \"Orders a pizza from a local pizzeria.\",\n              \"lastUpdatedDate\": 1494360160.133,\n              \"status\": \"NOT_BUILT\"\n            }\n          ]\n        },\n        \"properties\": {\n          \"bots\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BotMetadataList\" },\n              {\n                \"description\": \"An array of \u003ccode\u003ebotMetadata\u003c/code\u003e objects, with one entry for each bot. \"\n              }\n            ]\n          },\n          \"nextToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/NextToken\" },\n              {\n                \"description\": \"If the response is truncated, it includes a pagination token that you can specify in your next request to fetch the next page of bots. \"\n              }\n            ]\n          }\n        }\n      },\n      \"GetBuiltinIntentResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"signature\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BuiltinIntentSignature\" },\n              { \"description\": \"The unique identifier for a built-in intent.\" }\n            ]\n          },\n          \"supportedLocales\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LocaleList\" },\n              { \"description\": \"A list of locales that the intent supports.\" }\n            ]\n          },\n          \"slots\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BuiltinIntentSlotList\" },\n              {\n                \"description\": \"An array of \u003ccode\u003eBuiltinIntentSlot\u003c/code\u003e objects, one entry for each slot type in the intent.\"\n              }\n            ]\n          }\n        }\n      },\n      \"GetBuiltinIntentsResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"intents\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BuiltinIntentMetadataList\" },\n              {\n                \"description\": \"An array of \u003ccode\u003ebuiltinIntentMetadata\u003c/code\u003e objects, one for each intent in the response.\"\n              }\n            ]\n          },\n          \"nextToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/NextToken\" },\n              {\n                \"description\": \"A pagination token that fetches the next page of intents. If the response to this API call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of intents, specify the pagination token in the next request.\"\n              }\n            ]\n          }\n        }\n      },\n      \"GetBuiltinSlotTypesResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"slotTypes\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BuiltinSlotTypeMetadataList\" },\n              {\n                \"description\": \"An array of \u003ccode\u003eBuiltInSlotTypeMetadata\u003c/code\u003e objects, one entry for each slot type returned.\"\n              }\n            ]\n          },\n          \"nextToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/NextToken\" },\n              {\n                \"description\": \"If the response is truncated, the response includes a pagination token that you can use in your next request to fetch the next page of slot types.\"\n              }\n            ]\n          }\n        }\n      },\n      \"GetExportResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Name\" },\n              { \"description\": \"The name of the bot being exported.\" }\n            ]\n          },\n          \"version\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/NumericalVersion\" },\n              { \"description\": \"The version of the bot being exported.\" }\n            ]\n          },\n          \"resourceType\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ResourceType\" },\n              { \"description\": \"The type of the exported resource.\" }\n            ]\n          },\n          \"exportType\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ExportType\" },\n              { \"description\": \"The format of the exported data.\" }\n            ]\n          },\n          \"exportStatus\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ExportStatus\" },\n              {\n                \"description\": \"\u003cp\u003eThe status of the export. \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIN_PROGRESS\u003c/code\u003e - The export is in progress.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eREADY\u003c/code\u003e - The export is complete.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eFAILED\u003c/code\u003e - The export could not be completed.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\"\n              }\n            ]\n          },\n          \"failureReason\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              {\n                \"description\": \"If \u003ccode\u003estatus\u003c/code\u003e is \u003ccode\u003eFAILED\u003c/code\u003e, Amazon Lex provides the reason that it failed to export the resource.\"\n              }\n            ]\n          },\n          \"url\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              {\n                \"description\": \"An S3 pre-signed URL that provides the location of the exported resource. The exported resource is a ZIP archive that contains the exported resource in JSON format. The structure of the archive may change. Your code should not rely on the archive structure.\"\n              }\n            ]\n          }\n        }\n      },\n      \"GetImportResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Name\" },\n              { \"description\": \"The name given to the import job.\" }\n            ]\n          },\n          \"resourceType\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ResourceType\" },\n              { \"description\": \"The type of resource imported.\" }\n            ]\n          },\n          \"mergeStrategy\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MergeStrategy\" },\n              {\n                \"description\": \"The action taken when there was a conflict between an existing resource and a resource in the import file.\"\n              }\n            ]\n          },\n          \"importId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              { \"description\": \"The identifier for the specific import job.\" }\n            ]\n          },\n          \"importStatus\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImportStatus\" },\n              {\n                \"description\": \"The status of the import job. If the status is \u003ccode\u003eFAILED\u003c/code\u003e, you can get the reason for the failure from the \u003ccode\u003efailureReason\u003c/code\u003e field.\"\n              }\n            ]\n          },\n          \"failureReason\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/StringList\" },\n              {\n                \"description\": \"A string that describes why an import job failed to complete.\"\n              }\n            ]\n          },\n          \"createdDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              {\n                \"description\": \"A timestamp for the date and time that the import job was created.\"\n              }\n            ]\n          }\n        }\n      },\n      \"GetIntentResponse\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"version\": \"$LATEST\",\n          \"name\": \"DocOrderPizza\",\n          \"checksum\": \"ca9bc13d-afc8-4706-bbaf-091f7a5935d6\",\n          \"conclusionStatement\": {\n            \"messages\": [\n              {\n                \"content\": \"All right, I ordered  you a {Crust} crust {Type} pizza with {Sauce} sauce.\",\n                \"contentType\": \"PlainText\"\n              },\n              {\n                \"content\": \"OK, your {Crust} crust {Type} pizza with {Sauce} sauce is on the way.\",\n                \"contentType\": \"PlainText\"\n              }\n            ],\n            \"responseCard\": \"foo\"\n          },\n          \"confirmationPrompt\": {\n            \"maxAttempts\": 1,\n            \"messages\": [\n              {\n                \"content\": \"Should I order  your {Crust} crust {Type} pizza with {Sauce} sauce?\",\n                \"contentType\": \"PlainText\"\n              }\n            ]\n          },\n          \"createdDate\": 1494359783.453,\n          \"description\": \"Order a pizza from a local pizzeria.\",\n          \"fulfillmentActivity\": { \"type\": \"ReturnIntent\" },\n          \"lastUpdatedDate\": 1494359783.453,\n          \"rejectionStatement\": {\n            \"messages\": [\n              {\n                \"content\": \"Ok, I'll cancel your order.\",\n                \"contentType\": \"PlainText\"\n              },\n              {\n                \"content\": \"I cancelled your order.\",\n                \"contentType\": \"PlainText\"\n              }\n            ]\n          },\n          \"sampleUtterances\": [\n            \"Order me a pizza.\",\n            \"Order me a {Type} pizza.\",\n            \"I want a {Crust} crust {Type} pizza\",\n            \"I want a {Crust} crust {Type} pizza with {Sauce} sauce.\"\n          ],\n          \"slots\": [\n            {\n              \"name\": \"Type\",\n              \"description\": \"The type of pizza to order.\",\n              \"priority\": 1,\n              \"sampleUtterances\": [\n                \"Get me a {Type} pizza.\",\n                \"A {Type} pizza please.\",\n                \"I'd like a {Type} pizza.\"\n              ],\n              \"slotConstraint\": \"Required\",\n              \"slotType\": \"DocPizzaType\",\n              \"slotTypeVersion\": \"$LATEST\",\n              \"valueElicitationPrompt\": {\n                \"maxAttempts\": 1,\n                \"messages\": [\n                  {\n                    \"content\": \"What type of pizza would you like?\",\n                    \"contentType\": \"PlainText\"\n                  },\n                  {\n                    \"content\": \"Vegie or cheese pizza?\",\n                    \"contentType\": \"PlainText\"\n                  },\n                  {\n                    \"content\": \"I can get you a vegie or a cheese pizza.\",\n                    \"contentType\": \"PlainText\"\n                  }\n                ]\n              }\n            },\n            {\n              \"name\": \"Crust\",\n              \"description\": \"The type of pizza crust to order.\",\n              \"priority\": 2,\n              \"sampleUtterances\": [\n                \"Make it a {Crust} crust.\",\n                \"I'd like a {Crust} crust.\"\n              ],\n              \"slotConstraint\": \"Required\",\n              \"slotType\": \"DocPizzaCrustType\",\n              \"slotTypeVersion\": \"$LATEST\",\n              \"valueElicitationPrompt\": {\n                \"maxAttempts\": 1,\n                \"messages\": [\n                  {\n                    \"content\": \"What type of crust would you like?\",\n                    \"contentType\": \"PlainText\"\n                  },\n                  {\n                    \"content\": \"Thick or thin crust?\",\n                    \"contentType\": \"PlainText\"\n                  }\n                ]\n              }\n            },\n            {\n              \"name\": \"Sauce\",\n              \"description\": \"The type of sauce to use on the pizza.\",\n              \"priority\": 3,\n              \"sampleUtterances\": [\n                \"Make it {Sauce} sauce.\",\n                \"I'd like {Sauce} sauce.\"\n              ],\n              \"slotConstraint\": \"Required\",\n              \"slotType\": \"DocPizzaSauceType\",\n              \"slotTypeVersion\": \"$LATEST\",\n              \"valueElicitationPrompt\": {\n                \"maxAttempts\": 1,\n                \"messages\": [\n                  {\n                    \"content\": \"White or red sauce?\",\n                    \"contentType\": \"PlainText\"\n                  },\n                  {\n                    \"content\": \"Garlic or tomato sauce?\",\n                    \"contentType\": \"PlainText\"\n                  }\n                ]\n              }\n            }\n          ]\n        },\n        \"properties\": {\n          \"name\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/IntentName\" },\n              { \"description\": \"The name of the intent.\" }\n            ]\n          },\n          \"description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Description\" },\n              { \"description\": \"A description of the intent.\" }\n            ]\n          },\n          \"slots\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SlotList\" },\n              {\n                \"description\": \"An array of intent slots configured for the intent.\"\n              }\n            ]\n          },\n          \"sampleUtterances\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/IntentUtteranceList\" },\n              {\n                \"description\": \"An array of sample utterances configured for the intent.\"\n              }\n            ]\n          },\n          \"confirmationPrompt\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Prompt\" },\n              {\n                \"description\": \"If defined in the bot, Amazon Lex uses prompt to confirm the intent before fulfilling the user's request. For more information, see \u003ca\u003ePutIntent\u003c/a\u003e. \"\n              }\n            ]\n          },\n          \"rejectionStatement\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Statement\" },\n              {\n                \"description\": \"If the user answers \\\"no\\\" to the question defined in \u003ccode\u003econfirmationPrompt\u003c/code\u003e, Amazon Lex responds with this statement to acknowledge that the intent was canceled. \"\n              }\n            ]\n          },\n          \"followUpPrompt\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/FollowUpPrompt\" },\n              {\n                \"description\": \"If defined in the bot, Amazon Lex uses this prompt to solicit additional user activity after the intent is fulfilled. For more information, see \u003ca\u003ePutIntent\u003c/a\u003e.\"\n              }\n            ]\n          },\n          \"conclusionStatement\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Statement\" },\n              {\n                \"description\": \"After the Lambda function specified in the \u003ccode\u003efulfillmentActivity\u003c/code\u003e element fulfills the intent, Amazon Lex conveys this statement to the user.\"\n              }\n            ]\n          },\n          \"dialogCodeHook\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/CodeHook\" },\n              {\n                \"description\": \"If defined in the bot, Amazon Amazon Lex invokes this Lambda function for each user input. For more information, see \u003ca\u003ePutIntent\u003c/a\u003e. \"\n              }\n            ]\n          },\n          \"fulfillmentActivity\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/FulfillmentActivity\" },\n              {\n                \"description\": \"Describes how the intent is fulfilled. For more information, see \u003ca\u003ePutIntent\u003c/a\u003e. \"\n              }\n            ]\n          },\n          \"parentIntentSignature\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BuiltinIntentSignature\" },\n              { \"description\": \"A unique identifier for a built-in intent.\" }\n            ]\n          },\n          \"lastUpdatedDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              {\n                \"description\": \"The date that the intent was updated. When you create a resource, the creation date and the last updated date are the same. \"\n              }\n            ]\n          },\n          \"createdDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              { \"description\": \"The date that the intent was created.\" }\n            ]\n          },\n          \"version\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Version\" },\n              { \"description\": \"The version of the intent.\" }\n            ]\n          },\n          \"checksum\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              { \"description\": \"Checksum of the intent.\" }\n            ]\n          },\n          \"kendraConfiguration\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/KendraConfiguration\" },\n              {\n                \"description\": \"Configuration information, if any, to connect to an Amazon Kendra index with the \u003ccode\u003eAMAZON.KendraSearchIntent\u003c/code\u003e intent.\"\n              }\n            ]\n          },\n          \"inputContexts\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/InputContextList\" },\n              {\n                \"description\": \"An array of \u003ccode\u003eInputContext\u003c/code\u003e objects that lists the contexts that must be active for Amazon Lex to choose the intent in a conversation with the user.\"\n              }\n            ]\n          },\n          \"outputContexts\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/OutputContextList\" },\n              {\n                \"description\": \"An array of \u003ccode\u003eOutputContext\u003c/code\u003e objects that lists the contexts that the intent activates when the intent is fulfilled.\"\n              }\n            ]\n          }\n        }\n      },\n      \"GetIntentVersionsResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"intents\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/IntentMetadataList\" },\n              {\n                \"description\": \"An array of \u003ccode\u003eIntentMetadata\u003c/code\u003e objects, one for each numbered version of the intent plus one for the \u003ccode\u003e$LATEST\u003c/code\u003e version.\"\n              }\n            ]\n          },\n          \"nextToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/NextToken\" },\n              {\n                \"description\": \"A pagination token for fetching the next page of intent versions. If the response to this call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of versions, specify the pagination token in the next request. \"\n              }\n            ]\n          }\n        }\n      },\n      \"GetIntentsResponse\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"intents\": [\n            {\n              \"version\": \"$LATEST\",\n              \"name\": \"DocOrderPizza\",\n              \"createdDate\": 1494359783.453,\n              \"description\": \"Order a pizza from a local pizzeria.\",\n              \"lastUpdatedDate\": 1494359783.453\n            }\n          ]\n        },\n        \"properties\": {\n          \"intents\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/IntentMetadataList\" },\n              {\n                \"description\": \"An array of \u003ccode\u003eIntent\u003c/code\u003e objects. For more information, see \u003ca\u003ePutBot\u003c/a\u003e.\"\n              }\n            ]\n          },\n          \"nextToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/NextToken\" },\n              {\n                \"description\": \"If the response is truncated, the response includes a pagination token that you can specify in your next request to fetch the next page of intents. \"\n              }\n            ]\n          }\n        }\n      },\n      \"GetSlotTypeResponse\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"version\": \"$LATEST\",\n          \"name\": \"DocPizzaCrustType\",\n          \"checksum\": \"210b3d5a-90a3-4b22-ac7e-f50c2c71095f\",\n          \"createdDate\": 1494359274.403,\n          \"description\": \"Available crust types\",\n          \"enumerationValues\": [{ \"value\": \"thick\" }, { \"value\": \"thin\" }],\n          \"lastUpdatedDate\": 1494359274.403\n        },\n        \"properties\": {\n          \"name\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SlotTypeName\" },\n              { \"description\": \"The name of the slot type.\" }\n            ]\n          },\n          \"description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Description\" },\n              { \"description\": \"A description of the slot type.\" }\n            ]\n          },\n          \"enumerationValues\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/EnumerationValues\" },\n              {\n                \"description\": \"A list of \u003ccode\u003eEnumerationValue\u003c/code\u003e objects that defines the values that the slot type can take.\"\n              }\n            ]\n          },\n          \"lastUpdatedDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              {\n                \"description\": \"The date that the slot type was updated. When you create a resource, the creation date and last update date are the same.\"\n              }\n            ]\n          },\n          \"createdDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              { \"description\": \"The date that the slot type was created.\" }\n            ]\n          },\n          \"version\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Version\" },\n              { \"description\": \"The version of the slot type.\" }\n            ]\n          },\n          \"checksum\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              {\n                \"description\": \"Checksum of the \u003ccode\u003e$LATEST\u003c/code\u003e version of the slot type.\"\n              }\n            ]\n          },\n          \"valueSelectionStrategy\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SlotValueSelectionStrategy\" },\n              {\n                \"description\": \"The strategy that Amazon Lex uses to determine the value of the slot. For more information, see \u003ca\u003ePutSlotType\u003c/a\u003e.\"\n              }\n            ]\n          },\n          \"parentSlotTypeSignature\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/CustomOrBuiltinSlotTypeName\" },\n              {\n                \"description\": \"The built-in slot type used as a parent for the slot type.\"\n              }\n            ]\n          },\n          \"slotTypeConfigurations\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SlotTypeConfigurations\" },\n              {\n                \"description\": \"Configuration information that extends the parent built-in slot type.\"\n              }\n            ]\n          }\n        }\n      },\n      \"GetSlotTypeVersionsResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"slotTypes\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SlotTypeMetadataList\" },\n              {\n                \"description\": \"An array of \u003ccode\u003eSlotTypeMetadata\u003c/code\u003e objects, one for each numbered version of the slot type plus one for the \u003ccode\u003e$LATEST\u003c/code\u003e version.\"\n              }\n            ]\n          },\n          \"nextToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/NextToken\" },\n              {\n                \"description\": \"A pagination token for fetching the next page of slot type versions. If the response to this call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of versions, specify the pagination token in the next request. \"\n              }\n            ]\n          }\n        }\n      },\n      \"GetSlotTypesResponse\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"slotTypes\": [\n            {\n              \"version\": \"$LATEST\",\n              \"name\": \"DocPizzaCrustType\",\n              \"createdDate\": 1494359274.403,\n              \"description\": \"Available crust types\",\n              \"lastUpdatedDate\": 1494359274.403\n            },\n            {\n              \"version\": \"$LATEST\",\n              \"name\": \"DocPizzaSauceType\",\n              \"createdDate\": 1494356442.23,\n              \"description\": \"Available pizza sauces\",\n              \"lastUpdatedDate\": 1494356442.23\n            },\n            {\n              \"version\": \"$LATEST\",\n              \"name\": \"DocPizzaType\",\n              \"createdDate\": 1494359198.656,\n              \"description\": \"Available pizzas\",\n              \"lastUpdatedDate\": 1494359198.656\n            }\n          ]\n        },\n        \"properties\": {\n          \"slotTypes\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SlotTypeMetadataList\" },\n              {\n                \"description\": \"An array of objects, one for each slot type, that provides information such as the name of the slot type, the version, and a description.\"\n              }\n            ]\n          },\n          \"nextToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/NextToken\" },\n              {\n                \"description\": \"If the response is truncated, it includes a pagination token that you can specify in your next request to fetch the next page of slot types.\"\n              }\n            ]\n          }\n        }\n      },\n      \"GetUtterancesViewResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"botName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BotName\" },\n              {\n                \"description\": \"The name of the bot for which utterance information was returned.\"\n              }\n            ]\n          },\n          \"utterances\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ListsOfUtterances\" },\n              {\n                \"description\": \"An array of \u003ca\u003eUtteranceList\u003c/a\u003e objects, each containing a list of \u003ca\u003eUtteranceData\u003c/a\u003e objects describing the utterances that were processed by your bot. The response contains a maximum of 100 \u003ccode\u003eUtteranceData\u003c/code\u003e objects for each version. Amazon Lex returns the most frequent utterances received by the bot in the last 15 days.\"\n              }\n            ]\n          }\n        }\n      },\n      \"Version\": {\n        \"type\": \"string\",\n        \"pattern\": \"\\\\$LATEST|[0-9]+\",\n        \"minLength\": 1,\n        \"maxLength\": 64\n      },\n      \"ListTagsForResourceResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"tags\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/TagList\" },\n              { \"description\": \"The tags associated with a resource.\" }\n            ]\n          }\n        }\n      },\n      \"PutBotResponse\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"version\": \"$LATEST\",\n          \"name\": \"DocOrderPizzaBot\",\n          \"abortStatement\": {\n            \"messages\": [\n              {\n                \"content\": \"I don't understand. Can you try again?\",\n                \"contentType\": \"PlainText\"\n              },\n              {\n                \"content\": \"I'm sorry, I don't understand.\",\n                \"contentType\": \"PlainText\"\n              }\n            ]\n          },\n          \"checksum\": \"20172ee3-fa06-49b2-bbc5-667c090303e9\",\n          \"childDirected\": true,\n          \"clarificationPrompt\": {\n            \"maxAttempts\": 1,\n            \"messages\": [\n              {\n                \"content\": \"I'm sorry, I didn't hear that. Can you repeate what you just said?\",\n                \"contentType\": \"PlainText\"\n              },\n              {\n                \"content\": \"Can you say that again?\",\n                \"contentType\": \"PlainText\"\n              }\n            ]\n          },\n          \"createdDate\": 1494360160.133,\n          \"description\": \"Orders a pizza from a local pizzeria.\",\n          \"idleSessionTTLInSeconds\": 300,\n          \"intents\": [\n            { \"intentName\": \"DocOrderPizza\", \"intentVersion\": \"$LATEST\" }\n          ],\n          \"lastUpdatedDate\": 1494360160.133,\n          \"locale\": \"en-US\",\n          \"status\": \"NOT_BUILT\"\n        },\n        \"properties\": {\n          \"name\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BotName\" },\n              { \"description\": \"The name of the bot.\" }\n            ]\n          },\n          \"description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Description\" },\n              { \"description\": \"A description of the bot.\" }\n            ]\n          },\n          \"intents\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/IntentList\" },\n              {\n                \"description\": \"An array of \u003ccode\u003eIntent\u003c/code\u003e objects. For more information, see \u003ca\u003ePutBot\u003c/a\u003e.\"\n              }\n            ]\n          },\n          \"enableModelImprovements\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Boolean\" },\n              {\n                \"description\": \"Indicates whether the bot uses accuracy improvements. \u003ccode\u003etrue\u003c/code\u003e indicates that the bot is using the imoprovements, otherwise, \u003ccode\u003efalse\u003c/code\u003e.\"\n              }\n            ]\n          },\n          \"nluIntentConfidenceThreshold\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ConfidenceThreshold\" },\n              {\n                \"description\": \"The score that determines where Amazon Lex inserts the \u003ccode\u003eAMAZON.FallbackIntent\u003c/code\u003e, \u003ccode\u003eAMAZON.KendraSearchIntent\u003c/code\u003e, or both when returning alternative intents in a \u003ca href=\\\"https://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostContent.html\\\"\u003ePostContent\u003c/a\u003e or \u003ca href=\\\"https://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostText.html\\\"\u003ePostText\u003c/a\u003e response. \u003ccode\u003eAMAZON.FallbackIntent\u003c/code\u003e is inserted if the confidence score for all intents is below this value. \u003ccode\u003eAMAZON.KendraSearchIntent\u003c/code\u003e is only inserted if it is configured for the bot.\"\n              }\n            ]\n          },\n          \"clarificationPrompt\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Prompt\" },\n              {\n                \"description\": \" The prompts that Amazon Lex uses when it doesn't understand the user's intent. For more information, see \u003ca\u003ePutBot\u003c/a\u003e. \"\n              }\n            ]\n          },\n          \"abortStatement\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Statement\" },\n              {\n                \"description\": \"The message that Amazon Lex uses to cancel a conversation. For more information, see \u003ca\u003ePutBot\u003c/a\u003e.\"\n              }\n            ]\n          },\n          \"status\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Status\" },\n              {\n                \"description\": \"\u003cp\u003e When you send a request to create a bot with \u003ccode\u003eprocessBehavior\u003c/code\u003e set to \u003ccode\u003eBUILD\u003c/code\u003e, Amazon Lex sets the \u003ccode\u003estatus\u003c/code\u003e response element to \u003ccode\u003eBUILDING\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIn the \u003ccode\u003eREADY_BASIC_TESTING\u003c/code\u003e state you can test the bot with user inputs that exactly match the utterances configured for the bot's intents and values in the slot types.\u003c/p\u003e \u003cp\u003eIf Amazon Lex can't build the bot, Amazon Lex sets \u003ccode\u003estatus\u003c/code\u003e to \u003ccode\u003eFAILED\u003c/code\u003e. Amazon Lex returns the reason for the failure in the \u003ccode\u003efailureReason\u003c/code\u003e response element. \u003c/p\u003e \u003cp\u003eWhen you set \u003ccode\u003eprocessBehavior\u003c/code\u003e to \u003ccode\u003eSAVE\u003c/code\u003e, Amazon Lex sets the status code to \u003ccode\u003eNOT BUILT\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eWhen the bot is in the \u003ccode\u003eREADY\u003c/code\u003e state you can test and publish the bot.\u003c/p\u003e\"\n              }\n            ]\n          },\n          \"failureReason\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              {\n                \"description\": \"If \u003ccode\u003estatus\u003c/code\u003e is \u003ccode\u003eFAILED\u003c/code\u003e, Amazon Lex provides the reason that it failed to build the bot.\"\n              }\n            ]\n          },\n          \"lastUpdatedDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              {\n                \"description\": \"The date that the bot was updated. When you create a resource, the creation date and last updated date are the same.\"\n              }\n            ]\n          },\n          \"createdDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              { \"description\": \"The date that the bot was created.\" }\n            ]\n          },\n          \"idleSessionTTLInSeconds\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SessionTTL\" },\n              {\n                \"description\": \"The maximum length of time that Amazon Lex retains the data gathered in a conversation. For more information, see \u003ca\u003ePutBot\u003c/a\u003e.\"\n              }\n            ]\n          },\n          \"voiceId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              {\n                \"description\": \"The Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user. For more information, see \u003ca\u003ePutBot\u003c/a\u003e.\"\n              }\n            ]\n          },\n          \"checksum\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              { \"description\": \"Checksum of the bot that you created.\" }\n            ]\n          },\n          \"version\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Version\" },\n              {\n                \"description\": \"The version of the bot. For a new bot, the version is always \u003ccode\u003e$LATEST\u003c/code\u003e.\"\n              }\n            ]\n          },\n          \"locale\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Locale\" },\n              { \"description\": \" The target locale for the bot. \" }\n            ]\n          },\n          \"childDirected\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Boolean\" },\n              {\n                \"description\": \"\u003cp\u003eFor each Amazon Lex bot created with the Amazon Lex Model Building Service, you must specify whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children's Online Privacy Protection Act (COPPA) by specifying \u003ccode\u003etrue\u003c/code\u003e or \u003ccode\u003efalse\u003c/code\u003e in the \u003ccode\u003echildDirected\u003c/code\u003e field. By specifying \u003ccode\u003etrue\u003c/code\u003e in the \u003ccode\u003echildDirected\u003c/code\u003e field, you confirm that your use of Amazon Lex \u003cb\u003eis\u003c/b\u003e related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. By specifying \u003ccode\u003efalse\u003c/code\u003e in the \u003ccode\u003echildDirected\u003c/code\u003e field, you confirm that your use of Amazon Lex \u003cb\u003eis not\u003c/b\u003e related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. You may not specify a default value for the \u003ccode\u003echildDirected\u003c/code\u003e field that does not accurately reflect whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA.\u003c/p\u003e \u003cp\u003eIf your use of Amazon Lex relates to a website, program, or other application that is directed in whole or in part, to children under age 13, you must obtain any required verifiable parental consent under COPPA. For information regarding the use of Amazon Lex in connection with websites, programs, or other applications that are directed or targeted, in whole or in part, to children under age 13, see the \u003ca href=\\\"https://aws.amazon.com/lex/faqs#data-security\\\"\u003eAmazon Lex FAQ.\u003c/a\u003e \u003c/p\u003e\"\n              }\n            ]\n          },\n          \"createVersion\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Boolean\" },\n              {\n                \"description\": \" \u003ccode\u003eTrue\u003c/code\u003e if a new version of the bot was created. If the \u003ccode\u003ecreateVersion\u003c/code\u003e field was not specified in the request, the \u003ccode\u003ecreateVersion\u003c/code\u003e field is set to false in the response.\"\n              }\n            ]\n          },\n          \"detectSentiment\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Boolean\" },\n              {\n                \"description\": \" \u003ccode\u003etrue\u003c/code\u003e if the bot is configured to send user utterances to Amazon Comprehend for sentiment analysis. If the \u003ccode\u003edetectSentiment\u003c/code\u003e field was not specified in the request, the \u003ccode\u003edetectSentiment\u003c/code\u003e field is \u003ccode\u003efalse\u003c/code\u003e in the response.\"\n              }\n            ]\n          },\n          \"tags\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/TagList\" },\n              { \"description\": \"A list of tags associated with the bot.\" }\n            ]\n          }\n        }\n      },\n      \"Intent\": {\n        \"type\": \"object\",\n        \"required\": [\"intentName\", \"intentVersion\"],\n        \"properties\": {\n          \"intentName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/IntentName\" },\n              { \"description\": \"The name of the intent.\" }\n            ]\n          },\n          \"intentVersion\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Version\" },\n              { \"description\": \"The version of the intent.\" }\n            ]\n          }\n        },\n        \"description\": \"Identifies the specific version of an intent.\"\n      },\n      \"MessageList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/Message\" },\n        \"minItems\": 1,\n        \"maxItems\": 15\n      },\n      \"PromptMaxAttempts\": { \"type\": \"integer\", \"minimum\": 1, \"maximum\": 5 },\n      \"ResponseCard\": { \"type\": \"string\", \"minLength\": 1, \"maxLength\": 50000 },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"required\": [\"key\", \"value\"],\n        \"properties\": {\n          \"key\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/TagKey\" },\n              {\n                \"description\": \"The key for the tag. Keys are not case-sensitive and must be unique.\"\n              }\n            ]\n          },\n          \"value\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/TagValue\" },\n              {\n                \"description\": \"The value associated with a key. The value may be an empty string but it can't be null.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"A list of key/value pairs that identify a bot, bot alias, or bot channel. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @. \"\n      },\n      \"PutBotAliasResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/AliasName\" },\n              { \"description\": \"The name of the alias.\" }\n            ]\n          },\n          \"description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Description\" },\n              { \"description\": \"A description of the alias.\" }\n            ]\n          },\n          \"botVersion\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Version\" },\n              {\n                \"description\": \"The version of the bot that the alias points to.\"\n              }\n            ]\n          },\n          \"botName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BotName\" },\n              { \"description\": \"The name of the bot that the alias points to.\" }\n            ]\n          },\n          \"lastUpdatedDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              {\n                \"description\": \"The date that the bot alias was updated. When you create a resource, the creation date and the last updated date are the same.\"\n              }\n            ]\n          },\n          \"createdDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              { \"description\": \"The date that the bot alias was created.\" }\n            ]\n          },\n          \"checksum\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              {\n                \"description\": \"The checksum for the current version of the alias.\"\n              }\n            ]\n          },\n          \"conversationLogs\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ConversationLogsResponse\" },\n              {\n                \"description\": \"The settings that determine how Amazon Lex uses conversation logs for the alias.\"\n              }\n            ]\n          },\n          \"tags\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/TagList\" },\n              { \"description\": \"A list of tags associated with a bot.\" }\n            ]\n          }\n        }\n      },\n      \"LogSettingsRequestList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/LogSettingsRequest\" }\n      },\n      \"IamRoleArn\": {\n        \"type\": \"string\",\n        \"pattern\": \"^arn:[\\\\w\\\\-]+:iam::[\\\\d]{12}:role/.+$\",\n        \"minLength\": 20,\n        \"maxLength\": 2048\n      },\n      \"PutIntentResponse\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"version\": \"$LATEST\",\n          \"name\": \"DocOrderPizza\",\n          \"checksum\": \"ca9bc13d-afc8-4706-bbaf-091f7a5935d6\",\n          \"conclusionStatement\": {\n            \"messages\": [\n              {\n                \"content\": \"All right, I ordered  you a {Crust} crust {Type} pizza with {Sauce} sauce.\",\n                \"contentType\": \"PlainText\"\n              },\n              {\n                \"content\": \"OK, your {Crust} crust {Type} pizza with {Sauce} sauce is on the way.\",\n                \"contentType\": \"PlainText\"\n              }\n            ],\n            \"responseCard\": \"foo\"\n          },\n          \"confirmationPrompt\": {\n            \"maxAttempts\": 1,\n            \"messages\": [\n              {\n                \"content\": \"Should I order  your {Crust} crust {Type} pizza with {Sauce} sauce?\",\n                \"contentType\": \"PlainText\"\n              }\n            ]\n          },\n          \"createdDate\": 1494359783.453,\n          \"description\": \"Order a pizza from a local pizzeria.\",\n          \"fulfillmentActivity\": { \"type\": \"ReturnIntent\" },\n          \"lastUpdatedDate\": 1494359783.453,\n          \"rejectionStatement\": {\n            \"messages\": [\n              {\n                \"content\": \"Ok, I'll cancel your order.\",\n                \"contentType\": \"PlainText\"\n              },\n              {\n                \"content\": \"I cancelled your order.\",\n                \"contentType\": \"PlainText\"\n              }\n            ]\n          },\n          \"sampleUtterances\": [\n            \"Order me a pizza.\",\n            \"Order me a {Type} pizza.\",\n            \"I want a {Crust} crust {Type} pizza\",\n            \"I want a {Crust} crust {Type} pizza with {Sauce} sauce.\"\n          ],\n          \"slots\": [\n            {\n              \"name\": \"Sauce\",\n              \"description\": \"The type of sauce to use on the pizza.\",\n              \"priority\": 3,\n              \"sampleUtterances\": [\n                \"Make it {Sauce} sauce.\",\n                \"I'd like {Sauce} sauce.\"\n              ],\n              \"slotConstraint\": \"Required\",\n              \"slotType\": \"DocPizzaSauceType\",\n              \"slotTypeVersion\": \"$LATEST\",\n              \"valueElicitationPrompt\": {\n                \"maxAttempts\": 1,\n                \"messages\": [\n                  {\n                    \"content\": \"White or red sauce?\",\n                    \"contentType\": \"PlainText\"\n                  },\n                  {\n                    \"content\": \"Garlic or tomato sauce?\",\n                    \"contentType\": \"PlainText\"\n                  }\n                ]\n              }\n            },\n            {\n              \"name\": \"Type\",\n              \"description\": \"The type of pizza to order.\",\n              \"priority\": 1,\n              \"sampleUtterances\": [\n                \"Get me a {Type} pizza.\",\n                \"A {Type} pizza please.\",\n                \"I'd like a {Type} pizza.\"\n              ],\n              \"slotConstraint\": \"Required\",\n              \"slotType\": \"DocPizzaType\",\n              \"slotTypeVersion\": \"$LATEST\",\n              \"valueElicitationPrompt\": {\n                \"maxAttempts\": 1,\n                \"messages\": [\n                  {\n                    \"content\": \"What type of pizza would you like?\",\n                    \"contentType\": \"PlainText\"\n                  },\n                  {\n                    \"content\": \"Vegie or cheese pizza?\",\n                    \"contentType\": \"PlainText\"\n                  },\n                  {\n                    \"content\": \"I can get you a vegie or a cheese pizza.\",\n                    \"contentType\": \"PlainText\"\n                  }\n                ]\n              }\n            },\n            {\n              \"name\": \"Crust\",\n              \"description\": \"The type of pizza crust to order.\",\n              \"priority\": 2,\n              \"sampleUtterances\": [\n                \"Make it a {Crust} crust.\",\n                \"I'd like a {Crust} crust.\"\n              ],\n              \"slotConstraint\": \"Required\",\n              \"slotType\": \"DocPizzaCrustType\",\n              \"slotTypeVersion\": \"$LATEST\",\n              \"valueElicitationPrompt\": {\n                \"maxAttempts\": 1,\n                \"messages\": [\n                  {\n                    \"content\": \"What type of crust would you like?\",\n                    \"contentType\": \"PlainText\"\n                  },\n                  {\n                    \"content\": \"Thick or thin crust?\",\n                    \"contentType\": \"PlainText\"\n                  }\n                ]\n              }\n            }\n          ]\n        },\n        \"properties\": {\n          \"name\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/IntentName\" },\n              { \"description\": \"The name of the intent.\" }\n            ]\n          },\n          \"description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Description\" },\n              { \"description\": \"A description of the intent.\" }\n            ]\n          },\n          \"slots\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SlotList\" },\n              {\n                \"description\": \"An array of intent slots that are configured for the intent.\"\n              }\n            ]\n          },\n          \"sampleUtterances\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/IntentUtteranceList\" },\n              {\n                \"description\": \" An array of sample utterances that are configured for the intent. \"\n              }\n            ]\n          },\n          \"confirmationPrompt\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Prompt\" },\n              {\n                \"description\": \"If defined in the intent, Amazon Lex prompts the user to confirm the intent before fulfilling it.\"\n              }\n            ]\n          },\n          \"rejectionStatement\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Statement\" },\n              {\n                \"description\": \"If the user answers \\\"no\\\" to the question defined in \u003ccode\u003econfirmationPrompt\u003c/code\u003e Amazon Lex responds with this statement to acknowledge that the intent was canceled. \"\n              }\n            ]\n          },\n          \"followUpPrompt\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/FollowUpPrompt\" },\n              {\n                \"description\": \"If defined in the intent, Amazon Lex uses this prompt to solicit additional user activity after the intent is fulfilled.\"\n              }\n            ]\n          },\n          \"conclusionStatement\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Statement\" },\n              {\n                \"description\": \"After the Lambda function specified in the\u003ccode\u003efulfillmentActivity\u003c/code\u003eintent fulfills the intent, Amazon Lex conveys this statement to the user.\"\n              }\n            ]\n          },\n          \"dialogCodeHook\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/CodeHook\" },\n              {\n                \"description\": \"If defined in the intent, Amazon Lex invokes this Lambda function for each user input.\"\n              }\n            ]\n          },\n          \"fulfillmentActivity\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/FulfillmentActivity\" },\n              {\n                \"description\": \"If defined in the intent, Amazon Lex invokes this Lambda function to fulfill the intent after the user provides all of the information required by the intent.\"\n              }\n            ]\n          },\n          \"parentIntentSignature\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BuiltinIntentSignature\" },\n              {\n                \"description\": \"A unique identifier for the built-in intent that this intent is based on.\"\n              }\n            ]\n          },\n          \"lastUpdatedDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              {\n                \"description\": \"The date that the intent was updated. When you create a resource, the creation date and last update dates are the same.\"\n              }\n            ]\n          },\n          \"createdDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              { \"description\": \"The date that the intent was created.\" }\n            ]\n          },\n          \"version\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Version\" },\n              {\n                \"description\": \"The version of the intent. For a new intent, the version is always \u003ccode\u003e$LATEST\u003c/code\u003e.\"\n              }\n            ]\n          },\n          \"checksum\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              {\n                \"description\": \"Checksum of the \u003ccode\u003e$LATEST\u003c/code\u003eversion of the intent created or updated.\"\n              }\n            ]\n          },\n          \"createVersion\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Boolean\" },\n              {\n                \"description\": \" \u003ccode\u003eTrue\u003c/code\u003e if a new version of the intent was created. If the \u003ccode\u003ecreateVersion\u003c/code\u003e field was not specified in the request, the \u003ccode\u003ecreateVersion\u003c/code\u003e field is set to false in the response.\"\n              }\n            ]\n          },\n          \"kendraConfiguration\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/KendraConfiguration\" },\n              {\n                \"description\": \"Configuration information, if any, required to connect to an Amazon Kendra index and use the \u003ccode\u003eAMAZON.KendraSearchIntent\u003c/code\u003e intent.\"\n              }\n            ]\n          },\n          \"inputContexts\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/InputContextList\" },\n              {\n                \"description\": \"An array of \u003ccode\u003eInputContext\u003c/code\u003e objects that lists the contexts that must be active for Amazon Lex to choose the intent in a conversation with the user.\"\n              }\n            ]\n          },\n          \"outputContexts\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/OutputContextList\" },\n              {\n                \"description\": \"An array of \u003ccode\u003eOutputContext\u003c/code\u003e objects that lists the contexts that the intent activates when the intent is fulfilled.\"\n              }\n            ]\n          }\n        }\n      },\n      \"Slot\": {\n        \"type\": \"object\",\n        \"required\": [\"name\", \"slotConstraint\"],\n        \"properties\": {\n          \"name\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SlotName\" },\n              { \"description\": \"The name of the slot.\" }\n            ]\n          },\n          \"description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Description\" },\n              { \"description\": \"A description of the slot.\" }\n            ]\n          },\n          \"slotConstraint\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SlotConstraint\" },\n              {\n                \"description\": \"Specifies whether the slot is required or optional. \"\n              }\n            ]\n          },\n          \"slotType\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/CustomOrBuiltinSlotTypeName\" },\n              {\n                \"description\": \"The type of the slot, either a custom slot type that you defined or one of the built-in slot types.\"\n              }\n            ]\n          },\n          \"slotTypeVersion\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Version\" },\n              { \"description\": \"The version of the slot type.\" }\n            ]\n          },\n          \"valueElicitationPrompt\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Prompt\" },\n              {\n                \"description\": \"The prompt that Amazon Lex uses to elicit the slot value from the user.\"\n              }\n            ]\n          },\n          \"priority\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Priority\" },\n              {\n                \"description\": \"\u003cp\u003e Directs Amazon Lex the order in which to elicit this slot value from the user. For example, if the intent has two slots with priorities 1 and 2, AWS Amazon Lex first elicits a value for the slot with priority 1.\u003c/p\u003e \u003cp\u003eIf multiple slots share the same priority, the order in which Amazon Lex elicits values is arbitrary.\u003c/p\u003e\"\n              }\n            ]\n          },\n          \"sampleUtterances\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SlotUtteranceList\" },\n              {\n                \"description\": \" If you know a specific pattern with which users might respond to an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This is optional. In most cases, Amazon Lex is capable of understanding user utterances. \"\n              }\n            ]\n          },\n          \"responseCard\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ResponseCard\" },\n              {\n                \"description\": \" A set of possible responses for the slot type used by text-based clients. A user chooses an option from the response card, instead of using text to reply. \"\n              }\n            ]\n          },\n          \"obfuscationSetting\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ObfuscationSetting\" },\n              {\n                \"description\": \"Determines whether a slot is obfuscated in conversation logs and stored utterances. When you obfuscate a slot, the value is replaced by the slot name in curly braces ({}). For example, if the slot name is \\\"full_name\\\", obfuscated values are replaced with \\\"{full_name}\\\". For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/lex/latest/dg/how-obfuscate.html\\\"\u003e Slot Obfuscation \u003c/a\u003e. \"\n              }\n            ]\n          },\n          \"defaultValueSpec\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SlotDefaultValueSpec\" },\n              {\n                \"description\": \"A list of default values for the slot. Default values are used when Amazon Lex hasn't determined a value for a slot. You can specify default values from context variables, session attributes, and defined values.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Identifies the version of a specific slot.\"\n      },\n      \"Utterance\": { \"type\": \"string\", \"minLength\": 1, \"maxLength\": 200 },\n      \"Prompt\": {\n        \"type\": \"object\",\n        \"required\": [\"messages\", \"maxAttempts\"],\n        \"properties\": {\n          \"messages\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MessageList\" },\n              {\n                \"description\": \"An array of objects, each of which provides a message string and its type. You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\"\n              }\n            ]\n          },\n          \"maxAttempts\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/PromptMaxAttempts\" },\n              {\n                \"description\": \"The number of times to prompt the user for information.\"\n              }\n            ]\n          },\n          \"responseCard\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ResponseCard\" },\n              {\n                \"description\": \"A response card. Amazon Lex uses this prompt at runtime, in the \u003ccode\u003ePostText\u003c/code\u003e API response. It substitutes session attributes and slot values for placeholders in the response card. For more information, see \u003ca\u003eex-resp-card\u003c/a\u003e. \"\n              }\n            ]\n          }\n        },\n        \"description\": \"Obtains information from the user. To define a prompt, provide one or more messages and specify the number of attempts to get information from the user. If you provide more than one message, Amazon Lex chooses one of the messages to use to prompt the user. For more information, see \u003ca\u003ehow-it-works\u003c/a\u003e.\"\n      },\n      \"Statement\": {\n        \"type\": \"object\",\n        \"required\": [\"messages\"],\n        \"properties\": {\n          \"messages\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MessageList\" },\n              { \"description\": \"A collection of message objects.\" }\n            ]\n          },\n          \"responseCard\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ResponseCard\" },\n              {\n                \"description\": \" At runtime, if the client is using the \u003ca href=\\\"http://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostText.html\\\"\u003ePostText\u003c/a\u003e API, Amazon Lex includes the response card in the response. It substitutes all of the session attributes and slot values for placeholders in the response card. \"\n              }\n            ]\n          }\n        },\n        \"description\": \"A collection of messages that convey information to the user. At runtime, Amazon Lex selects the message to convey. \"\n      },\n      \"LambdaARN\": {\n        \"type\": \"string\",\n        \"pattern\": \"arn:aws:lambda:[a-z]+-[a-z]+-[0-9]:[0-9]{12}:function:[a-zA-Z0-9-_]+(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?(:[a-zA-Z0-9-_]+)?\",\n        \"minLength\": 20,\n        \"maxLength\": 2048\n      },\n      \"MessageVersion\": { \"type\": \"string\", \"minLength\": 1, \"maxLength\": 5 },\n      \"FulfillmentActivityType\": {\n        \"type\": \"string\",\n        \"enum\": [\"ReturnIntent\", \"CodeHook\"]\n      },\n      \"CodeHook\": {\n        \"type\": \"object\",\n        \"required\": [\"uri\", \"messageVersion\"],\n        \"properties\": {\n          \"uri\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LambdaARN\" },\n              {\n                \"description\": \"The Amazon Resource Name (ARN) of the Lambda function.\"\n              }\n            ]\n          },\n          \"messageVersion\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MessageVersion\" },\n              {\n                \"description\": \"The version of the request-response that you want Amazon Lex to use to invoke your Lambda function. For more information, see \u003ca\u003eusing-lambda\u003c/a\u003e.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Specifies a Lambda function that verifies requests to a bot or fulfills the user's request to a bot..\"\n      },\n      \"KendraIndexArn\": {\n        \"type\": \"string\",\n        \"pattern\": \"arn:aws:kendra:[a-z]+-[a-z]+-[0-9]:[0-9]{12}:index\\\\/[a-zA-Z0-9][a-zA-Z0-9_-]*\",\n        \"minLength\": 20,\n        \"maxLength\": 2048\n      },\n      \"QueryFilterString\": { \"type\": \"string\", \"minLength\": 0 },\n      \"roleArn\": {\n        \"type\": \"string\",\n        \"pattern\": \"arn:aws:iam::[0-9]{12}:role/.*\",\n        \"minLength\": 20,\n        \"maxLength\": 2048\n      },\n      \"PutSlotTypeResponse\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"version\": \"$LATEST\",\n          \"name\": \"DocPizzaSauceType\",\n          \"checksum\": \"cfd00ed1-775d-4357-947c-aca7e73b44ba\",\n          \"createdDate\": 1494356442.23,\n          \"description\": \"Available pizza sauces\",\n          \"enumerationValues\": [{ \"value\": \"red\" }, { \"value\": \"white\" }],\n          \"lastUpdatedDate\": 1494356442.23\n        },\n        \"properties\": {\n          \"name\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SlotTypeName\" },\n              { \"description\": \"The name of the slot type.\" }\n            ]\n          },\n          \"description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Description\" },\n              { \"description\": \"A description of the slot type.\" }\n            ]\n          },\n          \"enumerationValues\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/EnumerationValues\" },\n              {\n                \"description\": \"A list of \u003ccode\u003eEnumerationValue\u003c/code\u003e objects that defines the values that the slot type can take.\"\n              }\n            ]\n          },\n          \"lastUpdatedDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              {\n                \"description\": \"The date that the slot type was updated. When you create a slot type, the creation date and last update date are the same.\"\n              }\n            ]\n          },\n          \"createdDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              { \"description\": \"The date that the slot type was created.\" }\n            ]\n          },\n          \"version\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Version\" },\n              {\n                \"description\": \"The version of the slot type. For a new slot type, the version is always \u003ccode\u003e$LATEST\u003c/code\u003e. \"\n              }\n            ]\n          },\n          \"checksum\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              {\n                \"description\": \"Checksum of the \u003ccode\u003e$LATEST\u003c/code\u003e version of the slot type.\"\n              }\n            ]\n          },\n          \"valueSelectionStrategy\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SlotValueSelectionStrategy\" },\n              {\n                \"description\": \"The slot resolution strategy that Amazon Lex uses to determine the value of the slot. For more information, see \u003ca\u003ePutSlotType\u003c/a\u003e.\"\n              }\n            ]\n          },\n          \"createVersion\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Boolean\" },\n              {\n                \"description\": \" \u003ccode\u003eTrue\u003c/code\u003e if a new version of the slot type was created. If the \u003ccode\u003ecreateVersion\u003c/code\u003e field was not specified in the request, the \u003ccode\u003ecreateVersion\u003c/code\u003e field is set to false in the response.\"\n              }\n            ]\n          },\n          \"parentSlotTypeSignature\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/CustomOrBuiltinSlotTypeName\" },\n              {\n                \"description\": \"The built-in slot type used as the parent of the slot type.\"\n              }\n            ]\n          },\n          \"slotTypeConfigurations\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SlotTypeConfigurations\" },\n              {\n                \"description\": \"Configuration information that extends the parent built-in slot type.\"\n              }\n            ]\n          }\n        }\n      },\n      \"EnumerationValue\": {\n        \"type\": \"object\",\n        \"required\": [\"value\"],\n        \"properties\": {\n          \"value\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Value\" },\n              { \"description\": \"The value of the slot type.\" }\n            ]\n          },\n          \"synonyms\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SynonymList\" },\n              {\n                \"description\": \"Additional values related to the slot type value.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"\u003cp\u003eEach slot type can have a set of values. Each enumeration value represents a value the slot type can take. \u003c/p\u003e \u003cp\u003eFor example, a pizza ordering bot could have a slot type that specifies the type of crust that the pizza should have. The slot type could include the values \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003ethick\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003ethin\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003estuffed\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\"\n      },\n      \"SlotTypeConfiguration\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"regexConfiguration\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SlotTypeRegexConfiguration\" },\n              {\n                \"description\": \"A regular expression used to validate the value of a slot.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Provides configuration information for a slot type.\"\n      },\n      \"StartImportResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Name\" },\n              { \"description\": \"The name given to the import job.\" }\n            ]\n          },\n          \"resourceType\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ResourceType\" },\n              { \"description\": \"The type of resource to import.\" }\n            ]\n          },\n          \"mergeStrategy\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MergeStrategy\" },\n              {\n                \"description\": \"The action to take when there is a merge conflict.\"\n              }\n            ]\n          },\n          \"importId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              { \"description\": \"The identifier for the specific import job.\" }\n            ]\n          },\n          \"importStatus\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImportStatus\" },\n              {\n                \"description\": \"The status of the import job. If the status is \u003ccode\u003eFAILED\u003c/code\u003e, you can get the reason for the failure using the \u003ccode\u003eGetImport\u003c/code\u003e operation.\"\n              }\n            ]\n          },\n          \"tags\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/TagList\" },\n              { \"description\": \"A list of tags added to the imported bot.\" }\n            ]\n          },\n          \"createdDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              {\n                \"description\": \"A timestamp for the date and time that the import job was requested.\"\n              }\n            ]\n          }\n        }\n      },\n      \"TagResourceResponse\": { \"type\": \"object\", \"properties\": {} },\n      \"UntagResourceResponse\": { \"type\": \"object\", \"properties\": {} },\n      \"TagKey\": { \"type\": \"string\", \"minLength\": 1, \"maxLength\": 128 },\n      \"AliasName\": {\n        \"type\": \"string\",\n        \"pattern\": \"^([A-Za-z]_?)+$\",\n        \"minLength\": 1,\n        \"maxLength\": 100\n      },\n      \"Boolean\": { \"type\": \"boolean\" },\n      \"Description\": { \"type\": \"string\", \"minLength\": 0, \"maxLength\": 200 },\n      \"BotName\": {\n        \"type\": \"string\",\n        \"pattern\": \"^([A-Za-z]_?)+$\",\n        \"minLength\": 2,\n        \"maxLength\": 50\n      },\n      \"Timestamp\": { \"type\": \"string\", \"format\": \"date-time\" },\n      \"String\": { \"type\": \"string\" },\n      \"ConversationLogsResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"logSettings\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LogSettingsResponseList\" },\n              {\n                \"description\": \"The settings for your conversation logs. You can log text, audio, or both.\"\n              }\n            ]\n          },\n          \"iamRoleArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/IamRoleArn\" },\n              {\n                \"description\": \"The Amazon Resource Name (ARN) of the IAM role used to write your logs to CloudWatch Logs or an S3 bucket.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Contains information about conversation log settings.\"\n      },\n      \"BotAliasMetadata\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/AliasName\" },\n              { \"description\": \"The name of the bot alias.\" }\n            ]\n          },\n          \"description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Description\" },\n              { \"description\": \"A description of the bot alias.\" }\n            ]\n          },\n          \"botVersion\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Version\" },\n              {\n                \"description\": \"The version of the Amazon Lex bot to which the alias points.\"\n              }\n            ]\n          },\n          \"botName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BotName\" },\n              {\n                \"description\": \"The name of the bot to which the alias points.\"\n              }\n            ]\n          },\n          \"lastUpdatedDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              {\n                \"description\": \"The date that the bot alias was updated. When you create a resource, the creation date and last updated date are the same.\"\n              }\n            ]\n          },\n          \"createdDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              { \"description\": \"The date that the bot alias was created.\" }\n            ]\n          },\n          \"checksum\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              { \"description\": \"Checksum of the bot alias.\" }\n            ]\n          },\n          \"conversationLogs\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ConversationLogsResponse\" },\n              {\n                \"description\": \"Settings that determine how Amazon Lex uses conversation logs for the alias.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Provides information about a bot alias.\"\n      },\n      \"BotAliasMetadataList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/BotAliasMetadata\" }\n      },\n      \"BotChannelName\": {\n        \"type\": \"string\",\n        \"pattern\": \"^([A-Za-z]_?)+$\",\n        \"minLength\": 1,\n        \"maxLength\": 100\n      },\n      \"ChannelType\": {\n        \"type\": \"string\",\n        \"enum\": [\"Facebook\", \"Slack\", \"Twilio-Sms\", \"Kik\"]\n      },\n      \"ChannelConfigurationMap\": {\n        \"type\": \"object\",\n        \"minProperties\": 1,\n        \"maxProperties\": 10,\n        \"additionalProperties\": { \"$ref\": \"#/components/schemas/String\" }\n      },\n      \"ChannelStatus\": {\n        \"type\": \"string\",\n        \"enum\": [\"IN_PROGRESS\", \"CREATED\", \"FAILED\"]\n      },\n      \"BotChannelAssociation\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BotChannelName\" },\n              {\n                \"description\": \"The name of the association between the bot and the channel. \"\n              }\n            ]\n          },\n          \"description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Description\" },\n              {\n                \"description\": \"A text description of the association you are creating. \"\n              }\n            ]\n          },\n          \"botAlias\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/AliasName\" },\n              {\n                \"description\": \"An alias pointing to the specific version of the Amazon Lex bot to which this association is being made. \"\n              }\n            ]\n          },\n          \"botName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BotName\" },\n              {\n                \"description\": \"\u003cp\u003eThe name of the Amazon Lex bot to which this association is being made. \u003c/p\u003e \u003cnote\u003e \u003cp\u003eCurrently, Amazon Lex supports associations with Facebook and Slack, and Twilio.\u003c/p\u003e \u003c/note\u003e\"\n              }\n            ]\n          },\n          \"createdDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              {\n                \"description\": \"The date that the association between the Amazon Lex bot and the channel was created. \"\n              }\n            ]\n          },\n          \"type\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ChannelType\" },\n              {\n                \"description\": \"Specifies the type of association by indicating the type of channel being established between the Amazon Lex bot and the external messaging platform.\"\n              }\n            ]\n          },\n          \"botConfiguration\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ChannelConfigurationMap\" },\n              {\n                \"description\": \"Provides information necessary to communicate with the messaging platform. \"\n              }\n            ]\n          },\n          \"status\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ChannelStatus\" },\n              {\n                \"description\": \"\u003cp\u003eThe status of the bot channel. \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCREATED\u003c/code\u003e - The channel has been created and is ready for use.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIN_PROGRESS\u003c/code\u003e - Channel creation is in progress.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eFAILED\u003c/code\u003e - There was an error creating the channel. For information about the reason for the failure, see the \u003ccode\u003efailureReason\u003c/code\u003e field.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\"\n              }\n            ]\n          },\n          \"failureReason\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              {\n                \"description\": \"If \u003ccode\u003estatus\u003c/code\u003e is \u003ccode\u003eFAILED\u003c/code\u003e, Amazon Lex provides the reason that it failed to create the association.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Represents an association between an Amazon Lex bot and an external messaging platform.\"\n      },\n      \"BotChannelAssociationList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/BotChannelAssociation\" }\n      },\n      \"Status\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"BUILDING\",\n          \"READY\",\n          \"READY_BASIC_TESTING\",\n          \"FAILED\",\n          \"NOT_BUILT\"\n        ]\n      },\n      \"BotMetadata\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BotName\" },\n              { \"description\": \"The name of the bot. \" }\n            ]\n          },\n          \"description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Description\" },\n              { \"description\": \"A description of the bot.\" }\n            ]\n          },\n          \"status\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Status\" },\n              { \"description\": \"The status of the bot.\" }\n            ]\n          },\n          \"lastUpdatedDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              {\n                \"description\": \"The date that the bot was updated. When you create a bot, the creation date and last updated date are the same. \"\n              }\n            ]\n          },\n          \"createdDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              { \"description\": \"The date that the bot was created.\" }\n            ]\n          },\n          \"version\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Version\" },\n              {\n                \"description\": \"The version of the bot. For a new bot, the version is always \u003ccode\u003e$LATEST\u003c/code\u003e.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Provides information about a bot. .\"\n      },\n      \"BotMetadataList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/BotMetadata\" }\n      },\n      \"BuiltinIntentSignature\": { \"type\": \"string\" },\n      \"LocaleList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/Locale\" }\n      },\n      \"BuiltinIntentMetadata\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"signature\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BuiltinIntentSignature\" },\n              {\n                \"description\": \"A unique identifier for the built-in intent. To find the signature for an intent, see \u003ca href=\\\"https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents\\\"\u003eStandard Built-in Intents\u003c/a\u003e in the \u003ci\u003eAlexa Skills Kit\u003c/i\u003e.\"\n              }\n            ]\n          },\n          \"supportedLocales\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LocaleList\" },\n              {\n                \"description\": \"A list of identifiers for the locales that the intent supports.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Provides metadata for a built-in intent.\"\n      },\n      \"BuiltinIntentMetadataList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/BuiltinIntentMetadata\" }\n      },\n      \"BuiltinIntentSlot\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              { \"description\": \"A list of the slots defined for the intent.\" }\n            ]\n          }\n        },\n        \"description\": \"Provides information about a slot used in a built-in intent.\"\n      },\n      \"BuiltinIntentSlotList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/BuiltinIntentSlot\" }\n      },\n      \"BuiltinSlotTypeSignature\": { \"type\": \"string\" },\n      \"BuiltinSlotTypeMetadata\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"signature\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BuiltinSlotTypeSignature\" },\n              {\n                \"description\": \"A unique identifier for the built-in slot type. To find the signature for a slot type, see \u003ca href=\\\"https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/slot-type-reference\\\"\u003eSlot Type Reference\u003c/a\u003e in the \u003ci\u003eAlexa Skills Kit\u003c/i\u003e.\"\n              }\n            ]\n          },\n          \"supportedLocales\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LocaleList\" },\n              { \"description\": \"A list of target locales for the slot. \" }\n            ]\n          }\n        },\n        \"description\": \"Provides information about a built in slot type.\"\n      },\n      \"BuiltinSlotTypeMetadataList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/BuiltinSlotTypeMetadata\" }\n      },\n      \"ConfidenceThreshold\": {\n        \"type\": \"number\",\n        \"format\": \"double\",\n        \"minimum\": 0,\n        \"maximum\": 1\n      },\n      \"ContentString\": { \"type\": \"string\", \"minLength\": 1, \"maxLength\": 1000 },\n      \"ContentType\": {\n        \"type\": \"string\",\n        \"enum\": [\"PlainText\", \"SSML\", \"CustomPayload\"]\n      },\n      \"LogSettingsResponseList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/LogSettingsResponse\" }\n      },\n      \"Count\": { \"type\": \"integer\" },\n      \"IntentList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/Intent\" }\n      },\n      \"SessionTTL\": { \"type\": \"integer\", \"minimum\": 60, \"maximum\": 86400 },\n      \"Locale\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"en-US\",\n          \"en-GB\",\n          \"de-DE\",\n          \"en-AU\",\n          \"es-US\",\n          \"es-US\",\n          \"fr-FR\",\n          \"fr-CA\",\n          \"it-IT\",\n          \"it-IT\",\n          \"it-IT\",\n          \"ja-JP\",\n          \"ko-KR\"\n        ]\n      },\n      \"IntentName\": {\n        \"type\": \"string\",\n        \"pattern\": \"^([A-Za-z]_?)+$\",\n        \"minLength\": 1,\n        \"maxLength\": 100\n      },\n      \"SlotList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/Slot\" },\n        \"minItems\": 0,\n        \"maxItems\": 100\n      },\n      \"IntentUtteranceList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/Utterance\" },\n        \"minItems\": 0,\n        \"maxItems\": 1500\n      },\n      \"FollowUpPrompt\": {\n        \"type\": \"object\",\n        \"required\": [\"prompt\", \"rejectionStatement\"],\n        \"properties\": {\n          \"prompt\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Prompt\" },\n              { \"description\": \"Prompts for information from the user. \" }\n            ]\n          },\n          \"rejectionStatement\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Statement\" },\n              {\n                \"description\": \"If the user answers \\\"no\\\" to the question defined in the \u003ccode\u003eprompt\u003c/code\u003e field, Amazon Lex responds with this statement to acknowledge that the intent was canceled. \"\n              }\n            ]\n          }\n        },\n        \"description\": \"A prompt for additional activity after an intent is fulfilled. For example, after the \u003ccode\u003eOrderPizza\u003c/code\u003e intent is fulfilled, you might prompt the user to find out whether the user wants to order drinks.\"\n      },\n      \"FulfillmentActivity\": {\n        \"type\": \"object\",\n        \"required\": [\"type\"],\n        \"properties\": {\n          \"type\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/FulfillmentActivityType\" },\n              {\n                \"description\": \" How the intent should be fulfilled, either by running a Lambda function or by returning the slot data to the client application. \"\n              }\n            ]\n          },\n          \"codeHook\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/CodeHook\" },\n              {\n                \"description\": \" A description of the Lambda function that is run to fulfill the intent. \"\n              }\n            ]\n          }\n        },\n        \"description\": \"\u003cp\u003e Describes how the intent is fulfilled after the user provides all of the information required for the intent. You can provide a Lambda function to process the intent, or you can return the intent information to the client application. We recommend that you use a Lambda function so that the relevant logic lives in the Cloud and limit the client-side code primarily to presentation. If you need to update the logic, you only update the Lambda function; you don't need to upgrade your client application. \u003c/p\u003e \u003cp\u003eConsider the following examples:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eIn a pizza ordering application, after the user provides all of the information for placing an order, you use a Lambda function to place an order with a pizzeria. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIn a gaming application, when a user says \\\"pick up a rock,\\\" this information must go back to the client application so that it can perform the operation and update the graphics. In this case, you want Amazon Lex to return the intent data to the client. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\"\n      },\n      \"KendraConfiguration\": {\n        \"type\": \"object\",\n        \"required\": [\"kendraIndex\", \"role\"],\n        \"properties\": {\n          \"kendraIndex\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/KendraIndexArn\" },\n              {\n                \"description\": \"The Amazon Resource Name (ARN) of the Amazon Kendra index that you want the AMAZON.KendraSearchIntent intent to search. The index must be in the same account and Region as the Amazon Lex bot. If the Amazon Kendra index does not exist, you get an exception when you call the \u003ccode\u003ePutIntent\u003c/code\u003e operation.\"\n              }\n            ]\n          },\n          \"queryFilterString\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/QueryFilterString\" },\n              {\n                \"description\": \"\u003cp\u003eA query filter that Amazon Lex sends to Amazon Kendra to filter the response from the query. The filter is in the format defined by Amazon Kendra. For more information, see \u003ca href=\\\"http://docs.aws.amazon.com/kendra/latest/dg/filtering.html\\\"\u003eFiltering queries\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eYou can override this filter string with a new filter string at runtime.\u003c/p\u003e\"\n              }\n            ]\n          },\n          \"role\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/roleArn\" },\n              {\n                \"description\": \"The Amazon Resource Name (ARN) of an IAM role that has permission to search the Amazon Kendra index. The role must be in the same account and Region as the Amazon Lex bot. If the role does not exist, you get an exception when you call the \u003ccode\u003ePutIntent\u003c/code\u003e operation.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Provides configuration information for the AMAZON.KendraSearchIntent intent. When you use this intent, Amazon Lex searches the specified Amazon Kendra index and returns documents from the index that match the user's utterance. For more information, see \u003ca href=\\\"http://docs.aws.amazon.com/lex/latest/dg/built-in-intent-kendra-search.html\\\"\u003e AMAZON.KendraSearchIntent\u003c/a\u003e.\"\n      },\n      \"SlotTypeName\": {\n        \"type\": \"string\",\n        \"pattern\": \"^([A-Za-z]_?)+$\",\n        \"minLength\": 1,\n        \"maxLength\": 100\n      },\n      \"EnumerationValues\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/EnumerationValue\" },\n        \"minItems\": 0,\n        \"maxItems\": 10000\n      },\n      \"SlotValueSelectionStrategy\": {\n        \"type\": \"string\",\n        \"enum\": [\"ORIGINAL_VALUE\", \"TOP_RESOLUTION\"]\n      },\n      \"CustomOrBuiltinSlotTypeName\": {\n        \"type\": \"string\",\n        \"pattern\": \"^((AMAZON\\\\.)_?|[A-Za-z]_?)+\",\n        \"minLength\": 1,\n        \"maxLength\": 100\n      },\n      \"SlotTypeConfigurations\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/SlotTypeConfiguration\" },\n        \"minItems\": 0,\n        \"maxItems\": 10\n      },\n      \"NumericalVersion\": {\n        \"type\": \"string\",\n        \"pattern\": \"[0-9]+\",\n        \"minLength\": 1,\n        \"maxLength\": 64\n      },\n      \"Destination\": { \"type\": \"string\", \"enum\": [\"CLOUDWATCH_LOGS\", \"S3\"] },\n      \"Value\": { \"type\": \"string\", \"minLength\": 1, \"maxLength\": 140 },\n      \"SynonymList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/Value\" }\n      },\n      \"ExportStatus\": {\n        \"type\": \"string\",\n        \"enum\": [\"IN_PROGRESS\", \"READY\", \"FAILED\"]\n      },\n      \"ExportType\": { \"type\": \"string\", \"enum\": [\"ALEXA_SKILLS_KIT\", \"LEX\"] },\n      \"NextToken\": { \"type\": \"string\" },\n      \"Name\": {\n        \"type\": \"string\",\n        \"pattern\": \"[a-zA-Z_]+\",\n        \"minLength\": 1,\n        \"maxLength\": 100\n      },\n      \"ResourceType\": {\n        \"type\": \"string\",\n        \"enum\": [\"BOT\", \"INTENT\", \"SLOT_TYPE\"]\n      },\n      \"MergeStrategy\": {\n        \"type\": \"string\",\n        \"enum\": [\"OVERWRITE_LATEST\", \"FAIL_ON_CONFLICT\"]\n      },\n      \"ImportStatus\": {\n        \"type\": \"string\",\n        \"enum\": [\"IN_PROGRESS\", \"COMPLETE\", \"FAILED\"]\n      },\n      \"StringList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/String\" }\n      },\n      \"IntentMetadataList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/IntentMetadata\" }\n      },\n      \"SlotTypeMetadataList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/SlotTypeMetadata\" }\n      },\n      \"ListsOfUtterances\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/UtteranceList\" }\n      },\n      \"GroupNumber\": { \"type\": \"integer\", \"minimum\": 1, \"maximum\": 5 },\n      \"IntentMetadata\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/IntentName\" },\n              { \"description\": \"The name of the intent.\" }\n            ]\n          },\n          \"description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Description\" },\n              { \"description\": \"A description of the intent.\" }\n            ]\n          },\n          \"lastUpdatedDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              {\n                \"description\": \"The date that the intent was updated. When you create an intent, the creation date and last updated date are the same.\"\n              }\n            ]\n          },\n          \"createdDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              { \"description\": \"The date that the intent was created.\" }\n            ]\n          },\n          \"version\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Version\" },\n              { \"description\": \"The version of the intent.\" }\n            ]\n          }\n        },\n        \"description\": \"Provides information about an intent.\"\n      },\n      \"KmsKeyArn\": {\n        \"type\": \"string\",\n        \"pattern\": \"^arn:[\\\\w\\\\-]+:kms:[\\\\w\\\\-]+:[\\\\d]{12}:(?:key\\\\/[\\\\w\\\\-]+|alias\\\\/[a-zA-Z0-9:\\\\/_\\\\-]{1,256})$\",\n        \"minLength\": 20,\n        \"maxLength\": 2048\n      },\n      \"UtteranceData\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"utteranceString\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/UtteranceString\" },\n              {\n                \"description\": \"The text that was entered by the user or the text representation of an audio clip.\"\n              }\n            ]\n          },\n          \"count\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Count\" },\n              {\n                \"description\": \"The number of times that the utterance was processed.\"\n              }\n            ]\n          },\n          \"distinctUsers\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Count\" },\n              {\n                \"description\": \"The total number of individuals that used the utterance.\"\n              }\n            ]\n          },\n          \"firstUtteredDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              {\n                \"description\": \"The date that the utterance was first recorded.\"\n              }\n            ]\n          },\n          \"lastUtteredDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              {\n                \"description\": \"The date that the utterance was last recorded.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Provides information about a single utterance that was made to your bot. \"\n      },\n      \"ListOfUtterance\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/UtteranceData\" }\n      },\n      \"TagList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/Tag\" },\n        \"minItems\": 0,\n        \"maxItems\": 200\n      },\n      \"UtteranceList\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"botVersion\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Version\" },\n              {\n                \"description\": \"The version of the bot that processed the list.\"\n              }\n            ]\n          },\n          \"utterances\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ListOfUtterance\" },\n              {\n                \"description\": \"One or more \u003ca\u003eUtteranceData\u003c/a\u003e objects that contain information about the utterances that have been made to a bot. The maximum number of object is 100.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Provides a list of utterances that have been made to a specific version of your bot. The list contains a maximum of 100 utterances.\"\n      },\n      \"LogType\": { \"type\": \"string\", \"enum\": [\"AUDIO\", \"TEXT\"] },\n      \"ResourceArn\": {\n        \"type\": \"string\",\n        \"pattern\": \"^arn:[\\\\w\\\\-]+:(?:logs:[\\\\w\\\\-]+:[\\\\d]{12}:log-group:[\\\\.\\\\-_/#A-Za-z0-9]{1,512}(?::\\\\*)?|s3:::[a-z0-9][\\\\.\\\\-a-z0-9]{1,61}[a-z0-9])$\",\n        \"minLength\": 1,\n        \"maxLength\": 2048\n      },\n      \"LogSettingsRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"logType\", \"destination\", \"resourceArn\"],\n        \"properties\": {\n          \"logType\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LogType\" },\n              {\n                \"description\": \"The type of logging to enable. Text logs are delivered to a CloudWatch Logs log group. Audio logs are delivered to an S3 bucket.\"\n              }\n            ]\n          },\n          \"destination\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Destination\" },\n              {\n                \"description\": \"Where the logs will be delivered. Text logs are delivered to a CloudWatch Logs log group. Audio logs are delivered to an S3 bucket.\"\n              }\n            ]\n          },\n          \"kmsKeyArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/KmsKeyArn\" },\n              {\n                \"description\": \"The Amazon Resource Name (ARN) of the AWS KMS customer managed key for encrypting audio logs delivered to an S3 bucket. The key does not apply to CloudWatch Logs and is optional for S3 buckets.\"\n              }\n            ]\n          },\n          \"resourceArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ResourceArn\" },\n              {\n                \"description\": \"The Amazon Resource Name (ARN) of the CloudWatch Logs log group or S3 bucket where the logs should be delivered.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Settings used to configure delivery mode and destination for conversation logs.\"\n      },\n      \"ResourcePrefix\": { \"type\": \"string\", \"maxLength\": 1024 },\n      \"LogSettingsResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"logType\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LogType\" },\n              { \"description\": \"The type of logging that is enabled.\" }\n            ]\n          },\n          \"destination\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Destination\" },\n              { \"description\": \"The destination where logs are delivered.\" }\n            ]\n          },\n          \"kmsKeyArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/KmsKeyArn\" },\n              {\n                \"description\": \"The Amazon Resource Name (ARN) of the key used to encrypt audio logs in an S3 bucket.\"\n              }\n            ]\n          },\n          \"resourceArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ResourceArn\" },\n              {\n                \"description\": \"The Amazon Resource Name (ARN) of the CloudWatch Logs log group or S3 bucket where the logs are delivered.\"\n              }\n            ]\n          },\n          \"resourcePrefix\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ResourcePrefix\" },\n              {\n                \"description\": \"The resource prefix is the first part of the S3 object key within the S3 bucket that you specified to contain audio logs. For CloudWatch Logs it is the prefix of the log stream name within the log group that you specified. \"\n              }\n            ]\n          }\n        },\n        \"description\": \"The settings for conversation logs.\"\n      },\n      \"Message\": {\n        \"type\": \"object\",\n        \"required\": [\"contentType\", \"content\"],\n        \"properties\": {\n          \"contentType\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ContentType\" },\n              { \"description\": \"The content type of the message string.\" }\n            ]\n          },\n          \"content\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ContentString\" },\n              { \"description\": \"The text of the message.\" }\n            ]\n          },\n          \"groupNumber\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/GroupNumber\" },\n              {\n                \"description\": \"Identifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"The message object that provides the message text and its type.\"\n      },\n      \"ObfuscationSetting\": {\n        \"type\": \"string\",\n        \"enum\": [\"NONE\", \"DEFAULT_OBFUSCATION\"]\n      },\n      \"Priority\": { \"type\": \"integer\", \"minimum\": 0, \"maximum\": 100 },\n      \"RegexPattern\": { \"type\": \"string\", \"minLength\": 1, \"maxLength\": 100 },\n      \"SlotName\": {\n        \"type\": \"string\",\n        \"pattern\": \"^([A-Za-z](-|_|.)?)+$\",\n        \"minLength\": 1,\n        \"maxLength\": 100\n      },\n      \"SlotConstraint\": { \"type\": \"string\", \"enum\": [\"Required\", \"Optional\"] },\n      \"SlotUtteranceList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/Utterance\" },\n        \"minItems\": 0,\n        \"maxItems\": 10\n      },\n      \"SlotTypeRegexConfiguration\": {\n        \"type\": \"object\",\n        \"required\": [\"pattern\"],\n        \"properties\": {\n          \"pattern\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegexPattern\" },\n              {\n                \"description\": \"\u003cp\u003eA regular expression used to validate the value of a slot. \u003c/p\u003e \u003cp\u003eUse a standard regular expression. Amazon Lex supports the following characters in the regular expression:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eA-Z, a-z\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e0-9\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eUnicode characters (\\\"\\\\ u\u0026lt;Unicode\u0026gt;\\\")\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eRepresent Unicode characters with four digits, for example \\\"\\\\u0041\\\" or \\\"\\\\u005A\\\".\u003c/p\u003e \u003cp\u003eThe following regular expression operators are not supported:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eInfinite repeaters: *, +, or {x,} with no upper bound.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eWild card (.)\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Provides a regular expression used to validate the value of a slot.\"\n      },\n      \"SlotTypeMetadata\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SlotTypeName\" },\n              { \"description\": \"The name of the slot type.\" }\n            ]\n          },\n          \"description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Description\" },\n              { \"description\": \"A description of the slot type.\" }\n            ]\n          },\n          \"lastUpdatedDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              {\n                \"description\": \"The date that the slot type was updated. When you create a resource, the creation date and last updated date are the same. \"\n              }\n            ]\n          },\n          \"createdDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              { \"description\": \"The date that the slot type was created.\" }\n            ]\n          },\n          \"version\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Version\" },\n              { \"description\": \"The version of the slot type.\" }\n            ]\n          }\n        },\n        \"description\": \"Provides information about a slot type..\"\n      },\n      \"TagValue\": { \"type\": \"string\", \"minLength\": 0, \"maxLength\": 256 },\n      \"UtteranceString\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 2000\n      },\n      \"InputContext\": {\n        \"type\": \"object\",\n        \"required\": [\"name\"],\n        \"properties\": {\n          \"name\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/InputContextName\" },\n              { \"description\": \"The name of the context.\" }\n            ]\n          }\n        },\n        \"description\": \"The name of a context that must be active for an intent to be selected by Amazon Lex.\"\n      },\n      \"OutputContext\": {\n        \"type\": \"object\",\n        \"required\": [\"name\", \"timeToLiveInSeconds\", \"turnsToLive\"],\n        \"properties\": {\n          \"name\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/OutputContextName\" },\n              { \"description\": \"The name of the context.\" }\n            ]\n          },\n          \"timeToLiveInSeconds\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ContextTimeToLiveInSeconds\" },\n              {\n                \"description\": \"The number of seconds that the context should be active after it is first sent in a \u003ccode\u003ePostContent\u003c/code\u003e or \u003ccode\u003ePostText\u003c/code\u003e response. You can set the value between 5 and 86,400 seconds (24 hours).\"\n              }\n            ]\n          },\n          \"turnsToLive\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ContextTurnsToLive\" },\n              {\n                \"description\": \"The number of conversation turns that the context should be active. A conversation turn is one \u003ccode\u003ePostContent\u003c/code\u003e or \u003ccode\u003ePostText\u003c/code\u003e request and the corresponding response from Amazon Lex.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"The specification of an output context that is set when an intent is fulfilled.\"\n      },\n      \"ContextTimeToLiveInSeconds\": {\n        \"type\": \"integer\",\n        \"minimum\": 5,\n        \"maximum\": 86400\n      },\n      \"ContextTurnsToLive\": { \"type\": \"integer\", \"minimum\": 1, \"maximum\": 20 },\n      \"InputContextList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/InputContext\" },\n        \"minItems\": 0,\n        \"maxItems\": 5\n      },\n      \"OutputContextList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/OutputContext\" },\n        \"minItems\": 0,\n        \"maxItems\": 10\n      },\n      \"InputContextName\": {\n        \"type\": \"string\",\n        \"pattern\": \"^([A-Za-z]_?)+$\",\n        \"minLength\": 1,\n        \"maxLength\": 100\n      },\n      \"OutputContextName\": {\n        \"type\": \"string\",\n        \"pattern\": \"^([A-Za-z]_?)+$\",\n        \"minLength\": 1,\n        \"maxLength\": 100\n      },\n      \"SlotDefaultValueSpec\": {\n        \"type\": \"object\",\n        \"required\": [\"defaultValueList\"],\n        \"properties\": {\n          \"defaultValueList\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SlotDefaultValueList\" },\n              {\n                \"description\": \"\u003cp\u003eThe default values for a slot. You can specify more than one default. For example, you can specify a default value to use from a matching context variable, a session attribute, or a fixed value.\u003c/p\u003e \u003cp\u003eThe default value chosen is selected based on the order that you specify them in the list. For example, if you specify a context variable and a fixed value in that order, Amazon Lex uses the context variable if it is available, else it uses the fixed value.\u003c/p\u003e\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Contains the default values for a slot. Default values are used when Amazon Lex hasn't determined a value for a slot.\"\n      },\n      \"SlotDefaultValueString\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 202\n      },\n      \"SlotDefaultValue\": {\n        \"type\": \"object\",\n        \"required\": [\"defaultValue\"],\n        \"properties\": {\n          \"defaultValue\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SlotDefaultValueString\" },\n              {\n                \"description\": \"\u003cp\u003eThe default value for the slot. You can specify one of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e#context-name.slot-name\u003c/code\u003e - The slot value \\\"slot-name\\\" in the context \\\"context-name.\\\"\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e{attribute}\u003c/code\u003e - The slot value of the session attribute \\\"attribute.\\\"\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e'value'\u003c/code\u003e - The discrete value \\\"value.\\\"\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\"\n              }\n            ]\n          }\n        },\n        \"description\": \"A default value for a slot.\"\n      },\n      \"SlotDefaultValueList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/SlotDefaultValue\" },\n        \"minItems\": 0,\n        \"maxItems\": 10\n      },\n      \"GetMigrationResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"migrationId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MigrationId\" },\n              {\n                \"description\": \"The unique identifier of the migration. This is the same as the identifier used when calling the \u003ccode\u003eGetMigration\u003c/code\u003e operation.\"\n              }\n            ]\n          },\n          \"v1BotName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BotName\" },\n              {\n                \"description\": \"The name of the Amazon Lex V1 bot migrated to Amazon Lex V2.\"\n              }\n            ]\n          },\n          \"v1BotVersion\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Version\" },\n              {\n                \"description\": \"The version of the Amazon Lex V1 bot migrated to Amazon Lex V2.\"\n              }\n            ]\n          },\n          \"v1BotLocale\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Locale\" },\n              {\n                \"description\": \"The locale of the Amazon Lex V1 bot migrated to Amazon Lex V2.\"\n              }\n            ]\n          },\n          \"v2BotId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/V2BotId\" },\n              {\n                \"description\": \"The unique identifier of the Amazon Lex V2 bot that the Amazon Lex V1 is being migrated to.\"\n              }\n            ]\n          },\n          \"v2BotRole\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/IamRoleArn\" },\n              {\n                \"description\": \"The IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.\"\n              }\n            ]\n          },\n          \"migrationStatus\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MigrationStatus\" },\n              {\n                \"description\": \"Indicates the status of the migration. When the status is \u003ccode\u003eCOMPLETE\u003c/code\u003e the migration is finished and the bot is available in Amazon Lex V2. There may be alerts and warnings that need to be resolved to complete the migration.\"\n              }\n            ]\n          },\n          \"migrationStrategy\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MigrationStrategy\" },\n              {\n                \"description\": \"\u003cp\u003eThe strategy used to conduct the migration.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCREATE_NEW\u003c/code\u003e - Creates a new Amazon Lex V2 bot and migrates the Amazon Lex V1 bot to the new bot.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUPDATE_EXISTING\u003c/code\u003e - Overwrites the existing Amazon Lex V2 bot metadata and the locale being migrated. It doesn't change any other locales in the Amazon Lex V2 bot. If the locale doesn't exist, a new locale is created in the Amazon Lex V2 bot.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\"\n              }\n            ]\n          },\n          \"migrationTimestamp\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              { \"description\": \"The date and time that the migration started.\" }\n            ]\n          },\n          \"alerts\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MigrationAlerts\" },\n              {\n                \"description\": \"\u003cp\u003eA list of alerts and warnings that indicate issues with the migration for the Amazon Lex V1 bot to Amazon Lex V2. You receive a warning when an Amazon Lex V1 feature has a different implementation if Amazon Lex V2.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\\\"https://docs.aws.amazon.com/lexv2/latest/dg/migrate.html\\\"\u003eMigrating a bot\u003c/a\u003e in the \u003ci\u003eAmazon Lex V2 developer guide\u003c/i\u003e.\u003c/p\u003e\"\n              }\n            ]\n          }\n        }\n      },\n      \"GetMigrationsResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"migrationSummaries\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MigrationSummaryList\" },\n              {\n                \"description\": \"An array of summaries for migrations from Amazon Lex V1 to Amazon Lex V2. To see details of the migration, use the \u003ccode\u003emigrationId\u003c/code\u003e from the summary in a call to the operation.\"\n              }\n            ]\n          },\n          \"nextToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/NextToken\" },\n              {\n                \"description\": \"If the response is truncated, it includes a pagination token that you can specify in your next request to fetch the next page of migrations.\"\n              }\n            ]\n          }\n        }\n      },\n      \"StartMigrationResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"v1BotName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BotName\" },\n              {\n                \"description\": \"The name of the Amazon Lex V1 bot that you are migrating to Amazon Lex V2.\"\n              }\n            ]\n          },\n          \"v1BotVersion\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Version\" },\n              {\n                \"description\": \"The version of the bot to migrate to Amazon Lex V2. \"\n              }\n            ]\n          },\n          \"v1BotLocale\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Locale\" },\n              { \"description\": \"The locale used for the Amazon Lex V1 bot. \" }\n            ]\n          },\n          \"v2BotId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/V2BotId\" },\n              {\n                \"description\": \"The unique identifier for the Amazon Lex V2 bot. \"\n              }\n            ]\n          },\n          \"v2BotRole\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/IamRoleArn\" },\n              {\n                \"description\": \"The IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.\"\n              }\n            ]\n          },\n          \"migrationId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MigrationId\" },\n              {\n                \"description\": \"The unique identifier that Amazon Lex assigned to the migration.\"\n              }\n            ]\n          },\n          \"migrationStrategy\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MigrationStrategy\" },\n              { \"description\": \"The strategy used to conduct the migration.\" }\n            ]\n          },\n          \"migrationTimestamp\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              { \"description\": \"The date and time that the migration started.\" }\n            ]\n          }\n        }\n      },\n      \"AccessDeniedException\": {},\n      \"MigrationId\": {\n        \"type\": \"string\",\n        \"pattern\": \"^[0-9a-zA-Z]+$\",\n        \"minLength\": 10,\n        \"maxLength\": 10\n      },\n      \"V2BotId\": {\n        \"type\": \"string\",\n        \"pattern\": \"^[0-9a-zA-Z]+$\",\n        \"minLength\": 10,\n        \"maxLength\": 10\n      },\n      \"MigrationStatus\": {\n        \"type\": \"string\",\n        \"enum\": [\"IN_PROGRESS\", \"COMPLETED\", \"FAILED\"]\n      },\n      \"MigrationStrategy\": {\n        \"type\": \"string\",\n        \"enum\": [\"CREATE_NEW\", \"UPDATE_EXISTING\"]\n      },\n      \"MigrationAlerts\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/MigrationAlert\" }\n      },\n      \"MigrationSummaryList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/MigrationSummary\" }\n      },\n      \"MigrationAlertType\": { \"type\": \"string\", \"enum\": [\"ERROR\", \"WARN\"] },\n      \"MigrationAlertMessage\": { \"type\": \"string\" },\n      \"MigrationAlertDetails\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/MigrationAlertDetail\" }\n      },\n      \"MigrationAlertReferenceURLs\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/MigrationAlertReferenceURL\" }\n      },\n      \"MigrationAlert\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MigrationAlertType\" },\n              {\n                \"description\": \"\u003cp\u003eThe type of alert. There are two kinds of alerts:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eERROR\u003c/code\u003e - There was an issue with the migration that can't be resolved. The migration stops.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eWARN\u003c/code\u003e - There was an issue with the migration that requires manual changes to the new Amazon Lex V2 bot. The migration continues.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\"\n              }\n            ]\n          },\n          \"message\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MigrationAlertMessage\" },\n              {\n                \"description\": \"A message that describes why the alert was issued.\"\n              }\n            ]\n          },\n          \"details\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MigrationAlertDetails\" },\n              { \"description\": \"Additional details about the alert.\" }\n            ]\n          },\n          \"referenceURLs\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MigrationAlertReferenceURLs\" },\n              {\n                \"description\": \"A link to the Amazon Lex documentation that describes how to resolve the alert.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Provides information about alerts and warnings that Amazon Lex sends during a migration. The alerts include information about how to resolve the issue.\"\n      },\n      \"MigrationAlertDetail\": { \"type\": \"string\" },\n      \"MigrationAlertReferenceURL\": { \"type\": \"string\" },\n      \"MigrationSummary\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"migrationId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MigrationId\" },\n              {\n                \"description\": \"The unique identifier that Amazon Lex assigned to the migration.\"\n              }\n            ]\n          },\n          \"v1BotName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BotName\" },\n              {\n                \"description\": \"The name of the Amazon Lex V1 bot that is the source of the migration.\"\n              }\n            ]\n          },\n          \"v1BotVersion\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Version\" },\n              {\n                \"description\": \"The version of the Amazon Lex V1 bot that is the source of the migration.\"\n              }\n            ]\n          },\n          \"v1BotLocale\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Locale\" },\n              {\n                \"description\": \"The locale of the Amazon Lex V1 bot that is the source of the migration.\"\n              }\n            ]\n          },\n          \"v2BotId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/V2BotId\" },\n              {\n                \"description\": \"The unique identifier of the Amazon Lex V2 that is the destination of the migration.\"\n              }\n            ]\n          },\n          \"v2BotRole\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/IamRoleArn\" },\n              {\n                \"description\": \"The IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.\"\n              }\n            ]\n          },\n          \"migrationStatus\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MigrationStatus\" },\n              {\n                \"description\": \"The status of the operation. When the status is \u003ccode\u003eCOMPLETE\u003c/code\u003e the bot is available in Amazon Lex V2. There may be alerts and warnings that need to be resolved to complete the migration.\"\n              }\n            ]\n          },\n          \"migrationStrategy\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MigrationStrategy\" },\n              { \"description\": \"The strategy used to conduct the migration.\" }\n            ]\n          },\n          \"migrationTimestamp\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Timestamp\" },\n              { \"description\": \"The date and time that the migration started.\" }\n            ]\n          }\n        },\n        \"description\": \"Provides information about migrating a bot from Amazon Lex V1 to Amazon Lex V2.\"\n      }\n    }\n  },\n  \"security\": [{ \"hmac\": [] }],\n  \"x-metadata\": {\n    \"apiVersion\": \"2017-04-19\",\n    \"endpointPrefix\": \"models.lex\",\n    \"jsonVersion\": \"1.1\",\n    \"protocol\": \"rest-json\",\n    \"serviceFullName\": \"Amazon Lex Model Building Service\",\n    \"serviceId\": \"Lex Model Building Service\",\n    \"signatureVersion\": \"v4\",\n    \"signingName\": \"lex\",\n    \"uid\": \"lex-models-2017-04-19\",\n    \"targetPrefix\": \"AWSDeepSenseModelBuildingService\"\n  }\n}\n",
			"canonicalURL": "/github.com/chainjet/platform@e2f11798433d537a6d63c18ac444f6b6e5360bb2/-/blob/schemas/openapi3/aws-models-lex-2017-04-19.json",
			"externalURLs": [
				{
					"url": "https://github.com/chainjet/platform/blob/e2f11798433d537a6d63c18ac444f6b6e5360bb2/schemas/openapi3/aws-models-lex-2017-04-19.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"BuiltinSlotTypeMetadata\": parse schema: property \"supportedLocales\": parse schema: parse schema: parse schema: parse schema: at 7363:11: duplicate enum value: \"\\\"es-US\\\"\""
}