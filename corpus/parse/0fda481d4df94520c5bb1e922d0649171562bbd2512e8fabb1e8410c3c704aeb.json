{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "SearchRequestParametersVariableBaseClass.yaml",
			"size": 0,
			"path": "Specification/Components/Schemas/SearchRequestSchemas/SearchRequestParametersVariableBaseClass.yaml",
			"byteSize": 5796,
			"content": "info:\n  title: BrAPI\n  version: ''\nopenapi: 3.0.0\npaths: {}\ncomponents:\n  schemas:\n    SearchRequestParametersVariableBaseClass: \n      allOf:\n      - $ref: '#/components/schemas/SearchRequestParametersPaging'\n      - $ref: '#/components/schemas/SearchRequestParametersExternalReferences'\n      - $ref: '#/components/schemas/SearchRequestParametersCommonCropNames'\n      - $ref: '#/components/schemas/SearchRequestParametersPrograms'\n      - $ref: '#/components/schemas/SearchRequestParametersTrials'\n      - $ref: '#/components/schemas/SearchRequestParametersStudies'\n      - type: object\n        properties:\n          studyDbId:  \n            description: |-\n              **Deprecated in v2.1** Please use `studyDbIds`. Github issue number #483 \n              \u003cbr\u003eThe unique ID of a studies to filter on\n            deprecated: true\n            type: array\n            items:\n              type: string\n            example: ['5bcac0ae', '7f48e22d']\n          ontologyDbIds:\n            description: List of ontology IDs to search for\n            items:\n              type: string\n            type: array\n            example: ['f44f7b23', 'a26b576e']\n\n          methodDbIds:\n            description: List of methods to filter search results\n            items:\n              type: string\n            type: array\n            example: ['07e34f83', 'd3d5517a']\n          methodNames:\n            description: |-\n              Human readable name for the method\n              \u003cbr/\u003eMIAPPE V1.1 (DM-88) Method  Name of the method of observation\n            items:\n              type: string\n            type: array\n            example: ['Measuring Tape', 'Spectrometer']\n          methodPUIs:\n            description: The Permanent Unique Identifier of a Method, usually in the form of a URI\n            items:\n              type: string\n            type: array\n            example: ['http://my-traits.com/trait/CO_123:0000212', 'http://my-traits.com/trait/CO_123:0003557']\n\n          scaleDbIds:\n            description: The unique identifier for a Scale\n            items:\n              type: string\n            type: array\n            example: ['a13ecffa', '7e1afe4f']\n          scaleNames:\n            description: |- \n              Name of the scale\n              \u003cbr/\u003eMIAPPE V1.1 (DM-92) Scale Name of the scale associated with the variable\n            items:\n              type: string\n            type: array\n            example: ['Meters', 'Liters']\n          scalePUIs:\n            description: The Permanent Unique Identifier of a Scale, usually in the form of a URI\n            items:\n              type: string\n            type: array\n            example: ['http://my-traits.com/trait/CO_123:0000336', 'http://my-traits.com/trait/CO_123:0000560']\n          dataTypes:\n            description: List of scale data types to filter search results\n            items:\n              $ref: '#/components/schemas/TraitDataType'\n            type: array\n            example: ['Numerical', 'Ordinal', 'Text']\n\n          traitClasses:\n            description: List of trait classes to filter search results\n            items:\n              type: string\n            type: array\n            example: ['morphological', 'phenological', 'agronomical']\n          traitDbIds:\n            description: The unique identifier for a Trait\n            items:\n              type: string\n            type: array\n            example: ['ef81147b', '78d82fad']\n          traitNames:\n            description: |-\n              The human readable name of a trait\n              \u003cbr/\u003eMIAPPE V1.1 (DM-86) Trait - Name of the (plant or environmental) trait under observation\n            items:\n              type: string\n            type: array\n            example: ['Stalk Height', 'Root Color']\n          traitPUIs:\n            description: The Permanent Unique Identifier of a Trait, usually in the form of a URI\n            items:\n              type: string\n            type: array\n            example: ['http://my-traits.com/trait/CO_123:0000456', 'http://my-traits.com/trait/CO_123:0000820']\n          traitAttributes:\n            description: A trait can be decomposed as \"Trait\" = \"Entity\" + \"Attribute\", the attribute is the observed feature (or characteristic) of the entity e.g., for \"grain colour\", attribute = \"colour\"\n            items:\n              type: string\n            type: array\n            example: ['Height', 'Color']\n          traitAttributePUIs:\n            description: |-\n              The Permanent Unique Identifier of a Trait Attribute, usually in the form of a URI\n              \u003cbr/\u003eA trait can be decomposed as \"Trait\" = \"Entity\" + \"Attribute\", the attribute is the observed feature (or characteristic) of the entity e.g., for \"grain colour\", attribute = \"colour\"\n            items:\n              type: string\n            type: array\n            example: ['http://my-traits.com/trait/CO_123:0008336', 'http://my-traits.com/trait/CO_123:0001092']\n          traitEntities:\n            description: A trait can be decomposed as \"Trait\" = \"Entity\" + \"Attribute\", the entity is the part of the plant that the trait refers to e.g., for \"grain colour\", entity = \"grain\"\n            items:\n              type: string\n            type: array\n            example: ['Stalk', 'Root']\n          traitEntityPUIs:\n            description: |-\n              The Permanent Unique Identifier of a Trait Entity, usually in the form of a URI\n              \u003cbr/\u003eA trait can be decomposed as \"Trait\" = \"Entity\" + \"Attribute\", the entity is the part of the plant that the trait refers to e.g., for \"grain colour\", entity = \"grain\" \n            items:\n              type: string\n            type: array\n            example: ['http://my-traits.com/trait/CO_123:0004098', 'http://my-traits.com/trait/CO_123:0002366']\n",
			"canonicalURL": "/github.com/plantbreeding/BrAPI@da51ee3cc91464aeed50d0dfd1cc113932ad0b87/-/blob/Specification/Components/Schemas/SearchRequestSchemas/SearchRequestParametersVariableBaseClass.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/plantbreeding/BrAPI/blob/da51ee3cc91464aeed50d0dfd1cc113932ad0b87/Specification/Components/Schemas/SearchRequestSchemas/SearchRequestParametersVariableBaseClass.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"SearchRequestParametersVariableBaseClass\": parse schema: allOf: [0]: at 1:80: parse schema: resolve \"#/components/schemas/SearchRequestParametersPaging\": find schema: resolve: can't find value for \"components/schemas/SearchRequestParametersPaging\""
}