{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OpenLiberty/open-liberty"
		},
		"file": {
			"name": "component-merging-1.yaml",
			"size": 0,
			"path": "dev/io.openliberty.microprofile.openapi.2.0.internal/test/io/openliberty/microprofile/openapi20/test/merge/component-merging-1.yaml",
			"byteSize": 3376,
			"content": "openapi: 3.0.3\ninfo:\n  title: test1\n  version: \"1.0\"\npaths:\n  \"/testfoo\":\n    post:\n      parameters: \n        - $ref: \"#/components/parameters/fooParameter\"\n      requestBody:\n        $ref: \"#/components/requestBodies/fooRequestBody\"\n      responses:\n        200:\n          $ref: \"#/components/responses/fooResponse\"\n        202:\n          description: \"success\"\n      security:\n        - fooSecurityScheme: []\n      callbacks:\n        test:\n          $ref: \"#/components/callbacks/fooCallback\"\n  \"/testbar\":\n    post:\n      parameters: \n        - $ref: \"#/components/parameters/barParameter\"\n      requestBody:\n        $ref: \"#/components/requestBodies/barRequestBody\"\n      responses:\n        200:\n          $ref: \"#/components/responses/barResponse\"\n        202:\n          description: \"success\"\n      security:\n        - barSecurityScheme: []\n      callbacks:\n        test:\n          $ref: \"#/components/callbacks/barCallback\"\ncomponents:\n  schemas:\n    fooSchema:\n      type: string\n      description: test\n    barSchema:\n      type: string\n      description: test\n  responses:\n    fooResponse:\n      description: test\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/fooSchema\"\n          examples: \n            foo:\n              $ref: \"#/components/examples/fooExample\"\n      headers:\n        foo: \n          $ref: \"#/components/headers/fooHeader\"\n      links:\n        foo:\n          $ref: \"#/components/links/fooLink\"\n    barResponse:\n      description: test\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/barSchema\"\n          examples: \n            bar:\n              $ref: \"#/components/examples/barExample\"\n      headers:\n        bar:\n          $ref: \"#/components/headers/barHeader\"\n      links:\n        bar:\n          $ref: \"#/components/links/barLink\"\n  parameters:\n    fooParameter:\n      name: foo\n      description: test\n      in: query\n      required: true\n      schema:\n        type: string\n    barParameter:\n      name: bar\n      description: test\n      in: query\n      required: true\n      schema:\n        type: string\n  examples:\n    fooExample:\n      value: test\n    barExample:\n      value: test\n  requestBodies:\n    fooRequestBody:\n      description: test\n      content: {}\n    barRequestBody:\n      description: test\n      content: {}\n  headers:\n    fooHeader:\n      description: test\n      schema:\n        type: string\n    barHeader:\n      description: test\n      schema:\n        type: string\n  securitySchemes:\n    fooSecurityScheme:\n      name: test\n      type: apiKey\n      in: query\n    barSecurityScheme:\n      name: test\n      type: apiKey\n      in: query\n  links:\n    fooLink: \n      description: test\n    barLink:\n      description: test\n  callbacks:\n    fooCallback:\n      \"$request.body#/callbackURL\":\n        post:\n          requestBody:\n            description: test\n            content:\n              'application/json':\n                schema:\n                  type: object\n          responses:\n            202:\n              description: test\n    barCallback:\n      \"$request.body#/callbackURL\":\n        post:\n          requestBody:\n            description: test\n            content:\n              'application/json':\n                schema:\n                  type: object\n          responses:\n            202:\n              description: test"
		}
	},
	"Error": "parse: parse spec: parse components: requestBodies: \"fooRequestBody\": content must have at least one entry"
}