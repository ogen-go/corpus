{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/apideck.proxy/openapi.yaml",
			"byteSize": 15563,
			"content": "openapi: 3.0.3\nservers:\n  - description: Production server\n    url: https://unify.apideck.com\ninfo:\n  x-ballerina-display:\n    label: Apideck Proxy\n    iconPath: \"icon.png\"\n  contact:\n    email: hello@apideck.com\n    url: https://developers.apideck.com\n  description: \u003e\n    This is a generated connector from [Apideck Proxy API v5.3.0](https://developers.apideck.com/apis/proxy/reference) OpenAPI specification.\n\n    You can use this API to access all Proxy API endpoints.\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials.\n\n    Unify API accounts have sandbox mode and live mode API keys. To change modes just use the appropriate key to get a live or test object. \n\n    You can find your API keys on the unify settings of your Apideck app.Your Apideck application_id can also be found on the same page.\n\n    Obtain API keys following [this guide](https://developers.apideck.com/apis/proxy/reference#section/Authorization).\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  title: Proxy API\n  version: 5.3.0\n  x-apideck-api: proxy\n  x-apisguru-categories:\n    - developer_tools\n  x-logo:\n    url: https://developers.apideck.com/icon.png\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/apideck-libraries/openapi-specs/master/proxy.yml\n      version: \"3.0\"\n  x-providerName: apideck.com\n  x-serviceName: proxy\n  x-tags:\n    - partner\nexternalDocs:\n  description: Apideck Developer Docs\n  url: https://developers.apideck.com\nsecurity:\n  - apiKey: []\n    applicationId: []\ntags:\n  - description: \"\"\n    name: Execute\npaths:\n  /proxy:\n    delete:\n      description: |\n        Proxies a downstream DELETE request to a service and injects the necessary credentials into a request stored in Vault. This allows you to have an additional security layer and logging without needing to rely on Unify for normalization.\n        **Note**: Vault will proxy all data to the downstream URL and method/verb in the headers.\n      operationId: deleteProxy\n      parameters:\n        - $ref: \"#/components/parameters/x-apideck-consumer-id\"\n        - $ref: \"#/components/parameters/x-apideck-app-id\"\n        - $ref: \"#/components/parameters/x-apideck-service-id\"\n        - $ref: \"#/components/parameters/x-apideck-downstream-url\"\n        - $ref: \"#/components/parameters/x-apideck-downstream-authorization\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Ok\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        default:\n          $ref: \"#/components/responses/ProxyError\"\n      security:\n        - apiKey: []\n      summary: DELETE\n      tags:\n        - Execute\n      x-graphql-exclude: true\n      x-sdk-exclude: true\n    get:\n      description: |\n        Proxies a downstream GET request to a service and injects the necessary credentials into a request stored in Vault. This allows you to have an additional security layer and logging without needing to rely on Unify for normalization.\n        **Note**: Vault will proxy all data to the downstream URL and method/verb in the headers.\n      operationId: getProxy\n      parameters:\n        - $ref: \"#/components/parameters/x-apideck-consumer-id\"\n        - $ref: \"#/components/parameters/x-apideck-app-id\"\n        - $ref: \"#/components/parameters/x-apideck-service-id\"\n        - $ref: \"#/components/parameters/x-apideck-downstream-url\"\n        - $ref: \"#/components/parameters/x-apideck-downstream-authorization\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Ok\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        default:\n          $ref: \"#/components/responses/ProxyError\"\n      security:\n        - apiKey: []\n      summary: GET\n      tags:\n        - Execute\n      x-graphql-exclude: true\n      x-sdk-exclude: true\n    patch:\n      description: |\n        Proxies a downstream PATCH request to a service and injects the necessary credentials into a request stored in Vault. This allows you to have an additional security layer and logging without needing to rely on Unify for normalization.\n        **Note**: Vault will proxy all data to the downstream URL and method/verb in the headers.\n      operationId: patchProxy\n      parameters:\n        - $ref: \"#/components/parameters/x-apideck-consumer-id\"\n        - $ref: \"#/components/parameters/x-apideck-app-id\"\n        - $ref: \"#/components/parameters/x-apideck-service-id\"\n        - $ref: \"#/components/parameters/x-apideck-downstream-url\"\n        - $ref: \"#/components/parameters/x-apideck-downstream-authorization\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              example:\n                addresses:\n                  - address_1: 747 Howard St\n                    address_2: Room 3\n                    city: San Francisco\n                    country: US\n                    label: business\n                    state: CA\n                    zipcode: \"94103\"\n                contacts:\n                  - emails:\n                      - email: gob@example.com\n                        type: office\n                    name: Gob\n                    phones:\n                      - phone: \"8004445555\"\n                        type: office\n                    title: Sr. Vice President\n                description: Best. Show. Ever.\n                name: Bluth Company\n                url: http://thebluthcompany.tumblr.com/\n              properties: {}\n              type: object\n        description: Depending on the verb/method of the request this will contain the request body you want to POST/PATCH/PUT.\n        required: false\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Ok\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        default:\n          $ref: \"#/components/responses/ProxyError\"\n      security:\n        - apiKey: []\n      summary: PATCH\n      tags:\n        - Execute\n      x-graphql-exclude: true\n      x-sdk-exclude: true\n    post:\n      description: |\n        Proxies a downstream POST request to a service and injects the necessary credentials into a request stored in Vault. This allows you to have an additional security layer and logging without needing to rely on Unify for normalization.\n        **Note**: Vault will proxy all data to the downstream URL and method/verb in the headers.\n      operationId: postProxy\n      parameters:\n        - $ref: \"#/components/parameters/x-apideck-consumer-id\"\n        - $ref: \"#/components/parameters/x-apideck-app-id\"\n        - $ref: \"#/components/parameters/x-apideck-service-id\"\n        - $ref: \"#/components/parameters/x-apideck-downstream-url\"\n        - $ref: \"#/components/parameters/x-apideck-downstream-authorization\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              example:\n                addresses:\n                  - address_1: 747 Howard St\n                    address_2: Room 3\n                    city: San Francisco\n                    country: US\n                    label: business\n                    state: CA\n                    zipcode: \"94103\"\n                contacts:\n                  - emails:\n                      - email: gob@example.com\n                        type: office\n                    name: Gob\n                    phones:\n                      - phone: \"8004445555\"\n                        type: office\n                    title: Sr. Vice President\n                description: Best. Show. Ever.\n                name: Bluth Company\n                url: http://thebluthcompany.tumblr.com/\n              properties: {}\n              type: object\n        description: Depending on the verb/method of the request this will contain the request body you want to POST/PATCH/PUT.\n        required: false\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Ok\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        default:\n          $ref: \"#/components/responses/ProxyError\"\n      security:\n        - apiKey: []\n      summary: POST\n      tags:\n        - Execute\n      x-graphql-exclude: true\n      x-sdk-exclude: true\n    put:\n      description: |\n        Proxies a downstream PUT request to a service and injects the necessary credentials into a request stored in Vault. This allows you to have an additional security layer and logging without needing to rely on Unify for normalization.\n        **Note**: Vault will proxy all data to the downstream URL and method/verb in the headers.\n      operationId: putProxy\n      parameters:\n        - $ref: \"#/components/parameters/x-apideck-consumer-id\"\n        - $ref: \"#/components/parameters/x-apideck-app-id\"\n        - $ref: \"#/components/parameters/x-apideck-service-id\"\n        - $ref: \"#/components/parameters/x-apideck-downstream-url\"\n        - $ref: \"#/components/parameters/x-apideck-downstream-authorization\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              example:\n                addresses:\n                  - address_1: 747 Howard St\n                    address_2: Room 3\n                    city: San Francisco\n                    country: US\n                    label: business\n                    state: CA\n                    zipcode: \"94103\"\n                contacts:\n                  - emails:\n                      - email: gob@example.com\n                        type: office\n                    name: Gob\n                    phones:\n                      - phone: \"8004445555\"\n                        type: office\n                    title: Sr. Vice President\n                description: Best. Show. Ever.\n                name: Rich Company\n                url: http://therichcompany.tumblr.com/\n              properties: {}\n              type: object\n        description: Depending on the verb/method of the request this will contain the request body you want to POST/PATCH/PUT.\n        required: false\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Ok\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        default:\n          $ref: \"#/components/responses/ProxyError\"\n      security:\n        - apiKey: []\n      summary: PUT\n      tags:\n        - Execute\n      x-graphql-exclude: true\n      x-sdk-exclude: true\ncomponents:\n  parameters:\n    id:\n      description: ID of the record you are acting upon.\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n    raw:\n      description: Include raw response. Mostly used for debugging purposes\n      in: query\n      name: raw\n      schema:\n        default: true\n        type: boolean\n    x-apideck-app-id:\n      description: The ID of your Unify application\n      in: header\n      name: x-apideck-app-id\n      required: true\n      schema:\n        type: string\n    x-apideck-consumer-id:\n      description: ID of the consumer which you want to get or push data from\n      in: header\n      name: x-apideck-consumer-id\n      required: true\n      schema:\n        type: string\n    x-apideck-downstream-authorization:\n      description: Downstream authorization header. This will skip the Vault token injection.\n      example: Bearer XXXXXXXXXXXXXXXXX\n      in: header\n      name: x-apideck-downstream-authorization\n      required: false\n      schema:\n        type: string\n    x-apideck-downstream-method:\n      description: Downstream method. If not provided the upstream method will be inherited,\n      example: GET\n      in: header\n      name: x-apideck-downstream-method\n      required: false\n      schema:\n        type: string\n    x-apideck-downstream-url:\n      description: Downstream URL\n      example: https://api.close.com/api/v1/lead\n      in: header\n      name: x-apideck-downstream-url\n      required: true\n      schema:\n        type: string\n    x-apideck-service-id:\n      description: Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.\n      example: close\n      in: header\n      name: x-apideck-service-id\n      required: true\n      schema:\n        type: string\n  responses:\n    Ok:\n      content:\n        application/json:\n          example: {}\n          schema: {}\n      description: Ok\n    ProxyError:\n      content:\n        application/json:\n          schema: {}\n      description: Proxy error\n      headers:\n        x-apideck-downstream-error:\n          schema:\n            description: Indicates if the error returned in the body is from the downstream\n            type: boolean\n    Unauthorized:\n      content:\n        application/json:\n          schema:\n            properties:\n              detail:\n                description: Contains parameter or domain specific information related to the error and why it occured.\n                example: Failed to generate valid JWT Session. Verify applicationId is correct\n                type: string\n              error:\n                description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n                example: Unauthorized\n                type: string\n              message:\n                description: A human-readable message providing more details about the error.\n                example: Unauthorized Request\n                type: string\n              ref:\n                description: Link to documentation of error type\n                example: https://developers.apideck.com/errors#unauthorizederror\n                type: string\n              status_code:\n                description: HTTP status code\n                example: 401\n                type: number\n              type_name:\n                description: The type of error returned\n                example: UnauthorizedError\n                type: string\n      description: Unauthorized\n  securitySchemes:\n    apiKey:\n      description: |\n        To use API you have to sign up and get your own API key. Unify API accounts have sandbox mode and live mode API keys. \n        To change modes just use the appropriate key to get a live or test object. You can find your API keys on the unify settings of your Apideck app.\n        Your Apideck application_id can also be found on the same page.\n\n        Authenticate your API requests by including your test or live secret API key in the request header. \n\n        - Bearer authorization header: `Authorization: Bearer \u003cyour-apideck-api-key\u003e`\n        - Application id header: `x-apideck-app-id: \u003cyour-apideck-app-id\u003e`\n\n        You should use the public keys on the SDKs and the secret keys to authenticate API requests.\n\n        **Do not share or include your secret API keys on client side code.** Your API keys carry significant privileges. Please ensure to keep them 100% secure and be sure to not share your secret API keys in areas that are publicly accessible like GitHub.\n\n        Learn how to set the Authorization header inside Postman https://learning.postman.com/docs/postman/sending-api-requests/authorization/#api-key\n\n        Go to Unify to grab your API KEY https://app.apideck.com/unify/api-keys\n      in: header\n      name: Authorization\n      x-ballerina-apikey-description: \"Provide your API key as `Authorization`. Eg: `{\\\"Authorization\\\" : \\\"\u003cAPI key\u003e\\\"}`\"\n      type: apiKey\n    # applicationId:\n    #   description: The ID of your Unify application\n    #   in: header\n    #   name: x-apideck-app-id\n    #   type: apiKey\n"
		}
	},
	"Error": "parse: parse spec: paths: /proxy: get: operation \"getProxy\": security: parse global security: unknown security schema \"applicationId\""
}