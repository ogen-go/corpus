{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/amazonaws.com/imagebuilder/2019-12-02/openapi.yaml",
			"byteSize": 341775,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2019-12-02'\n  x-release: v4\n  title: EC2 Image Builder\n  description: 'EC2 Image Builder is a fully managed Amazon Web Services service that makes it easier to automate the creation, management, and deployment of customized, secure, and up-to-date \"golden\" server images that are pre-installed and pre-configured with software and settings to meet specific IT standards.'\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: imagebuilder\n  x-aws-signingName: imagebuilder\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/imagebuilder-2019-12-02.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/imagebuilder/'\nservers:\n  - url: 'http://imagebuilder.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The imagebuilder multi-region endpoint\n  - url: 'https://imagebuilder.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The imagebuilder multi-region endpoint\n  - url: 'http://imagebuilder.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The imagebuilder endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://imagebuilder.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The imagebuilder endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  /CancelImageCreation:\n    put:\n      operationId: CancelImageCreation\n      description: CancelImageCreation cancels the creation of Image. This operation can only be used on images in a non-terminal state.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CancelImageCreationResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: IdempotentParameterMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdempotentParameterMismatchException'\n        '485':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '486':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n        '487':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - imageBuildVersionArn\n                - clientToken\n              properties:\n                imageBuildVersionArn:\n                  description: The Amazon Resource Name (ARN) of the image whose creation you want to cancel.\n                  type: string\n                  pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+/[0-9]+$'\n                clientToken:\n                  description: The idempotency token used to make this request idempotent.\n                  type: string\n                  minLength: 1\n                  maxLength: 36\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /CreateComponent:\n    put:\n      operationId: CreateComponent\n      description: 'Creates a new component that can be used to build, validate, test, and assess your image.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateComponentResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: IdempotentParameterMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdempotentParameterMismatchException'\n        '485':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '486':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n        '487':\n          description: InvalidVersionNumberException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidVersionNumberException'\n        '488':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '489':\n          description: InvalidParameterCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterCombinationException'\n        '490':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - semanticVersion\n                - platform\n                - clientToken\n              properties:\n                name:\n                  description: The name of the component.\n                  type: string\n                  pattern: '^[-_A-Za-z-0-9][-_A-Za-z0-9 ]{1,126}[-_A-Za-z-0-9]$'\n                semanticVersion:\n                  description: '<p>The semantic version of the component. This version follows the semantic version syntax.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> <p> <b>Assignment:</b> For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number, and that is not open for updates.</p> <p> <b>Patterns:</b> You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.</p> </note>'\n                  type: string\n                  pattern: '^[0-9]+\\.[0-9]+\\.[0-9]+$'\n                description:\n                  description: The description of the component. Describes the contents of the component.\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                changeDescription:\n                  description: 'The change description of the component. Describes what change has been made in this version, or what makes this version different from other versions of this component.'\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                platform:\n                  description: The platform of the component.\n                  type: string\n                  enum:\n                    - Windows\n                    - Linux\n                supportedOsVersions:\n                  description: ' The operating system (OS) version supported by the component. If the OS information is available, a prefix match is performed against the parent image OS version during image recipe creation.'\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/OsVersion'\n                  minItems: 1\n                  maxItems: 25\n                data:\n                  description: The data of the component. Used to specify the data inline. Either <code>data</code> or <code>uri</code> can be used to specify the data within the component.\n                  type: string\n                  pattern: '[^\\x00]+'\n                  minLength: 1\n                  maxLength: 16000\n                uri:\n                  description: 'The uri of the component. Must be an Amazon S3 URL and the requester must have permission to access the Amazon S3 bucket. If you use Amazon S3, you can specify component content up to your service quota. Either <code>data</code> or <code>uri</code> can be used to specify the data within the component.'\n                  type: string\n                kmsKeyId:\n                  description: The ID of the KMS key that should be used to encrypt this component.\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                tags:\n                  description: The tags of the component.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n                clientToken:\n                  description: The idempotency token of the component.\n                  type: string\n                  minLength: 1\n                  maxLength: 36\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /CreateContainerRecipe:\n    put:\n      operationId: CreateContainerRecipe\n      description: 'Creates a new container recipe. Container recipes define how images are configured, tested, and assessed.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateContainerRecipeResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: IdempotentParameterMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdempotentParameterMismatchException'\n        '485':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '486':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n        '487':\n          description: InvalidVersionNumberException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidVersionNumberException'\n        '488':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '489':\n          description: ResourceAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceAlreadyExistsException'\n        '490':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - containerType\n                - name\n                - semanticVersion\n                - components\n                - parentImage\n                - targetRepository\n                - clientToken\n              properties:\n                containerType:\n                  description: The type of container to create.\n                  type: string\n                  enum:\n                    - DOCKER\n                name:\n                  description: The name of the container recipe.\n                  type: string\n                  pattern: '^[-_A-Za-z-0-9][-_A-Za-z0-9 ]{1,126}[-_A-Za-z-0-9]$'\n                description:\n                  description: The description of the container recipe.\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                semanticVersion:\n                  description: '<p>The semantic version of the container recipe. This version follows the semantic version syntax.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> <p> <b>Assignment:</b> For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number, and that is not open for updates.</p> <p> <b>Patterns:</b> You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.</p> </note>'\n                  type: string\n                  pattern: '^[0-9]+\\.[0-9]+\\.[0-9]+$'\n                components:\n                  description: Components for build and test that are included in the container recipe.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/ComponentConfiguration'\n                  minItems: 1\n                instanceConfiguration:\n                  description: Defines a custom source AMI and block device mapping configurations of an instance used for building and testing container images.\n                  type: object\n                  properties:\n                    image:\n                      allOf:\n                        - $ref: '#/components/schemas/NonEmptyString'\n                        - description: 'The AMI ID to use as the base image for a container build and test instance. If not specified, Image Builder will use the appropriate ECS-optimized AMI as a base image.'\n                    blockDeviceMappings:\n                      allOf:\n                        - $ref: '#/components/schemas/InstanceBlockDeviceMappings'\n                        - description: Defines the block devices to attach for building an instance from this Image Builder AMI.\n                dockerfileTemplateData:\n                  description: The Dockerfile template used to build your image as an inline data blob.\n                  type: string\n                  pattern: '[^\\x00]+'\n                  minLength: 1\n                  maxLength: 16000\n                dockerfileTemplateUri:\n                  description: The Amazon S3 URI for the Dockerfile that will be used to build your container image.\n                  type: string\n                platformOverride:\n                  description: Specifies the operating system platform when you use a custom source image.\n                  type: string\n                  enum:\n                    - Windows\n                    - Linux\n                imageOsVersionOverride:\n                  description: Specifies the operating system version for the source image.\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                parentImage:\n                  description: The source image for the container recipe.\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                tags:\n                  description: Tags that are attached to the container recipe.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n                workingDirectory:\n                  description: The working directory for use during build and test workflows.\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                targetRepository:\n                  description: The container repository where the output container image is stored.\n                  type: object\n                  properties:\n                    service:\n                      allOf:\n                        - $ref: '#/components/schemas/ContainerRepositoryService'\n                        - description: Specifies the service in which this image was registered.\n                    repositoryName:\n                      allOf:\n                        - $ref: '#/components/schemas/NonEmptyString'\n                        - description: The name of the container repository where the output container image is stored. This name is prefixed by the repository location.\n                kmsKeyId:\n                  description: Identifies which KMS key is used to encrypt the container image.\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                clientToken:\n                  description: The client token used to make this request idempotent.\n                  type: string\n                  minLength: 1\n                  maxLength: 36\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /CreateDistributionConfiguration:\n    put:\n      operationId: CreateDistributionConfiguration\n      description: Creates a new distribution configuration. Distribution configurations define and configure the outputs of your pipeline.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateDistributionConfigurationResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: IdempotentParameterMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdempotentParameterMismatchException'\n        '485':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '486':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n        '487':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '488':\n          description: ResourceAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceAlreadyExistsException'\n        '489':\n          description: InvalidParameterCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterCombinationException'\n        '490':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - distributions\n                - clientToken\n              properties:\n                name:\n                  description: ' The name of the distribution configuration.'\n                  type: string\n                  pattern: '^[-_A-Za-z-0-9][-_A-Za-z0-9 ]{1,126}[-_A-Za-z-0-9]$'\n                description:\n                  description: ' The description of the distribution configuration.'\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                distributions:\n                  description: ' The distributions of the distribution configuration.'\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Distribution'\n                tags:\n                  description: ' The tags of the distribution configuration.'\n                  type: object\n                  minProperties: 1\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n                clientToken:\n                  description: ' The idempotency token of the distribution configuration.'\n                  type: string\n                  minLength: 1\n                  maxLength: 36\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /CreateImage:\n    put:\n      operationId: CreateImage\n      description: ' Creates a new image. This request will create a new image along with all of the configured output resources defined in the distribution configuration. You must specify exactly one recipe for your image, using either a ContainerRecipeArn or an ImageRecipeArn.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateImageResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: IdempotentParameterMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdempotentParameterMismatchException'\n        '485':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '486':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n        '487':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '488':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - infrastructureConfigurationArn\n                - clientToken\n              properties:\n                imageRecipeArn:\n                  description: ' The Amazon Resource Name (ARN) of the image recipe that defines how images are configured, tested, and assessed.'\n                  type: string\n                  pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-recipe/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+$'\n                containerRecipeArn:\n                  description: The Amazon Resource Name (ARN) of the container recipe that defines how images are configured and tested.\n                  type: string\n                  pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):container-recipe/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+$'\n                distributionConfigurationArn:\n                  description: ' The Amazon Resource Name (ARN) of the distribution configuration that defines and configures the outputs of your pipeline.'\n                  type: string\n                  pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):distribution-configuration/[a-z0-9-_]+$'\n                infrastructureConfigurationArn:\n                  description: ' The Amazon Resource Name (ARN) of the infrastructure configuration that defines the environment in which your image will be built and tested.'\n                  type: string\n                  pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):infrastructure-configuration/[a-z0-9-_]+$'\n                imageTestsConfiguration:\n                  description: Image tests configuration.\n                  type: object\n                  properties:\n                    imageTestsEnabled:\n                      allOf:\n                        - $ref: '#/components/schemas/NullableBoolean'\n                        - description: Defines if tests should be executed when building this image.\n                    timeoutMinutes:\n                      allOf:\n                        - $ref: '#/components/schemas/ImageTestsTimeoutMinutes'\n                        - description: The maximum time in minutes that tests are permitted to run.\n                enhancedImageMetadataEnabled:\n                  description: ' Collects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.'\n                  type: boolean\n                tags:\n                  description: ' The tags of the image.'\n                  type: object\n                  minProperties: 1\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n                clientToken:\n                  description: ' The idempotency token used to make this request idempotent.'\n                  type: string\n                  minLength: 1\n                  maxLength: 36\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /CreateImagePipeline:\n    put:\n      operationId: CreateImagePipeline\n      description: ' Creates a new image pipeline. Image pipelines enable you to automate the creation and distribution of images.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateImagePipelineResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: IdempotentParameterMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdempotentParameterMismatchException'\n        '485':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '486':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n        '487':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '488':\n          description: ResourceAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceAlreadyExistsException'\n        '489':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - infrastructureConfigurationArn\n                - clientToken\n              properties:\n                name:\n                  description: ' The name of the image pipeline.'\n                  type: string\n                  pattern: '^[-_A-Za-z-0-9][-_A-Za-z0-9 ]{1,126}[-_A-Za-z-0-9]$'\n                description:\n                  description: ' The description of the image pipeline.'\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                imageRecipeArn:\n                  description: ' The Amazon Resource Name (ARN) of the image recipe that will be used to configure images created by this image pipeline.'\n                  type: string\n                  pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-recipe/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+$'\n                containerRecipeArn:\n                  description: The Amazon Resource Name (ARN) of the container recipe that is used to configure images created by this container pipeline.\n                  type: string\n                  pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):container-recipe/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+$'\n                infrastructureConfigurationArn:\n                  description: ' The Amazon Resource Name (ARN) of the infrastructure configuration that will be used to build images created by this image pipeline.'\n                  type: string\n                  pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):infrastructure-configuration/[a-z0-9-_]+$'\n                distributionConfigurationArn:\n                  description: ' The Amazon Resource Name (ARN) of the distribution configuration that will be used to configure and distribute images created by this image pipeline.'\n                  type: string\n                  pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):distribution-configuration/[a-z0-9-_]+$'\n                imageTestsConfiguration:\n                  description: Image tests configuration.\n                  type: object\n                  properties:\n                    imageTestsEnabled:\n                      allOf:\n                        - $ref: '#/components/schemas/NullableBoolean'\n                        - description: Defines if tests should be executed when building this image.\n                    timeoutMinutes:\n                      allOf:\n                        - $ref: '#/components/schemas/ImageTestsTimeoutMinutes'\n                        - description: The maximum time in minutes that tests are permitted to run.\n                enhancedImageMetadataEnabled:\n                  description: ' Collects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.'\n                  type: boolean\n                schedule:\n                  description: A schedule configures how often and when a pipeline will automatically create a new image.\n                  type: object\n                  properties:\n                    scheduleExpression:\n                      allOf:\n                        - $ref: '#/components/schemas/NonEmptyString'\n                        - description: '<p>The cron expression determines how often EC2 Image Builder evaluates your <code>pipelineExecutionStartCondition</code>.</p> <p>For information on how to format a cron expression in Image Builder, see <a href=\"https://docs.aws.amazon.com/imagebuilder/latest/userguide/image-builder-cron.html\">Use cron expressions in EC2 Image Builder</a>.</p>'\n                    timezone:\n                      allOf:\n                        - $ref: '#/components/schemas/Timezone'\n                        - description: 'The timezone that applies to the scheduling expression. For example, \"Etc/UTC\", \"America/Los_Angeles\" in the <a href=\"https://www.joda.org/joda-time/timezones.html\">IANA timezone format</a>. If not specified this defaults to UTC.'\n                    pipelineExecutionStartCondition:\n                      allOf:\n                        - $ref: '#/components/schemas/PipelineExecutionStartCondition'\n                        - description: 'The condition configures when the pipeline should trigger a new image build. When the <code>pipelineExecutionStartCondition</code> is set to <code>EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE</code>, and you use semantic version filters on the source image or components in your image recipe, EC2 Image Builder will build a new image only when there are new versions of the image or components in your recipe that match the semantic version filter. When it is set to <code>EXPRESSION_MATCH_ONLY</code>, it will build a new image every time the CRON expression matches the current time. For semantic version syntax, see <a href=\"https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_CreateComponent.html\">CreateComponent</a> in the <i> EC2 Image Builder API Reference</i>.'\n                status:\n                  description: ' The status of the image pipeline.'\n                  type: string\n                  enum:\n                    - DISABLED\n                    - ENABLED\n                tags:\n                  description: ' The tags of the image pipeline.'\n                  type: object\n                  minProperties: 1\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n                clientToken:\n                  description: ' The idempotency token used to make this request idempotent.'\n                  type: string\n                  minLength: 1\n                  maxLength: 36\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /CreateImageRecipe:\n    put:\n      operationId: CreateImageRecipe\n      description: ' Creates a new image recipe. Image recipes define how images are configured, tested, and assessed.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateImageRecipeResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: IdempotentParameterMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdempotentParameterMismatchException'\n        '485':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '486':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n        '487':\n          description: InvalidVersionNumberException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidVersionNumberException'\n        '488':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '489':\n          description: ResourceAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceAlreadyExistsException'\n        '490':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - semanticVersion\n                - components\n                - parentImage\n                - clientToken\n              properties:\n                name:\n                  description: ' The name of the image recipe.'\n                  type: string\n                  pattern: '^[-_A-Za-z-0-9][-_A-Za-z0-9 ]{1,126}[-_A-Za-z-0-9]$'\n                description:\n                  description: ' The description of the image recipe.'\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                semanticVersion:\n                  description: '<p>The semantic version of the image recipe. This version follows the semantic version syntax.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> <p> <b>Assignment:</b> For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number, and that is not open for updates.</p> <p> <b>Patterns:</b> You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.</p> </note>'\n                  type: string\n                  pattern: '^[0-9]+\\.[0-9]+\\.[0-9]+$'\n                components:\n                  description: The components of the image recipe.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/ComponentConfiguration'\n                  minItems: 1\n                parentImage:\n                  description: 'The parent image of the image recipe. The value of the string can be the ARN of the parent image or an AMI ID. The format for the ARN follows this example: <code>arn:aws:imagebuilder:us-west-2:aws:image/windows-server-2016-english-full-base-x86/x.x.x</code>. You can provide the specific version that you want to use, or you can use a wildcard in all of the fields. If you enter an AMI ID for the string value, you must have access to the AMI, and the AMI must be in the same Region in which you are using Image Builder.'\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                blockDeviceMappings:\n                  description: The block device mappings of the image recipe.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/InstanceBlockDeviceMapping'\n                tags:\n                  description: ' The tags of the image recipe.'\n                  type: object\n                  minProperties: 1\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n                workingDirectory:\n                  description: The working directory used during build and test workflows.\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                additionalInstanceConfiguration:\n                  description: 'In addition to your infrastruction configuration, these settings provide an extra layer of control over your build instances. For instances where Image Builder installs the SSM agent, you can choose whether to keep it for the AMI that you create. You can also specify commands to run on launch for all of your build instances.'\n                  type: object\n                  properties:\n                    systemsManagerAgent:\n                      allOf:\n                        - $ref: '#/components/schemas/SystemsManagerAgent'\n                        - description: Contains settings for the SSM agent on your build instance.\n                    userDataOverride:\n                      allOf:\n                        - $ref: '#/components/schemas/UserDataOverride'\n                        - description: '<p>Use this property to provide commands or a command script to run when you launch your build instance.</p> <note> <p>The userDataOverride property replaces any commands that Image Builder might have added to ensure that SSM is installed on your Linux build instance. If you override the user data, make sure that you add commands to install SSM, if it is not pre-installed on your source image.</p> </note>'\n                clientToken:\n                  description: The idempotency token used to make this request idempotent.\n                  type: string\n                  minLength: 1\n                  maxLength: 36\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /CreateInfrastructureConfiguration:\n    put:\n      operationId: CreateInfrastructureConfiguration\n      description: ' Creates a new infrastructure configuration. An infrastructure configuration defines the environment in which your image will be built and tested.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateInfrastructureConfigurationResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: IdempotentParameterMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdempotentParameterMismatchException'\n        '485':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '486':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n        '487':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '488':\n          description: ResourceAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceAlreadyExistsException'\n        '489':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - instanceProfileName\n                - clientToken\n              properties:\n                name:\n                  description: The name of the infrastructure configuration.\n                  type: string\n                  pattern: '^[-_A-Za-z-0-9][-_A-Za-z0-9 ]{1,126}[-_A-Za-z-0-9]$'\n                description:\n                  description: The description of the infrastructure configuration.\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                instanceTypes:\n                  description: The instance types of the infrastructure configuration. You can specify one or more instance types to use for this build. The service will pick one of these instance types based on availability.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/InstanceType'\n                instanceProfileName:\n                  description: The instance profile to associate with the instance used to customize your Amazon EC2 AMI.\n                  type: string\n                  pattern: '^[\\w+=,.@-]+$'\n                  minLength: 1\n                  maxLength: 256\n                securityGroupIds:\n                  description: The security group IDs to associate with the instance used to customize your Amazon EC2 AMI.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/NonEmptyString'\n                subnetId:\n                  description: The subnet ID in which to place the instance used to customize your Amazon EC2 AMI.\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                logging:\n                  description: Logging configuration defines where Image Builder uploads your logs.\n                  type: object\n                  properties:\n                    s3Logs:\n                      allOf:\n                        - $ref: '#/components/schemas/S3Logs'\n                        - description: The Amazon S3 logging configuration.\n                keyPair:\n                  description: The key pair of the infrastructure configuration. This can be used to log on to and debug the instance used to create your image.\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                terminateInstanceOnFailure:\n                  description: The terminate instance on failure setting of the infrastructure configuration. Set to false if you want Image Builder to retain the instance used to configure your AMI if the build or test phase of your workflow fails.\n                  type: boolean\n                snsTopicArn:\n                  description: The SNS topic on which to send image build events.\n                  type: string\n                  pattern: '^arn:aws[^:]*:sns:[^:]+:[0-9]{12}:[a-zA-Z0-9-_]{1,256}$'\n                resourceTags:\n                  description: The tags attached to the resource created by Image Builder.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 30\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n                tags:\n                  description: The tags of the infrastructure configuration.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n                clientToken:\n                  description: The idempotency token used to make this request idempotent.\n                  type: string\n                  minLength: 1\n                  maxLength: 36\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /DeleteComponent#componentBuildVersionArn:\n    delete:\n      operationId: DeleteComponent\n      description: ' Deletes a component build version.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteComponentResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '485':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n        '486':\n          description: ResourceDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceDependencyException'\n      parameters:\n        - name: componentBuildVersionArn\n          in: query\n          required: true\n          description: The Amazon Resource Name (ARN) of the component build version to delete.\n          schema:\n            type: string\n            pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):component/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+/[0-9]+$'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /DeleteContainerRecipe#containerRecipeArn:\n    delete:\n      operationId: DeleteContainerRecipe\n      description: Deletes a container recipe.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteContainerRecipeResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '485':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n        '486':\n          description: ResourceDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceDependencyException'\n      parameters:\n        - name: containerRecipeArn\n          in: query\n          required: true\n          description: The Amazon Resource Name (ARN) of the container recipe to delete.\n          schema:\n            type: string\n            pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):container-recipe/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+$'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /DeleteDistributionConfiguration#distributionConfigurationArn:\n    delete:\n      operationId: DeleteDistributionConfiguration\n      description: ' Deletes a distribution configuration.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteDistributionConfigurationResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '484':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '485':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n        '486':\n          description: ResourceDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceDependencyException'\n      parameters:\n        - name: distributionConfigurationArn\n          in: query\n          required: true\n          description: The Amazon Resource Name (ARN) of the distribution configuration to delete.\n          schema:\n            type: string\n            pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):distribution-configuration/[a-z0-9-_]+$'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /DeleteImage#imageBuildVersionArn:\n    delete:\n      operationId: DeleteImage\n      description: ' Deletes an image.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteImageResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '484':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '485':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n        '486':\n          description: ResourceDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceDependencyException'\n      parameters:\n        - name: imageBuildVersionArn\n          in: query\n          required: true\n          description: The Amazon Resource Name (ARN) of the image to delete.\n          schema:\n            type: string\n            pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+/[0-9]+$'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /DeleteImagePipeline#imagePipelineArn:\n    delete:\n      operationId: DeleteImagePipeline\n      description: ' Deletes an image pipeline.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteImagePipelineResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '485':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n        '486':\n          description: ResourceDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceDependencyException'\n      parameters:\n        - name: imagePipelineArn\n          in: query\n          required: true\n          description: The Amazon Resource Name (ARN) of the image pipeline to delete.\n          schema:\n            type: string\n            pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-pipeline/[a-z0-9-_]+$'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /DeleteImageRecipe#imageRecipeArn:\n    delete:\n      operationId: DeleteImageRecipe\n      description: ' Deletes an image recipe.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteImageRecipeResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '485':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n        '486':\n          description: ResourceDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceDependencyException'\n      parameters:\n        - name: imageRecipeArn\n          in: query\n          required: true\n          description: The Amazon Resource Name (ARN) of the image recipe to delete.\n          schema:\n            type: string\n            pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-recipe/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+$'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /DeleteInfrastructureConfiguration#infrastructureConfigurationArn:\n    delete:\n      operationId: DeleteInfrastructureConfiguration\n      description: ' Deletes an infrastructure configuration.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteInfrastructureConfigurationResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '485':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n        '486':\n          description: ResourceDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceDependencyException'\n      parameters:\n        - name: infrastructureConfigurationArn\n          in: query\n          required: true\n          description: The Amazon Resource Name (ARN) of the infrastructure configuration to delete.\n          schema:\n            type: string\n            pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):infrastructure-configuration/[a-z0-9-_]+$'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /GetComponent#componentBuildVersionArn:\n    get:\n      operationId: GetComponent\n      description: ' Gets a component object.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetComponentResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '485':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n      parameters:\n        - name: componentBuildVersionArn\n          in: query\n          required: true\n          description: The Amazon Resource Name (ARN) of the component that you want to retrieve. Regex requires \"/\\d+$\" suffix.\n          schema:\n            type: string\n            pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):component/[a-z0-9-_]+/(?:(?:([0-9]+|x)\\.([0-9]+|x)\\.([0-9]+|x))|(?:[0-9]+\\.[0-9]+\\.[0-9]+/[0-9]+))$'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /GetComponentPolicy#componentArn:\n    get:\n      operationId: GetComponentPolicy\n      description: ' Gets a component policy.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetComponentPolicyResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '485':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n      parameters:\n        - name: componentArn\n          in: query\n          required: true\n          description: The Amazon Resource Name (ARN) of the component whose policy you want to retrieve.\n          schema:\n            type: string\n            pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):component/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+/[0-9]+$'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /GetContainerRecipe#containerRecipeArn:\n    get:\n      operationId: GetContainerRecipe\n      description: Retrieves a container recipe.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetContainerRecipeResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '485':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n      parameters:\n        - name: containerRecipeArn\n          in: query\n          required: true\n          description: The Amazon Resource Name (ARN) of the container recipe to retrieve.\n          schema:\n            type: string\n            pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):container-recipe/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+$'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /GetContainerRecipePolicy#containerRecipeArn:\n    get:\n      operationId: GetContainerRecipePolicy\n      description: Retrieves the policy for a container recipe.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetContainerRecipePolicyResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '485':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n      parameters:\n        - name: containerRecipeArn\n          in: query\n          required: true\n          description: The Amazon Resource Name (ARN) of the container recipe for the policy being requested.\n          schema:\n            type: string\n            pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):container-recipe/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+$'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /GetDistributionConfiguration#distributionConfigurationArn:\n    get:\n      operationId: GetDistributionConfiguration\n      description: ' Gets a distribution configuration.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDistributionConfigurationResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '485':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n      parameters:\n        - name: distributionConfigurationArn\n          in: query\n          required: true\n          description: The Amazon Resource Name (ARN) of the distribution configuration that you want to retrieve.\n          schema:\n            type: string\n            pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):distribution-configuration/[a-z0-9-_]+$'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /GetImage#imageBuildVersionArn:\n    get:\n      operationId: GetImage\n      description: ' Gets an image.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetImageResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '485':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n      parameters:\n        - name: imageBuildVersionArn\n          in: query\n          required: true\n          description: The Amazon Resource Name (ARN) of the image that you want to retrieve.\n          schema:\n            type: string\n            pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image/[a-z0-9-_]+/(?:(?:([0-9]+|x)\\.([0-9]+|x)\\.([0-9]+|x))|(?:[0-9]+\\.[0-9]+\\.[0-9]+/[0-9]+))$'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /GetImagePipeline#imagePipelineArn:\n    get:\n      operationId: GetImagePipeline\n      description: ' Gets an image pipeline.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetImagePipelineResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '485':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n      parameters:\n        - name: imagePipelineArn\n          in: query\n          required: true\n          description: The Amazon Resource Name (ARN) of the image pipeline that you want to retrieve.\n          schema:\n            type: string\n            pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-pipeline/[a-z0-9-_]+$'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /GetImagePolicy#imageArn:\n    get:\n      operationId: GetImagePolicy\n      description: ' Gets an image policy.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetImagePolicyResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '485':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n      parameters:\n        - name: imageArn\n          in: query\n          required: true\n          description: The Amazon Resource Name (ARN) of the image whose policy you want to retrieve.\n          schema:\n            type: string\n            pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+/[0-9]+$'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /GetImageRecipe#imageRecipeArn:\n    get:\n      operationId: GetImageRecipe\n      description: ' Gets an image recipe.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetImageRecipeResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '485':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n      parameters:\n        - name: imageRecipeArn\n          in: query\n          required: true\n          description: The Amazon Resource Name (ARN) of the image recipe that you want to retrieve.\n          schema:\n            type: string\n            pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-recipe/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+$'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /GetImageRecipePolicy#imageRecipeArn:\n    get:\n      operationId: GetImageRecipePolicy\n      description: ' Gets an image recipe policy.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetImageRecipePolicyResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '485':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n      parameters:\n        - name: imageRecipeArn\n          in: query\n          required: true\n          description: The Amazon Resource Name (ARN) of the image recipe whose policy you want to retrieve.\n          schema:\n            type: string\n            pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-recipe/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+$'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /GetInfrastructureConfiguration#infrastructureConfigurationArn:\n    get:\n      operationId: GetInfrastructureConfiguration\n      description: ' Gets an infrastructure configuration.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetInfrastructureConfigurationResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '485':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n      parameters:\n        - name: infrastructureConfigurationArn\n          in: query\n          required: true\n          description: The Amazon Resource Name (ARN) of the infrastructure configuration that you want to retrieve.\n          schema:\n            type: string\n            pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):infrastructure-configuration/[a-z0-9-_]+$'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /ImportComponent:\n    put:\n      operationId: ImportComponent\n      description: Imports a component and transforms its data into a component document.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImportComponentResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: IdempotentParameterMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdempotentParameterMismatchException'\n        '485':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '486':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n        '487':\n          description: InvalidVersionNumberException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidVersionNumberException'\n        '488':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '489':\n          description: InvalidParameterCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterCombinationException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - semanticVersion\n                - type\n                - format\n                - platform\n                - clientToken\n              properties:\n                name:\n                  description: ' The name of the component.'\n                  type: string\n                  pattern: '^[-_A-Za-z-0-9][-_A-Za-z0-9 ]{1,126}[-_A-Za-z-0-9]$'\n                semanticVersion:\n                  description: '<p>The semantic version of the component. This version follows the semantic version syntax.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> <p> <b>Filtering:</b> When you retrieve or reference a resource with a semantic version, you can use wildcards (x) to filter your results. When you use a wildcard in any node, all nodes to the right of the first wildcard must also be wildcards. For example, specifying \"1.2.x\", or \"1.x.x\" works to filter list results, but neither \"1.x.2\", nor \"x.2.x\" will work. You do not have to specify the build - Image Builder automatically uses a wildcard for that, if applicable.</p> </note>'\n                  type: string\n                  pattern: '^[0-9]+\\.[0-9]+\\.[0-9]+$'\n                description:\n                  description: The description of the component. Describes the contents of the component.\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                changeDescription:\n                  description: 'The change description of the component. Describes what change has been made in this version, or what makes this version different from other versions of this component.'\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                type:\n                  description: 'The type of the component denotes whether the component is used to build the image, or only to test it.'\n                  type: string\n                  enum:\n                    - BUILD\n                    - TEST\n                format:\n                  description: The format of the resource that you want to import as a component.\n                  type: string\n                  enum:\n                    - SHELL\n                platform:\n                  description: The platform of the component.\n                  type: string\n                  enum:\n                    - Windows\n                    - Linux\n                data:\n                  description: The data of the component. Used to specify the data inline. Either <code>data</code> or <code>uri</code> can be used to specify the data within the component.\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                uri:\n                  description: 'The uri of the component. Must be an Amazon S3 URL and the requester must have permission to access the Amazon S3 bucket. If you use Amazon S3, you can specify component content up to your service quota. Either <code>data</code> or <code>uri</code> can be used to specify the data within the component.'\n                  type: string\n                kmsKeyId:\n                  description: The ID of the KMS key that should be used to encrypt this component.\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                tags:\n                  description: The tags of the component.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n                clientToken:\n                  description: The idempotency token of the component.\n                  type: string\n                  minLength: 1\n                  maxLength: 36\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /ListComponentBuildVersions:\n    post:\n      operationId: ListComponentBuildVersions\n      description: '<p> Returns the list of component build versions for the specified semantic version.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> <p> <b>Filtering:</b> When you retrieve or reference a resource with a semantic version, you can use wildcards (x) to filter your results. When you use a wildcard in any node, all nodes to the right of the first wildcard must also be wildcards. For example, specifying \"1.2.x\", or \"1.x.x\" works to filter list results, but neither \"1.x.2\", nor \"x.2.x\" will work. You do not have to specify the build - Image Builder automatically uses a wildcard for that, if applicable.</p> </note>'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListComponentBuildVersionsResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: InvalidPaginationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidPaginationTokenException'\n        '485':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '486':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - componentVersionArn\n              properties:\n                componentVersionArn:\n                  description: The component version Amazon Resource Name (ARN) whose versions you want to list.\n                  type: string\n                  pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):component/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+$'\n                maxResults:\n                  description: The maximum items to return in a request.\n                  type: integer\n                  minimum: 1\n                  maximum: 25\n                nextToken:\n                  description: A token to specify where to start paginating. This is the NextToken from a previously truncated response.\n                  type: string\n                  minLength: 1\n                  maxLength: 65535\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /ListComponents:\n    post:\n      operationId: ListComponents\n      description: '<p>Returns the list of component build versions for the specified semantic version.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> <p> <b>Filtering:</b> When you retrieve or reference a resource with a semantic version, you can use wildcards (x) to filter your results. When you use a wildcard in any node, all nodes to the right of the first wildcard must also be wildcards. For example, specifying \"1.2.x\", or \"1.x.x\" works to filter list results, but neither \"1.x.2\", nor \"x.2.x\" will work. You do not have to specify the build - Image Builder automatically uses a wildcard for that, if applicable.</p> </note>'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListComponentsResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: InvalidPaginationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidPaginationTokenException'\n        '485':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '486':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                owner:\n                  description: 'The owner defines which components you want to list. By default, this request will only show components owned by your account. You can use this field to specify if you want to view components owned by yourself, by Amazon, or those components that have been shared with you by other customers.'\n                  type: string\n                  enum:\n                    - Self\n                    - Shared\n                    - Amazon\n                filters:\n                  description: '<p>Use the following filters to streamline results:</p> <ul> <li> <p> <code>description</code> </p> </li> <li> <p> <code>name</code> </p> </li> <li> <p> <code>platform</code> </p> </li> <li> <p> <code>supportedOsVersion</code> </p> </li> <li> <p> <code>type</code> </p> </li> <li> <p> <code>version</code> </p> </li> </ul>'\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Filter'\n                  minItems: 1\n                  maxItems: 10\n                byName:\n                  description: Returns the list of component build versions for the specified name.\n                  type: boolean\n                maxResults:\n                  description: The maximum items to return in a request.\n                  type: integer\n                  minimum: 1\n                  maximum: 25\n                nextToken:\n                  description: A token to specify where to start paginating. This is the NextToken from a previously truncated response.\n                  type: string\n                  minLength: 1\n                  maxLength: 65535\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /ListContainerRecipes:\n    post:\n      operationId: ListContainerRecipes\n      description: Returns a list of container recipes.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListContainerRecipesResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: InvalidPaginationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidPaginationTokenException'\n        '485':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '486':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                owner:\n                  description: 'Returns container recipes belonging to the specified owner, that have been shared with you. You can omit this field to return container recipes belonging to your account.'\n                  type: string\n                  enum:\n                    - Self\n                    - Shared\n                    - Amazon\n                filters:\n                  description: '<p>Use the following filters to streamline results:</p> <ul> <li> <p> <code>containerType</code> </p> </li> <li> <p> <code>name</code> </p> </li> <li> <p> <code>parentImage</code> </p> </li> <li> <p> <code>platform</code> </p> </li> </ul>'\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Filter'\n                  minItems: 1\n                  maxItems: 10\n                maxResults:\n                  description: The maximum number of results to return in the list.\n                  type: integer\n                  minimum: 1\n                  maximum: 25\n                nextToken:\n                  description: 'Provides a token for pagination, which determines where to begin the next set of results when the current set reaches the maximum for one request.'\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /ListDistributionConfigurations:\n    post:\n      operationId: ListDistributionConfigurations\n      description: Returns a list of distribution configurations.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDistributionConfigurationsResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: InvalidPaginationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidPaginationTokenException'\n        '485':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '486':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  description: You can filter on <code>name</code> to streamline results.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Filter'\n                  minItems: 1\n                  maxItems: 10\n                maxResults:\n                  description: The maximum items to return in a request.\n                  type: integer\n                  minimum: 1\n                  maximum: 25\n                nextToken:\n                  description: A token to specify where to start paginating. This is the NextToken from a previously truncated response.\n                  type: string\n                  minLength: 1\n                  maxLength: 65535\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /ListImageBuildVersions:\n    post:\n      operationId: ListImageBuildVersions\n      description: ' Returns a list of image build versions.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListImageBuildVersionsResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: InvalidPaginationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidPaginationTokenException'\n        '485':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '486':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - imageVersionArn\n              properties:\n                imageVersionArn:\n                  description: The Amazon Resource Name (ARN) of the image whose build versions you want to retrieve.\n                  type: string\n                  pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+$'\n                filters:\n                  description: '<p>Use the following filters to streamline results:</p> <ul> <li> <p> <code>name</code> </p> </li> <li> <p> <code>osVersion</code> </p> </li> <li> <p> <code>platform</code> </p> </li> <li> <p> <code>type</code> </p> </li> <li> <p> <code>version</code> </p> </li> </ul>'\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Filter'\n                  minItems: 1\n                  maxItems: 10\n                maxResults:\n                  description: The maximum items to return in a request.\n                  type: integer\n                  minimum: 1\n                  maximum: 25\n                nextToken:\n                  description: A token to specify where to start paginating. This is the NextToken from a previously truncated response.\n                  type: string\n                  minLength: 1\n                  maxLength: 65535\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /ListImagePackages:\n    post:\n      operationId: ListImagePackages\n      description: 'List the Packages that are associated with an Image Build Version, as determined by Amazon EC2 Systems Manager Inventory at build time.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListImagePackagesResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: InvalidPaginationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidPaginationTokenException'\n        '485':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '486':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '487':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - imageBuildVersionArn\n              properties:\n                imageBuildVersionArn:\n                  description: Filter results for the ListImagePackages request by the Image Build Version ARN\n                  type: string\n                  pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+/[0-9]+$'\n                maxResults:\n                  description: The maxiumum number of results to return from the ListImagePackages request.\n                  type: integer\n                  minimum: 1\n                  maximum: 25\n                nextToken:\n                  description: A token to specify where to start paginating. This is the NextToken from a previously truncated response.\n                  type: string\n                  minLength: 1\n                  maxLength: 65535\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /ListImagePipelineImages:\n    post:\n      operationId: ListImagePipelineImages\n      description: ' Returns a list of images created by the specified pipeline.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListImagePipelineImagesResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: InvalidPaginationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidPaginationTokenException'\n        '485':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '486':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '487':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - imagePipelineArn\n              properties:\n                imagePipelineArn:\n                  description: The Amazon Resource Name (ARN) of the image pipeline whose images you want to view.\n                  type: string\n                  pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-pipeline/[a-z0-9-_]+$'\n                filters:\n                  description: '<p>Use the following filters to streamline results:</p> <ul> <li> <p> <code>name</code> </p> </li> <li> <p> <code>version</code> </p> </li> </ul>'\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Filter'\n                  minItems: 1\n                  maxItems: 10\n                maxResults:\n                  description: The maximum items to return in a request.\n                  type: integer\n                  minimum: 1\n                  maximum: 25\n                nextToken:\n                  description: A token to specify where to start paginating. This is the NextToken from a previously truncated response.\n                  type: string\n                  minLength: 1\n                  maxLength: 65535\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /ListImagePipelines:\n    post:\n      operationId: ListImagePipelines\n      description: Returns a list of image pipelines.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListImagePipelinesResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: InvalidPaginationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidPaginationTokenException'\n        '485':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '486':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  description: '<p>Use the following filters to streamline results:</p> <ul> <li> <p> <code>description</code> </p> </li> <li> <p> <code>distributionConfigurationArn</code> </p> </li> <li> <p> <code>imageRecipeArn</code> </p> </li> <li> <p> <code>infrastructureConfigurationArn</code> </p> </li> <li> <p> <code>name</code> </p> </li> <li> <p> <code>status</code> </p> </li> </ul>'\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Filter'\n                  minItems: 1\n                  maxItems: 10\n                maxResults:\n                  description: The maximum items to return in a request.\n                  type: integer\n                  minimum: 1\n                  maximum: 25\n                nextToken:\n                  description: A token to specify where to start paginating. This is the NextToken from a previously truncated response.\n                  type: string\n                  minLength: 1\n                  maxLength: 65535\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /ListImageRecipes:\n    post:\n      operationId: ListImageRecipes\n      description: ' Returns a list of image recipes.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListImageRecipesResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: InvalidPaginationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidPaginationTokenException'\n        '485':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '486':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                owner:\n                  description: 'The owner defines which image recipes you want to list. By default, this request will only show image recipes owned by your account. You can use this field to specify if you want to view image recipes owned by yourself, by Amazon, or those image recipes that have been shared with you by other customers.'\n                  type: string\n                  enum:\n                    - Self\n                    - Shared\n                    - Amazon\n                filters:\n                  description: '<p>Use the following filters to streamline results:</p> <ul> <li> <p> <code>name</code> </p> </li> <li> <p> <code>parentImage</code> </p> </li> <li> <p> <code>platform</code> </p> </li> </ul>'\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Filter'\n                  minItems: 1\n                  maxItems: 10\n                maxResults:\n                  description: The maximum items to return in a request.\n                  type: integer\n                  minimum: 1\n                  maximum: 25\n                nextToken:\n                  description: A token to specify where to start paginating. This is the NextToken from a previously truncated response.\n                  type: string\n                  minLength: 1\n                  maxLength: 65535\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /ListImages:\n    post:\n      operationId: ListImages\n      description: ' Returns the list of images that you have access to.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListImagesResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: InvalidPaginationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidPaginationTokenException'\n        '485':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '486':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                owner:\n                  description: 'The owner defines which images you want to list. By default, this request will only show images owned by your account. You can use this field to specify if you want to view images owned by yourself, by Amazon, or those images that have been shared with you by other customers.'\n                  type: string\n                  enum:\n                    - Self\n                    - Shared\n                    - Amazon\n                filters:\n                  description: '<p>Use the following filters to streamline results:</p> <ul> <li> <p> <code>name</code> </p> </li> <li> <p> <code>osVersion</code> </p> </li> <li> <p> <code>platform</code> </p> </li> <li> <p> <code>type</code> </p> </li> <li> <p> <code>version</code> </p> </li> </ul>'\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Filter'\n                  minItems: 1\n                  maxItems: 10\n                byName:\n                  description: Requests a list of images with a specific recipe name.\n                  type: boolean\n                maxResults:\n                  description: The maximum items to return in a request.\n                  type: integer\n                  minimum: 1\n                  maximum: 25\n                nextToken:\n                  description: A token to specify where to start paginating. This is the NextToken from a previously truncated response.\n                  type: string\n                  minLength: 1\n                  maxLength: 65535\n                includeDeprecated:\n                  description: Includes deprecated images in the response list.\n                  type: boolean\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /ListInfrastructureConfigurations:\n    post:\n      operationId: ListInfrastructureConfigurations\n      description: ' Returns a list of infrastructure configurations.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListInfrastructureConfigurationsResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: InvalidPaginationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidPaginationTokenException'\n        '485':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '486':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  description: You can filter on <code>name</code> to streamline results.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Filter'\n                  minItems: 1\n                  maxItems: 10\n                maxResults:\n                  description: The maximum items to return in a request.\n                  type: integer\n                  minimum: 1\n                  maximum: 25\n                nextToken:\n                  description: A token to specify where to start paginating. This is the NextToken from a previously truncated response.\n                  type: string\n                  minLength: 1\n                  maxLength: 65535\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{resourceArn}':\n    get:\n      operationId: ListTagsForResource\n      description: ' Returns the list of tags for the specified resource.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsForResourceResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the resource whose tags you want to retrieve.\n          schema:\n            type: string\n            pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):(?:image-recipe|container-recipe|infrastructure-configuration|distribution-configuration|component|image|image-pipeline)/[a-z0-9-_]+(?:/(?:(?:x|[0-9]+)\\.(?:x|[0-9]+)\\.(?:x|[0-9]+))(?:/[0-9]+)?)?$'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: TagResource\n      description: ' Adds a tag to a resource.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagResourceResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the resource that you want to tag.\n          schema:\n            type: string\n            pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):(?:image-recipe|container-recipe|infrastructure-configuration|distribution-configuration|component|image|image-pipeline)/[a-z0-9-_]+(?:/(?:(?:x|[0-9]+)\\.(?:x|[0-9]+)\\.(?:x|[0-9]+))(?:/[0-9]+)?)?$'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - tags\n              properties:\n                tags:\n                  description: The tags to apply to the resource.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n  /PutComponentPolicy:\n    put:\n      operationId: PutComponentPolicy\n      description: ' Applies a policy to a component. We recommend that you call the RAM API <a href=\"https://docs.aws.amazon.com/ram/latest/APIReference/API_CreateResourceShare.html\">CreateResourceShare</a> to share resources. If you call the Image Builder API <code>PutComponentPolicy</code>, you must also call the RAM API <a href=\"https://docs.aws.amazon.com/ram/latest/APIReference/API_PromoteResourceShareCreatedFromPolicy.html\">PromoteResourceShareCreatedFromPolicy</a> in order for the resource to be visible to all principals with whom the resource is shared.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutComponentPolicyResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '485':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '486':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '487':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - componentArn\n                - policy\n              properties:\n                componentArn:\n                  description: The Amazon Resource Name (ARN) of the component that this policy should be applied to.\n                  type: string\n                  pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):component/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+/[0-9]+$'\n                policy:\n                  description: The policy to apply.\n                  type: string\n                  minLength: 1\n                  maxLength: 30000\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /PutContainerRecipePolicy:\n    put:\n      operationId: PutContainerRecipePolicy\n      description: 'Applies a policy to a container image. We recommend that you call the RAM API CreateResourceShare (https://docs.aws.amazon.com/ram/latest/APIReference/API_CreateResourceShare.html) to share resources. If you call the Image Builder API <code>PutContainerImagePolicy</code>, you must also call the RAM API PromoteResourceShareCreatedFromPolicy (https://docs.aws.amazon.com/ram/latest/APIReference/API_PromoteResourceShareCreatedFromPolicy.html) in order for the resource to be visible to all principals with whom the resource is shared.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutContainerRecipePolicyResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '485':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '486':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '487':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - containerRecipeArn\n                - policy\n              properties:\n                containerRecipeArn:\n                  description: The Amazon Resource Name (ARN) of the container recipe that this policy should be applied to.\n                  type: string\n                  pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):container-recipe/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+$'\n                policy:\n                  description: The policy to apply to the container recipe.\n                  type: string\n                  minLength: 1\n                  maxLength: 30000\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /PutImagePolicy:\n    put:\n      operationId: PutImagePolicy\n      description: 'Applies a policy to an image. We recommend that you call the RAM API <a href=\"https://docs.aws.amazon.com/ram/latest/APIReference/API_CreateResourceShare.html\">CreateResourceShare</a> to share resources. If you call the Image Builder API <code>PutImagePolicy</code>, you must also call the RAM API <a href=\"https://docs.aws.amazon.com/ram/latest/APIReference/API_PromoteResourceShareCreatedFromPolicy.html\">PromoteResourceShareCreatedFromPolicy</a> in order for the resource to be visible to all principals with whom the resource is shared.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutImagePolicyResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '485':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '486':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '487':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - imageArn\n                - policy\n              properties:\n                imageArn:\n                  description: The Amazon Resource Name (ARN) of the image that this policy should be applied to.\n                  type: string\n                  pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+/[0-9]+$'\n                policy:\n                  description: The policy to apply.\n                  type: string\n                  minLength: 1\n                  maxLength: 30000\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /PutImageRecipePolicy:\n    put:\n      operationId: PutImageRecipePolicy\n      description: ' Applies a policy to an image recipe. We recommend that you call the RAM API <a href=\"https://docs.aws.amazon.com/ram/latest/APIReference/API_CreateResourceShare.html\">CreateResourceShare</a> to share resources. If you call the Image Builder API <code>PutImageRecipePolicy</code>, you must also call the RAM API <a href=\"https://docs.aws.amazon.com/ram/latest/APIReference/API_PromoteResourceShareCreatedFromPolicy.html\">PromoteResourceShareCreatedFromPolicy</a> in order for the resource to be visible to all principals with whom the resource is shared.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutImageRecipePolicyResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '485':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '486':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '487':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - imageRecipeArn\n                - policy\n              properties:\n                imageRecipeArn:\n                  description: The Amazon Resource Name (ARN) of the image recipe that this policy should be applied to.\n                  type: string\n                  pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-recipe/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+$'\n                policy:\n                  description: The policy to apply.\n                  type: string\n                  minLength: 1\n                  maxLength: 30000\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /StartImagePipelineExecution:\n    put:\n      operationId: StartImagePipelineExecution\n      description: ' Manually triggers a pipeline to create an image.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StartImagePipelineExecutionResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '485':\n          description: IdempotentParameterMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdempotentParameterMismatchException'\n        '486':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '487':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n        '488':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - imagePipelineArn\n                - clientToken\n              properties:\n                imagePipelineArn:\n                  description: The Amazon Resource Name (ARN) of the image pipeline that you want to manually invoke.\n                  type: string\n                  pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-pipeline/[a-z0-9-_]+$'\n                clientToken:\n                  description: The idempotency token used to make this request idempotent.\n                  type: string\n                  minLength: 1\n                  maxLength: 36\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{resourceArn}#tagKeys':\n    delete:\n      operationId: UntagResource\n      description: ' Removes a tag from a resource.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UntagResourceResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the resource that you want to untag.\n          schema:\n            type: string\n            pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):(?:image-recipe|container-recipe|infrastructure-configuration|distribution-configuration|component|image|image-pipeline)/[a-z0-9-_]+(?:/(?:(?:x|[0-9]+)\\.(?:x|[0-9]+)\\.(?:x|[0-9]+))(?:/[0-9]+)?)?$'\n        - name: tagKeys\n          in: query\n          required: true\n          description: The tag keys to remove from the resource.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/TagKey'\n            minItems: 1\n            maxItems: 50\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /UpdateDistributionConfiguration:\n    put:\n      operationId: UpdateDistributionConfiguration\n      description: ' Updates a new distribution configuration. Distribution configurations define and configure the outputs of your pipeline.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateDistributionConfigurationResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: IdempotentParameterMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdempotentParameterMismatchException'\n        '485':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '486':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n        '487':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '488':\n          description: InvalidParameterCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterCombinationException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - distributionConfigurationArn\n                - distributions\n                - clientToken\n              properties:\n                distributionConfigurationArn:\n                  description: The Amazon Resource Name (ARN) of the distribution configuration that you want to update.\n                  type: string\n                  pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):distribution-configuration/[a-z0-9-_]+$'\n                description:\n                  description: The description of the distribution configuration.\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                distributions:\n                  description: The distributions of the distribution configuration.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Distribution'\n                clientToken:\n                  description: The idempotency token of the distribution configuration.\n                  type: string\n                  minLength: 1\n                  maxLength: 36\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /UpdateImagePipeline:\n    put:\n      operationId: UpdateImagePipeline\n      description: '<p> Updates an image pipeline. Image pipelines enable you to automate the creation and distribution of images.</p> <note> <p>UpdateImagePipeline does not support selective updates for the pipeline. You must specify all of the required properties in the update request, not just the properties that have changed.</p> </note>'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateImagePipelineResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: IdempotentParameterMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdempotentParameterMismatchException'\n        '485':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '486':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n        '487':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - imagePipelineArn\n                - infrastructureConfigurationArn\n                - clientToken\n              properties:\n                imagePipelineArn:\n                  description: The Amazon Resource Name (ARN) of the image pipeline that you want to update.\n                  type: string\n                  pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-pipeline/[a-z0-9-_]+$'\n                description:\n                  description: The description of the image pipeline.\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                imageRecipeArn:\n                  description: The Amazon Resource Name (ARN) of the image recipe that will be used to configure images updated by this image pipeline.\n                  type: string\n                  pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-recipe/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+$'\n                containerRecipeArn:\n                  description: The Amazon Resource Name (ARN) of the container pipeline to update.\n                  type: string\n                  pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):container-recipe/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+$'\n                infrastructureConfigurationArn:\n                  description: The Amazon Resource Name (ARN) of the infrastructure configuration that will be used to build images updated by this image pipeline.\n                  type: string\n                  pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):infrastructure-configuration/[a-z0-9-_]+$'\n                distributionConfigurationArn:\n                  description: The Amazon Resource Name (ARN) of the distribution configuration that will be used to configure and distribute images updated by this image pipeline.\n                  type: string\n                  pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):distribution-configuration/[a-z0-9-_]+$'\n                imageTestsConfiguration:\n                  description: Image tests configuration.\n                  type: object\n                  properties:\n                    imageTestsEnabled:\n                      allOf:\n                        - $ref: '#/components/schemas/NullableBoolean'\n                        - description: Defines if tests should be executed when building this image.\n                    timeoutMinutes:\n                      allOf:\n                        - $ref: '#/components/schemas/ImageTestsTimeoutMinutes'\n                        - description: The maximum time in minutes that tests are permitted to run.\n                enhancedImageMetadataEnabled:\n                  description: ' Collects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.'\n                  type: boolean\n                schedule:\n                  description: A schedule configures how often and when a pipeline will automatically create a new image.\n                  type: object\n                  properties:\n                    scheduleExpression:\n                      allOf:\n                        - $ref: '#/components/schemas/NonEmptyString'\n                        - description: '<p>The cron expression determines how often EC2 Image Builder evaluates your <code>pipelineExecutionStartCondition</code>.</p> <p>For information on how to format a cron expression in Image Builder, see <a href=\"https://docs.aws.amazon.com/imagebuilder/latest/userguide/image-builder-cron.html\">Use cron expressions in EC2 Image Builder</a>.</p>'\n                    timezone:\n                      allOf:\n                        - $ref: '#/components/schemas/Timezone'\n                        - description: 'The timezone that applies to the scheduling expression. For example, \"Etc/UTC\", \"America/Los_Angeles\" in the <a href=\"https://www.joda.org/joda-time/timezones.html\">IANA timezone format</a>. If not specified this defaults to UTC.'\n                    pipelineExecutionStartCondition:\n                      allOf:\n                        - $ref: '#/components/schemas/PipelineExecutionStartCondition'\n                        - description: 'The condition configures when the pipeline should trigger a new image build. When the <code>pipelineExecutionStartCondition</code> is set to <code>EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE</code>, and you use semantic version filters on the source image or components in your image recipe, EC2 Image Builder will build a new image only when there are new versions of the image or components in your recipe that match the semantic version filter. When it is set to <code>EXPRESSION_MATCH_ONLY</code>, it will build a new image every time the CRON expression matches the current time. For semantic version syntax, see <a href=\"https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_CreateComponent.html\">CreateComponent</a> in the <i> EC2 Image Builder API Reference</i>.'\n                status:\n                  description: The status of the image pipeline.\n                  type: string\n                  enum:\n                    - DISABLED\n                    - ENABLED\n                clientToken:\n                  description: The idempotency token used to make this request idempotent.\n                  type: string\n                  minLength: 1\n                  maxLength: 36\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /UpdateInfrastructureConfiguration:\n    put:\n      operationId: UpdateInfrastructureConfiguration\n      description: ' Updates a new infrastructure configuration. An infrastructure configuration defines the environment in which your image will be built and tested.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateInfrastructureConfigurationResponse'\n        '480':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: IdempotentParameterMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdempotentParameterMismatchException'\n        '485':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '486':\n          description: CallRateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CallRateLimitExceededException'\n        '487':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - infrastructureConfigurationArn\n                - instanceProfileName\n                - clientToken\n              properties:\n                infrastructureConfigurationArn:\n                  description: The Amazon Resource Name (ARN) of the infrastructure configuration that you want to update.\n                  type: string\n                  pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):infrastructure-configuration/[a-z0-9-_]+$'\n                description:\n                  description: The description of the infrastructure configuration.\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                instanceTypes:\n                  description: The instance types of the infrastructure configuration. You can specify one or more instance types to use for this build. The service will pick one of these instance types based on availability.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/InstanceType'\n                instanceProfileName:\n                  description: The instance profile to associate with the instance used to customize your Amazon EC2 AMI.\n                  type: string\n                  pattern: '^[\\w+=,.@-]+$'\n                  minLength: 1\n                  maxLength: 256\n                securityGroupIds:\n                  description: The security group IDs to associate with the instance used to customize your Amazon EC2 AMI.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/NonEmptyString'\n                subnetId:\n                  description: The subnet ID to place the instance used to customize your Amazon EC2 AMI in.\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                logging:\n                  description: Logging configuration defines where Image Builder uploads your logs.\n                  type: object\n                  properties:\n                    s3Logs:\n                      allOf:\n                        - $ref: '#/components/schemas/S3Logs'\n                        - description: The Amazon S3 logging configuration.\n                keyPair:\n                  description: The key pair of the infrastructure configuration. This can be used to log on to and debug the instance used to create your image.\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                terminateInstanceOnFailure:\n                  description: The terminate instance on failure setting of the infrastructure configuration. Set to false if you want Image Builder to retain the instance used to configure your AMI if the build or test phase of your workflow fails.\n                  type: boolean\n                snsTopicArn:\n                  description: The SNS topic on which to send image build events.\n                  type: string\n                  pattern: '^arn:aws[^:]*:sns:[^:]+:[0-9]{12}:[a-zA-Z0-9-_]{1,256}$'\n                clientToken:\n                  description: The idempotency token used to make this request idempotent.\n                  type: string\n                  minLength: 1\n                  maxLength: 36\n                resourceTags:\n                  description: The tags attached to the resource created by Image Builder.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 30\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    CancelImageCreationResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: The idempotency token used to make this request idempotent.\n        imageBuildVersionArn:\n          allOf:\n            - $ref: '#/components/schemas/ImageBuildVersionArn'\n            - description: The Amazon Resource Name (ARN) of the image whose creation has been cancelled.\n    ServiceException: {}\n    ClientException: {}\n    ServiceUnavailableException: {}\n    InvalidRequestException: {}\n    IdempotentParameterMismatchException: {}\n    ForbiddenException: {}\n    CallRateLimitExceededException: {}\n    ResourceInUseException: {}\n    CreateComponentResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: The idempotency token used to make this request idempotent.\n        componentBuildVersionArn:\n          allOf:\n            - $ref: '#/components/schemas/ComponentBuildVersionArn'\n            - description: The Amazon Resource Name (ARN) of the component that was created by this request.\n    OsVersion:\n      type: string\n      minLength: 1\n    TagValue:\n      type: string\n      maxLength: 256\n    InvalidVersionNumberException: {}\n    InvalidParameterCombinationException: {}\n    ServiceQuotaExceededException: {}\n    CreateContainerRecipeResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: The client token used to make this request idempotent.\n        containerRecipeArn:\n          allOf:\n            - $ref: '#/components/schemas/ContainerRecipeArn'\n            - description: Returns the Amazon Resource Name (ARN) of the container recipe that the request created.\n    ComponentConfiguration:\n      type: object\n      required:\n        - componentArn\n      properties:\n        componentArn:\n          allOf:\n            - $ref: '#/components/schemas/ComponentVersionArnOrBuildVersionArn'\n            - description: The Amazon Resource Name (ARN) of the component.\n        parameters:\n          allOf:\n            - $ref: '#/components/schemas/ComponentParameterList'\n            - description: A group of parameter settings that are used to configure the component for a specific recipe.\n      description: ' Configuration details of the component.'\n    NonEmptyString:\n      type: string\n      minLength: 1\n      maxLength: 1024\n    InstanceBlockDeviceMappings:\n      type: array\n      items:\n        $ref: '#/components/schemas/InstanceBlockDeviceMapping'\n    ContainerRepositoryService:\n      type: string\n      enum:\n        - ECR\n    ResourceAlreadyExistsException: {}\n    CreateDistributionConfigurationResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: ' The request ID that uniquely identifies this request.'\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: ' The idempotency token used to make this request idempotent.'\n        distributionConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/DistributionConfigurationArn'\n            - description: ' The Amazon Resource Name (ARN) of the distribution configuration that was created by this request.'\n    Distribution:\n      type: object\n      required:\n        - region\n      properties:\n        region:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The target Region.\n        amiDistributionConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/AmiDistributionConfiguration'\n            - description: 'The specific AMI settings; for example, launch permissions or AMI tags.'\n        containerDistributionConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/ContainerDistributionConfiguration'\n            - description: 'Container distribution settings for encryption, licensing, and sharing in a specific Region.'\n        licenseConfigurationArns:\n          allOf:\n            - $ref: '#/components/schemas/LicenseConfigurationArnList'\n            - description: The License Manager Configuration to associate with the AMI in the specified Region.\n        launchTemplateConfigurations:\n          allOf:\n            - $ref: '#/components/schemas/LaunchTemplateConfigurationList'\n            - description: A group of launchTemplateConfiguration settings that apply to image distribution for specified accounts.\n      description: ' Defines the settings for a specific Region.'\n    CreateImageResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: ' The request ID that uniquely identifies this request.'\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: ' The idempotency token used to make this request idempotent.'\n        imageBuildVersionArn:\n          allOf:\n            - $ref: '#/components/schemas/ImageBuildVersionArn'\n            - description: ' The Amazon Resource Name (ARN) of the image that was created by this request.'\n    NullableBoolean:\n      type: boolean\n    ImageTestsTimeoutMinutes:\n      type: integer\n      minimum: 60\n      maximum: 1440\n    CreateImagePipelineResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: ' The request ID that uniquely identifies this request.'\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: ' The idempotency token used to make this request idempotent.'\n        imagePipelineArn:\n          allOf:\n            - $ref: '#/components/schemas/ImagePipelineArn'\n            - description: ' The Amazon Resource Name (ARN) of the image pipeline that was created by this request.'\n    Timezone:\n      type: string\n      pattern: '[a-zA-Z0-9]{2,}(?:\\/[a-zA-z0-9-_+]+)*'\n      minLength: 3\n      maxLength: 100\n    PipelineExecutionStartCondition:\n      type: string\n      enum:\n        - EXPRESSION_MATCH_ONLY\n        - EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE\n    CreateImageRecipeResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: The idempotency token used to make this request idempotent.\n        imageRecipeArn:\n          allOf:\n            - $ref: '#/components/schemas/ImageRecipeArn'\n            - description: The Amazon Resource Name (ARN) of the image recipe that was created by this request.\n    InstanceBlockDeviceMapping:\n      type: object\n      properties:\n        deviceName:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The device to which these mappings apply.\n        ebs:\n          allOf:\n            - $ref: '#/components/schemas/EbsInstanceBlockDeviceSpecification'\n            - description: Use to manage Amazon EBS-specific configuration for this mapping.\n        virtualName:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: Use to manage instance ephemeral devices.\n        noDevice:\n          allOf:\n            - $ref: '#/components/schemas/EmptyString'\n            - description: Use to remove a mapping from the parent image.\n      description: Defines block device mappings for the instance used to configure your image.\n    SystemsManagerAgent:\n      type: object\n      properties:\n        uninstallAfterBuild:\n          allOf:\n            - $ref: '#/components/schemas/NullableBoolean'\n            - description: 'Controls whether the SSM agent is removed from your final build image, prior to creating the new AMI. If this is set to true, then the agent is removed from the final image. If it''s set to false, then the agent is left in, so that it is included in the new AMI. The default value is false.'\n      description: Contains settings for the SSM agent on your build instance.\n    UserDataOverride:\n      type: string\n      pattern: '^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$'\n      minLength: 1\n      maxLength: 21847\n    CreateInfrastructureConfigurationResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: The idempotency token used to make this request idempotent.\n        infrastructureConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/InfrastructureConfigurationArn'\n            - description: The Amazon Resource Name (ARN) of the infrastructure configuration that was created by this request.\n    InstanceType:\n      type: string\n    S3Logs:\n      type: object\n      properties:\n        s3BucketName:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The Amazon S3 bucket in which to store the logs.\n        s3KeyPrefix:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The Amazon S3 path in which to store the logs.\n      description: Amazon S3 logging configuration.\n    DeleteComponentResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        componentBuildVersionArn:\n          allOf:\n            - $ref: '#/components/schemas/ComponentBuildVersionArn'\n            - description: The Amazon Resource Name (ARN) of the component build version that was deleted.\n    ResourceDependencyException: {}\n    DeleteContainerRecipeResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        containerRecipeArn:\n          allOf:\n            - $ref: '#/components/schemas/ContainerRecipeArn'\n            - description: The Amazon Resource Name (ARN) of the container recipe that was deleted.\n    DeleteDistributionConfigurationResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        distributionConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/DistributionConfigurationArn'\n            - description: The Amazon Resource Name (ARN) of the distribution configuration that was deleted.\n    DeleteImageResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        imageBuildVersionArn:\n          allOf:\n            - $ref: '#/components/schemas/ImageBuildVersionArn'\n            - description: The Amazon Resource Name (ARN) of the image that was deleted.\n    DeleteImagePipelineResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        imagePipelineArn:\n          allOf:\n            - $ref: '#/components/schemas/ImagePipelineArn'\n            - description: The Amazon Resource Name (ARN) of the image pipeline that was deleted.\n    DeleteImageRecipeResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        imageRecipeArn:\n          allOf:\n            - $ref: '#/components/schemas/ImageRecipeArn'\n            - description: The Amazon Resource Name (ARN) of the image recipe that was deleted.\n    DeleteInfrastructureConfigurationResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        infrastructureConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/InfrastructureConfigurationArn'\n            - description: The Amazon Resource Name (ARN) of the infrastructure configuration that was deleted.\n    GetComponentResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        component:\n          allOf:\n            - $ref: '#/components/schemas/Component'\n            - description: The component object associated with the specified ARN.\n    GetComponentPolicyResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        policy:\n          allOf:\n            - $ref: '#/components/schemas/ResourcePolicyDocument'\n            - description: The component policy.\n    ResourceNotFoundException: {}\n    GetContainerRecipeResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        containerRecipe:\n          allOf:\n            - $ref: '#/components/schemas/ContainerRecipe'\n            - description: The container recipe object that is returned.\n    GetContainerRecipePolicyResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        policy:\n          allOf:\n            - $ref: '#/components/schemas/ResourcePolicyDocument'\n            - description: The container recipe policy object that is returned.\n    GetDistributionConfigurationResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        distributionConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/DistributionConfiguration'\n            - description: The distribution configuration object.\n    GetImageResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        image:\n          allOf:\n            - $ref: '#/components/schemas/Image'\n            - description: The image object.\n    GetImagePipelineResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        imagePipeline:\n          allOf:\n            - $ref: '#/components/schemas/ImagePipeline'\n            - description: The image pipeline object.\n    GetImagePolicyResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        policy:\n          allOf:\n            - $ref: '#/components/schemas/ResourcePolicyDocument'\n            - description: The image policy object.\n    GetImageRecipeResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        imageRecipe:\n          allOf:\n            - $ref: '#/components/schemas/ImageRecipe'\n            - description: The image recipe object.\n    GetImageRecipePolicyResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        policy:\n          allOf:\n            - $ref: '#/components/schemas/ResourcePolicyDocument'\n            - description: The image recipe policy object.\n    GetInfrastructureConfigurationResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        infrastructureConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/InfrastructureConfiguration'\n            - description: The infrastructure configuration object.\n      description: GetInfrastructureConfiguration response object.\n    ImportComponentResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: The idempotency token used to make this request idempotent.\n        componentBuildVersionArn:\n          allOf:\n            - $ref: '#/components/schemas/ComponentBuildVersionArn'\n            - description: The Amazon Resource Name (ARN) of the imported component.\n    ListComponentBuildVersionsResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        componentSummaryList:\n          allOf:\n            - $ref: '#/components/schemas/ComponentSummaryList'\n            - description: The list of component summaries for the specified semantic version.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: 'The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.'\n    InvalidPaginationTokenException: {}\n    ListComponentsResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        componentVersionList:\n          allOf:\n            - $ref: '#/components/schemas/ComponentVersionList'\n            - description: '<p>The list of component semantic versions.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> </note>'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: 'The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.'\n    Filter:\n      type: object\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/FilterName'\n            - description: The name of the filter. Filter names are case-sensitive.\n        values:\n          allOf:\n            - $ref: '#/components/schemas/FilterValues'\n            - description: The filter values. Filter values are case-sensitive.\n      description: 'A filter name and value pair that is used to return a more specific list of results from a list operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.'\n    ListContainerRecipesResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        containerRecipeSummaryList:\n          allOf:\n            - $ref: '#/components/schemas/ContainerRecipeSummaryList'\n            - description: The list of container recipes returned for the request.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: 'The next token field is used for paginated responses. When this is not empty, there are additional container recipes that the service has not included in this response. Use this token with the next request to retrieve additional list items.'\n    ListDistributionConfigurationsResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        distributionConfigurationSummaryList:\n          allOf:\n            - $ref: '#/components/schemas/DistributionConfigurationSummaryList'\n            - description: The list of distributions.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: 'The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.'\n    ListImageBuildVersionsResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        imageSummaryList:\n          allOf:\n            - $ref: '#/components/schemas/ImageSummaryList'\n            - description: The list of image build versions.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: 'The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.'\n    ListImagePackagesResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        imagePackageList:\n          allOf:\n            - $ref: '#/components/schemas/ImagePackageList'\n            - description: The list of Image Packages returned in the response.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: A token to specify where to start paginating. This is the NextToken from a previously truncated response.\n    ListImagePipelineImagesResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        imageSummaryList:\n          allOf:\n            - $ref: '#/components/schemas/ImageSummaryList'\n            - description: The list of images built by this pipeline.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: 'The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.'\n    ListImagePipelinesResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        imagePipelineList:\n          allOf:\n            - $ref: '#/components/schemas/ImagePipelineList'\n            - description: The list of image pipelines.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: 'The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.'\n    ListImageRecipesResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        imageRecipeSummaryList:\n          allOf:\n            - $ref: '#/components/schemas/ImageRecipeSummaryList'\n            - description: The list of image pipelines.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: 'The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.'\n    ListImagesResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        imageVersionList:\n          allOf:\n            - $ref: '#/components/schemas/ImageVersionList'\n            - description: '<p>The list of image semantic versions.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> <p> <b>Filtering:</b> When you retrieve or reference a resource with a semantic version, you can use wildcards (x) to filter your results. When you use a wildcard in any node, all nodes to the right of the first wildcard must also be wildcards. For example, specifying \"1.2.x\", or \"1.x.x\" works to filter list results, but neither \"1.x.2\", nor \"x.2.x\" will work. You do not have to specify the build - Image Builder automatically uses a wildcard for that, if applicable.</p> </note>'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: 'The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.'\n    ListInfrastructureConfigurationsResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        infrastructureConfigurationSummaryList:\n          allOf:\n            - $ref: '#/components/schemas/InfrastructureConfigurationSummaryList'\n            - description: The list of infrastructure configurations.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: 'The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.'\n    ListTagsForResourceResponse:\n      type: object\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags for the specified resource.\n    InvalidParameterException: {}\n    PutComponentPolicyResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        componentArn:\n          allOf:\n            - $ref: '#/components/schemas/ComponentBuildVersionArn'\n            - description: The Amazon Resource Name (ARN) of the component that this policy was applied to.\n    InvalidParameterValueException: {}\n    PutContainerRecipePolicyResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        containerRecipeArn:\n          allOf:\n            - $ref: '#/components/schemas/ContainerRecipeArn'\n            - description: The Amazon Resource Name (ARN) of the container recipe that this policy was applied to.\n    PutImagePolicyResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        imageArn:\n          allOf:\n            - $ref: '#/components/schemas/ImageBuildVersionArn'\n            - description: The Amazon Resource Name (ARN) of the image that this policy was applied to.\n    PutImageRecipePolicyResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        imageRecipeArn:\n          allOf:\n            - $ref: '#/components/schemas/ImageRecipeArn'\n            - description: The Amazon Resource Name (ARN) of the image recipe that this policy was applied to.\n    StartImagePipelineExecutionResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: The idempotency token used to make this request idempotent.\n        imageBuildVersionArn:\n          allOf:\n            - $ref: '#/components/schemas/ImageBuildVersionArn'\n            - description: The Amazon Resource Name (ARN) of the image that was created by this request.\n    TagResourceResponse:\n      type: object\n      properties: {}\n    UntagResourceResponse:\n      type: object\n      properties: {}\n    TagKey:\n      type: string\n      pattern: '^(?!aws:)[a-zA-Z+-=._:/]+$'\n      minLength: 1\n      maxLength: 128\n    UpdateDistributionConfigurationResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: The idempotency token used to make this request idempotent.\n        distributionConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/DistributionConfigurationArn'\n            - description: The Amazon Resource Name (ARN) of the distribution configuration that was updated by this request.\n    UpdateImagePipelineResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: The idempotency token used to make this request idempotent.\n        imagePipelineArn:\n          allOf:\n            - $ref: '#/components/schemas/ImagePipelineArn'\n            - description: The Amazon Resource Name (ARN) of the image pipeline that was updated by this request.\n    UpdateInfrastructureConfigurationResponse:\n      type: object\n      properties:\n        requestId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The request ID that uniquely identifies this request.\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: The idempotency token used to make this request idempotent.\n        infrastructureConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/InfrastructureConfigurationArn'\n            - description: The Amazon Resource Name (ARN) of the infrastructure configuration that was updated by this request.\n    AccountId:\n      type: string\n      pattern: '^[0-9]{12}$'\n    AccountList:\n      type: array\n      items:\n        $ref: '#/components/schemas/AccountId'\n      minItems: 1\n      maxItems: 1536\n    AdditionalInstanceConfiguration:\n      type: object\n      properties:\n        systemsManagerAgent:\n          allOf:\n            - $ref: '#/components/schemas/SystemsManagerAgent'\n            - description: Contains settings for the SSM agent on your build instance.\n        userDataOverride:\n          allOf:\n            - $ref: '#/components/schemas/UserDataOverride'\n            - description: '<p>Use this property to provide commands or a command script to run when you launch your build instance.</p> <note> <p>The userDataOverride property replaces any commands that Image Builder might have added to ensure that SSM is installed on your Linux build instance. If you override the user data, make sure that you add commands to install SSM, if it is not pre-installed on your source image.</p> </note>'\n      description: 'In addition to your infrastruction configuration, these settings provide an extra layer of control over your build instances. For instances where Image Builder installs the SSM agent, you can choose whether to keep it for the AMI that you create. You can also specify commands to run on launch for all of your build instances.'\n    ImageState:\n      type: object\n      properties:\n        status:\n          allOf:\n            - $ref: '#/components/schemas/ImageStatus'\n            - description: The status of the image.\n        reason:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The reason for the image's status.\n      description: ' Image state shows the image status and the reason for that status.'\n    Ami:\n      type: object\n      properties:\n        region:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The Amazon Web Services Region of the Amazon EC2 AMI.\n        image:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The AMI ID of the Amazon EC2 AMI.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The name of the Amazon EC2 AMI.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The description of the Amazon EC2 AMI. Minimum and maximum length are in characters.\n        state:\n          $ref: '#/components/schemas/ImageState'\n        accountId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The account ID of the owner of the AMI.\n      description: ' Details of an Amazon EC2 AMI.'\n    AmiNameString:\n      type: string\n      pattern: '^[-_A-Za-z0-9{][-_A-Za-z0-9\\s:{}\\.]+[-_A-Za-z0-9}]$'\n      minLength: 1\n      maxLength: 127\n    TagMap:\n      type: object\n      minProperties: 1\n      maxProperties: 50\n      additionalProperties:\n        $ref: '#/components/schemas/TagValue'\n    LaunchPermissionConfiguration:\n      type: object\n      properties:\n        userIds:\n          allOf:\n            - $ref: '#/components/schemas/AccountList'\n            - description: The Amazon Web Services account ID.\n        userGroups:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: The name of the group.\n      description: 'Describes the configuration for a launch permission. The launch permission modification request is sent to the <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyImageAttribute.html\">Amazon EC2 ModifyImageAttribute</a> API on behalf of the user for each Region they have selected to distribute the AMI. To make an AMI public, set the launch permission authorized accounts to <code>all</code>. See the examples for making an AMI public at <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyImageAttribute.html\">Amazon EC2 ModifyImageAttribute</a>.'\n    AmiDistributionConfiguration:\n      type: object\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/AmiNameString'\n            - description: The name of the distribution configuration.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The description of the distribution configuration. Minimum and maximum length are in characters.\n        targetAccountIds:\n          allOf:\n            - $ref: '#/components/schemas/AccountList'\n            - description: The ID of an account to which you want to distribute an image.\n        amiTags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags to apply to AMIs distributed to this Region.\n        kmsKeyId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The KMS key identifier used to encrypt the distributed image.\n        launchPermission:\n          allOf:\n            - $ref: '#/components/schemas/LaunchPermissionConfiguration'\n            - description: ' Launch permissions can be used to configure which Amazon Web Services accounts can use the AMI to launch instances.'\n      description: ' Define and configure the output AMIs of the pipeline.'\n    AmiList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Ami'\n    Arn:\n      type: string\n    Boolean:\n      type: boolean\n    ImageBuildVersionArn:\n      type: string\n      pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+/[0-9]+$'\n    ClientToken:\n      type: string\n      minLength: 1\n      maxLength: 36\n    CancelImageCreationRequest:\n      type: object\n      required:\n        - imageBuildVersionArn\n        - clientToken\n      title: CancelImageCreationRequest\n      properties:\n        imageBuildVersionArn:\n          allOf:\n            - $ref: '#/components/schemas/ImageBuildVersionArn'\n            - description: The Amazon Resource Name (ARN) of the image whose creation you want to cancel.\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: The idempotency token used to make this request idempotent.\n    ImageBuilderArn:\n      type: string\n      pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):(?:image-recipe|container-recipe|infrastructure-configuration|distribution-configuration|component|image|image-pipeline)/[a-z0-9-_]+(?:/(?:(?:x|[0-9]+)\\.(?:x|[0-9]+)\\.(?:x|[0-9]+))(?:/[0-9]+)?)?$'\n    ResourceName:\n      type: string\n      pattern: '^[-_A-Za-z-0-9][-_A-Za-z0-9 ]{1,126}[-_A-Za-z-0-9]$'\n    VersionNumber:\n      type: string\n      pattern: '^[0-9]+\\.[0-9]+\\.[0-9]+$'\n    ComponentType:\n      type: string\n      enum:\n        - BUILD\n        - TEST\n    Platform:\n      type: string\n      enum:\n        - Windows\n        - Linux\n    OsVersionList:\n      type: array\n      items:\n        $ref: '#/components/schemas/OsVersion'\n      minItems: 1\n      maxItems: 25\n    ComponentParameterDetailList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ComponentParameterDetail'\n    ComponentData:\n      type: string\n    DateTime:\n      type: string\n    Component:\n      type: object\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/ImageBuilderArn'\n            - description: The Amazon Resource Name (ARN) of the component.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ResourceName'\n            - description: The name of the component.\n        version:\n          allOf:\n            - $ref: '#/components/schemas/VersionNumber'\n            - description: The version of the component.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The description of the component.\n        changeDescription:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The change description of the component.\n        type:\n          allOf:\n            - $ref: '#/components/schemas/ComponentType'\n            - description: The type of the component denotes whether the component is used to build the image or only to test it.\n        platform:\n          allOf:\n            - $ref: '#/components/schemas/Platform'\n            - description: The platform of the component.\n        supportedOsVersions:\n          allOf:\n            - $ref: '#/components/schemas/OsVersionList'\n            - description: 'The operating system (OS) version supported by the component. If the OS information is available, a prefix match is performed against the parent image OS version during image recipe creation.'\n        parameters:\n          allOf:\n            - $ref: '#/components/schemas/ComponentParameterDetailList'\n            - description: Contains parameter details for each of the parameters that are defined for the component.\n        owner:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The owner of the component.\n        data:\n          allOf:\n            - $ref: '#/components/schemas/ComponentData'\n            - description: The data of the component.\n        kmsKeyId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The KMS key identifier used to encrypt the component.\n        encrypted:\n          allOf:\n            - $ref: '#/components/schemas/NullableBoolean'\n            - description: The encryption status of the component.\n        dateCreated:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The date that the component was created.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags associated with the component.\n      description: A detailed view of a component.\n    ComponentBuildVersionArn:\n      type: string\n      pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):component/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+/[0-9]+$'\n    ComponentVersionArnOrBuildVersionArn:\n      type: string\n      pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):component/[a-z0-9-_]+/(?:(?:([0-9]+|x)\\.([0-9]+|x)\\.([0-9]+|x))|(?:[0-9]+\\.[0-9]+\\.[0-9]+/[0-9]+))$'\n    ComponentParameterList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ComponentParameter'\n      minItems: 1\n    ComponentConfigurationList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ComponentConfiguration'\n      minItems: 1\n    ComponentFormat:\n      type: string\n      enum:\n        - SHELL\n    ComponentParameterName:\n      type: string\n      pattern: '[^\\x00]+'\n      minLength: 1\n      maxLength: 256\n    ComponentParameterValueList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ComponentParameterValue'\n    ComponentParameter:\n      type: object\n      required:\n        - name\n        - value\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ComponentParameterName'\n            - description: The name of the component parameter to set.\n        value:\n          allOf:\n            - $ref: '#/components/schemas/ComponentParameterValueList'\n            - description: Sets the value for the named component parameter.\n      description: Contains a key/value pair that sets the named component parameter.\n    ComponentParameterDescription:\n      type: string\n      pattern: '[^\\x00]+'\n      minLength: 1\n      maxLength: 1024\n    ComponentParameterType:\n      type: string\n      pattern: ^String|Integer|Boolean|StringList$\n      minLength: 1\n      maxLength: 20\n    ComponentParameterDetail:\n      type: object\n      required:\n        - name\n        - type\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ComponentParameterName'\n            - description: The name of this input parameter.\n        type:\n          allOf:\n            - $ref: '#/components/schemas/ComponentParameterType'\n            - description: The type of input this parameter provides. The currently supported value is \"string\".\n        defaultValue:\n          allOf:\n            - $ref: '#/components/schemas/ComponentParameterValueList'\n            - description: The default value of this parameter if no input is provided.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/ComponentParameterDescription'\n            - description: Describes this parameter.\n      description: Defines a parameter that is used to provide configuration details for the component.\n    ComponentParameterValue:\n      type: string\n      pattern: '[^\\x00]+'\n      minLength: 1\n    ComponentSummary:\n      type: object\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/ImageBuilderArn'\n            - description: The Amazon Resource Name (ARN) of the component.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ResourceName'\n            - description: The name of the component.\n        version:\n          allOf:\n            - $ref: '#/components/schemas/VersionNumber'\n            - description: The version of the component.\n        platform:\n          allOf:\n            - $ref: '#/components/schemas/Platform'\n            - description: The platform of the component.\n        supportedOsVersions:\n          allOf:\n            - $ref: '#/components/schemas/OsVersionList'\n            - description: 'The operating system (OS) version supported by the component. If the OS information is available, a prefix match is performed against the parent image OS version during image recipe creation.'\n        type:\n          allOf:\n            - $ref: '#/components/schemas/ComponentType'\n            - description: The type of the component denotes whether the component is used to build the image or only to test it.\n        owner:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The owner of the component.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The description of the component.\n        changeDescription:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The change description of the component.\n        dateCreated:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The date that the component was created.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags associated with the component.\n      description: A high-level summary of a component.\n    ComponentSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ComponentSummary'\n    ComponentVersion:\n      type: object\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/ImageBuilderArn'\n            - description: '<p>The Amazon Resource Name (ARN) of the component.</p> <note> <p>Semantic versioning is included in each object''s Amazon Resource Name (ARN), at the level that applies to that object as follows:</p> <ol> <li> <p>Versionless ARNs and Name ARNs do not include specific values in any of the nodes. The nodes are either left off entirely, or they are specified as wildcards, for example: x.x.x.</p> </li> <li> <p>Version ARNs have only the first three nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</p> </li> <li> <p>Build version ARNs have all four nodes, and point to a specific build for a specific version of an object.</p> </li> </ol> </note>'\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ResourceName'\n            - description: The name of the component.\n        version:\n          allOf:\n            - $ref: '#/components/schemas/VersionNumber'\n            - description: '<p>The semantic version of the component.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> <p> <b>Assignment:</b> For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number, and that is not open for updates.</p> <p> <b>Patterns:</b> You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.</p> <p> <b>Filtering:</b> When you retrieve or reference a resource with a semantic version, you can use wildcards (x) to filter your results. When you use a wildcard in any node, all nodes to the right of the first wildcard must also be wildcards. For example, specifying \"1.2.x\", or \"1.x.x\" works to filter list results, but neither \"1.x.2\", nor \"x.2.x\" will work. You do not have to specify the build - Image Builder automatically uses a wildcard for that, if applicable.</p> </note>'\n        description:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The description of the component.\n        platform:\n          allOf:\n            - $ref: '#/components/schemas/Platform'\n            - description: The platform of the component.\n        supportedOsVersions:\n          allOf:\n            - $ref: '#/components/schemas/OsVersionList'\n            - description: 'he operating system (OS) version supported by the component. If the OS information is available, a prefix match is performed against the parent image OS version during image recipe creation.'\n        type:\n          allOf:\n            - $ref: '#/components/schemas/ComponentType'\n            - description: The type of the component denotes whether the component is used to build the image or only to test it.\n        owner:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The owner of the component.\n        dateCreated:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The date that the component was created.\n      description: The defining characteristics of a specific version of an Amazon Web Services TOE component.\n    ComponentVersionArn:\n      type: string\n      pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):component/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+$'\n    ComponentVersionList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ComponentVersion'\n    StringList:\n      type: array\n      items:\n        $ref: '#/components/schemas/NonEmptyString'\n    Container:\n      type: object\n      properties:\n        region:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: Containers and container images are Region-specific. This is the Region context for the container.\n        imageUris:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: A list of URIs for containers created in the context Region.\n      description: A container encapsulates the runtime environment for an application.\n    TargetContainerRepository:\n      type: object\n      required:\n        - service\n        - repositoryName\n      properties:\n        service:\n          allOf:\n            - $ref: '#/components/schemas/ContainerRepositoryService'\n            - description: Specifies the service in which this image was registered.\n        repositoryName:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The name of the container repository where the output container image is stored. This name is prefixed by the repository location.\n      description: The container repository where the output container image is stored.\n    ContainerDistributionConfiguration:\n      type: object\n      required:\n        - targetRepository\n      properties:\n        description:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The description of the container distribution configuration.\n        containerTags:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: Tags that are attached to the container distribution configuration.\n        targetRepository:\n          allOf:\n            - $ref: '#/components/schemas/TargetContainerRepository'\n            - description: The destination repository for the container distribution configuration.\n      description: 'Container distribution settings for encryption, licensing, and sharing in a specific Region.'\n    ContainerList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Container'\n    ContainerType:\n      type: string\n      enum:\n        - DOCKER\n    InstanceConfiguration:\n      type: object\n      properties:\n        image:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: 'The AMI ID to use as the base image for a container build and test instance. If not specified, Image Builder will use the appropriate ECS-optimized AMI as a base image.'\n        blockDeviceMappings:\n          allOf:\n            - $ref: '#/components/schemas/InstanceBlockDeviceMappings'\n            - description: Defines the block devices to attach for building an instance from this Image Builder AMI.\n      description: Defines a custom source AMI and block device mapping configurations of an instance used for building and testing container images.\n    DockerFileTemplate:\n      type: string\n    ContainerRecipe:\n      type: object\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/ImageBuilderArn'\n            - description: '<p>The Amazon Resource Name (ARN) of the container recipe.</p> <note> <p>Semantic versioning is included in each object''s Amazon Resource Name (ARN), at the level that applies to that object as follows:</p> <ol> <li> <p>Versionless ARNs and Name ARNs do not include specific values in any of the nodes. The nodes are either left off entirely, or they are specified as wildcards, for example: x.x.x.</p> </li> <li> <p>Version ARNs have only the first three nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</p> </li> <li> <p>Build version ARNs have all four nodes, and point to a specific build for a specific version of an object.</p> </li> </ol> </note>'\n        containerType:\n          allOf:\n            - $ref: '#/components/schemas/ContainerType'\n            - description: 'Specifies the type of container, such as Docker.'\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ResourceName'\n            - description: The name of the container recipe.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The description of the container recipe.\n        platform:\n          allOf:\n            - $ref: '#/components/schemas/Platform'\n            - description: 'The system platform for the container, such as Windows or Linux.'\n        owner:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The owner of the container recipe.\n        version:\n          allOf:\n            - $ref: '#/components/schemas/VersionNumber'\n            - description: '<p>The semantic version of the container recipe.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> <p> <b>Assignment:</b> For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number, and that is not open for updates.</p> <p> <b>Patterns:</b> You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.</p> <p> <b>Filtering:</b> When you retrieve or reference a resource with a semantic version, you can use wildcards (x) to filter your results. When you use a wildcard in any node, all nodes to the right of the first wildcard must also be wildcards. For example, specifying \"1.2.x\", or \"1.x.x\" works to filter list results, but neither \"1.x.2\", nor \"x.2.x\" will work. You do not have to specify the build - Image Builder automatically uses a wildcard for that, if applicable.</p> </note>'\n        components:\n          allOf:\n            - $ref: '#/components/schemas/ComponentConfigurationList'\n            - description: Components for build and test that are included in the container recipe.\n        instanceConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/InstanceConfiguration'\n            - description: A group of options that can be used to configure an instance for building and testing container images.\n        dockerfileTemplateData:\n          allOf:\n            - $ref: '#/components/schemas/DockerFileTemplate'\n            - description: 'Dockerfiles are text documents that are used to build Docker containers, and ensure that they contain all of the elements required by the application running inside. The template data consists of contextual variables where Image Builder places build information or scripts, based on your container image recipe.'\n        kmsKeyId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: Identifies which KMS key is used to encrypt the container image for distribution to the target Region.\n        encrypted:\n          allOf:\n            - $ref: '#/components/schemas/NullableBoolean'\n            - description: A flag that indicates if the target container is encrypted.\n        parentImage:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The source image for the container recipe.\n        dateCreated:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The date when this container recipe was created.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: Tags that are attached to the container recipe.\n        workingDirectory:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The working directory for use during build and test workflows.\n        targetRepository:\n          allOf:\n            - $ref: '#/components/schemas/TargetContainerRepository'\n            - description: The destination repository for the container image.\n      description: A container recipe.\n    ContainerRecipeArn:\n      type: string\n      pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):container-recipe/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+$'\n    ContainerRecipeSummary:\n      type: object\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/ImageBuilderArn'\n            - description: The Amazon Resource Name (ARN) of the container recipe.\n        containerType:\n          allOf:\n            - $ref: '#/components/schemas/ContainerType'\n            - description: 'Specifies the type of container, such as \"Docker\".'\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ResourceName'\n            - description: The name of the container recipe.\n        platform:\n          allOf:\n            - $ref: '#/components/schemas/Platform'\n            - description: 'The system platform for the container, such as Windows or Linux.'\n        owner:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The owner of the container recipe.\n        parentImage:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The source image for the container recipe.\n        dateCreated:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The date when this container recipe was created.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: Tags that are attached to the container recipe.\n      description: A summary of a container recipe\n    ContainerRecipeSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ContainerRecipeSummary'\n    InlineComponentData:\n      type: string\n      pattern: '[^\\x00]+'\n      minLength: 1\n      maxLength: 16000\n    Uri:\n      type: string\n    CreateComponentRequest:\n      type: object\n      required:\n        - name\n        - semanticVersion\n        - platform\n        - clientToken\n      title: CreateComponentRequest\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ResourceName'\n            - description: The name of the component.\n        semanticVersion:\n          allOf:\n            - $ref: '#/components/schemas/VersionNumber'\n            - description: '<p>The semantic version of the component. This version follows the semantic version syntax.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> <p> <b>Assignment:</b> For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number, and that is not open for updates.</p> <p> <b>Patterns:</b> You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.</p> </note>'\n        description:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The description of the component. Describes the contents of the component.\n        changeDescription:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: 'The change description of the component. Describes what change has been made in this version, or what makes this version different from other versions of this component.'\n        platform:\n          allOf:\n            - $ref: '#/components/schemas/Platform'\n            - description: The platform of the component.\n        supportedOsVersions:\n          allOf:\n            - $ref: '#/components/schemas/OsVersionList'\n            - description: ' The operating system (OS) version supported by the component. If the OS information is available, a prefix match is performed against the parent image OS version during image recipe creation.'\n        data:\n          allOf:\n            - $ref: '#/components/schemas/InlineComponentData'\n            - description: The data of the component. Used to specify the data inline. Either <code>data</code> or <code>uri</code> can be used to specify the data within the component.\n        uri:\n          allOf:\n            - $ref: '#/components/schemas/Uri'\n            - description: 'The uri of the component. Must be an Amazon S3 URL and the requester must have permission to access the Amazon S3 bucket. If you use Amazon S3, you can specify component content up to your service quota. Either <code>data</code> or <code>uri</code> can be used to specify the data within the component.'\n        kmsKeyId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The ID of the KMS key that should be used to encrypt this component.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags of the component.\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: The idempotency token of the component.\n    InlineDockerFileTemplate:\n      type: string\n      pattern: '[^\\x00]+'\n      minLength: 1\n      maxLength: 16000\n    CreateContainerRecipeRequest:\n      type: object\n      required:\n        - containerType\n        - name\n        - semanticVersion\n        - components\n        - parentImage\n        - targetRepository\n        - clientToken\n      title: CreateContainerRecipeRequest\n      properties:\n        containerType:\n          allOf:\n            - $ref: '#/components/schemas/ContainerType'\n            - description: The type of container to create.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ResourceName'\n            - description: The name of the container recipe.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The description of the container recipe.\n        semanticVersion:\n          allOf:\n            - $ref: '#/components/schemas/VersionNumber'\n            - description: '<p>The semantic version of the container recipe. This version follows the semantic version syntax.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> <p> <b>Assignment:</b> For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number, and that is not open for updates.</p> <p> <b>Patterns:</b> You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.</p> </note>'\n        components:\n          allOf:\n            - $ref: '#/components/schemas/ComponentConfigurationList'\n            - description: Components for build and test that are included in the container recipe.\n        instanceConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/InstanceConfiguration'\n            - description: A group of options that can be used to configure an instance for building and testing container images.\n        dockerfileTemplateData:\n          allOf:\n            - $ref: '#/components/schemas/InlineDockerFileTemplate'\n            - description: The Dockerfile template used to build your image as an inline data blob.\n        dockerfileTemplateUri:\n          allOf:\n            - $ref: '#/components/schemas/Uri'\n            - description: The Amazon S3 URI for the Dockerfile that will be used to build your container image.\n        platformOverride:\n          allOf:\n            - $ref: '#/components/schemas/Platform'\n            - description: Specifies the operating system platform when you use a custom source image.\n        imageOsVersionOverride:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: Specifies the operating system version for the source image.\n        parentImage:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The source image for the container recipe.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: Tags that are attached to the container recipe.\n        workingDirectory:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The working directory for use during build and test workflows.\n        targetRepository:\n          allOf:\n            - $ref: '#/components/schemas/TargetContainerRepository'\n            - description: The destination repository for the container image.\n        kmsKeyId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: Identifies which KMS key is used to encrypt the container image.\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: The client token used to make this request idempotent.\n    DistributionList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Distribution'\n    CreateDistributionConfigurationRequest:\n      type: object\n      required:\n        - name\n        - distributions\n        - clientToken\n      title: CreateDistributionConfigurationRequest\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ResourceName'\n            - description: ' The name of the distribution configuration.'\n        description:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: ' The description of the distribution configuration.'\n        distributions:\n          allOf:\n            - $ref: '#/components/schemas/DistributionList'\n            - description: ' The distributions of the distribution configuration.'\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: ' The tags of the distribution configuration.'\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: ' The idempotency token of the distribution configuration.'\n    DistributionConfigurationArn:\n      type: string\n      pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):distribution-configuration/[a-z0-9-_]+$'\n    ImageRecipeArn:\n      type: string\n      pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-recipe/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+$'\n    InfrastructureConfigurationArn:\n      type: string\n      pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):infrastructure-configuration/[a-z0-9-_]+$'\n    ImageTestsConfiguration:\n      type: object\n      properties:\n        imageTestsEnabled:\n          allOf:\n            - $ref: '#/components/schemas/NullableBoolean'\n            - description: Defines if tests should be executed when building this image.\n        timeoutMinutes:\n          allOf:\n            - $ref: '#/components/schemas/ImageTestsTimeoutMinutes'\n            - description: The maximum time in minutes that tests are permitted to run.\n      description: Image tests configuration.\n    Schedule:\n      type: object\n      properties:\n        scheduleExpression:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: '<p>The cron expression determines how often EC2 Image Builder evaluates your <code>pipelineExecutionStartCondition</code>.</p> <p>For information on how to format a cron expression in Image Builder, see <a href=\"https://docs.aws.amazon.com/imagebuilder/latest/userguide/image-builder-cron.html\">Use cron expressions in EC2 Image Builder</a>.</p>'\n        timezone:\n          allOf:\n            - $ref: '#/components/schemas/Timezone'\n            - description: 'The timezone that applies to the scheduling expression. For example, \"Etc/UTC\", \"America/Los_Angeles\" in the <a href=\"https://www.joda.org/joda-time/timezones.html\">IANA timezone format</a>. If not specified this defaults to UTC.'\n        pipelineExecutionStartCondition:\n          allOf:\n            - $ref: '#/components/schemas/PipelineExecutionStartCondition'\n            - description: 'The condition configures when the pipeline should trigger a new image build. When the <code>pipelineExecutionStartCondition</code> is set to <code>EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE</code>, and you use semantic version filters on the source image or components in your image recipe, EC2 Image Builder will build a new image only when there are new versions of the image or components in your recipe that match the semantic version filter. When it is set to <code>EXPRESSION_MATCH_ONLY</code>, it will build a new image every time the CRON expression matches the current time. For semantic version syntax, see <a href=\"https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_CreateComponent.html\">CreateComponent</a> in the <i> EC2 Image Builder API Reference</i>.'\n      description: A schedule configures how often and when a pipeline will automatically create a new image.\n    PipelineStatus:\n      type: string\n      enum:\n        - DISABLED\n        - ENABLED\n    CreateImagePipelineRequest:\n      type: object\n      required:\n        - name\n        - infrastructureConfigurationArn\n        - clientToken\n      title: CreateImagePipelineRequest\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ResourceName'\n            - description: ' The name of the image pipeline.'\n        description:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: ' The description of the image pipeline.'\n        imageRecipeArn:\n          allOf:\n            - $ref: '#/components/schemas/ImageRecipeArn'\n            - description: ' The Amazon Resource Name (ARN) of the image recipe that will be used to configure images created by this image pipeline.'\n        containerRecipeArn:\n          allOf:\n            - $ref: '#/components/schemas/ContainerRecipeArn'\n            - description: The Amazon Resource Name (ARN) of the container recipe that is used to configure images created by this container pipeline.\n        infrastructureConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/InfrastructureConfigurationArn'\n            - description: ' The Amazon Resource Name (ARN) of the infrastructure configuration that will be used to build images created by this image pipeline.'\n        distributionConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/DistributionConfigurationArn'\n            - description: ' The Amazon Resource Name (ARN) of the distribution configuration that will be used to configure and distribute images created by this image pipeline.'\n        imageTestsConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/ImageTestsConfiguration'\n            - description: ' The image test configuration of the image pipeline.'\n        enhancedImageMetadataEnabled:\n          allOf:\n            - $ref: '#/components/schemas/NullableBoolean'\n            - description: ' Collects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.'\n        schedule:\n          allOf:\n            - $ref: '#/components/schemas/Schedule'\n            - description: ' The schedule of the image pipeline.'\n        status:\n          allOf:\n            - $ref: '#/components/schemas/PipelineStatus'\n            - description: ' The status of the image pipeline.'\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: ' The tags of the image pipeline.'\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: ' The idempotency token used to make this request idempotent.'\n    ImagePipelineArn:\n      type: string\n      pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-pipeline/[a-z0-9-_]+$'\n    CreateImageRecipeRequest:\n      type: object\n      required:\n        - name\n        - semanticVersion\n        - components\n        - parentImage\n        - clientToken\n      title: CreateImageRecipeRequest\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ResourceName'\n            - description: ' The name of the image recipe.'\n        description:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: ' The description of the image recipe.'\n        semanticVersion:\n          allOf:\n            - $ref: '#/components/schemas/VersionNumber'\n            - description: '<p>The semantic version of the image recipe. This version follows the semantic version syntax.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> <p> <b>Assignment:</b> For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number, and that is not open for updates.</p> <p> <b>Patterns:</b> You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.</p> </note>'\n        components:\n          allOf:\n            - $ref: '#/components/schemas/ComponentConfigurationList'\n            - description: The components of the image recipe.\n        parentImage:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: 'The parent image of the image recipe. The value of the string can be the ARN of the parent image or an AMI ID. The format for the ARN follows this example: <code>arn:aws:imagebuilder:us-west-2:aws:image/windows-server-2016-english-full-base-x86/x.x.x</code>. You can provide the specific version that you want to use, or you can use a wildcard in all of the fields. If you enter an AMI ID for the string value, you must have access to the AMI, and the AMI must be in the same Region in which you are using Image Builder.'\n        blockDeviceMappings:\n          allOf:\n            - $ref: '#/components/schemas/InstanceBlockDeviceMappings'\n            - description: The block device mappings of the image recipe.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: ' The tags of the image recipe.'\n        workingDirectory:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The working directory used during build and test workflows.\n        additionalInstanceConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/AdditionalInstanceConfiguration'\n            - description: Specify additional settings and launch scripts for your build instances.\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: The idempotency token used to make this request idempotent.\n    CreateImageRequest:\n      type: object\n      required:\n        - infrastructureConfigurationArn\n        - clientToken\n      title: CreateImageRequest\n      properties:\n        imageRecipeArn:\n          allOf:\n            - $ref: '#/components/schemas/ImageRecipeArn'\n            - description: ' The Amazon Resource Name (ARN) of the image recipe that defines how images are configured, tested, and assessed.'\n        containerRecipeArn:\n          allOf:\n            - $ref: '#/components/schemas/ContainerRecipeArn'\n            - description: The Amazon Resource Name (ARN) of the container recipe that defines how images are configured and tested.\n        distributionConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/DistributionConfigurationArn'\n            - description: ' The Amazon Resource Name (ARN) of the distribution configuration that defines and configures the outputs of your pipeline.'\n        infrastructureConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/InfrastructureConfigurationArn'\n            - description: ' The Amazon Resource Name (ARN) of the infrastructure configuration that defines the environment in which your image will be built and tested.'\n        imageTestsConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/ImageTestsConfiguration'\n            - description: ' The image tests configuration of the image.'\n        enhancedImageMetadataEnabled:\n          allOf:\n            - $ref: '#/components/schemas/NullableBoolean'\n            - description: ' Collects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.'\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: ' The tags of the image.'\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: ' The idempotency token used to make this request idempotent.'\n    InstanceTypeList:\n      type: array\n      items:\n        $ref: '#/components/schemas/InstanceType'\n    InstanceProfileNameType:\n      type: string\n      pattern: '^[\\w+=,.@-]+$'\n      minLength: 1\n      maxLength: 256\n    SecurityGroupIds:\n      type: array\n      items:\n        $ref: '#/components/schemas/NonEmptyString'\n    Logging:\n      type: object\n      properties:\n        s3Logs:\n          allOf:\n            - $ref: '#/components/schemas/S3Logs'\n            - description: The Amazon S3 logging configuration.\n      description: Logging configuration defines where Image Builder uploads your logs.\n    SnsTopicArn:\n      type: string\n      pattern: '^arn:aws[^:]*:sns:[^:]+:[0-9]{12}:[a-zA-Z0-9-_]{1,256}$'\n    ResourceTagMap:\n      type: object\n      minProperties: 1\n      maxProperties: 30\n      additionalProperties:\n        $ref: '#/components/schemas/TagValue'\n    CreateInfrastructureConfigurationRequest:\n      type: object\n      required:\n        - name\n        - instanceProfileName\n        - clientToken\n      title: CreateInfrastructureConfigurationRequest\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ResourceName'\n            - description: The name of the infrastructure configuration.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The description of the infrastructure configuration.\n        instanceTypes:\n          allOf:\n            - $ref: '#/components/schemas/InstanceTypeList'\n            - description: The instance types of the infrastructure configuration. You can specify one or more instance types to use for this build. The service will pick one of these instance types based on availability.\n        instanceProfileName:\n          allOf:\n            - $ref: '#/components/schemas/InstanceProfileNameType'\n            - description: The instance profile to associate with the instance used to customize your Amazon EC2 AMI.\n        securityGroupIds:\n          allOf:\n            - $ref: '#/components/schemas/SecurityGroupIds'\n            - description: The security group IDs to associate with the instance used to customize your Amazon EC2 AMI.\n        subnetId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The subnet ID in which to place the instance used to customize your Amazon EC2 AMI.\n        logging:\n          allOf:\n            - $ref: '#/components/schemas/Logging'\n            - description: The logging configuration of the infrastructure configuration.\n        keyPair:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The key pair of the infrastructure configuration. This can be used to log on to and debug the instance used to create your image.\n        terminateInstanceOnFailure:\n          allOf:\n            - $ref: '#/components/schemas/NullableBoolean'\n            - description: The terminate instance on failure setting of the infrastructure configuration. Set to false if you want Image Builder to retain the instance used to configure your AMI if the build or test phase of your workflow fails.\n        snsTopicArn:\n          allOf:\n            - $ref: '#/components/schemas/SnsTopicArn'\n            - description: The SNS topic on which to send image build events.\n        resourceTags:\n          allOf:\n            - $ref: '#/components/schemas/ResourceTagMap'\n            - description: The tags attached to the resource created by Image Builder.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags of the infrastructure configuration.\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: The idempotency token used to make this request idempotent.\n    DeleteComponentRequest:\n      type: object\n      title: DeleteComponentRequest\n      properties: {}\n    DeleteContainerRecipeRequest:\n      type: object\n      title: DeleteContainerRecipeRequest\n      properties: {}\n    DeleteDistributionConfigurationRequest:\n      type: object\n      title: DeleteDistributionConfigurationRequest\n      properties: {}\n    DeleteImagePipelineRequest:\n      type: object\n      title: DeleteImagePipelineRequest\n      properties: {}\n    DeleteImageRecipeRequest:\n      type: object\n      title: DeleteImageRecipeRequest\n      properties: {}\n    DeleteImageRequest:\n      type: object\n      title: DeleteImageRequest\n      properties: {}\n    DeleteInfrastructureConfigurationRequest:\n      type: object\n      title: DeleteInfrastructureConfigurationRequest\n      properties: {}\n    LicenseConfigurationArnList:\n      type: array\n      items:\n        $ref: '#/components/schemas/LicenseConfigurationArn'\n      minItems: 1\n      maxItems: 50\n    LaunchTemplateConfigurationList:\n      type: array\n      items:\n        $ref: '#/components/schemas/LaunchTemplateConfiguration'\n      minItems: 1\n      maxItems: 100\n    DistributionTimeoutMinutes:\n      type: integer\n      minimum: 30\n      maximum: 720\n    DistributionConfiguration:\n      type: object\n      required:\n        - timeoutMinutes\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/ImageBuilderArn'\n            - description: The Amazon Resource Name (ARN) of the distribution configuration.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ResourceName'\n            - description: The name of the distribution configuration.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The description of the distribution configuration.\n        distributions:\n          allOf:\n            - $ref: '#/components/schemas/DistributionList'\n            - description: The distribution objects that apply Region-specific settings for the deployment of the image to targeted Regions.\n        timeoutMinutes:\n          allOf:\n            - $ref: '#/components/schemas/DistributionTimeoutMinutes'\n            - description: The maximum duration in minutes for this distribution configuration.\n        dateCreated:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The date on which this distribution configuration was created.\n        dateUpdated:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The date on which this distribution configuration was last updated.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags of the distribution configuration.\n      description: A distribution configuration.\n    RegionList:\n      type: array\n      items:\n        $ref: '#/components/schemas/NonEmptyString'\n    DistributionConfigurationSummary:\n      type: object\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/ImageBuilderArn'\n            - description: The Amazon Resource Name (ARN) of the distribution configuration.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ResourceName'\n            - description: The name of the distribution configuration.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The description of the distribution configuration.\n        dateCreated:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The date on which the distribution configuration was created.\n        dateUpdated:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The date on which the distribution configuration was updated.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags associated with the distribution configuration.\n        regions:\n          allOf:\n            - $ref: '#/components/schemas/RegionList'\n            - description: A list of Regions where the container image is distributed to.\n      description: A high-level overview of a distribution configuration.\n    DistributionConfigurationSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/DistributionConfigurationSummary'\n    EbsIopsInteger:\n      type: integer\n      minimum: 100\n      maximum: 10000\n    EbsVolumeSizeInteger:\n      type: integer\n      minimum: 1\n      maximum: 16000\n    EbsVolumeType:\n      type: string\n      enum:\n        - standard\n        - io1\n        - io2\n        - gp2\n        - gp3\n        - sc1\n        - st1\n    EbsInstanceBlockDeviceSpecification:\n      type: object\n      properties:\n        encrypted:\n          allOf:\n            - $ref: '#/components/schemas/NullableBoolean'\n            - description: Use to configure device encryption.\n        deleteOnTermination:\n          allOf:\n            - $ref: '#/components/schemas/NullableBoolean'\n            - description: Use to configure delete on termination of the associated device.\n        iops:\n          allOf:\n            - $ref: '#/components/schemas/EbsIopsInteger'\n            - description: Use to configure device IOPS.\n        kmsKeyId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: Use to configure the KMS key to use when encrypting the device.\n        snapshotId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The snapshot that defines the device contents.\n        volumeSize:\n          allOf:\n            - $ref: '#/components/schemas/EbsVolumeSizeInteger'\n            - description: Use to override the device's volume size.\n        volumeType:\n          allOf:\n            - $ref: '#/components/schemas/EbsVolumeType'\n            - description: Use to override the device's volume type.\n      description: Amazon EBS-specific block device mapping specifications.\n    EmptyString:\n      type: string\n      minLength: 0\n      maxLength: 0\n    FilterName:\n      type: string\n      pattern: '^[a-zA-Z]{1,1024}$'\n    FilterValues:\n      type: array\n      items:\n        $ref: '#/components/schemas/FilterValue'\n      minItems: 1\n      maxItems: 10\n    FilterList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Filter'\n      minItems: 1\n      maxItems: 10\n    FilterValue:\n      type: string\n      pattern: '^[0-9a-zA-Z./_ :-]{1,1024}$'\n    GetComponentPolicyRequest:\n      type: object\n      title: GetComponentPolicyRequest\n      properties: {}\n    ResourcePolicyDocument:\n      type: string\n      minLength: 1\n      maxLength: 30000\n    GetComponentRequest:\n      type: object\n      title: GetComponentRequest\n      properties: {}\n    GetContainerRecipePolicyRequest:\n      type: object\n      title: GetContainerRecipePolicyRequest\n      properties: {}\n    GetContainerRecipeRequest:\n      type: object\n      title: GetContainerRecipeRequest\n      properties: {}\n    GetDistributionConfigurationRequest:\n      type: object\n      title: GetDistributionConfigurationRequest\n      properties: {}\n    GetImagePipelineRequest:\n      type: object\n      title: GetImagePipelineRequest\n      properties: {}\n    ImagePipeline:\n      type: object\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/ImageBuilderArn'\n            - description: The Amazon Resource Name (ARN) of the image pipeline.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ResourceName'\n            - description: The name of the image pipeline.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The description of the image pipeline.\n        platform:\n          allOf:\n            - $ref: '#/components/schemas/Platform'\n            - description: The platform of the image pipeline.\n        enhancedImageMetadataEnabled:\n          allOf:\n            - $ref: '#/components/schemas/NullableBoolean'\n            - description: ' Collects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.'\n        imageRecipeArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The Amazon Resource Name (ARN) of the image recipe associated with this image pipeline.\n        containerRecipeArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The Amazon Resource Name (ARN) of the container recipe that is used for this pipeline.\n        infrastructureConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The Amazon Resource Name (ARN) of the infrastructure configuration associated with this image pipeline.\n        distributionConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The Amazon Resource Name (ARN) of the distribution configuration associated with this image pipeline.\n        imageTestsConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/ImageTestsConfiguration'\n            - description: The image tests configuration of the image pipeline.\n        schedule:\n          allOf:\n            - $ref: '#/components/schemas/Schedule'\n            - description: The schedule of the image pipeline.\n        status:\n          allOf:\n            - $ref: '#/components/schemas/PipelineStatus'\n            - description: The status of the image pipeline.\n        dateCreated:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The date on which this image pipeline was created.\n        dateUpdated:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The date on which this image pipeline was last updated.\n        dateLastRun:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The date on which this image pipeline was last run.\n        dateNextRun:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The date on which this image pipeline will next be run.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags of this image pipeline.\n      description: Details of an image pipeline.\n    GetImagePolicyRequest:\n      type: object\n      title: GetImagePolicyRequest\n      properties: {}\n    GetImageRecipePolicyRequest:\n      type: object\n      title: GetImageRecipePolicyRequest\n      properties: {}\n    GetImageRecipeRequest:\n      type: object\n      title: GetImageRecipeRequest\n      properties: {}\n    ImageRecipe:\n      type: object\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/ImageBuilderArn'\n            - description: The Amazon Resource Name (ARN) of the image recipe.\n        type:\n          allOf:\n            - $ref: '#/components/schemas/ImageType'\n            - description: Specifies which type of image is created by the recipe - an AMI or a container image.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ResourceName'\n            - description: The name of the image recipe.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The description of the image recipe.\n        platform:\n          allOf:\n            - $ref: '#/components/schemas/Platform'\n            - description: The platform of the image recipe.\n        owner:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The owner of the image recipe.\n        version:\n          allOf:\n            - $ref: '#/components/schemas/VersionNumber'\n            - description: The version of the image recipe.\n        components:\n          allOf:\n            - $ref: '#/components/schemas/ComponentConfigurationList'\n            - description: The components of the image recipe.\n        parentImage:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The parent image of the image recipe.\n        blockDeviceMappings:\n          allOf:\n            - $ref: '#/components/schemas/InstanceBlockDeviceMappings'\n            - description: The block device mappings to apply when creating images from this recipe.\n        dateCreated:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The date on which this image recipe was created.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags of the image recipe.\n        workingDirectory:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The working directory to be used during build and test workflows.\n        additionalInstanceConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/AdditionalInstanceConfiguration'\n            - description: 'Before you create a new AMI, Image Builder launches temporary Amazon EC2 instances to build and test your image configuration. Instance configuration adds a layer of control over those instances. You can define settings and add scripts to run when an instance is launched from your AMI.'\n      description: An image recipe.\n    ImageVersionArnOrBuildVersionArn:\n      type: string\n      pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image/[a-z0-9-_]+/(?:(?:([0-9]+|x)\\.([0-9]+|x)\\.([0-9]+|x))|(?:[0-9]+\\.[0-9]+\\.[0-9]+/[0-9]+))$'\n    GetImageRequest:\n      type: object\n      title: GetImageRequest\n      properties: {}\n    Image:\n      type: object\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/ImageBuilderArn'\n            - description: '<p>The Amazon Resource Name (ARN) of the image.</p> <note> <p>Semantic versioning is included in each object''s Amazon Resource Name (ARN), at the level that applies to that object as follows:</p> <ol> <li> <p>Versionless ARNs and Name ARNs do not include specific values in any of the nodes. The nodes are either left off entirely, or they are specified as wildcards, for example: x.x.x.</p> </li> <li> <p>Version ARNs have only the first three nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</p> </li> <li> <p>Build version ARNs have all four nodes, and point to a specific build for a specific version of an object.</p> </li> </ol> </note>'\n        type:\n          allOf:\n            - $ref: '#/components/schemas/ImageType'\n            - description: Specifies whether this is an AMI or container image.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ResourceName'\n            - description: The name of the image.\n        version:\n          allOf:\n            - $ref: '#/components/schemas/VersionNumber'\n            - description: '<p>The semantic version of the image.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> <p> <b>Assignment:</b> For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number, and that is not open for updates.</p> <p> <b>Patterns:</b> You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.</p> <p> <b>Filtering:</b> When you retrieve or reference a resource with a semantic version, you can use wildcards (x) to filter your results. When you use a wildcard in any node, all nodes to the right of the first wildcard must also be wildcards. For example, specifying \"1.2.x\", or \"1.x.x\" works to filter list results, but neither \"1.x.2\", nor \"x.2.x\" will work. You do not have to specify the build - Image Builder automatically uses a wildcard for that, if applicable.</p> </note>'\n        platform:\n          allOf:\n            - $ref: '#/components/schemas/Platform'\n            - description: The platform of the image.\n        enhancedImageMetadataEnabled:\n          allOf:\n            - $ref: '#/components/schemas/NullableBoolean'\n            - description: ' Collects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.'\n        osVersion:\n          allOf:\n            - $ref: '#/components/schemas/OsVersion'\n            - description: 'The operating system version of the instance. For example, Amazon Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.'\n        state:\n          allOf:\n            - $ref: '#/components/schemas/ImageState'\n            - description: The state of the image.\n        imageRecipe:\n          allOf:\n            - $ref: '#/components/schemas/ImageRecipe'\n            - description: The image recipe used when creating the image.\n        containerRecipe:\n          allOf:\n            - $ref: '#/components/schemas/ContainerRecipe'\n            - description: The recipe that is used to create an Image Builder container image.\n        sourcePipelineName:\n          allOf:\n            - $ref: '#/components/schemas/ResourceName'\n            - description: The name of the image pipeline that created this image.\n        sourcePipelineArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The Amazon Resource Name (ARN) of the image pipeline that created this image.\n        infrastructureConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/InfrastructureConfiguration'\n            - description: The infrastructure used when creating this image.\n        distributionConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/DistributionConfiguration'\n            - description: The distribution configuration used when creating this image.\n        imageTestsConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/ImageTestsConfiguration'\n            - description: The image tests configuration used when creating this image.\n        dateCreated:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The date on which this image was created.\n        outputResources:\n          allOf:\n            - $ref: '#/components/schemas/OutputResources'\n            - description: The output resources produced when creating this image.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags of the image.\n      description: 'An Image Builder image. You must specify exactly one recipe for the image – either a container recipe (<code>containerRecipe</code>), which creates a container image, or an image recipe (<code>imageRecipe</code>), which creates an AMI.'\n    GetInfrastructureConfigurationRequest:\n      type: object\n      title: GetInfrastructureConfigurationRequest\n      properties: {}\n      description: ' GetInfrastructureConfiguration request object.'\n    InfrastructureConfiguration:\n      type: object\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/ImageBuilderArn'\n            - description: The Amazon Resource Name (ARN) of the infrastructure configuration.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ResourceName'\n            - description: The name of the infrastructure configuration.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The description of the infrastructure configuration.\n        instanceTypes:\n          allOf:\n            - $ref: '#/components/schemas/InstanceTypeList'\n            - description: The instance types of the infrastructure configuration.\n        instanceProfileName:\n          allOf:\n            - $ref: '#/components/schemas/InstanceProfileNameType'\n            - description: The instance profile of the infrastructure configuration.\n        securityGroupIds:\n          allOf:\n            - $ref: '#/components/schemas/SecurityGroupIds'\n            - description: The security group IDs of the infrastructure configuration.\n        subnetId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The subnet ID of the infrastructure configuration.\n        logging:\n          allOf:\n            - $ref: '#/components/schemas/Logging'\n            - description: The logging configuration of the infrastructure configuration.\n        keyPair:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The Amazon EC2 key pair of the infrastructure configuration.\n        terminateInstanceOnFailure:\n          allOf:\n            - $ref: '#/components/schemas/NullableBoolean'\n            - description: The terminate instance on failure configuration of the infrastructure configuration.\n        snsTopicArn:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The SNS topic Amazon Resource Name (ARN) of the infrastructure configuration.\n        dateCreated:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The date on which the infrastructure configuration was created.\n        dateUpdated:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The date on which the infrastructure configuration was last updated.\n        resourceTags:\n          allOf:\n            - $ref: '#/components/schemas/ResourceTagMap'\n            - description: The tags attached to the resource created by Image Builder.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags of the infrastructure configuration.\n      description: Details of the infrastructure configuration.\n    ImageType:\n      type: string\n      enum:\n        - AMI\n        - DOCKER\n    OutputResources:\n      type: object\n      properties:\n        amis:\n          allOf:\n            - $ref: '#/components/schemas/AmiList'\n            - description: The Amazon EC2 AMIs created by this image.\n        containers:\n          allOf:\n            - $ref: '#/components/schemas/ContainerList'\n            - description: Container images that the pipeline has generated and stored in the output repository.\n      description: The resources produced by this image.\n    ImagePackage:\n      type: object\n      properties:\n        packageName:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The name of the package as reported to the operating system package manager.\n        packageVersion:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The version of the package as reported to the operating system package manager.\n      description: Represents a package installed on an Image Builder image.\n    ImagePackageList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ImagePackage'\n    ImagePipelineList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ImagePipeline'\n    ImageRecipeSummary:\n      type: object\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/ImageBuilderArn'\n            - description: The Amazon Resource Name (ARN) of the image recipe.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ResourceName'\n            - description: The name of the image recipe.\n        platform:\n          allOf:\n            - $ref: '#/components/schemas/Platform'\n            - description: The platform of the image recipe.\n        owner:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The owner of the image recipe.\n        parentImage:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The parent image of the image recipe.\n        dateCreated:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The date on which this image recipe was created.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags of the image recipe.\n      description: A summary of an image recipe.\n    ImageRecipeSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ImageRecipeSummary'\n    ImageStatus:\n      type: string\n      enum:\n        - PENDING\n        - CREATING\n        - BUILDING\n        - TESTING\n        - DISTRIBUTING\n        - INTEGRATING\n        - AVAILABLE\n        - CANCELLED\n        - FAILED\n        - DEPRECATED\n        - DELETED\n    ImageSummary:\n      type: object\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/ImageBuilderArn'\n            - description: The Amazon Resource Name (ARN) of the image.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ResourceName'\n            - description: The name of the image.\n        type:\n          allOf:\n            - $ref: '#/components/schemas/ImageType'\n            - description: Specifies whether this is an AMI or container image.\n        version:\n          allOf:\n            - $ref: '#/components/schemas/VersionNumber'\n            - description: The version of the image.\n        platform:\n          allOf:\n            - $ref: '#/components/schemas/Platform'\n            - description: The platform of the image.\n        osVersion:\n          allOf:\n            - $ref: '#/components/schemas/OsVersion'\n            - description: 'The operating system version of the instance. For example, Amazon Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.'\n        state:\n          allOf:\n            - $ref: '#/components/schemas/ImageState'\n            - description: The state of the image.\n        owner:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The owner of the image.\n        dateCreated:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The date on which this image was created.\n        outputResources:\n          allOf:\n            - $ref: '#/components/schemas/OutputResources'\n            - description: The output resources produced when creating this image.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags of the image.\n      description: An image summary.\n    ImageSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ImageSummary'\n    ImageVersion:\n      type: object\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/ImageBuilderArn'\n            - description: '<p>The Amazon Resource Name (ARN) of a specific version of an Image Builder image.</p> <note> <p>Semantic versioning is included in each object''s Amazon Resource Name (ARN), at the level that applies to that object as follows:</p> <ol> <li> <p>Versionless ARNs and Name ARNs do not include specific values in any of the nodes. The nodes are either left off entirely, or they are specified as wildcards, for example: x.x.x.</p> </li> <li> <p>Version ARNs have only the first three nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</p> </li> <li> <p>Build version ARNs have all four nodes, and point to a specific build for a specific version of an object.</p> </li> </ol> </note>'\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ResourceName'\n            - description: The name of this specific version of an Image Builder image.\n        type:\n          allOf:\n            - $ref: '#/components/schemas/ImageType'\n            - description: Specifies whether this image is an AMI or a container image.\n        version:\n          allOf:\n            - $ref: '#/components/schemas/VersionNumber'\n            - description: '<p>Details for a specific version of an Image Builder image. This version follows the semantic version syntax.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> <p> <b>Assignment:</b> For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number, and that is not open for updates.</p> <p> <b>Patterns:</b> You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.</p> <p> <b>Filtering:</b> When you retrieve or reference a resource with a semantic version, you can use wildcards (x) to filter your results. When you use a wildcard in any node, all nodes to the right of the first wildcard must also be wildcards. For example, specifying \"1.2.x\", or \"1.x.x\" works to filter list results, but neither \"1.x.2\", nor \"x.2.x\" will work. You do not have to specify the build - Image Builder automatically uses a wildcard for that, if applicable.</p> </note>'\n        platform:\n          allOf:\n            - $ref: '#/components/schemas/Platform'\n            - description: 'The platform of the image version, for example \"Windows\" or \"Linux\".'\n        osVersion:\n          allOf:\n            - $ref: '#/components/schemas/OsVersion'\n            - description: 'The operating system version of the Amazon EC2 build instance. For example, Amazon Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.'\n        owner:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The owner of the image version.\n        dateCreated:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The date on which this specific version of the Image Builder image was created.\n      description: The defining characteristics of a specific version of an Image Builder image.\n    ImageVersionArn:\n      type: string\n      pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+$'\n    ImageVersionList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ImageVersion'\n    ImportComponentRequest:\n      type: object\n      required:\n        - name\n        - semanticVersion\n        - type\n        - format\n        - platform\n        - clientToken\n      title: ImportComponentRequest\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ResourceName'\n            - description: ' The name of the component.'\n        semanticVersion:\n          allOf:\n            - $ref: '#/components/schemas/VersionNumber'\n            - description: '<p>The semantic version of the component. This version follows the semantic version syntax.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> <p> <b>Filtering:</b> When you retrieve or reference a resource with a semantic version, you can use wildcards (x) to filter your results. When you use a wildcard in any node, all nodes to the right of the first wildcard must also be wildcards. For example, specifying \"1.2.x\", or \"1.x.x\" works to filter list results, but neither \"1.x.2\", nor \"x.2.x\" will work. You do not have to specify the build - Image Builder automatically uses a wildcard for that, if applicable.</p> </note>'\n        description:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The description of the component. Describes the contents of the component.\n        changeDescription:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: 'The change description of the component. Describes what change has been made in this version, or what makes this version different from other versions of this component.'\n        type:\n          allOf:\n            - $ref: '#/components/schemas/ComponentType'\n            - description: 'The type of the component denotes whether the component is used to build the image, or only to test it.'\n        format:\n          allOf:\n            - $ref: '#/components/schemas/ComponentFormat'\n            - description: The format of the resource that you want to import as a component.\n        platform:\n          allOf:\n            - $ref: '#/components/schemas/Platform'\n            - description: The platform of the component.\n        data:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The data of the component. Used to specify the data inline. Either <code>data</code> or <code>uri</code> can be used to specify the data within the component.\n        uri:\n          allOf:\n            - $ref: '#/components/schemas/Uri'\n            - description: 'The uri of the component. Must be an Amazon S3 URL and the requester must have permission to access the Amazon S3 bucket. If you use Amazon S3, you can specify component content up to your service quota. Either <code>data</code> or <code>uri</code> can be used to specify the data within the component.'\n        kmsKeyId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The ID of the KMS key that should be used to encrypt this component.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags of the component.\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: The idempotency token of the component.\n    InfrastructureConfigurationSummary:\n      type: object\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/ImageBuilderArn'\n            - description: The Amazon Resource Name (ARN) of the infrastructure configuration.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ResourceName'\n            - description: The name of the infrastructure configuration.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The description of the infrastructure configuration.\n        dateCreated:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The date on which the infrastructure configuration was created.\n        dateUpdated:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The date on which the infrastructure configuration was last updated.\n        resourceTags:\n          allOf:\n            - $ref: '#/components/schemas/ResourceTagMap'\n            - description: The tags attached to the image created by Image Builder.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags of the infrastructure configuration.\n        instanceTypes:\n          allOf:\n            - $ref: '#/components/schemas/InstanceTypeList'\n            - description: The instance types of the infrastructure configuration.\n        instanceProfileName:\n          allOf:\n            - $ref: '#/components/schemas/InstanceProfileNameType'\n            - description: The instance profile of the infrastructure configuration.\n      description: The infrastructure used when building Amazon EC2 AMIs.\n    InfrastructureConfigurationSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/InfrastructureConfigurationSummary'\n    LaunchTemplateId:\n      type: string\n      pattern: '^lt-[a-z0-9-_]{17}$'\n    LaunchTemplateConfiguration:\n      type: object\n      required:\n        - launchTemplateId\n      properties:\n        launchTemplateId:\n          allOf:\n            - $ref: '#/components/schemas/LaunchTemplateId'\n            - description: Identifies the Amazon EC2 launch template to use.\n        accountId:\n          allOf:\n            - $ref: '#/components/schemas/AccountId'\n            - description: The account ID that this configuration applies to.\n        setDefaultVersion:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: Set the specified Amazon EC2 launch template as the default launch template for the specified account.\n      description: Identifies an Amazon EC2 launch template to use for a specific account.\n    LicenseConfigurationArn:\n      type: string\n      pattern: '^arn:aws[^:]*:license-manager:[^:]+:[0-9]{12}:license-configuration:lic-[a-z0-9-_]{32}$'\n    RestrictedInteger:\n      type: integer\n      minimum: 1\n      maximum: 25\n    PaginationToken:\n      type: string\n      minLength: 1\n      maxLength: 65535\n    ListComponentBuildVersionsRequest:\n      type: object\n      required:\n        - componentVersionArn\n      title: ListComponentBuildVersionsRequest\n      properties:\n        componentVersionArn:\n          allOf:\n            - $ref: '#/components/schemas/ComponentVersionArn'\n            - description: The component version Amazon Resource Name (ARN) whose versions you want to list.\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/RestrictedInteger'\n            - description: The maximum items to return in a request.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: A token to specify where to start paginating. This is the NextToken from a previously truncated response.\n    Ownership:\n      type: string\n      enum:\n        - Self\n        - Shared\n        - Amazon\n    ListComponentsRequest:\n      type: object\n      title: ListComponentsRequest\n      properties:\n        owner:\n          allOf:\n            - $ref: '#/components/schemas/Ownership'\n            - description: 'The owner defines which components you want to list. By default, this request will only show components owned by your account. You can use this field to specify if you want to view components owned by yourself, by Amazon, or those components that have been shared with you by other customers.'\n        filters:\n          allOf:\n            - $ref: '#/components/schemas/FilterList'\n            - description: '<p>Use the following filters to streamline results:</p> <ul> <li> <p> <code>description</code> </p> </li> <li> <p> <code>name</code> </p> </li> <li> <p> <code>platform</code> </p> </li> <li> <p> <code>supportedOsVersion</code> </p> </li> <li> <p> <code>type</code> </p> </li> <li> <p> <code>version</code> </p> </li> </ul>'\n        byName:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: Returns the list of component build versions for the specified name.\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/RestrictedInteger'\n            - description: The maximum items to return in a request.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: A token to specify where to start paginating. This is the NextToken from a previously truncated response.\n    ListContainerRecipesRequest:\n      type: object\n      title: ListContainerRecipesRequest\n      properties:\n        owner:\n          allOf:\n            - $ref: '#/components/schemas/Ownership'\n            - description: 'Returns container recipes belonging to the specified owner, that have been shared with you. You can omit this field to return container recipes belonging to your account.'\n        filters:\n          allOf:\n            - $ref: '#/components/schemas/FilterList'\n            - description: '<p>Use the following filters to streamline results:</p> <ul> <li> <p> <code>containerType</code> </p> </li> <li> <p> <code>name</code> </p> </li> <li> <p> <code>parentImage</code> </p> </li> <li> <p> <code>platform</code> </p> </li> </ul>'\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/RestrictedInteger'\n            - description: The maximum number of results to return in the list.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: 'Provides a token for pagination, which determines where to begin the next set of results when the current set reaches the maximum for one request.'\n    ListDistributionConfigurationsRequest:\n      type: object\n      title: ListDistributionConfigurationsRequest\n      properties:\n        filters:\n          allOf:\n            - $ref: '#/components/schemas/FilterList'\n            - description: You can filter on <code>name</code> to streamline results.\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/RestrictedInteger'\n            - description: The maximum items to return in a request.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: A token to specify where to start paginating. This is the NextToken from a previously truncated response.\n    ListImageBuildVersionsRequest:\n      type: object\n      required:\n        - imageVersionArn\n      title: ListImageBuildVersionsRequest\n      properties:\n        imageVersionArn:\n          allOf:\n            - $ref: '#/components/schemas/ImageVersionArn'\n            - description: The Amazon Resource Name (ARN) of the image whose build versions you want to retrieve.\n        filters:\n          allOf:\n            - $ref: '#/components/schemas/FilterList'\n            - description: '<p>Use the following filters to streamline results:</p> <ul> <li> <p> <code>name</code> </p> </li> <li> <p> <code>osVersion</code> </p> </li> <li> <p> <code>platform</code> </p> </li> <li> <p> <code>type</code> </p> </li> <li> <p> <code>version</code> </p> </li> </ul>'\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/RestrictedInteger'\n            - description: The maximum items to return in a request.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: A token to specify where to start paginating. This is the NextToken from a previously truncated response.\n    ListImagePackagesRequest:\n      type: object\n      required:\n        - imageBuildVersionArn\n      title: ListImagePackagesRequest\n      properties:\n        imageBuildVersionArn:\n          allOf:\n            - $ref: '#/components/schemas/ImageBuildVersionArn'\n            - description: Filter results for the ListImagePackages request by the Image Build Version ARN\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/RestrictedInteger'\n            - description: The maxiumum number of results to return from the ListImagePackages request.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: A token to specify where to start paginating. This is the NextToken from a previously truncated response.\n    ListImagePipelineImagesRequest:\n      type: object\n      required:\n        - imagePipelineArn\n      title: ListImagePipelineImagesRequest\n      properties:\n        imagePipelineArn:\n          allOf:\n            - $ref: '#/components/schemas/ImagePipelineArn'\n            - description: The Amazon Resource Name (ARN) of the image pipeline whose images you want to view.\n        filters:\n          allOf:\n            - $ref: '#/components/schemas/FilterList'\n            - description: '<p>Use the following filters to streamline results:</p> <ul> <li> <p> <code>name</code> </p> </li> <li> <p> <code>version</code> </p> </li> </ul>'\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/RestrictedInteger'\n            - description: The maximum items to return in a request.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: A token to specify where to start paginating. This is the NextToken from a previously truncated response.\n    ListImagePipelinesRequest:\n      type: object\n      title: ListImagePipelinesRequest\n      properties:\n        filters:\n          allOf:\n            - $ref: '#/components/schemas/FilterList'\n            - description: '<p>Use the following filters to streamline results:</p> <ul> <li> <p> <code>description</code> </p> </li> <li> <p> <code>distributionConfigurationArn</code> </p> </li> <li> <p> <code>imageRecipeArn</code> </p> </li> <li> <p> <code>infrastructureConfigurationArn</code> </p> </li> <li> <p> <code>name</code> </p> </li> <li> <p> <code>status</code> </p> </li> </ul>'\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/RestrictedInteger'\n            - description: The maximum items to return in a request.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: A token to specify where to start paginating. This is the NextToken from a previously truncated response.\n    ListImageRecipesRequest:\n      type: object\n      title: ListImageRecipesRequest\n      properties:\n        owner:\n          allOf:\n            - $ref: '#/components/schemas/Ownership'\n            - description: 'The owner defines which image recipes you want to list. By default, this request will only show image recipes owned by your account. You can use this field to specify if you want to view image recipes owned by yourself, by Amazon, or those image recipes that have been shared with you by other customers.'\n        filters:\n          allOf:\n            - $ref: '#/components/schemas/FilterList'\n            - description: '<p>Use the following filters to streamline results:</p> <ul> <li> <p> <code>name</code> </p> </li> <li> <p> <code>parentImage</code> </p> </li> <li> <p> <code>platform</code> </p> </li> </ul>'\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/RestrictedInteger'\n            - description: The maximum items to return in a request.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: A token to specify where to start paginating. This is the NextToken from a previously truncated response.\n    ListImagesRequest:\n      type: object\n      title: ListImagesRequest\n      properties:\n        owner:\n          allOf:\n            - $ref: '#/components/schemas/Ownership'\n            - description: 'The owner defines which images you want to list. By default, this request will only show images owned by your account. You can use this field to specify if you want to view images owned by yourself, by Amazon, or those images that have been shared with you by other customers.'\n        filters:\n          allOf:\n            - $ref: '#/components/schemas/FilterList'\n            - description: '<p>Use the following filters to streamline results:</p> <ul> <li> <p> <code>name</code> </p> </li> <li> <p> <code>osVersion</code> </p> </li> <li> <p> <code>platform</code> </p> </li> <li> <p> <code>type</code> </p> </li> <li> <p> <code>version</code> </p> </li> </ul>'\n        byName:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: Requests a list of images with a specific recipe name.\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/RestrictedInteger'\n            - description: The maximum items to return in a request.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: A token to specify where to start paginating. This is the NextToken from a previously truncated response.\n        includeDeprecated:\n          allOf:\n            - $ref: '#/components/schemas/NullableBoolean'\n            - description: Includes deprecated images in the response list.\n    ListInfrastructureConfigurationsRequest:\n      type: object\n      title: ListInfrastructureConfigurationsRequest\n      properties:\n        filters:\n          allOf:\n            - $ref: '#/components/schemas/FilterList'\n            - description: You can filter on <code>name</code> to streamline results.\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/RestrictedInteger'\n            - description: The maximum items to return in a request.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: A token to specify where to start paginating. This is the NextToken from a previously truncated response.\n    ListTagsForResourceRequest:\n      type: object\n      title: ListTagsForResourceRequest\n      properties: {}\n    PutComponentPolicyRequest:\n      type: object\n      required:\n        - componentArn\n        - policy\n      title: PutComponentPolicyRequest\n      properties:\n        componentArn:\n          allOf:\n            - $ref: '#/components/schemas/ComponentBuildVersionArn'\n            - description: The Amazon Resource Name (ARN) of the component that this policy should be applied to.\n        policy:\n          allOf:\n            - $ref: '#/components/schemas/ResourcePolicyDocument'\n            - description: The policy to apply.\n    PutContainerRecipePolicyRequest:\n      type: object\n      required:\n        - containerRecipeArn\n        - policy\n      title: PutContainerRecipePolicyRequest\n      properties:\n        containerRecipeArn:\n          allOf:\n            - $ref: '#/components/schemas/ContainerRecipeArn'\n            - description: The Amazon Resource Name (ARN) of the container recipe that this policy should be applied to.\n        policy:\n          allOf:\n            - $ref: '#/components/schemas/ResourcePolicyDocument'\n            - description: The policy to apply to the container recipe.\n    PutImagePolicyRequest:\n      type: object\n      required:\n        - imageArn\n        - policy\n      title: PutImagePolicyRequest\n      properties:\n        imageArn:\n          allOf:\n            - $ref: '#/components/schemas/ImageBuildVersionArn'\n            - description: The Amazon Resource Name (ARN) of the image that this policy should be applied to.\n        policy:\n          allOf:\n            - $ref: '#/components/schemas/ResourcePolicyDocument'\n            - description: The policy to apply.\n    PutImageRecipePolicyRequest:\n      type: object\n      required:\n        - imageRecipeArn\n        - policy\n      title: PutImageRecipePolicyRequest\n      properties:\n        imageRecipeArn:\n          allOf:\n            - $ref: '#/components/schemas/ImageRecipeArn'\n            - description: The Amazon Resource Name (ARN) of the image recipe that this policy should be applied to.\n        policy:\n          allOf:\n            - $ref: '#/components/schemas/ResourcePolicyDocument'\n            - description: The policy to apply.\n    StartImagePipelineExecutionRequest:\n      type: object\n      required:\n        - imagePipelineArn\n        - clientToken\n      title: StartImagePipelineExecutionRequest\n      properties:\n        imagePipelineArn:\n          allOf:\n            - $ref: '#/components/schemas/ImagePipelineArn'\n            - description: The Amazon Resource Name (ARN) of the image pipeline that you want to manually invoke.\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: The idempotency token used to make this request idempotent.\n    TagKeyList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TagKey'\n      minItems: 1\n      maxItems: 50\n    TagResourceRequest:\n      type: object\n      required:\n        - tags\n      title: TagResourceRequest\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags to apply to the resource.\n    UntagResourceRequest:\n      type: object\n      title: UntagResourceRequest\n      properties: {}\n    UpdateDistributionConfigurationRequest:\n      type: object\n      required:\n        - distributionConfigurationArn\n        - distributions\n        - clientToken\n      title: UpdateDistributionConfigurationRequest\n      properties:\n        distributionConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/DistributionConfigurationArn'\n            - description: The Amazon Resource Name (ARN) of the distribution configuration that you want to update.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The description of the distribution configuration.\n        distributions:\n          allOf:\n            - $ref: '#/components/schemas/DistributionList'\n            - description: The distributions of the distribution configuration.\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: The idempotency token of the distribution configuration.\n    UpdateImagePipelineRequest:\n      type: object\n      required:\n        - imagePipelineArn\n        - infrastructureConfigurationArn\n        - clientToken\n      title: UpdateImagePipelineRequest\n      properties:\n        imagePipelineArn:\n          allOf:\n            - $ref: '#/components/schemas/ImagePipelineArn'\n            - description: The Amazon Resource Name (ARN) of the image pipeline that you want to update.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The description of the image pipeline.\n        imageRecipeArn:\n          allOf:\n            - $ref: '#/components/schemas/ImageRecipeArn'\n            - description: The Amazon Resource Name (ARN) of the image recipe that will be used to configure images updated by this image pipeline.\n        containerRecipeArn:\n          allOf:\n            - $ref: '#/components/schemas/ContainerRecipeArn'\n            - description: The Amazon Resource Name (ARN) of the container pipeline to update.\n        infrastructureConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/InfrastructureConfigurationArn'\n            - description: The Amazon Resource Name (ARN) of the infrastructure configuration that will be used to build images updated by this image pipeline.\n        distributionConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/DistributionConfigurationArn'\n            - description: The Amazon Resource Name (ARN) of the distribution configuration that will be used to configure and distribute images updated by this image pipeline.\n        imageTestsConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/ImageTestsConfiguration'\n            - description: The image test configuration of the image pipeline.\n        enhancedImageMetadataEnabled:\n          allOf:\n            - $ref: '#/components/schemas/NullableBoolean'\n            - description: ' Collects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.'\n        schedule:\n          allOf:\n            - $ref: '#/components/schemas/Schedule'\n            - description: The schedule of the image pipeline.\n        status:\n          allOf:\n            - $ref: '#/components/schemas/PipelineStatus'\n            - description: The status of the image pipeline.\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: The idempotency token used to make this request idempotent.\n    UpdateInfrastructureConfigurationRequest:\n      type: object\n      required:\n        - infrastructureConfigurationArn\n        - instanceProfileName\n        - clientToken\n      title: UpdateInfrastructureConfigurationRequest\n      properties:\n        infrastructureConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/InfrastructureConfigurationArn'\n            - description: The Amazon Resource Name (ARN) of the infrastructure configuration that you want to update.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The description of the infrastructure configuration.\n        instanceTypes:\n          allOf:\n            - $ref: '#/components/schemas/InstanceTypeList'\n            - description: The instance types of the infrastructure configuration. You can specify one or more instance types to use for this build. The service will pick one of these instance types based on availability.\n        instanceProfileName:\n          allOf:\n            - $ref: '#/components/schemas/InstanceProfileNameType'\n            - description: The instance profile to associate with the instance used to customize your Amazon EC2 AMI.\n        securityGroupIds:\n          allOf:\n            - $ref: '#/components/schemas/SecurityGroupIds'\n            - description: The security group IDs to associate with the instance used to customize your Amazon EC2 AMI.\n        subnetId:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The subnet ID to place the instance used to customize your Amazon EC2 AMI in.\n        logging:\n          allOf:\n            - $ref: '#/components/schemas/Logging'\n            - description: The logging configuration of the infrastructure configuration.\n        keyPair:\n          allOf:\n            - $ref: '#/components/schemas/NonEmptyString'\n            - description: The key pair of the infrastructure configuration. This can be used to log on to and debug the instance used to create your image.\n        terminateInstanceOnFailure:\n          allOf:\n            - $ref: '#/components/schemas/NullableBoolean'\n            - description: The terminate instance on failure setting of the infrastructure configuration. Set to false if you want Image Builder to retain the instance used to configure your AMI if the build or test phase of your workflow fails.\n        snsTopicArn:\n          allOf:\n            - $ref: '#/components/schemas/SnsTopicArn'\n            - description: The SNS topic on which to send image build events.\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: The idempotency token used to make this request idempotent.\n        resourceTags:\n          allOf:\n            - $ref: '#/components/schemas/ResourceTagMap'\n            - description: The tags attached to the resource created by Image Builder.\nsecurity:\n  - hmac: []\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@3237843a76543b0ee2c1e5f65e28ec6b526e8700/-/blob/APIs/amazonaws.com/imagebuilder/2019-12-02/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/3237843a76543b0ee2c1e5f65e28ec6b526e8700/APIs/amazonaws.com/imagebuilder/2019-12-02/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/GetImagePolicy#imageArn\": at 1:201809: get: operation \"GetImagePolicy\": at 1:201816: parse path \"/GetImagePolicy#imageArn\": path MUST NOT contain a fragment"
}