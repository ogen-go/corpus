{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "iva-api.com-2.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/iva-api.com-2.0-swagger.yaml",
			"byteSize": 887148,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    x-twitter: VideoDetective\n  description: Your Gateway to Building Incredible Movie, TV, and Game Content Discovery\n    Experiences.\n  license:\n    name: Terms and Conditions\n    url: https://developer.iva-api.com/terms\n  title: Entertainment Express\n  version: \"2.0\"\n  x-apisguru-categories:\n    - media\n  x-logo:\n    url: https://twitter.com/VideoDetective/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: https://ee.iva-api.com/specs/openapi\n      version: \"2.0\"\n  x-providerName: iva-api.com\nexternalDocs:\n  description: For addition information about this api visit the external documentation.\n  url: https://developer.iva-api.com/docs/v2/getting-started\ntags:\n  - name: Analytics\n  - name: Celebrity\n  - name: Changes\n  - name: Charts\n  - name: Common\n  - name: Entertainment\n  - name: ExternalIds\n  - name: Fandango\n  - name: Find\n  - name: Games\n  - name: GoWatchIt\n  - name: Images\n  - name: Metacritic\n  - name: Movies\n  - name: My\n  - name: People\n  - name: Rev\n  - name: SDKs\n  - name: Shows\n  - name: Tests\n  - name: TheatricalMovies\n  - name: TvGrid\n  - name: Videos\n  - name: XroadMedia\npaths:\n  /Analytics/City/:\n    get:\n      deprecated: false\n      description: No required parameters, DateValue defaults to Today..\n      operationId: GetAnalyticsViewersByCity\n      parameters:\n        - description: Report Tag filter.\n          in: query\n          name: ReportTag\n          required: false\n          schema:\n            type: string\n        - description: Report start date\n          in: query\n          name: Start\n          required: false\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Report end date\n          in: query\n          name: End\n          required: false\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Days spanned by report\n          in: query\n          name: DateValue\n          required: false\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - two_days_ago\n              - last_7_days\n              - last_14_days\n              - last_28_days\n              - last_60_days\n              - last_90_days\n              - last_365_days\n        - description: Number of records returned from top of response\n          in: query\n          name: Limit\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CityResponse\"\n                title: List\u003cCityResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CityResponse\"\n                title: List\u003cCityResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CityResponse\"\n                title: List\u003cCityResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CityResponse\"\n                title: List\u003cCityResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Viewers by City.\n      tags:\n        - Analytics\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Analytics/Country/:\n    get:\n      deprecated: false\n      description: No required parameters, DateValue defaults to Today.\n      operationId: GetAnalyticsViewersByCountry\n      parameters:\n        - description: Report Tag filter.\n          in: query\n          name: ReportTag\n          required: false\n          schema:\n            type: string\n        - description: Report start date\n          in: query\n          name: Start\n          required: false\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Report end date\n          in: query\n          name: End\n          required: false\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Days spanned by report\n          in: query\n          name: DateValue\n          required: false\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - two_days_ago\n              - last_7_days\n              - last_14_days\n              - last_28_days\n              - last_60_days\n              - last_90_days\n              - last_365_days\n        - description: Number of records returned from top of response.\n          in: query\n          name: Limit\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AnalyticsCountryResponse\"\n                title: List\u003cAnalyticsCountryResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AnalyticsCountryResponse\"\n                title: List\u003cAnalyticsCountryResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AnalyticsCountryResponse\"\n                title: List\u003cAnalyticsCountryResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AnalyticsCountryResponse\"\n                title: List\u003cAnalyticsCountryResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Viewers by Country.\n      tags:\n        - Analytics\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Analytics/EngagementActions/:\n    get:\n      deprecated: false\n      description: No required parameters, DateValue defaults to Today.\n      operationId: GetAnalyticEngagementActions\n      parameters:\n        - description: Report Tag filter.\n          in: query\n          name: ReportTag\n          required: false\n          schema:\n            type: string\n        - description: Report start date\n          in: query\n          name: Start\n          required: false\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Report end date\n          in: query\n          name: End\n          required: false\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Days spanned by report\n          in: query\n          name: DateValue\n          required: false\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - two_days_ago\n              - last_7_days\n              - last_14_days\n              - last_28_days\n              - last_60_days\n              - last_90_days\n              - last_365_days\n        - description: Number of records returned from top of response\n          in: query\n          name: Limit\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/EngagementActionsResponse\"\n                title: List\u003cEngagementActionsResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/EngagementActionsResponse\"\n                title: List\u003cEngagementActionsResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/EngagementActionsResponse\"\n                title: List\u003cEngagementActionsResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/EngagementActionsResponse\"\n                title: List\u003cEngagementActionsResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Visits by IP.\n      tags:\n        - Analytics\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Analytics/EngagementTimes/:\n    get:\n      deprecated: false\n      description: No required parameters, DateValue defaults to Today.\n      operationId: GetAnalyticsEngagementTimes\n      parameters:\n        - description: Report Tag filter.\n          in: query\n          name: ReportTag\n          required: false\n          schema:\n            type: string\n        - description: Report start date\n          in: query\n          name: Start\n          required: false\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Report end date\n          in: query\n          name: End\n          required: false\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Days spanned by report\n          in: query\n          name: DateValue\n          required: false\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - two_days_ago\n              - last_7_days\n              - last_14_days\n              - last_28_days\n              - last_60_days\n              - last_90_days\n              - last_365_days\n        - description: Number of records returned from top of response\n          in: query\n          name: Limit\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/EngagementTimesResponse\"\n                title: List\u003cEngagementTimesResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/EngagementTimesResponse\"\n                title: List\u003cEngagementTimesResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/EngagementTimesResponse\"\n                title: List\u003cEngagementTimesResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/EngagementTimesResponse\"\n                title: List\u003cEngagementTimesResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: View count by Frequency.\n      tags:\n        - Analytics\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Analytics/GBUsage/:\n    get:\n      deprecated: false\n      description: Requires a valid Customer ID.\n      operationId: GetAnalyticsGBUsage\n      parameters:\n        - description: Report Tag filter.\n          in: query\n          name: ReportTag\n          required: false\n          schema:\n            type: string\n        - description: Report month\n          in: query\n          name: Month\n          required: false\n          x-nullable: false\n          schema:\n            type: string\n            enum:\n              - January\n              - February\n              - March\n              - April\n              - May\n              - June\n              - July\n              - August\n              - September\n              - October\n              - November\n              - December\n        - description: Report year\n          in: query\n          name: Year\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GBUsageResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/GBUsageResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/GBUsageResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/GBUsageResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: GB Usage.\n      tags:\n        - Analytics\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Analytics/MostActive/:\n    get:\n      deprecated: false\n      description: No required parameters, DateValue defaults to Today.\n      operationId: GetAnalyticsMostActive\n      parameters:\n        - description: Report Tag filter.\n          in: query\n          name: ReportTag\n          required: false\n          schema:\n            type: string\n        - description: Days spanned by report\n          in: query\n          name: DateValue\n          required: false\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - two_days_ago\n              - last_7_days\n              - last_14_days\n              - last_28_days\n              - last_60_days\n              - last_90_days\n              - last_365_days\n        - description: Number of records returned from top of response\n          in: query\n          name: Limit\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MostActiveResponse\"\n                title: List\u003cMostActiveResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MostActiveResponse\"\n                title: List\u003cMostActiveResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MostActiveResponse\"\n                title: List\u003cMostActiveResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MostActiveResponse\"\n                title: List\u003cMostActiveResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Most Active Visitors by IP.\n      tags:\n        - Analytics\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Analytics/PlatformHardware/:\n    get:\n      deprecated: false\n      description: No required parameters, DateValue defaults to Today.\n      operationId: GetAnalyticsViewersByPlatformHardware\n      parameters:\n        - description: Report Tag filter.\n          in: query\n          name: ReportTag\n          required: false\n          schema:\n            type: string\n        - description: Report start date\n          in: query\n          name: Start\n          required: false\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Report end date\n          in: query\n          name: End\n          required: false\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Days spanned by report\n          in: query\n          name: DateValue\n          required: false\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - two_days_ago\n              - last_7_days\n              - last_14_days\n              - last_28_days\n              - last_60_days\n              - last_90_days\n              - last_365_days\n        - description: Number of records returned from top of response\n          in: query\n          name: Limit\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PlatformHardwareResponse\"\n                title: List\u003cPlatformHardwareResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PlatformHardwareResponse\"\n                title: List\u003cPlatformHardwareResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PlatformHardwareResponse\"\n                title: List\u003cPlatformHardwareResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PlatformHardwareResponse\"\n                title: List\u003cPlatformHardwareResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Viewers by Platform Hardware.\n      tags:\n        - Analytics\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Analytics/PlatformOS/:\n    get:\n      deprecated: false\n      description: No required parameters, DateValue defaults to Today.\n      operationId: GetAnalyticsViewersByPlatformOS\n      parameters:\n        - description: Report Tag filter.\n          in: query\n          name: ReportTag\n          required: false\n          schema:\n            type: string\n        - description: Report start date\n          in: query\n          name: Start\n          required: false\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Report end date\n          in: query\n          name: End\n          required: false\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Days spanned by report\n          in: query\n          name: DateValue\n          required: false\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - two_days_ago\n              - last_7_days\n              - last_14_days\n              - last_28_days\n              - last_60_days\n              - last_90_days\n              - last_365_days\n        - description: Number of records returned from top of response\n          in: query\n          name: Limit\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PlatformOSResponse\"\n                title: List\u003cPlatformOSResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PlatformOSResponse\"\n                title: List\u003cPlatformOSResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PlatformOSResponse\"\n                title: List\u003cPlatformOSResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PlatformOSResponse\"\n                title: List\u003cPlatformOSResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Viewers by Platform OS.\n      tags:\n        - Analytics\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Analytics/RecentVisitors/:\n    get:\n      deprecated: false\n      description: No required parameters, DateValue defaults to Today.\n      operationId: GetAnalyticsRecentVisitors\n      parameters:\n        - description: Report Tag filter.\n          in: query\n          name: ReportTag\n          required: false\n          schema:\n            type: string\n        - description: Number of records returned from top of response\n          in: query\n          name: Limit\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/RecentVisitorsResponse\"\n                title: List\u003cRecentVisitorsResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/RecentVisitorsResponse\"\n                title: List\u003cRecentVisitorsResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/RecentVisitorsResponse\"\n                title: List\u003cRecentVisitorsResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/RecentVisitorsResponse\"\n                title: List\u003cRecentVisitorsResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Most Recent Visitors by Time.\n      tags:\n        - Analytics\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Analytics/Summary/:\n    get:\n      deprecated: false\n      description: Requires a valid Customer ID.\n      operationId: GetAnalyticsSummary\n      parameters:\n        - description: Report Tag filter.\n          in: query\n          name: ReportTag\n          required: false\n          schema:\n            type: string\n        - description: Days spanned by report\n          in: query\n          name: DateValue\n          required: false\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - two_days_ago\n              - last_7_days\n              - last_14_days\n              - last_28_days\n              - last_60_days\n              - last_90_days\n              - last_365_days\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SummaryResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SummaryResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/SummaryResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SummaryResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Summary of views, viewers, etc.\n      tags:\n        - Analytics\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Analytics/TitleReport/:\n    get:\n      deprecated: false\n      description: Requires a valid published ID.\n      operationId: GetAnalyticsTitleReport\n      parameters:\n        - description: Title published ID.\n          in: query\n          name: PublishedId\n          required: true\n          schema:\n            type: string\n        - description: Report start date\n          in: query\n          name: Start\n          required: false\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Report end date\n          in: query\n          name: End\n          required: false\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TitleReportResponse\"\n                title: List\u003cTitleReportResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TitleReportResponse\"\n                title: List\u003cTitleReportResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TitleReportResponse\"\n                title: List\u003cTitleReportResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TitleReportResponse\"\n                title: List\u003cTitleReportResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Title Report by Video ID.\n      tags:\n        - Analytics\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Analytics/VideoLog/:\n    get:\n      deprecated: false\n      description: No required parameters, DateValue defaults to Today.\n      operationId: GetAnalyticsViewsByVideoLog\n      parameters:\n        - description: Report Tag filter.\n          in: query\n          name: ReportTag\n          required: false\n          schema:\n            type: string\n        - description: Report start date\n          in: query\n          name: Start\n          required: false\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Report end date\n          in: query\n          name: End\n          required: false\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Days spanned by report\n          in: query\n          name: DateValue\n          required: false\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - two_days_ago\n              - last_7_days\n              - last_14_days\n              - last_28_days\n              - last_60_days\n              - last_90_days\n              - last_365_days\n        - description: Number of records returned from top of response\n          in: query\n          name: Limit\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/VideoLogResponse\"\n                title: List\u003cVideoLogResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/VideoLogResponse\"\n                title: List\u003cVideoLogResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/VideoLogResponse\"\n                title: List\u003cVideoLogResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/VideoLogResponse\"\n                title: List\u003cVideoLogResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Views by Video.\n      tags:\n        - Analytics\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Analytics/Viewers/:\n    get:\n      deprecated: false\n      description: Optional DateValue for length of report.\n      operationId: GetAnalyticsViewers\n      parameters:\n        - description: Report Tag filter.\n          in: query\n          name: ReportTag\n          required: false\n          schema:\n            type: string\n        - description: Days spanned by report\n          in: query\n          name: DateValue\n          required: false\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - two_days_ago\n              - last_7_days\n              - last_14_days\n              - last_28_days\n              - last_60_days\n              - last_90_days\n              - last_365_days\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ViewersResponse\"\n                title: List\u003cViewersResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ViewersResponse\"\n                title: List\u003cViewersResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ViewersResponse\"\n                title: List\u003cViewersResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ViewersResponse\"\n                title: List\u003cViewersResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Viewers by Day.\n      tags:\n        - Analytics\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Analytics/Views/:\n    get:\n      deprecated: false\n      description: Optional DateValue for length of report.\n      operationId: GetAnalyticsViews\n      parameters:\n        - description: Report Tag filter.\n          in: query\n          name: ReportTag\n          required: false\n          schema:\n            type: string\n        - description: Days spanned by report\n          in: query\n          name: DateValue\n          required: false\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - two_days_ago\n              - last_7_days\n              - last_14_days\n              - last_28_days\n              - last_60_days\n              - last_90_days\n              - last_365_days\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ViewsResponse\"\n                title: List\u003cViewsResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ViewsResponse\"\n                title: List\u003cViewsResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ViewsResponse\"\n                title: List\u003cViewsResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ViewsResponse\"\n                title: List\u003cViewsResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Views by Day.\n      tags:\n        - Analytics\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Analytics/WebBrowsers/:\n    get:\n      deprecated: false\n      description: No required parameters, DateValue defaults to Today.\n      operationId: GetAnalyticsViewersByWebBrowsers\n      parameters:\n        - description: Report Tag filter.\n          in: query\n          name: ReportTag\n          required: false\n          schema:\n            type: string\n        - description: Report start date\n          in: query\n          name: Start\n          required: false\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Report end date\n          in: query\n          name: End\n          required: false\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Days spanned by report\n          in: query\n          name: DateValue\n          required: false\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - two_days_ago\n              - last_7_days\n              - last_14_days\n              - last_28_days\n              - last_60_days\n              - last_90_days\n              - last_365_days\n        - description: Number of records returned from top of response\n          in: query\n          name: Limit\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/WebBrowsersResponse\"\n                title: List\u003cWebBrowsersResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/WebBrowsersResponse\"\n                title: List\u003cWebBrowsersResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/WebBrowsersResponse\"\n                title: List\u003cWebBrowsersResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/WebBrowsersResponse\"\n                title: List\u003cWebBrowsersResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Viewers by Web Browser.\n      tags:\n        - Analytics\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Celebrity/RankedSearch/:\n    get:\n      deprecated: false\n      description: Find celebrity using name ordered by rank.\n      operationId: GetCelebrityRanked\n      parameters:\n        - in: query\n          name: StartsWith\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CelebrityRankedResponse\"\n                title: List\u003cCelebrityRankedResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CelebrityRankedResponse\"\n                title: List\u003cCelebrityRankedResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CelebrityRankedResponse\"\n                title: List\u003cCelebrityRankedResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CelebrityRankedResponse\"\n                title: List\u003cCelebrityRankedResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Find Celebrity by Name ordered by rank.\n      tags:\n        - Celebrity\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Celebrity/Search/:\n    get:\n      deprecated: false\n      description: Search celebrity meta data and images.  Each image in our database is\n        related to a specific movie, TV or game title and is promotional of that\n        title.  If you have title pages or articles about that title, then\n        offering an image gallery on that page is obviously promotional.  If you\n        are doing editorial about another topic and use an image from IVA, you\n        need to reference or otherwise indicate the title of the film, TV show\n        or game so as to be promotional.\n      operationId: SearchCelebrityGet\n      parameters:\n        - in: query\n          name: Package\n          required: false\n          schema:\n            type: string\n        - description: \"Search person using one or more Ids.  Ex:  Person/123\"\n          in: query\n          name: Ids\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Rows to skip, used for paging. Default is 0.\n          in: query\n          name: Skip\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Rows to return, used for paging. Default is 10, limit is 50.\n          in: query\n          name: Take\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Include sub objects from the person\n          in: query\n          name: Includes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - Images\n                - ExternalIds\n                - Descriptions\n                - AlternateNames\n              type: string\n        - description: Filter results based on Name.\n          in: query\n          name: Name\n          required: false\n          schema:\n            type: string\n        - description: People with images with estimated age.\n          in: query\n          name: FaceDetails_Age\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: People images with a beard.\n          in: query\n          name: FaceDetails_Beard\n          required: false\n          schema:\n            type: boolean\n        - description: People images with a mustache.\n          in: query\n          name: FaceDetails_Mustache\n          required: false\n          schema:\n            type: boolean\n        - description: Filter People images by emotions.\n          in: query\n          name: FaceDetails_Emotions\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - UNKNOWN\n                - HAPPY\n                - SAD\n                - ANGRY\n                - CONFUSED\n                - DISGUSTED\n                - SURPRISED\n                - CALM\n              type: string\n              nullable: false\n        - description: People images wearing eyeglasses.\n          in: query\n          name: FaceDetails_Eyeglasses\n          required: false\n          schema:\n            type: boolean\n        - description: People images wearing sunglasses.\n          in: query\n          name: FaceDetails_Sunglasses\n          required: false\n          schema:\n            type: boolean\n        - description: People images with eyes open.\n          in: query\n          name: FaceDetails_EyesOpen\n          required: false\n          schema:\n            type: boolean\n        - description: People images with mouth open.\n          in: query\n          name: FaceDetails_MouthOpen\n          required: false\n          schema:\n            type: boolean\n        - description: People images based on gender.\n          in: query\n          name: FaceDetails_Gender\n          required: false\n          schema:\n            type: string\n            enum:\n              - UNKNOWN\n              - Male\n              - Female\n        - description: People images with smile.\n          in: query\n          name: FaceDetails_Smile\n          required: false\n          schema:\n            type: boolean\n        - description: People with images greater than or equal to image height.\n          in: query\n          name: MinImageHeight\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: People with images greater than or equal to image width.\n          in: query\n          name: MinImageWidth\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: People with images of type.\n          in: query\n          name: ImageType\n          required: false\n          schema:\n            type: string\n            enum:\n              - UNKNOWN\n              - Poster\n              - Photo\n              - Portrait\n        - description: People with image violence scores.\n          in: query\n          name: ImageViolence\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - \"1\"\n                - \"2\"\n                - \"3\"\n                - \"4\"\n                - \"5\"\n              format: int32\n              type: integer\n              nullable: false\n        - description: People with image sexuality scores.\n          in: query\n          name: ImageSexuality\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - \"1\"\n                - \"2\"\n                - \"3\"\n                - \"4\"\n                - \"5\"\n              format: int32\n              type: integer\n              nullable: false\n        - description: People with image containing tags.\n          in: query\n          name: ImageTags\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Limit People with official images.\n          in: query\n          name: OfficialImage\n          required: false\n          schema:\n            type: boolean\n        - description: \"People with images from EntertainmentIds.  Ex: Movie/1234\"\n          in: query\n          name: ImageEntertainmentIds\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Filter by birth name.\n          in: query\n          name: BirthName\n          required: false\n          schema:\n            type: string\n        - description: Filter people by gender. (m or f)\n          in: query\n          name: Gender\n          required: false\n          schema:\n            type: string\n            enum:\n              - m\n              - f\n        - description: Birth Date\n          in: query\n          name: BirthDate\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Birth Year\n          in: query\n          name: BirthYear\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Birth Day of Month\n          in: query\n          name: BirthDayOfMonth\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Birth Month of Year\n          in: query\n          name: BirthMonthOfYear\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Birth Day of Month\n          in: query\n          name: DeathDayOfMonth\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Birth Month of Year\n          in: query\n          name: DeathMonthOfYear\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Filter results matching external Id\n          in: query\n          name: ExternalId\n          required: false\n          schema:\n            type: string\n        - description: Filter results matching external Id\n          in: query\n          name: ExternalIdType\n          required: false\n          schema:\n            type: string\n            enum:\n              - IVA\n              - TMDB\n              - IMDB\n              - Facebook\n              - Instagram\n              - Twitter\n              - Freebase_MID\n              - Freebase_ID\n              - TvRage\n        - description: Filter results based on timestamp.  Returns \u003e= value timestamp (UTC)\n            provided.\n          in: query\n          name: ModifiedRecordsSince\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Sort results based on last modified descending.  Default is sorted\n            by _score\n          in: query\n          name: SortByTimeStamp\n          required: false\n          schema:\n            type: boolean\n        - description: Include Soft Deleted Records. Default (false)\n          in: query\n          name: IncludeDeleted\n          required: false\n          x-nullable: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SearchCelebrityResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SearchCelebrityResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/SearchCelebrityResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SearchCelebrityResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Search celebrities.\n      tags:\n        - Celebrity\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n    post:\n      deprecated: false\n      description: Search celebrity meta data and images.  Each image in our database is\n        related to a specific movie, TV or game title and is promotional of that\n        title.  If you have title pages or articles about that title, then\n        offering an image gallery on that page is obviously promotional.  If you\n        are doing editorial about another topic and use an image from IVA, you\n        need to reference or otherwise indicate the title of the film, TV show\n        or game so as to be promotional.\n      operationId: SearchCelebrityPost\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Package:\n                  type: string\n                Ids:\n                  description: \"Search person using one or more Ids.  Ex:  Person/123\"\n                  type: array\n                  items:\n                    type: string\n                Skip:\n                  description: Rows to skip, used for paging. Default is 0.\n                  type: integer\n                  format: int32\n                  x-nullable: false\n                Take:\n                  description: Rows to return, used for paging. Default is 10, limit is 50.\n                  type: integer\n                  format: int32\n                  x-nullable: false\n                Includes:\n                  description: Include sub objects from the person\n                  type: array\n                  items:\n                    enum:\n                      - Images\n                      - ExternalIds\n                      - Descriptions\n                      - AlternateNames\n                    type: string\n                Name:\n                  description: Filter results based on Name.\n                  type: string\n                FaceDetails_Age:\n                  description: People with images with estimated age.\n                  type: integer\n                  format: int32\n                FaceDetails_Beard:\n                  description: People images with a beard.\n                  type: boolean\n                FaceDetails_Mustache:\n                  description: People images with a mustache.\n                  type: boolean\n                FaceDetails_Emotions:\n                  description: Filter People images by emotions.\n                  type: array\n                  items:\n                    enum:\n                      - UNKNOWN\n                      - HAPPY\n                      - SAD\n                      - ANGRY\n                      - CONFUSED\n                      - DISGUSTED\n                      - SURPRISED\n                      - CALM\n                    type: string\n                    x-nullable: false\n                FaceDetails_Eyeglasses:\n                  description: People images wearing eyeglasses.\n                  type: boolean\n                FaceDetails_Sunglasses:\n                  description: People images wearing sunglasses.\n                  type: boolean\n                FaceDetails_EyesOpen:\n                  description: People images with eyes open.\n                  type: boolean\n                FaceDetails_MouthOpen:\n                  description: People images with mouth open.\n                  type: boolean\n                FaceDetails_Gender:\n                  description: People images based on gender.\n                  type: string\n                  enum:\n                    - UNKNOWN\n                    - Male\n                    - Female\n                FaceDetails_Smile:\n                  description: People images with smile.\n                  type: boolean\n                MinImageHeight:\n                  description: People with images greater than or equal to image height.\n                  type: integer\n                  format: int32\n                MinImageWidth:\n                  description: People with images greater than or equal to image width.\n                  type: integer\n                  format: int32\n                ImageType:\n                  description: People with images of type.\n                  type: string\n                  enum:\n                    - UNKNOWN\n                    - Poster\n                    - Photo\n                    - Portrait\n                ImageViolence:\n                  description: People with image violence scores.\n                  type: array\n                  items:\n                    enum:\n                      - \"1\"\n                      - \"2\"\n                      - \"3\"\n                      - \"4\"\n                      - \"5\"\n                    format: int32\n                    type: integer\n                    x-nullable: false\n                ImageSexuality:\n                  description: People with image sexuality scores.\n                  type: array\n                  items:\n                    enum:\n                      - \"1\"\n                      - \"2\"\n                      - \"3\"\n                      - \"4\"\n                      - \"5\"\n                    format: int32\n                    type: integer\n                    x-nullable: false\n                ImageTags:\n                  description: People with image containing tags.\n                  type: array\n                  items:\n                    type: string\n                OfficialImage:\n                  description: Limit People with official images.\n                  type: boolean\n                ImageEntertainmentIds:\n                  description: \"People with images from EntertainmentIds.  Ex: Movie/1234\"\n                  type: array\n                  items:\n                    type: string\n                BirthName:\n                  description: Filter by birth name.\n                  type: string\n                Gender:\n                  description: Filter people by gender. (m or f)\n                  type: string\n                  enum:\n                    - m\n                    - f\n                BirthDate:\n                  description: Birth Date\n                  type: string\n                  format: date-time\n                BirthYear:\n                  description: Birth Year\n                  type: integer\n                  format: int32\n                BirthDayOfMonth:\n                  description: Birth Day of Month\n                  type: integer\n                  format: int32\n                BirthMonthOfYear:\n                  description: Birth Month of Year\n                  type: integer\n                  format: int32\n                DeathDayOfMonth:\n                  description: Birth Day of Month\n                  type: integer\n                  format: int32\n                DeathMonthOfYear:\n                  description: Birth Month of Year\n                  type: integer\n                  format: int32\n                ExternalId:\n                  description: Filter results matching external Id\n                  type: string\n                ExternalIdType:\n                  description: Filter results matching external Id\n                  type: string\n                  enum:\n                    - IVA\n                    - TMDB\n                    - IMDB\n                    - Facebook\n                    - Instagram\n                    - Twitter\n                    - Freebase_MID\n                    - Freebase_ID\n                    - TvRage\n                ModifiedRecordsSince:\n                  description: Filter results based on timestamp.  Returns \u003e= value\n                    timestamp (UTC) provided.\n                  type: string\n                  format: date-time\n                SortByTimeStamp:\n                  description: Sort results based on last modified descending.  Default is\n                    sorted by _score\n                  type: boolean\n                IncludeDeleted:\n                  description: Include Soft Deleted Records. Default (false)\n                  type: boolean\n                  x-nullable: false\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SearchCelebrityResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SearchCelebrityResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/SearchCelebrityResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SearchCelebrityResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Search celebrities.\n      tags:\n        - Celebrity\n  /Changes/Episodes/History/:\n    get:\n      deprecated: false\n      description: For each updated episode ID, pull the full episode data for that ID and\n        update.\n      operationId: GetEpisodeChangeHistory\n      parameters:\n        - description: \"Starting date \u003c= when record has changed (Maximum of 30 days back).\n            ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z\"\n          in: query\n          name: Date\n          required: true\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Offset for paging. Default is 0.\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of rows returned. Default is 1,000.\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/EpisodeChangeHistoryResponse\"\n                title: List\u003cEpisodeChangeHistoryResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/EpisodeChangeHistoryResponse\"\n                title: List\u003cEpisodeChangeHistoryResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/EpisodeChangeHistoryResponse\"\n                title: List\u003cEpisodeChangeHistoryResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/EpisodeChangeHistoryResponse\"\n                title: List\u003cEpisodeChangeHistoryResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns list of unique EpisodeId changes greater than or equal to date\n        (UTC)\n      tags:\n        - Changes\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Changes/Episodes/HistoryWithEntity/:\n    get:\n      deprecated: false\n      description: Lists each episode ID that has changed as well as the entity in the\n        object that changed.\n      operationId: GetEpisodeChangeHistoryWithEntity\n      parameters:\n        - description: \"Starting date \u003c= when record has changed (Maximum of 30 days back).\n            ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z\"\n          in: query\n          name: Date\n          required: true\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Offset for paging. Default is 0.\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of rows returned. Default is 1,000.\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/EpisodeChangeHistoryWithEntityResponse\"\n                title: List\u003cEpisodeChangeHistoryWithEntityResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/EpisodeChangeHistoryWithEntityResponse\"\n                title: List\u003cEpisodeChangeHistoryWithEntityResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/EpisodeChangeHistoryWithEntityResponse\"\n                title: List\u003cEpisodeChangeHistoryWithEntityResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/EpisodeChangeHistoryWithEntityResponse\"\n                title: List\u003cEpisodeChangeHistoryWithEntityResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns list of unique EpisodeId and Entity changes greater than or\n        equal to date (UTC).\n      tags:\n        - Changes\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Changes/Games/History/:\n    get:\n      deprecated: false\n      description: Requires a valid Date.\n      operationId: GetGameChangeHistory\n      parameters:\n        - description: \"Starting date \u003c= when record has changed (Maximum of 30 days back).\n            ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z\"\n          in: query\n          name: Date\n          required: true\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Offset for paging. Default is 0.\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of rows returned. Default is 1,000.\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/GameChangeHistoryResponse\"\n                title: List\u003cGameChangeHistoryResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/GameChangeHistoryResponse\"\n                title: List\u003cGameChangeHistoryResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/GameChangeHistoryResponse\"\n                title: List\u003cGameChangeHistoryResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/GameChangeHistoryResponse\"\n                title: List\u003cGameChangeHistoryResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns list of unique GameId changes greater than or equal to date\n        (UTC).\n      tags:\n        - Changes\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Changes/Movies/History/:\n    get:\n      deprecated: false\n      description: Use to get the ID's of the movies that have been added or changed and\n        use /Movies/{ID} to get back the object with the updated data and\n        replace in your database.\n      operationId: GetMovieChangeHistory\n      parameters:\n        - description: \"Starting date \u003c= when record has changed (Maximum of 30 days back).\n            ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z\"\n          in: query\n          name: Date\n          required: true\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Offset for paging. Default is 0.\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of rows returned. Default is 1,000.\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieChangeHistoryResponse\"\n                title: List\u003cMovieChangeHistoryResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieChangeHistoryResponse\"\n                title: List\u003cMovieChangeHistoryResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieChangeHistoryResponse\"\n                title: List\u003cMovieChangeHistoryResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieChangeHistoryResponse\"\n                title: List\u003cMovieChangeHistoryResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns list of unique MovieId changes greater than or equal to date\n        (UTC).\n      tags:\n        - Changes\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Changes/Movies/HistoryWithEntity/:\n    get:\n      deprecated: false\n      description: Same as /Changes/Movies/History but with the specific entities that have\n        changed inside the MovieResponse.\n      operationId: GetMovieChangeHistoryWithEntity\n      parameters:\n        - description: \"Starting date \u003c= when record has changed (Maximum of 30 days back).\n            ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z\"\n          in: query\n          name: Date\n          required: true\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Offset for paging. Default is 0.\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of rows returned. Default is 1,000.\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieChangeHistoryWithEntityResponse\"\n                title: List\u003cMovieChangeHistoryWithEntityResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieChangeHistoryWithEntityResponse\"\n                title: List\u003cMovieChangeHistoryWithEntityResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieChangeHistoryWithEntityResponse\"\n                title: List\u003cMovieChangeHistoryWithEntityResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieChangeHistoryWithEntityResponse\"\n                title: List\u003cMovieChangeHistoryWithEntityResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: \u003e-\n        \n        Returns list of unique MovieId and Entity changes greater than or equal to date (UTC).\n      tags:\n        - Changes\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Changes/People/History/:\n    get:\n      deprecated: false\n      description: Requires a valid Date.\n      operationId: GetPersonChangeHistory\n      parameters:\n        - description: \"Starting date \u003c= when record has changed (Maximum of 30 days back).\n            ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z\"\n          in: query\n          name: Date\n          required: true\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Offset for paging. Default is 0.\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of rows returned. Default is 1,000.\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PersonChangeHistoryResponse\"\n                title: List\u003cPersonChangeHistoryResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PersonChangeHistoryResponse\"\n                title: List\u003cPersonChangeHistoryResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PersonChangeHistoryResponse\"\n                title: List\u003cPersonChangeHistoryResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PersonChangeHistoryResponse\"\n                title: List\u003cPersonChangeHistoryResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns list of unique PersonId changes greater than or equal to date\n        (UTC).\n      tags:\n        - Changes\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Changes/People/HistoryWithEntity/:\n    get:\n      deprecated: false\n      description: Requires a valid Date.\n      operationId: GetPersonChangeHistoryWithEntity\n      parameters:\n        - description: \"Starting date \u003c= when record has changed (Maximum of 30 days back).\n            ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z\"\n          in: query\n          name: Date\n          required: true\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Offset for paging. Default is 0.\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of rows returned. Default is 1,000.\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PersonChangeHistoryWithEntityResponse\"\n                title: List\u003cPersonChangeHistoryWithEntityResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PersonChangeHistoryWithEntityResponse\"\n                title: List\u003cPersonChangeHistoryWithEntityResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PersonChangeHistoryWithEntityResponse\"\n                title: List\u003cPersonChangeHistoryWithEntityResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PersonChangeHistoryWithEntityResponse\"\n                title: List\u003cPersonChangeHistoryWithEntityResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns list of unique PersonId and Entity changes greater than or equal\n        to date (UTC).\n      tags:\n        - Changes\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Changes/Seasons/History/:\n    get:\n      deprecated: false\n      description: Use if you want to check for specific updates to season records.\n      operationId: GetSeasonChangeHistory\n      parameters:\n        - description: \"Starting date \u003c= when record has changed (Maximum of 30 days back).\n            ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z\"\n          in: query\n          name: Date\n          required: true\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Offset for paging. Default is 0.\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of rows returned. Default is 1,000.\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SeasonChangeHistoryResponse\"\n                title: List\u003cSeasonChangeHistoryResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SeasonChangeHistoryResponse\"\n                title: List\u003cSeasonChangeHistoryResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SeasonChangeHistoryResponse\"\n                title: List\u003cSeasonChangeHistoryResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SeasonChangeHistoryResponse\"\n                title: List\u003cSeasonChangeHistoryResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns list of unique SeasonId changes greater than or equal to date\n        (UTC).\n      tags:\n        - Changes\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Changes/Seasons/HistoryWithEntity/:\n    get:\n      deprecated: false\n      description: Returns list of new or changed SeasonIds with the entity that has\n        changed.\n      operationId: GetSeasonChangeHistoryWithEntity\n      parameters:\n        - description: \"Starting date \u003c= when record has changed (Maximum of 30 days back).\n            ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z\"\n          in: query\n          name: Date\n          required: true\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Offset for paging. Default is 0.\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of rows returned. Default is 1,000.\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SeasonChangeHistoryWithEntityResponse\"\n                title: List\u003cSeasonChangeHistoryWithEntityResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SeasonChangeHistoryWithEntityResponse\"\n                title: List\u003cSeasonChangeHistoryWithEntityResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SeasonChangeHistoryWithEntityResponse\"\n                title: List\u003cSeasonChangeHistoryWithEntityResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SeasonChangeHistoryWithEntityResponse\"\n                title: List\u003cSeasonChangeHistoryWithEntityResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns list of unique SeasonId and Entity changes greater than or equal\n        to date (UTC).\n      tags:\n        - Changes\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Changes/Shows/History/:\n    get:\n      deprecated: false\n      description: All new and updated shows from requested date and time.  When a record\n        gets updated, use the ID to get the full show object and replace the\n        data in your cache.\n      operationId: GetShowChangeHistory\n      parameters:\n        - description: \"Starting date \u003c= when record has changed (Maximum of 30 days back).\n            ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z\"\n          in: query\n          name: Date\n          required: true\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Offset for paging. Default is 0.\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of rows returned. Default is 1,000.\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowChangeHistoryResponse\"\n                title: List\u003cShowChangeHistoryResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowChangeHistoryResponse\"\n                title: List\u003cShowChangeHistoryResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowChangeHistoryResponse\"\n                title: List\u003cShowChangeHistoryResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowChangeHistoryResponse\"\n                title: List\u003cShowChangeHistoryResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns list of unique ShowId changes greater than or equal to date\n        (UTC).\n      tags:\n        - Changes\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Changes/Shows/HistoryWithEntity/:\n    get:\n      deprecated: false\n      description: Returns a list of ShowId and entity of any show that has been updated.\n      operationId: GetShowChangeHistoryWithEntity\n      parameters:\n        - description: \"Starting date \u003c= when record has changed (Maximum of 30 days back).\n            ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z\"\n          in: query\n          name: Date\n          required: true\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Offset for paging. Default is 0.\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of rows returned. Default is 1,000.\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowChangeHistoryWithEntityResponse\"\n                title: List\u003cShowChangeHistoryWithEntityResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowChangeHistoryWithEntityResponse\"\n                title: List\u003cShowChangeHistoryWithEntityResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowChangeHistoryWithEntityResponse\"\n                title: List\u003cShowChangeHistoryWithEntityResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowChangeHistoryWithEntityResponse\"\n                title: List\u003cShowChangeHistoryWithEntityResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns list of unique ShowId and Entity changes greater than or equal\n        to date (UTC).\n      tags:\n        - Changes\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Charts/Movies/Boxoffice:\n    get:\n      deprecated: false\n      description: Returns top 10 box office movies.\n      operationId: GetChartMoviesBoxoffice\n      parameters:\n        - description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Determines the page size.  (Maximum of 100)\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ChartItem\"\n                title: List\u003cChartItem\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ChartItem\"\n                title: List\u003cChartItem\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ChartItem\"\n                title: List\u003cChartItem\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ChartItem\"\n                title: List\u003cChartItem\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: List of Movies (Weekend box office revenue).\n      tags:\n        - Charts\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Charts/Movies/MostAnticipated:\n    get:\n      deprecated: false\n      description: Requires Skip and Take. Maximum page size is 100.\n      operationId: GetChartMoviesMostAnticipated\n      parameters:\n        - description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Determines the page size.  (Maximum of 100)\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ChartItem\"\n                title: List\u003cChartItem\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ChartItem\"\n                title: List\u003cChartItem\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ChartItem\"\n                title: List\u003cChartItem\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ChartItem\"\n                title: List\u003cChartItem\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: List of Movies (Most Anticipated).\n      tags:\n        - Charts\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Charts/Movies/Popular:\n    get:\n      deprecated: false\n      description: Requires Skip and Take. Maximum page size is 100.\n      operationId: GetChartMoviesPopular\n      parameters:\n        - description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Determines the page size.  (Maximum of 100)\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ChartItem\"\n                title: List\u003cChartItem\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ChartItem\"\n                title: List\u003cChartItem\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ChartItem\"\n                title: List\u003cChartItem\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ChartItem\"\n                title: List\u003cChartItem\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: List of Movies based on popularity.\n      tags:\n        - Charts\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Charts/People/Popular:\n    get:\n      deprecated: false\n      description: Requires Skip and Take. Maximum page size is 100.\n      operationId: GetChartPeoplePopular\n      parameters:\n        - description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Determines the page size.  (Maximum of 100)\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ChartPersonItem\"\n                title: List\u003cChartPersonItem\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ChartPersonItem\"\n                title: List\u003cChartPersonItem\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ChartPersonItem\"\n                title: List\u003cChartPersonItem\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ChartPersonItem\"\n                title: List\u003cChartPersonItem\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: List of Celebrities based on popularity.\n      tags:\n        - Charts\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Charts/Shows/Popular:\n    get:\n      deprecated: false\n      description: Requires Skip and Take. Maximum page size is 100.\n      operationId: GetChartShowsPopular\n      parameters:\n        - description: Limits the total items returned. Maximum of 100 per request.\n          in: query\n          name: Take\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Skips records using for paging results.\n          in: query\n          name: Skip\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ChartItem\"\n                title: List\u003cChartItem\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ChartItem\"\n                title: List\u003cChartItem\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ChartItem\"\n                title: List\u003cChartItem\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ChartItem\"\n                title: List\u003cChartItem\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: List of Shows based on popularity.\n      tags:\n        - Charts\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Common/Companies/:\n    get:\n      deprecated: false\n      description: \"Companies are listed in a movie, show, or game response as those whom\n        are involved with the program.  EX: Universal Pictures.\"\n      operationId: GetCompanies\n      parameters:\n        - description: Offset for paging. Default is 0.\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of rows returned. Default is 1,000.\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CompanyResponse\"\n                title: List\u003cCompanyResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CompanyResponse\"\n                title: List\u003cCompanyResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CompanyResponse\"\n                title: List\u003cCompanyResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CompanyResponse\"\n                title: List\u003cCompanyResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: List of Companies (with paging).\n      tags:\n        - Common\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Common/Countries/:\n    get:\n      deprecated: false\n      description: List of Countries, ISO codes and Country IDs used throughout the API.\n      operationId: GetCountries\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CountryResponse\"\n                title: List\u003cCountryResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CountryResponse\"\n                title: List\u003cCountryResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CountryResponse\"\n                title: List\u003cCountryResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CountryResponse\"\n                title: List\u003cCountryResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: List of Countries.\n      tags:\n        - Common\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Common/DataDemoFilters:\n    get:\n      deprecated: false\n      description: List of filter options available in data demo.\n      operationId: GetDataDemoFilters\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DataDemoFilters\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/DataDemoFilters\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/DataDemoFilters\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/DataDemoFilters\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: List of filter options available in data demo.\n      tags:\n        - Common\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Common/GetCommonEnumerators:\n    get:\n      deprecated: false\n      description: Provider enumerator has values added regularly.  Update your SDK to\n        refresh these values.\n      operationId: GetCommonEnumerators\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommonEnumerators\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CommonEnumerators\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/CommonEnumerators\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/CommonEnumerators\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: List of Common Enumerators.\n      tags:\n        - Common\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Common/ImageTypes/:\n    get:\n      deprecated: false\n      description: \"A list of image types available in the IVA database. **EX: Poster**\"\n      operationId: GetImageTypes\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ImageTypeResponse\"\n                title: List\u003cImageTypeResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ImageTypeResponse\"\n                title: List\u003cImageTypeResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ImageTypeResponse\"\n                title: List\u003cImageTypeResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ImageTypeResponse\"\n                title: List\u003cImageTypeResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: List of Image Types.\n      tags:\n        - Common\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Common/Languages/:\n    get:\n      deprecated: false\n      description: Returns a list of languages used in the API as well as the ISO code and\n        language ID.\n      operationId: GetLanguages\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/LanguageResponse\"\n                title: List\u003cLanguageResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/LanguageResponse\"\n                title: List\u003cLanguageResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/LanguageResponse\"\n                title: List\u003cLanguageResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/LanguageResponse\"\n                title: List\u003cLanguageResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: List of Languages.\n      tags:\n        - Common\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Common/OriginatingNetworks/:\n    get:\n      deprecated: false\n      description: No parameters.\n      operationId: GetOriginatingNetworks\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/OriginatingNetworkResponse\"\n                title: List\u003cOriginatingNetworkResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/OriginatingNetworkResponse\"\n                title: List\u003cOriginatingNetworkResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/OriginatingNetworkResponse\"\n                title: List\u003cOriginatingNetworkResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/OriginatingNetworkResponse\"\n                title: List\u003cOriginatingNetworkResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: List of Originating Networks.\n      tags:\n        - Common\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Common/Tags/:\n    get:\n      deprecated: false\n      description: Paged list of all tags used in the API.\n      operationId: GetTags\n      parameters:\n        - description: Offset for paging. Default is 0.\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of rows returned. Default is 1,000.\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TagResponse\"\n                title: List\u003cTagResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TagResponse\"\n                title: List\u003cTagResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TagResponse\"\n                title: List\u003cTagResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TagResponse\"\n                title: List\u003cTagResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: List of Tags (with paging\n      tags:\n        - Common\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Common/TrendSources:\n    get:\n      deprecated: false\n      description: List of Trend Sources.\n      operationId: GetTrendSources\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TrendSourceResponse\"\n                title: List\u003cTrendSourceResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TrendSourceResponse\"\n                title: List\u003cTrendSourceResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TrendSourceResponse\"\n                title: List\u003cTrendSourceResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TrendSourceResponse\"\n                title: List\u003cTrendSourceResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: List of Trend Sources.\n      tags:\n        - Common\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Common/VideoTypes/:\n    get:\n      deprecated: false\n      description: Returns a list of the types of videos that can be associated to a title.\n      operationId: GetVideoTypes\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/VideoTypeResponse\"\n                title: List\u003cVideoTypeResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/VideoTypeResponse\"\n                title: List\u003cVideoTypeResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/VideoTypeResponse\"\n                title: List\u003cVideoTypeResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/VideoTypeResponse\"\n                title: List\u003cVideoTypeResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: List of Video Types.\n      tags:\n        - Common\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Entertainment/Autocomplete/:\n    get:\n      deprecated: false\n      description: Get suggestions based on prefix and field selection.\n      operationId: SearchEntertainmentAutoComplete\n      parameters:\n        - description: Rows to return, used for paging. Default is 10, limit is 50.\n          in: query\n          name: Size\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - in: query\n          name: Package\n          required: false\n          schema:\n            type: string\n        - description: List of program types. See /Common/GetCommonEnumerators endpoint for\n            complete list.\n          in: query\n          name: ProgramTypes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - Movie\n                - Show\n                - Game\n                - Season\n                - Episode\n              type: string\n              nullable: false\n        - description: List of available auto completion fields.\n          in: query\n          name: Field\n          required: true\n          x-nullable: false\n          schema:\n            type: string\n            enum:\n              - basedOns_instanceOfLabel\n              - basedOns_label\n              - subjects_label\n              - filmingLocations_label\n              - narrativeLocations_label\n              - microGenres_label\n              - timePeriods_label\n              - title\n              - originalTitle\n              - tags\n              - originatingNetwork\n              - companies_name\n              - contributors_personName\n        - description: String prefix to use to locate matching strings based on Field\n            selected.\n          in: query\n          name: Prefix\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SearchEntertainmentAutoCompleteRespon\\\n                    se\"\n                title: List\u003cSearchEntertainmentAutoCompleteResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SearchEntertainmentAutoCompleteRespon\\\n                    se\"\n                title: List\u003cSearchEntertainmentAutoCompleteResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SearchEntertainmentAutoCompleteRespon\\\n                    se\"\n                title: List\u003cSearchEntertainmentAutoCompleteResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SearchEntertainmentAutoCompleteRespon\\\n                    se\"\n                title: List\u003cSearchEntertainmentAutoCompleteResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      tags:\n        - Entertainment\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Entertainment/Match/:\n    get:\n      deprecated: false\n      description: Requires a valid program type and at least a title. Matches to\n        Entertainment Programs of given type, returns all candidates that\n        achieved the highest score, ties possible.\n      operationId: MatchToEntertainmentGet\n      parameters:\n        - description: Type of Program to be matched.\n          in: query\n          name: ProgramType\n          required: true\n          x-nullable: false\n          schema:\n            type: string\n        - description: Id of Entertainment program to be matched against, if this is set no\n            search is run and data is compared to this program only.\n          in: query\n          name: EntertainmentId\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Title of Program to be matched.\n          in: query\n          name: Title\n          required: false\n          schema:\n            type: string\n        - description: Alternate Titles of Program to be matched.\n          in: query\n          name: AlternateTitles\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Release Year of Program to be matched.\n          in: query\n          name: Year\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Cast members of Program to be matched.\n          in: query\n          name: Cast\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Producers of Program to be matched.\n          in: query\n          name: Producers\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Directors of Program to be matched.\n          in: query\n          name: Directors\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Description of Program to be matched.\n          in: query\n          name: Description\n          required: false\n          schema:\n            type: string\n        - description: Originating network of SHOW Program to be matched.\n          in: query\n          name: OriginatingNetwork\n          required: false\n          schema:\n            type: string\n        - description: Poster of Program to be matched.\n          in: query\n          name: Poster\n          required: false\n          schema:\n            type: string\n        - description: Release Date of Program to be matched.\n          in: query\n          name: ReleaseDate\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: For fuzzy title match, default is 4, set to 0 for no fuzzy match.\n          in: query\n          name: StringDistance\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MatchToEntertainmentProgramResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/MatchToEntertainmentProgramResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/MatchToEntertainmentProgramResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/MatchToEntertainmentProgramResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Match a program using Title, Year, Cast, Director.\n      tags:\n        - Entertainment\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n    post:\n      deprecated: false\n      description: Requires a valid program type and at least a title. Matches to\n        Entertainment Programs of given type, returns all candidates that\n        achieved the highest score, ties possible.\n      operationId: MatchToEntertainmentPost\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                ProgramType:\n                  description: Type of Program to be matched.\n                  type: string\n                  x-nullable: false\n                EntertainmentId:\n                  description: Id of Entertainment program to be matched against, if this\n                    is set no search is run and data is compared to this program\n                    only.\n                  type: integer\n                  format: int64\n                Title:\n                  description: Title of Program to be matched.\n                  type: string\n                AlternateTitles:\n                  description: Alternate Titles of Program to be matched.\n                  type: array\n                  items:\n                    type: string\n                Year:\n                  description: Release Year of Program to be matched.\n                  type: integer\n                  format: int32\n                Cast:\n                  description: Cast members of Program to be matched.\n                  type: array\n                  items:\n                    type: string\n                Producers:\n                  description: Producers of Program to be matched.\n                  type: array\n                  items:\n                    type: string\n                Directors:\n                  description: Directors of Program to be matched.\n                  type: array\n                  items:\n                    type: string\n                Description:\n                  description: Description of Program to be matched.\n                  type: string\n                OriginatingNetwork:\n                  description: Originating network of SHOW Program to be matched.\n                  type: string\n                Poster:\n                  description: Poster of Program to be matched.\n                  type: string\n                ReleaseDate:\n                  description: Release Date of Program to be matched.\n                  type: string\n                  format: date-time\n                StringDistance:\n                  description: For fuzzy title match, default is 4, set to 0 for no fuzzy\n                    match.\n                  type: integer\n                  format: int32\n                  x-nullable: false\n              required:\n                - ProgramType\n                - EntertainmentId\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MatchToEntertainmentProgramResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/MatchToEntertainmentProgramResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/MatchToEntertainmentProgramResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/MatchToEntertainmentProgramResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Match a program using Title, Year, Cast, Director.\n      tags:\n        - Entertainment\n  /Entertainment/Search/:\n    get:\n      deprecated: false\n      description: Search movies, shows, seasons, episodes, and games.  Each image in our\n        database is related to a specific movie, TV or game title and is\n        promotional of that title.  If you have title pages or articles about\n        that title, then offering an image gallery on that page is obviously\n        promotional.  If you are doing editorial about another topic and use an\n        image from IVA, you need to reference or otherwise indicate the title of\n        the film, TV show or game so as to be promotional.\n      operationId: SearchEntertainmentGet\n      parameters:\n        - description: \"Search by one or more Ids.  Ex: Movie/123.\"\n          in: query\n          name: Ids\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Rows to skip, used for paging. Default is 0.\n          in: query\n          name: Skip\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Rows to return, used for paging. Default is 10, limit is 50.\n          in: query\n          name: Take\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: List of availability providers.  See /Common/GetCommonEnumerators\n            endpoint for complete list.\n          in: query\n          name: Providers\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - NOT_SET\n                - AmazonInstantVideo\n                - NBC\n                - ABC\n                - FOX\n                - FandangoMovies\n                - GooglePlay\n                - CBS\n                - The_CW\n                - TBS\n                - Nickelodeon\n                - PBS\n                - Discovery_Channel\n                - HBO\n                - Disney_XD\n                - USA_Network\n                - Hulu\n                - AmazonPrimeVideo\n                - iTunes\n                - Netflix\n                - AtomTickets\n                - YouTubePremium\n                - DCUniverse\n              type: string\n              nullable: false\n        - description: List of availability delivery methods. See\n            /Common/GetCommonEnumerators endpoint for complete list.\n          in: query\n          name: DeliveryMethods\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - NOT_SET\n                - Scheduled\n                - Ticket\n                - Physical\n                - OnDemand\n              type: string\n              nullable: false\n        - description: List of availability offer types. See /Common/GetCommonEnumerators\n            endpoint for complete list.\n          in: query\n          name: OfferTypes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - NOT_SET\n                - Buy\n                - Subscription\n                - Free\n                - Rent\n              type: string\n              nullable: false\n        - description: List of availability video qualities. See\n            /Common/GetCommonEnumerators endpoint for complete list.\n          in: query\n          name: VideoQualities\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - NOT_SET\n                - HD\n                - UHD\n                - SD\n              type: string\n              nullable: false\n        - description: List of program types. See /Common/GetCommonEnumerators endpoint for\n            complete list.\n          in: query\n          name: ProgramTypes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - Movie\n                - Show\n                - Game\n                - Season\n                - Episode\n              type: string\n              nullable: false\n        - description: List of 2 character country codes.\n          in: query\n          name: AvailabilityCountries\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of genres (movie and show).\n          in: query\n          name: Genres\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of tags (movie and show).\n          in: query\n          name: Tags\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of certifications for movie and show.\n          in: query\n          name: Certifications\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of names. Maximum of 3.\n          in: query\n          name: PersonNames\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Person Ids.  Currently supports one person.\n          in: query\n          name: PeopleIds\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of Jobs a contributor can have.\n          in: query\n          name: Jobs\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of release types for both movie and show.\n          in: query\n          name: ReleaseTypes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - Digital\n                - Festival\n                - Physical\n                - Premiere\n                - Theatrical_Limited_Release\n                - Theatrical_Wide_Release\n                - TV\n                - On_Demand_Release\n                - Show_Release\n              type: string\n              nullable: false\n        - description: List of 2 character country codes when filtering on releases.\n          in: query\n          name: ReleaseCountries\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Filter results based on start and end original release year.\n          in: query\n          name: YearRange_Start\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Filter results based on start and end original release year.\n          in: query\n          name: YearRange_End\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Filter results based on any release date range.\n          in: query\n          name: ReleaseDateRange_Start\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Filter results based on any release date range.\n          in: query\n          name: ReleaseDateRange_End\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Filter results based on original release date range.\n          in: query\n          name: OriginalReleaseDateRange_Start\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Filter results based on original release date range.\n          in: query\n          name: OriginalReleaseDateRange_End\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - in: query\n          name: Package\n          required: false\n          schema:\n            type: string\n        - description: Title search.\n          in: query\n          name: Title\n          required: false\n          schema:\n            type: string\n        - description: Filter results to match a show.  Use for locating seasons and\n            episodes for a show.\n          in: query\n          name: ShowId\n          required: false\n          schema:\n            type: string\n        - description: Filter results to match a season.  Use for locating episodes for a\n            season.\n          in: query\n          name: SeasonId\n          required: false\n          schema:\n            type: string\n        - description: Include sub objects from the program\n          in: query\n          name: Includes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - Releases\n                - Contributors\n                - AlternateTitles\n                - Descriptions\n                - Companies\n                - Tags\n                - ExternalIds\n                - Videos\n                - Images\n                - Availabilities\n                - Genres\n                - ProgramTrends\n                - Subjects\n                - FilmingLocations\n                - NarrativeLocations\n                - BasedOns\n                - TimePeriods\n                - MicroGenres\n                - ProgramTags\n              type: string\n        - description: Specify the country and language\n          in: query\n          name: Culture\n          required: false\n          schema:\n            type: string\n            enum:\n              - NOT_SET\n              - English_US\n              - English_CA\n              - English_UK\n              - English_AU\n        - description: Filter results matching external Id\n          in: query\n          name: ExternalId\n          required: false\n          schema:\n            type: string\n        - description: Filter results matching external Id\n          in: query\n          name: ExternalIdType\n          required: false\n          schema:\n            type: string\n        - description: Filter results matching company name\n          in: query\n          name: CompanyName\n          required: false\n          schema:\n            type: string\n        - description: Filter results based on having video content\n          in: query\n          name: HasVideo\n          required: false\n          schema:\n            type: boolean\n        - description: Filter results based on matching a single Video ID.\n          in: query\n          name: VideoId\n          required: false\n          schema:\n            type: integer\n            format: int64\n        - description: List of 2 character country codes when filtering on video target\n            countries.\n          in: query\n          name: VideoTargetCountries\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Specify video target languages. This takes into consideration both\n            language spoken and language subtitled.\n          in: query\n          name: VideoTargetLanguages\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Sort results based on last modified descending.  Default is sorted\n            by _score. DEPRECIATED! Use SortBy instead.\n          in: query\n          name: SortByTimeStamp\n          required: false\n          x-nullable: false\n          schema:\n            type: boolean\n        - description: SortBy\n          in: query\n          name: SortBy\n          required: false\n          schema:\n            type: string\n            enum:\n              - NOT_SET\n              - Relevance\n              - TimeStamp\n              - IvaRating\n              - ReleaseDate\n              - CalculatedTrendRank\n        - description: Filter results based on timestamp.  Returns \u003e= value timestamp (UTC)\n            provided.\n          in: query\n          name: ModifiedRecordsSince\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: \"The Network the current first run shows appear on. Ex: ABC, NBC,\n            Netflix, etc.  \"\n          in: query\n          name: OriginatingNetworks\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"The status of the movie or show.  Ex: Returning_Series,\n            in_production, etc.  \"\n          in: query\n          name: Status\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The original language of the program.\n          in: query\n          name: OriginalLanguages\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Filter results where movie revenue is greater than or equal to this\n            value.\n          in: query\n          name: Revenue\n          required: false\n          schema:\n            type: integer\n            format: int64\n        - description: Filter results where movie budget is greater than or equal to this\n            value.\n          in: query\n          name: Budget\n          required: false\n          schema:\n            type: integer\n            format: int64\n        - description: Filter results with a minimum Rating greater than or equal to this\n            value. (0 to 100)\n          in: query\n          name: Minimum_IvaRating\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Filter results based on encode date.\n          in: query\n          name: Minimum_EncodeDate\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Include Soft Deleted Records. Default (false)\n          in: query\n          name: IncludeDeleted\n          required: false\n          x-nullable: false\n          schema:\n            type: boolean\n        - description: \"Program Trend Source Ids.  Ex: 2,3.\"\n          in: query\n          name: TrendSourceIds\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              format: int32\n              type: integer\n              nullable: false\n        - description: \"Program Trend Brands.  Ex: IMDB,IVA\"\n          in: query\n          name: TrendBrands\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - IMDB\n                - IVA\n                - BoxOfficeMojo\n                - TMDB\n                - RottenTomatoes\n                - TVGuide\n                - iTunes\n                - Amazon\n                - Fios\n                - Gamespot\n                - Hulu\n                - MovieClips\n                - Netflix\n                - PlutoTV\n                - Redbox\n                - TheNumbers\n                - Vudu\n                - Xfinity\n                - Youtube\n              type: string\n        - description: \"Program Trend Countries.  Ex: US,CA.\"\n          in: query\n          name: TrendCountries\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Program Trend List Classifiers.  Ex: AVOD,SVOD.\"\n          in: query\n          name: TrendListClassifiers\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - Publisher\n                - TVOD\n                - SVOD\n                - Revenue\n                - Social\n                - Trailers\n                - AVOD\n                - Physical\n              type: string\n        - description: List of External ID Names that will be used to find where they DO\n            NOT exist.\n          in: query\n          name: MissingExternalIdNames\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of string\n          in: query\n          name: BasedOns\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of string\n          in: query\n          name: BasedOnInstanceOfs\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of string\n          in: query\n          name: FilmingLocations\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of string\n          in: query\n          name: NarrativeLocations\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of string\n          in: query\n          name: TimePeriods\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of string\n          in: query\n          name: Subjects\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of string\n          in: query\n          name: MicroGenres\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SearchEntertainmentResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SearchEntertainmentResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/SearchEntertainmentResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SearchEntertainmentResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Search all entertainment programs.\n      tags:\n        - Entertainment\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n    post:\n      deprecated: false\n      description: Search movies, shows, seasons, episodes, and games.  Each image in our\n        database is related to a specific movie, TV or game title and is\n        promotional of that title.  If you have title pages or articles about\n        that title, then offering an image gallery on that page is obviously\n        promotional.  If you are doing editorial about another topic and use an\n        image from IVA, you need to reference or otherwise indicate the title of\n        the film, TV show or game so as to be promotional.\n      operationId: SearchEntertainmentPost\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Ids:\n                  description: \"Search by one or more Ids.  Ex: Movie/123.\"\n                  type: array\n                  items:\n                    type: string\n                Skip:\n                  description: Rows to skip, used for paging. Default is 0.\n                  type: integer\n                  format: int32\n                  x-nullable: false\n                Take:\n                  description: Rows to return, used for paging. Default is 10, limit is 50.\n                  type: integer\n                  format: int32\n                  x-nullable: false\n                Providers:\n                  description: List of availability providers.  See\n                    /Common/GetCommonEnumerators endpoint for complete list.\n                  type: array\n                  items:\n                    enum:\n                      - NOT_SET\n                      - AmazonInstantVideo\n                      - NBC\n                      - ABC\n                      - FOX\n                      - FandangoMovies\n                      - GooglePlay\n                      - CBS\n                      - The_CW\n                      - TBS\n                      - Nickelodeon\n                      - PBS\n                      - Discovery_Channel\n                      - HBO\n                      - Disney_XD\n                      - USA_Network\n                      - Hulu\n                      - AmazonPrimeVideo\n                      - iTunes\n                      - Netflix\n                      - AtomTickets\n                      - YouTubePremium\n                      - DCUniverse\n                    type: string\n                    x-nullable: false\n                DeliveryMethods:\n                  description: List of availability delivery methods. See\n                    /Common/GetCommonEnumerators endpoint for complete list.\n                  type: array\n                  items:\n                    enum:\n                      - NOT_SET\n                      - Scheduled\n                      - Ticket\n                      - Physical\n                      - OnDemand\n                    type: string\n                    x-nullable: false\n                OfferTypes:\n                  description: List of availability offer types. See\n                    /Common/GetCommonEnumerators endpoint for complete list.\n                  type: array\n                  items:\n                    enum:\n                      - NOT_SET\n                      - Buy\n                      - Subscription\n                      - Free\n                      - Rent\n                    type: string\n                    x-nullable: false\n                VideoQualities:\n                  description: List of availability video qualities. See\n                    /Common/GetCommonEnumerators endpoint for complete list.\n                  type: array\n                  items:\n                    enum:\n                      - NOT_SET\n                      - HD\n                      - UHD\n                      - SD\n                    type: string\n                    x-nullable: false\n                ProgramTypes:\n                  description: List of program types. See /Common/GetCommonEnumerators\n                    endpoint for complete list.\n                  type: array\n                  items:\n                    enum:\n                      - Movie\n                      - Show\n                      - Game\n                      - Season\n                      - Episode\n                    type: string\n                    x-nullable: false\n                AvailabilityCountries:\n                  description: List of 2 character country codes.\n                  type: array\n                  items:\n                    type: string\n                Genres:\n                  description: List of genres (movie and show).\n                  type: array\n                  items:\n                    type: string\n                Tags:\n                  description: List of tags (movie and show).\n                  type: array\n                  items:\n                    type: string\n                Certifications:\n                  description: List of certifications for movie and show.\n                  type: array\n                  items:\n                    type: string\n                PersonNames:\n                  description: List of names. Maximum of 3.\n                  type: array\n                  items:\n                    type: string\n                PeopleIds:\n                  description: Person Ids.  Currently supports one person.\n                  type: array\n                  items:\n                    type: string\n                Jobs:\n                  description: List of Jobs a contributor can have.\n                  type: array\n                  items:\n                    type: string\n                ReleaseTypes:\n                  description: List of release types for both movie and show.\n                  type: array\n                  items:\n                    enum:\n                      - Digital\n                      - Festival\n                      - Physical\n                      - Premiere\n                      - Theatrical_Limited_Release\n                      - Theatrical_Wide_Release\n                      - TV\n                      - On_Demand_Release\n                      - Show_Release\n                    type: string\n                    x-nullable: false\n                ReleaseCountries:\n                  description: List of 2 character country codes when filtering on releases.\n                  type: array\n                  items:\n                    type: string\n                YearRange_Start:\n                  description: Filter results based on start and end original release year.\n                  type: integer\n                  format: int32\n                YearRange_End:\n                  description: Filter results based on start and end original release year.\n                  type: integer\n                  format: int32\n                ReleaseDateRange_Start:\n                  description: Filter results based on any release date range.\n                  type: string\n                  format: date-time\n                ReleaseDateRange_End:\n                  description: Filter results based on any release date range.\n                  type: string\n                  format: date-time\n                OriginalReleaseDateRange_Start:\n                  description: Filter results based on original release date range.\n                  type: string\n                  format: date-time\n                OriginalReleaseDateRange_End:\n                  description: Filter results based on original release date range.\n                  type: string\n                  format: date-time\n                Package:\n                  type: string\n                Title:\n                  description: Title search.\n                  type: string\n                ShowId:\n                  description: Filter results to match a show.  Use for locating seasons\n                    and episodes for a show.\n                  type: string\n                SeasonId:\n                  description: Filter results to match a season.  Use for locating episodes\n                    for a season.\n                  type: string\n                Includes:\n                  description: Include sub objects from the program\n                  type: array\n                  items:\n                    enum:\n                      - Releases\n                      - Contributors\n                      - AlternateTitles\n                      - Descriptions\n                      - Companies\n                      - Tags\n                      - ExternalIds\n                      - Videos\n                      - Images\n                      - Availabilities\n                      - Genres\n                      - ProgramTrends\n                      - Subjects\n                      - FilmingLocations\n                      - NarrativeLocations\n                      - BasedOns\n                      - TimePeriods\n                      - MicroGenres\n                      - ProgramTags\n                    type: string\n                Culture:\n                  description: Specify the country and language\n                  type: string\n                  enum:\n                    - NOT_SET\n                    - English_US\n                    - English_CA\n                    - English_UK\n                    - English_AU\n                ExternalId:\n                  description: Filter results matching external Id\n                  type: string\n                ExternalIdType:\n                  description: Filter results matching external Id\n                  type: string\n                CompanyName:\n                  description: Filter results matching company name\n                  type: string\n                HasVideo:\n                  description: Filter results based on having video content\n                  type: boolean\n                VideoId:\n                  description: Filter results based on matching a single Video ID.\n                  type: integer\n                  format: int64\n                VideoTargetCountries:\n                  description: List of 2 character country codes when filtering on video\n                    target countries.\n                  type: array\n                  items:\n                    type: string\n                VideoTargetLanguages:\n                  description: Specify video target languages. This takes into\n                    consideration both language spoken and language subtitled.\n                  type: array\n                  items:\n                    type: string\n                SortByTimeStamp:\n                  description: Sort results based on last modified descending.  Default is\n                    sorted by _score. DEPRECIATED! Use SortBy instead.\n                  type: boolean\n                  x-nullable: false\n                SortBy:\n                  description: SortBy\n                  type: string\n                  enum:\n                    - NOT_SET\n                    - Relevance\n                    - TimeStamp\n                    - IvaRating\n                    - ReleaseDate\n                    - CalculatedTrendRank\n                ModifiedRecordsSince:\n                  description: Filter results based on timestamp.  Returns \u003e= value\n                    timestamp (UTC) provided.\n                  type: string\n                  format: date-time\n                OriginatingNetworks:\n                  description: \"The Network the current first run shows appear on. Ex: ABC,\n                    NBC, Netflix, etc.  \"\n                  type: array\n                  items:\n                    type: string\n                Status:\n                  description: \"The status of the movie or show.  Ex: Returning_Series,\n                    in_production, etc.  \"\n                  type: array\n                  items:\n                    type: string\n                OriginalLanguages:\n                  description: The original language of the program.\n                  type: array\n                  items:\n                    type: string\n                Revenue:\n                  description: Filter results where movie revenue is greater than or equal\n                    to this value.\n                  type: integer\n                  format: int64\n                Budget:\n                  description: Filter results where movie budget is greater than or equal\n                    to this value.\n                  type: integer\n                  format: int64\n                Minimum_IvaRating:\n                  description: Filter results with a minimum Rating greater than or equal\n                    to this value. (0 to 100)\n                  type: integer\n                  format: int32\n                Minimum_EncodeDate:\n                  description: Filter results based on encode date.\n                  type: string\n                  format: date-time\n                IncludeDeleted:\n                  description: Include Soft Deleted Records. Default (false)\n                  type: boolean\n                  x-nullable: false\n                TrendSourceIds:\n                  description: \"Program Trend Source Ids.  Ex: 2,3.\"\n                  type: array\n                  items:\n                    format: int32\n                    type: integer\n                    x-nullable: false\n                TrendBrands:\n                  description: \"Program Trend Brands.  Ex: IMDB,IVA\"\n                  type: array\n                  items:\n                    enum:\n                      - IMDB\n                      - IVA\n                      - BoxOfficeMojo\n                      - TMDB\n                      - RottenTomatoes\n                      - TVGuide\n                      - iTunes\n                      - Amazon\n                      - Fios\n                      - Gamespot\n                      - Hulu\n                      - MovieClips\n                      - Netflix\n                      - PlutoTV\n                      - Redbox\n                      - TheNumbers\n                      - Vudu\n                      - Xfinity\n                      - Youtube\n                    type: string\n                TrendCountries:\n                  description: \"Program Trend Countries.  Ex: US,CA.\"\n                  type: array\n                  items:\n                    type: string\n                TrendListClassifiers:\n                  description: \"Program Trend List Classifiers.  Ex: AVOD,SVOD.\"\n                  type: array\n                  items:\n                    enum:\n                      - Publisher\n                      - TVOD\n                      - SVOD\n                      - Revenue\n                      - Social\n                      - Trailers\n                      - AVOD\n                      - Physical\n                    type: string\n                MissingExternalIdNames:\n                  description: List of External ID Names that will be used to find where\n                    they DO NOT exist.\n                  type: array\n                  items:\n                    type: string\n                BasedOns:\n                  description: List of string\n                  type: array\n                  items:\n                    type: string\n                BasedOnInstanceOfs:\n                  description: List of string\n                  type: array\n                  items:\n                    type: string\n                FilmingLocations:\n                  description: List of string\n                  type: array\n                  items:\n                    type: string\n                NarrativeLocations:\n                  description: List of string\n                  type: array\n                  items:\n                    type: string\n                TimePeriods:\n                  description: List of string\n                  type: array\n                  items:\n                    type: string\n                Subjects:\n                  description: List of string\n                  type: array\n                  items:\n                    type: string\n                MicroGenres:\n                  description: List of string\n                  type: array\n                  items:\n                    type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SearchEntertainmentResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SearchEntertainmentResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/SearchEntertainmentResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SearchEntertainmentResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Search all entertainment programs.\n      tags:\n        - Entertainment\n  /ExternalIds/GracenoteMovie:\n    get:\n      deprecated: false\n      description: Not accessible with a Demo account.  **Special permissions needed** for\n        access to this operation.  Contact\n        [Sales](mailto:sales@internetvideoarchive.com).\n      operationId: GetGracenoteMovieIds\n      parameters:\n        - description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Determines the page size.  (Maximum of 1000)\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieExternalIdMap\"\n                title: List\u003cMovieExternalIdMap\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieExternalIdMap\"\n                title: List\u003cMovieExternalIdMap\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieExternalIdMap\"\n                title: List\u003cMovieExternalIdMap\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieExternalIdMap\"\n                title: List\u003cMovieExternalIdMap\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns list of all MovieId, Gracenote Id pairs.\n      tags:\n        - ExternalIds\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /ExternalIds/GracenoteShow:\n    get:\n      deprecated: false\n      description: Not accessible with a Demo account. **Special permissions needed** for\n        access to this operation. Contact\n        [Sales](mailto:sales@internetvideoarchive.com).\n      operationId: GetGracenoteShowIds\n      parameters:\n        - description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Determines the page size.  (Maximum of 1000)\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowExternalIdMap\"\n                title: List\u003cShowExternalIdMap\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowExternalIdMap\"\n                title: List\u003cShowExternalIdMap\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowExternalIdMap\"\n                title: List\u003cShowExternalIdMap\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowExternalIdMap\"\n                title: List\u003cShowExternalIdMap\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns list of all ShowId, Gracenote Id pairs.\n      tags:\n        - ExternalIds\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /ExternalIds/ImdbMovie:\n    get:\n      deprecated: false\n      description: Ingest this ID map to create connections between the objects in your\n        existing database with an IMDB ID to the IVA Movie objects.\n      operationId: GetImdbMovieIds\n      parameters:\n        - description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Determines the page size.  (Maximum of 1000)\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieExternalIdMap\"\n                title: List\u003cMovieExternalIdMap\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieExternalIdMap\"\n                title: List\u003cMovieExternalIdMap\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieExternalIdMap\"\n                title: List\u003cMovieExternalIdMap\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieExternalIdMap\"\n                title: List\u003cMovieExternalIdMap\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns list of all MovieId, IMDB Id pairs.\n      tags:\n        - ExternalIds\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /ExternalIds/ImdbShow:\n    get:\n      deprecated: false\n      description: ngest this ID map to create connections between the objects in your\n        existing database with an IMDB ID to the IVA Show objects.\n      operationId: GetImdbShowIds\n      parameters:\n        - description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Determines the page size.  (Maximum of 1000)\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowExternalIdMap\"\n                title: List\u003cShowExternalIdMap\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowExternalIdMap\"\n                title: List\u003cShowExternalIdMap\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowExternalIdMap\"\n                title: List\u003cShowExternalIdMap\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowExternalIdMap\"\n                title: List\u003cShowExternalIdMap\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns list of all MovieId, Tmdb Id pairs.\n      tags:\n        - ExternalIds\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /ExternalIds/RoviMovie:\n    get:\n      deprecated: false\n      description: Not accessible with a Demo account. **Special permissions needed** for\n        access to this operation. Contact\n        [Sales](mailto:sales@internetvideoarchive.com).\n      operationId: GetTivoMovieIds\n      parameters:\n        - description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Determines the page size.  (Maximum of 1000)\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieExternalIdMap\"\n                title: List\u003cMovieExternalIdMap\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieExternalIdMap\"\n                title: List\u003cMovieExternalIdMap\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieExternalIdMap\"\n                title: List\u003cMovieExternalIdMap\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieExternalIdMap\"\n                title: List\u003cMovieExternalIdMap\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns list of all MovieId, Tivo Id pairs.\n      tags:\n        - ExternalIds\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /ExternalIds/RoviShow:\n    get:\n      deprecated: false\n      description: Not accessible with a Demo account. **Special permissions needed** for\n        access to this operation. Contact\n        [Sales](mailto:sales@internetvideoarchive.com).\n      operationId: GetTivoShowIds\n      parameters:\n        - description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Determines the page size.  (Maximum of 1000)\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowExternalIdMap\"\n                title: List\u003cShowExternalIdMap\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowExternalIdMap\"\n                title: List\u003cShowExternalIdMap\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowExternalIdMap\"\n                title: List\u003cShowExternalIdMap\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowExternalIdMap\"\n                title: List\u003cShowExternalIdMap\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns list of all ShowId, Tivo Id pairs.\n      tags:\n        - ExternalIds\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /ExternalIds/TmdbMovie:\n    get:\n      deprecated: false\n      description: Use to link a TMDB ID to an IVA Movie ID.\n      operationId: GetTmdbMovieIds\n      parameters:\n        - description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Determines the page size.  (Maximum of 1000)\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieExternalIdMap\"\n                title: List\u003cMovieExternalIdMap\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieExternalIdMap\"\n                title: List\u003cMovieExternalIdMap\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieExternalIdMap\"\n                title: List\u003cMovieExternalIdMap\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieExternalIdMap\"\n                title: List\u003cMovieExternalIdMap\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns list of all MovieId, Tmdb Id pairs.\n      tags:\n        - ExternalIds\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /ExternalIds/TmdbShow:\n    get:\n      deprecated: false\n      description: Use to link a TMDB ID to an IVA Show ID.\n      operationId: GetTmdbShowIds\n      parameters:\n        - description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Determines the page size.  (Maximum of 1000)\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowExternalIdMap\"\n                title: List\u003cShowExternalIdMap\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowExternalIdMap\"\n                title: List\u003cShowExternalIdMap\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowExternalIdMap\"\n                title: List\u003cShowExternalIdMap\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowExternalIdMap\"\n                title: List\u003cShowExternalIdMap\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns list of all ShowId, TMDB Id pairs.\n      tags:\n        - ExternalIds\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /ExternalIds/Webedia:\n    get:\n      deprecated: false\n      description: Not accessible with a Demo account. **Special permissions needed** for\n        access to this operation. Contact\n        [Sales](mailto:sales@internetvideoarchive.com).\n      operationId: GetWebediaMovieIds\n      parameters:\n        - description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Determines the page size.  (Maximum of 1000)\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieExternalIdMap\"\n                title: List\u003cMovieExternalIdMap\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieExternalIdMap\"\n                title: List\u003cMovieExternalIdMap\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieExternalIdMap\"\n                title: List\u003cMovieExternalIdMap\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieExternalIdMap\"\n                title: List\u003cMovieExternalIdMap\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns list of all MovieId, Webedia Id pairs.\n      tags:\n        - ExternalIds\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/Fandango/countries/{country}/postalcodes/{postalcode}\":\n    get:\n      deprecated: false\n      description: \"\"\n      operationId: GetFandangoGeoLocationPostalCode\n      parameters:\n        - in: path\n          name: postalcode\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: country\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FandangoGeoLocationPostalCode\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/FandangoGeoLocationPostalCode\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/FandangoGeoLocationPostalCode\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/FandangoGeoLocationPostalCode\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Gets geo-location data for a postal code.\n      tags:\n        - Fandango\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/Fandango/countries/{country}/states/{state}/cities/{city}\":\n    get:\n      deprecated: false\n      description: \"\"\n      operationId: GetFandangoGeoLocationCity\n      parameters:\n        - in: path\n          name: country\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: city\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: state\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FandangoGeoLocationCity\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/FandangoGeoLocationCity\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/FandangoGeoLocationCity\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/FandangoGeoLocationCity\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Gets geo-location data for a city.\n      tags:\n        - Fandango\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Fandango/movies:\n    get:\n      deprecated: false\n      description: \"\"\n      operationId: GetFandangoMovies\n      parameters:\n        - description: Specify InTheaters or ComingSoon.\n          in: query\n          name: Type\n          required: true\n          x-nullable: false\n          schema:\n            type: string\n            enum:\n              - InTheaters\n              - ComingSoon\n        - description: Latitude of the user's location.\n          in: query\n          name: Latitude\n          required: false\n          schema:\n            type: number\n            format: double\n        - description: Longitude of the user's location.\n          in: query\n          name: Longitude\n          required: false\n          schema:\n            type: number\n            format: double\n        - description: Zip code of the user's location.\n          in: query\n          name: ZipCode\n          required: false\n          schema:\n            type: string\n        - description: Search radius in miles around the user's location.\n          in: query\n          name: Radius\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Number of items to return. Used in pagination.\n          in: query\n          name: Limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Offset index of the first item to return. Used in pagination..\n          in: query\n          name: Offset\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FandangoMovies\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/FandangoMovies\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/FandangoMovies\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/FandangoMovies\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Search for movies available.\n      tags:\n        - Fandango\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Fandango/movies/Id:\n    get:\n      deprecated: false\n      description: \"\"\n      operationId: GetFandangoMovie\n      parameters:\n        - description: The ID of the movie.\n          in: query\n          name: MovieId\n          required: true\n          schema:\n            type: string\n        - description: The provider for the movie ID.\n          in: query\n          name: IdProvider\n          required: true\n          x-nullable: false\n          schema:\n            type: string\n            enum:\n              - fandangoApi\n              - fandango\n              - IVA\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FandangoMovie\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/FandangoMovie\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/FandangoMovie\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/FandangoMovie\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Gets a movie.\n      tags:\n        - Fandango\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Fandango/movies/Id/display-dates:\n    get:\n      deprecated: false\n      description: \"\"\n      operationId: GetFandangoMovieDisplayDates\n      parameters:\n        - description: The ID of the movie.\n          in: query\n          name: MovieId\n          required: true\n          schema:\n            type: string\n        - description: The provider for the movie ID.\n          in: query\n          name: IdProvider\n          required: true\n          x-nullable: false\n          schema:\n            type: string\n            enum:\n              - fandangoApi\n              - fandango\n              - IVA\n        - description: Latitude of the user's location.\n          in: query\n          name: Latitude\n          required: false\n          schema:\n            type: number\n            format: double\n        - description: Longitude of the user's location.\n          in: query\n          name: Longitude\n          required: false\n          schema:\n            type: number\n            format: double\n        - description: Zip code of the user's location.\n          in: query\n          name: ZipCode\n          required: false\n          schema:\n            type: string\n        - description: Search radius in miles around the user's location.\n          in: query\n          name: Radius\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Start datetime (ISO-8601) for the display date range. Defaults to\n            UTC now.\n          in: query\n          name: StartDateTime\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: End datetime (ISO-8601) for the display date range. Defaults to no\n            end datetime.\n          in: query\n          name: EndDateTime\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Comma delimited list of theaters to exclude.\n          in: query\n          name: ExcludeTheaterIds\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Comma delimited list of theater chains to filter.\n          in: query\n          name: TheaterChainCodes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FandangoDisplayDates\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/FandangoDisplayDates\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/FandangoDisplayDates\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/FandangoDisplayDates\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Gets display dates for a movie based on geolocation.\n      tags:\n        - Fandango\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Fandango/movies/Id/showtime-groupings:\n    get:\n      deprecated: false\n      description: \"\"\n      operationId: GetFandangoMovieShowtimeGroupings\n      parameters:\n        - description: The ID of the movie.\n          in: query\n          name: MovieId\n          required: true\n          schema:\n            type: string\n        - description: The provider for the movie ID.\n          in: query\n          name: IdProvider\n          required: true\n          x-nullable: false\n          schema:\n            type: string\n            enum:\n              - fandangoApi\n              - fandango\n              - IVA\n        - description: Longitude of the user's location.\n          in: query\n          name: Longitude\n          required: false\n          schema:\n            type: number\n            format: double\n        - description: Latitude of the user's location.\n          in: query\n          name: Latitude\n          required: false\n          schema:\n            type: number\n            format: double\n        - description: Zip code of the user's location.\n          in: query\n          name: ZipCode\n          required: false\n          schema:\n            type: string\n        - description: Search radius in miles around the user's location.\n          in: query\n          name: Radius\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Start date for the display date range. Defaults to UTC now.\n          in: query\n          name: StartDisplayDate\n          required: false\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: End display date. Defaults to start display date.\n          in: query\n          name: EndDisplayDate\n          required: false\n          schema:\n            type: string\n            format: date-time\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FandangoShowtimeGroupings\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/FandangoShowtimeGroupings\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/FandangoShowtimeGroupings\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/FandangoShowtimeGroupings\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Gets movie showtimes grouped by date, theater, format, and amenities.\n      tags:\n        - Fandango\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Fandango/showtimes/:\n    get:\n      deprecated: false\n      description: \"\"\n      operationId: GetFandangoShowtimes\n      parameters:\n        - description: The ID of the theater (required if latitude/longitude or zipCode not\n            provided).\n          in: query\n          name: TheaterId\n          required: false\n          schema:\n            type: string\n        - description: The provider for the theater ID.\n          in: query\n          name: TheaterIdProvider\n          required: false\n          schema:\n            type: string\n            enum:\n              - fandangoApi\n              - tms\n        - description: Longitude of the user's location.\n          in: query\n          name: Longitude\n          required: false\n          schema:\n            type: number\n            format: double\n        - description: Latitude of the user's location.\n          in: query\n          name: Latitude\n          required: false\n          schema:\n            type: number\n            format: double\n        - description: Zip code of the user's location.\n          in: query\n          name: ZipCode\n          required: false\n          schema:\n            type: string\n        - description: Search radius in miles around the user's location.\n          in: query\n          name: Radius\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Start datetime (ISO-8601) for the display date range. Defaults to\n            UTC now.\n          in: query\n          name: StartDateTime\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: End datetime (ISO-8601) for the display date range. Defaults to no\n            end datetime.\n          in: query\n          name: EndDateTime\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Start date for the display date range. Defaults to UTC now.\n          in: query\n          name: StartDisplayDate\n          required: false\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: End display date. Defaults to start display date.\n          in: query\n          name: EndDisplayDate\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Filter showtimes by movie title.\n          in: query\n          name: MovieTitle\n          required: false\n          schema:\n            type: string\n        - description: Filter showtimes by theater name.\n          in: query\n          name: TheaterName\n          required: false\n          schema:\n            type: string\n        - description: Filter showtimes by movie ID.\n          in: query\n          name: MovieId\n          required: false\n          schema:\n            type: string\n        - description: The provider for the movie ID.\n          in: query\n          name: MovieIdProvider\n          required: false\n          schema:\n            type: string\n            enum:\n              - fandangoApi\n              - fandango\n              - IVA\n        - description: Filter showtimes by amenity list (comma delimited). Only entries\n            with amenities exactly matching this list are returned.\n          in: query\n          name: AmenityIds\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The provider for the amenity ID.\n          in: query\n          name: AmenityIdProvider\n          required: false\n          schema:\n            type: string\n            enum:\n              - fandangoApi\n              - fandango\n        - description: Number of items to return. Used in pagination.\n          in: query\n          name: Limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Offset index of the first item to return. Used in pagination.\n          in: query\n          name: Offset\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FandangoShowtimes\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/FandangoShowtimes\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/FandangoShowtimes\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/FandangoShowtimes\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Gets showtimes by geolocation/theater and date.\n      tags:\n        - Fandango\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/Fandango/showtimes/{ShowtimeId}\":\n    get:\n      deprecated: false\n      description: \"\"\n      operationId: GetFandangoShowtime\n      parameters:\n        - description: Showtime ID for request.\n          in: path\n          name: ShowtimeId\n          required: true\n          schema:\n            type: string\n        - description: The provider for the showtime ID.\n          in: query\n          name: IdProvider\n          required: true\n          x-nullable: false\n          schema:\n            type: string\n            enum:\n              - fandangoApi\n              - fandango\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FandangoShowtimeDetails\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/FandangoShowtimeDetails\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/FandangoShowtimeDetails\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/FandangoShowtimeDetails\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Get showtime details by showtime id.\n      tags:\n        - Fandango\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Fandango/theaters/:\n    get:\n      deprecated: false\n      description: \"\"\n      operationId: GetFandangoTheaters\n      parameters:\n        - description: Longitude of the user's location.\n          in: query\n          name: Longitude\n          required: false\n          schema:\n            type: number\n            format: double\n        - description: Latitude of the user's location.\n          in: query\n          name: Latitude\n          required: false\n          schema:\n            type: number\n            format: double\n        - description: Zip code of the user's location.\n          in: query\n          name: ZipCode\n          required: false\n          schema:\n            type: string\n        - description: Search radius in miles around the user's location.\n          in: query\n          name: Radius\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Number of items to return. Used in pagination.\n          in: query\n          name: Limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Offset index of the first item to return. Used in pagination.\n          in: query\n          name: Offset\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FandangoTheaters\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/FandangoTheaters\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/FandangoTheaters\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/FandangoTheaters\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Gets theaters close to a geolocation.\n      tags:\n        - Fandango\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/Fandango/theaters/{TheaterId}\":\n    get:\n      deprecated: false\n      description: \"\"\n      operationId: GetFandangoTheater\n      parameters:\n        - description: Id of theater.\n          in: path\n          name: TheaterId\n          required: true\n          schema:\n            type: string\n        - description: The provider for the theater ID.\n          in: query\n          name: IdProvider\n          required: true\n          schema:\n            type: string\n            enum:\n              - fandangoApi\n              - tms\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FandangoTheaterResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/FandangoTheaterResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/FandangoTheaterResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/FandangoTheaterResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Gets a theater.\n      tags:\n        - Fandango\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/Fandango/theaters/{TheaterId}/display-dates\":\n    get:\n      deprecated: false\n      description: \"\"\n      operationId: GetFandangoTheaterDisplayDates\n      parameters:\n        - description: Id of theater.\n          in: path\n          name: TheaterId\n          required: true\n          schema:\n            type: string\n        - description: The provider for the theater ID.\n          in: query\n          name: IdProvider\n          required: true\n          schema:\n            type: string\n            enum:\n              - fandangoApi\n              - tms\n        - description: Start datetime (ISO-8601) for the display date range. Defaults to\n            UTC now.\n          in: query\n          name: StartDateTime\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: End datetime (ISO-8601) for the display date range. Defaults to no\n            end datetime.\n          in: query\n          name: EndDateTime\n          required: false\n          schema:\n            type: string\n            format: date-time\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FandangoDisplayDates\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/FandangoDisplayDates\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/FandangoDisplayDates\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/FandangoDisplayDates\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Gets display dates for a theater.\n      tags:\n        - Fandango\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/Fandango/theaters/{TheaterId}/showtime-groupings\":\n    get:\n      deprecated: false\n      description: \"\"\n      operationId: GetFandangoTheaterShowtimeGroupings\n      parameters:\n        - description: Offset index of the first item to return. Used in pagination.\n          in: path\n          name: TheaterId\n          required: true\n          schema:\n            type: string\n        - description: The provider for the theater ID.\n          in: query\n          name: IdProvider\n          required: true\n          schema:\n            type: string\n            enum:\n              - fandangoApi\n              - tms\n        - description: Start date for the display date range. Defaults to UTC now.\n          in: query\n          name: StartDisplayDate\n          required: false\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: End display date. Defaults to start display date.\n          in: query\n          name: EndDisplayDate\n          required: false\n          schema:\n            type: string\n            format: date-time\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FandangoTheaterShowtimeGroupings\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/FandangoTheaterShowtimeGroupings\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/FandangoTheaterShowtimeGroupings\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/FandangoTheaterShowtimeGroupings\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Gets theater showtimes grouped by date, movie, format, and amenities.\n      tags:\n        - Fandango\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Find/Movie/:\n    get:\n      deprecated: false\n      description: \u003e-\n        Use FindMovie with a third party ID like IMDB, TMDB, Gracenote, Tivo,\n        etc. to find the corresponding movie in the IVA database.  For a full\n        list of supported ID types see /Movies/AlternateIdTypes. \n\n\n\n\n        `Recommendation: Use with small data sets or for a proof of concept. `\n      operationId: FindMovie\n      parameters:\n        - description: Required third party ID type of MovieAlternateId.\n          in: query\n          name: IdType\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Required third party ID of Movie.\n          in: query\n          name: Id\n          required: true\n          schema:\n            type: string\n        - description: List of additional objects to include in the movie object.\n          in: query\n          name: Includes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - Genres\n                - Releases\n                - Contributors\n                - AlternateTitles\n                - Descriptions\n                - Companies\n                - Tags\n                - Images\n                - Videos\n                - ExternalIds\n                - Availabilities\n              type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MovieResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/MovieResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/MovieResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/MovieResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Find a movie using third party ID.\n      tags:\n        - Find\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Find/Show/:\n    get:\n      deprecated: false\n      description: \"Use FindShow with a third party ID like IMDB, TMDB, Gracenote, Tivo,\n        etc. to find the corresponding TV show in the IVA database. For a full\n        list of supported ID types see /Shows/AlternateIdTypes. `Recommendation:\n        Use with small data sets or for a proof of concept. `\"\n      operationId: FindShow\n      parameters:\n        - description: Required third party ID type of ShowAlternateId.\n          in: query\n          name: IdType\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Required third party ID of Show.\n          in: query\n          name: Id\n          required: true\n          schema:\n            type: string\n        - description: List of additional objects to include in the show response.\n          in: query\n          name: Includes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - Genres\n                - Releases\n                - Contributors\n                - AlternateTitles\n                - Descriptions\n                - Companies\n                - Tags\n                - Images\n                - Videos\n                - Seasons\n                - EpisodeVideos\n                - SeasonVideos\n                - ExternalIds\n                - Availabilities\n              type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ShowResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ShowResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/ShowResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ShowResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Find a TV show using a third party ID.\n      tags:\n        - Find\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Games/All:\n    get:\n      deprecated: false\n      description: Returns a AllGameResponse object containing a list of all games. By\n        default the API will only return basic title information. Additional\n        objects can be included by passing the object in the Includes parameter.\n      operationId: GetAllGames\n      parameters:\n        - description: Limits the total items returned. Maximum of 100 per request.\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Skips records using for paging results.\n          in: query\n          name: Skip\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: List of additional objects to include in the game object.\n          in: query\n          name: Includes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - Genres\n                - Releases\n                - AlternateTitles\n                - Descriptions\n                - Companies\n                - Tags\n                - Videos\n                - ExternalIds\n              type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AllGamesResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/AllGamesResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/AllGamesResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/AllGamesResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Gets all Games.\n      tags:\n        - Games\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Games/RankedSearch/:\n    get:\n      deprecated: false\n      description: Find game using title ordered by year.\n      operationId: GetGameRanked\n      parameters:\n        - in: query\n          name: StartsWith\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GameRankedResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/GameRankedResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/GameRankedResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/GameRankedResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Find Game by Title ordered by year.\n      tags:\n        - Games\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/Games/{Id}\":\n    get:\n      deprecated: false\n      description: By default the API will only return basic title information. Additional\n        objects can be included by passing the object in the Includes parameter.\n      operationId: GetGame\n      parameters:\n        - description: Required ID of Game.\n          in: path\n          name: Id\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int64\n        - description: List of additional objects to include in the game response.\n          in: query\n          name: Includes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - Genres\n                - Releases\n                - AlternateTitles\n                - Descriptions\n                - Companies\n                - Tags\n                - Videos\n                - ExternalIds\n              type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GameResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/GameResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/GameResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/GameResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Get Game by Game ID.\n      tags:\n        - Games\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/GoWatchIt/Episodes/{Id}/Availabilities\":\n    get:\n      deprecated: false\n      description: \"Returns GoWatchit episode availability by Entertainment Episode ID.\n        Special permission is required to access this endpoint. \"\n      operationId: GetGoWatchItEpisodeAvailabilities\n      parameters:\n        - description: Required ID of Entertainment Episode.\n          in: path\n          name: Id\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int64\n        - description: Required GoWatchIt API key.\n          in: query\n          name: ApiKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GoWatchItEpisodeAvailabilitiesResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/GoWatchItEpisodeAvailabilitiesResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/GoWatchItEpisodeAvailabilitiesResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/GoWatchItEpisodeAvailabilitiesResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Get GoWatchIt Episode Availability.\n      tags:\n        - GoWatchIt\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/GoWatchIt/Movies/{Id}/Availabilities\":\n    get:\n      deprecated: false\n      description: Returns GoWatchIt movie availability by Entertainment Movie ID.  Special\n        permission is required to access this endpoint.  Contact\n        [Sales](mailto:Sales@InternetVideoArchive.com) for more information.\n      operationId: GetGoWatchItMovieAvailabilities\n      parameters:\n        - description: Required ID of Entertainment Movie.\n          in: path\n          name: Id\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int64\n        - description: Required GoWatchIt API key.\n          in: query\n          name: ApiKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GoWatchItMovieAvailabilitiesResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/GoWatchItMovieAvailabilitiesResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/GoWatchItMovieAvailabilitiesResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/GoWatchItMovieAvailabilitiesResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Get GoWatchIt Movie Availability.\n      tags:\n        - GoWatchIt\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/GoWatchIt/Seasons/{Id}/Availabilities\":\n    get:\n      deprecated: false\n      description: Returns GoWatchIt season availability by Entertainment Season\n        ID.  Special permission is required to access this endpoint.  Contact\n        [Sales](mailto:Sales@InternetVideoArchive.com) for more information.\n      operationId: GetGoWatchItSeasonAvailabilities\n      parameters:\n        - description: Required ID of Entertainment Season.\n          in: path\n          name: Id\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int64\n        - description: Required GoWatchIt API key.\n          in: query\n          name: ApiKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GoWatchItSeasonAvailabilitiesResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/GoWatchItSeasonAvailabilitiesResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/GoWatchItSeasonAvailabilitiesResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/GoWatchItSeasonAvailabilitiesResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Get GoWatchIt Season Availability.\n      tags:\n        - GoWatchIt\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/GoWatchIt/Shows/{Id}/Availabilities\":\n    get:\n      deprecated: false\n      description: Returns GoWatchIt show availability by Entertainment Show ID.  Special\n        permission is required to access this endpoint. Please contact\n        [Sales](mailto:Sales@InternetVideoArchive.com) for more information.\n      operationId: GetGoWatchItShowAvailabilities\n      parameters:\n        - description: Required ID of Entertainment Show.\n          in: path\n          name: Id\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int64\n        - description: Required GoWatchIt API key.\n          in: query\n          name: ApiKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GoWatchItShowAvailabilitiesResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/GoWatchItShowAvailabilitiesResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/GoWatchItShowAvailabilitiesResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/GoWatchItShowAvailabilitiesResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Get GoWatchItShow Availability.\n      tags:\n        - GoWatchIt\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Images/Batch:\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n    post:\n      deprecated: false\n      description: Requires a list filepath.\n      operationId: GetImageBatch\n      parameters:\n        - description: List of Filepaths.\n          in: query\n          name: FilePath\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ImageBatchResponse\"\n                title: List\u003cImageBatchResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ImageBatchResponse\"\n                title: List\u003cImageBatchResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ImageBatchResponse\"\n                title: List\u003cImageBatchResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ImageBatchResponse\"\n                title: List\u003cImageBatchResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: List of Batch Image.\n      tags:\n        - Images\n  /Images/ScreenCaptures/Batch:\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n    post:\n      deprecated: false\n      description: Requires a list of filepaths.\n      operationId: GetScreenCaptureBatch\n      parameters:\n        - description: List of Filepaths.\n          in: query\n          name: FilePath\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ImageBatchResponse\"\n                title: List\u003cImageBatchResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ImageBatchResponse\"\n                title: List\u003cImageBatchResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ImageBatchResponse\"\n                title: List\u003cImageBatchResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ImageBatchResponse\"\n                title: List\u003cImageBatchResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: List of Screen Capture Responses.\n      tags:\n        - Images\n  /Images/ScreenCaptures/Redirect:\n    get:\n      deprecated: false\n      description: |-\n        Requires a valid filepath of a video asset screen capture.  \n\n        `Note: The swagger U/I does not support redirects.`\n      operationId: GetScreenCapture\n      parameters:\n        - description: Filepath of Image.\n          in: query\n          name: FilePath\n          required: true\n          schema:\n            type: string\n        - description: Redirect to the image. Default = true\n          in: query\n          name: Redirect\n          required: false\n          x-nullable: false\n          schema:\n            type: boolean\n        - description: Image url expiration in minutes. Default = 60\n          in: query\n          name: ExpirationMinutes\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ScreenCaptureRedirectResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ScreenCaptureRedirectResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/ScreenCaptureRedirectResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ScreenCaptureRedirectResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Redirect to a Screen Capture.\n      tags:\n        - Images\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/Images/{FilePath}/Redirect\":\n    get:\n      deprecated: false\n      description: \u003e-\n        Images should be downloaded and stored on the client server. Use\n        /Common/ImageTypes to see a list of available image types.  \n\n\n\n        `Note: The swagger U/I does not support redirects.`\n      operationId: GetImage\n      parameters:\n        - description: Filepath of Image.\n          in: path\n          name: FilePath\n          required: true\n          schema:\n            type: string\n        - description: Redirect to the image. Default = true\n          in: query\n          name: Redirect\n          required: false\n          x-nullable: false\n          schema:\n            type: boolean\n        - description: Image url expiration in minutes. Default = 60\n          in: query\n          name: ExpirationMinutes\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImageRedirectResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ImageRedirectResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/ImageRedirectResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ImageRedirectResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Redirect to an Image.\n      tags:\n        - Images\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/Metacritic/Movie/{Id}\":\n    get:\n      deprecated: false\n      description: Returns Metacritic Movie information by Entertainment Movie ID.\n      operationId: GetMetacriticMovie\n      parameters:\n        - description: Required ID of Entertainment Movie.\n          in: path\n          name: Id\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetacriticMovieResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/MetacriticMovieResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/MetacriticMovieResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/MetacriticMovieResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Get Metacritic Movie information.\n      tags:\n        - Metacritic\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/Metacritic/TV/{Id}\":\n    get:\n      deprecated: false\n      description: Returns Metacritic TV information by Entertainment Show ID.\n      operationId: GetMetacriticTv\n      parameters:\n        - description: Required ID of Entertainment Show.\n          in: path\n          name: Id\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int64\n        - description: Number of season.\n          in: query\n          name: SeasonNumber\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetacriticTvResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/MetacriticTvResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/MetacriticTvResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/MetacriticTvResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Get Metacritic TV information.\n      tags:\n        - Metacritic\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Movies/All:\n    get:\n      deprecated: false\n      description: \u003e\n        By default the API will only return basic title information. Additional\n        objects can be included by passing the object in the Includes\n        parameter.   \n\n\n\n        `Subscriptions with \"Limited\" data will only be able to include basic title information and Videos.`  \n      operationId: GetAllMovies\n      parameters:\n        - description: Limits the total items returned. Maximum of 100 per request.\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Skips records using for paging results.\n          in: query\n          name: Skip\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: List of additional objects to include in the movie objectSearch\n            movie by OriginalTitle.\n          in: query\n          name: Includes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - Genres\n                - Releases\n                - Contributors\n                - AlternateTitles\n                - Descriptions\n                - Companies\n                - Tags\n                - Images\n                - Videos\n                - ExternalIds\n                - Availabilities\n              type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AllMoviesResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/AllMoviesResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/AllMoviesResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/AllMoviesResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns a paged list of all movies.\n      tags:\n        - Movies\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Movies/AlternateIdTypes:\n    get:\n      deprecated: false\n      description: \u003e-\n        Movie alternate ID types refer to 3rd party IDs that IVA matches its own\n        movie IDs.  **EX: IMDB, TMDB**.  \n\n\n        `Use to get the Id of the ID type to use with /Find/Movie.`\n      operationId: GetMovieAlternateIdTypes\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieAlternateIdTypeResponse\"\n                title: List\u003cMovieAlternateIdTypeResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieAlternateIdTypeResponse\"\n                title: List\u003cMovieAlternateIdTypeResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieAlternateIdTypeResponse\"\n                title: List\u003cMovieAlternateIdTypeResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieAlternateIdTypeResponse\"\n                title: List\u003cMovieAlternateIdTypeResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns all MovieAlternateIdTypes\n      tags:\n        - Movies\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Movies/ComingSoon/:\n    get:\n      deprecated: false\n      description: \u003e-\n        Requires Skip and Take. Maximum page size is 10.\n\n\n        By default the API will only return basic title information.\n\n        Additional objects can be included by passing the object in the Includes parameter in a comma separated list. \n      operationId: GetMoviesComingSoon\n      parameters:\n        - description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Determines the page size.  (Maximum of 10)\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: List of additional objects to include in the movie response.\n          in: query\n          name: Includes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - Genres\n                - Releases\n                - Contributors\n                - AlternateTitles\n                - Descriptions\n                - Companies\n                - Tags\n                - Images\n                - Videos\n                - ExternalIds\n                - Availabilities\n              type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieResponse\"\n                title: List\u003cMovieResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieResponse\"\n                title: List\u003cMovieResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieResponse\"\n                title: List\u003cMovieResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieResponse\"\n                title: List\u003cMovieResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns list of all Movies coming to US Theaters.\n      tags:\n        - Movies\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Movies/InTheaters/:\n    get:\n      deprecated: false\n      description: \u003e-\n        Requires Skip and Take. Maximum page size is 10.\n\n\n        By default the API will only return basic title information.\n\n        Additional objects can be included by passing the object in the Includes parameter in a comma separated list. \n      operationId: GetMoviesInTheaters\n      parameters:\n        - description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Determines the page size.  (Maximum of 10)\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: List of additional objects to include in the movie response.\n          in: query\n          name: Includes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - Genres\n                - Releases\n                - Contributors\n                - AlternateTitles\n                - Descriptions\n                - Companies\n                - Tags\n                - Images\n                - Videos\n                - ExternalIds\n                - Availabilities\n              type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieResponse\"\n                title: List\u003cMovieResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieResponse\"\n                title: List\u003cMovieResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieResponse\"\n                title: List\u003cMovieResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieResponse\"\n                title: List\u003cMovieResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns list of all Movies currently in US Theaters.\n      tags:\n        - Movies\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Movies/Match/:\n    get:\n      deprecated: false\n      description: Use to match IVA movie data to another data source using title, year,\n        cast etc.\n      operationId: MatchToMovie\n      parameters:\n        - description: Title of movie to be matched.\n          in: query\n          name: Title\n          required: true\n          schema:\n            type: string\n        - description: Alternate Titles of movie to be matched.\n          in: query\n          name: AlternateTitles\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Release Year of movie to be matched.\n          in: query\n          name: Year\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Release Date of movie to be matched.\n          in: query\n          name: ReleaseDate\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Cast members of movie to be matched.\n          in: query\n          name: Cast\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Directors of movie to be matched.\n          in: query\n          name: Directors\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Description of movie to be matched.\n          in: query\n          name: Description\n          required: false\n          schema:\n            type: string\n        - description: Poster of movie to be matched.\n          in: query\n          name: Poster\n          required: false\n          schema:\n            type: string\n        - description: For fuzzy title match, default is 4, set to 0 for no fuzzy match.\n          in: query\n          name: StringDistance\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MatchToEntertainmentMovieResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/MatchToEntertainmentMovieResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/MatchToEntertainmentMovieResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/MatchToEntertainmentMovieResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Perform a match to Entertainment using Title, Year, Cast and Director.\n        Returns best match and score for the match.\n      tags:\n        - Movies\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n    post:\n      deprecated: false\n      description: Requires a valid MatchMovieCandidate, matches to Entertainment Movies\n      operationId: MatchToMoviePost\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Title:\n                  description: Title of movie to be matched.\n                  type: string\n                AlternateTitles:\n                  description: Alternate Titles of movie to be matched.\n                  type: array\n                  items:\n                    type: string\n                Year:\n                  description: Release Year of movie to be matched.\n                  type: integer\n                  format: int32\n                ReleaseDate:\n                  description: Release Date of movie to be matched.\n                  type: string\n                  format: date-time\n                Cast:\n                  description: Cast members of movie to be matched.\n                  type: array\n                  items:\n                    type: string\n                Directors:\n                  description: Directors of movie to be matched.\n                  type: array\n                  items:\n                    type: string\n                Description:\n                  description: Description of movie to be matched.\n                  type: string\n                Poster:\n                  description: Poster of movie to be matched.\n                  type: string\n                StringDistance:\n                  description: For fuzzy title match, default is 4, set to 0 for no fuzzy\n                    match.\n                  type: integer\n                  format: int32\n              required:\n                - Title\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MatchToEntertainmentMovieResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/MatchToEntertainmentMovieResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/MatchToEntertainmentMovieResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/MatchToEntertainmentMovieResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Perform a match to Entertainment using Title, Year, Cast and\n        Director.  Returns best match and score for the match.\n      tags:\n        - Movies\n  /Movies/MovieCertifications:\n    get:\n      deprecated: false\n      description: Returns all Movie Certifications used in a movie response with the\n        Releases object.\n      operationId: GetMovieCertifications\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieCertificationResponse\"\n                title: List\u003cMovieCertificationResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieCertificationResponse\"\n                title: List\u003cMovieCertificationResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieCertificationResponse\"\n                title: List\u003cMovieCertificationResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieCertificationResponse\"\n                title: List\u003cMovieCertificationResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: List of Movie Certifications\n      tags:\n        - Movies\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Movies/MovieGenres:\n    get:\n      deprecated: false\n      description: List of all movie genres used in the API.\n      operationId: GetMovieGenres\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieGenreResponse\"\n                title: List\u003cMovieGenreResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieGenreResponse\"\n                title: List\u003cMovieGenreResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieGenreResponse\"\n                title: List\u003cMovieGenreResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieGenreResponse\"\n                title: List\u003cMovieGenreResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: List of Movie Genres\n      tags:\n        - Movies\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Movies/ReleaseTypes:\n    get:\n      deprecated: false\n      description: \"Release type refers to the release. **EX: Theatrical, Home Video,\n        etc.**\"\n      operationId: GetMovieReleaseTypes\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieReleaseTypeResponse\"\n                title: List\u003cMovieReleaseTypeResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieReleaseTypeResponse\"\n                title: List\u003cMovieReleaseTypeResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieReleaseTypeResponse\"\n                title: List\u003cMovieReleaseTypeResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieReleaseTypeResponse\"\n                title: List\u003cMovieReleaseTypeResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: List of Movie Release Types\n      tags:\n        - Movies\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Movies/SearchAndDiscover:\n    get:\n      deprecated: false\n      description: \u003e-\n        Searchable Fields:\n\n        Title, AlternateTitles, Genres, OriginalReleaseDate, UnitedStatesReleaseDate, GermanyReleaseDate, FranceReleaseDate, UnitedKingdomReleaseDate, ItalyReleaseDate, JapanReleaseDate, Tags, Cast, Directors, Descriptions, Ratings, OriginalLanguage.\n\n        [Syntax Ref](https://docs.microsoft.com/en-us/rest/api/searchservice/simple-query-syntax-in-azure-search)\n\n\n        Filterable Fields:\n\n        ID, Title, AlternateTitles, Genres, OriginalReleaseDate, UnitedStatesReleaseDate, GermanyReleaseDate, FranceReleaseDate, UnitedKingdomReleaseDate, ItalyReleaseDate, JapanReleaseDate, Year, Tags, Cast, Directors, Descriptions, HasVideo, PosterFilePath, Ratings, OriginalLanguage, Runtime, Budget, Revenue, Created, Modified.\n\n        [Syntax Ref](https://docs.microsoft.com/en-us/rest/api/searchservice/odata-expression-syntax-for-azure-search)\n      operationId: SearchAndDiscoverMovie\n      parameters:\n        - description: Term to search for. This can be combined with all other options. Use\n            '*' to return any match.\n          in: query\n          name: term\n          required: false\n          schema:\n            type: string\n        - description: List of field names to be returned in the object.\n          in: query\n          name: SelectFields\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of field names to search using 'term.'\n          in: query\n          name: SearchFields\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Expression to filter results.\n          in: query\n          name: Filter\n          required: false\n          schema:\n            type: string\n        - description: List of field names to sort results.  Default is relevance.\n          in: query\n          name: OrderBy\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Limit results.  Maximum returned is 1000.\n          in: query\n          name: Top\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Skip number of results. Use this for paging results.\n          in: query\n          name: Skip\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Includes total results in response. This will have a performance\n            impact.\n          in: query\n          name: IncludeTotalResultCount\n          required: false\n          x-nullable: false\n          schema:\n            type: boolean\n        - description: Specifies whether ANY or ALL of the search terms must be matched in\n            order to count the item as a match.\n          in: query\n          name: SearchMode\n          required: false\n          x-nullable: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SearchMovieResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SearchMovieResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/SearchMovieResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SearchMovieResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Search and discover movies.\n      tags:\n        - Movies\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/Movies/{Id}\":\n    get:\n      deprecated: false\n      description: \u003e\n        By default the API will only return basic title information. Additional\n        objects can be included by passing the object in the Includes\n        parameter.   \n\n\n\n        `Subscriptions with \"Limited\" data will only be able to include basic title information and Videos.`  \n      operationId: GetMovie\n      parameters:\n        - description: Required ID of Movie.\n          in: path\n          name: Id\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int64\n        - description: List of additional objects to include in the movie response.\n          in: query\n          name: Includes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - Genres\n                - Releases\n                - Contributors\n                - AlternateTitles\n                - Descriptions\n                - Companies\n                - Tags\n                - Images\n                - Videos\n                - ExternalIds\n                - Availabilities\n              type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MovieResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/MovieResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/MovieResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/MovieResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns movie data for a specific IVA MovieId.\n      tags:\n        - Movies\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /My/Programs:\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n    post:\n      deprecated: false\n      description: Create new Program.\n      operationId: CreateMyProgram\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                ReferenceId:\n                  description: Client reference ID of MyVideo.\n                  type: string\n                Title:\n                  description: Title of MyVideo.\n                  type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MyProgramResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/MyProgramResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/MyProgramResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/MyProgramResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Create new Program.\n      tags:\n        - My\n    put:\n      deprecated: false\n      description: Update a Program.\n      operationId: UpdateMyProgram\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Id:\n                  description: Unique ID of MyVideo.\n                  type: integer\n                  format: int64\n                  x-nullable: false\n                ReferenceId:\n                  description: Client reference ID of MyVideo.\n                  type: string\n                Title:\n                  description: Title of MyVideo.\n                  type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MyProgramResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/MyProgramResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/MyProgramResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/MyProgramResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Update a Program.\n      tags:\n        - My\n  /My/Programs/All:\n    get:\n      deprecated: false\n      description: Get all Programs.\n      operationId: GetAllMyPrograms\n      parameters:\n        - description: Limits the total items returned. Maximum of 100 per request.\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Skips records using for paging results.\n          in: query\n          name: Skip\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AllMyProgramsResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/AllMyProgramsResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/AllMyProgramsResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/AllMyProgramsResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns all Programs.\n      tags:\n        - My\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/My/Programs/{Id}\":\n    get:\n      deprecated: false\n      description: Requires a valid Program ID.\n      operationId: GetMyProgram\n      parameters:\n        - description: Required ID of program.\n          in: path\n          name: Id\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MyProgramResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/MyProgramResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/MyProgramResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/MyProgramResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Get a Program by ID.\n      tags:\n        - My\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /My/Videos:\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n    post:\n      deprecated: false\n      description: Create new Video.\n      operationId: CreateMyVideo\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Url:\n                  description: Location of the media you wish to upload.\n                  type: string\n                NotificationUrl:\n                  description: Location to have us notify you of video encode status.\n                  type: string\n                ReferenceId:\n                  description: Client reference ID of MyVideo.\n                  type: string\n                Title:\n                  description: Title of MyVideo.\n                  type: string\n                Companies:\n                  description: Companies of MyVideo.\n                  type: array\n                  items:\n                    type: string\n                StartDate:\n                  description: First date of MyVideo availability.\n                  type: string\n                  format: date-time\n                ExpirationDate:\n                  description: Date MyVideo expires / becomes unavailable for streaming.\n                  type: string\n                  format: date-time\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MyVideoResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/MyVideoResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/MyVideoResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/MyVideoResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Create new Video.\n      tags:\n        - My\n    put:\n      deprecated: false\n      description: Update a Video.\n      operationId: UpdateMyVideo\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Id:\n                  description: Unique ID of MyVideo.\n                  type: integer\n                  format: int64\n                  x-nullable: false\n                ReferenceId:\n                  description: Client reference ID of MyVideo.\n                  type: string\n                Title:\n                  description: Title of MyVideo.\n                  type: string\n                Companies:\n                  description: Companies of MyVideo.\n                  type: array\n                  items:\n                    type: string\n                StartDate:\n                  description: First date of MyVideo availability.\n                  type: string\n                  format: date-time\n                ExpirationDate:\n                  description: Date MyVideo expires / becomes unavailable for streaming.\n                  type: string\n                  format: date-time\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MyVideoResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/MyVideoResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/MyVideoResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/MyVideoResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Update a Video.\n      tags:\n        - My\n  /My/Videos/All:\n    get:\n      deprecated: false\n      description: Get all Videos.\n      operationId: GetAllMyVideos\n      parameters:\n        - description: Limits the total items returned. Maximum of 100 per request.\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Skips records using for paging results.\n          in: query\n          name: Skip\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AllMyVideosResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/AllMyVideosResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/AllMyVideosResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/AllMyVideosResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns all Videos.\n      tags:\n        - My\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/My/Videos/{Id}\":\n    get:\n      deprecated: false\n      description: Requires a valid Video ID.\n      operationId: GetMyVideo\n      parameters:\n        - description: Required ID of video.\n          in: path\n          name: Id\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MyVideoResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/MyVideoResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/MyVideoResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/MyVideoResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Get a Video by ID.\n      tags:\n        - My\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /People/All:\n    get:\n      deprecated: false\n      description: Returns a AllPeopleResponse object containing a list of all poeple.\n      operationId: GetAllPeople\n      parameters:\n        - description: Limits the total items returned. Maximum of 100 per request.\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Skips records using for paging results.\n          in: query\n          name: Skip\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: List of additional objects to include in the person response.\n          in: query\n          name: Includes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - ExternalIds\n                - AlternateNames\n                - Images\n                - Descriptions\n                - Tags\n              type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AllPeopleResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/AllPeopleResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/AllPeopleResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/AllPeopleResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Gets all People.\n      tags:\n        - People\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /People/RankedSearch/:\n    get:\n      deprecated: false\n      description: Find person using name ordered by rank.\n      operationId: GetPersonRankedSearch\n      parameters:\n        - in: query\n          name: StartsWith\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PersonRankedResponse\"\n                title: List\u003cPersonRankedResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PersonRankedResponse\"\n                title: List\u003cPersonRankedResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PersonRankedResponse\"\n                title: List\u003cPersonRankedResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PersonRankedResponse\"\n                title: List\u003cPersonRankedResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Find Person by Name ordered by rank.\n      tags:\n        - People\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/People/{Id}\":\n    get:\n      deprecated: false\n      description: BETA - By default the API will only return basic People information.\n        Additional objects can be included by passing the object in the Includes\n        parameter.\n      operationId: GetPerson\n      parameters:\n        - description: Required ID of Person.\n          in: path\n          name: Id\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int64\n        - description: List of additional objects to include in the person response.\n          in: query\n          name: Includes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - ExternalIds\n                - AlternateNames\n                - Images\n                - Descriptions\n                - Tags\n              type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PersonResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/PersonResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/PersonResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns information on a person.\n      tags:\n        - People\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/People/{Id}/Filmography\":\n    get:\n      deprecated: false\n      description: Requires a valid Person ID.\n      operationId: GetFilmography\n      parameters:\n        - in: path\n          name: Id\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FilmographyResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/FilmographyResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/FilmographyResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/FilmographyResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Get a Person's Filmography.\n      tags:\n        - People\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Rev/Orders:\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n    post:\n      deprecated: false\n      description: Requires at least one Video ID.\n      operationId: CreateRevCaptionOrder\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                ClientApiKey:\n                  description: This is a secret key specific to each partner that wishes to\n                    use the Rev API.\n                  type: string\n                UserApiKey:\n                  description: This is a secret key specific to a Rev user, which\n                    identifies the user account under whose privileges the\n                    requested operation executes. This key can be obtained by\n                    logging in to Rev as the user in question and going to the\n                    Rev Account Settings page.\n                  type: string\n                ReferenceId:\n                  description: Optional order reference number.\n                  type: string\n                VideoId:\n                  description: ID of video to caption.\n                  type: integer\n                  format: int64\n                  x-nullable: false\n                NotificationUrl:\n                  description: Optional URL to send notifications when order is complete.\n                  type: string\n                UseSandbox:\n                  description: Optional URL to send notifications when order is complete.\n                  type: boolean\n                  x-nullable: false\n              required:\n                - ClientApiKey\n                - UserApiKey\n                - VideoId\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CaptionOrderResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CaptionOrderResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/CaptionOrderResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/CaptionOrderResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Creates a caption order for given Video Ids.\n      tags:\n        - Rev\n  /Rev/Orders/All:\n    get:\n      deprecated: false\n      description: Orders are paged. Use Order ID to retrieve the caption attachment.\n      operationId: GetRevCaptions\n      parameters:\n        - description: Limits the total items returned. Maximum of 100 per request.\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Skips records using for paging results.\n          in: query\n          name: Skip\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AllRevCaptionsResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/AllRevCaptionsResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/AllRevCaptionsResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/AllRevCaptionsResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: List of Caption Orders.\n      tags:\n        - Rev\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/Rev/{Id}/Attachments/{Type}/content\":\n    get:\n      deprecated: false\n      description: Requires caption OrderId and Type of caption.\n      operationId: GetRevCaptionAttachmentContent\n      parameters:\n        - description: Caption Order Id.\n          in: path\n          name: Id\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int64\n        - description: Type of caption content.\n          in: path\n          name: Type\n          required: true\n          x-nullable: false\n          schema:\n            type: string\n            enum:\n              - WebVTT\n              - Ttml\n              - SubRip\n              - Scc\n              - Mcc\n              - QtText\n              - Transcript\n              - Dfxp\n              - CheetaCap\n              - Stl\n              - AvidDs\n              - FacebookSubRip\n              - Unknown\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                title: String\n                type: string\n            application/xml:\n              schema:\n                title: String\n                type: string\n            text/csv:\n              schema:\n                title: String\n                type: string\n            text/html:\n              schema:\n                title: String\n                type: string\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Caption text.\n      tags:\n        - Rev\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/SDKs/{Client}\":\n    get:\n      deprecated: false\n      description: Generate and download SDK's for using the API.  Requires a subscription\n        key for authorization and a valid client.\n      operationId: GetSDK\n      parameters:\n        - description: Client SDK\n          in: path\n          name: Client\n          required: true\n          schema:\n            type: string\n            enum:\n              - akka_scala\n              - android\n              - async_scala\n              - bash\n              - clojure\n              - cpprest\n              - csharp\n              - CsharpDotNet2\n              - cwiki\n              - dart\n              - dynamic_html\n              - elixir\n              - flash\n              - go\n              - groovy\n              - html\n              - html2\n              - java\n              - javascript\n              - javascript_closure_angular\n              - jaxrs_cxf_client\n              - jmeter\n              - objc\n              - perl\n              - php\n              - python\n              - qt5cpp\n              - ruby\n              - scala\n              - swagger\n              - swagger_yaml\n              - swift\n              - swift3\n              - tizen\n              - typescript_angular\n              - typescript_angular2\n              - typescript_fetch\n              - typescript_node\n        - description: Redirect to download the zipped SDK.\n          in: query\n          name: RedirectToFile\n          required: true\n          x-nullable: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SDKResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SDKResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/SDKResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SDKResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns a zip file of client SDK.\n      tags:\n        - SDKs\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Shows/All:\n    get:\n      deprecated: false\n      description: \u003e-\n        By default the API will only return basic title information. Additional\n        objects can be included by passing the object in the Includes\n        parameter. \n\n\n\n        `Subscriptions with \"Limited\" data will only be able to include basic title information, Videos, EpisodicVideos, and SeasonVideos.`\n      operationId: GetAllShows\n      parameters:\n        - description: Limits the total items returned. Maximum of 10 per request.\n          in: query\n          name: Take\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Skips records using for paging results.\n          in: query\n          name: Skip\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: List of additional objects to include in the show object.\n          in: query\n          name: Includes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - Genres\n                - Releases\n                - Contributors\n                - AlternateTitles\n                - Descriptions\n                - Companies\n                - Tags\n                - Images\n                - Videos\n                - Seasons\n                - EpisodeVideos\n                - SeasonVideos\n                - ExternalIds\n                - Availabilities\n              type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AllShowsResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/AllShowsResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/AllShowsResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/AllShowsResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns a paged list of all TV shows.\n      tags:\n        - Shows\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Shows/AlternateIdTypes:\n    get:\n      deprecated: false\n      description: \"Alternate Id types refer to the 3rd party ID sets IVA data has\n        matched.  **Ex: IMDB**\"\n      operationId: GetShowAlternateIdTypes\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowAlternateIdTypeResponse\"\n                title: List\u003cShowAlternateIdTypeResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowAlternateIdTypeResponse\"\n                title: List\u003cShowAlternateIdTypeResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowAlternateIdTypeResponse\"\n                title: List\u003cShowAlternateIdTypeResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowAlternateIdTypeResponse\"\n                title: List\u003cShowAlternateIdTypeResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: List of External Id Types\n      tags:\n        - Shows\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Shows/Match/:\n    get:\n      deprecated: false\n      description: Use to match IVA show data to another data source using title, director,\n        cast, etc.\n      operationId: MatchToShow\n      parameters:\n        - description: Title of Show to be matched.\n          in: query\n          name: Title\n          required: true\n          schema:\n            type: string\n        - description: Alternate Titles of Show to be matched.\n          in: query\n          name: AlternateTitles\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Release Year of Show to be matched.\n          in: query\n          name: Year\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Cast members of Show to be matched.\n          in: query\n          name: Cast\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Producers of Show to be matched.\n          in: query\n          name: Producers\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Directors of Show to be matched.\n          in: query\n          name: Directors\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Description of Show to be matched.\n          in: query\n          name: Description\n          required: false\n          schema:\n            type: string\n        - description: Poster of movie to be matched.\n          in: query\n          name: Poster\n          required: false\n          schema:\n            type: string\n        - description: Release Date of movie to be matched.\n          in: query\n          name: ReleaseDate\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: For fuzzy title match, default is 4, set to 0 for no fuzzy match.\n          in: query\n          name: StringDistance\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MatchToEntertainmentShowResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/MatchToEntertainmentShowResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/MatchToEntertainmentShowResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/MatchToEntertainmentShowResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Perform a match to Entertainment using Title, Year, Cast and Director.\n        Returns best match and score for the match.\n      tags:\n        - Shows\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n    post:\n      deprecated: false\n      description: Requires a valid MatchShowCandidate, matches to Entertainment Shows\n      operationId: MatchToShowPost\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Title:\n                  description: Title of Show to be matched.\n                  type: string\n                AlternateTitles:\n                  description: Alternate Titles of Show to be matched.\n                  type: array\n                  items:\n                    type: string\n                Year:\n                  description: Release Year of Show to be matched.\n                  type: integer\n                  format: int32\n                Cast:\n                  description: Cast members of Show to be matched.\n                  type: array\n                  items:\n                    type: string\n                Producers:\n                  description: Producers of Show to be matched.\n                  type: array\n                  items:\n                    type: string\n                Directors:\n                  description: Directors of Show to be matched.\n                  type: array\n                  items:\n                    type: string\n                Description:\n                  description: Description of Show to be matched.\n                  type: string\n                Poster:\n                  description: Poster of movie to be matched.\n                  type: string\n                ReleaseDate:\n                  description: Release Date of movie to be matched.\n                  type: string\n                  format: date-time\n                StringDistance:\n                  description: For fuzzy title match, default is 4, set to 0 for no fuzzy\n                    match.\n                  type: integer\n                  format: int32\n              required:\n                - Title\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MatchToEntertainmentShowResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/MatchToEntertainmentShowResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/MatchToEntertainmentShowResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/MatchToEntertainmentShowResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Perform a match to Entertainment using Title, Year, Cast and\n        Director.  Returns best match and score for the match.\n      tags:\n        - Shows\n  /Shows/ReleaseTypes:\n    get:\n      deprecated: false\n      description: Release types refer to the type of release and are used in the releases\n        object for a show.\n      operationId: GetShowReleaseTypes\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowReleaseTypeResponse\"\n                title: List\u003cShowReleaseTypeResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowReleaseTypeResponse\"\n                title: List\u003cShowReleaseTypeResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowReleaseTypeResponse\"\n                title: List\u003cShowReleaseTypeResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowReleaseTypeResponse\"\n                title: List\u003cShowReleaseTypeResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: List of Show Release Types\n      tags:\n        - Shows\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Shows/SearchAndDiscover:\n    get:\n      deprecated: false\n      description: \u003e-\n        Searchable Fields: Title, AlternateTitles, Genres, Tags, Cast,\n        Directors, Descriptions, Ratings, OriginalLanguage. [Syntax\n        Ref](https://docs.microsoft.com/en-us/rest/api/searchservice/simple-query-syntax-in-azure-search)\n\n\n        Filterable Fields: Id, Title, AlternateTitles, Genres, OriginalAirDate, Year, Tags, Cast, Directors, Descriptions, HasVideo, ImageFilePath, Ratings, OriginalLanguage, Created, Modified, NumberOfSeasons, NumberOfEpisodes. [Syntax Ref](https://docs.microsoft.com/en-us/rest/api/searchservice/simple-query-syntax-in-azure-search)\n      operationId: SearchAndDiscoverShow\n      parameters:\n        - description: Term to search for. This can be combined with all other options. Use\n            '*' to return any match.\n          in: query\n          name: term\n          required: false\n          schema:\n            type: string\n        - description: List of field names to be returned in the object.\n          in: query\n          name: SelectFields\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of field names to search using 'term.'\n          in: query\n          name: SearchFields\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Expression to filter results.\n          in: query\n          name: Filter\n          required: false\n          schema:\n            type: string\n        - description: List of field names to sort results.  Default is relevance.\n          in: query\n          name: OrderBy\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Limit results.  Maximum returned is 1000.\n          in: query\n          name: Top\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Skip number of results. Use this for paging results.\n          in: query\n          name: Skip\n          required: false\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Includes total results in response. This will have a performance\n            impact.\n          in: query\n          name: IncludeTotalResultCount\n          required: false\n          x-nullable: false\n          schema:\n            type: boolean\n        - description: Specifies whether ANY or ALL of the search terms must be matched in\n            order to count the item as a match.\n          in: query\n          name: SearchMode\n          required: false\n          x-nullable: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SearchShowResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SearchShowResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/SearchShowResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SearchShowResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Search and discover shows.\n      tags:\n        - Shows\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Shows/Season/:\n    get:\n      deprecated: true\n      description: Use the IVA ShowId and a season number to get a season details and video\n        asset data.\n      operationId: GetSeasonByNumber\n      parameters:\n        - description: Id of a Show.\n          in: query\n          name: Id\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int64\n        - description: Number of a Season belonging to a Show.\n          in: query\n          name: SeasonNumber\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SeasonResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SeasonResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/SeasonResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SeasonResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Get Season by ShowId and Season Number.\n      tags:\n        - Shows\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Shows/Seasons/Episode/:\n    get:\n      deprecated: true\n      description: \"Some use cases find it useful to be able to pass a season number and\n        episode number of a known show to get the data for that exact\n        episode.  \"\n      operationId: GetEpisodeByNumber\n      parameters:\n        - description: Required Id of the Show.\n          in: query\n          name: Id\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int64\n        - description: Required SeasonNumber.\n          in: query\n          name: SeasonNumber\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Required EpisodeNumber.\n          in: query\n          name: EpisodeNumber\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EpisodeResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/EpisodeResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/EpisodeResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/EpisodeResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Get Episode by ShowId, Season Number and Episode Number.\n      tags:\n        - Shows\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/Shows/Seasons/Episodes/{Id}\":\n    get:\n      deprecated: false\n      description: Returns the episode details for a specific episode ID.\n      operationId: GetEpisode\n      parameters:\n        - description: Required ID of an Episode.\n          in: path\n          name: Id\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int64\n        - description: List of additional objects to include in the episode response.\n          in: query\n          name: Includes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - Releases\n                - Contributors\n                - AlternateTitles\n                - Descriptions\n                - Images\n                - Videos\n                - ExternalIds\n                - Availabilities\n              type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EpisodeResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/EpisodeResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/EpisodeResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/EpisodeResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns an Episode object for a requested Episode ID.\n      tags:\n        - Shows\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/Shows/Seasons/{Id}\":\n    get:\n      deprecated: false\n      description: Use with a SeasonId to return details for a season including any video\n        asset data.\n      operationId: GetSeason\n      parameters:\n        - description: Id of a Season.\n          in: path\n          name: Id\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int64\n        - description: List of additional objects to include in the season response.\n          in: query\n          name: Includes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - Releases\n                - Contributors\n                - AlternateTitles\n                - Descriptions\n                - Episodes\n                - Images\n                - Videos\n                - ExternalIds\n                - Availabilities\n              type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SeasonResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SeasonResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/SeasonResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SeasonResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Get Season by SeasonId.\n      tags:\n        - Shows\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Shows/ShowCertifications:\n    get:\n      deprecated: false\n      description: List of Show Certifications and definitions.\n      operationId: GetShowCertifications\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DbShowCertification\"\n                title: List\u003cDbShowCertification\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DbShowCertification\"\n                title: List\u003cDbShowCertification\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DbShowCertification\"\n                title: List\u003cDbShowCertification\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DbShowCertification\"\n                title: List\u003cDbShowCertification\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: List of Show Certifications\n      tags:\n        - Shows\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Shows/ShowGenres:\n    get:\n      deprecated: false\n      description: Returns a list of all the show genres used in the IVA database.\n      operationId: GetShowGenres\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowGenreResponse\"\n                title: List\u003cShowGenreResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowGenreResponse\"\n                title: List\u003cShowGenreResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowGenreResponse\"\n                title: List\u003cShowGenreResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShowGenreResponse\"\n                title: List\u003cShowGenreResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: List of Show Genres\n      tags:\n        - Shows\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/Shows/{Id}\":\n    get:\n      deprecated: false\n      description: \u003e-\n        By default the API will only return basic title information. Additional\n        objects can be included by passing the object in the Includes\n        parameter.  \n\n\n\n        `Subscriptions with \"Limited\" data will only be able to include basic title information, Videos, EpisodicVideos, and SeasonVideos.`\n      operationId: GetShow\n      parameters:\n        - description: Required ID of Show.\n          in: path\n          name: Id\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int64\n        - description: List of additional objects to include in the show response.\n          in: query\n          name: Includes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - Genres\n                - Releases\n                - Contributors\n                - AlternateTitles\n                - Descriptions\n                - Companies\n                - Tags\n                - Images\n                - Videos\n                - Seasons\n                - EpisodeVideos\n                - SeasonVideos\n                - ExternalIds\n                - Availabilities\n              type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ShowResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ShowResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/ShowResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ShowResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Get Show by Show ID.\n      tags:\n        - Shows\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/Shows/{Id}/Seasons/{SeasonNumber}\":\n    get:\n      deprecated: false\n      description: Depreciated. Use GetSeasonBySeasonNumber instead.  Requires a valid\n        ShowId and Season Number.\n      operationId: GetSeasonBySeasonNumber\n      parameters:\n        - description: Id of a Show.\n          in: path\n          name: Id\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int64\n        - description: Number of a Season belonging to a Show.\n          in: path\n          name: SeasonNumber\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: List of additional objects to include in the season response.\n          in: query\n          name: Includes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - Releases\n                - Contributors\n                - AlternateTitles\n                - Descriptions\n                - Episodes\n                - Images\n                - Videos\n                - ExternalIds\n                - Availabilities\n              type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SeasonResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SeasonResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/SeasonResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SeasonResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Get Season by ShowId and Season Number.\n      tags:\n        - Shows\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/Shows/{Id}/Seasons/{SeasonNumber}/Episodes/{EpisodeNumber}\":\n    get:\n      deprecated: false\n      description: Requires a valid ShowId, Season Number and Episode Number.\n      operationId: GetEpisodeByEpisodeNumber\n      parameters:\n        - description: Required Id of the Show.\n          in: path\n          name: Id\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int64\n        - description: Required SeasonNumber.\n          in: path\n          name: SeasonNumber\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Required EpisodeNumber.\n          in: path\n          name: EpisodeNumber\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: List of additional objects to include in the episode response.\n          in: query\n          name: Includes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - Releases\n                - Contributors\n                - AlternateTitles\n                - Descriptions\n                - Images\n                - Videos\n                - ExternalIds\n                - Availabilities\n              type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EpisodeResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/EpisodeResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/EpisodeResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/EpisodeResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Get Episode by ShowId, Season Number and Episode Number.\n      tags:\n        - Shows\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /Tests/TestDateTime/:\n    get:\n      deprecated: false\n      description: Entertainment Express APIs use date time format ISO 8601.  Use this API\n        to test your date time format to see if it translates to a valid time on\n        our server.\n      operationId: GetTestDateTime\n      parameters:\n        - description: DateTime to test format from API.\n          in: query\n          name: DateTime\n          required: true\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TestDateTimeResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/TestDateTimeResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/TestDateTimeResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/TestDateTimeResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns translated time from IVA or an error if invalid.\n      tags:\n        - Tests\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /TheatricalMovies/:\n    get:\n      deprecated: true\n      description: \u003e+\n        Deprecated. Use /Movies/InTheaters or /Movies/ComingSoon instead.\n        Returns all movies with a US Theatrical Release Date \u003e today - 60\n        days.  Use the includes parameter to include additional objects related\n        to the movie.  The includes parameter takes a comma separated list of\n        objects.  **EX: Genres,Descriptions,Videos**    \n\n\n\n      operationId: GetTheatricalMovies\n      parameters:\n        - description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          in: query\n          name: Skip\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Determines the page size.  (Maximum of 10)\n          in: query\n          name: Take\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: List of additional objects to include in the movie response.\n          in: query\n          name: Includes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - Genres\n                - Releases\n                - Contributors\n                - AlternateTitles\n                - Descriptions\n                - Companies\n                - Tags\n                - Images\n                - Videos\n              type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieResponse\"\n                title: List\u003cMovieResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieResponse\"\n                title: List\u003cMovieResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieResponse\"\n                title: List\u003cMovieResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MovieResponse\"\n                title: List\u003cMovieResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Returns list of all US Theatrical Movie objects.\n      tags:\n        - TheatricalMovies\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /TvGrid/Videos:\n    get:\n      deprecated: false\n      description: List of Videos for a program.\n      operationId: GetVideosById\n      parameters:\n        - in: query\n          name: Id\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ProgramVideo\"\n                title: List\u003cProgramVideo\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ProgramVideo\"\n                title: List\u003cProgramVideo\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ProgramVideo\"\n                title: List\u003cProgramVideo\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ProgramVideo\"\n                title: List\u003cProgramVideo\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: List of Videos for a program.\n      tags:\n        - TvGrid\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /TvGrid/genres/movies:\n    get:\n      deprecated: false\n      description: Gets list of movie genres.\n      operationId: GetTvMediaMovieGenres\n      parameters:\n        - description: API Key supplied by TvMedia.ca\n          in: query\n          name: TvMediaApiKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaGenreResponse\"\n                title: List\u003cTvMediaGenreResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaGenreResponse\"\n                title: List\u003cTvMediaGenreResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaGenreResponse\"\n                title: List\u003cTvMediaGenreResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaGenreResponse\"\n                title: List\u003cTvMediaGenreResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      tags:\n        - TvGrid\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /TvGrid/genres/shows:\n    get:\n      deprecated: false\n      description: Gets list of show genres.\n      operationId: GetTvMediaShowGenres\n      parameters:\n        - description: API Key supplied by TvMedia.ca\n          in: query\n          name: TvMediaApiKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaGenreResponse\"\n                title: List\u003cTvMediaGenreResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaGenreResponse\"\n                title: List\u003cTvMediaGenreResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaGenreResponse\"\n                title: List\u003cTvMediaGenreResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaGenreResponse\"\n                title: List\u003cTvMediaGenreResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      tags:\n        - TvGrid\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /TvGrid/genres/sports:\n    get:\n      deprecated: false\n      description: Gets list of sports genres.\n      operationId: GetTvMediaSportGenres\n      parameters:\n        - description: API Key supplied by TvMedia.ca\n          in: query\n          name: TvMediaApiKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaGenreResponse\"\n                title: List\u003cTvMediaGenreResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaGenreResponse\"\n                title: List\u003cTvMediaGenreResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaGenreResponse\"\n                title: List\u003cTvMediaGenreResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaGenreResponse\"\n                title: List\u003cTvMediaGenreResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      tags:\n        - TvGrid\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /TvGrid/leagues:\n    get:\n      deprecated: false\n      description: Gets list of sports leagues.\n      operationId: GetTvMediaLeagues\n      parameters:\n        - description: API Key supplied by TvMedia.ca\n          in: query\n          name: TvMediaApiKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaLeagueResponse\"\n                title: List\u003cTvMediaLeagueResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaLeagueResponse\"\n                title: List\u003cTvMediaLeagueResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaLeagueResponse\"\n                title: List\u003cTvMediaLeagueResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaLeagueResponse\"\n                title: List\u003cTvMediaLeagueResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      tags:\n        - TvGrid\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/TvGrid/leagues/{LeagueID}/listings\":\n    get:\n      deprecated: false\n      description: Retrieve listings for a given leagueID.\n      operationId: GetTvMediaLeagueListings\n      parameters:\n        - description: API Key supplied by TvMedia.ca\n          in: query\n          name: TvMediaApiKey\n          required: true\n          schema:\n            type: string\n        - description: League ID. See /leagues for a list of all available sports leagues.\n          in: path\n          name: LeagueID\n          required: true\n          schema:\n            type: string\n        - description: Lineup ID. Lineups can be found through the /TvMedia/lineups method.\n          in: query\n          name: LineupID\n          required: true\n          schema:\n            type: string\n        - description: UTC start time in ISO8601. Defaults to current date and time.\n          in: query\n          name: Start\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: UTC end time in ISO8601. Defaults to 'start' time +4 hours.\n          in: query\n          name: End\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: \"Set a timezone or time offset for listing times (listDateTime\n            property). Defaults to UTC, accepts time offsets (+/-HH:MM) or named\n            time zones (see IANA Time Zone Database). If an invalid value is\n            set, listDateTime will be returned as empty. NOTE: this parameter\n            does not affect input values; start and end times must still be\n            provided in UTC.\"\n          in: query\n          name: TimeZone\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: \"Include only channel(s) with this number, single or array values\n            accepted. sub channel numbers can be hyphenated to the end of the\n            string: e.g. 1-2 for sub channel 2 of channel 1 (use the\n            channel.number property , NOT channel.channelNumber property).\"\n          in: query\n          name: Channel\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Exclude channels by number, single or array values accepted. sub\n            channel numbers can be hyphenated to the end of the string: e.g. 1-2\n            for sub channel 2 of channel 1 (use the channel.number property, NOT\n            the channel.channelNumber property).\"\n          in: query\n          name: ExcludeChan\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Lowest channel. sub channel numbers can be hyphenated to the end of\n            the string: e.g. 1-2 for sub channel 2 of channel 1.\"\n          in: query\n          name: StartChan\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Highest channel. sub channel numbers can be hyphenated to the end\n            of the string: e.g. 1-2 for sub channel 2 of channel 1. In general\n            this parameter should rarely be used, for shaping the grid size see\n            the 'maxchan' parameter.\"\n          in: query\n          name: EndChan\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Filter by station ID. Array or single value accepted. Station ID's\n            can be found in listings, or by using the /lineups API.\n          in: query\n          name: Station\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              format: int32\n              type: integer\n              nullable: false\n        - description: Filter out station IDs; array or single value accepted. Station ID's\n            can be found in listings, or by using the /lineups API.\n          in: query\n          name: ExcludeStation\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              format: int32\n              type: integer\n              nullable: false\n        - description: \"search value: can be a show, episode, movie, team, league, person,\n            etc. Results will be sorted by relevance rather than time.\"\n          in: query\n          name: Search\n          required: false\n          schema:\n            type: string\n        - description: Include only these show type ID(s), array or single values accepted.\n            Must be URL encoded. For a list of possible show type's and their\n            ID's see /genres/shows, or the showTypeID property of a listing\n            object.\n          in: query\n          name: ShowType\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Exclude only these show type ID(s), array or single values accepted.\n            Must be URL encoded. For a list of possible show type's and their\n            ID's see /genres/shows, or the showTypeID property of a listing\n            object.\n          in: query\n          name: ExcludeShowType\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: ListingID, array or single values accepted. to return a single\n            listing it should be used in combination with a stationID (station\n            parameter).\n          in: query\n          name: Id\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Get only sports listings of type sportTypeID. Array or single values\n            accepted. For a list of possible values see /genres/sports.\n          in: query\n          name: SportType\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Get only sports listings in the given league ID(s). Array or single\n            values accepted. For a list of possible values see /leagues.\n          in: query\n          name: League\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Filter by teams playing by name(teams.longName). Array or single\n            values accepted, for a list of possible values see /leagues/teams.\n            (NOTE: league parameter is required when using this parameter).\"\n          in: query\n          name: Team\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Only displays listings which are starting on or after the given\n            start time. No value necessary.\n          in: query\n          name: NotYetStarted\n          required: false\n          schema:\n            type: boolean\n        - description: Get sporting events only. No value necessary.\n          in: query\n          name: SportEventsOnly\n          required: false\n          schema:\n            type: boolean\n        - description: Only displays listings which are flagged as being broadcast with\n            Descriptive Video. No value necessary.\n          in: query\n          name: DescriptiveVideoOnly\n          required: false\n          schema:\n            type: boolean\n        - description: Only displays live listings. No value necessary.\n          in: query\n          name: LiveOnly\n          required: false\n          schema:\n            type: boolean\n        - description: Get new shows only. No value necessary.\n          in: query\n          name: NewShowsOnly\n          required: false\n          schema:\n            type: boolean\n        - description: Defaults to 1 (allowed). Set to 0 to hide adult content.\n          in: query\n          name: AdultContent\n          required: false\n          x-nullable: false\n          schema:\n            type: boolean\n        - description: Displays the Artwork information. Set to 1 to include, 1 is default.\n            0 to hide (will improve performance).\n          in: query\n          name: DisplayArtwork\n          required: false\n          x-nullable: false\n          schema:\n            type: boolean\n        - description: Set level of detail for response. values are 'full' or 'brief',\n            defaults to 'full'. 'full' will include all properties, 'brief' will\n            exclude optional properties.\n          in: query\n          name: Detail\n          required: false\n          schema:\n            type: string\n            enum:\n              - full\n              - brief\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaListingResponse\"\n                title: List\u003cTvMediaListingResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaListingResponse\"\n                title: List\u003cTvMediaListingResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaListingResponse\"\n                title: List\u003cTvMediaListingResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaListingResponse\"\n                title: List\u003cTvMediaListingResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      tags:\n        - TvGrid\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/TvGrid/leagues/{LeagueID}/teams\":\n    get:\n      deprecated: false\n      description: Gets list of teams in a league.\n      operationId: GetTvMediaTeams\n      parameters:\n        - description: API Key supplied by TvMedia.ca\n          in: query\n          name: TvMediaApiKey\n          required: true\n          schema:\n            type: string\n        - description: League ID. See /TvMedia/leagues for a list of all available sports\n            leagues.\n          in: path\n          name: LeagueID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaTeamResponse\"\n                title: List\u003cTvMediaTeamResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaTeamResponse\"\n                title: List\u003cTvMediaTeamResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaTeamResponse\"\n                title: List\u003cTvMediaTeamResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaTeamResponse\"\n                title: List\u003cTvMediaTeamResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      tags:\n        - TvGrid\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /TvGrid/lineups:\n    get:\n      deprecated: false\n      description: Get lineups by postal code.\n      operationId: GetTvMediaLineupsByPostalCode\n      parameters:\n        - description: API Key supplied by TvMedia.ca\n          in: query\n          name: TvMediaApiKey\n          required: true\n          schema:\n            type: string\n        - description: Postal code.\n          in: query\n          name: PostalCode\n          required: true\n          schema:\n            type: string\n        - description: Filter by lineup type, valid types are OTA, SAT, CAB, IPTV.\n          in: query\n          name: LineupType\n          required: false\n          schema:\n            type: string\n            enum:\n              - OTA\n              - SAT\n              - CAB\n              - IPTV\n        - description: Filter by provider ID\n          in: query\n          name: ProviderId\n          required: false\n          schema:\n            type: string\n        - description: Set level of detail for response. values are 'full' or 'brief',\n            defaults to 'brief'. 'full' will include all properties, 'brief'\n            will exclude optional properties.\n          in: query\n          name: Detail\n          required: false\n          schema:\n            type: string\n            enum:\n              - full\n              - brief\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaLineupResponse\"\n                title: List\u003cTvMediaLineupResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaLineupResponse\"\n                title: List\u003cTvMediaLineupResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaLineupResponse\"\n                title: List\u003cTvMediaLineupResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaLineupResponse\"\n                title: List\u003cTvMediaLineupResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: \"\"\n      tags:\n        - TvGrid\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /TvGrid/lineups/browse:\n    get:\n      deprecated: false\n      description: Starting point for lineup browser, returns available countries.\n      operationId: GetTvMediaCountries\n      parameters:\n        - description: API Key supplied by TvMedia.ca\n          in: query\n          name: TvMediaApiKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaCountryResponse\"\n                title: List\u003cTvMediaCountryResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaCountryResponse\"\n                title: List\u003cTvMediaCountryResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaCountryResponse\"\n                title: List\u003cTvMediaCountryResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaCountryResponse\"\n                title: List\u003cTvMediaCountryResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      tags:\n        - TvGrid\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/TvGrid/lineups/browse/{CountryID}\":\n    get:\n      deprecated: false\n      description: Browse regions by country.\n      operationId: GetTvMediaRegions\n      parameters:\n        - description: API Key supplied by TvMedia.ca\n          in: query\n          name: TvMediaApiKey\n          required: true\n          schema:\n            type: string\n        - description: Country abbreviation. See TvMedia/lineups/browse for a list of\n            supported countries.\n          in: path\n          name: CountryID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaRegionResponse\"\n                title: List\u003cTvMediaRegionResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaRegionResponse\"\n                title: List\u003cTvMediaRegionResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaRegionResponse\"\n                title: List\u003cTvMediaRegionResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaRegionResponse\"\n                title: List\u003cTvMediaRegionResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      tags:\n        - TvGrid\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/TvGrid/lineups/browse/{CountryID}/{RegionID}\":\n    get:\n      deprecated: false\n      description: Get service areas for a specific country and region.\n      operationId: GetTvMediaServiceAreas\n      parameters:\n        - description: API Key supplied by TvMedia.ca\n          in: query\n          name: TvMediaApiKey\n          required: true\n          schema:\n            type: string\n        - description: Country abbreviation. See TvMedia/lineups/browse for a list of\n            supported countries.\n          in: path\n          name: CountryID\n          required: true\n          schema:\n            type: string\n        - description: Region abbreviation. See TvMedia/lineups/browse/{CountryID} for a\n            list of regions.\n          in: path\n          name: RegionID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaServiceAreaResponse\"\n                title: List\u003cTvMediaServiceAreaResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaServiceAreaResponse\"\n                title: List\u003cTvMediaServiceAreaResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaServiceAreaResponse\"\n                title: List\u003cTvMediaServiceAreaResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaServiceAreaResponse\"\n                title: List\u003cTvMediaServiceAreaResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      tags:\n        - TvGrid\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/TvGrid/lineups/browse/{CountryID}/{RegionID}/{AreaID}\":\n    get:\n      deprecated: false\n      description: Get lineups by AreaID.\n      operationId: GetTvMediaLineupsByAreaID\n      parameters:\n        - description: API Key supplied by TvMedia.ca\n          in: query\n          name: TvMediaApiKey\n          required: true\n          schema:\n            type: string\n        - description: Country abbreviation. See TvMedia/lineups/browse for a list of\n            supported countries.\n          in: path\n          name: CountryID\n          required: true\n          schema:\n            type: string\n        - description: Region abbreviation. See TvMedia/lineups/browse/{CountryID} for a\n            list of regions.\n          in: path\n          name: RegionID\n          required: true\n          schema:\n            type: string\n        - description: Service area ID. See TvMedia/lineups/browse/{CountryID}/{RegionID}\n            for a list of service areas.\n          in: path\n          name: AreaID\n          required: true\n          schema:\n            type: string\n        - description: Filter by lineup type, valid types are OTA, SAT, CAB, IPTV.\n          in: query\n          name: LineupType\n          required: false\n          schema:\n            type: string\n            enum:\n              - OTA\n              - SAT\n              - CAB\n              - IPTV\n        - description: Filter by provider ID\n          in: query\n          name: ProviderId\n          required: false\n          schema:\n            type: string\n        - description: Set level of detail for response. values are 'full' or 'brief',\n            defaults to 'brief'. 'full' will include all properties, 'brief'\n            will exclude optional properties.\n          in: query\n          name: Detail\n          required: false\n          schema:\n            type: string\n            enum:\n              - full\n              - brief\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaLineupResponse\"\n                title: List\u003cTvMediaLineupResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaLineupResponse\"\n                title: List\u003cTvMediaLineupResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaLineupResponse\"\n                title: List\u003cTvMediaLineupResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaLineupResponse\"\n                title: List\u003cTvMediaLineupResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      tags:\n        - TvGrid\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /TvGrid/lineups/geo:\n    get:\n      deprecated: false\n      description: Get lineups by latitude and longitude.\n      operationId: GetTvMediaLineupsByLatitudeLongitude\n      parameters:\n        - description: API Key supplied by TvMedia.ca\n          in: query\n          name: TvMediaApiKey\n          required: true\n          schema:\n            type: string\n        - description: Latitude (geographic coordinate).\n          in: query\n          name: Latitude\n          required: true\n          x-nullable: false\n          schema:\n            type: number\n            format: float\n        - description: Longitude (geographic coordinate).\n          in: query\n          name: Longitude\n          required: true\n          x-nullable: false\n          schema:\n            type: number\n            format: float\n        - description: Filter by lineup type, valid types are OTA, SAT, CAB, IPTV.\n          in: query\n          name: LineupType\n          required: false\n          schema:\n            type: string\n            enum:\n              - OTA\n              - SAT\n              - CAB\n              - IPTV\n        - description: Filter by provider ID\n          in: query\n          name: ProviderId\n          required: false\n          schema:\n            type: string\n        - description: Set level of detail for response. values are 'full' or 'brief',\n            defaults to 'brief'. 'full' will include all properties, 'brief'\n            will exclude optional properties.\n          in: query\n          name: Detail\n          required: false\n          schema:\n            type: string\n            enum:\n              - full\n              - brief\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaLineupResponse\"\n                title: List\u003cTvMediaLineupResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaLineupResponse\"\n                title: List\u003cTvMediaLineupResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaLineupResponse\"\n                title: List\u003cTvMediaLineupResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaLineupResponse\"\n                title: List\u003cTvMediaLineupResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      tags:\n        - TvGrid\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/TvGrid/lineups/{LineupID}\":\n    get:\n      deprecated: false\n      description: Get lineups by specific LineupID.\n      operationId: GetTvMediaLineupByID\n      parameters:\n        - description: API Key supplied by TvMedia.ca\n          in: query\n          name: TvMediaApiKey\n          required: true\n          schema:\n            type: string\n        - description: Lineup ID.\n          in: path\n          name: LineupID\n          required: true\n          schema:\n            type: string\n        - description: Set level of detail for response. values are 'full' or 'brief',\n            defaults to 'full'. 'full' will include all properties, 'brief' will\n            exclude optional properties.\n          in: query\n          name: Detail\n          required: false\n          schema:\n            type: string\n            enum:\n              - full\n              - brief\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TvMediaLineupResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/TvMediaLineupResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/TvMediaLineupResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/TvMediaLineupResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      tags:\n        - TvGrid\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/TvGrid/lineups/{LineupID}/listings\":\n    get:\n      deprecated: false\n      description: Retrieve individual listings for a given lineup ordered by start time\n        (listDateTime) and channel number; unless using the search parameter, in\n        which case they will be ordered by search term relevance.\n      operationId: GetTvMediaLineupListings\n      parameters:\n        - description: API Key supplied by TvMedia.ca\n          in: query\n          name: TvMediaApiKey\n          required: true\n          schema:\n            type: string\n        - description: Lineup ID.\n          in: path\n          name: LineupID\n          required: true\n          schema:\n            type: string\n        - description: UTC start time in ISO8601. Defaults to current date and time.\n          in: query\n          name: Start\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: UTC end time in ISO8601. Defaults to 'start' time +4 hours.\n          in: query\n          name: End\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: \"Set a timezone or time offset for listing times (listDateTime\n            property). Defaults to UTC, accepts time offsets (+/-HH:MM) or named\n            time zones (see IANA Time Zone Database). If an invalid value is\n            set, listDateTime will be returned as empty. NOTE: this parameter\n            does not affect input values; start and end times must still be\n            provided in UTC.\"\n          in: query\n          name: TimeZone\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: \"Include only channel(s) with this number, single or array values\n            accepted. sub channel numbers can be hyphenated to the end of the\n            string: e.g. 1-2 for sub channel 2 of channel 1 (use the\n            channel.number property , NOT channel.channelNumber property).\"\n          in: query\n          name: Channel\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Exclude channels by number, single or array values accepted. sub\n            channel numbers can be hyphenated to the end of the string: e.g. 1-2\n            for sub channel 2 of channel 1 (use the channel.number property, NOT\n            the channel.channelNumber property).\"\n          in: query\n          name: ExcludeChan\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Lowest channel. sub channel numbers can be hyphenated to the end of\n            the string: e.g. 1-2 for sub channel 2 of channel 1.\"\n          in: query\n          name: StartChan\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Highest channel. sub channel numbers can be hyphenated to the end\n            of the string: e.g. 1-2 for sub channel 2 of channel 1. In general\n            this parameter should rarely be used, for shaping the grid size see\n            the 'maxchan' parameter.\"\n          in: query\n          name: EndChan\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Filter by station ID. Array or single value accepted. Station ID's\n            can be found in listings, or by using the /lineups API.\n          in: query\n          name: Station\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              format: int32\n              type: integer\n              nullable: false\n        - description: Filter out station IDs; array or single value accepted. Station ID's\n            can be found in listings, or by using the /lineups API.\n          in: query\n          name: ExcludeStation\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              format: int32\n              type: integer\n              nullable: false\n        - description: \"search value: can be a show, episode, movie, team, league, person,\n            etc. Results will be sorted by relevance rather than time.\"\n          in: query\n          name: Search\n          required: false\n          schema:\n            type: string\n        - description: Include only these show type ID(s), array or single values accepted.\n            Must be URL encoded. For a list of possible show type's and their\n            ID's see /genres/shows, or the showTypeID property of a listing\n            object.\n          in: query\n          name: ShowType\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Exclude only these show type ID(s), array or single values accepted.\n            Must be URL encoded. For a list of possible show type's and their\n            ID's see /genres/shows, or the showTypeID property of a listing\n            object.\n          in: query\n          name: ExcludeShowType\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: ListingID, array or single values accepted. to return a single\n            listing it should be used in combination with a stationID (station\n            parameter).\n          in: query\n          name: Id\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Get only sports listings of type sportTypeID. Array or single values\n            accepted. For a list of possible values see /genres/sports.\n          in: query\n          name: SportType\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Get only sports listings in the given league ID(s). Array or single\n            values accepted. For a list of possible values see /leagues.\n          in: query\n          name: League\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Filter by teams playing by name(teams.longName). Array or single\n            values accepted, for a list of possible values see /leagues/teams.\n            (NOTE: league parameter is required when using this parameter).\"\n          in: query\n          name: Team\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Only displays listings which are starting on or after the given\n            start time. No value necessary.\n          in: query\n          name: NotYetStarted\n          required: false\n          schema:\n            type: boolean\n        - description: Get sporting events only. No value necessary.\n          in: query\n          name: SportEventsOnly\n          required: false\n          schema:\n            type: boolean\n        - description: Only displays listings which are flagged as being broadcast with\n            Descriptive Video. No value necessary.\n          in: query\n          name: DescriptiveVideoOnly\n          required: false\n          schema:\n            type: boolean\n        - description: Only displays live listings. No value necessary.\n          in: query\n          name: LiveOnly\n          required: false\n          schema:\n            type: boolean\n        - description: Get new shows only. No value necessary.\n          in: query\n          name: NewShowsOnly\n          required: false\n          schema:\n            type: boolean\n        - description: Defaults to 1 (allowed). Set to 0 to hide adult content.\n          in: query\n          name: AdultContent\n          required: false\n          x-nullable: false\n          schema:\n            type: boolean\n        - description: Displays the Artwork information. Set to 1 to include, 1 is default.\n            0 to hide (will improve performance).\n          in: query\n          name: DisplayArtwork\n          required: false\n          x-nullable: false\n          schema:\n            type: boolean\n        - description: Set level of detail for response. values are 'full' or 'brief',\n            defaults to 'full'. 'full' will include all properties, 'brief' will\n            exclude optional properties.\n          in: query\n          name: Detail\n          required: false\n          schema:\n            type: string\n            enum:\n              - full\n              - brief\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaListingResponse\"\n                title: List\u003cTvMediaListingResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaListingResponse\"\n                title: List\u003cTvMediaListingResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaListingResponse\"\n                title: List\u003cTvMediaListingResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaListingResponse\"\n                title: List\u003cTvMediaListingResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      tags:\n        - TvGrid\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/TvGrid/lineups/{LineupID}/listings/grid\":\n    get:\n      deprecated: false\n      description: A collection of listings grouped by channel and ordered by listDateTime.\n        The grid dimensions ( time x channels ) can be modified by using the\n        start, end, startchan and maxchan parameters. Channels without any\n        listings will be returned with an empty listings collection.\n      operationId: GetTvMediaLineupListingsGrid\n      parameters:\n        - description: API Key supplied by TvMedia.ca\n          in: query\n          name: TvMediaApiKey\n          required: true\n          schema:\n            type: string\n        - description: Lineup ID.\n          in: path\n          name: LineupID\n          required: true\n          schema:\n            type: string\n        - description: UTC start time in ISO8601. Defaults to current date and time.\n          in: query\n          name: Start\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: UTC end time in ISO8601. Defaults to 'start' time +4 hours.\n          in: query\n          name: End\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: \"Set a timezone or time offset for listing times (listDateTime\n            property). Defaults to UTC, accepts time offsets (+/-HH:MM) or named\n            time zones (see IANA Time Zone Database). If an invalid value is\n            set, listDateTime will be returned as empty. NOTE: this parameter\n            does not affect input values; start and end times must still be\n            provided in UTC.\"\n          in: query\n          name: TimeZone\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: \"Include only channel(s) with this number, single or array values\n            accepted. sub channel numbers can be hyphenated to the end of the\n            string: e.g. 1-2 for sub channel 2 of channel 1 (use the\n            channel.number property , NOT channel.channelNumber property).\"\n          in: query\n          name: Channel\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Exclude channels by number, single or array values accepted. sub\n            channel numbers can be hyphenated to the end of the string: e.g. 1-2\n            for sub channel 2 of channel 1 (use the channel.number property, NOT\n            the channel.channelNumber property).\"\n          in: query\n          name: ExcludeChan\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Lowest channel. sub channel numbers can be hyphenated to the end of\n            the string: e.g. 1-2 for sub channel 2 of channel 1.\"\n          in: query\n          name: StartChan\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Highest channel. sub channel numbers can be hyphenated to the end\n            of the string: e.g. 1-2 for sub channel 2 of channel 1. In general\n            this parameter should rarely be used, for shaping the grid size see\n            the 'maxchan' parameter.\"\n          in: query\n          name: EndChan\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Filter by station ID. Array or single value accepted. Station ID's\n            can be found in listings, or by using the /lineups API.\n          in: query\n          name: Station\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              format: int32\n              type: integer\n              nullable: false\n        - description: Filter out station IDs; array or single value accepted. Station ID's\n            can be found in listings, or by using the /lineups API.\n          in: query\n          name: ExcludeStation\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              format: int32\n              type: integer\n              nullable: false\n        - description: \"search value: can be a show, episode, movie, team, league, person,\n            etc. Results will be sorted by relevance rather than time.\"\n          in: query\n          name: Search\n          required: false\n          schema:\n            type: string\n        - description: Include only these show type ID(s), array or single values accepted.\n            Must be URL encoded. For a list of possible show type's and their\n            ID's see /genres/shows, or the showTypeID property of a listing\n            object.\n          in: query\n          name: ShowType\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Exclude only these show type ID(s), array or single values accepted.\n            Must be URL encoded. For a list of possible show type's and their\n            ID's see /genres/shows, or the showTypeID property of a listing\n            object.\n          in: query\n          name: ExcludeShowType\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: ListingID, array or single values accepted. to return a single\n            listing it should be used in combination with a stationID (station\n            parameter).\n          in: query\n          name: Id\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Get only sports listings of type sportTypeID. Array or single values\n            accepted. For a list of possible values see /genres/sports.\n          in: query\n          name: SportType\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Get only sports listings in the given league ID(s). Array or single\n            values accepted. For a list of possible values see /leagues.\n          in: query\n          name: League\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Filter by teams playing by name(teams.longName). Array or single\n            values accepted, for a list of possible values see /leagues/teams.\n            (NOTE: league parameter is required when using this parameter).\"\n          in: query\n          name: Team\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Only displays listings which are starting on or after the given\n            start time. No value necessary.\n          in: query\n          name: NotYetStarted\n          required: false\n          schema:\n            type: boolean\n        - description: Get sporting events only. No value necessary.\n          in: query\n          name: SportEventsOnly\n          required: false\n          schema:\n            type: boolean\n        - description: Only displays listings which are flagged as being broadcast with\n            Descriptive Video. No value necessary.\n          in: query\n          name: DescriptiveVideoOnly\n          required: false\n          schema:\n            type: boolean\n        - description: Only displays live listings. No value necessary.\n          in: query\n          name: LiveOnly\n          required: false\n          schema:\n            type: boolean\n        - description: Get new shows only. No value necessary.\n          in: query\n          name: NewShowsOnly\n          required: false\n          schema:\n            type: boolean\n        - description: Defaults to 1 (allowed). Set to 0 to hide adult content.\n          in: query\n          name: AdultContent\n          required: false\n          x-nullable: false\n          schema:\n            type: boolean\n        - description: Displays the Artwork information. Set to 1 to include, 1 is default.\n            0 to hide (will improve performance).\n          in: query\n          name: DisplayArtwork\n          required: false\n          x-nullable: false\n          schema:\n            type: boolean\n        - description: Set level of detail for response. values are 'full' or 'brief',\n            defaults to 'full'. 'full' will include all properties, 'brief' will\n            exclude optional properties.\n          in: query\n          name: Detail\n          required: false\n          schema:\n            type: string\n            enum:\n              - full\n              - brief\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaGridResponse\"\n                title: List\u003cTvMediaGridResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaGridResponse\"\n                title: List\u003cTvMediaGridResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaGridResponse\"\n                title: List\u003cTvMediaGridResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaGridResponse\"\n                title: List\u003cTvMediaGridResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      tags:\n        - TvGrid\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/TvGrid/lineups/{LineupID}/listings/highlights\":\n    get:\n      deprecated: false\n      description: Retrieves featured listings. setting a start and/or end time for every\n        request is a highly recommended.\n      operationId: GetTvMediaLineupListingsHighlights\n      parameters:\n        - description: API Key supplied by TvMedia.ca\n          in: query\n          name: TvMediaApiKey\n          required: true\n          schema:\n            type: string\n        - description: Lineup ID.\n          in: path\n          name: LineupID\n          required: true\n          schema:\n            type: string\n        - description: UTC start time in ISO8601. Defaults to current date and time.\n          in: query\n          name: Start\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: UTC end time in ISO8601. Defaults to 'start' time +4 hours.\n          in: query\n          name: End\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: \"Set a timezone or time offset for listing times (listDateTime\n            property). Defaults to UTC, accepts time offsets (+/-HH:MM) or named\n            time zones (see IANA Time Zone Database). If an invalid value is\n            set, listDateTime will be returned as empty. NOTE: this parameter\n            does not affect input values; start and end times must still be\n            provided in UTC.\"\n          in: query\n          name: TimeZone\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: \"Include only channel(s) with this number, single or array values\n            accepted. sub channel numbers can be hyphenated to the end of the\n            string: e.g. 1-2 for sub channel 2 of channel 1 (use the\n            channel.number property , NOT channel.channelNumber property).\"\n          in: query\n          name: Channel\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Exclude channels by number, single or array values accepted. sub\n            channel numbers can be hyphenated to the end of the string: e.g. 1-2\n            for sub channel 2 of channel 1 (use the channel.number property, NOT\n            the channel.channelNumber property).\"\n          in: query\n          name: ExcludeChan\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Lowest channel. sub channel numbers can be hyphenated to the end of\n            the string: e.g. 1-2 for sub channel 2 of channel 1.\"\n          in: query\n          name: StartChan\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Highest channel. sub channel numbers can be hyphenated to the end\n            of the string: e.g. 1-2 for sub channel 2 of channel 1. In general\n            this parameter should rarely be used, for shaping the grid size see\n            the 'maxchan' parameter.\"\n          in: query\n          name: EndChan\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Filter by station ID. Array or single value accepted. Station ID's\n            can be found in listings, or by using the /lineups API.\n          in: query\n          name: Station\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              format: int32\n              type: integer\n              nullable: false\n        - description: Filter out station IDs; array or single value accepted. Station ID's\n            can be found in listings, or by using the /lineups API.\n          in: query\n          name: ExcludeStation\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              format: int32\n              type: integer\n              nullable: false\n        - description: \"search value: can be a show, episode, movie, team, league, person,\n            etc. Results will be sorted by relevance rather than time.\"\n          in: query\n          name: Search\n          required: false\n          schema:\n            type: string\n        - description: Include only these show type ID(s), array or single values accepted.\n            Must be URL encoded. For a list of possible show type's and their\n            ID's see /genres/shows, or the showTypeID property of a listing\n            object.\n          in: query\n          name: ShowType\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Exclude only these show type ID(s), array or single values accepted.\n            Must be URL encoded. For a list of possible show type's and their\n            ID's see /genres/shows, or the showTypeID property of a listing\n            object.\n          in: query\n          name: ExcludeShowType\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: ListingID, array or single values accepted. to return a single\n            listing it should be used in combination with a stationID (station\n            parameter).\n          in: query\n          name: Id\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Get only sports listings of type sportTypeID. Array or single values\n            accepted. For a list of possible values see /genres/sports.\n          in: query\n          name: SportType\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Get only sports listings in the given league ID(s). Array or single\n            values accepted. For a list of possible values see /leagues.\n          in: query\n          name: League\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Filter by teams playing by name(teams.longName). Array or single\n            values accepted, for a list of possible values see /leagues/teams.\n            (NOTE: league parameter is required when using this parameter).\"\n          in: query\n          name: Team\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Only displays listings which are starting on or after the given\n            start time. No value necessary.\n          in: query\n          name: NotYetStarted\n          required: false\n          schema:\n            type: boolean\n        - description: Get sporting events only. No value necessary.\n          in: query\n          name: SportEventsOnly\n          required: false\n          schema:\n            type: boolean\n        - description: Only displays listings which are flagged as being broadcast with\n            Descriptive Video. No value necessary.\n          in: query\n          name: DescriptiveVideoOnly\n          required: false\n          schema:\n            type: boolean\n        - description: Only displays live listings. No value necessary.\n          in: query\n          name: LiveOnly\n          required: false\n          schema:\n            type: boolean\n        - description: Get new shows only. No value necessary.\n          in: query\n          name: NewShowsOnly\n          required: false\n          schema:\n            type: boolean\n        - description: Defaults to 1 (allowed). Set to 0 to hide adult content.\n          in: query\n          name: AdultContent\n          required: false\n          x-nullable: false\n          schema:\n            type: boolean\n        - description: Displays the Artwork information. Set to 1 to include, 1 is default.\n            0 to hide (will improve performance).\n          in: query\n          name: DisplayArtwork\n          required: false\n          x-nullable: false\n          schema:\n            type: boolean\n        - description: Set level of detail for response. values are 'full' or 'brief',\n            defaults to 'full'. 'full' will include all properties, 'brief' will\n            exclude optional properties.\n          in: query\n          name: Detail\n          required: false\n          schema:\n            type: string\n            enum:\n              - full\n              - brief\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaListingResponse\"\n                title: List\u003cTvMediaListingResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaListingResponse\"\n                title: List\u003cTvMediaListingResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaListingResponse\"\n                title: List\u003cTvMediaListingResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaListingResponse\"\n                title: List\u003cTvMediaListingResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      tags:\n        - TvGrid\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /TvGrid/reference/lineups:\n    get:\n      deprecated: false\n      description: Get list of generic lineup IDs that can be used.  A 'generic' lineup is\n        not a real lineup, but a collection of stations defined by TV\n        Media.  Any listing retrieved using a generic lineup will not return any\n        channel number information, as it is irrelevant.\n      operationId: GetTvMediaGenericLineups\n      parameters:\n        - description: API Key supplied by TvMedia.ca\n          in: query\n          name: TvMediaApiKey\n          required: true\n          schema:\n            type: string\n        - description: Set level of detail for response. values are 'full' or 'brief',\n            defaults to 'brief'. 'full' will include all properties, 'brief'\n            will exclude optional properties.\n          in: query\n          name: Detail\n          required: false\n          schema:\n            type: string\n            enum:\n              - full\n              - brief\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaLineupResponse\"\n                title: List\u003cTvMediaLineupResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaLineupResponse\"\n                title: List\u003cTvMediaLineupResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaLineupResponse\"\n                title: List\u003cTvMediaLineupResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaLineupResponse\"\n                title: List\u003cTvMediaLineupResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: \"\"\n      tags:\n        - TvGrid\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/TvGrid/stations/{StationID}\":\n    get:\n      deprecated: false\n      description: Gets station details by ID.\n      operationId: GetTvMediaStation\n      parameters:\n        - description: API Key supplied by TvMedia.ca\n          in: query\n          name: TvMediaApiKey\n          required: true\n          schema:\n            type: string\n        - description: Station ID. Station ID's can be found in listings, or by using the\n            Tvmedia/lineups API\n          in: path\n          name: StationID\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TvMediaStationResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/TvMediaStationResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/TvMediaStationResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/TvMediaStationResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      tags:\n        - TvGrid\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/TvGrid/stations/{StationID}/listings\":\n    get:\n      deprecated: false\n      description: Get listings for a given station.\n      operationId: GetTvMediaListingsByStation\n      parameters:\n        - description: API Key supplied by TvMedia.ca\n          in: query\n          name: TvMediaApiKey\n          required: true\n          schema:\n            type: string\n        - description: Station ID. Station ID's can be found in listings, or by using the\n            Tvmedia/lineups API\n          in: path\n          name: StationID\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: UTC start time in ISO8601. Defaults to current date and time.\n          in: query\n          name: Start\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: UTC end time in ISO8601. Defaults to 'start' time +4 hours.\n          in: query\n          name: End\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: \"Set a timezone or time offset for listing times (listDateTime\n            property). Defaults to UTC, accepts time offsets (+/-HH:MM) or named\n            time zones (see IANA Time Zone Database). If an invalid value is\n            set, listDateTime will be returned as empty. NOTE: this parameter\n            does not affect input values; start and end times must still be\n            provided in UTC.\"\n          in: query\n          name: TimeZone\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: \"Include only channel(s) with this number, single or array values\n            accepted. sub channel numbers can be hyphenated to the end of the\n            string: e.g. 1-2 for sub channel 2 of channel 1 (use the\n            channel.number property , NOT channel.channelNumber property).\"\n          in: query\n          name: Channel\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Exclude channels by number, single or array values accepted. sub\n            channel numbers can be hyphenated to the end of the string: e.g. 1-2\n            for sub channel 2 of channel 1 (use the channel.number property, NOT\n            the channel.channelNumber property).\"\n          in: query\n          name: ExcludeChan\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Lowest channel. sub channel numbers can be hyphenated to the end of\n            the string: e.g. 1-2 for sub channel 2 of channel 1.\"\n          in: query\n          name: StartChan\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Highest channel. sub channel numbers can be hyphenated to the end\n            of the string: e.g. 1-2 for sub channel 2 of channel 1. In general\n            this parameter should rarely be used, for shaping the grid size see\n            the 'maxchan' parameter.\"\n          in: query\n          name: EndChan\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Filter by station ID. Array or single value accepted. Station ID's\n            can be found in listings, or by using the /lineups API.\n          in: query\n          name: Station\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              format: int32\n              type: integer\n              nullable: false\n        - description: Filter out station IDs; array or single value accepted. Station ID's\n            can be found in listings, or by using the /lineups API.\n          in: query\n          name: ExcludeStation\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              format: int32\n              type: integer\n              nullable: false\n        - description: \"search value: can be a show, episode, movie, team, league, person,\n            etc. Results will be sorted by relevance rather than time.\"\n          in: query\n          name: Search\n          required: false\n          schema:\n            type: string\n        - description: Include only these show type ID(s), array or single values accepted.\n            Must be URL encoded. For a list of possible show type's and their\n            ID's see /genres/shows, or the showTypeID property of a listing\n            object.\n          in: query\n          name: ShowType\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Exclude only these show type ID(s), array or single values accepted.\n            Must be URL encoded. For a list of possible show type's and their\n            ID's see /genres/shows, or the showTypeID property of a listing\n            object.\n          in: query\n          name: ExcludeShowType\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: ListingID, array or single values accepted. to return a single\n            listing it should be used in combination with a stationID (station\n            parameter).\n          in: query\n          name: Id\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Get only sports listings of type sportTypeID. Array or single values\n            accepted. For a list of possible values see /genres/sports.\n          in: query\n          name: SportType\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Get only sports listings in the given league ID(s). Array or single\n            values accepted. For a list of possible values see /leagues.\n          in: query\n          name: League\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Filter by teams playing by name(teams.longName). Array or single\n            values accepted, for a list of possible values see /leagues/teams.\n            (NOTE: league parameter is required when using this parameter).\"\n          in: query\n          name: Team\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Only displays listings which are starting on or after the given\n            start time. No value necessary.\n          in: query\n          name: NotYetStarted\n          required: false\n          schema:\n            type: boolean\n        - description: Get sporting events only. No value necessary.\n          in: query\n          name: SportEventsOnly\n          required: false\n          schema:\n            type: boolean\n        - description: Only displays listings which are flagged as being broadcast with\n            Descriptive Video. No value necessary.\n          in: query\n          name: DescriptiveVideoOnly\n          required: false\n          schema:\n            type: boolean\n        - description: Only displays live listings. No value necessary.\n          in: query\n          name: LiveOnly\n          required: false\n          schema:\n            type: boolean\n        - description: Get new shows only. No value necessary.\n          in: query\n          name: NewShowsOnly\n          required: false\n          schema:\n            type: boolean\n        - description: Defaults to 1 (allowed). Set to 0 to hide adult content.\n          in: query\n          name: AdultContent\n          required: false\n          x-nullable: false\n          schema:\n            type: boolean\n        - description: Displays the Artwork information. Set to 1 to include, 1 is default.\n            0 to hide (will improve performance).\n          in: query\n          name: DisplayArtwork\n          required: false\n          x-nullable: false\n          schema:\n            type: boolean\n        - description: Set level of detail for response. values are 'full' or 'brief',\n            defaults to 'full'. 'full' will include all properties, 'brief' will\n            exclude optional properties.\n          in: query\n          name: Detail\n          required: false\n          schema:\n            type: string\n            enum:\n              - full\n              - brief\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaShortListingResponse\"\n                title: List\u003cTvMediaShortListingResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaShortListingResponse\"\n                title: List\u003cTvMediaShortListingResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaShortListingResponse\"\n                title: List\u003cTvMediaShortListingResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaShortListingResponse\"\n                title: List\u003cTvMediaShortListingResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Stations are not tied to lineups, therefore no channel numbers will be\n        present in the response, unlike most other listing operations.\n      tags:\n        - TvGrid\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/TvGrid/teams/{TeamID}\":\n    get:\n      deprecated: false\n      description: Gets details for a specific team.\n      operationId: GetTvMediaTeamById\n      parameters:\n        - description: API Key supplied by TvMedia.ca\n          in: query\n          name: TvMediaApiKey\n          required: true\n          schema:\n            type: string\n        - description: Team ID.\n          in: path\n          name: TeamID\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaTeamResponse\"\n                title: List\u003cTvMediaTeamResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaTeamResponse\"\n                title: List\u003cTvMediaTeamResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaTeamResponse\"\n                title: List\u003cTvMediaTeamResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaTeamResponse\"\n                title: List\u003cTvMediaTeamResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      tags:\n        - TvGrid\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/TvGrid/teams/{TeamID}/listings\":\n    get:\n      deprecated: false\n      description: Retrieve listings for a given TeamID.\n      operationId: GetTvMediaTeamListings\n      parameters:\n        - description: API Key supplied by TvMedia.ca\n          in: query\n          name: TvMediaApiKey\n          required: true\n          schema:\n            type: string\n        - description: Team ID. See /teams for a list of all available sports teams.\n          in: path\n          name: TeamID\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int32\n        - description: Lineup ID. Lineups can be found through the /TvMedia/lineups method.\n          in: query\n          name: LineupID\n          required: true\n          schema:\n            type: string\n        - description: UTC start time in ISO8601. Defaults to current date and time.\n          in: query\n          name: Start\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: UTC end time in ISO8601. Defaults to 'start' time +4 hours.\n          in: query\n          name: End\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: \"Set a timezone or time offset for listing times (listDateTime\n            property). Defaults to UTC, accepts time offsets (+/-HH:MM) or named\n            time zones (see IANA Time Zone Database). If an invalid value is\n            set, listDateTime will be returned as empty. NOTE: this parameter\n            does not affect input values; start and end times must still be\n            provided in UTC.\"\n          in: query\n          name: TimeZone\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: \"Include only channel(s) with this number, single or array values\n            accepted. sub channel numbers can be hyphenated to the end of the\n            string: e.g. 1-2 for sub channel 2 of channel 1 (use the\n            channel.number property , NOT channel.channelNumber property).\"\n          in: query\n          name: Channel\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Exclude channels by number, single or array values accepted. sub\n            channel numbers can be hyphenated to the end of the string: e.g. 1-2\n            for sub channel 2 of channel 1 (use the channel.number property, NOT\n            the channel.channelNumber property).\"\n          in: query\n          name: ExcludeChan\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Lowest channel. sub channel numbers can be hyphenated to the end of\n            the string: e.g. 1-2 for sub channel 2 of channel 1.\"\n          in: query\n          name: StartChan\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Highest channel. sub channel numbers can be hyphenated to the end\n            of the string: e.g. 1-2 for sub channel 2 of channel 1. In general\n            this parameter should rarely be used, for shaping the grid size see\n            the 'maxchan' parameter.\"\n          in: query\n          name: EndChan\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Filter by station ID. Array or single value accepted. Station ID's\n            can be found in listings, or by using the /lineups API.\n          in: query\n          name: Station\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              format: int32\n              type: integer\n              nullable: false\n        - description: Filter out station IDs; array or single value accepted. Station ID's\n            can be found in listings, or by using the /lineups API.\n          in: query\n          name: ExcludeStation\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              format: int32\n              type: integer\n              nullable: false\n        - description: \"search value: can be a show, episode, movie, team, league, person,\n            etc. Results will be sorted by relevance rather than time.\"\n          in: query\n          name: Search\n          required: false\n          schema:\n            type: string\n        - description: Include only these show type ID(s), array or single values accepted.\n            Must be URL encoded. For a list of possible show type's and their\n            ID's see /genres/shows, or the showTypeID property of a listing\n            object.\n          in: query\n          name: ShowType\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Exclude only these show type ID(s), array or single values accepted.\n            Must be URL encoded. For a list of possible show type's and their\n            ID's see /genres/shows, or the showTypeID property of a listing\n            object.\n          in: query\n          name: ExcludeShowType\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: ListingID, array or single values accepted. to return a single\n            listing it should be used in combination with a stationID (station\n            parameter).\n          in: query\n          name: Id\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Get only sports listings of type sportTypeID. Array or single values\n            accepted. For a list of possible values see /genres/sports.\n          in: query\n          name: SportType\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Get only sports listings in the given league ID(s). Array or single\n            values accepted. For a list of possible values see /leagues.\n          in: query\n          name: League\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Filter by teams playing by name(teams.longName). Array or single\n            values accepted, for a list of possible values see /leagues/teams.\n            (NOTE: league parameter is required when using this parameter).\"\n          in: query\n          name: Team\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Only displays listings which are starting on or after the given\n            start time. No value necessary.\n          in: query\n          name: NotYetStarted\n          required: false\n          schema:\n            type: boolean\n        - description: Get sporting events only. No value necessary.\n          in: query\n          name: SportEventsOnly\n          required: false\n          schema:\n            type: boolean\n        - description: Only displays listings which are flagged as being broadcast with\n            Descriptive Video. No value necessary.\n          in: query\n          name: DescriptiveVideoOnly\n          required: false\n          schema:\n            type: boolean\n        - description: Only displays live listings. No value necessary.\n          in: query\n          name: LiveOnly\n          required: false\n          schema:\n            type: boolean\n        - description: Get new shows only. No value necessary.\n          in: query\n          name: NewShowsOnly\n          required: false\n          schema:\n            type: boolean\n        - description: Defaults to 1 (allowed). Set to 0 to hide adult content.\n          in: query\n          name: AdultContent\n          required: false\n          x-nullable: false\n          schema:\n            type: boolean\n        - description: Displays the Artwork information. Set to 1 to include, 1 is default.\n            0 to hide (will improve performance).\n          in: query\n          name: DisplayArtwork\n          required: false\n          x-nullable: false\n          schema:\n            type: boolean\n        - description: Set level of detail for response. values are 'full' or 'brief',\n            defaults to 'full'. 'full' will include all properties, 'brief' will\n            exclude optional properties.\n          in: query\n          name: Detail\n          required: false\n          schema:\n            type: string\n            enum:\n              - full\n              - brief\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaListingResponse\"\n                title: List\u003cTvMediaListingResponse\u003e\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaListingResponse\"\n                title: List\u003cTvMediaListingResponse\u003e\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaListingResponse\"\n                title: List\u003cTvMediaListingResponse\u003e\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TvMediaListingResponse\"\n                title: List\u003cTvMediaListingResponse\u003e\n                type: array\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      tags:\n        - TvGrid\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  \"/Videos/GetVideo/{Id}\":\n    get:\n      deprecated: false\n      description: \u003e-\n        Returns a URL to the requested video. [Video Format\n        Specs](https://developer.iva-api.com/docs/v1/video-formats)\n\n\n        **Formats:** MP4 = 4, HLS = 11, Dash = 14, HSS = 12, HDS = 13\n\n\n        **MP4 KbRate:** 80, 212, 450, 750, 1500, 2500(HD sources only), 5000 (sources \u003e=  1080p)  \n\n\n        **Adaptive Min/Max rate:** 212000, 350000, 600000, 1200000, 2000000, 2500000, 3500000  \n\n         `URLs requested with a Demo account will always return max 750 kbps video.  Full commercial account required for higher bitrates.`\n      operationId: GetVideo\n      parameters:\n        - description: Id of the Video from either MovieVideo, ShowVideo, SeasonVideo,\n            EpisodeVideo object.\n          in: path\n          name: Id\n          required: true\n          x-nullable: false\n          schema:\n            type: integer\n            format: int64\n        - description: Video format.\n          in: query\n          name: Format\n          required: true\n          x-nullable: false\n          schema:\n            type: string\n            enum:\n              - mp4\n              - hls\n              - hss\n              - hds\n              - dash\n        - description: Video bit-rate required for MP4 content.\n          in: query\n          name: KbRate\n          required: false\n          x-nullable: false\n          schema:\n            type: string\n            enum:\n              - NOT_SET\n              - mp4_80\n              - mp4_212\n              - mp4_450\n              - mp4_750\n              - mp4_1500\n              - mp4_2500\n              - mp4_5000\n              - mp4_8000\n        - description: \"UTC Time to video link should expire. ISO 8601 Format: yyyy-mm-dd\n            hh:mm:ss.ffffff0Z\"\n          in: query\n          name: Expires\n          required: true\n          x-nullable: false\n          schema:\n            type: string\n            format: date-time\n        - description: Report tag used in video analytics.\n          in: query\n          name: ReportTag\n          required: false\n          schema:\n            type: string\n        - description: Position in seconds to start video playback.\n          in: query\n          name: start\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Position in seconds to end video playback.\n          in: query\n          name: end\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Adaptive Maximum rate. (Depreciated, use adaptive minimum resolution\n            instead)\n          in: query\n          name: MinRate\n          required: false\n          x-nullable: false\n          schema:\n            type: string\n            enum:\n              - adap_212000\n              - adap_350000\n              - adap_600000\n              - adap_1200000\n              - adap_2000000\n              - adap_2500000\n              - adap_3500000\n        - description: Adaptive Minimum rate. (Depreciated, use adaptive minimum resolution\n            instead)\n          in: query\n          name: MaxRate\n          required: false\n          x-nullable: false\n          schema:\n            type: string\n            enum:\n              - adap_212000\n              - adap_350000\n              - adap_600000\n              - adap_1200000\n              - adap_2000000\n              - adap_2500000\n              - adap_3500000\n        - description: Adaptive Minimum resolution. Default is QVGA (320 wide, 212Kbps)\n          in: query\n          name: AdaptiveMinimumResolution\n          required: false\n          schema:\n            type: string\n            enum:\n              - RESOLUTION_QVGA\n              - RESOLUTION_HVGA\n              - RESOLUTION_480P\n              - RESOLUTION_720P\n              - RESOLUTION_1080P\n        - description: Adaptive Maximum resolution. Default is 1080P Resolution.\n          in: query\n          name: AdaptiveMaximumResolution\n          required: false\n          schema:\n            type: string\n            enum:\n              - RESOLUTION_QVGA\n              - RESOLUTION_HVGA\n              - RESOLUTION_480P\n              - RESOLUTION_720P\n              - RESOLUTION_1080P\n        - description: Adaptive Client Manifest Version (HLS, default = 3)\n          in: query\n          name: AdaptiveClientManifestVersion\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Adaptive Start Index. Default = 4, the 480P resolution.\n          in: query\n          name: AdaptiveStartIndex\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Adaptive Minimum Fragment Length. Default is 10 seconds.\n          in: query\n          name: AdaptiveMinimumFragmentLength\n          required: false\n          schema:\n            type: string\n            enum:\n              - Two\n              - Three\n              - Four\n              - Five\n              - Six\n              - Seven\n              - Eight\n              - Nine\n              - Ten\n              - Fifteen\n              - Twenty\n              - Thirty\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VideoResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/VideoResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/VideoResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/VideoResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: Redirect URL to video.\n      tags:\n        - Videos\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\n  /XroadMedia/recommendations:\n    get:\n      deprecated: false\n      description: \"\"\n      operationId: GetXRoadMediaRecommendations\n      parameters:\n        - description: Source MovieId for recommendations.\n          in: query\n          name: MovieId\n          required: false\n          schema:\n            type: integer\n            format: int64\n        - description: Source ShowId for recommendations.\n          in: query\n          name: ShowId\n          required: false\n          schema:\n            type: integer\n            format: int64\n        - description: Type of recommendation response.\n          in: query\n          name: Type\n          required: false\n          schema:\n            type: string\n            enum:\n              - similar\n              - similarShowsOnly\n              - similarMoviesOnly\n      responses:\n        \"200\":\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/XRoadMediaRecommendationResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/XRoadMediaRecommendationResponse\"\n            text/csv:\n              schema:\n                $ref: \"#/components/schemas/XRoadMediaRecommendationResponse\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/XRoadMediaRecommendationResponse\"\n        \"204\":\n          description: No content.\n        \"400\":\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden. The subscription key does not have permission to access\n            this method.\n        \"404\":\n          description: Not found. The item you requested could not be found or has been\n            deleted.\n        \"409\":\n          description: Conflict.\n        \"429\":\n          description: Too many requests.\n        \"500\":\n          description: Internal server error.\n        \"503\":\n          description: Service unavailable.\n      security:\n        - ApiKeyHeader: []\n          ApiKeyQuery: []\n      summary: List of Recommendations for movie or show.\n      tags:\n        - XroadMedia\n    parameters:\n      - $ref: \"#/components/parameters/Accept\"\nservers:\n  - url: https://ee.iva-api.com\ncomponents:\n  parameters:\n    Accept:\n      description: Accept Header\n      in: header\n      name: Accept\n      required: true\n      schema:\n        type: string\n        enum:\n          - application/json\n  securitySchemes:\n    ApiKeyHeader:\n      description: Authorize requests passing your apiKey in HTTP header.\n      in: header\n      name: Ocp-Apim-Subscription-Key\n      type: apiKey\n    ApiKeyQuery:\n      description: Authorize requests passing your apiKey in Querystring.\n      in: query\n      name: subscription-Key\n      type: apiKey\n  schemas:\n    AllGamesResponse:\n      description: AllGamesResponse\n      properties:\n        Result:\n          items:\n            $ref: \"#/components/schemas/Game\"\n          type: array\n        Skip:\n          description: Records to skip used with paging.\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Page size.\n          format: int32\n          type: integer\n          nullable: false\n        TotalCount:\n          description: Total count of games.\n          format: int32\n          type: integer\n          nullable: false\n      title: AllGamesResponse\n      type: object\n    AllMoviesResponse:\n      description: AllMoviesResponse\n      properties:\n        Result:\n          items:\n            $ref: \"#/components/schemas/Movie\"\n          type: array\n        Skip:\n          description: Records to skip used with paging.\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Page size.\n          format: int32\n          type: integer\n          nullable: false\n        TotalCount:\n          description: Total count of movies.\n          format: int32\n          type: integer\n          nullable: false\n      title: AllMoviesResponse\n      type: object\n    AllMyProgramsResponse:\n      description: AllMyProgramsResponse\n      properties:\n        Result:\n          items:\n            $ref: \"#/components/schemas/MyProgram\"\n          type: array\n        Skip:\n          description: Records to skip used with paging.\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Page size.\n          format: int32\n          type: integer\n          nullable: false\n        TotalCount:\n          description: Total count of programs.\n          format: int32\n          type: integer\n          nullable: false\n      title: AllMyProgramsResponse\n      type: object\n    AllMyVideosResponse:\n      description: AllMyVideosResponse\n      properties:\n        Result:\n          items:\n            $ref: \"#/components/schemas/MyVideo\"\n          type: array\n        Skip:\n          description: Records to skip used with paging.\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Page size.\n          format: int32\n          type: integer\n          nullable: false\n        TotalCount:\n          description: Total count of videos.\n          format: int32\n          type: integer\n          nullable: false\n      title: AllMyVideosResponse\n      type: object\n    AllPeopleResponse:\n      description: AllPeopleResponse\n      properties:\n        Result:\n          items:\n            $ref: \"#/components/schemas/Person\"\n          type: array\n        Skip:\n          description: Records to skip used with paging.\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Page size.\n          format: int32\n          type: integer\n          nullable: false\n        TotalCount:\n          description: Total count of people.\n          format: int32\n          type: integer\n          nullable: false\n      title: AllPeopleResponse\n      type: object\n    AllRevCaptionsResponse:\n      description: AllRevCaptionsResponse\n      properties:\n        Result:\n          items:\n            $ref: \"#/components/schemas/RevCaptionsResponse\"\n          type: array\n        Skip:\n          description: Records to skip used with paging.\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Page size.\n          format: int32\n          type: integer\n          nullable: false\n        TotalCount:\n          description: Total count of captions.\n          format: int64\n          type: integer\n          nullable: false\n      title: AllRevCaptionsResponse\n      type: object\n    AllShowsResponse:\n      description: AllShowsResponse\n      properties:\n        Result:\n          items:\n            $ref: \"#/components/schemas/Show\"\n          type: array\n        Skip:\n          description: Records to skip used with paging.\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Page size.\n          format: int32\n          type: integer\n          nullable: false\n        TotalCount:\n          description: Total count of shows.\n          format: int32\n          type: integer\n          nullable: false\n      title: AllShowsResponse\n      type: object\n    AnalyticsCountryResponse:\n      description: AnalyticsCountryResponse\n      properties:\n        Country:\n          type: string\n        CountryCode:\n          type: string\n        Percentage:\n          format: double\n          type: number\n          nullable: false\n        Viewers:\n          format: int32\n          type: integer\n          nullable: false\n      title: AnalyticsCountryResponse\n      type: object\n    Artwork:\n      description: Artwork\n      properties:\n        episodic:\n          type: string\n        moviePoster:\n          type: string\n        movieStill:\n          type: string\n        poster:\n          type: string\n        showcard:\n          type: string\n        titlecard:\n          type: string\n      title: Artwork\n      type: object\n    CaptionOrderResponse:\n      description: CaptionOrderResponse\n      properties:\n        Id:\n          format: int64\n          type: integer\n          nullable: false\n        Status:\n          type: string\n      title: CaptionOrderResponse\n      type: object\n    CelebrityRankedResponse:\n      description: CelebrityRankedResponse\n      properties:\n        FilePath:\n          type: string\n        Id:\n          type: string\n        Name:\n          type: string\n      title: CelebrityRankedResponse\n      type: object\n    ChartItem:\n      description: ChartItem\n      properties:\n        Id:\n          format: int64\n          type: integer\n          nullable: false\n        Rank:\n          format: int32\n          type: integer\n          nullable: false\n        Title:\n          type: string\n        Year:\n          format: int32\n          type: integer\n          nullable: false\n      title: ChartItem\n      type: object\n    ChartPersonItem:\n      description: ChartPersonItem\n      properties:\n        Id:\n          format: int64\n          type: integer\n          nullable: false\n        Name:\n          type: string\n        Rank:\n          format: int32\n          type: integer\n          nullable: false\n      title: ChartPersonItem\n      type: object\n    CityResponse:\n      description: CityResponse\n      properties:\n        City:\n          type: string\n        CountryCode:\n          type: string\n        Percentage:\n          format: double\n          type: number\n          nullable: false\n        Viewers:\n          format: int32\n          type: integer\n          nullable: false\n      title: CityResponse\n      type: object\n    CommonEnumerators:\n      description: CommonEnumerators\n      properties:\n        CurrencyType:\n          items:\n            type: string\n          type: array\n        DeliveryMethod:\n          items:\n            type: string\n          type: array\n        OfferType:\n          items:\n            type: string\n          type: array\n        Provider:\n          items:\n            type: string\n          type: array\n        VideoQuality:\n          items:\n            type: string\n          type: array\n      title: CommonEnumerators\n      type: object\n    Company:\n      description: Company\n      properties:\n        CompanyId:\n          description: ID of Company.\n          format: int64\n          type: integer\n          nullable: false\n        Id:\n          description: ID of Company object.\n          format: int64\n          type: integer\n        Name:\n          description: Name of the Company.\n          type: string\n      title: Company\n      type: object\n    CompanyResponse:\n      description: CompanyResponse\n      properties:\n        Id:\n          description: ID of Company.\n          format: int64\n          type: integer\n          nullable: false\n        Name:\n          description: Name of the Company.\n          type: string\n      title: CompanyResponse\n      type: object\n    Contribution:\n      description: Contribution\n      properties:\n        Character:\n          type: string\n        Id:\n          format: int64\n          type: integer\n          nullable: false\n        Job:\n          type: string\n        OriginalTitle:\n          type: string\n        Title:\n          type: string\n        Year:\n          format: int32\n          type: integer\n          nullable: false\n      title: Contribution\n      type: object\n    Country:\n      description: Country\n      properties:\n        AlternateNames:\n          description: Alternate names of the Country.\n          items:\n            type: string\n          type: array\n        Id:\n          format: int32\n          type: integer\n          nullable: false\n        IsoCode:\n          description: ISO code for a Country.\n          type: string\n        IsoCodeA3:\n          description: ISO 3 character code for a Country.\n          type: string\n        Name:\n          description: Name of the Country.\n          type: string\n      title: Country\n      type: object\n    CountryResponse:\n      description: CountryResponse\n      properties:\n        AlternateNames:\n          description: Alternate names of the Country.\n          items:\n            type: string\n          type: array\n        Id:\n          format: int32\n          type: integer\n          nullable: false\n        IsoCode:\n          description: ISO code for a Country.\n          type: string\n        IsoCodeA3:\n          description: ISO 3 character code for a Country.\n          type: string\n        Name:\n          description: Name of the Country.\n          type: string\n      title: CountryResponse\n      type: object\n    CreateMyProgram:\n      description: CreateMyProgram\n      properties:\n        CustomMetadata:\n          description: List of custom metadata entries.\n          items:\n            $ref: \"#/components/schemas/CustomMetadata\"\n          type: array\n        EntertainmentConnections:\n          description: List of connections to existing Entertainment programs.\n          items:\n            $ref: \"#/components/schemas/EntertainmentConnection\"\n          type: array\n        ReferenceId:\n          description: Client reference ID of MyVideo.\n          type: string\n        Title:\n          description: Title of MyVideo.\n          type: string\n      title: CreateMyProgram\n      type: object\n    CreateMyVideo:\n      description: CreateMyVideo\n      properties:\n        Companies:\n          description: Companies of MyVideo.\n          items:\n            type: string\n          type: array\n        Descriptions:\n          description: Description of MyVideo.\n          items:\n            $ref: \"#/components/schemas/MyVideoDescription\"\n          type: array\n        EntertainmentConnections:\n          description: List of connections to existing Entertainment programs.\n          items:\n            $ref: \"#/components/schemas/EntertainmentConnection\"\n          type: array\n        ExpirationDate:\n          description: Date MyVideo expires / becomes unavailable for streaming.\n          format: date-time\n          type: string\n        NotificationUrl:\n          description: Location to have us notify you of video encode status.\n          type: string\n        ReferenceId:\n          description: Client reference ID of MyVideo.\n          type: string\n        StartDate:\n          description: First date of MyVideo availability.\n          format: date-time\n          type: string\n        Title:\n          description: Title of MyVideo.\n          type: string\n        Url:\n          description: Location of the media you wish to upload.\n          type: string\n      title: CreateMyVideo\n      type: object\n    CreateRevCaptionOrder:\n      description: CreateRevCaptionOrder\n      properties:\n        ClientApiKey:\n          description: This is a secret key specific to each partner that wishes to use the\n            Rev API.\n          type: string\n        NotificationUrl:\n          description: Optional URL to send notifications when order is complete.\n          type: string\n        ReferenceId:\n          description: Optional order reference number.\n          type: string\n        UseSandbox:\n          description: Optional URL to send notifications when order is complete.\n          type: boolean\n          nullable: false\n        UserApiKey:\n          description: This is a secret key specific to a Rev user, which identifies the\n            user account under whose privileges the requested operation\n            executes. This key can be obtained by logging in to Rev as the user\n            in question and going to the Rev Account Settings page.\n          type: string\n        VideoId:\n          description: ID of video to caption.\n          format: int64\n          type: integer\n          nullable: false\n      required:\n        - ClientApiKey\n        - UserApiKey\n        - VideoId\n      title: CreateRevCaptionOrder\n      type: object\n    CustomMetadata:\n      description: CustomMetadata\n      properties:\n        Name:\n          description: Metadata name.\n          type: string\n        Value:\n          description: Metadata value.\n          type: string\n      title: CustomMetadata\n      type: object\n    DataDemoFilters:\n      description: DataDemoFilters\n      properties:\n        AvailableOn:\n          items:\n            $ref: \"#/components/schemas/NameValueFilter\"\n          type: array\n        Countries:\n          items:\n            $ref: \"#/components/schemas/NameValueFilter\"\n          type: array\n        Genres:\n          items:\n            $ref: \"#/components/schemas/NameValueFilter\"\n          type: array\n        Languages:\n          items:\n            $ref: \"#/components/schemas/NameValueFilter\"\n          type: array\n        MissingExternalIdNames:\n          items:\n            $ref: \"#/components/schemas/NameValueFilter\"\n          type: array\n        OriginatingNetworks:\n          items:\n            $ref: \"#/components/schemas/NameValueFilter\"\n          type: array\n        Packages:\n          items:\n            $ref: \"#/components/schemas/NameValueFilter\"\n          type: array\n        ProgramTypes:\n          items:\n            $ref: \"#/components/schemas/NameValueFilter\"\n          type: array\n        RemoteIp:\n          type: string\n        SortBy:\n          items:\n            $ref: \"#/components/schemas/NameValueFilter\"\n          type: array\n        Status:\n          items:\n            $ref: \"#/components/schemas/NameValueFilter\"\n          type: array\n        TrendBrands:\n          items:\n            $ref: \"#/components/schemas/NameValueFilter\"\n          type: array\n        TrendListClassifiers:\n          items:\n            $ref: \"#/components/schemas/NameValueFilter\"\n          type: array\n        TrendSources:\n          items:\n            $ref: \"#/components/schemas/NameValueFilter\"\n          type: array\n        YearRange:\n          items:\n            format: int32\n            type: integer\n            nullable: false\n          type: array\n      title: DataDemoFilters\n      type: object\n    DbCountry:\n      description: DbCountry\n      properties:\n        AlternateNames:\n          description: Alternate names of the Country.\n          items:\n            type: string\n          type: array\n        Id:\n          format: int32\n          type: integer\n          nullable: false\n        IsoCode:\n          description: ISO code for a Country.\n          type: string\n        IsoCodeA3:\n          description: ISO 3 character code for a Country.\n          type: string\n        Name:\n          description: Name of the Country.\n          type: string\n      title: DbCountry\n      type: object\n    DbShowCertification:\n      description: DbShowCertification\n      properties:\n        Certification:\n          description: Show certification or Rating.\n          type: string\n        Country:\n          $ref: \"#/components/schemas/DbCountry\"\n        CountryId:\n          description: ID of Country associated with ShowCertification.\n          format: int32\n          type: integer\n          nullable: false\n        Definition:\n          description: Definition of ShowCertification.\n          type: string\n        Id:\n          description: Unique ID of a ShowCertification.\n          format: int32\n          type: integer\n          nullable: false\n        Order:\n          description: Rank of ShowCertification from youngest to oldest.\n          format: int32\n          type: integer\n          nullable: false\n      title: DbShowCertification\n      type: object\n    DiscoverMovie:\n      description: DiscoverMovie\n      properties:\n        AlternateTitles:\n          description: List of alternate titles for this Movie.\n          items:\n            type: string\n          type: array\n        Budget:\n          description: Budget of Movie.\n          format: int64\n          type: integer\n        Cast:\n          description: List of cast members associated with Movie.\n          items:\n            type: string\n          type: array\n        Created:\n          description: Datetime Movie record created.\n          format: date-time\n          type: string\n        Descriptions:\n          description: List of Descriptions associated with Movie.\n          items:\n            type: string\n          type: array\n        Directors:\n          description: List of directors associated with Movie.\n          items:\n            type: string\n          type: array\n        FranceReleaseDate:\n          description: Release date of Movie in France.\n          format: date-time\n          type: string\n        Genres:\n          description: List of genres associated with Movie.\n          items:\n            type: string\n          type: array\n        GermanyReleaseDate:\n          description: Release date of Movie in Germany.\n          format: date-time\n          type: string\n        HasVideo:\n          description: Flag indicating video content available.\n          type: boolean\n        Id:\n          description: Unique ID of a Movie.\n          type: string\n        Idx:\n          description: Used to distinguish identical movie title + year records.\n          type: string\n        ItalyReleaseDate:\n          description: Original release date of Movie in Italy.\n          format: date-time\n          type: string\n        JapanReleaseDate:\n          description: Original release date of Movie in Japan.\n          format: date-time\n          type: string\n        Modified:\n          description: Datetime Movie last modified.\n          format: date-time\n          type: string\n        OriginalLanguage:\n          description: Original language of Movie.\n          type: string\n        OriginalReleaseDate:\n          description: Original release date of Movie.\n          format: date-time\n          type: string\n        PosterFilePath:\n          description: File path location of poster for Movie.\n          type: string\n        Ratings:\n          description: List of Ratings associated with Movie.\n          items:\n            type: string\n          type: array\n        Revenue:\n          description: Totle global Revenue of Movie.\n          format: int64\n          type: integer\n        Runtime:\n          description: Runtime in minutes of Movie.\n          format: int32\n          type: integer\n        Status:\n          description: Status of a Movie\n          type: string\n        Tags:\n          description: List of tags associated with Movie.\n          items:\n            type: string\n          type: array\n        Title:\n          description: Title of a Movie\n          type: string\n        Type:\n          description: \"Type of a Movie. Ex: Movie, Short, TV_Movie, Video_Movie\"\n          type: string\n        UnitedKingdomReleaseDate:\n          description: Release date of Movie in UK.\n          format: date-time\n          type: string\n        UnitedStatesReleaseDate:\n          description: Release date of Movie in USA.\n          format: date-time\n          type: string\n        Year:\n          description: Release year of Movie.\n          format: int32\n          type: integer\n      title: DiscoverMovie\n      type: object\n    DiscoverPerson:\n      description: DiscoverPerson\n      properties:\n        AlternateNames:\n          description: List of PersonName associated with this Person.\n          items:\n            type: string\n          type: array\n        BirthDate:\n          $ref: \"#/components/schemas/FlexDate\"\n        BirthDayOfMonth:\n          description: Day of month Person was born.\n          format: int32\n          type: integer\n        BirthMonthOfYear:\n          description: Month of Year Person was born.\n          format: int32\n          type: integer\n        BirthName:\n          description: Name of Person at birth.\n          type: string\n        DeathDate:\n          $ref: \"#/components/schemas/FlexDate\"\n        DeathDayOfMonth:\n          description: Day of month Person died.\n          format: int32\n          type: integer\n        DeathMonthOfYear:\n          description: Month of Year Person died.\n          format: int32\n          type: integer\n        Descriptions:\n          description: List of biographies for this person.\n          items:\n            $ref: \"#/components/schemas/ProgramDescription\"\n          type: array\n        ExternalIds:\n          description: List of alternate Ids associated with this person.\n          items:\n            $ref: \"#/components/schemas/ExternalId\"\n          type: array\n        Gender:\n          description: Gender of Person.\n          type: string\n        Id:\n          description: Unique ID of thePerson in the form of Person/1\n          type: string\n        Images:\n          description: List of Images associated with this Person.\n          items:\n            $ref: \"#/components/schemas/ProgramPersonImage\"\n          type: array\n        Modified:\n          description: Datetime Person was last modified.\n          format: date-time\n          type: string\n          nullable: false\n        Name:\n          description: Full Name of this Person.\n          type: string\n        Packages:\n          items:\n            type: string\n          type: array\n        ProgramType:\n          description: \"Defines the type of data this is.  Ex: Person\"\n          type: string\n        Tags:\n          description: List of tags associated with person.\n          items:\n            type: string\n          type: array\n        TimeStamp:\n          description: Time of last change to overall object.\n          format: date-time\n          type: string\n        VersionId:\n          description: Record Version Id\n          format: int64\n          type: integer\n          nullable: false\n      title: DiscoverPerson\n      type: object\n    DiscoverProgram:\n      description: DiscoverProgram\n      properties:\n        AlternateTitles:\n          description: List of alternate titles for this Program.\n          items:\n            $ref: \"#/components/schemas/ProgramAlternateTitle\"\n          type: array\n        Availabilities:\n          description: List of availabilities for program.\n          items:\n            $ref: \"#/components/schemas/ProgramAvailability\"\n          type: array\n        Budget:\n          description: Movie budget\n          format: int64\n          type: integer\n        Companies:\n          description: List of companies (Production, Distribution, etc.) associated with\n            program.\n          items:\n            $ref: \"#/components/schemas/Company\"\n          type: array\n        Contributors:\n          description: List of contributors (Cast, Director, Writer, Production, etc.) for\n            this program.\n          items:\n            $ref: \"#/components/schemas/ProgramContributor\"\n          type: array\n        Created:\n          description: DateTime record was created.\n          format: date-time\n          type: string\n          nullable: false\n        Deleted:\n          type: boolean\n          nullable: false\n        Descriptions:\n          description: List of descriptions for this Program.\n          items:\n            $ref: \"#/components/schemas/ProgramDescription\"\n          type: array\n        EpisodeNumber:\n          description: Used for episodes.\n          format: int32\n          type: integer\n        ExternalIds:\n          description: List of external Ids associated with Program.\n          items:\n            $ref: \"#/components/schemas/ExternalId\"\n          type: array\n        Genres:\n          description: List of genres.\n          items:\n            type: string\n          type: array\n        Id:\n          description: Unique ID of the Movie, Show, Season or Episode in the form of\n            Movie/1 or Show/2\n          type: string\n        Idx:\n          description: Index to differentiate movies with identical titles and year.\n          type: string\n        ImageCount:\n          description: Count of images\n          format: int32\n          type: integer\n          nullable: false\n        Images:\n          description: List of images.\n          items:\n            $ref: \"#/components/schemas/ProgramImage\"\n          type: array\n        IvaRating:\n          description: IVA Rating for program.  Applies to Show, Movie, and Game\n          format: double\n          type: number\n        Modified:\n          description: DateTime record last modified.\n          format: date-time\n          type: string\n          nullable: false\n        OfficialSiteUrl:\n          description: Movie website home page.\n          type: string\n        OriginalLanguage:\n          description: Original language.\n          type: string\n        OriginalReleaseDate:\n          description: First generally available release regardless of country. Excludes\n            festivals and premieres.\n          format: date-time\n          type: string\n        OriginalTitle:\n          description: Original title of program\n          type: string\n        OriginatingNetwork:\n          description: The network the new shows are currently airing on.\n          type: string\n        ProgramTrends:\n          description: List of trending source data.\n          items:\n            $ref: \"#/components/schemas/ProgramTrend\"\n          type: array\n        ProgramType:\n          type: string\n        RedirectTo:\n          description: Redirect to.\n          type: string\n        Releases:\n          description: List of releases associated with Program.\n          items:\n            $ref: \"#/components/schemas/ProgramRelease\"\n          type: array\n        Revenue:\n          description: Total revenue generated by Movie.\n          format: int64\n          type: integer\n        Runtime:\n          description: Movie runtime in minutes.\n          format: int32\n          type: integer\n        SeasonId:\n          description: \"Used for season and episodes. Ex: Season/1234\"\n          type: string\n        SeasonNumber:\n          description: Used for season and episodes.\n          format: int32\n          type: integer\n        ShowId:\n          description: \"Used for season and episodes.  Ex: Show/1234\"\n          type: string\n        Status:\n          description: Status of movie.\n          type: string\n        Tags:\n          description: List of tags associated with Program.\n          items:\n            type: string\n          type: array\n        TimeStamp:\n          description: Last time object was updated or changed.\n          format: date-time\n          type: string\n        Title:\n          description: English version of any foreign Original Title.\n          type: string\n        Type:\n          description: \"Type of movie. Ex: Tv Movie, Short, etc.\"\n          type: string\n        VersionId:\n          description: Record Version Id\n          format: int64\n          type: integer\n        VideoCount:\n          description: Count of videos\n          format: int32\n          type: integer\n          nullable: false\n        Videos:\n          description: List of videos.\n          items:\n            $ref: \"#/components/schemas/ProgramVideo\"\n          type: array\n        Year:\n          format: int32\n          type: integer\n      required:\n        - Year\n      title: DiscoverProgram\n      type: object\n    DiscoverShow:\n      description: DiscoverShow\n      properties:\n        AlternateTitles:\n          description: List of alternate titles for this Show.\n          items:\n            type: string\n          type: array\n        Cast:\n          description: List of cast members associated with Show.\n          items:\n            type: string\n          type: array\n        Created:\n          description: Datetime Show record created.\n          format: date-time\n          type: string\n        Descriptions:\n          description: List of Descriptions associated with Show.\n          items:\n            type: string\n          type: array\n        Directors:\n          description: List of directors associated with Show.\n          items:\n            type: string\n          type: array\n        Genres:\n          description: List of genres associated with Show.\n          items:\n            type: string\n          type: array\n        HasVideo:\n          description: Flag indicating video content available.\n          type: boolean\n        Id:\n          description: Unique ID of a Show.\n          type: string\n        Idx:\n          description: Used to distinguish identical show title + year records.\n          type: string\n        Modified:\n          description: Datetime Show last modified.\n          format: date-time\n          type: string\n        NumberOfEpisodes:\n          description: Number of Episodes associated with Show.\n          format: int32\n          type: integer\n        NumberOfSeasons:\n          description: Number of Seasons associated with Show.\n          format: int32\n          type: integer\n        OriginalAirDate:\n          description: Original air date of Show.\n          format: date-time\n          type: string\n        OriginalLanguage:\n          description: Original language of Show.\n          type: string\n        PosterFilePath:\n          description: File path location of poster for Show.\n          type: string\n        Ratings:\n          description: List of Ratings associated with Show.\n          items:\n            type: string\n          type: array\n        Status:\n          description: Status of a Show\n          type: string\n        Tags:\n          description: List of tags associated with Show.\n          items:\n            type: string\n          type: array\n        Title:\n          description: Title of a Show\n          type: string\n        Type:\n          description: Type of a Show\n          type: string\n        Year:\n          description: Year of original air date of Show.\n          format: int32\n          type: integer\n      title: DiscoverShow\n      type: object\n    EngagementActionsResponse:\n      description: EngagementActionsResponse\n      properties:\n        Frequency:\n          format: int32\n          type: integer\n          nullable: false\n        Views:\n          type: string\n      title: EngagementActionsResponse\n      type: object\n    EngagementTimesResponse:\n      description: EngagementTimesResponse\n      properties:\n        Duration:\n          type: string\n        Frequency:\n          format: int32\n          type: integer\n          nullable: false\n      title: EngagementTimesResponse\n      type: object\n    EntertainmentConnection:\n      description: EntertainmentConnection\n      properties:\n        EntertainmentType:\n          description: MyVideo Entertainment connection type.\n          type: string\n        Id:\n          description: MyVideo Entertainment connection ID.\n          format: int64\n          type: integer\n          nullable: false\n      title: EntertainmentConnection\n      type: object\n    Episode:\n      description: Episode\n      properties:\n        AlternateTitles:\n          description: List of alternate titles for this Episode.\n          items:\n            $ref: \"#/components/schemas/EpisodeAlternateTitle\"\n          type: array\n        Availabilities:\n          description: List of episode offers.\n          items:\n            $ref: \"#/components/schemas/EpisodeAvailabilityResponse\"\n          type: array\n        Contributors:\n          description: List of contributors (Cast, Director, Writer, Production, etc.) for\n            this Episode.\n          items:\n            $ref: \"#/components/schemas/EpisodeContributor\"\n          type: array\n        Created:\n          description: DateTime Episode record created.\n          format: date-time\n          type: string\n          nullable: false\n        Descriptions:\n          description: List of descriptions for this Episode.\n          items:\n            $ref: \"#/components/schemas/EpisodeDescription\"\n          type: array\n        EpisodeNumber:\n          description: Number of Episode within its associated Season.\n          format: int32\n          type: integer\n          nullable: false\n        ExternalIds:\n          description: List of external Ids associated with Episode.\n          items:\n            $ref: \"#/components/schemas/ExternalId\"\n          type: array\n        Id:\n          description: Unique ID of the Episode.\n          format: int64\n          type: integer\n          nullable: false\n        Images:\n          description: List of images associated with Episode.\n          items:\n            $ref: \"#/components/schemas/EpisodeImage\"\n          type: array\n        Modified:\n          description: DateTime Episode record last modified.\n          format: date-time\n          type: string\n          nullable: false\n        Modifier:\n          description: User who last modified the Episode record.\n          format: int32\n          type: integer\n        OriginalLanguage:\n          description: Episode original language.\n          type: string\n        OriginalReleaseDate:\n          description: Original release date of Episode.\n          format: date-time\n          type: string\n        OriginalTitle:\n          description: Original title of Episode\n          type: string\n        OwnerId:\n          description: User who has ownership of the Show record.\n          format: int32\n          type: integer\n        Releases:\n          description: List of releases associated with Episode.\n          items:\n            $ref: \"#/components/schemas/EpisodeRelease\"\n          type: array\n        SeasonId:\n          description: ID of Season this Episode is associated with.\n          format: int64\n          type: integer\n          nullable: false\n        SeasonNumber:\n          description: Number of Season within its associated Show.\n          format: int32\n          type: integer\n          nullable: false\n        ShowId:\n          description: ID of Show this Episode is associated with.\n          format: int64\n          type: integer\n          nullable: false\n        TimeStamp:\n          description: Time of last change to overall object.\n          format: date-time\n          type: string\n        Title:\n          description: English version of any foreign Original Title.\n          type: string\n        VersionId:\n          description: Record Version Id\n          format: int64\n          type: integer\n          nullable: false\n        Videos:\n          description: List of videos associated with Episode.\n          items:\n            $ref: \"#/components/schemas/EpisodeVideo\"\n          type: array\n        Year:\n          description: Release year of Episode.\n          format: int32\n          type: integer\n      title: Episode\n      type: object\n    EpisodeAlternateTitle:\n      description: EpisodeAlternateTitle\n      properties:\n        Country:\n          description: Country associated with this alternate title.\n          type: string\n        Id:\n          description: Unique ID of this EpisodeAlternateTitle\n          format: int64\n          type: integer\n        Modifier:\n          description: ID of last user who modified the item.\n          format: int32\n          type: integer\n        Title:\n          description: The alternate title.\n          type: string\n      title: EpisodeAlternateTitle\n      type: object\n    EpisodeAvailabilityResponse:\n      description: EpisodeAvailabilityResponse\n      properties:\n        Country:\n          type: string\n        Currency:\n          type: string\n        DeliveryMethod:\n          type: string\n        ExpirationDate:\n          format: date-time\n          type: string\n        Links:\n          items:\n            $ref: \"#/components/schemas/OfferLink\"\n          type: array\n        OfferType:\n          type: string\n        PreSale:\n          type: boolean\n          nullable: false\n        Price:\n          format: double\n          type: number\n          nullable: false\n        Provider:\n          type: string\n        Quality:\n          type: string\n        StartDate:\n          format: date-time\n          type: string\n        Title:\n          type: string\n      title: EpisodeAvailabilityResponse\n      type: object\n    EpisodeChangeHistoryResponse:\n      description: EpisodeChangeHistoryResponse\n      properties:\n        EpisodeId:\n          description: ID of the Episode.\n          format: int64\n          type: integer\n          nullable: false\n      title: EpisodeChangeHistoryResponse\n      type: object\n    EpisodeChangeHistoryWithEntityResponse:\n      description: EpisodeChangeHistoryWithEntityResponse\n      properties:\n        Entity:\n          description: Object belonging to Episode that has changed.\n          type: string\n        EpisodeId:\n          description: ID of the Episode.\n          format: int64\n          type: integer\n          nullable: false\n      title: EpisodeChangeHistoryWithEntityResponse\n      type: object\n    EpisodeContribution:\n      description: EpisodeContribution\n      properties:\n        Character:\n          type: string\n        Id:\n          format: int64\n          type: integer\n          nullable: false\n        Job:\n          type: string\n        OriginalTitle:\n          type: string\n        ShowId:\n          format: int64\n          type: integer\n          nullable: false\n        Title:\n          type: string\n        Year:\n          format: int32\n          type: integer\n          nullable: false\n      title: EpisodeContribution\n      type: object\n    EpisodeContributor:\n      description: EpisodeContributor\n      properties:\n        Character:\n          description: Role played by EpisodeContributor.\n          type: string\n        Id:\n          description: Unique ID of the EpisodeContributor object.\n          format: int64\n          type: integer\n        Job:\n          description: Job of Person associated with EpisodeContributor.\n          type: string\n        Modifier:\n          description: ID of last user who modified the item.\n          format: int32\n          type: integer\n        Order:\n          description: Rank of EpisodeContributor in list for Episode (cast).\n          format: int32\n          type: integer\n          nullable: false\n        PersonId:\n          description: ID of Person associated with EpisodeContributor.\n          format: int64\n          type: integer\n          nullable: false\n        PersonName:\n          description: Person's Name associated with EpisodeContributor.\n          type: string\n      title: EpisodeContributor\n      type: object\n    EpisodeDescription:\n      description: EpisodeDescription\n      properties:\n        Attribution:\n          description: Source of EpisodeDescription.\n          type: string\n        Description:\n          description: Episode Description.\n          type: string\n        Id:\n          description: Unique ID of this EpisodeDescription\n          format: int64\n          type: integer\n        Language:\n          description: Language object for language of EpisodeDescription.\n          type: string\n        Modifier:\n          description: ID of last user who modified the item.\n          format: int32\n          type: integer\n      title: EpisodeDescription\n      type: object\n    EpisodeImage:\n      description: EpisodeImage\n      properties:\n        FilePath:\n          description: Filepath (location) of EpisodeImage.\n          type: string\n        Height:\n          description: Height in pixels of EpisodeImage.\n          format: int32\n          type: integer\n          nullable: false\n        Id:\n          description: Unique ID of this EpisodeImage\n          format: int64\n          type: integer\n        ImageId:\n          description: ID of Image associated with EpisodeImage.\n          format: int64\n          type: integer\n        ImageType:\n          description: ImageType of EpisodeImage.\n          type: string\n        Language:\n          description: Language associated with EpisodeImage.\n          type: string\n        Modified:\n          description: Time when image was modified.\n          format: date-time\n          type: string\n        Modifier:\n          description: ID of last user who modified the item.\n          format: int32\n          type: integer\n        Official:\n          description: Determines if image is official.\n          type: boolean\n        Sexuality:\n          description: 1-5 (Very-Unlikely to Very-Likely) probability of sexual theme in\n            image.\n          format: int32\n          type: integer\n        Tags:\n          description: List of Tags associated with this EpisodeImage\n          items:\n            $ref: \"#/components/schemas/Tag\"\n          type: array\n        Violence:\n          description: 1-5 (Very-Unlikely to Very-Likely) probability of violent theme in\n            image.\n          format: int32\n          type: integer\n        Width:\n          description: Width in pixels of EpisodeImage.\n          format: int32\n          type: integer\n          nullable: false\n      title: EpisodeImage\n      type: object\n    EpisodeRelease:\n      description: EpisodeRelease\n      properties:\n        Certification:\n          description: Certification for EpisodeRelease.\n          type: string\n        Country:\n          description: The Country Episode was released.\n          type: string\n        Date:\n          description: Date of this EpisodeRelease.\n          format: date-time\n          type: string\n        Id:\n          description: Unique Id of this EpisodeRelease.\n          format: int64\n          type: integer\n        Modifier:\n          description: ID of last user who modified the item.\n          format: int32\n          type: integer\n        Type:\n          description: The type of this EpisodeRelease.\n          type: string\n      title: EpisodeRelease\n      type: object\n    EpisodeResponse:\n      description: EpisodeResponse\n      properties:\n        AlternateTitles:\n          description: List of alternate titles for this Episode.\n          items:\n            $ref: \"#/components/schemas/EpisodeAlternateTitle\"\n          type: array\n        Availabilities:\n          description: List of episode offers.\n          items:\n            $ref: \"#/components/schemas/EpisodeAvailabilityResponse\"\n          type: array\n        Contributors:\n          description: List of contributors (Cast, Director, Writer, Production, etc.) for\n            this Episode.\n          items:\n            $ref: \"#/components/schemas/EpisodeContributor\"\n          type: array\n        Created:\n          description: DateTime Episode record created.\n          format: date-time\n          type: string\n          nullable: false\n        Descriptions:\n          description: List of descriptions for this Episode.\n          items:\n            $ref: \"#/components/schemas/EpisodeDescription\"\n          type: array\n        EpisodeNumber:\n          description: Number of Episode within its associated Season.\n          format: int32\n          type: integer\n          nullable: false\n        ExternalIds:\n          description: List of external Ids associated with Episode.\n          items:\n            $ref: \"#/components/schemas/ExternalId\"\n          type: array\n        Id:\n          description: Unique ID of the Episode.\n          format: int64\n          type: integer\n          nullable: false\n        Images:\n          description: List of images associated with Episode.\n          items:\n            $ref: \"#/components/schemas/EpisodeImage\"\n          type: array\n        Modified:\n          description: DateTime Episode record last modified.\n          format: date-time\n          type: string\n          nullable: false\n        Modifier:\n          description: User who last modified the Episode record.\n          format: int32\n          type: integer\n        OriginalLanguage:\n          description: Episode original language.\n          type: string\n        OriginalReleaseDate:\n          description: Original release date of Episode.\n          format: date-time\n          type: string\n        OriginalTitle:\n          description: Original title of Episode\n          type: string\n        OwnerId:\n          description: User who has ownership of the Show record.\n          format: int32\n          type: integer\n        Releases:\n          description: List of releases associated with Episode.\n          items:\n            $ref: \"#/components/schemas/EpisodeRelease\"\n          type: array\n        SeasonId:\n          description: ID of Season this Episode is associated with.\n          format: int64\n          type: integer\n          nullable: false\n        SeasonNumber:\n          description: Number of Season within its associated Show.\n          format: int32\n          type: integer\n          nullable: false\n        ShowId:\n          description: ID of Show this Episode is associated with.\n          format: int64\n          type: integer\n          nullable: false\n        TimeStamp:\n          description: Time of last change to overall object.\n          format: date-time\n          type: string\n        Title:\n          description: English version of any foreign Original Title.\n          type: string\n        VersionId:\n          description: Record Version Id\n          format: int64\n          type: integer\n          nullable: false\n        Videos:\n          description: List of videos associated with Episode.\n          items:\n            $ref: \"#/components/schemas/EpisodeVideo\"\n          type: array\n        Year:\n          description: Release year of Episode.\n          format: int32\n          type: integer\n      title: EpisodeResponse\n      type: object\n    EpisodeVideo:\n      description: EpisodeVideo\n      properties:\n        AllowAdvertising:\n          description: Flag denoting if pre-roll video ads are allowed in front of of\n            content.\n          type: boolean\n          nullable: false\n        Certification:\n          description: Certification for EpisodeVideo.\n          type: boolean\n        Clean:\n          description: True if Certification, Theatrical, and HomeVideo are False.\n          type: boolean\n        Company:\n          description: Company associated with EpisodeVideo.\n          type: string\n        Duration:\n          description: Runtime of EpisodeVideo.\n          format: int32\n          type: integer\n          nullable: false\n        Encoded:\n          description: Datetime EpisodeVideo was encoded.\n          format: date-time\n          type: string\n          nullable: false\n        Encodes:\n          description: List of Encodes (bitrate and type) for EpisodeVideo.\n          items:\n            $ref: \"#/components/schemas/EpisodeVideoEncode\"\n          type: array\n        ExpirationDate:\n          description: Date EpisodeVideo expires.\n          format: date-time\n          type: string\n        HomeVideo:\n          description: Flag for promoting Home Video.\n          type: boolean\n        Id:\n          description: Unique ID of EpisodeVideo.\n          format: int64\n          type: integer\n          nullable: false\n        Language:\n          description: Language associated with EpisodeVideo.\n          type: string\n        LanguageSubtitled:\n          description: Subtitle language associated with EpisodeVideo.\n          type: string\n        Mature:\n          description: Flag for designating video content not suitable for children. Age\n            gate required.\n          type: boolean\n          nullable: false\n        Modifier:\n          description: ID of last user who modified the item.\n          format: int32\n          type: integer\n        ScreenCaptures:\n          description: List of screen captures from EpisodeVideo.\n          items:\n            $ref: \"#/components/schemas/EpisodeVideoScreenCapture\"\n          type: array\n        SourceVideoHeight:\n          description: Height in pixels of EpisodeVideo.\n          format: int32\n          type: integer\n          nullable: false\n        SourceVideoWidth:\n          description: Width in pixels of EpisodeVideo.\n          format: int32\n          type: integer\n          nullable: false\n        StartDate:\n          description: First date of EpisodeVideo availability.\n          format: date-time\n          type: string\n        TargetCountries:\n          description: List of countries targeted by EpisodeVideo.\n          items:\n            $ref: \"#/components/schemas/TargetCountry\"\n          type: array\n        Title:\n          description: Title of EpisodeVideo, not Season.\n          type: string\n        TuneIn:\n          description: Flag for promoting tune in.\n          type: boolean\n        Type:\n          description: VideoType for the EpisodeVideo.\n          type: string\n      title: EpisodeVideo\n      type: object\n    EpisodeVideoEncode:\n      description: EpisodeVideoEncode\n      properties:\n        BitRate:\n          description: BitRate of VideoEncode.\n          format: int32\n          type: integer\n        EncodeType:\n          description: Datetime when the VideoEncode was encoded.\n          type: string\n        Id:\n          description: Unique ID of the video encode\n          format: int64\n          type: integer\n        Modifier:\n          description: ID of last user who modified the item.\n          format: int32\n          type: integer\n      title: EpisodeVideoEncode\n      type: object\n    EpisodeVideoExtended:\n      description: EpisodeVideoExtended\n      properties:\n        AllowAdvertising:\n          description: Flag denoting if pre-roll video ads are allowed in front of of\n            content.\n          type: boolean\n          nullable: false\n        Certification:\n          description: Certification for EpisodeVideo.\n          type: boolean\n        Clean:\n          description: True if Certification, Theatrical, and HomeVideo are False.\n          type: boolean\n        Company:\n          description: Company associated with EpisodeVideo.\n          type: string\n        Duration:\n          description: Runtime of EpisodeVideo.\n          format: int32\n          type: integer\n          nullable: false\n        Encoded:\n          description: Datetime EpisodeVideo was encoded.\n          format: date-time\n          type: string\n          nullable: false\n        Encodes:\n          description: List of Encodes (bitrate and type) for EpisodeVideo.\n          items:\n            $ref: \"#/components/schemas/EpisodeVideoEncode\"\n          type: array\n        EpisodeNumber:\n          format: int32\n          type: integer\n          nullable: false\n        ExpirationDate:\n          description: Date EpisodeVideo expires.\n          format: date-time\n          type: string\n        HomeVideo:\n          description: Flag for promoting Home Video.\n          type: boolean\n        Id:\n          description: Unique ID of EpisodeVideo.\n          format: int64\n          type: integer\n          nullable: false\n        Language:\n          description: Language associated with EpisodeVideo.\n          type: string\n        LanguageSubtitled:\n          description: Subtitle language associated with EpisodeVideo.\n          type: string\n        Mature:\n          description: Flag for designating video content not suitable for children. Age\n            gate required.\n          type: boolean\n          nullable: false\n        Modifier:\n          description: ID of last user who modified the item.\n          format: int32\n          type: integer\n        ScreenCaptures:\n          description: List of screen captures from EpisodeVideo.\n          items:\n            $ref: \"#/components/schemas/EpisodeVideoScreenCapture\"\n          type: array\n        SeasonNumber:\n          format: int32\n          type: integer\n          nullable: false\n        SourceVideoHeight:\n          description: Height in pixels of EpisodeVideo.\n          format: int32\n          type: integer\n          nullable: false\n        SourceVideoWidth:\n          description: Width in pixels of EpisodeVideo.\n          format: int32\n          type: integer\n          nullable: false\n        StartDate:\n          description: First date of EpisodeVideo availability.\n          format: date-time\n          type: string\n        TargetCountries:\n          description: List of countries targeted by EpisodeVideo.\n          items:\n            $ref: \"#/components/schemas/TargetCountry\"\n          type: array\n        Title:\n          description: Title of EpisodeVideo, not Season.\n          type: string\n        TuneIn:\n          description: Flag for promoting tune in.\n          type: boolean\n        Type:\n          description: VideoType for the EpisodeVideo.\n          type: string\n      title: EpisodeVideoExtended\n      type: object\n    EpisodeVideoScreenCapture:\n      description: EpisodeVideoScreenCapture\n      properties:\n        Aspect:\n          description: Aspect ratio of VideoScreenCapture.\n          type: string\n        FilePath:\n          description: Filepath (location) of VideoScreenCapture.\n          type: string\n        Height:\n          description: Height in pixels of VideoScreenCapture.\n          format: int32\n          type: integer\n          nullable: false\n        Id:\n          description: Unique ID of the screen capture\n          format: int64\n          type: integer\n        Modifier:\n          description: ID of last user who modified the item.\n          format: int32\n          type: integer\n        Width:\n          description: Width in pixels of VideoScreenCapture.\n          format: int32\n          type: integer\n          nullable: false\n      title: EpisodeVideoScreenCapture\n      type: object\n    Explanation:\n      description: Explanation\n      properties:\n        level:\n          format: int32\n          type: integer\n          nullable: false\n        message:\n          type: string\n        originator:\n          description: Origination of the explanation.\n          type: string\n        type:\n          description: The granularity of recommendation match.\n          type: string\n      title: Explanation\n      type: object\n    ExternalId:\n      description: ExternalId\n      properties:\n        Id:\n          type: string\n        Name:\n          type: string\n      title: ExternalId\n      type: object\n    FaceDetails:\n      description: FaceDetails\n      properties:\n        AgeRange:\n          $ref: \"#/components/schemas/FaceDetailsAgerange\"\n        Beard:\n          $ref: \"#/components/schemas/FaceDetailsBeard\"\n        BoundingBox:\n          $ref: \"#/components/schemas/FaceDetailsBoundingbox\"\n        BoundingBoxPixel:\n          $ref: \"#/components/schemas/FaceDetailsBoundingboxPixel\"\n        Confidence:\n          description: Confidence value on this face being the correct person.\n          format: float\n          type: number\n          nullable: false\n        Emotions:\n          items:\n            $ref: \"#/components/schemas/FaceDetailsEmotion\"\n          type: array\n        Eyeglasses:\n          $ref: \"#/components/schemas/FaceDetailsEyeglasses\"\n        EyesOpen:\n          $ref: \"#/components/schemas/FaceDetailsEyesopen\"\n        Gender:\n          $ref: \"#/components/schemas/FaceDetailsGender\"\n        Landmarks:\n          description: Details on positions of facial features, expressed as ratios of the\n            image width/height.\n          items:\n            $ref: \"#/components/schemas/FaceDetailsLandmark\"\n          type: array\n        LandmarksPixel:\n          description: Details on positions of facial features, in pixels.\n          items:\n            $ref: \"#/components/schemas/FaceDetailsLandmarkPixel\"\n          type: array\n        MouthOpen:\n          $ref: \"#/components/schemas/FaceDetailsMouthopen\"\n        Mustache:\n          $ref: \"#/components/schemas/FaceDetailsMustache\"\n        Pose:\n          $ref: \"#/components/schemas/FaceDetailsPose\"\n        Quality:\n          $ref: \"#/components/schemas/FaceDetailsQuality\"\n        Smile:\n          $ref: \"#/components/schemas/FaceDetailsSmile\"\n        Sunglasses:\n          $ref: \"#/components/schemas/FaceDetailsSunglasses\"\n      title: FaceDetails\n      type: object\n    FaceDetailsAgerange:\n      description: FaceDetailsAgerange\n      properties:\n        High:\n          description: Upper age estimate.\n          format: int32\n          type: integer\n          nullable: false\n        Low:\n          description: Lower age estimate.\n          format: int32\n          type: integer\n          nullable: false\n      title: FaceDetailsAgerange\n      type: object\n    FaceDetailsBeard:\n      description: FaceDetailsBeard\n      properties:\n        Confidence:\n          description: Confidence rating of Value.\n          format: float\n          type: number\n          nullable: false\n        Value:\n          description: True/False whether person has beard.\n          type: boolean\n          nullable: false\n      title: FaceDetailsBeard\n      type: object\n    FaceDetailsBoundingbox:\n      description: FaceDetailsBoundingbox\n      properties:\n        Height:\n          description: Height of face box.\n          format: float\n          type: number\n          nullable: false\n        Left:\n          description: How far from left of image to start face box.\n          format: float\n          type: number\n          nullable: false\n        Top:\n          description: How far from top of image to start face box.\n          format: float\n          type: number\n          nullable: false\n        Width:\n          description: Width of face box.\n          format: float\n          type: number\n          nullable: false\n      title: FaceDetailsBoundingbox\n      type: object\n    FaceDetailsBoundingboxPixel:\n      description: FaceDetailsBoundingboxPixel\n      properties:\n        Height:\n          description: Height of face box.\n          format: int32\n          type: integer\n          nullable: false\n        Left:\n          description: How far from left of image to start face box.\n          format: int32\n          type: integer\n          nullable: false\n        Top:\n          description: How far from top of image to start face box.\n          format: int32\n          type: integer\n          nullable: false\n        Width:\n          description: Width of face box.\n          format: int32\n          type: integer\n          nullable: false\n      title: FaceDetailsBoundingboxPixel\n      type: object\n    FaceDetailsEmotion:\n      description: FaceDetailsEmotion\n      properties:\n        Confidence:\n          description: Confidence rating of Value.\n          format: float\n          type: number\n          nullable: false\n        Type:\n          description: Type of emotion.\n          type: string\n      title: FaceDetailsEmotion\n      type: object\n    FaceDetailsEyeglasses:\n      description: FaceDetailsEyeglasses\n      properties:\n        Confidence:\n          description: Confidence rating of Value.\n          format: float\n          type: number\n          nullable: false\n        Value:\n          description: True/False whether person has glasses.\n          type: boolean\n          nullable: false\n      title: FaceDetailsEyeglasses\n      type: object\n    FaceDetailsEyesopen:\n      description: FaceDetailsEyesopen\n      properties:\n        Confidence:\n          description: Confidence rating of Value.\n          format: float\n          type: number\n          nullable: false\n        Value:\n          description: True/False whether person has eyes open.\n          type: boolean\n          nullable: false\n      title: FaceDetailsEyesopen\n      type: object\n    FaceDetailsGender:\n      description: FaceDetailsGender\n      properties:\n        Confidence:\n          description: Confidence rating of Value.\n          format: float\n          type: number\n          nullable: false\n        Value:\n          description: Estimated gender.\n          type: string\n      title: FaceDetailsGender\n      type: object\n    FaceDetailsLandmark:\n      description: FaceDetailsLandmark\n      properties:\n        Type:\n          description: Type of facial landmark.\n          type: string\n        X:\n          description: Position from left of image.\n          format: float\n          type: number\n          nullable: false\n        Y:\n          description: Position from top of image.\n          format: float\n          type: number\n          nullable: false\n      title: FaceDetailsLandmark\n      type: object\n    FaceDetailsLandmarkPixel:\n      description: FaceDetailsLandmarkPixel\n      properties:\n        Type:\n          description: Type of facial landmark.\n          type: string\n        X:\n          description: Position from left of image.\n          format: int32\n          type: integer\n          nullable: false\n        Y:\n          description: Position from top of image.\n          format: int32\n          type: integer\n          nullable: false\n      title: FaceDetailsLandmarkPixel\n      type: object\n    FaceDetailsMouthopen:\n      description: FaceDetailsMouthopen\n      properties:\n        Confidence:\n          description: Confidence rating of Value.\n          format: float\n          type: number\n          nullable: false\n        Value:\n          description: True/False whether person has mouth open.\n          type: boolean\n          nullable: false\n      title: FaceDetailsMouthopen\n      type: object\n    FaceDetailsMustache:\n      description: FaceDetailsMustache\n      properties:\n        Confidence:\n          description: Confidence rating of Value.\n          format: float\n          type: number\n          nullable: false\n        Value:\n          description: True/False whether person has mustache.\n          type: boolean\n          nullable: false\n      title: FaceDetailsMustache\n      type: object\n    FaceDetailsPose:\n      description: FaceDetailsPose\n      properties:\n        Pitch:\n          description: Pitch of face.\n          format: float\n          type: number\n          nullable: false\n        Roll:\n          description: Roll of face.\n          format: float\n          type: number\n          nullable: false\n        Yaw:\n          description: Yaw of face.\n          format: float\n          type: number\n          nullable: false\n      title: FaceDetailsPose\n      type: object\n    FaceDetailsQuality:\n      description: FaceDetailsQuality\n      properties:\n        Brightness:\n          description: Brightness of image.\n          format: float\n          type: number\n          nullable: false\n        Sharpness:\n          description: Sharpness of image.\n          format: float\n          type: number\n          nullable: false\n      title: FaceDetailsQuality\n      type: object\n    FaceDetailsSmile:\n      description: FaceDetailsSmile\n      properties:\n        Confidence:\n          description: Confidence rating of Value.\n          format: float\n          type: number\n          nullable: false\n        Value:\n          description: True/False whether person is smiling.\n          type: boolean\n          nullable: false\n      title: FaceDetailsSmile\n      type: object\n    FaceDetailsSunglasses:\n      description: FaceDetailsSunglasses\n      properties:\n        Confidence:\n          description: Confidence rating of Value.\n          format: float\n          type: number\n          nullable: false\n        Value:\n          description: True/False whether person has sunglasses.\n          type: boolean\n          nullable: false\n      title: FaceDetailsSunglasses\n      type: object\n    FandangoAmenity:\n      description: FandangoAmenity\n      properties:\n        description:\n          type: string\n        id:\n          type: string\n        name:\n          type: string\n        shortDescription:\n          type: string\n      title: FandangoAmenity\n      type: object\n    FandangoAmenitygroup:\n      description: FandangoAmenitygroup\n      properties:\n        amenities:\n          items:\n            $ref: \"#/components/schemas/FandangoAmenity\"\n          type: array\n        showtimes:\n          items:\n            $ref: \"#/components/schemas/FandangoShowtime\"\n          type: array\n      title: FandangoAmenitygroup\n      type: object\n    FandangoDatetime:\n      description: FandangoDatetime\n      properties:\n        local:\n          type: string\n        utc:\n          type: string\n      title: FandangoDatetime\n      type: object\n    FandangoDisplayDates:\n      description: FandangoDisplayDates\n      properties:\n        data:\n          $ref: \"#/components/schemas/FandangoDisplayDatesData\"\n      title: FandangoDisplayDates\n      type: object\n    FandangoDisplayDatesData:\n      description: FandangoDisplayDatesData\n      properties:\n        displayDates:\n          items:\n            type: string\n          type: array\n      title: FandangoDisplayDatesData\n      type: object\n    FandangoGeo:\n      description: FandangoGeo\n      properties:\n        latitude:\n          format: double\n          type: number\n          nullable: false\n        longitude:\n          format: double\n          type: number\n          nullable: false\n      title: FandangoGeo\n      type: object\n    FandangoGeoCity:\n      description: FandangoGeoCity\n      properties:\n        city:\n          type: string\n        country:\n          type: string\n        latitude:\n          format: double\n          type: number\n          nullable: false\n        longitude:\n          format: double\n          type: number\n          nullable: false\n        radius:\n          format: int32\n          type: integer\n          nullable: false\n        state:\n          type: string\n      title: FandangoGeoCity\n      type: object\n    FandangoGeoLocationCity:\n      description: FandangoGeoLocationCity\n      properties:\n        data:\n          $ref: \"#/components/schemas/FandangoGeoCity\"\n      title: FandangoGeoLocationCity\n      type: object\n    FandangoGeoLocationPostalCode:\n      description: FandangoGeoLocationPostalCode\n      properties:\n        data:\n          $ref: \"#/components/schemas/FandangoGeoPostalCode\"\n      title: FandangoGeoLocationPostalCode\n      type: object\n    FandangoGeoPostalCode:\n      description: FandangoGeoPostalCode\n      properties:\n        city:\n          type: string\n        country:\n          type: string\n        latitude:\n          format: double\n          type: number\n          nullable: false\n        longitude:\n          format: double\n          type: number\n          nullable: false\n        postalCode:\n          type: string\n        radius:\n          format: int32\n          type: integer\n          nullable: false\n        state:\n          type: string\n      title: FandangoGeoPostalCode\n      type: object\n    FandangoImage:\n      description: FandangoImage\n      properties:\n        caption:\n          type: string\n        copyright:\n          type: string\n        id:\n          type: string\n        imageUrl:\n          type: string\n        title:\n          type: string\n      title: FandangoImage\n      type: object\n    FandangoLink:\n      description: FandangoLink\n      properties:\n        href:\n          type: string\n        rel:\n          type: string\n      title: FandangoLink\n      type: object\n    FandangoMovie:\n      description: FandangoMovie\n      properties:\n        data:\n          $ref: \"#/components/schemas/FandangoMovieItem\"\n      title: FandangoMovie\n      type: object\n    FandangoMovieData:\n      description: FandangoMovieData\n      properties:\n        movies:\n          items:\n            $ref: \"#/components/schemas/FandangoMovieItem\"\n          type: array\n      title: FandangoMovieData\n      type: object\n    FandangoMovieDisplaydate:\n      description: FandangoMovieDisplaydate\n      properties:\n        displayDate:\n          type: string\n        movies:\n          items:\n            $ref: \"#/components/schemas/FandangoMovieItem\"\n          type: array\n      title: FandangoMovieDisplaydate\n      type: object\n    FandangoMovieItem:\n      description: FandangoMovieItem\n      properties:\n        cast:\n          items:\n            $ref: \"#/components/schemas/FandangoPerson\"\n          type: array\n        directors:\n          items:\n            $ref: \"#/components/schemas/FandangoPerson\"\n          type: array\n        genres:\n          items:\n            type: string\n          type: array\n        id:\n          type: string\n        images:\n          items:\n            $ref: \"#/components/schemas/FandangoImage\"\n          type: array\n        mediumSynopsis:\n          type: string\n        movieIds:\n          items:\n            $ref: \"#/components/schemas/FandangoMovieid\"\n          type: array\n        movieVariants:\n          items:\n            $ref: \"#/components/schemas/FandangoMovievariant\"\n          type: array\n        mpaaRating:\n          type: string\n        poster:\n          $ref: \"#/components/schemas/FandangoPoster\"\n        releaseDate:\n          type: string\n        runtime:\n          format: int32\n          type: integer\n          nullable: false\n        synopsis:\n          type: string\n        title:\n          type: string\n      title: FandangoMovieItem\n      type: object\n    FandangoMovieid:\n      description: FandangoMovieid\n      properties:\n        idProvider:\n          type: string\n        value:\n          type: string\n      title: FandangoMovieid\n      type: object\n    FandangoMovieidGroup:\n      description: FandangoMovieidGroup\n      properties:\n        idProvider:\n          type: string\n        value:\n          type: string\n      title: FandangoMovieidGroup\n      type: object\n    FandangoMovies:\n      description: FandangoMovies\n      properties:\n        data:\n          $ref: \"#/components/schemas/FandangoMovieData\"\n        page:\n          $ref: \"#/components/schemas/FandangoPage\"\n      title: FandangoMovies\n      type: object\n    FandangoMovievariant:\n      description: FandangoMovievariant\n      properties:\n        amenityGroups:\n          items:\n            $ref: \"#/components/schemas/FandangoAmenitygroup\"\n          type: array\n        formatId:\n          type: string\n        formatName:\n          type: string\n        movieVariantId:\n          type: string\n      title: FandangoMovievariant\n      type: object\n    FandangoPage:\n      description: FandangoPage\n      properties:\n        limit:\n          format: int32\n          type: integer\n          nullable: false\n        offset:\n          format: int32\n          type: integer\n          nullable: false\n        totalCount:\n          format: int32\n          type: integer\n          nullable: false\n      title: FandangoPage\n      type: object\n    FandangoPerson:\n      description: FandangoPerson\n      properties:\n        IvaPersonId:\n          type: string\n        id:\n          type: string\n        name:\n          type: string\n      title: FandangoPerson\n      type: object\n    FandangoPoster:\n      description: FandangoPoster\n      properties:\n        contentUrl:\n          type: string\n        thumbnailUrl:\n          type: string\n      title: FandangoPoster\n      type: object\n    FandangoShowtime:\n      description: FandangoShowtime\n      properties:\n        dateTime:\n          $ref: \"#/components/schemas/FandangoDatetime\"\n        id:\n          type: string\n        links:\n          items:\n            $ref: \"#/components/schemas/FandangoLink\"\n          type: array\n        message:\n          type: string\n        type:\n          type: string\n      title: FandangoShowtime\n      type: object\n    FandangoShowtimeDetails:\n      description: FandangoShowtimeDetails\n      properties:\n        data:\n          $ref: \"#/components/schemas/FandangoShowtimeDetailsData\"\n      title: FandangoShowtimeDetails\n      type: object\n    FandangoShowtimeDetailsData:\n      description: FandangoShowtimeDetailsData\n      properties:\n        amenities:\n          items:\n            $ref: \"#/components/schemas/FandangoAmenity\"\n          type: array\n        auditoriumId:\n          format: int32\n          type: integer\n          nullable: false\n        dateTime:\n          $ref: \"#/components/schemas/FandangoDatetime\"\n        displayDate:\n          type: string\n        distance:\n          format: int32\n          type: integer\n          nullable: false\n        expired:\n          type: boolean\n          nullable: false\n        formatName:\n          type: string\n        id:\n          type: string\n        isTicketing:\n          type: boolean\n          nullable: false\n        message:\n          type: string\n        movieId:\n          type: string\n        movieTitle:\n          type: string\n        seatingType:\n          type: string\n        theaterChainCode:\n          type: string\n        theaterId:\n          type: string\n        theaterName:\n          type: string\n        type:\n          type: string\n      title: FandangoShowtimeDetailsData\n      type: object\n    FandangoShowtimeGroupings:\n      description: FandangoShowtimeGroupings\n      properties:\n        data:\n          $ref: \"#/components/schemas/FandangoShowtimeGroupingsData\"\n      title: FandangoShowtimeGroupings\n      type: object\n    FandangoShowtimeGroupingsData:\n      description: FandangoShowtimeGroupingsData\n      properties:\n        displayDates:\n          items:\n            $ref: \"#/components/schemas/FandangoTheaterDisplaydate\"\n          type: array\n        movieIds:\n          items:\n            $ref: \"#/components/schemas/FandangoMovieidGroup\"\n          type: array\n      title: FandangoShowtimeGroupingsData\n      type: object\n    FandangoShowtimeItems:\n      description: FandangoShowtimeItems\n      properties:\n        showtimes:\n          items:\n            $ref: \"#/components/schemas/ShowtimeItemDetail\"\n          type: array\n      title: FandangoShowtimeItems\n      type: object\n    FandangoShowtimes:\n      description: FandangoShowtimes\n      properties:\n        data:\n          $ref: \"#/components/schemas/FandangoShowtimeItems\"\n        page:\n          $ref: \"#/components/schemas/FandangoPage\"\n      title: FandangoShowtimes\n      type: object\n    FandangoTheater:\n      description: FandangoTheater\n      properties:\n        address1:\n          type: string\n        amenities:\n          items:\n            $ref: \"#/components/schemas/FandangoAmenity\"\n          type: array\n        chainCode:\n          type: string\n        chainLogoUrl:\n          type: string\n        chainName:\n          type: string\n        city:\n          type: string\n        distance:\n          format: double\n          type: number\n          nullable: false\n        geo:\n          $ref: \"#/components/schemas/FandangoGeo\"\n        hasShowtimes:\n          type: boolean\n          nullable: false\n        id:\n          type: string\n        isTicketing:\n          type: boolean\n          nullable: false\n        link:\n          type: string\n        name:\n          type: string\n        phone:\n          type: string\n        state:\n          type: string\n        theaterIds:\n          items:\n            $ref: \"#/components/schemas/FandangoTheaterid\"\n          type: array\n        zipCode:\n          type: string\n      title: FandangoTheater\n      type: object\n    FandangoTheaterDisplaydate:\n      description: FandangoTheaterDisplaydate\n      properties:\n        displayDate:\n          type: string\n        theaters:\n          items:\n            $ref: \"#/components/schemas/FandangoTheaterGroup\"\n          type: array\n      title: FandangoTheaterDisplaydate\n      type: object\n    FandangoTheaterGroup:\n      description: FandangoTheaterGroup\n      properties:\n        chainCode:\n          type: string\n        distance:\n          format: int32\n          type: integer\n          nullable: false\n        id:\n          type: string\n        isTicketing:\n          type: boolean\n          nullable: false\n        movieVariants:\n          items:\n            $ref: \"#/components/schemas/FandangoMovievariant\"\n          type: array\n        name:\n          type: string\n        theaterIds:\n          items:\n            $ref: \"#/components/schemas/FandangoTheaterid\"\n          type: array\n      title: FandangoTheaterGroup\n      type: object\n    FandangoTheaterItems:\n      description: FandangoTheaterItems\n      properties:\n        theaters:\n          items:\n            $ref: \"#/components/schemas/FandangoTheater\"\n          type: array\n      title: FandangoTheaterItems\n      type: object\n    FandangoTheaterResponse:\n      description: FandangoTheaterResponse\n      properties:\n        data:\n          $ref: \"#/components/schemas/FandangoTheater\"\n      title: FandangoTheaterResponse\n      type: object\n    FandangoTheaterShowtimeGroupings:\n      description: FandangoTheaterShowtimeGroupings\n      properties:\n        data:\n          $ref: \"#/components/schemas/FandangoTheaterShowtimeGroupingsData\"\n      title: FandangoTheaterShowtimeGroupings\n      type: object\n    FandangoTheaterShowtimeGroupingsData:\n      description: FandangoTheaterShowtimeGroupingsData\n      properties:\n        displayDates:\n          items:\n            $ref: \"#/components/schemas/FandangoMovieDisplaydate\"\n          type: array\n        theaterIds:\n          items:\n            $ref: \"#/components/schemas/FandangoTheaterid\"\n          type: array\n      title: FandangoTheaterShowtimeGroupingsData\n      type: object\n    FandangoTheaterid:\n      description: FandangoTheaterid\n      properties:\n        idProvider:\n          type: string\n        value:\n          type: string\n      title: FandangoTheaterid\n      type: object\n    FandangoTheaters:\n      description: FandangoTheaters\n      properties:\n        data:\n          $ref: \"#/components/schemas/FandangoTheaterItems\"\n        page:\n          $ref: \"#/components/schemas/FandangoPage\"\n      title: FandangoTheaters\n      type: object\n    FilmographyResponse:\n      description: FilmographyResponse\n      properties:\n        Episodes:\n          description: List of Episode contributions.\n          items:\n            $ref: \"#/components/schemas/EpisodeContribution\"\n          type: array\n        Movies:\n          description: List of Movie contributions.\n          items:\n            $ref: \"#/components/schemas/Contribution\"\n          type: array\n        Shows:\n          description: List of Show contributions.\n          items:\n            $ref: \"#/components/schemas/Contribution\"\n          type: array\n      title: FilmographyResponse\n      type: object\n    FindMovie:\n      description: FindMovie\n      properties:\n        Id:\n          description: Required third party ID of Movie.\n          type: string\n        IdType:\n          description: Required third party ID type of MovieAlternateId.\n          format: int32\n          type: integer\n        Includes:\n          description: List of additional objects to include in the movie object.\n          enum:\n            - Genres\n            - Releases\n            - Contributors\n            - AlternateTitles\n            - Descriptions\n            - Companies\n            - Tags\n            - Images\n            - Videos\n            - ExternalIds\n            - Availabilities\n          items:\n            type: string\n          type: array\n      required:\n        - IdType\n        - Id\n      title: FindMovie\n      type: object\n    FindShow:\n      description: FindShow\n      properties:\n        Id:\n          description: Required third party ID of Show.\n          type: string\n        IdType:\n          description: Required third party ID type of ShowAlternateId.\n          format: int32\n          type: integer\n        Includes:\n          description: List of additional objects to include in the show response.\n          enum:\n            - Genres\n            - Releases\n            - Contributors\n            - AlternateTitles\n            - Descriptions\n            - Companies\n            - Tags\n            - Images\n            - Videos\n            - Seasons\n            - EpisodeVideos\n            - SeasonVideos\n            - ExternalIds\n            - Availabilities\n          items:\n            type: string\n          type: array\n      required:\n        - IdType\n        - Id\n      title: FindShow\n      type: object\n    FlexDate:\n      description: FlexDate\n      properties:\n        Date:\n          format: date-time\n          type: string\n          nullable: false\n        Estimated:\n          type: boolean\n          nullable: false\n        Type:\n          type: string\n      title: FlexDate\n      type: object\n    GBUsageDay:\n      description: GBUsageDay\n      properties:\n        Date:\n          format: date-time\n          type: string\n          nullable: false\n        FlashPlayerRequests:\n          format: int32\n          type: integer\n          nullable: false\n        GB:\n          format: int64\n          type: integer\n          nullable: false\n        ImageServiceGB:\n          format: int64\n          type: integer\n          nullable: false\n        ImageServiceRequests:\n          format: int32\n          type: integer\n          nullable: false\n      title: GBUsageDay\n      type: object\n    GBUsageResponse:\n      description: GBUsageResponse\n      properties:\n        Detail:\n          items:\n            $ref: \"#/components/schemas/GBUsageDay\"\n          type: array\n        MonthEncodeMinutes:\n          type: string\n        MonthlyStorageInMinutes:\n          type: string\n        TotalGB:\n          format: int64\n          type: integer\n          nullable: false\n      title: GBUsageResponse\n      type: object\n    Game:\n      description: Game\n      properties:\n        AlternateTitles:\n          description: List of alternate titles for this Game.\n          items:\n            $ref: \"#/components/schemas/GameAlternateTitle\"\n          type: array\n        Companies:\n          description: List of companies (Production, Distribution, etc.) associated with\n            Game.\n          items:\n            $ref: \"#/components/schemas/Company\"\n          type: array\n        Created:\n          description: DateTime Game record created.\n          format: date-time\n          type: string\n          nullable: false\n        Descriptions:\n          description: List of descriptions for this Game.\n          items:\n            $ref: \"#/components/schemas/GameDescription\"\n          type: array\n        ExternalIds:\n          description: List of external Ids associated with Game.\n          items:\n            $ref: \"#/components/schemas/ExternalId\"\n          type: array\n        Genres:\n          description: List of genres associated with Game.\n          items:\n            $ref: \"#/components/schemas/GameGenre\"\n          type: array\n        Id:\n          description: Unique ID of the Game.\n          format: int64\n          type: integer\n          nullable: false\n        Modified:\n          description: DateTime Game record last modified.\n          format: date-time\n          type: string\n          nullable: false\n        OfficialSiteUrl:\n          description: Game website home page.\n          type: string\n        OriginalLanguage:\n          description: ID of Game original language.\n          type: string\n        OriginalReleaseDate:\n          description: First generally available release regardless of country. Excludes\n            festivals and premieres.\n          format: date-time\n          type: string\n        OriginalTitle:\n          type: string\n        Platforms:\n          description: List of platforms associated with Game.\n          items:\n            $ref: \"#/components/schemas/GamePlatform\"\n          type: array\n        Ratings:\n          description: List of ratings associated with Game.\n          items:\n            $ref: \"#/components/schemas/GameRating\"\n          type: array\n        Releases:\n          description: List of releases associated with Game.\n          items:\n            $ref: \"#/components/schemas/GameRelease\"\n          type: array\n        Tags:\n          description: List of tags associated with Game.\n          items:\n            $ref: \"#/components/schemas/GameTag\"\n          type: array\n        Title:\n          description: English version of any foreign Original Title.\n          type: string\n        VersionId:\n          description: Record Version Id\n          format: int64\n          type: integer\n          nullable: false\n        Videos:\n          description: List of videos associated with Game.\n          items:\n            $ref: \"#/components/schemas/GameVideo\"\n          type: array\n        Year:\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - OriginalTitle\n        - Year\n      title: Game\n      type: object\n    GameAlternateTitle:\n      description: GameAlternateTitle\n      properties:\n        Id:\n          description: Unique ID of this GameAlternateTitle\n          format: int64\n          type: integer\n        Title:\n          description: The alternate title.\n          type: string\n      title: GameAlternateTitle\n      type: object\n    GameChangeHistoryResponse:\n      description: GameChangeHistoryResponse\n      properties:\n        GameId:\n          description: Unique ID of a Game.\n          format: int64\n          type: integer\n          nullable: false\n      title: GameChangeHistoryResponse\n      type: object\n    GameDescription:\n      description: GameDescription\n      properties:\n        Attribution:\n          description: Source of GameDescription.\n          type: string\n        Description:\n          description: Game Description.\n          type: string\n        Id:\n          description: Unique ID of this GameDescription\n          format: int64\n          type: integer\n        Language:\n          description: Language object for language of GameDescription.\n          type: string\n      title: GameDescription\n      type: object\n    GameGenre:\n      description: GameGenre\n      properties:\n        Id:\n          description: Id of the Genre object.\n          format: int32\n          type: integer\n        Name:\n          description: Name of the Genre.\n          type: string\n      title: GameGenre\n      type: object\n    GamePlatform:\n      description: GamePlatform\n      properties:\n        Id:\n          description: Id of the Platform object.\n          format: int32\n          type: integer\n        Name:\n          description: Name of the Platform.\n          type: string\n      title: GamePlatform\n      type: object\n    GameRankedResponse:\n      description: GameRankedResponse\n      properties:\n        Id:\n          format: int64\n          type: integer\n          nullable: false\n        Title:\n          type: string\n        Year:\n          format: int32\n          type: integer\n          nullable: false\n      title: GameRankedResponse\n      type: object\n    GameRating:\n      description: GameRating\n      properties:\n        Id:\n          description: Id of the Rating object.\n          format: int32\n          type: integer\n        Name:\n          description: Name of the Rating.\n          type: string\n      title: GameRating\n      type: object\n    GameRelease:\n      description: GameRelease\n      properties:\n        Country:\n          description: The Country Game was released.\n          type: string\n        Date:\n          description: Date of this GameRelease.\n          format: date-time\n          type: string\n        Id:\n          description: Unique Id of this GameRelease.\n          format: int64\n          type: integer\n        Type:\n          description: The type of this GameRelease.\n          type: string\n      title: GameRelease\n      type: object\n    GameResponse:\n      description: GameResponse\n      properties:\n        AlternateTitles:\n          description: List of alternate titles for this Game.\n          items:\n            $ref: \"#/components/schemas/GameAlternateTitle\"\n          type: array\n        Companies:\n          description: List of companies (Production, Distribution, etc.) associated with\n            Game.\n          items:\n            $ref: \"#/components/schemas/Company\"\n          type: array\n        Created:\n          description: DateTime Game record created.\n          format: date-time\n          type: string\n          nullable: false\n        Descriptions:\n          description: List of descriptions for this Game.\n          items:\n            $ref: \"#/components/schemas/GameDescription\"\n          type: array\n        ExternalIds:\n          description: List of external Ids associated with Game.\n          items:\n            $ref: \"#/components/schemas/ExternalId\"\n          type: array\n        Genres:\n          description: List of genres associated with Game.\n          items:\n            $ref: \"#/components/schemas/GameGenre\"\n          type: array\n        Id:\n          description: Unique ID of the Game.\n          format: int64\n          type: integer\n          nullable: false\n        Modified:\n          description: DateTime Game record last modified.\n          format: date-time\n          type: string\n          nullable: false\n        OfficialSiteUrl:\n          description: Game website home page.\n          type: string\n        OriginalLanguage:\n          description: ID of Game original language.\n          type: string\n        OriginalReleaseDate:\n          description: First generally available release regardless of country. Excludes\n            festivals and premieres.\n          format: date-time\n          type: string\n        OriginalTitle:\n          type: string\n        Platforms:\n          description: List of platforms associated with Game.\n          items:\n            $ref: \"#/components/schemas/GamePlatform\"\n          type: array\n        Ratings:\n          description: List of ratings associated with Game.\n          items:\n            $ref: \"#/components/schemas/GameRating\"\n          type: array\n        Releases:\n          description: List of releases associated with Game.\n          items:\n            $ref: \"#/components/schemas/GameRelease\"\n          type: array\n        Tags:\n          description: List of tags associated with Game.\n          items:\n            $ref: \"#/components/schemas/GameTag\"\n          type: array\n        Title:\n          description: English version of any foreign Original Title.\n          type: string\n        VersionId:\n          description: Record Version Id\n          format: int64\n          type: integer\n          nullable: false\n        Videos:\n          description: List of videos associated with Game.\n          items:\n            $ref: \"#/components/schemas/GameVideo\"\n          type: array\n        Year:\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - OriginalTitle\n        - Year\n      title: GameResponse\n      type: object\n    GameTag:\n      description: GameTag\n      properties:\n        Id:\n          description: ID of the object.\n          format: int64\n          type: integer\n        Name:\n          description: Name of the Tag.\n          type: string\n        TagId:\n          description: ID of the Tag.\n          format: int64\n          type: integer\n          nullable: false\n      title: GameTag\n      type: object\n    GameVideo:\n      description: GameVideo\n      properties:\n        AllowAdvertising:\n          description: Flag denoting if pre-roll video ads are allowed in front of of\n            content.\n          type: boolean\n          nullable: false\n        Certification:\n          description: Certification for GameVideo.\n          type: boolean\n        Clean:\n          description: True if Certification, Theatrical, and HomeVideo are False.\n          type: boolean\n        Company:\n          description: Company associated with GameVideo.\n          type: string\n        Duration:\n          description: Runtime of GameVideo.\n          format: int32\n          type: integer\n          nullable: false\n        Encoded:\n          description: Datetime GameVideo was encoded.\n          format: date-time\n          type: string\n          nullable: false\n        Encodes:\n          description: List of Encodes (bitrate and type) for GameVideo.\n          items:\n            $ref: \"#/components/schemas/GameVideoEncode\"\n          type: array\n        ExpirationDate:\n          description: Date GameVideo expires.\n          format: date-time\n          type: string\n        HomeVideo:\n          description: Flag for promoting Home Video.\n          type: boolean\n        Id:\n          description: Unique ID of GameVideo.\n          format: int64\n          type: integer\n          nullable: false\n        Language:\n          description: Language associated with GameVideo.\n          type: string\n        LanguageSubtitled:\n          description: Subtitle language associated with GameVideo.\n          type: string\n        Mature:\n          description: Flag for designating video content not suitable for children. Age\n            gate required.\n          type: boolean\n          nullable: false\n        ScreenCaptures:\n          description: List of screen captures from GameVideo.\n          items:\n            $ref: \"#/components/schemas/GameVideoScreenCapture\"\n          type: array\n        SourceVideoHeight:\n          description: Height in pixels of GameVideo.\n          format: int32\n          type: integer\n          nullable: false\n        SourceVideoWidth:\n          description: Width in pixels of GameVideo.\n          format: int32\n          type: integer\n          nullable: false\n        StartDate:\n          description: First date of GameVideo availability.\n          format: date-time\n          type: string\n        TargetCountries:\n          description: List of countries targeted by GameVideo.\n          items:\n            $ref: \"#/components/schemas/TargetCountry\"\n          type: array\n        Theatrical:\n          description: Flag for promoting Theatrical release.\n          type: boolean\n        Title:\n          description: Title of GameVideo, not Game.\n          type: string\n        Type:\n          description: VideoType for the GameVideo.\n          type: string\n      title: GameVideo\n      type: object\n    GameVideoEncode:\n      description: GameVideoEncode\n      properties:\n        BitRate:\n          description: BitRate of GameVideoEncode.\n          format: int32\n          type: integer\n        EncodeType:\n          description: Datetime when the GameVideoEncode was encoded.\n          type: string\n        Id:\n          description: Unique ID of the video encode\n          format: int64\n          type: integer\n      title: GameVideoEncode\n      type: object\n    GameVideoScreenCapture:\n      description: GameVideoScreenCapture\n      properties:\n        Aspect:\n          description: Aspect ratio of GameVideoScreenCapture.\n          type: string\n        FilePath:\n          description: Filepath (location) of GameVideoScreenCapture.\n          type: string\n        Height:\n          description: Height in pixels of GameVideoScreenCapture.\n          format: int32\n          type: integer\n          nullable: false\n        Id:\n          description: Unique ID of the screen capture\n          format: int64\n          type: integer\n        Width:\n          description: Width in pixels of GameVideoScreenCapture.\n          format: int32\n          type: integer\n          nullable: false\n      title: GameVideoScreenCapture\n      type: object\n    GetAllGames:\n      description: GetAllGames\n      properties:\n        Includes:\n          description: List of additional objects to include in the game object.\n          enum:\n            - Genres\n            - Releases\n            - AlternateTitles\n            - Descriptions\n            - Companies\n            - Tags\n            - Videos\n            - ExternalIds\n          items:\n            type: string\n          type: array\n        Skip:\n          description: Skips records using for paging results.\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Limits the total items returned. Maximum of 100 per request.\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Take\n      title: GetAllGames\n      type: object\n    GetAllMovies:\n      description: GetAllMovies\n      properties:\n        Includes:\n          description: List of additional objects to include in the movie objectSearch\n            movie by OriginalTitle.\n          enum:\n            - Genres\n            - Releases\n            - Contributors\n            - AlternateTitles\n            - Descriptions\n            - Companies\n            - Tags\n            - Images\n            - Videos\n            - ExternalIds\n            - Availabilities\n          items:\n            type: string\n          type: array\n        Skip:\n          description: Skips records using for paging results.\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Limits the total items returned. Maximum of 100 per request.\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Take\n      title: GetAllMovies\n      type: object\n    GetAllMyPrograms:\n      description: GetAllMyPrograms\n      properties:\n        Skip:\n          description: Skips records using for paging results.\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Limits the total items returned. Maximum of 100 per request.\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Take\n      title: GetAllMyPrograms\n      type: object\n    GetAllMyVideos:\n      description: GetAllMyVideos\n      properties:\n        Skip:\n          description: Skips records using for paging results.\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Limits the total items returned. Maximum of 100 per request.\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Take\n      title: GetAllMyVideos\n      type: object\n    GetAllPeople:\n      description: GetAllPeople\n      properties:\n        Includes:\n          description: List of additional objects to include in the person response.\n          enum:\n            - ExternalIds\n            - AlternateNames\n            - Images\n            - Descriptions\n            - Tags\n          items:\n            type: string\n          type: array\n        Skip:\n          description: Skips records using for paging results.\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Limits the total items returned. Maximum of 100 per request.\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Take\n      title: GetAllPeople\n      type: object\n    GetAllShows:\n      description: GetAllShows\n      properties:\n        Includes:\n          description: List of additional objects to include in the show object.\n          enum:\n            - Genres\n            - Releases\n            - Contributors\n            - AlternateTitles\n            - Descriptions\n            - Companies\n            - Tags\n            - Images\n            - Videos\n            - Seasons\n            - EpisodeVideos\n            - SeasonVideos\n            - ExternalIds\n            - Availabilities\n          items:\n            type: string\n          type: array\n        Skip:\n          description: Skips records using for paging results.\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Limits the total items returned. Maximum of 10 per request.\n          format: int32\n          type: integer\n          nullable: false\n      title: GetAllShows\n      type: object\n    GetAnalyticsCountry:\n      description: GetAnalyticsCountry\n      properties:\n        DateValue:\n          description: Days spanned by report\n          enum:\n            - today\n            - yesterday\n            - two_days_ago\n            - last_7_days\n            - last_14_days\n            - last_28_days\n            - last_60_days\n            - last_90_days\n            - last_365_days\n          type: string\n        End:\n          description: Report end date\n          format: date-time\n          type: string\n          nullable: false\n        Limit:\n          description: Number of records returned from top of response.\n          format: int32\n          type: integer\n          nullable: false\n        ReportTag:\n          description: Report Tag filter.\n          type: string\n        Start:\n          description: Report start date\n          format: date-time\n          type: string\n          nullable: false\n      title: GetAnalyticsCountry\n      type: object\n    GetCelebrityRanked:\n      description: GetCelebrityRanked\n      properties:\n        StartsWith:\n          type: string\n      title: GetCelebrityRanked\n      type: object\n    GetChartMoviesBoxoffice:\n      description: GetChartMoviesBoxoffice\n      properties:\n        Skip:\n          description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Determines the page size.  (Maximum of 100)\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Skip\n        - Take\n      title: GetChartMoviesBoxoffice\n      type: object\n    GetChartMoviesMostAnticipated:\n      description: GetChartMoviesMostAnticipated\n      properties:\n        Skip:\n          description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Determines the page size.  (Maximum of 100)\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Skip\n        - Take\n      title: GetChartMoviesMostAnticipated\n      type: object\n    GetChartMoviesPopular:\n      description: GetChartMoviesPopular\n      properties:\n        Skip:\n          description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Determines the page size.  (Maximum of 100)\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Skip\n        - Take\n      title: GetChartMoviesPopular\n      type: object\n    GetChartPeoplePopular:\n      description: GetChartPeoplePopular\n      properties:\n        Skip:\n          description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Determines the page size.  (Maximum of 100)\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Skip\n        - Take\n      title: GetChartPeoplePopular\n      type: object\n    GetChartShowsPopular:\n      description: GetChartShowsPopular\n      properties:\n        Skip:\n          description: Skips records using for paging results.\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Limits the total items returned. Maximum of 100 per request.\n          format: int32\n          type: integer\n          nullable: false\n      title: GetChartShowsPopular\n      type: object\n    GetCity:\n      description: GetCity\n      properties:\n        DateValue:\n          description: Days spanned by report\n          enum:\n            - today\n            - yesterday\n            - two_days_ago\n            - last_7_days\n            - last_14_days\n            - last_28_days\n            - last_60_days\n            - last_90_days\n            - last_365_days\n          type: string\n        End:\n          description: Report end date\n          format: date-time\n          type: string\n          nullable: false\n        Limit:\n          description: Number of records returned from top of response\n          format: int32\n          type: integer\n          nullable: false\n        ReportTag:\n          description: Report Tag filter.\n          type: string\n        Start:\n          description: Report start date\n          format: date-time\n          type: string\n          nullable: false\n      title: GetCity\n      type: object\n    GetCommonEnumerators:\n      description: GetCommonEnumerators\n      properties: {}\n      title: GetCommonEnumerators\n      type: object\n    GetCompanies:\n      description: GetCompanies\n      properties:\n        Skip:\n          description: Offset for paging. Default is 0.\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Maximum number of rows returned. Default is 1,000.\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Skip\n        - Take\n      title: GetCompanies\n      type: object\n    GetCountries:\n      description: GetCountries\n      properties: {}\n      title: GetCountries\n      type: object\n    GetDataDemoFilters:\n      description: GetDataDemoFilters\n      properties: {}\n      title: GetDataDemoFilters\n      type: object\n    GetDbShowCertifications:\n      description: GetDbShowCertifications\n      properties: {}\n      title: GetDbShowCertifications\n      type: object\n    GetDbShowReleaseTypes:\n      description: GetDbShowReleaseTypes\n      properties: {}\n      title: GetDbShowReleaseTypes\n      type: object\n    GetEngagementActions:\n      description: GetEngagementActions\n      properties:\n        DateValue:\n          description: Days spanned by report\n          enum:\n            - today\n            - yesterday\n            - two_days_ago\n            - last_7_days\n            - last_14_days\n            - last_28_days\n            - last_60_days\n            - last_90_days\n            - last_365_days\n          type: string\n        End:\n          description: Report end date\n          format: date-time\n          type: string\n          nullable: false\n        Limit:\n          description: Number of records returned from top of response\n          format: int32\n          type: integer\n          nullable: false\n        ReportTag:\n          description: Report Tag filter.\n          type: string\n        Start:\n          description: Report start date\n          format: date-time\n          type: string\n          nullable: false\n      title: GetEngagementActions\n      type: object\n    GetEngagementTimes:\n      description: GetEngagementTimes\n      properties:\n        DateValue:\n          description: Days spanned by report\n          enum:\n            - today\n            - yesterday\n            - two_days_ago\n            - last_7_days\n            - last_14_days\n            - last_28_days\n            - last_60_days\n            - last_90_days\n            - last_365_days\n          type: string\n        End:\n          description: Report end date\n          format: date-time\n          type: string\n          nullable: false\n        Limit:\n          description: Number of records returned from top of response\n          format: int32\n          type: integer\n          nullable: false\n        ReportTag:\n          description: Report Tag filter.\n          type: string\n        Start:\n          description: Report start date\n          format: date-time\n          type: string\n          nullable: false\n      title: GetEngagementTimes\n      type: object\n    GetEpisode:\n      description: GetEpisode\n      properties:\n        Id:\n          description: Required ID of an Episode.\n          format: int64\n          type: integer\n          nullable: false\n        Includes:\n          description: List of additional objects to include in the episode response.\n          enum:\n            - Releases\n            - Contributors\n            - AlternateTitles\n            - Descriptions\n            - Images\n            - Videos\n            - ExternalIds\n            - Availabilities\n          items:\n            type: string\n          type: array\n      required:\n        - Id\n      title: GetEpisode\n      type: object\n    GetEpisodeByEpisodeNumber:\n      description: GetEpisodeByEpisodeNumber\n      properties:\n        EpisodeNumber:\n          description: Required EpisodeNumber.\n          format: int32\n          type: integer\n          nullable: false\n        Id:\n          description: Required Id of the Show.\n          format: int64\n          type: integer\n          nullable: false\n        Includes:\n          description: List of additional objects to include in the episode response.\n          enum:\n            - Releases\n            - Contributors\n            - AlternateTitles\n            - Descriptions\n            - Images\n            - Videos\n            - ExternalIds\n            - Availabilities\n          items:\n            type: string\n          type: array\n        SeasonNumber:\n          description: Required SeasonNumber.\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Id\n        - SeasonNumber\n        - EpisodeNumber\n      title: GetEpisodeByEpisodeNumber\n      type: object\n    GetEpisodeByNumber:\n      description: GetEpisodeByNumber\n      properties:\n        EpisodeNumber:\n          description: Required EpisodeNumber.\n          format: int32\n          type: integer\n          nullable: false\n        Id:\n          description: Required Id of the Show.\n          format: int64\n          type: integer\n          nullable: false\n        SeasonNumber:\n          description: Required SeasonNumber.\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Id\n        - SeasonNumber\n        - EpisodeNumber\n      title: GetEpisodeByNumber\n      type: object\n    GetEpisodeChangeHistory:\n      description: GetEpisodeChangeHistory\n      properties:\n        Date:\n          description: \"Starting date \u003c= when record has changed (Maximum of 30 days back).\n            ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z\"\n          format: date-time\n          type: string\n          nullable: false\n        Skip:\n          description: Offset for paging. Default is 0.\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Maximum number of rows returned. Default is 1,000.\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Date\n        - Skip\n        - Take\n      title: GetEpisodeChangeHistory\n      type: object\n    GetEpisodeChangeHistoryWithEntity:\n      description: GetEpisodeChangeHistoryWithEntity\n      properties:\n        Date:\n          description: \"Starting date \u003c= when record has changed (Maximum of 30 days back).\n            ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z\"\n          format: date-time\n          type: string\n          nullable: false\n        Skip:\n          description: Offset for paging. Default is 0.\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Maximum number of rows returned. Default is 1,000.\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Date\n        - Skip\n        - Take\n      title: GetEpisodeChangeHistoryWithEntity\n      type: object\n    GetFandangoGeoLocationCity:\n      description: GetFandangoGeoLocationCity\n      properties:\n        City:\n          description: Name of city.\n          type: string\n        Country:\n          description: 2-Letter country code.\n          type: string\n        State:\n          description: State code or name.\n          type: string\n      required:\n        - Country\n        - State\n        - City\n      title: GetFandangoGeoLocationCity\n      type: object\n    GetFandangoGeoLocationPostalCode:\n      description: GetFandangoGeoLocationPostalCode\n      properties:\n        Country:\n          description: 2-Letter country code.\n          type: string\n        Postalcode:\n          description: Postal code.\n          type: string\n      required:\n        - Country\n        - Postalcode\n      title: GetFandangoGeoLocationPostalCode\n      type: object\n    GetFandangoMovie:\n      description: GetFandangoMovie\n      properties:\n        IdProvider:\n          description: The provider for the movie ID.\n          enum:\n            - fandangoApi\n            - fandango\n            - IVA\n          type: string\n        MovieId:\n          description: The ID of the movie.\n          type: string\n      required:\n        - MovieId\n        - IdProvider\n      title: GetFandangoMovie\n      type: object\n    GetFandangoMovieDisplayDates:\n      description: GetFandangoMovieDisplayDates\n      properties:\n        EndDateTime:\n          description: End datetime (ISO-8601) for the display date range. Defaults to no\n            end datetime.\n          format: date-time\n          type: string\n        ExcludeTheaterIds:\n          description: Comma delimited list of theaters to exclude.\n          items:\n            type: string\n          type: array\n        IdProvider:\n          description: The provider for the movie ID.\n          enum:\n            - fandangoApi\n            - fandango\n            - IVA\n          type: string\n        Latitude:\n          description: Latitude of the user's location.\n          format: double\n          type: number\n        Longitude:\n          description: Longitude of the user's location.\n          format: double\n          type: number\n        MovieId:\n          description: The ID of the movie.\n          type: string\n        Radius:\n          description: Search radius in miles around the user's location.\n          format: int32\n          type: integer\n        StartDateTime:\n          description: Start datetime (ISO-8601) for the display date range. Defaults to\n            UTC now.\n          format: date-time\n          type: string\n        TheaterChainCodes:\n          description: Comma delimited list of theater chains to filter.\n          items:\n            type: string\n          type: array\n        ZipCode:\n          description: Zip code of the user's location.\n          type: string\n      required:\n        - MovieId\n        - IdProvider\n      title: GetFandangoMovieDisplayDates\n      type: object\n    GetFandangoMovieShowtimeGroupings:\n      description: GetFandangoMovieShowtimeGroupings\n      properties:\n        EndDisplayDate:\n          description: End display date. Defaults to start display date.\n          format: date-time\n          type: string\n        IdProvider:\n          description: The provider for the movie ID.\n          enum:\n            - fandangoApi\n            - fandango\n            - IVA\n          type: string\n        Latitude:\n          description: Latitude of the user's location.\n          format: double\n          type: number\n        Longitude:\n          description: Longitude of the user's location.\n          format: double\n          type: number\n        MovieId:\n          description: The ID of the movie.\n          type: string\n        Radius:\n          description: Search radius in miles around the user's location.\n          format: int32\n          type: integer\n        StartDisplayDate:\n          description: Start date for the display date range. Defaults to UTC now.\n          format: date-time\n          type: string\n          nullable: false\n        ZipCode:\n          description: Zip code of the user's location.\n          type: string\n      required:\n        - MovieId\n        - IdProvider\n      title: GetFandangoMovieShowtimeGroupings\n      type: object\n    GetFandangoMovies:\n      description: GetFandangoMovies\n      properties:\n        Latitude:\n          description: Latitude of the user's location.\n          format: double\n          type: number\n        Limit:\n          description: Number of items to return. Used in pagination.\n          format: int32\n          type: integer\n        Longitude:\n          description: Longitude of the user's location.\n          format: double\n          type: number\n        Offset:\n          description: Offset index of the first item to return. Used in pagination..\n          format: int32\n          type: integer\n          nullable: false\n        Radius:\n          description: Search radius in miles around the user's location.\n          format: int32\n          type: integer\n        Type:\n          description: Specify InTheaters or ComingSoon.\n          enum:\n            - InTheaters\n            - ComingSoon\n          type: string\n        ZipCode:\n          description: Zip code of the user's location.\n          type: string\n      required:\n        - Type\n      title: GetFandangoMovies\n      type: object\n    GetFandangoShowtime:\n      description: GetFandangoShowtime\n      properties:\n        IdProvider:\n          description: The provider for the showtime ID.\n          enum:\n            - fandangoApi\n            - fandango\n          type: string\n        ShowtimeId:\n          description: Showtime ID for request.\n          type: string\n      required:\n        - ShowtimeId\n        - IdProvider\n      title: GetFandangoShowtime\n      type: object\n    GetFandangoShowtimes:\n      description: GetFandangoShowtimes\n      properties:\n        AmenityIdProvider:\n          description: The provider for the amenity ID.\n          enum:\n            - fandangoApi\n            - fandango\n          type: string\n        AmenityIds:\n          description: Filter showtimes by amenity list (comma delimited). Only entries\n            with amenities exactly matching this list are returned.\n          items:\n            type: string\n          type: array\n        EndDateTime:\n          description: End datetime (ISO-8601) for the display date range. Defaults to no\n            end datetime.\n          format: date-time\n          type: string\n        EndDisplayDate:\n          description: End display date. Defaults to start display date.\n          format: date-time\n          type: string\n        Latitude:\n          description: Latitude of the user's location.\n          format: double\n          type: number\n        Limit:\n          description: Number of items to return. Used in pagination.\n          format: int32\n          type: integer\n        Longitude:\n          description: Longitude of the user's location.\n          format: double\n          type: number\n        MovieId:\n          description: Filter showtimes by movie ID.\n          type: string\n        MovieIdProvider:\n          description: The provider for the movie ID.\n          enum:\n            - fandangoApi\n            - fandango\n            - IVA\n          type: string\n        MovieTitle:\n          description: Filter showtimes by movie title.\n          type: string\n        Offset:\n          description: Offset index of the first item to return. Used in pagination.\n          format: int32\n          type: integer\n          nullable: false\n        Radius:\n          description: Search radius in miles around the user's location.\n          format: int32\n          type: integer\n        StartDateTime:\n          description: Start datetime (ISO-8601) for the display date range. Defaults to\n            UTC now.\n          format: date-time\n          type: string\n        StartDisplayDate:\n          description: Start date for the display date range. Defaults to UTC now.\n          format: date-time\n          type: string\n          nullable: false\n        TheaterId:\n          description: The ID of the theater (required if latitude/longitude or zipCode not\n            provided).\n          type: string\n        TheaterIdProvider:\n          description: The provider for the theater ID.\n          enum:\n            - fandangoApi\n            - tms\n          type: string\n        TheaterName:\n          description: Filter showtimes by theater name.\n          type: string\n        ZipCode:\n          description: Zip code of the user's location.\n          type: string\n      title: GetFandangoShowtimes\n      type: object\n    GetFandangoTheater:\n      description: GetFandangoTheater\n      properties:\n        IdProvider:\n          description: The provider for the theater ID.\n          enum:\n            - fandangoApi\n            - tms\n          type: string\n        TheaterId:\n          description: Id of theater.\n          type: string\n      required:\n        - TheaterId\n        - IdProvider\n      title: GetFandangoTheater\n      type: object\n    GetFandangoTheaterDisplayDates:\n      description: GetFandangoTheaterDisplayDates\n      properties:\n        EndDateTime:\n          description: End datetime (ISO-8601) for the display date range. Defaults to no\n            end datetime.\n          format: date-time\n          type: string\n        IdProvider:\n          description: The provider for the theater ID.\n          enum:\n            - fandangoApi\n            - tms\n          type: string\n        StartDateTime:\n          description: Start datetime (ISO-8601) for the display date range. Defaults to\n            UTC now.\n          format: date-time\n          type: string\n        TheaterId:\n          description: Id of theater.\n          type: string\n      required:\n        - TheaterId\n        - IdProvider\n      title: GetFandangoTheaterDisplayDates\n      type: object\n    GetFandangoTheaterShowtimeGroupings:\n      description: GetFandangoTheaterShowtimeGroupings\n      properties:\n        EndDisplayDate:\n          description: End display date. Defaults to start display date.\n          format: date-time\n          type: string\n        IdProvider:\n          description: The provider for the theater ID.\n          enum:\n            - fandangoApi\n            - tms\n          type: string\n        StartDisplayDate:\n          description: Start date for the display date range. Defaults to UTC now.\n          format: date-time\n          type: string\n          nullable: false\n        TheaterId:\n          description: Offset index of the first item to return. Used in pagination.\n          type: string\n      required:\n        - TheaterId\n        - IdProvider\n      title: GetFandangoTheaterShowtimeGroupings\n      type: object\n    GetFandangoTheaters:\n      description: GetFandangoTheaters\n      properties:\n        Latitude:\n          description: Latitude of the user's location.\n          format: double\n          type: number\n        Limit:\n          description: Number of items to return. Used in pagination.\n          format: int32\n          type: integer\n        Longitude:\n          description: Longitude of the user's location.\n          format: double\n          type: number\n        Offset:\n          description: Offset index of the first item to return. Used in pagination.\n          format: int32\n          type: integer\n          nullable: false\n        Radius:\n          description: Search radius in miles around the user's location.\n          format: int32\n          type: integer\n        ZipCode:\n          description: Zip code of the user's location.\n          type: string\n      title: GetFandangoTheaters\n      type: object\n    GetFilmography:\n      description: GetFilmography\n      properties:\n        Id:\n          format: int64\n          type: integer\n          nullable: false\n      title: GetFilmography\n      type: object\n    GetGBUsage:\n      description: GetGBUsage\n      properties:\n        Month:\n          description: Report month\n          enum:\n            - January\n            - February\n            - March\n            - April\n            - May\n            - June\n            - July\n            - August\n            - September\n            - October\n            - November\n            - December\n          type: string\n        ReportTag:\n          description: Report Tag filter.\n          type: string\n        Year:\n          description: Report year\n          format: int32\n          type: integer\n          nullable: false\n      title: GetGBUsage\n      type: object\n    GetGame:\n      description: GetGame\n      properties:\n        Id:\n          description: Required ID of Game.\n          format: int64\n          type: integer\n          nullable: false\n        Includes:\n          description: List of additional objects to include in the game response.\n          enum:\n            - Genres\n            - Releases\n            - AlternateTitles\n            - Descriptions\n            - Companies\n            - Tags\n            - Videos\n            - ExternalIds\n          items:\n            type: string\n          type: array\n      required:\n        - Id\n      title: GetGame\n      type: object\n    GetGameChangeHistory:\n      description: GetGameChangeHistory\n      properties:\n        Date:\n          description: \"Starting date \u003c= when record has changed (Maximum of 30 days back).\n            ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z\"\n          format: date-time\n          type: string\n          nullable: false\n        Skip:\n          description: Offset for paging. Default is 0.\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Maximum number of rows returned. Default is 1,000.\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Date\n        - Skip\n        - Take\n      title: GetGameChangeHistory\n      type: object\n    GetGameRanked:\n      description: GetGameRanked\n      properties:\n        StartsWith:\n          type: string\n      title: GetGameRanked\n      type: object\n    GetGoWatchItEpisodeAvailabilities:\n      description: GetGoWatchItEpisodeAvailabilities\n      properties:\n        ApiKey:\n          description: Required GoWatchIt API key.\n          type: string\n        Id:\n          description: Required ID of Entertainment Episode.\n          format: int64\n          type: integer\n          nullable: false\n      required:\n        - Id\n        - ApiKey\n      title: GetGoWatchItEpisodeAvailabilities\n      type: object\n    GetGoWatchItMovieAvailabilities:\n      description: GetGoWatchItMovieAvailabilities\n      properties:\n        ApiKey:\n          description: Required GoWatchIt API key.\n          type: string\n        Id:\n          description: Required ID of Entertainment Movie.\n          format: int64\n          type: integer\n          nullable: false\n      required:\n        - Id\n        - ApiKey\n      title: GetGoWatchItMovieAvailabilities\n      type: object\n    GetGoWatchItSeasonAvailabilities:\n      description: GetGoWatchItSeasonAvailabilities\n      properties:\n        ApiKey:\n          description: Required GoWatchIt API key.\n          type: string\n        Id:\n          description: Required ID of Entertainment Season.\n          format: int64\n          type: integer\n          nullable: false\n      required:\n        - Id\n        - ApiKey\n      title: GetGoWatchItSeasonAvailabilities\n      type: object\n    GetGoWatchItShowAvailabilities:\n      description: GetGoWatchItShowAvailabilities\n      properties:\n        ApiKey:\n          description: Required GoWatchIt API key.\n          type: string\n        Id:\n          description: Required ID of Entertainment Show.\n          format: int64\n          type: integer\n          nullable: false\n      required:\n        - Id\n        - ApiKey\n      title: GetGoWatchItShowAvailabilities\n      type: object\n    GetGracenoteMovieIds:\n      description: GetGracenoteMovieIds\n      properties:\n        Skip:\n          description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Determines the page size.  (Maximum of 1000)\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Skip\n        - Take\n      title: GetGracenoteMovieIds\n      type: object\n    GetGracenoteShowIds:\n      description: GetGracenoteShowIds\n      properties:\n        Skip:\n          description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Determines the page size.  (Maximum of 1000)\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Skip\n        - Take\n      title: GetGracenoteShowIds\n      type: object\n    GetImageBatch:\n      description: GetImageBatch\n      properties:\n        FilePath:\n          description: List of Filepaths.\n          items:\n            type: string\n          type: array\n      title: GetImageBatch\n      type: object\n    GetImageRedirect:\n      description: GetImageRedirect\n      properties:\n        ExpirationMinutes:\n          description: Image url expiration in minutes. Default = 60\n          type: string\n        FilePath:\n          description: Filepath of Image.\n          type: string\n        Redirect:\n          description: Redirect to the image. Default = true\n          type: boolean\n          nullable: false\n      required:\n        - FilePath\n      title: GetImageRedirect\n      type: object\n    GetImageTypes:\n      description: GetImageTypes\n      properties: {}\n      title: GetImageTypes\n      type: object\n    GetImdbMovieIds:\n      description: GetImdbMovieIds\n      properties:\n        Skip:\n          description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Determines the page size.  (Maximum of 1000)\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Skip\n        - Take\n      title: GetImdbMovieIds\n      type: object\n    GetImdbShowIds:\n      description: GetImdbShowIds\n      properties:\n        Skip:\n          description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Determines the page size.  (Maximum of 1000)\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Skip\n        - Take\n      title: GetImdbShowIds\n      type: object\n    GetLanguages:\n      description: GetLanguages\n      properties: {}\n      title: GetLanguages\n      type: object\n    GetMetacriticMovie:\n      description: GetMetacriticMovie\n      properties:\n        Id:\n          description: Required ID of Entertainment Movie.\n          format: int64\n          type: integer\n          nullable: false\n      required:\n        - Id\n      title: GetMetacriticMovie\n      type: object\n    GetMetacriticTv:\n      description: GetMetacriticTv\n      properties:\n        Id:\n          description: Required ID of Entertainment Show.\n          format: int64\n          type: integer\n          nullable: false\n        SeasonNumber:\n          description: Number of season.\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Id\n      title: GetMetacriticTv\n      type: object\n    GetMostActive:\n      description: GetMostActive\n      properties:\n        DateValue:\n          description: Days spanned by report\n          enum:\n            - today\n            - yesterday\n            - two_days_ago\n            - last_7_days\n            - last_14_days\n            - last_28_days\n            - last_60_days\n            - last_90_days\n            - last_365_days\n          type: string\n        Limit:\n          description: Number of records returned from top of response\n          format: int32\n          type: integer\n          nullable: false\n        ReportTag:\n          description: Report Tag filter.\n          type: string\n      title: GetMostActive\n      type: object\n    GetMovie:\n      description: GetMovie\n      properties:\n        Id:\n          description: Required ID of Movie.\n          format: int64\n          type: integer\n          nullable: false\n        Includes:\n          description: List of additional objects to include in the movie response.\n          enum:\n            - Genres\n            - Releases\n            - Contributors\n            - AlternateTitles\n            - Descriptions\n            - Companies\n            - Tags\n            - Images\n            - Videos\n            - ExternalIds\n            - Availabilities\n          items:\n            type: string\n          type: array\n      required:\n        - Id\n      title: GetMovie\n      type: object\n    GetMovieAlternateIdTypes:\n      description: GetMovieAlternateIdTypes\n      properties: {}\n      title: GetMovieAlternateIdTypes\n      type: object\n    GetMovieCertifications:\n      description: GetMovieCertifications\n      properties: {}\n      title: GetMovieCertifications\n      type: object\n    GetMovieChangeHistory:\n      description: GetMovieChangeHistory\n      properties:\n        Date:\n          description: \"Starting date \u003c= when record has changed (Maximum of 30 days back).\n            ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z\"\n          format: date-time\n          type: string\n          nullable: false\n        Skip:\n          description: Offset for paging. Default is 0.\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Maximum number of rows returned. Default is 1,000.\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Date\n        - Skip\n        - Take\n      title: GetMovieChangeHistory\n      type: object\n    GetMovieChangeHistoryWithEntity:\n      description: GetMovieChangeHistoryWithEntity\n      properties:\n        Date:\n          description: \"Starting date \u003c= when record has changed (Maximum of 30 days back).\n            ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z\"\n          format: date-time\n          type: string\n          nullable: false\n        Skip:\n          description: Offset for paging. Default is 0.\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Maximum number of rows returned. Default is 1,000.\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Date\n        - Skip\n        - Take\n      title: GetMovieChangeHistoryWithEntity\n      type: object\n    GetMovieGenres:\n      description: GetMovieGenres\n      properties: {}\n      title: GetMovieGenres\n      type: object\n    GetMovieReleaseTypes:\n      description: GetMovieReleaseTypes\n      properties: {}\n      title: GetMovieReleaseTypes\n      type: object\n    GetMoviesComingSoon:\n      description: GetMoviesComingSoon\n      properties:\n        Includes:\n          description: List of additional objects to include in the movie response.\n          enum:\n            - Genres\n            - Releases\n            - Contributors\n            - AlternateTitles\n            - Descriptions\n            - Companies\n            - Tags\n            - Images\n            - Videos\n            - ExternalIds\n            - Availabilities\n          items:\n            type: string\n          type: array\n        Skip:\n          description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Determines the page size.  (Maximum of 10)\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Skip\n        - Take\n      title: GetMoviesComingSoon\n      type: object\n    GetMoviesInTheaters:\n      description: GetMoviesInTheaters\n      properties:\n        Includes:\n          description: List of additional objects to include in the movie response.\n          enum:\n            - Genres\n            - Releases\n            - Contributors\n            - AlternateTitles\n            - Descriptions\n            - Companies\n            - Tags\n            - Images\n            - Videos\n            - ExternalIds\n            - Availabilities\n          items:\n            type: string\n          type: array\n        Skip:\n          description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Determines the page size.  (Maximum of 10)\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Skip\n        - Take\n      title: GetMoviesInTheaters\n      type: object\n    GetMyProgram:\n      description: GetMyProgram\n      properties:\n        Id:\n          description: Required ID of program.\n          format: int64\n          type: integer\n          nullable: false\n      required:\n        - Id\n      title: GetMyProgram\n      type: object\n    GetMyVideo:\n      description: GetMyVideo\n      properties:\n        Id:\n          description: Required ID of video.\n          format: int64\n          type: integer\n          nullable: false\n      required:\n        - Id\n      title: GetMyVideo\n      type: object\n    GetOriginatingNetworks:\n      description: GetOriginatingNetworks\n      properties: {}\n      title: GetOriginatingNetworks\n      type: object\n    GetPerson:\n      description: GetPerson\n      properties:\n        Id:\n          description: Required ID of Person.\n          format: int64\n          type: integer\n          nullable: false\n        Includes:\n          description: List of additional objects to include in the person response.\n          enum:\n            - ExternalIds\n            - AlternateNames\n            - Images\n            - Descriptions\n            - Tags\n          items:\n            type: string\n          type: array\n      required:\n        - Id\n      title: GetPerson\n      type: object\n    GetPersonChangeHistory:\n      description: GetPersonChangeHistory\n      properties:\n        Date:\n          description: \"Starting date \u003c= when record has changed (Maximum of 30 days back).\n            ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z\"\n          format: date-time\n          type: string\n          nullable: false\n        Skip:\n          description: Offset for paging. Default is 0.\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Maximum number of rows returned. Default is 1,000.\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Date\n        - Skip\n        - Take\n      title: GetPersonChangeHistory\n      type: object\n    GetPersonChangeHistoryWithEntity:\n      description: GetPersonChangeHistoryWithEntity\n      properties:\n        Date:\n          description: \"Starting date \u003c= when record has changed (Maximum of 30 days back).\n            ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z\"\n          format: date-time\n          type: string\n          nullable: false\n        Skip:\n          description: Offset for paging. Default is 0.\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Maximum number of rows returned. Default is 1,000.\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Date\n        - Skip\n        - Take\n      title: GetPersonChangeHistoryWithEntity\n      type: object\n    GetPersonRanked:\n      description: GetPersonRanked\n      properties:\n        StartsWith:\n          type: string\n      title: GetPersonRanked\n      type: object\n    GetPlatformHardware:\n      description: GetPlatformHardware\n      properties:\n        DateValue:\n          description: Days spanned by report\n          enum:\n            - today\n            - yesterday\n            - two_days_ago\n            - last_7_days\n            - last_14_days\n            - last_28_days\n            - last_60_days\n            - last_90_days\n            - last_365_days\n          type: string\n        End:\n          description: Report end date\n          format: date-time\n          type: string\n          nullable: false\n        Limit:\n          description: Number of records returned from top of response\n          format: int32\n          type: integer\n          nullable: false\n        ReportTag:\n          description: Report Tag filter.\n          type: string\n        Start:\n          description: Report start date\n          format: date-time\n          type: string\n          nullable: false\n      title: GetPlatformHardware\n      type: object\n    GetPlatformOS:\n      description: GetPlatformOS\n      properties:\n        DateValue:\n          description: Days spanned by report\n          enum:\n            - today\n            - yesterday\n            - two_days_ago\n            - last_7_days\n            - last_14_days\n            - last_28_days\n            - last_60_days\n            - last_90_days\n            - last_365_days\n          type: string\n        End:\n          description: Report end date\n          format: date-time\n          type: string\n          nullable: false\n        Limit:\n          description: Number of records returned from top of response\n          format: int32\n          type: integer\n          nullable: false\n        ReportTag:\n          description: Report Tag filter.\n          type: string\n        Start:\n          description: Report start date\n          format: date-time\n          type: string\n          nullable: false\n      title: GetPlatformOS\n      type: object\n    GetRecentVisitors:\n      description: GetRecentVisitors\n      properties:\n        Limit:\n          description: Number of records returned from top of response\n          format: int32\n          type: integer\n          nullable: false\n        ReportTag:\n          description: Report Tag filter.\n          type: string\n      title: GetRecentVisitors\n      type: object\n    GetRevCaptionAttachmentContent:\n      description: GetRevCaptionAttachmentContent\n      properties:\n        Id:\n          description: Caption Order Id.\n          format: int64\n          type: integer\n          nullable: false\n        Type:\n          description: Type of caption content.\n          enum:\n            - WebVTT\n            - Ttml\n            - SubRip\n            - Scc\n            - Mcc\n            - QtText\n            - Transcript\n            - Dfxp\n            - CheetaCap\n            - Stl\n            - AvidDs\n            - FacebookSubRip\n            - Unknown\n          type: string\n      required:\n        - Id\n        - Type\n      title: GetRevCaptionAttachmentContent\n      type: object\n    GetRevCaptions:\n      description: GetRevCaptions\n      properties:\n        Skip:\n          description: Skips records using for paging results.\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Limits the total items returned. Maximum of 100 per request.\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Take\n      title: GetRevCaptions\n      type: object\n    GetRoviMovieIds:\n      description: GetRoviMovieIds\n      properties:\n        Skip:\n          description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Determines the page size.  (Maximum of 1000)\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Skip\n        - Take\n      title: GetRoviMovieIds\n      type: object\n    GetRoviShowIds:\n      description: GetRoviShowIds\n      properties:\n        Skip:\n          description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Determines the page size.  (Maximum of 1000)\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Skip\n        - Take\n      title: GetRoviShowIds\n      type: object\n    GetSDK:\n      description: GetSDK\n      properties:\n        Client:\n          description: Client SDK\n          enum:\n            - akka_scala\n            - android\n            - async_scala\n            - bash\n            - clojure\n            - cpprest\n            - csharp\n            - CsharpDotNet2\n            - cwiki\n            - dart\n            - dynamic_html\n            - elixir\n            - flash\n            - go\n            - groovy\n            - html\n            - html2\n            - java\n            - javascript\n            - javascript_closure_angular\n            - jaxrs_cxf_client\n            - jmeter\n            - objc\n            - perl\n            - php\n            - python\n            - qt5cpp\n            - ruby\n            - scala\n            - swagger\n            - swagger_yaml\n            - swift\n            - swift3\n            - tizen\n            - typescript_angular\n            - typescript_angular2\n            - typescript_fetch\n            - typescript_node\n          type: string\n        RedirectToFile:\n          description: Redirect to download the zipped SDK.\n          type: boolean\n          nullable: false\n      required:\n        - Client\n        - RedirectToFile\n      title: GetSDK\n      type: object\n    GetScreenCaptureBatch:\n      description: GetScreenCaptureBatch\n      properties:\n        FilePath:\n          description: List of Filepaths.\n          items:\n            type: string\n          type: array\n      title: GetScreenCaptureBatch\n      type: object\n    GetScreenCaptureRedirect:\n      description: GetScreenCaptureRedirect\n      properties:\n        ExpirationMinutes:\n          description: Image url expiration in minutes. Default = 60\n          type: string\n        FilePath:\n          description: Filepath of Image.\n          type: string\n        Redirect:\n          description: Redirect to the image. Default = true\n          type: boolean\n          nullable: false\n      required:\n        - FilePath\n      title: GetScreenCaptureRedirect\n      type: object\n    GetSeason:\n      description: GetSeason\n      properties:\n        Id:\n          description: Id of a Season.\n          format: int64\n          type: integer\n          nullable: false\n        Includes:\n          description: List of additional objects to include in the season response.\n          enum:\n            - Releases\n            - Contributors\n            - AlternateTitles\n            - Descriptions\n            - Episodes\n            - Images\n            - Videos\n            - ExternalIds\n            - Availabilities\n          items:\n            type: string\n          type: array\n      required:\n        - Id\n      title: GetSeason\n      type: object\n    GetSeasonByNumber:\n      description: GetSeasonByNumber\n      properties:\n        Id:\n          description: Id of a Show.\n          format: int64\n          type: integer\n          nullable: false\n        SeasonNumber:\n          description: Number of a Season belonging to a Show.\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Id\n        - SeasonNumber\n      title: GetSeasonByNumber\n      type: object\n    GetSeasonBySeasonNumber:\n      description: GetSeasonBySeasonNumber\n      properties:\n        Id:\n          description: Id of a Show.\n          format: int64\n          type: integer\n          nullable: false\n        Includes:\n          description: List of additional objects to include in the season response.\n          enum:\n            - Releases\n            - Contributors\n            - AlternateTitles\n            - Descriptions\n            - Episodes\n            - Images\n            - Videos\n            - ExternalIds\n            - Availabilities\n          items:\n            type: string\n          type: array\n        SeasonNumber:\n          description: Number of a Season belonging to a Show.\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Id\n        - SeasonNumber\n      title: GetSeasonBySeasonNumber\n      type: object\n    GetSeasonChangeHistory:\n      description: GetSeasonChangeHistory\n      properties:\n        Date:\n          description: \"Starting date \u003c= when record has changed (Maximum of 30 days back).\n            ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z\"\n          format: date-time\n          type: string\n          nullable: false\n        Skip:\n          description: Offset for paging. Default is 0.\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Maximum number of rows returned. Default is 1,000.\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Date\n        - Skip\n        - Take\n      title: GetSeasonChangeHistory\n      type: object\n    GetSeasonChangeHistoryWithEntity:\n      description: GetSeasonChangeHistoryWithEntity\n      properties:\n        Date:\n          description: \"Starting date \u003c= when record has changed (Maximum of 30 days back).\n            ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z\"\n          format: date-time\n          type: string\n          nullable: false\n        Skip:\n          description: Offset for paging. Default is 0.\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Maximum number of rows returned. Default is 1,000.\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Date\n        - Skip\n        - Take\n      title: GetSeasonChangeHistoryWithEntity\n      type: object\n    GetShow:\n      description: GetShow\n      properties:\n        Id:\n          description: Required ID of Show.\n          format: int64\n          type: integer\n          nullable: false\n        Includes:\n          description: List of additional objects to include in the show response.\n          enum:\n            - Genres\n            - Releases\n            - Contributors\n            - AlternateTitles\n            - Descriptions\n            - Companies\n            - Tags\n            - Images\n            - Videos\n            - Seasons\n            - EpisodeVideos\n            - SeasonVideos\n            - ExternalIds\n            - Availabilities\n          items:\n            type: string\n          type: array\n      required:\n        - Id\n      title: GetShow\n      type: object\n    GetShowAlternateIdTypes:\n      description: GetShowAlternateIdTypes\n      properties: {}\n      title: GetShowAlternateIdTypes\n      type: object\n    GetShowChangeHistory:\n      description: GetShowChangeHistory\n      properties:\n        Date:\n          description: \"Starting date \u003c= when record has changed (Maximum of 30 days back).\n            ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z\"\n          format: date-time\n          type: string\n          nullable: false\n        Skip:\n          description: Offset for paging. Default is 0.\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Maximum number of rows returned. Default is 1,000.\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Date\n        - Skip\n        - Take\n      title: GetShowChangeHistory\n      type: object\n    GetShowChangeHistoryWithEntity:\n      description: GetShowChangeHistoryWithEntity\n      properties:\n        Date:\n          description: \"Starting date \u003c= when record has changed (Maximum of 30 days back).\n            ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z\"\n          format: date-time\n          type: string\n          nullable: false\n        Skip:\n          description: Offset for paging. Default is 0.\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Maximum number of rows returned. Default is 1,000.\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Date\n        - Skip\n        - Take\n      title: GetShowChangeHistoryWithEntity\n      type: object\n    GetShowGenres:\n      description: GetShowGenres\n      properties: {}\n      title: GetShowGenres\n      type: object\n    GetSummary:\n      description: GetSummary\n      properties:\n        DateValue:\n          description: Days spanned by report\n          enum:\n            - today\n            - yesterday\n            - two_days_ago\n            - last_7_days\n            - last_14_days\n            - last_28_days\n            - last_60_days\n            - last_90_days\n            - last_365_days\n          type: string\n        ReportTag:\n          description: Report Tag filter.\n          type: string\n      title: GetSummary\n      type: object\n    GetTags:\n      description: GetTags\n      properties:\n        Skip:\n          description: Offset for paging. Default is 0.\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Maximum number of rows returned. Default is 1,000.\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Skip\n        - Take\n      title: GetTags\n      type: object\n    GetTestDateTime:\n      description: GetTestDateTime\n      properties:\n        DateTime:\n          description: DateTime to test format from API.\n          format: date-time\n          type: string\n          nullable: false\n      required:\n        - DateTime\n      title: GetTestDateTime\n      type: object\n    GetTheatricalMovies:\n      description: GetTheatricalMovies\n      properties:\n        Includes:\n          description: List of additional objects to include in the movie response.\n          enum:\n            - Genres\n            - Releases\n            - Contributors\n            - AlternateTitles\n            - Descriptions\n            - Companies\n            - Tags\n            - Images\n            - Videos\n          items:\n            type: string\n          type: array\n        Skip:\n          description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Determines the page size.  (Maximum of 10)\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Skip\n        - Take\n      title: GetTheatricalMovies\n      type: object\n    GetTitleReport:\n      description: GetTitleReport\n      properties:\n        End:\n          description: Report end date\n          format: date-time\n          type: string\n          nullable: false\n        PublishedId:\n          description: Title published ID.\n          type: string\n        Start:\n          description: Report start date\n          format: date-time\n          type: string\n          nullable: false\n      required:\n        - PublishedId\n      title: GetTitleReport\n      type: object\n    GetTmdbMovieIds:\n      description: GetTmdbMovieIds\n      properties:\n        Skip:\n          description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Determines the page size.  (Maximum of 1000)\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Skip\n        - Take\n      title: GetTmdbMovieIds\n      type: object\n    GetTmdbShowIds:\n      description: GetTmdbShowIds\n      properties:\n        Skip:\n          description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Determines the page size.  (Maximum of 1000)\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Skip\n        - Take\n      title: GetTmdbShowIds\n      type: object\n    GetTrendSources:\n      description: GetTrendSources\n      properties: {}\n      title: GetTrendSources\n      type: object\n    GetTvMediaCountries:\n      description: GetTvMediaCountries\n      properties:\n        TvMediaApiKey:\n          description: API Key supplied by TvMedia.ca\n          type: string\n      required:\n        - TvMediaApiKey\n      title: GetTvMediaCountries\n      type: object\n    GetTvMediaGenericLineups:\n      description: GetTvMediaGenericLineups\n      properties:\n        Detail:\n          description: Set level of detail for response. values are 'full' or 'brief',\n            defaults to 'brief'. 'full' will include all properties, 'brief'\n            will exclude optional properties.\n          enum:\n            - full\n            - brief\n          type: string\n        TvMediaApiKey:\n          description: API Key supplied by TvMedia.ca\n          type: string\n      required:\n        - TvMediaApiKey\n      title: GetTvMediaGenericLineups\n      type: object\n    GetTvMediaLeagueListings:\n      description: GetTvMediaLeagueListings\n      properties:\n        AdultContent:\n          description: Defaults to 1 (allowed). Set to 0 to hide adult content.\n          type: boolean\n          nullable: false\n        Channel:\n          description: \"Include only channel(s) with this number, single or array values\n            accepted. sub channel numbers can be hyphenated to the end of the\n            string: e.g. 1-2 for sub channel 2 of channel 1 (use the\n            channel.number property , NOT channel.channelNumber property).\"\n          items:\n            type: string\n          type: array\n        DescriptiveVideoOnly:\n          description: Only displays listings which are flagged as being broadcast with\n            Descriptive Video. No value necessary.\n          type: boolean\n        Detail:\n          description: Set level of detail for response. values are 'full' or 'brief',\n            defaults to 'full'. 'full' will include all properties, 'brief' will\n            exclude optional properties.\n          enum:\n            - full\n            - brief\n          type: string\n        DisplayArtwork:\n          description: Displays the Artwork information. Set to 1 to include, 1 is default.\n            0 to hide (will improve performance).\n          type: boolean\n          nullable: false\n        End:\n          description: UTC end time in ISO8601. Defaults to 'start' time +4 hours.\n          format: date-time\n          type: string\n        EndChan:\n          description: \"Highest channel. sub channel numbers can be hyphenated to the end\n            of the string: e.g. 1-2 for sub channel 2 of channel 1. In general\n            this parameter should rarely be used, for shaping the grid size see\n            the 'maxchan' parameter.\"\n          items:\n            type: string\n          type: array\n        ExcludeChan:\n          description: \"Exclude channels by number, single or array values accepted. sub\n            channel numbers can be hyphenated to the end of the string: e.g. 1-2\n            for sub channel 2 of channel 1 (use the channel.number property, NOT\n            the channel.channelNumber property).\"\n          items:\n            type: string\n          type: array\n        ExcludeShowType:\n          description: Exclude only these show type ID(s), array or single values accepted.\n            Must be URL encoded. For a list of possible show type's and their\n            ID's see /genres/shows, or the showTypeID property of a listing\n            object.\n          items:\n            type: string\n          type: array\n        ExcludeStation:\n          description: Filter out station IDs; array or single value accepted. Station ID's\n            can be found in listings, or by using the /lineups API.\n          items:\n            format: int32\n            type: integer\n            nullable: false\n          type: array\n        Id:\n          description: ListingID, array or single values accepted. to return a single\n            listing it should be used in combination with a stationID (station\n            parameter).\n          items:\n            type: string\n          type: array\n        League:\n          description: Get only sports listings in the given league ID(s). Array or single\n            values accepted. For a list of possible values see /leagues.\n          items:\n            type: string\n          type: array\n        LeagueID:\n          description: League ID. See /leagues for a list of all available sports leagues.\n          type: string\n        LineupID:\n          description: Lineup ID. Lineups can be found through the /TvMedia/lineups method.\n          type: string\n        LiveOnly:\n          description: Only displays live listings. No value necessary.\n          type: boolean\n        NewShowsOnly:\n          description: Get new shows only. No value necessary.\n          type: boolean\n        NotYetStarted:\n          description: Only displays listings which are starting on or after the given\n            start time. No value necessary.\n          type: boolean\n        Search:\n          description: \"search value: can be a show, episode, movie, team, league, person,\n            etc. Results will be sorted by relevance rather than time.\"\n          type: string\n        ShowType:\n          description: Include only these show type ID(s), array or single values accepted.\n            Must be URL encoded. For a list of possible show type's and their\n            ID's see /genres/shows, or the showTypeID property of a listing\n            object.\n          items:\n            type: string\n          type: array\n        SportEventsOnly:\n          description: Get sporting events only. No value necessary.\n          type: boolean\n        SportType:\n          description: Get only sports listings of type sportTypeID. Array or single values\n            accepted. For a list of possible values see /genres/sports.\n          items:\n            type: string\n          type: array\n        Start:\n          description: UTC start time in ISO8601. Defaults to current date and time.\n          format: date-time\n          type: string\n        StartChan:\n          description: \"Lowest channel. sub channel numbers can be hyphenated to the end of\n            the string: e.g. 1-2 for sub channel 2 of channel 1.\"\n          items:\n            type: string\n          type: array\n        Station:\n          description: Filter by station ID. Array or single value accepted. Station ID's\n            can be found in listings, or by using the /lineups API.\n          items:\n            format: int32\n            type: integer\n            nullable: false\n          type: array\n        Team:\n          description: \"Filter by teams playing by name(teams.longName). Array or single\n            values accepted, for a list of possible values see /leagues/teams.\n            (NOTE: league parameter is required when using this parameter).\"\n          items:\n            type: string\n          type: array\n        TimeZone:\n          description: \"Set a timezone or time offset for listing times (listDateTime\n            property). Defaults to UTC, accepts time offsets (+/-HH:MM) or named\n            time zones (see IANA Time Zone Database). If an invalid value is\n            set, listDateTime will be returned as empty. NOTE: this parameter\n            does not affect input values; start and end times must still be\n            provided in UTC.\"\n          format: int32\n          type: integer\n        TvMediaApiKey:\n          description: API Key supplied by TvMedia.ca\n          type: string\n      required:\n        - TvMediaApiKey\n        - LeagueID\n        - LineupID\n      title: GetTvMediaLeagueListings\n      type: object\n    GetTvMediaLeagues:\n      description: GetTvMediaLeagues\n      properties:\n        TvMediaApiKey:\n          description: API Key supplied by TvMedia.ca\n          type: string\n      required:\n        - TvMediaApiKey\n      title: GetTvMediaLeagues\n      type: object\n    GetTvMediaLineupByID:\n      description: GetTvMediaLineupByID\n      properties:\n        Detail:\n          description: Set level of detail for response. values are 'full' or 'brief',\n            defaults to 'full'. 'full' will include all properties, 'brief' will\n            exclude optional properties.\n          enum:\n            - full\n            - brief\n          type: string\n        LineupID:\n          description: Lineup ID.\n          type: string\n        TvMediaApiKey:\n          description: API Key supplied by TvMedia.ca\n          type: string\n      required:\n        - TvMediaApiKey\n        - LineupID\n      title: GetTvMediaLineupByID\n      type: object\n    GetTvMediaLineupListings:\n      description: GetTvMediaLineupListings\n      properties:\n        AdultContent:\n          description: Defaults to 1 (allowed). Set to 0 to hide adult content.\n          type: boolean\n          nullable: false\n        Channel:\n          description: \"Include only channel(s) with this number, single or array values\n            accepted. sub channel numbers can be hyphenated to the end of the\n            string: e.g. 1-2 for sub channel 2 of channel 1 (use the\n            channel.number property , NOT channel.channelNumber property).\"\n          items:\n            type: string\n          type: array\n        DescriptiveVideoOnly:\n          description: Only displays listings which are flagged as being broadcast with\n            Descriptive Video. No value necessary.\n          type: boolean\n        Detail:\n          description: Set level of detail for response. values are 'full' or 'brief',\n            defaults to 'full'. 'full' will include all properties, 'brief' will\n            exclude optional properties.\n          enum:\n            - full\n            - brief\n          type: string\n        DisplayArtwork:\n          description: Displays the Artwork information. Set to 1 to include, 1 is default.\n            0 to hide (will improve performance).\n          type: boolean\n          nullable: false\n        End:\n          description: UTC end time in ISO8601. Defaults to 'start' time +4 hours.\n          format: date-time\n          type: string\n        EndChan:\n          description: \"Highest channel. sub channel numbers can be hyphenated to the end\n            of the string: e.g. 1-2 for sub channel 2 of channel 1. In general\n            this parameter should rarely be used, for shaping the grid size see\n            the 'maxchan' parameter.\"\n          items:\n            type: string\n          type: array\n        ExcludeChan:\n          description: \"Exclude channels by number, single or array values accepted. sub\n            channel numbers can be hyphenated to the end of the string: e.g. 1-2\n            for sub channel 2 of channel 1 (use the channel.number property, NOT\n            the channel.channelNumber property).\"\n          items:\n            type: string\n          type: array\n        ExcludeShowType:\n          description: Exclude only these show type ID(s), array or single values accepted.\n            Must be URL encoded. For a list of possible show type's and their\n            ID's see /genres/shows, or the showTypeID property of a listing\n            object.\n          items:\n            type: string\n          type: array\n        ExcludeStation:\n          description: Filter out station IDs; array or single value accepted. Station ID's\n            can be found in listings, or by using the /lineups API.\n          items:\n            format: int32\n            type: integer\n            nullable: false\n          type: array\n        Id:\n          description: ListingID, array or single values accepted. to return a single\n            listing it should be used in combination with a stationID (station\n            parameter).\n          items:\n            type: string\n          type: array\n        League:\n          description: Get only sports listings in the given league ID(s). Array or single\n            values accepted. For a list of possible values see /leagues.\n          items:\n            type: string\n          type: array\n        LineupID:\n          description: Lineup ID.\n          type: string\n        LiveOnly:\n          description: Only displays live listings. No value necessary.\n          type: boolean\n        NewShowsOnly:\n          description: Get new shows only. No value necessary.\n          type: boolean\n        NotYetStarted:\n          description: Only displays listings which are starting on or after the given\n            start time. No value necessary.\n          type: boolean\n        Search:\n          description: \"search value: can be a show, episode, movie, team, league, person,\n            etc. Results will be sorted by relevance rather than time.\"\n          type: string\n        ShowType:\n          description: Include only these show type ID(s), array or single values accepted.\n            Must be URL encoded. For a list of possible show type's and their\n            ID's see /genres/shows, or the showTypeID property of a listing\n            object.\n          items:\n            type: string\n          type: array\n        SportEventsOnly:\n          description: Get sporting events only. No value necessary.\n          type: boolean\n        SportType:\n          description: Get only sports listings of type sportTypeID. Array or single values\n            accepted. For a list of possible values see /genres/sports.\n          items:\n            type: string\n          type: array\n        Start:\n          description: UTC start time in ISO8601. Defaults to current date and time.\n          format: date-time\n          type: string\n        StartChan:\n          description: \"Lowest channel. sub channel numbers can be hyphenated to the end of\n            the string: e.g. 1-2 for sub channel 2 of channel 1.\"\n          items:\n            type: string\n          type: array\n        Station:\n          description: Filter by station ID. Array or single value accepted. Station ID's\n            can be found in listings, or by using the /lineups API.\n          items:\n            format: int32\n            type: integer\n            nullable: false\n          type: array\n        Team:\n          description: \"Filter by teams playing by name(teams.longName). Array or single\n            values accepted, for a list of possible values see /leagues/teams.\n            (NOTE: league parameter is required when using this parameter).\"\n          items:\n            type: string\n          type: array\n        TimeZone:\n          description: \"Set a timezone or time offset for listing times (listDateTime\n            property). Defaults to UTC, accepts time offsets (+/-HH:MM) or named\n            time zones (see IANA Time Zone Database). If an invalid value is\n            set, listDateTime will be returned as empty. NOTE: this parameter\n            does not affect input values; start and end times must still be\n            provided in UTC.\"\n          format: int32\n          type: integer\n        TvMediaApiKey:\n          description: API Key supplied by TvMedia.ca\n          type: string\n      required:\n        - TvMediaApiKey\n        - LineupID\n      title: GetTvMediaLineupListings\n      type: object\n    GetTvMediaLineupListingsGrid:\n      description: GetTvMediaLineupListingsGrid\n      properties:\n        AdultContent:\n          description: Defaults to 1 (allowed). Set to 0 to hide adult content.\n          type: boolean\n          nullable: false\n        Channel:\n          description: \"Include only channel(s) with this number, single or array values\n            accepted. sub channel numbers can be hyphenated to the end of the\n            string: e.g. 1-2 for sub channel 2 of channel 1 (use the\n            channel.number property , NOT channel.channelNumber property).\"\n          items:\n            type: string\n          type: array\n        DescriptiveVideoOnly:\n          description: Only displays listings which are flagged as being broadcast with\n            Descriptive Video. No value necessary.\n          type: boolean\n        Detail:\n          description: Set level of detail for response. values are 'full' or 'brief',\n            defaults to 'full'. 'full' will include all properties, 'brief' will\n            exclude optional properties.\n          enum:\n            - full\n            - brief\n          type: string\n        DisplayArtwork:\n          description: Displays the Artwork information. Set to 1 to include, 1 is default.\n            0 to hide (will improve performance).\n          type: boolean\n          nullable: false\n        End:\n          description: UTC end time in ISO8601. Defaults to 'start' time +4 hours.\n          format: date-time\n          type: string\n        EndChan:\n          description: \"Highest channel. sub channel numbers can be hyphenated to the end\n            of the string: e.g. 1-2 for sub channel 2 of channel 1. In general\n            this parameter should rarely be used, for shaping the grid size see\n            the 'maxchan' parameter.\"\n          items:\n            type: string\n          type: array\n        ExcludeChan:\n          description: \"Exclude channels by number, single or array values accepted. sub\n            channel numbers can be hyphenated to the end of the string: e.g. 1-2\n            for sub channel 2 of channel 1 (use the channel.number property, NOT\n            the channel.channelNumber property).\"\n          items:\n            type: string\n          type: array\n        ExcludeShowType:\n          description: Exclude only these show type ID(s), array or single values accepted.\n            Must be URL encoded. For a list of possible show type's and their\n            ID's see /genres/shows, or the showTypeID property of a listing\n            object.\n          items:\n            type: string\n          type: array\n        ExcludeStation:\n          description: Filter out station IDs; array or single value accepted. Station ID's\n            can be found in listings, or by using the /lineups API.\n          items:\n            format: int32\n            type: integer\n            nullable: false\n          type: array\n        Id:\n          description: ListingID, array or single values accepted. to return a single\n            listing it should be used in combination with a stationID (station\n            parameter).\n          items:\n            type: string\n          type: array\n        League:\n          description: Get only sports listings in the given league ID(s). Array or single\n            values accepted. For a list of possible values see /leagues.\n          items:\n            type: string\n          type: array\n        LineupID:\n          description: Lineup ID.\n          type: string\n        LiveOnly:\n          description: Only displays live listings. No value necessary.\n          type: boolean\n        NewShowsOnly:\n          description: Get new shows only. No value necessary.\n          type: boolean\n        NotYetStarted:\n          description: Only displays listings which are starting on or after the given\n            start time. No value necessary.\n          type: boolean\n        Search:\n          description: \"search value: can be a show, episode, movie, team, league, person,\n            etc. Results will be sorted by relevance rather than time.\"\n          type: string\n        ShowType:\n          description: Include only these show type ID(s), array or single values accepted.\n            Must be URL encoded. For a list of possible show type's and their\n            ID's see /genres/shows, or the showTypeID property of a listing\n            object.\n          items:\n            type: string\n          type: array\n        SportEventsOnly:\n          description: Get sporting events only. No value necessary.\n          type: boolean\n        SportType:\n          description: Get only sports listings of type sportTypeID. Array or single values\n            accepted. For a list of possible values see /genres/sports.\n          items:\n            type: string\n          type: array\n        Start:\n          description: UTC start time in ISO8601. Defaults to current date and time.\n          format: date-time\n          type: string\n        StartChan:\n          description: \"Lowest channel. sub channel numbers can be hyphenated to the end of\n            the string: e.g. 1-2 for sub channel 2 of channel 1.\"\n          items:\n            type: string\n          type: array\n        Station:\n          description: Filter by station ID. Array or single value accepted. Station ID's\n            can be found in listings, or by using the /lineups API.\n          items:\n            format: int32\n            type: integer\n            nullable: false\n          type: array\n        Team:\n          description: \"Filter by teams playing by name(teams.longName). Array or single\n            values accepted, for a list of possible values see /leagues/teams.\n            (NOTE: league parameter is required when using this parameter).\"\n          items:\n            type: string\n          type: array\n        TimeZone:\n          description: \"Set a timezone or time offset for listing times (listDateTime\n            property). Defaults to UTC, accepts time offsets (+/-HH:MM) or named\n            time zones (see IANA Time Zone Database). If an invalid value is\n            set, listDateTime will be returned as empty. NOTE: this parameter\n            does not affect input values; start and end times must still be\n            provided in UTC.\"\n          format: int32\n          type: integer\n        TvMediaApiKey:\n          description: API Key supplied by TvMedia.ca\n          type: string\n      required:\n        - TvMediaApiKey\n        - LineupID\n      title: GetTvMediaLineupListingsGrid\n      type: object\n    GetTvMediaLineupListingsHighlights:\n      description: GetTvMediaLineupListingsHighlights\n      properties:\n        AdultContent:\n          description: Defaults to 1 (allowed). Set to 0 to hide adult content.\n          type: boolean\n          nullable: false\n        Channel:\n          description: \"Include only channel(s) with this number, single or array values\n            accepted. sub channel numbers can be hyphenated to the end of the\n            string: e.g. 1-2 for sub channel 2 of channel 1 (use the\n            channel.number property , NOT channel.channelNumber property).\"\n          items:\n            type: string\n          type: array\n        DescriptiveVideoOnly:\n          description: Only displays listings which are flagged as being broadcast with\n            Descriptive Video. No value necessary.\n          type: boolean\n        Detail:\n          description: Set level of detail for response. values are 'full' or 'brief',\n            defaults to 'full'. 'full' will include all properties, 'brief' will\n            exclude optional properties.\n          enum:\n            - full\n            - brief\n          type: string\n        DisplayArtwork:\n          description: Displays the Artwork information. Set to 1 to include, 1 is default.\n            0 to hide (will improve performance).\n          type: boolean\n          nullable: false\n        End:\n          description: UTC end time in ISO8601. Defaults to 'start' time +4 hours.\n          format: date-time\n          type: string\n        EndChan:\n          description: \"Highest channel. sub channel numbers can be hyphenated to the end\n            of the string: e.g. 1-2 for sub channel 2 of channel 1. In general\n            this parameter should rarely be used, for shaping the grid size see\n            the 'maxchan' parameter.\"\n          items:\n            type: string\n          type: array\n        ExcludeChan:\n          description: \"Exclude channels by number, single or array values accepted. sub\n            channel numbers can be hyphenated to the end of the string: e.g. 1-2\n            for sub channel 2 of channel 1 (use the channel.number property, NOT\n            the channel.channelNumber property).\"\n          items:\n            type: string\n          type: array\n        ExcludeShowType:\n          description: Exclude only these show type ID(s), array or single values accepted.\n            Must be URL encoded. For a list of possible show type's and their\n            ID's see /genres/shows, or the showTypeID property of a listing\n            object.\n          items:\n            type: string\n          type: array\n        ExcludeStation:\n          description: Filter out station IDs; array or single value accepted. Station ID's\n            can be found in listings, or by using the /lineups API.\n          items:\n            format: int32\n            type: integer\n            nullable: false\n          type: array\n        Id:\n          description: ListingID, array or single values accepted. to return a single\n            listing it should be used in combination with a stationID (station\n            parameter).\n          items:\n            type: string\n          type: array\n        League:\n          description: Get only sports listings in the given league ID(s). Array or single\n            values accepted. For a list of possible values see /leagues.\n          items:\n            type: string\n          type: array\n        LineupID:\n          description: Lineup ID.\n          type: string\n        LiveOnly:\n          description: Only displays live listings. No value necessary.\n          type: boolean\n        NewShowsOnly:\n          description: Get new shows only. No value necessary.\n          type: boolean\n        NotYetStarted:\n          description: Only displays listings which are starting on or after the given\n            start time. No value necessary.\n          type: boolean\n        Search:\n          description: \"search value: can be a show, episode, movie, team, league, person,\n            etc. Results will be sorted by relevance rather than time.\"\n          type: string\n        ShowType:\n          description: Include only these show type ID(s), array or single values accepted.\n            Must be URL encoded. For a list of possible show type's and their\n            ID's see /genres/shows, or the showTypeID property of a listing\n            object.\n          items:\n            type: string\n          type: array\n        SportEventsOnly:\n          description: Get sporting events only. No value necessary.\n          type: boolean\n        SportType:\n          description: Get only sports listings of type sportTypeID. Array or single values\n            accepted. For a list of possible values see /genres/sports.\n          items:\n            type: string\n          type: array\n        Start:\n          description: UTC start time in ISO8601. Defaults to current date and time.\n          format: date-time\n          type: string\n        StartChan:\n          description: \"Lowest channel. sub channel numbers can be hyphenated to the end of\n            the string: e.g. 1-2 for sub channel 2 of channel 1.\"\n          items:\n            type: string\n          type: array\n        Station:\n          description: Filter by station ID. Array or single value accepted. Station ID's\n            can be found in listings, or by using the /lineups API.\n          items:\n            format: int32\n            type: integer\n            nullable: false\n          type: array\n        Team:\n          description: \"Filter by teams playing by name(teams.longName). Array or single\n            values accepted, for a list of possible values see /leagues/teams.\n            (NOTE: league parameter is required when using this parameter).\"\n          items:\n            type: string\n          type: array\n        TimeZone:\n          description: \"Set a timezone or time offset for listing times (listDateTime\n            property). Defaults to UTC, accepts time offsets (+/-HH:MM) or named\n            time zones (see IANA Time Zone Database). If an invalid value is\n            set, listDateTime will be returned as empty. NOTE: this parameter\n            does not affect input values; start and end times must still be\n            provided in UTC.\"\n          format: int32\n          type: integer\n        TvMediaApiKey:\n          description: API Key supplied by TvMedia.ca\n          type: string\n      required:\n        - TvMediaApiKey\n        - LineupID\n      title: GetTvMediaLineupListingsHighlights\n      type: object\n    GetTvMediaLineupsByAreaID:\n      description: GetTvMediaLineupsByAreaID\n      properties:\n        AreaID:\n          description: Service area ID. See TvMedia/lineups/browse/{CountryID}/{RegionID}\n            for a list of service areas.\n          type: string\n        CountryID:\n          description: Country abbreviation. See TvMedia/lineups/browse for a list of\n            supported countries.\n          type: string\n        Detail:\n          description: Set level of detail for response. values are 'full' or 'brief',\n            defaults to 'brief'. 'full' will include all properties, 'brief'\n            will exclude optional properties.\n          enum:\n            - full\n            - brief\n          type: string\n        LineupType:\n          description: Filter by lineup type, valid types are OTA, SAT, CAB, IPTV.\n          enum:\n            - OTA\n            - SAT\n            - CAB\n            - IPTV\n          type: string\n        ProviderId:\n          description: Filter by provider ID\n          type: string\n        RegionID:\n          description: Region abbreviation. See TvMedia/lineups/browse/{CountryID} for a\n            list of regions.\n          type: string\n        TvMediaApiKey:\n          description: API Key supplied by TvMedia.ca\n          type: string\n      required:\n        - TvMediaApiKey\n        - CountryID\n        - RegionID\n        - AreaID\n      title: GetTvMediaLineupsByAreaID\n      type: object\n    GetTvMediaLineupsByLatitudeLongitude:\n      description: GetTvMediaLineupsByLatitudeLongitude\n      properties:\n        Detail:\n          description: Set level of detail for response. values are 'full' or 'brief',\n            defaults to 'brief'. 'full' will include all properties, 'brief'\n            will exclude optional properties.\n          enum:\n            - full\n            - brief\n          type: string\n        Latitude:\n          description: Latitude (geographic coordinate).\n          format: float\n          type: number\n          nullable: false\n        LineupType:\n          description: Filter by lineup type, valid types are OTA, SAT, CAB, IPTV.\n          enum:\n            - OTA\n            - SAT\n            - CAB\n            - IPTV\n          type: string\n        Longitude:\n          description: Longitude (geographic coordinate).\n          format: float\n          type: number\n          nullable: false\n        ProviderId:\n          description: Filter by provider ID\n          type: string\n        TvMediaApiKey:\n          description: API Key supplied by TvMedia.ca\n          type: string\n      required:\n        - TvMediaApiKey\n        - Latitude\n        - Longitude\n      title: GetTvMediaLineupsByLatitudeLongitude\n      type: object\n    GetTvMediaLineupsByPostalCode:\n      description: GetTvMediaLineupsByPostalCode\n      properties:\n        Detail:\n          description: Set level of detail for response. values are 'full' or 'brief',\n            defaults to 'brief'. 'full' will include all properties, 'brief'\n            will exclude optional properties.\n          enum:\n            - full\n            - brief\n          type: string\n        LineupType:\n          description: Filter by lineup type, valid types are OTA, SAT, CAB, IPTV.\n          enum:\n            - OTA\n            - SAT\n            - CAB\n            - IPTV\n          type: string\n        PostalCode:\n          description: Postal code.\n          type: string\n        ProviderId:\n          description: Filter by provider ID\n          type: string\n        TvMediaApiKey:\n          description: API Key supplied by TvMedia.ca\n          type: string\n      required:\n        - TvMediaApiKey\n        - PostalCode\n      title: GetTvMediaLineupsByPostalCode\n      type: object\n    GetTvMediaListingsByStation:\n      description: GetTvMediaListingsByStation\n      properties:\n        AdultContent:\n          description: Defaults to 1 (allowed). Set to 0 to hide adult content.\n          type: boolean\n          nullable: false\n        Channel:\n          description: \"Include only channel(s) with this number, single or array values\n            accepted. sub channel numbers can be hyphenated to the end of the\n            string: e.g. 1-2 for sub channel 2 of channel 1 (use the\n            channel.number property , NOT channel.channelNumber property).\"\n          items:\n            type: string\n          type: array\n        DescriptiveVideoOnly:\n          description: Only displays listings which are flagged as being broadcast with\n            Descriptive Video. No value necessary.\n          type: boolean\n        Detail:\n          description: Set level of detail for response. values are 'full' or 'brief',\n            defaults to 'full'. 'full' will include all properties, 'brief' will\n            exclude optional properties.\n          enum:\n            - full\n            - brief\n          type: string\n        DisplayArtwork:\n          description: Displays the Artwork information. Set to 1 to include, 1 is default.\n            0 to hide (will improve performance).\n          type: boolean\n          nullable: false\n        End:\n          description: UTC end time in ISO8601. Defaults to 'start' time +4 hours.\n          format: date-time\n          type: string\n        EndChan:\n          description: \"Highest channel. sub channel numbers can be hyphenated to the end\n            of the string: e.g. 1-2 for sub channel 2 of channel 1. In general\n            this parameter should rarely be used, for shaping the grid size see\n            the 'maxchan' parameter.\"\n          items:\n            type: string\n          type: array\n        ExcludeChan:\n          description: \"Exclude channels by number, single or array values accepted. sub\n            channel numbers can be hyphenated to the end of the string: e.g. 1-2\n            for sub channel 2 of channel 1 (use the channel.number property, NOT\n            the channel.channelNumber property).\"\n          items:\n            type: string\n          type: array\n        ExcludeShowType:\n          description: Exclude only these show type ID(s), array or single values accepted.\n            Must be URL encoded. For a list of possible show type's and their\n            ID's see /genres/shows, or the showTypeID property of a listing\n            object.\n          items:\n            type: string\n          type: array\n        ExcludeStation:\n          description: Filter out station IDs; array or single value accepted. Station ID's\n            can be found in listings, or by using the /lineups API.\n          items:\n            format: int32\n            type: integer\n            nullable: false\n          type: array\n        Id:\n          description: ListingID, array or single values accepted. to return a single\n            listing it should be used in combination with a stationID (station\n            parameter).\n          items:\n            type: string\n          type: array\n        League:\n          description: Get only sports listings in the given league ID(s). Array or single\n            values accepted. For a list of possible values see /leagues.\n          items:\n            type: string\n          type: array\n        LiveOnly:\n          description: Only displays live listings. No value necessary.\n          type: boolean\n        NewShowsOnly:\n          description: Get new shows only. No value necessary.\n          type: boolean\n        NotYetStarted:\n          description: Only displays listings which are starting on or after the given\n            start time. No value necessary.\n          type: boolean\n        Search:\n          description: \"search value: can be a show, episode, movie, team, league, person,\n            etc. Results will be sorted by relevance rather than time.\"\n          type: string\n        ShowType:\n          description: Include only these show type ID(s), array or single values accepted.\n            Must be URL encoded. For a list of possible show type's and their\n            ID's see /genres/shows, or the showTypeID property of a listing\n            object.\n          items:\n            type: string\n          type: array\n        SportEventsOnly:\n          description: Get sporting events only. No value necessary.\n          type: boolean\n        SportType:\n          description: Get only sports listings of type sportTypeID. Array or single values\n            accepted. For a list of possible values see /genres/sports.\n          items:\n            type: string\n          type: array\n        Start:\n          description: UTC start time in ISO8601. Defaults to current date and time.\n          format: date-time\n          type: string\n        StartChan:\n          description: \"Lowest channel. sub channel numbers can be hyphenated to the end of\n            the string: e.g. 1-2 for sub channel 2 of channel 1.\"\n          items:\n            type: string\n          type: array\n        Station:\n          description: Filter by station ID. Array or single value accepted. Station ID's\n            can be found in listings, or by using the /lineups API.\n          items:\n            format: int32\n            type: integer\n            nullable: false\n          type: array\n        StationID:\n          description: Station ID. Station ID's can be found in listings, or by using the\n            Tvmedia/lineups API\n          format: int32\n          type: integer\n          nullable: false\n        Team:\n          description: \"Filter by teams playing by name(teams.longName). Array or single\n            values accepted, for a list of possible values see /leagues/teams.\n            (NOTE: league parameter is required when using this parameter).\"\n          items:\n            type: string\n          type: array\n        TimeZone:\n          description: \"Set a timezone or time offset for listing times (listDateTime\n            property). Defaults to UTC, accepts time offsets (+/-HH:MM) or named\n            time zones (see IANA Time Zone Database). If an invalid value is\n            set, listDateTime will be returned as empty. NOTE: this parameter\n            does not affect input values; start and end times must still be\n            provided in UTC.\"\n          format: int32\n          type: integer\n        TvMediaApiKey:\n          description: API Key supplied by TvMedia.ca\n          type: string\n      required:\n        - TvMediaApiKey\n        - StationID\n      title: GetTvMediaListingsByStation\n      type: object\n    GetTvMediaMovieGenres:\n      description: GetTvMediaMovieGenres\n      properties:\n        TvMediaApiKey:\n          description: API Key supplied by TvMedia.ca\n          type: string\n      required:\n        - TvMediaApiKey\n      title: GetTvMediaMovieGenres\n      type: object\n    GetTvMediaRegions:\n      description: GetTvMediaRegions\n      properties:\n        CountryID:\n          description: Country abbreviation. See TvMedia/lineups/browse for a list of\n            supported countries.\n          type: string\n        TvMediaApiKey:\n          description: API Key supplied by TvMedia.ca\n          type: string\n      required:\n        - TvMediaApiKey\n        - CountryID\n      title: GetTvMediaRegions\n      type: object\n    GetTvMediaServiceAreas:\n      description: GetTvMediaServiceAreas\n      properties:\n        CountryID:\n          description: Country abbreviation. See TvMedia/lineups/browse for a list of\n            supported countries.\n          type: string\n        RegionID:\n          description: Region abbreviation. See TvMedia/lineups/browse/{CountryID} for a\n            list of regions.\n          type: string\n        TvMediaApiKey:\n          description: API Key supplied by TvMedia.ca\n          type: string\n      required:\n        - TvMediaApiKey\n        - CountryID\n        - RegionID\n      title: GetTvMediaServiceAreas\n      type: object\n    GetTvMediaShowGenres:\n      description: GetTvMediaShowGenres\n      properties:\n        TvMediaApiKey:\n          description: API Key supplied by TvMedia.ca\n          type: string\n      required:\n        - TvMediaApiKey\n      title: GetTvMediaShowGenres\n      type: object\n    GetTvMediaSportGenres:\n      description: GetTvMediaSportGenres\n      properties:\n        TvMediaApiKey:\n          description: API Key supplied by TvMedia.ca\n          type: string\n      required:\n        - TvMediaApiKey\n      title: GetTvMediaSportGenres\n      type: object\n    GetTvMediaStation:\n      description: GetTvMediaStation\n      properties:\n        StationID:\n          description: Station ID. Station ID's can be found in listings, or by using the\n            Tvmedia/lineups API\n          format: int32\n          type: integer\n          nullable: false\n        TvMediaApiKey:\n          description: API Key supplied by TvMedia.ca\n          type: string\n      required:\n        - TvMediaApiKey\n        - StationID\n      title: GetTvMediaStation\n      type: object\n    GetTvMediaTeamById:\n      description: GetTvMediaTeamById\n      properties:\n        TeamID:\n          description: Team ID.\n          format: int32\n          type: integer\n          nullable: false\n        TvMediaApiKey:\n          description: API Key supplied by TvMedia.ca\n          type: string\n      required:\n        - TvMediaApiKey\n        - TeamID\n      title: GetTvMediaTeamById\n      type: object\n    GetTvMediaTeamListings:\n      description: GetTvMediaTeamListings\n      properties:\n        AdultContent:\n          description: Defaults to 1 (allowed). Set to 0 to hide adult content.\n          type: boolean\n          nullable: false\n        Channel:\n          description: \"Include only channel(s) with this number, single or array values\n            accepted. sub channel numbers can be hyphenated to the end of the\n            string: e.g. 1-2 for sub channel 2 of channel 1 (use the\n            channel.number property , NOT channel.channelNumber property).\"\n          items:\n            type: string\n          type: array\n        DescriptiveVideoOnly:\n          description: Only displays listings which are flagged as being broadcast with\n            Descriptive Video. No value necessary.\n          type: boolean\n        Detail:\n          description: Set level of detail for response. values are 'full' or 'brief',\n            defaults to 'full'. 'full' will include all properties, 'brief' will\n            exclude optional properties.\n          enum:\n            - full\n            - brief\n          type: string\n        DisplayArtwork:\n          description: Displays the Artwork information. Set to 1 to include, 1 is default.\n            0 to hide (will improve performance).\n          type: boolean\n          nullable: false\n        End:\n          description: UTC end time in ISO8601. Defaults to 'start' time +4 hours.\n          format: date-time\n          type: string\n        EndChan:\n          description: \"Highest channel. sub channel numbers can be hyphenated to the end\n            of the string: e.g. 1-2 for sub channel 2 of channel 1. In general\n            this parameter should rarely be used, for shaping the grid size see\n            the 'maxchan' parameter.\"\n          items:\n            type: string\n          type: array\n        ExcludeChan:\n          description: \"Exclude channels by number, single or array values accepted. sub\n            channel numbers can be hyphenated to the end of the string: e.g. 1-2\n            for sub channel 2 of channel 1 (use the channel.number property, NOT\n            the channel.channelNumber property).\"\n          items:\n            type: string\n          type: array\n        ExcludeShowType:\n          description: Exclude only these show type ID(s), array or single values accepted.\n            Must be URL encoded. For a list of possible show type's and their\n            ID's see /genres/shows, or the showTypeID property of a listing\n            object.\n          items:\n            type: string\n          type: array\n        ExcludeStation:\n          description: Filter out station IDs; array or single value accepted. Station ID's\n            can be found in listings, or by using the /lineups API.\n          items:\n            format: int32\n            type: integer\n            nullable: false\n          type: array\n        Id:\n          description: ListingID, array or single values accepted. to return a single\n            listing it should be used in combination with a stationID (station\n            parameter).\n          items:\n            type: string\n          type: array\n        League:\n          description: Get only sports listings in the given league ID(s). Array or single\n            values accepted. For a list of possible values see /leagues.\n          items:\n            type: string\n          type: array\n        LineupID:\n          description: Lineup ID. Lineups can be found through the /TvMedia/lineups method.\n          type: string\n        LiveOnly:\n          description: Only displays live listings. No value necessary.\n          type: boolean\n        NewShowsOnly:\n          description: Get new shows only. No value necessary.\n          type: boolean\n        NotYetStarted:\n          description: Only displays listings which are starting on or after the given\n            start time. No value necessary.\n          type: boolean\n        Search:\n          description: \"search value: can be a show, episode, movie, team, league, person,\n            etc. Results will be sorted by relevance rather than time.\"\n          type: string\n        ShowType:\n          description: Include only these show type ID(s), array or single values accepted.\n            Must be URL encoded. For a list of possible show type's and their\n            ID's see /genres/shows, or the showTypeID property of a listing\n            object.\n          items:\n            type: string\n          type: array\n        SportEventsOnly:\n          description: Get sporting events only. No value necessary.\n          type: boolean\n        SportType:\n          description: Get only sports listings of type sportTypeID. Array or single values\n            accepted. For a list of possible values see /genres/sports.\n          items:\n            type: string\n          type: array\n        Start:\n          description: UTC start time in ISO8601. Defaults to current date and time.\n          format: date-time\n          type: string\n        StartChan:\n          description: \"Lowest channel. sub channel numbers can be hyphenated to the end of\n            the string: e.g. 1-2 for sub channel 2 of channel 1.\"\n          items:\n            type: string\n          type: array\n        Station:\n          description: Filter by station ID. Array or single value accepted. Station ID's\n            can be found in listings, or by using the /lineups API.\n          items:\n            format: int32\n            type: integer\n            nullable: false\n          type: array\n        Team:\n          description: \"Filter by teams playing by name(teams.longName). Array or single\n            values accepted, for a list of possible values see /leagues/teams.\n            (NOTE: league parameter is required when using this parameter).\"\n          items:\n            type: string\n          type: array\n        TeamID:\n          description: Team ID. See /teams for a list of all available sports teams.\n          format: int32\n          type: integer\n          nullable: false\n        TimeZone:\n          description: \"Set a timezone or time offset for listing times (listDateTime\n            property). Defaults to UTC, accepts time offsets (+/-HH:MM) or named\n            time zones (see IANA Time Zone Database). If an invalid value is\n            set, listDateTime will be returned as empty. NOTE: this parameter\n            does not affect input values; start and end times must still be\n            provided in UTC.\"\n          format: int32\n          type: integer\n        TvMediaApiKey:\n          description: API Key supplied by TvMedia.ca\n          type: string\n      required:\n        - TvMediaApiKey\n        - TeamID\n        - LineupID\n      title: GetTvMediaTeamListings\n      type: object\n    GetTvMediaTeams:\n      description: GetTvMediaTeams\n      properties:\n        LeagueID:\n          description: League ID. See /TvMedia/leagues for a list of all available sports\n            leagues.\n          type: string\n        TvMediaApiKey:\n          description: API Key supplied by TvMedia.ca\n          type: string\n      required:\n        - TvMediaApiKey\n        - LeagueID\n      title: GetTvMediaTeams\n      type: object\n    GetVideo:\n      description: GetVideo\n      properties:\n        AdaptiveClientManifestVersion:\n          description: Adaptive Client Manifest Version (HLS, default = 3)\n          format: int32\n          type: integer\n        AdaptiveMaximumResolution:\n          description: Adaptive Maximum resolution. Default is 1080P Resolution.\n          enum:\n            - RESOLUTION_QVGA\n            - RESOLUTION_HVGA\n            - RESOLUTION_480P\n            - RESOLUTION_720P\n            - RESOLUTION_1080P\n          type: string\n        AdaptiveMinimumFragmentLength:\n          description: Adaptive Minimum Fragment Length. Default is 10 seconds.\n          enum:\n            - Two\n            - Three\n            - Four\n            - Five\n            - Six\n            - Seven\n            - Eight\n            - Nine\n            - Ten\n            - Fifteen\n            - Twenty\n            - Thirty\n          type: string\n        AdaptiveMinimumResolution:\n          description: Adaptive Minimum resolution. Default is QVGA (320 wide, 212Kbps)\n          enum:\n            - RESOLUTION_QVGA\n            - RESOLUTION_HVGA\n            - RESOLUTION_480P\n            - RESOLUTION_720P\n            - RESOLUTION_1080P\n          type: string\n        AdaptiveStartIndex:\n          description: Adaptive Start Index. Default = 4, the 480P resolution.\n          format: int32\n          type: integer\n        Expires:\n          description: \"UTC Time to video link should expire. ISO 8601 Format: yyyy-mm-dd\n            hh:mm:ss.ffffff0Z\"\n          format: date-time\n          type: string\n          nullable: false\n        Format:\n          description: Video format.\n          enum:\n            - mp4\n            - hls\n            - hss\n            - hds\n            - dash\n          type: string\n        Id:\n          description: Id of the Video from either MovieVideo, ShowVideo, SeasonVideo,\n            EpisodeVideo object.\n          format: int64\n          type: integer\n          nullable: false\n        KbRate:\n          description: Video bit-rate required for MP4 content.\n          enum:\n            - NOT_SET\n            - mp4_80\n            - mp4_212\n            - mp4_450\n            - mp4_750\n            - mp4_1500\n            - mp4_2500\n            - mp4_5000\n            - mp4_8000\n          type: string\n        MaxRate:\n          description: Adaptive Minimum rate. (Depreciated, use adaptive minimum resolution\n            instead)\n          enum:\n            - adap_212000\n            - adap_350000\n            - adap_600000\n            - adap_1200000\n            - adap_2000000\n            - adap_2500000\n            - adap_3500000\n          type: string\n        MinRate:\n          description: Adaptive Maximum rate. (Depreciated, use adaptive minimum resolution\n            instead)\n          enum:\n            - adap_212000\n            - adap_350000\n            - adap_600000\n            - adap_1200000\n            - adap_2000000\n            - adap_2500000\n            - adap_3500000\n          type: string\n        ReportTag:\n          description: Report tag used in video analytics.\n          type: string\n        end:\n          description: Position in seconds to end video playback.\n          format: int32\n          type: integer\n        start:\n          description: Position in seconds to start video playback.\n          format: int32\n          type: integer\n      required:\n        - Id\n        - Format\n        - Expires\n      title: GetVideo\n      type: object\n    GetVideoLog:\n      description: GetVideoLog\n      properties:\n        DateValue:\n          description: Days spanned by report\n          enum:\n            - today\n            - yesterday\n            - two_days_ago\n            - last_7_days\n            - last_14_days\n            - last_28_days\n            - last_60_days\n            - last_90_days\n            - last_365_days\n          type: string\n        End:\n          description: Report end date\n          format: date-time\n          type: string\n          nullable: false\n        Limit:\n          description: Number of records returned from top of response\n          format: int32\n          type: integer\n          nullable: false\n        ReportTag:\n          description: Report Tag filter.\n          type: string\n        Start:\n          description: Report start date\n          format: date-time\n          type: string\n          nullable: false\n      title: GetVideoLog\n      type: object\n    GetVideoTypes:\n      description: GetVideoTypes\n      properties: {}\n      title: GetVideoTypes\n      type: object\n    GetVideosById:\n      description: GetVideosById\n      properties:\n        Id:\n          type: string\n      title: GetVideosById\n      type: object\n    GetViewers:\n      description: GetViewers\n      properties:\n        DateValue:\n          description: Days spanned by report\n          enum:\n            - today\n            - yesterday\n            - two_days_ago\n            - last_7_days\n            - last_14_days\n            - last_28_days\n            - last_60_days\n            - last_90_days\n            - last_365_days\n          type: string\n        ReportTag:\n          description: Report Tag filter.\n          type: string\n      title: GetViewers\n      type: object\n    GetViews:\n      description: GetViews\n      properties:\n        DateValue:\n          description: Days spanned by report\n          enum:\n            - today\n            - yesterday\n            - two_days_ago\n            - last_7_days\n            - last_14_days\n            - last_28_days\n            - last_60_days\n            - last_90_days\n            - last_365_days\n          type: string\n        ReportTag:\n          description: Report Tag filter.\n          type: string\n      title: GetViews\n      type: object\n    GetWebBrowsers:\n      description: GetWebBrowsers\n      properties:\n        DateValue:\n          description: Days spanned by report\n          enum:\n            - today\n            - yesterday\n            - two_days_ago\n            - last_7_days\n            - last_14_days\n            - last_28_days\n            - last_60_days\n            - last_90_days\n            - last_365_days\n          type: string\n        End:\n          description: Report end date\n          format: date-time\n          type: string\n          nullable: false\n        Limit:\n          description: Number of records returned from top of response\n          format: int32\n          type: integer\n          nullable: false\n        ReportTag:\n          description: Report Tag filter.\n          type: string\n        Start:\n          description: Report start date\n          format: date-time\n          type: string\n          nullable: false\n      title: GetWebBrowsers\n      type: object\n    GetWebediaMovieIds:\n      description: GetWebediaMovieIds\n      properties:\n        Skip:\n          description: \"Determines where to start page.  Ex: 0 starts at the beginning.\"\n          format: int32\n          type: integer\n          nullable: false\n        Take:\n          description: Determines the page size.  (Maximum of 1000)\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Skip\n        - Take\n      title: GetWebediaMovieIds\n      type: object\n    GetXroadMediaRecommendations:\n      description: GetXroadMediaRecommendations\n      properties:\n        MovieId:\n          description: Source MovieId for recommendations.\n          format: int64\n          type: integer\n        ShowId:\n          description: Source ShowId for recommendations.\n          format: int64\n          type: integer\n        Type:\n          description: Type of recommendation response.\n          enum:\n            - similar\n            - similarShowsOnly\n            - similarMoviesOnly\n          type: string\n      title: GetXroadMediaRecommendations\n      type: object\n    GoWatchItEpisodeAvailabilitiesAvailability:\n      description: GoWatchItEpisodeAvailabilitiesAvailability\n      properties:\n        buy_line:\n          type: string\n        categories:\n          items:\n            type: string\n          type: array\n        category:\n          type: string\n        dma:\n          type: boolean\n          nullable: false\n        format_line:\n          type: string\n        formats:\n          items:\n            $ref: \"#/components/schemas/GoWatchItEpisodeAvailabilitiesAvailabilityF\\\n              ormat\"\n          type: array\n        presale:\n          type: boolean\n          nullable: false\n        provider_format_id:\n          format: int32\n          type: integer\n          nullable: false\n        provider_format_logos:\n          $ref: \"#/components/schemas/GoWatchItEpisodeAvailabilitiesAvailabilityPro\\\n            vider_Format_Logos\"\n        provider_format_name:\n          type: string\n        provider_name:\n          type: string\n        rent_line:\n          type: string\n        suggested_line:\n          type: string\n        suggested_url:\n          type: string\n        ultraviolet:\n          type: boolean\n          nullable: false\n        watch_now_url:\n          type: string\n      title: GoWatchItEpisodeAvailabilitiesAvailability\n      type: object\n    GoWatchItEpisodeAvailabilitiesAvailabilityFormat:\n      description: GoWatchItEpisodeAvailabilitiesAvailabilityFormat\n      properties:\n        annotation:\n          $ref: \"#/components/schemas/Object\"\n        category:\n          type: string\n        delivery:\n          $ref: \"#/components/schemas/Object\"\n        links:\n          items:\n            $ref: \"#/components/schemas/GoWatchItEpisodeAvailabilitiesAvailabilityF\\\n              ormatLink\"\n          type: array\n        offer:\n          $ref: \"#/components/schemas/Object\"\n        position:\n          format: int32\n          type: integer\n          nullable: false\n        price:\n          $ref: \"#/components/schemas/Object\"\n        quality:\n          type: string\n      title: GoWatchItEpisodeAvailabilitiesAvailabilityFormat\n      type: object\n    GoWatchItEpisodeAvailabilitiesAvailabilityFormatLink:\n      description: GoWatchItEpisodeAvailabilitiesAvailabilityFormatLink\n      properties:\n        logos:\n          $ref: \"#/components/schemas/GoWatchItEpisodeAvailabilitiesAvailabilityFor\\\n            matLinkLogos\"\n        type:\n          type: string\n        url:\n          type: string\n      title: GoWatchItEpisodeAvailabilitiesAvailabilityFormatLink\n      type: object\n    GoWatchItEpisodeAvailabilitiesAvailabilityFormatLinkLogos:\n      description: GoWatchItEpisodeAvailabilitiesAvailabilityFormatLinkLogos\n      properties:\n        dark:\n          $ref: \"#/components/schemas/Object\"\n        light:\n          $ref: \"#/components/schemas/Object\"\n      title: GoWatchItEpisodeAvailabilitiesAvailabilityFormatLinkLogos\n      type: object\n    GoWatchItEpisodeAvailabilitiesAvailabilityProvider_Format_Logos:\n      description: GoWatchItEpisodeAvailabilitiesAvailabilityProvider_Format_Logos\n      properties:\n        dark:\n          type: string\n        light:\n          type: string\n      title: GoWatchItEpisodeAvailabilitiesAvailabilityProvider_Format_Logos\n      type: object\n    GoWatchItEpisodeAvailabilitiesResponse:\n      description: GoWatchItEpisodeAvailabilitiesResponse\n      properties:\n        GoWatchItId:\n          format: int32\n          type: integer\n          nullable: false\n        availabilities:\n          items:\n            $ref: \"#/components/schemas/GoWatchItEpisodeAvailabilitiesAvailability\"\n          type: array\n        available:\n          type: boolean\n          nullable: false\n      title: GoWatchItEpisodeAvailabilitiesResponse\n      type: object\n    GoWatchItMovieAvailabilitiesAvailability:\n      description: GoWatchItMovieAvailabilitiesAvailability\n      properties:\n        buy_line:\n          type: string\n        categories:\n          items:\n            type: string\n          type: array\n        category:\n          type: string\n        dma:\n          type: boolean\n          nullable: false\n        format_line:\n          type: string\n        formats:\n          items:\n            $ref: \"#/components/schemas/GoWatchItMovieAvailabilitiesAvailabilityFor\\\n              mat\"\n          type: array\n        presale:\n          type: boolean\n          nullable: false\n        provider_format_id:\n          format: int32\n          type: integer\n          nullable: false\n        provider_format_logos:\n          $ref: \"#/components/schemas/GoWatchItMovieAvailabilitiesAvailabilityProvi\\\n            der_Format_Logos\"\n        provider_format_name:\n          type: string\n        provider_name:\n          type: string\n        rent_line:\n          type: string\n        suggested_line:\n          type: string\n        suggested_url:\n          type: string\n        ultraviolet:\n          type: boolean\n          nullable: false\n        watch_now_url:\n          type: string\n      title: GoWatchItMovieAvailabilitiesAvailability\n      type: object\n    GoWatchItMovieAvailabilitiesAvailabilityFormat:\n      description: GoWatchItMovieAvailabilitiesAvailabilityFormat\n      properties:\n        annotation:\n          $ref: \"#/components/schemas/Object\"\n        category:\n          type: string\n        delivery:\n          $ref: \"#/components/schemas/Object\"\n        links:\n          items:\n            $ref: \"#/components/schemas/GoWatchItMovieAvailabilitiesAvailabilityFor\\\n              matLink\"\n          type: array\n        offer:\n          type: string\n        position:\n          format: int32\n          type: integer\n          nullable: false\n        price:\n          type: string\n        quality:\n          type: string\n      title: GoWatchItMovieAvailabilitiesAvailabilityFormat\n      type: object\n    GoWatchItMovieAvailabilitiesAvailabilityFormatLink:\n      description: GoWatchItMovieAvailabilitiesAvailabilityFormatLink\n      properties:\n        logos:\n          $ref: \"#/components/schemas/GoWatchItMovieAvailabilitiesAvailabilityForma\\\n            tLinkLogos\"\n        type:\n          type: string\n        url:\n          type: string\n      title: GoWatchItMovieAvailabilitiesAvailabilityFormatLink\n      type: object\n    GoWatchItMovieAvailabilitiesAvailabilityFormatLinkLogos:\n      description: GoWatchItMovieAvailabilitiesAvailabilityFormatLinkLogos\n      properties:\n        dark:\n          $ref: \"#/components/schemas/Object\"\n        light:\n          $ref: \"#/components/schemas/Object\"\n      title: GoWatchItMovieAvailabilitiesAvailabilityFormatLinkLogos\n      type: object\n    GoWatchItMovieAvailabilitiesAvailabilityProvider_Format_Logos:\n      description: GoWatchItMovieAvailabilitiesAvailabilityProvider_Format_Logos\n      properties:\n        dark:\n          type: string\n        light:\n          type: string\n      title: GoWatchItMovieAvailabilitiesAvailabilityProvider_Format_Logos\n      type: object\n    GoWatchItMovieAvailabilitiesResponse:\n      description: GoWatchItMovieAvailabilitiesResponse\n      properties:\n        GoWatchItId:\n          format: int32\n          type: integer\n          nullable: false\n        availabilities:\n          items:\n            $ref: \"#/components/schemas/GoWatchItMovieAvailabilitiesAvailability\"\n          type: array\n        available:\n          type: boolean\n          nullable: false\n      title: GoWatchItMovieAvailabilitiesResponse\n      type: object\n    GoWatchItSeasonAvailabilitiesAvailability:\n      description: GoWatchItSeasonAvailabilitiesAvailability\n      properties:\n        buy_line:\n          type: string\n        categories:\n          items:\n            type: string\n          type: array\n        category:\n          type: string\n        dma:\n          type: boolean\n          nullable: false\n        format_line:\n          type: string\n        formats:\n          items:\n            $ref: \"#/components/schemas/GoWatchItSeasonAvailabilitiesAvailabilityFo\\\n              rmat\"\n          type: array\n        presale:\n          type: boolean\n          nullable: false\n        provider_format_id:\n          format: int32\n          type: integer\n          nullable: false\n        provider_format_logos:\n          $ref: \"#/components/schemas/GoWatchItSeasonAvailabilitiesAvailabilityProv\\\n            ider_Format_Logos\"\n        provider_format_name:\n          type: string\n        provider_name:\n          type: string\n        rent_line:\n          type: string\n        suggested_line:\n          type: string\n        suggested_url:\n          type: string\n        ultraviolet:\n          type: boolean\n          nullable: false\n        watch_now_url:\n          type: string\n      title: GoWatchItSeasonAvailabilitiesAvailability\n      type: object\n    GoWatchItSeasonAvailabilitiesAvailabilityFormat:\n      description: GoWatchItSeasonAvailabilitiesAvailabilityFormat\n      properties:\n        annotation:\n          $ref: \"#/components/schemas/Object\"\n        category:\n          type: string\n        delivery:\n          $ref: \"#/components/schemas/Object\"\n        links:\n          items:\n            $ref: \"#/components/schemas/GoWatchItSeasonAvailabilitiesAvailabilityFo\\\n              rmatLink\"\n          type: array\n        offer:\n          type: string\n        position:\n          format: int32\n          type: integer\n          nullable: false\n        price:\n          type: string\n        quality:\n          type: string\n      title: GoWatchItSeasonAvailabilitiesAvailabilityFormat\n      type: object\n    GoWatchItSeasonAvailabilitiesAvailabilityFormatLink:\n      description: GoWatchItSeasonAvailabilitiesAvailabilityFormatLink\n      properties:\n        logos:\n          $ref: \"#/components/schemas/GoWatchItSeasonAvailabilitiesAvailabilityForm\\\n            atLinkLogos\"\n        type:\n          type: string\n        url:\n          type: string\n      title: GoWatchItSeasonAvailabilitiesAvailabilityFormatLink\n      type: object\n    GoWatchItSeasonAvailabilitiesAvailabilityFormatLinkLogos:\n      description: GoWatchItSeasonAvailabilitiesAvailabilityFormatLinkLogos\n      properties:\n        dark:\n          $ref: \"#/components/schemas/Object\"\n        light:\n          $ref: \"#/components/schemas/Object\"\n      title: GoWatchItSeasonAvailabilitiesAvailabilityFormatLinkLogos\n      type: object\n    GoWatchItSeasonAvailabilitiesAvailabilityProvider_Format_Logos:\n      description: GoWatchItSeasonAvailabilitiesAvailabilityProvider_Format_Logos\n      properties:\n        dark:\n          type: string\n        light:\n          type: string\n      title: GoWatchItSeasonAvailabilitiesAvailabilityProvider_Format_Logos\n      type: object\n    GoWatchItSeasonAvailabilitiesResponse:\n      description: GoWatchItSeasonAvailabilitiesResponse\n      properties:\n        GoWatchItId:\n          format: int32\n          type: integer\n          nullable: false\n        availabilities:\n          items:\n            $ref: \"#/components/schemas/GoWatchItSeasonAvailabilitiesAvailability\"\n          type: array\n        available:\n          type: boolean\n          nullable: false\n      title: GoWatchItSeasonAvailabilitiesResponse\n      type: object\n    GoWatchItShowAvailabilitiesAvailability:\n      description: GoWatchItShowAvailabilitiesAvailability\n      properties:\n        buy_line:\n          type: string\n        categories:\n          items:\n            type: string\n          type: array\n        category:\n          type: string\n        dma:\n          type: boolean\n          nullable: false\n        format_line:\n          type: string\n        formats:\n          items:\n            $ref: \"#/components/schemas/GoWatchItShowAvailabilitiesAvailabilityForm\\\n              at\"\n          type: array\n        presale:\n          type: boolean\n          nullable: false\n        provider_format_id:\n          format: int32\n          type: integer\n          nullable: false\n        provider_format_logos:\n          $ref: \"#/components/schemas/GoWatchItShowAvailabilitiesAvailabilityProvid\\\n            er_Format_Logos\"\n        provider_format_name:\n          type: string\n        provider_name:\n          type: string\n        rent_line:\n          type: string\n        suggested_line:\n          type: string\n        suggested_url:\n          type: string\n        ultraviolet:\n          type: boolean\n          nullable: false\n        watch_now_url:\n          type: string\n      title: GoWatchItShowAvailabilitiesAvailability\n      type: object\n    GoWatchItShowAvailabilitiesAvailabilityFormat:\n      description: GoWatchItShowAvailabilitiesAvailabilityFormat\n      properties:\n        annotation:\n          $ref: \"#/components/schemas/Object\"\n        category:\n          type: string\n        delivery:\n          $ref: \"#/components/schemas/Object\"\n        links:\n          items:\n            $ref: \"#/components/schemas/GoWatchItShowAvailabilitiesAvailabilityForm\\\n              atLink\"\n          type: array\n        offer:\n          $ref: \"#/components/schemas/Object\"\n        position:\n          format: int32\n          type: integer\n          nullable: false\n        price:\n          $ref: \"#/components/schemas/Object\"\n        quality:\n          type: string\n      title: GoWatchItShowAvailabilitiesAvailabilityFormat\n      type: object\n    GoWatchItShowAvailabilitiesAvailabilityFormatLink:\n      description: GoWatchItShowAvailabilitiesAvailabilityFormatLink\n      properties:\n        logos:\n          $ref: \"#/components/schemas/GoWatchItShowAvailabilitiesAvailabilityFormat\\\n            LinkLogos\"\n        type:\n          type: string\n        url:\n          type: string\n      title: GoWatchItShowAvailabilitiesAvailabilityFormatLink\n      type: object\n    GoWatchItShowAvailabilitiesAvailabilityFormatLinkLogos:\n      description: GoWatchItShowAvailabilitiesAvailabilityFormatLinkLogos\n      properties:\n        dark:\n          $ref: \"#/components/schemas/Object\"\n        light:\n          $ref: \"#/components/schemas/Object\"\n      title: GoWatchItShowAvailabilitiesAvailabilityFormatLinkLogos\n      type: object\n    GoWatchItShowAvailabilitiesAvailabilityProvider_Format_Logos:\n      description: GoWatchItShowAvailabilitiesAvailabilityProvider_Format_Logos\n      properties:\n        dark:\n          type: string\n        light:\n          type: string\n      title: GoWatchItShowAvailabilitiesAvailabilityProvider_Format_Logos\n      type: object\n    GoWatchItShowAvailabilitiesResponse:\n      description: GoWatchItShowAvailabilitiesResponse\n      properties:\n        GoWatchItId:\n          format: int32\n          type: integer\n          nullable: false\n        availabilities:\n          items:\n            $ref: \"#/components/schemas/GoWatchItShowAvailabilitiesAvailability\"\n          type: array\n        available:\n          type: boolean\n          nullable: false\n      title: GoWatchItShowAvailabilitiesResponse\n      type: object\n    ImageBatchResponse:\n      description: ImageBatchResponse\n      properties:\n        Expires:\n          description: \"Image URLs are hashed and expire. ISO 8601 Format: yyyy-mm-dd\n            hh:mm:ss.ffffff0Z \"\n          format: date-time\n          type: string\n          nullable: false\n        FilePath:\n          description: Requested FilePath of requested image.\n          type: string\n        Url:\n          description: URL to image request.\n          type: string\n      title: ImageBatchResponse\n      type: object\n    ImageRedirectResponse:\n      description: ImageRedirectResponse\n      properties:\n        Expires:\n          description: \"Image URLs are hashed and expire. ISO 8601 Format: yyyy-mm-dd\n            hh:mm:ss.ffffff0Z \"\n          format: date-time\n          type: string\n          nullable: false\n        Url:\n          description: URL to image request.\n          type: string\n      title: ImageRedirectResponse\n      type: object\n    ImageTypeResponse:\n      description: ImageTypeResponse\n      properties:\n        Id:\n          description: Unique ID for the ImageType.\n          format: int32\n          type: integer\n          nullable: false\n        Type:\n          description: Name of the Type of the ImageType.\n          type: string\n      title: ImageTypeResponse\n      type: object\n    LanguageResponse:\n      description: LanguageResponse\n      properties:\n        Id:\n          description: Unique ID of a Language.\n          format: int32\n          type: integer\n          nullable: false\n        IsoCode:\n          description: ISO code for this Language.\n          type: string\n        Name:\n          description: Name of the Language.\n          type: string\n      title: LanguageResponse\n      type: object\n    List_AnalyticsCountryResponse_:\n      items:\n        $ref: \"#/components/schemas/AnalyticsCountryResponse\"\n      title: List\u003cAnalyticsCountryResponse\u003e\n      type: array\n    List_CelebrityRankedResponse_:\n      items:\n        $ref: \"#/components/schemas/CelebrityRankedResponse\"\n      title: List\u003cCelebrityRankedResponse\u003e\n      type: array\n    List_ChartItem_:\n      items:\n        $ref: \"#/components/schemas/ChartItem\"\n      title: List\u003cChartItem\u003e\n      type: array\n    List_ChartPersonItem_:\n      items:\n        $ref: \"#/components/schemas/ChartPersonItem\"\n      title: List\u003cChartPersonItem\u003e\n      type: array\n    List_CityResponse_:\n      items:\n        $ref: \"#/components/schemas/CityResponse\"\n      title: List\u003cCityResponse\u003e\n      type: array\n    List_CompanyResponse_:\n      items:\n        $ref: \"#/components/schemas/CompanyResponse\"\n      title: List\u003cCompanyResponse\u003e\n      type: array\n    List_CountryResponse_:\n      items:\n        $ref: \"#/components/schemas/CountryResponse\"\n      title: List\u003cCountryResponse\u003e\n      type: array\n    List_DbShowCertification_:\n      items:\n        $ref: \"#/components/schemas/DbShowCertification\"\n      title: List\u003cDbShowCertification\u003e\n      type: array\n    List_EngagementActionsResponse_:\n      items:\n        $ref: \"#/components/schemas/EngagementActionsResponse\"\n      title: List\u003cEngagementActionsResponse\u003e\n      type: array\n    List_EngagementTimesResponse_:\n      items:\n        $ref: \"#/components/schemas/EngagementTimesResponse\"\n      title: List\u003cEngagementTimesResponse\u003e\n      type: array\n    List_EpisodeChangeHistoryResponse_:\n      items:\n        $ref: \"#/components/schemas/EpisodeChangeHistoryResponse\"\n      title: List\u003cEpisodeChangeHistoryResponse\u003e\n      type: array\n    List_EpisodeChangeHistoryWithEntityResponse_:\n      items:\n        $ref: \"#/components/schemas/EpisodeChangeHistoryWithEntityResponse\"\n      title: List\u003cEpisodeChangeHistoryWithEntityResponse\u003e\n      type: array\n    List_GameChangeHistoryResponse_:\n      items:\n        $ref: \"#/components/schemas/GameChangeHistoryResponse\"\n      title: List\u003cGameChangeHistoryResponse\u003e\n      type: array\n    List_ImageBatchResponse_:\n      items:\n        $ref: \"#/components/schemas/ImageBatchResponse\"\n      title: List\u003cImageBatchResponse\u003e\n      type: array\n    List_ImageTypeResponse_:\n      items:\n        $ref: \"#/components/schemas/ImageTypeResponse\"\n      title: List\u003cImageTypeResponse\u003e\n      type: array\n    List_LanguageResponse_:\n      items:\n        $ref: \"#/components/schemas/LanguageResponse\"\n      title: List\u003cLanguageResponse\u003e\n      type: array\n    List_MostActiveResponse_:\n      items:\n        $ref: \"#/components/schemas/MostActiveResponse\"\n      title: List\u003cMostActiveResponse\u003e\n      type: array\n    List_MovieAlternateIdTypeResponse_:\n      items:\n        $ref: \"#/components/schemas/MovieAlternateIdTypeResponse\"\n      title: List\u003cMovieAlternateIdTypeResponse\u003e\n      type: array\n    List_MovieCertificationResponse_:\n      items:\n        $ref: \"#/components/schemas/MovieCertificationResponse\"\n      title: List\u003cMovieCertificationResponse\u003e\n      type: array\n    List_MovieChangeHistoryResponse_:\n      items:\n        $ref: \"#/components/schemas/MovieChangeHistoryResponse\"\n      title: List\u003cMovieChangeHistoryResponse\u003e\n      type: array\n    List_MovieChangeHistoryWithEntityResponse_:\n      items:\n        $ref: \"#/components/schemas/MovieChangeHistoryWithEntityResponse\"\n      title: List\u003cMovieChangeHistoryWithEntityResponse\u003e\n      type: array\n    List_MovieExternalIdMap_:\n      items:\n        $ref: \"#/components/schemas/MovieExternalIdMap\"\n      title: List\u003cMovieExternalIdMap\u003e\n      type: array\n    List_MovieGenreResponse_:\n      items:\n        $ref: \"#/components/schemas/MovieGenreResponse\"\n      title: List\u003cMovieGenreResponse\u003e\n      type: array\n    List_MovieReleaseTypeResponse_:\n      items:\n        $ref: \"#/components/schemas/MovieReleaseTypeResponse\"\n      title: List\u003cMovieReleaseTypeResponse\u003e\n      type: array\n    List_MovieResponse_:\n      items:\n        $ref: \"#/components/schemas/MovieResponse\"\n      title: List\u003cMovieResponse\u003e\n      type: array\n    List_OriginatingNetworkResponse_:\n      items:\n        $ref: \"#/components/schemas/OriginatingNetworkResponse\"\n      title: List\u003cOriginatingNetworkResponse\u003e\n      type: array\n    List_PersonChangeHistoryResponse_:\n      items:\n        $ref: \"#/components/schemas/PersonChangeHistoryResponse\"\n      title: List\u003cPersonChangeHistoryResponse\u003e\n      type: array\n    List_PersonChangeHistoryWithEntityResponse_:\n      items:\n        $ref: \"#/components/schemas/PersonChangeHistoryWithEntityResponse\"\n      title: List\u003cPersonChangeHistoryWithEntityResponse\u003e\n      type: array\n    List_PersonRankedResponse_:\n      items:\n        $ref: \"#/components/schemas/PersonRankedResponse\"\n      title: List\u003cPersonRankedResponse\u003e\n      type: array\n    List_PlatformHardwareResponse_:\n      items:\n        $ref: \"#/components/schemas/PlatformHardwareResponse\"\n      title: List\u003cPlatformHardwareResponse\u003e\n      type: array\n    List_PlatformOSResponse_:\n      items:\n        $ref: \"#/components/schemas/PlatformOSResponse\"\n      title: List\u003cPlatformOSResponse\u003e\n      type: array\n    List_ProgramVideo_:\n      items:\n        $ref: \"#/components/schemas/ProgramVideo\"\n      title: List\u003cProgramVideo\u003e\n      type: array\n    List_RecentVisitorsResponse_:\n      items:\n        $ref: \"#/components/schemas/RecentVisitorsResponse\"\n      title: List\u003cRecentVisitorsResponse\u003e\n      type: array\n    List_SearchEntertainmentAutoCompleteResponse_:\n      items:\n        $ref: \"#/components/schemas/SearchEntertainmentAutoCompleteResponse\"\n      title: List\u003cSearchEntertainmentAutoCompleteResponse\u003e\n      type: array\n    List_SeasonChangeHistoryResponse_:\n      items:\n        $ref: \"#/components/schemas/SeasonChangeHistoryResponse\"\n      title: List\u003cSeasonChangeHistoryResponse\u003e\n      type: array\n    List_SeasonChangeHistoryWithEntityResponse_:\n      items:\n        $ref: \"#/components/schemas/SeasonChangeHistoryWithEntityResponse\"\n      title: List\u003cSeasonChangeHistoryWithEntityResponse\u003e\n      type: array\n    List_ShowAlternateIdTypeResponse_:\n      items:\n        $ref: \"#/components/schemas/ShowAlternateIdTypeResponse\"\n      title: List\u003cShowAlternateIdTypeResponse\u003e\n      type: array\n    List_ShowChangeHistoryResponse_:\n      items:\n        $ref: \"#/components/schemas/ShowChangeHistoryResponse\"\n      title: List\u003cShowChangeHistoryResponse\u003e\n      type: array\n    List_ShowChangeHistoryWithEntityResponse_:\n      items:\n        $ref: \"#/components/schemas/ShowChangeHistoryWithEntityResponse\"\n      title: List\u003cShowChangeHistoryWithEntityResponse\u003e\n      type: array\n    List_ShowExternalIdMap_:\n      items:\n        $ref: \"#/components/schemas/ShowExternalIdMap\"\n      title: List\u003cShowExternalIdMap\u003e\n      type: array\n    List_ShowGenreResponse_:\n      items:\n        $ref: \"#/components/schemas/ShowGenreResponse\"\n      title: List\u003cShowGenreResponse\u003e\n      type: array\n    List_ShowReleaseTypeResponse_:\n      items:\n        $ref: \"#/components/schemas/ShowReleaseTypeResponse\"\n      title: List\u003cShowReleaseTypeResponse\u003e\n      type: array\n    List_TagResponse_:\n      items:\n        $ref: \"#/components/schemas/TagResponse\"\n      title: List\u003cTagResponse\u003e\n      type: array\n    List_TitleReportResponse_:\n      items:\n        $ref: \"#/components/schemas/TitleReportResponse\"\n      title: List\u003cTitleReportResponse\u003e\n      type: array\n    List_TrendSourceResponse_:\n      items:\n        $ref: \"#/components/schemas/TrendSourceResponse\"\n      title: List\u003cTrendSourceResponse\u003e\n      type: array\n    List_TvMediaCountryResponse_:\n      items:\n        $ref: \"#/components/schemas/TvMediaCountryResponse\"\n      title: List\u003cTvMediaCountryResponse\u003e\n      type: array\n    List_TvMediaGenreResponse_:\n      items:\n        $ref: \"#/components/schemas/TvMediaGenreResponse\"\n      title: List\u003cTvMediaGenreResponse\u003e\n      type: array\n    List_TvMediaGridResponse_:\n      items:\n        $ref: \"#/components/schemas/TvMediaGridResponse\"\n      title: List\u003cTvMediaGridResponse\u003e\n      type: array\n    List_TvMediaLeagueResponse_:\n      items:\n        $ref: \"#/components/schemas/TvMediaLeagueResponse\"\n      title: List\u003cTvMediaLeagueResponse\u003e\n      type: array\n    List_TvMediaLineupResponse_:\n      items:\n        $ref: \"#/components/schemas/TvMediaLineupResponse\"\n      title: List\u003cTvMediaLineupResponse\u003e\n      type: array\n    List_TvMediaListingResponse_:\n      items:\n        $ref: \"#/components/schemas/TvMediaListingResponse\"\n      title: List\u003cTvMediaListingResponse\u003e\n      type: array\n    List_TvMediaRegionResponse_:\n      items:\n        $ref: \"#/components/schemas/TvMediaRegionResponse\"\n      title: List\u003cTvMediaRegionResponse\u003e\n      type: array\n    List_TvMediaServiceAreaResponse_:\n      items:\n        $ref: \"#/components/schemas/TvMediaServiceAreaResponse\"\n      title: List\u003cTvMediaServiceAreaResponse\u003e\n      type: array\n    List_TvMediaShortListingResponse_:\n      items:\n        $ref: \"#/components/schemas/TvMediaShortListingResponse\"\n      title: List\u003cTvMediaShortListingResponse\u003e\n      type: array\n    List_TvMediaTeamResponse_:\n      items:\n        $ref: \"#/components/schemas/TvMediaTeamResponse\"\n      title: List\u003cTvMediaTeamResponse\u003e\n      type: array\n    List_VideoLogResponse_:\n      items:\n        $ref: \"#/components/schemas/VideoLogResponse\"\n      title: List\u003cVideoLogResponse\u003e\n      type: array\n    List_VideoTypeResponse_:\n      items:\n        $ref: \"#/components/schemas/VideoTypeResponse\"\n      title: List\u003cVideoTypeResponse\u003e\n      type: array\n    List_ViewersResponse_:\n      items:\n        $ref: \"#/components/schemas/ViewersResponse\"\n      title: List\u003cViewersResponse\u003e\n      type: array\n    List_ViewsResponse_:\n      items:\n        $ref: \"#/components/schemas/ViewsResponse\"\n      title: List\u003cViewsResponse\u003e\n      type: array\n    List_WebBrowsersResponse_:\n      items:\n        $ref: \"#/components/schemas/WebBrowsersResponse\"\n      title: List\u003cWebBrowsersResponse\u003e\n      type: array\n    MatchToEntertainmentMovie:\n      description: MatchToEntertainmentMovie\n      properties:\n        AlternateTitles:\n          description: Alternate Titles of movie to be matched.\n          items:\n            type: string\n          type: array\n        Cast:\n          description: Cast members of movie to be matched.\n          items:\n            type: string\n          type: array\n        Description:\n          description: Description of movie to be matched.\n          type: string\n        Directors:\n          description: Directors of movie to be matched.\n          items:\n            type: string\n          type: array\n        Poster:\n          description: Poster of movie to be matched.\n          type: string\n        ReleaseDate:\n          description: Release Date of movie to be matched.\n          format: date-time\n          type: string\n        StringDistance:\n          description: For fuzzy title match, default is 4, set to 0 for no fuzzy match.\n          format: int32\n          type: integer\n        Title:\n          description: Title of movie to be matched.\n          type: string\n        Year:\n          description: Release Year of movie to be matched.\n          format: int32\n          type: integer\n      required:\n        - Title\n      title: MatchToEntertainmentMovie\n      type: object\n    MatchToEntertainmentMovieResponse:\n      description: MatchToEntertainmentMovieResponse\n      properties:\n        Description:\n          description: Description of match operation result.\n          type: string\n        MovieMatches:\n          description: List of matched movies.\n          items:\n            $ref: \"#/components/schemas/DiscoverMovie\"\n          type: array\n        Score:\n          description: Score of the match to Entertainment.\n          format: int32\n          type: integer\n          nullable: false\n        Success:\n          description: Status of match operation.\n          type: boolean\n          nullable: false\n      title: MatchToEntertainmentMovieResponse\n      type: object\n    MatchToEntertainmentProgram:\n      description: MatchToEntertainmentProgram\n      properties:\n        AlternateTitles:\n          description: Alternate Titles of Program to be matched.\n          items:\n            type: string\n          type: array\n        Cast:\n          description: Cast members of Program to be matched.\n          items:\n            type: string\n          type: array\n        Description:\n          description: Description of Program to be matched.\n          type: string\n        Directors:\n          description: Directors of Program to be matched.\n          items:\n            type: string\n          type: array\n        EntertainmentId:\n          description: Id of Entertainment program to be matched against, if this is set no\n            search is run and data is compared to this program only.\n          format: int64\n          type: integer\n        LimitedResults:\n          type: boolean\n          nullable: false\n        OriginatingNetwork:\n          description: Originating network of SHOW Program to be matched.\n          type: string\n        Poster:\n          description: Poster of Program to be matched.\n          type: string\n        Producers:\n          description: Producers of Program to be matched.\n          items:\n            type: string\n          type: array\n        ProgramType:\n          description: Type of Program to be matched.\n          type: string\n        ReleaseDate:\n          description: Release Date of Program to be matched.\n          format: date-time\n          type: string\n        StringDistance:\n          description: For fuzzy title match, default is 4, set to 0 for no fuzzy match.\n          format: int32\n          type: integer\n          nullable: false\n        Title:\n          description: Title of Program to be matched.\n          type: string\n        Year:\n          description: Release Year of Program to be matched.\n          format: int32\n          type: integer\n      required:\n        - ProgramType\n        - EntertainmentId\n      title: MatchToEntertainmentProgram\n      type: object\n    MatchToEntertainmentProgramResponse:\n      description: MatchToEntertainmentProgramResponse\n      properties:\n        Description:\n          description: Description of match operation result.\n          type: string\n        EntertainmentId:\n          description: Entertainment program ID on successful match.\n          format: int64\n          type: integer\n        ProgramMatches:\n          description: List of matched Programs.\n          items:\n            $ref: \"#/components/schemas/DiscoverProgram\"\n          type: array\n        Score:\n          description: Score of the match to Entertainment.\n          format: int32\n          type: integer\n          nullable: false\n        Success:\n          description: Status of match operation.\n          type: boolean\n          nullable: false\n      title: MatchToEntertainmentProgramResponse\n      type: object\n    MatchToEntertainmentShow:\n      description: MatchToEntertainmentShow\n      properties:\n        AlternateTitles:\n          description: Alternate Titles of Show to be matched.\n          items:\n            type: string\n          type: array\n        Cast:\n          description: Cast members of Show to be matched.\n          items:\n            type: string\n          type: array\n        Description:\n          description: Description of Show to be matched.\n          type: string\n        Directors:\n          description: Directors of Show to be matched.\n          items:\n            type: string\n          type: array\n        Poster:\n          description: Poster of movie to be matched.\n          type: string\n        Producers:\n          description: Producers of Show to be matched.\n          items:\n            type: string\n          type: array\n        ReleaseDate:\n          description: Release Date of movie to be matched.\n          format: date-time\n          type: string\n        StringDistance:\n          description: For fuzzy title match, default is 4, set to 0 for no fuzzy match.\n          format: int32\n          type: integer\n        Title:\n          description: Title of Show to be matched.\n          type: string\n        Year:\n          description: Release Year of Show to be matched.\n          format: int32\n          type: integer\n      required:\n        - Title\n      title: MatchToEntertainmentShow\n      type: object\n    MatchToEntertainmentShowResponse:\n      description: MatchToEntertainmentShowResponse\n      properties:\n        Description:\n          description: Description of match operation result.\n          type: string\n        Score:\n          description: Score of the match to Entertainment.\n          format: int32\n          type: integer\n          nullable: false\n        ShowMatches:\n          description: List of matched Shows.\n          items:\n            $ref: \"#/components/schemas/DiscoverShow\"\n          type: array\n        Success:\n          description: Status of match operation.\n          type: boolean\n          nullable: false\n      title: MatchToEntertainmentShowResponse\n      type: object\n    MetacriticMovieResponse:\n      description: MetacriticMovieResponse\n      properties:\n        response:\n          $ref: \"#/components/schemas/MetacriticMovieResponseObj\"\n      title: MetacriticMovieResponse\n      type: object\n    MetacriticMovieResponseObj:\n      description: MetacriticMovieResponseObj\n      properties:\n        Product:\n          $ref: \"#/components/schemas/MetacriticMovieResponseProduct\"\n      title: MetacriticMovieResponseObj\n      type: object\n    MetacriticMovieResponseProduct:\n      description: MetacriticMovieResponseProduct\n      properties:\n        Metascore:\n          $ref: \"#/components/schemas/MetacriticMovieResponseProductMetascore\"\n        ReleaseDate:\n          format: date-time\n          type: string\n        Reviews:\n          $ref: \"#/components/schemas/MetacriticMovieResponseProductReviews\"\n        Title:\n          type: string\n        Url:\n          type: string\n        Userscore:\n          $ref: \"#/components/schemas/MetacriticMovieResponseProductUserscore\"\n        Year:\n          format: int32\n          type: integer\n      title: MetacriticMovieResponseProduct\n      type: object\n    MetacriticMovieResponseProductMetascore:\n      description: MetacriticMovieResponseProductMetascore\n      properties:\n        NegativeCount:\n          format: int32\n          type: integer\n        NeutralCount:\n          format: int32\n          type: integer\n        PositiveCount:\n          format: int32\n          type: integer\n        ReviewCount:\n          format: int32\n          type: integer\n        Score:\n          format: int32\n          type: integer\n      title: MetacriticMovieResponseProductMetascore\n      type: object\n    MetacriticMovieResponseProductReviews:\n      description: MetacriticMovieResponseProductReviews\n      properties:\n        Review:\n          items:\n            $ref: \"#/components/schemas/MetacriticMovieResponseProductReviewsReview\"\n          type: array\n      title: MetacriticMovieResponseProductReviews\n      type: object\n    MetacriticMovieResponseProductReviewsReview:\n      description: MetacriticMovieResponseProductReviewsReview\n      properties:\n        Critic:\n          $ref: \"#/components/schemas/MetacriticMovieResponseProductReviewsReviewCr\\\n            itic\"\n        Date:\n          format: date-time\n          type: string\n        Publication:\n          $ref: \"#/components/schemas/MetacriticMovieResponseProductReviewsReviewPu\\\n            blication\"\n        Quote:\n          type: string\n        Score:\n          format: int32\n          type: integer\n        Url:\n          type: string\n      title: MetacriticMovieResponseProductReviewsReview\n      type: object\n    MetacriticMovieResponseProductReviewsReviewCritic:\n      description: MetacriticMovieResponseProductReviewsReviewCritic\n      properties:\n        Name:\n          type: string\n      title: MetacriticMovieResponseProductReviewsReviewCritic\n      type: object\n    MetacriticMovieResponseProductReviewsReviewPublication:\n      description: MetacriticMovieResponseProductReviewsReviewPublication\n      properties:\n        Name:\n          type: string\n      title: MetacriticMovieResponseProductReviewsReviewPublication\n      type: object\n    MetacriticMovieResponseProductUserscore:\n      description: MetacriticMovieResponseProductUserscore\n      properties:\n        NegativeCount:\n          format: int32\n          type: integer\n        NeutralCount:\n          format: int32\n          type: integer\n        PositiveCount:\n          format: int32\n          type: integer\n        RatingCount:\n          format: int32\n          type: integer\n        Score:\n          format: double\n          type: number\n      title: MetacriticMovieResponseProductUserscore\n      type: object\n    MetacriticTvResponse:\n      description: MetacriticTvResponse\n      properties:\n        response:\n          $ref: \"#/components/schemas/MetacriticTvResponseObj\"\n      title: MetacriticTvResponse\n      type: object\n    MetacriticTvResponseObj:\n      description: MetacriticTvResponseObj\n      properties:\n        Product:\n          $ref: \"#/components/schemas/MetacriticTvResponseProduct\"\n      title: MetacriticTvResponseObj\n      type: object\n    MetacriticTvResponseProduct:\n      description: MetacriticTvResponseProduct\n      properties:\n        Metascore:\n          $ref: \"#/components/schemas/MetacriticTvResponseProductMetascore\"\n        Reviews:\n          $ref: \"#/components/schemas/MetacriticTvResponseProductReviews\"\n        StartDate:\n          format: date-time\n          type: string\n        Title:\n          type: string\n        Url:\n          type: string\n        Userscore:\n          $ref: \"#/components/schemas/MetacriticTvResponseProductUserscore\"\n      title: MetacriticTvResponseProduct\n      type: object\n    MetacriticTvResponseProductMetascore:\n      description: MetacriticTvResponseProductMetascore\n      properties:\n        NegativeCount:\n          format: int32\n          type: integer\n        NeutralCount:\n          format: int32\n          type: integer\n        PositiveCount:\n          format: int32\n          type: integer\n        ReviewCount:\n          format: int32\n          type: integer\n        Score:\n          format: int32\n          type: integer\n      title: MetacriticTvResponseProductMetascore\n      type: object\n    MetacriticTvResponseProductReviews:\n      description: MetacriticTvResponseProductReviews\n      properties:\n        Review:\n          items:\n            $ref: \"#/components/schemas/MetacriticTvResponseProductReviewsReview\"\n          type: array\n      title: MetacriticTvResponseProductReviews\n      type: object\n    MetacriticTvResponseProductReviewsReview:\n      description: MetacriticTvResponseProductReviewsReview\n      properties:\n        Critic:\n          $ref: \"#/components/schemas/MetacriticTvResponseProductReviewsReviewCritic\"\n        Date:\n          format: date-time\n          type: string\n        Publication:\n          $ref: \"#/components/schemas/MetacriticTvResponseProductReviewsReviewPubli\\\n            cation\"\n        Quote:\n          type: string\n        Score:\n          format: int32\n          type: integer\n        Url:\n          type: string\n      title: MetacriticTvResponseProductReviewsReview\n      type: object\n    MetacriticTvResponseProductReviewsReviewCritic:\n      description: MetacriticTvResponseProductReviewsReviewCritic\n      properties:\n        Name:\n          type: string\n      title: MetacriticTvResponseProductReviewsReviewCritic\n      type: object\n    MetacriticTvResponseProductReviewsReviewPublication:\n      description: MetacriticTvResponseProductReviewsReviewPublication\n      properties:\n        Name:\n          type: string\n      title: MetacriticTvResponseProductReviewsReviewPublication\n      type: object\n    MetacriticTvResponseProductUserscore:\n      description: MetacriticTvResponseProductUserscore\n      properties:\n        NegativeCount:\n          format: int32\n          type: integer\n        NeutralCount:\n          format: int32\n          type: integer\n        PositiveCount:\n          format: int32\n          type: integer\n        RatingCount:\n          format: int32\n          type: integer\n        Score:\n          format: double\n          type: number\n      title: MetacriticTvResponseProductUserscore\n      type: object\n    MostActiveResponse:\n      description: MostActiveResponse\n      properties:\n        UserIpAddress:\n          type: string\n        Visits:\n          format: int32\n          type: integer\n          nullable: false\n      title: MostActiveResponse\n      type: object\n    Movie:\n      description: Movie\n      properties:\n        AlternateTitles:\n          description: List of alternate titles for this Movie.\n          items:\n            $ref: \"#/components/schemas/MovieAlternateTitle\"\n          type: array\n        Availabilities:\n          description: List of movie offers.\n          items:\n            $ref: \"#/components/schemas/MovieAvailabilityResponse\"\n          type: array\n        Budget:\n          description: Movie budget\n          format: int64\n          type: integer\n        Companies:\n          description: List of companies (Production, Distribution, etc.) associated with\n            Movie.\n          items:\n            $ref: \"#/components/schemas/Company\"\n          type: array\n        Contributors:\n          description: List of contributors (Cast, Director, Writer, Production, etc.) for\n            this Movie.\n          items:\n            $ref: \"#/components/schemas/MovieContributor\"\n          type: array\n        Created:\n          description: DateTime Movie record created.\n          format: date-time\n          type: string\n          nullable: false\n        Descriptions:\n          description: List of descriptions for this Movie.\n          items:\n            $ref: \"#/components/schemas/MovieDescription\"\n          type: array\n        ExternalIds:\n          description: List of external Ids associated with Movie.\n          items:\n            $ref: \"#/components/schemas/ExternalId\"\n          type: array\n        Genres:\n          description: List of genres associated with Movie.\n          items:\n            $ref: \"#/components/schemas/MovieGenre\"\n          type: array\n        Id:\n          description: Unique ID of the Movie.\n          format: int64\n          type: integer\n          nullable: false\n        Idx:\n          description: Index to differentiate movies with identical titles and year.\n          type: string\n        Images:\n          description: List of images associated with Movie.\n          items:\n            $ref: \"#/components/schemas/MovieImage\"\n          type: array\n        Modified:\n          description: DateTime Movie record last modified.\n          format: date-time\n          type: string\n          nullable: false\n        OfficialSiteUrl:\n          description: Movie website home page.\n          type: string\n        OriginalLanguage:\n          description: ID of Movie original language.\n          type: string\n        OriginalReleaseDate:\n          description: First generally available release regardless of country. Excludes\n            festivals and premieres.\n          format: date-time\n          type: string\n        OriginalTitle:\n          type: string\n        RedirectTo:\n          description: Redirect to.\n          type: string\n        Releases:\n          description: List of releases associated with Movie.\n          items:\n            $ref: \"#/components/schemas/MovieRelease\"\n          type: array\n        Revenue:\n          description: Total revenue generated by Movie.\n          format: int64\n          type: integer\n        Runtime:\n          description: Movie runtime in minutes.\n          format: int32\n          type: integer\n        Status:\n          description: Status of movie.\n          type: string\n        Tags:\n          description: List of tags associated with Movie.\n          items:\n            $ref: \"#/components/schemas/MovieTag\"\n          type: array\n        TimeStamp:\n          description: Time of last change to overall object.\n          format: date-time\n          type: string\n        Title:\n          description: English version of any foreign Original Title.\n          type: string\n        Type:\n          description: \"Type of movie. Ex: Tv Movie, Short, etc.\"\n          type: string\n        VersionId:\n          description: Record Version Id\n          format: int64\n          type: integer\n          nullable: false\n        Videos:\n          description: List of videos associated with Movie.\n          items:\n            $ref: \"#/components/schemas/MovieVideo\"\n          type: array\n        Year:\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - OriginalTitle\n        - Year\n      title: Movie\n      type: object\n    MovieAlternateIdTypeResponse:\n      description: MovieAlternateIdTypeResponse\n      properties:\n        Id:\n          description: ID of AlternateIdType.\n          format: int32\n          type: integer\n          nullable: false\n        Type:\n          description: Provider type of AlternateId.\n          type: string\n      title: MovieAlternateIdTypeResponse\n      type: object\n    MovieAlternateTitle:\n      description: MovieAlternateTitle\n      properties:\n        Country:\n          description: Country associated with this alternate title.\n          type: string\n        Id:\n          description: Unique ID of this MovieAlternateTitle\n          format: int64\n          type: integer\n        Title:\n          description: The alternate title.\n          type: string\n      title: MovieAlternateTitle\n      type: object\n    MovieAvailabilityResponse:\n      description: MovieAvailabilityResponse\n      properties:\n        Country:\n          type: string\n        Currency:\n          type: string\n        DeliveryMethod:\n          type: string\n        ExpirationDate:\n          format: date-time\n          type: string\n        Links:\n          items:\n            $ref: \"#/components/schemas/OfferLink\"\n          type: array\n        OfferType:\n          type: string\n        PreSale:\n          type: boolean\n          nullable: false\n        Price:\n          format: double\n          type: number\n          nullable: false\n        Provider:\n          type: string\n        Quality:\n          type: string\n        StartDate:\n          format: date-time\n          type: string\n        Title:\n          type: string\n      title: MovieAvailabilityResponse\n      type: object\n    MovieCertificationResponse:\n      description: MovieCertificationResponse\n      properties:\n        Certification:\n          description: Movie certification or Rating.\n          type: string\n        Country:\n          $ref: \"#/components/schemas/Country\"\n        Definition:\n          description: Definition of MovieCertification.\n          type: string\n        Id:\n          description: Unique ID of MovieCertification.\n          format: int32\n          type: integer\n          nullable: false\n        Order:\n          description: Rank of MovieCertification from youngest to oldest.\n          format: int32\n          type: integer\n          nullable: false\n      title: MovieCertificationResponse\n      type: object\n    MovieChangeHistoryResponse:\n      description: MovieChangeHistoryResponse\n      properties:\n        MovieId:\n          description: Unique ID of a Movie.\n          format: int64\n          type: integer\n          nullable: false\n      title: MovieChangeHistoryResponse\n      type: object\n    MovieChangeHistoryWithEntityResponse:\n      description: MovieChangeHistoryWithEntityResponse\n      properties:\n        Entity:\n          description: Object belonging to Movie that has changed.\n          type: string\n        MovieId:\n          description: Unique ID of a Movie.\n          format: int64\n          type: integer\n          nullable: false\n      title: MovieChangeHistoryWithEntityResponse\n      type: object\n    MovieContributor:\n      description: MovieContributor\n      properties:\n        Character:\n          description: Role played by MovieContributor.\n          type: string\n        Id:\n          description: Unique ID of the MovieContributor object.\n          format: int64\n          type: integer\n        Job:\n          description: Job of Person associated with MovieContributor.\n          type: string\n        Order:\n          description: Rank of MovieContributor in list for Movie (cast).\n          format: int32\n          type: integer\n          nullable: false\n        PersonId:\n          description: ID of Person associated with MovieContributor.\n          format: int64\n          type: integer\n          nullable: false\n        PersonName:\n          description: Person's Name associated with MovieContributor.\n          type: string\n      title: MovieContributor\n      type: object\n    MovieDescription:\n      description: MovieDescription\n      properties:\n        Attribution:\n          description: Source of MovieDescription.\n          type: string\n        Description:\n          description: Movie Description.\n          type: string\n        Id:\n          description: Unique ID of this MovieDescription\n          format: int64\n          type: integer\n        Language:\n          description: Language object for language of MovieDescription.\n          type: string\n      title: MovieDescription\n      type: object\n    MovieExternalIdMap:\n      description: MovieExternalIdMap\n      properties:\n        ExternalId:\n          type: string\n        MovieId:\n          format: int64\n          type: integer\n          nullable: false\n      title: MovieExternalIdMap\n      type: object\n    MovieGenre:\n      description: MovieGenre\n      properties:\n        Id:\n          description: Id of the Genre object.\n          format: int32\n          type: integer\n        Name:\n          description: Name of the Genre.\n          type: string\n      title: MovieGenre\n      type: object\n    MovieGenreResponse:\n      description: MovieGenreResponse\n      properties:\n        Id:\n          description: Id of the Genre object.\n          format: int32\n          type: integer\n        Name:\n          description: Name of the Genre.\n          type: string\n      title: MovieGenreResponse\n      type: object\n    MovieImage:\n      description: MovieImage\n      properties:\n        FilePath:\n          description: Filepath (location) of MovieImage.\n          type: string\n        Height:\n          description: Height in pixels of MovieImage.\n          format: int32\n          type: integer\n          nullable: false\n        ImageType:\n          description: ImageType of MovieImage.\n          type: string\n        Language:\n          description: Language associated with MovieImage.\n          type: string\n        Modified:\n          description: Time when image was last modified.\n          format: date-time\n          type: string\n        Official:\n          description: Determines if image is official.\n          type: boolean\n        Sexuality:\n          description: 1-5 (Veru-Unlikely to Very-Likely) probability of sexual theme in\n            image.\n          format: int32\n          type: integer\n        Tags:\n          description: List of Tags associated with this MovieImage\n          items:\n            $ref: \"#/components/schemas/MovieTag\"\n          type: array\n        Violence:\n          description: 1-5 (Veru-Unlikely to Very-Likely) probability of violent theme in\n            image.\n          format: int32\n          type: integer\n        Width:\n          description: Width in pixels of MovieImage.\n          format: int32\n          type: integer\n          nullable: false\n      title: MovieImage\n      type: object\n    MovieRelease:\n      description: MovieRelease\n      properties:\n        Certification:\n          description: Certification for MovieRelease.\n          type: string\n        Country:\n          description: The Country Movie was released.\n          type: string\n        Date:\n          description: Date of this MovieRelease.\n          format: date-time\n          type: string\n        Type:\n          description: The type of this MovieRelease.\n          type: string\n      title: MovieRelease\n      type: object\n    MovieReleaseTypeResponse:\n      description: MovieReleaseTypeResponse\n      properties:\n        Id:\n          description: Unique ID of MovieReleaseType.\n          format: int32\n          type: integer\n          nullable: false\n        Type:\n          description: Name of MovieReleaseType.\n          type: string\n      title: MovieReleaseTypeResponse\n      type: object\n    MovieResponse:\n      description: MovieResponse\n      properties:\n        AlternateTitles:\n          description: List of alternate titles for this Movie.\n          items:\n            $ref: \"#/components/schemas/MovieAlternateTitle\"\n          type: array\n        Availabilities:\n          description: List of movie offers.\n          items:\n            $ref: \"#/components/schemas/MovieAvailabilityResponse\"\n          type: array\n        Budget:\n          description: Movie budget\n          format: int64\n          type: integer\n        Companies:\n          description: List of companies (Production, Distribution, etc.) associated with\n            Movie.\n          items:\n            $ref: \"#/components/schemas/Company\"\n          type: array\n        Contributors:\n          description: List of contributors (Cast, Director, Writer, Production, etc.) for\n            this Movie.\n          items:\n            $ref: \"#/components/schemas/MovieContributor\"\n          type: array\n        Created:\n          description: DateTime Movie record created.\n          format: date-time\n          type: string\n          nullable: false\n        Descriptions:\n          description: List of descriptions for this Movie.\n          items:\n            $ref: \"#/components/schemas/MovieDescription\"\n          type: array\n        ExternalIds:\n          description: List of external Ids associated with Movie.\n          items:\n            $ref: \"#/components/schemas/ExternalId\"\n          type: array\n        Genres:\n          description: List of genres associated with Movie.\n          items:\n            $ref: \"#/components/schemas/MovieGenre\"\n          type: array\n        Id:\n          description: Unique ID of the Movie.\n          format: int64\n          type: integer\n          nullable: false\n        Idx:\n          description: Index to differentiate movies with identical titles and year.\n          type: string\n        Images:\n          description: List of images associated with Movie.\n          items:\n            $ref: \"#/components/schemas/MovieImage\"\n          type: array\n        Modified:\n          description: DateTime Movie record last modified.\n          format: date-time\n          type: string\n          nullable: false\n        OfficialSiteUrl:\n          description: Movie website home page.\n          type: string\n        OriginalLanguage:\n          description: ID of Movie original language.\n          type: string\n        OriginalReleaseDate:\n          description: First generally available release regardless of country. Excludes\n            festivals and premieres.\n          format: date-time\n          type: string\n        OriginalTitle:\n          type: string\n        RedirectTo:\n          description: Redirect to.\n          type: string\n        Releases:\n          description: List of releases associated with Movie.\n          items:\n            $ref: \"#/components/schemas/MovieRelease\"\n          type: array\n        Revenue:\n          description: Total revenue generated by Movie.\n          format: int64\n          type: integer\n        Runtime:\n          description: Movie runtime in minutes.\n          format: int32\n          type: integer\n        Status:\n          description: Status of movie.\n          type: string\n        Tags:\n          description: List of tags associated with Movie.\n          items:\n            $ref: \"#/components/schemas/MovieTag\"\n          type: array\n        TimeStamp:\n          description: Time of last change to overall object.\n          format: date-time\n          type: string\n        Title:\n          description: English version of any foreign Original Title.\n          type: string\n        Type:\n          description: \"Type of movie. Ex: Tv Movie, Short, etc.\"\n          type: string\n        VersionId:\n          description: Record Version Id\n          format: int64\n          type: integer\n          nullable: false\n        Videos:\n          description: List of videos associated with Movie.\n          items:\n            $ref: \"#/components/schemas/MovieVideo\"\n          type: array\n        Year:\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - OriginalTitle\n        - Year\n      title: MovieResponse\n      type: object\n    MovieResult:\n      description: MovieResult\n      properties:\n        Document:\n          $ref: \"#/components/schemas/DiscoverMovie\"\n        Score:\n          description: Score of this match in Movie search.\n          format: double\n          type: number\n          nullable: false\n      title: MovieResult\n      type: object\n    MovieTag:\n      description: MovieTag\n      properties:\n        Name:\n          description: Name of the Tag.\n          type: string\n        TagId:\n          description: ID of the Tag.\n          format: int64\n          type: integer\n          nullable: false\n      title: MovieTag\n      type: object\n    MovieVideo:\n      description: MovieVideo\n      properties:\n        AllowAdvertising:\n          description: Flag denoting if pre-roll video ads are allowed in front of content.\n          type: boolean\n          nullable: false\n        Certification:\n          description: Certification for MovieVideo.\n          type: boolean\n        Clean:\n          description: True if Certification, Theatrical, and HomeVideo are False.\n          type: boolean\n        Company:\n          description: Company associated with MovieVideo.\n          type: string\n        Duration:\n          description: Runtime of MovieVideo.\n          format: int32\n          type: integer\n          nullable: false\n        Encoded:\n          description: Datetime MovieVideo was encoded.\n          format: date-time\n          type: string\n          nullable: false\n        Encodes:\n          description: List of Encodes (bitrate and type) for MovieVideo.\n          items:\n            $ref: \"#/components/schemas/MovieVideoEncode\"\n          type: array\n        ExpirationDate:\n          description: Date MovieVideo expires.\n          format: date-time\n          type: string\n        HomeVideo:\n          description: Flag for promoting Home Video.\n          type: boolean\n        Id:\n          description: Unique ID of MovieVideo.\n          format: int64\n          type: integer\n          nullable: false\n        Language:\n          description: Language associated with MovieVideo.\n          type: string\n        LanguageSubtitled:\n          description: Subtitle language associated with MovieVideo.\n          type: string\n        Mature:\n          description: Flag for designating video content not suitable for children. Age\n            gate required.\n          type: boolean\n          nullable: false\n        ScreenCaptures:\n          description: List of screen captures from MovieVideo.\n          items:\n            $ref: \"#/components/schemas/MovieVideoScreenCapture\"\n          type: array\n        SourceVideoHeight:\n          description: Height in pixels of MovieVideo.\n          format: int32\n          type: integer\n          nullable: false\n        SourceVideoWidth:\n          description: Width in pixels of MovieVideo.\n          format: int32\n          type: integer\n          nullable: false\n        StartDate:\n          description: First date of MovieVideo availability.\n          format: date-time\n          type: string\n        TargetCountries:\n          description: List of countries targeted by MovieVideo.\n          items:\n            $ref: \"#/components/schemas/TargetCountry\"\n          type: array\n        Theatrical:\n          description: Flag for promoting Theatrical release.\n          type: boolean\n        Title:\n          description: Title of MovieVideo, not Movie.\n          type: string\n        Type:\n          description: VideoType for the MovieVideo.\n          type: string\n      title: MovieVideo\n      type: object\n    MovieVideoEncode:\n      description: MovieVideoEncode\n      properties:\n        BitRate:\n          description: BitRate of MovieVideoEncode.\n          format: int32\n          type: integer\n        EncodeType:\n          description: Datetime when the MovieVideoEncode was encoded.\n          type: string\n        Id:\n          description: Unique ID of the video encode\n          format: int64\n          type: integer\n      title: MovieVideoEncode\n      type: object\n    MovieVideoScreenCapture:\n      description: MovieVideoScreenCapture\n      properties:\n        Aspect:\n          description: Aspect ratio of MovieVideoScreenCapture.\n          type: string\n        FilePath:\n          description: Filepath (location) of MovieVideoScreenCapture.\n          type: string\n        Height:\n          description: Height in pixels of MovieVideoScreenCapture.\n          format: int32\n          type: integer\n          nullable: false\n        Id:\n          description: Unique ID of the screen capture\n          format: int64\n          type: integer\n        Width:\n          description: Width in pixels of MovieVideoScreenCapture.\n          format: int32\n          type: integer\n          nullable: false\n      title: MovieVideoScreenCapture\n      type: object\n    MyProgram:\n      description: MyProgram\n      properties:\n        Created:\n          description: DateTime MyProgram record created.\n          format: date-time\n          type: string\n          nullable: false\n        CustomMetadata:\n          description: List of custom metadata entries.\n          items:\n            $ref: \"#/components/schemas/CustomMetadata\"\n          type: array\n        CustomerId:\n          description: Client ID MyProgram belongs to.\n          format: int64\n          type: integer\n          nullable: false\n        EntertainmentConnections:\n          description: List of connections to existing Entertainment programs.\n          items:\n            $ref: \"#/components/schemas/EntertainmentConnection\"\n          type: array\n        Id:\n          description: Unique ID of MyProgram.\n          format: int64\n          type: integer\n          nullable: false\n        Modified:\n          description: DateTime MyProgram record last modified.\n          format: date-time\n          type: string\n          nullable: false\n        ReferenceId:\n          description: Client reference ID of MyProgram.\n          type: string\n        Title:\n          description: Title of MyProgram.\n          type: string\n      title: MyProgram\n      type: object\n    MyProgramResponse:\n      description: MyProgramResponse\n      properties:\n        Created:\n          description: DateTime MyProgram record created.\n          format: date-time\n          type: string\n          nullable: false\n        CustomMetadata:\n          description: List of custom metadata entries.\n          items:\n            $ref: \"#/components/schemas/CustomMetadata\"\n          type: array\n        CustomerId:\n          description: Client ID MyProgram belongs to.\n          format: int64\n          type: integer\n          nullable: false\n        EntertainmentConnections:\n          description: List of connections to existing Entertainment programs.\n          items:\n            $ref: \"#/components/schemas/EntertainmentConnection\"\n          type: array\n        Id:\n          description: Unique ID of MyProgram.\n          format: int64\n          type: integer\n          nullable: false\n        Modified:\n          description: DateTime MyProgram record last modified.\n          format: date-time\n          type: string\n          nullable: false\n        ReferenceId:\n          description: Client reference ID of MyProgram.\n          type: string\n        Title:\n          description: Title of MyProgram.\n          type: string\n      title: MyProgramResponse\n      type: object\n    MyVideo:\n      description: MyVideo\n      properties:\n        Companies:\n          description: Companies of MyVideo.\n          items:\n            type: string\n          type: array\n        Created:\n          description: DateTime MyVideo was created.\n          format: date-time\n          type: string\n          nullable: false\n        CustomerId:\n          description: Client ID MyVideo belongs to.\n          format: int64\n          type: integer\n          nullable: false\n        Descriptions:\n          description: Description of MyVideo.\n          items:\n            $ref: \"#/components/schemas/MyVideoDescription\"\n          type: array\n        Duration:\n          description: Runtime of MyVideo.\n          format: int32\n          type: integer\n        Encoded:\n          description: DateTime MyVideo was encoded.\n          format: date-time\n          type: string\n        Encodes:\n          description: List of Encodes (bitrate and type) for MyVideo.\n          items:\n            $ref: \"#/components/schemas/MyVideoEncode\"\n          type: array\n        EntertainmentConnections:\n          description: List of connections to existing Entertainment programs.\n          items:\n            $ref: \"#/components/schemas/EntertainmentConnection\"\n          type: array\n        ExpirationDate:\n          description: Date MyVideo expires / becomes unavailable for streaming.\n          format: date-time\n          type: string\n        Id:\n          description: Unique ID of MyVideo.\n          format: int64\n          type: integer\n          nullable: false\n        Modified:\n          description: DateTime MyVideo was last modified.\n          format: date-time\n          type: string\n          nullable: false\n        ReferenceId:\n          description: Client reference ID of MyVideo.\n          type: string\n        ScreenCaptures:\n          description: List of screen captures from MyVideo.\n          items:\n            $ref: \"#/components/schemas/MyVideoScreenCapture\"\n          type: array\n        SourceVideoHeight:\n          description: Height in pixels of ProprietaryVideo.\n          format: int32\n          type: integer\n        SourceVideoWidth:\n          description: Width in pixels of ProprietaryVideo.\n          format: int32\n          type: integer\n        StartDate:\n          description: First date of MyVideo availability.\n          format: date-time\n          type: string\n        Title:\n          description: Title of MyVideo.\n          type: string\n      title: MyVideo\n      type: object\n    MyVideoDescription:\n      description: MyVideoDescription\n      properties:\n        Description:\n          description: MyVideo description.\n          type: string\n      title: MyVideoDescription\n      type: object\n    MyVideoEncode:\n      description: MyVideoEncode\n      properties:\n        BitRate:\n          description: BitRate of encode.\n          format: int32\n          type: integer\n        EncodeType:\n          description: Encode type.\n          type: string\n      title: MyVideoEncode\n      type: object\n    MyVideoResponse:\n      description: MyVideoResponse\n      properties:\n        Companies:\n          description: Companies of MyVideo.\n          items:\n            type: string\n          type: array\n        Created:\n          description: DateTime MyVideo was created.\n          format: date-time\n          type: string\n          nullable: false\n        CustomerId:\n          description: Client ID MyVideo belongs to.\n          format: int64\n          type: integer\n          nullable: false\n        Descriptions:\n          description: Description of MyVideo.\n          items:\n            $ref: \"#/components/schemas/MyVideoDescription\"\n          type: array\n        Duration:\n          description: Runtime of MyVideo.\n          format: int32\n          type: integer\n        Encoded:\n          description: DateTime MyVideo was encoded.\n          format: date-time\n          type: string\n        Encodes:\n          description: List of Encodes (bitrate and type) for MyVideo.\n          items:\n            $ref: \"#/components/schemas/MyVideoEncode\"\n          type: array\n        EntertainmentConnections:\n          description: List of connections to existing Entertainment programs.\n          items:\n            $ref: \"#/components/schemas/EntertainmentConnection\"\n          type: array\n        ExpirationDate:\n          description: Date MyVideo expires / becomes unavailable for streaming.\n          format: date-time\n          type: string\n        Id:\n          description: Unique ID of MyVideo.\n          format: int64\n          type: integer\n          nullable: false\n        Modified:\n          description: DateTime MyVideo was last modified.\n          format: date-time\n          type: string\n          nullable: false\n        ReferenceId:\n          description: Client reference ID of MyVideo.\n          type: string\n        ScreenCaptures:\n          description: List of screen captures from MyVideo.\n          items:\n            $ref: \"#/components/schemas/MyVideoScreenCapture\"\n          type: array\n        SourceVideoHeight:\n          description: Height in pixels of ProprietaryVideo.\n          format: int32\n          type: integer\n        SourceVideoWidth:\n          description: Width in pixels of ProprietaryVideo.\n          format: int32\n          type: integer\n        StartDate:\n          description: First date of MyVideo availability.\n          format: date-time\n          type: string\n        Title:\n          description: Title of MyVideo.\n          type: string\n      title: MyVideoResponse\n      type: object\n    MyVideoScreenCapture:\n      description: MyVideoScreenCapture\n      properties:\n        Aspect:\n          description: Aspect ratio of screen capture.\n          type: string\n        FilePath:\n          description: File path (location) of screen capture. Use with Image service\n            endpoint.\n          type: string\n        Height:\n          description: Height in pixels of screen capture.\n          format: int32\n          type: integer\n          nullable: false\n        Width:\n          description: Width in pixels of screen capture.\n          format: int32\n          type: integer\n          nullable: false\n      title: MyVideoScreenCapture\n      type: object\n    NameValueFilter:\n      description: NameValueFilter\n      properties:\n        Name:\n          type: string\n        Value:\n          type: string\n      title: NameValueFilter\n      type: object\n    Object:\n      description: Object\n      properties: {}\n      type: object\n    OfferLink:\n      description: OfferLink\n      properties:\n        Platform:\n          type: string\n        Url:\n          type: string\n      title: OfferLink\n      type: object\n    OriginatingNetworkResponse:\n      description: OriginatingNetworkResponse\n      properties:\n        AlternateNames:\n          items:\n            type: string\n          type: array\n        FullName:\n          type: string\n        Name:\n          type: string\n        Packages:\n          items:\n            type: string\n            nullable: false\n          type: array\n      title: OriginatingNetworkResponse\n      type: object\n    Person:\n      description: Person\n      properties:\n        AlternateNames:\n          description: List of PersonName associated with this Person.\n          items:\n            type: string\n          type: array\n        BirthDate:\n          $ref: \"#/components/schemas/FlexDate\"\n        BirthName:\n          description: Name of Person at birth.\n          type: string\n        DeathDate:\n          $ref: \"#/components/schemas/FlexDate\"\n        Descriptions:\n          description: List of biographies for this person.\n          items:\n            $ref: \"#/components/schemas/PersonDescription\"\n          type: array\n        ExternalIds:\n          description: List of alternate Ids associated with this person.\n          items:\n            $ref: \"#/components/schemas/PersonAlternateId\"\n          type: array\n        Gender:\n          description: Gender of Person.\n          type: string\n        Id:\n          description: Unique ID of a Person.\n          format: int64\n          type: integer\n          nullable: false\n        Images:\n          description: List of Images associated with this Person.\n          items:\n            $ref: \"#/components/schemas/PersonImage\"\n          type: array\n        Modified:\n          description: Datetime Person was last modified.\n          format: date-time\n          type: string\n          nullable: false\n        Name:\n          description: Full Name of this Person.\n          type: string\n        Tags:\n          description: List of tags associated with person.\n          items:\n            $ref: \"#/components/schemas/PersonTag\"\n          type: array\n        TimeStamp:\n          description: Time of last change to overall object.\n          format: date-time\n          type: string\n        VersionId:\n          description: Record Version Id\n          format: int64\n          type: integer\n          nullable: false\n      title: Person\n      type: object\n    PersonAlternateId:\n      description: PersonAlternateId\n      properties:\n        AlternateId:\n          type: string\n        Modified:\n          format: date-time\n          type: string\n        Type:\n          type: string\n      title: PersonAlternateId\n      type: object\n    PersonChangeHistoryResponse:\n      description: PersonChangeHistoryResponse\n      properties:\n        PersonId:\n          description: ID of the Person.\n          format: int64\n          type: integer\n          nullable: false\n      title: PersonChangeHistoryResponse\n      type: object\n    PersonChangeHistoryWithEntityResponse:\n      description: PersonChangeHistoryWithEntityResponse\n      properties:\n        Entity:\n          description: Object belonging to Person that has changed.\n          type: string\n        PersonId:\n          description: ID of the Person.\n          format: int64\n          type: integer\n          nullable: false\n      title: PersonChangeHistoryWithEntityResponse\n      type: object\n    PersonDescription:\n      description: PersonDescription\n      properties:\n        Attribution:\n          description: Source of PersonDescription.\n          type: string\n        Description:\n          description: Person Description.\n          type: string\n        Id:\n          description: Unique ID of this PersonDescription\n          format: int64\n          type: integer\n        Language:\n          description: Language object for language of PersonDescription.\n          type: string\n      title: PersonDescription\n      type: object\n    PersonImage:\n      description: PersonImage\n      properties:\n        Attribution:\n          description: Source credit for PersonImage.\n          type: string\n        EpisodeId:\n          description: Entertainment Episode ID of the episode this image is from.\n          format: int64\n          type: integer\n        FaceDetails:\n          $ref: \"#/components/schemas/FaceDetails\"\n        FilePath:\n          description: Filepath (location) of PersonImage.\n          type: string\n        Height:\n          description: Height in pixels of PersonImage.\n          format: int32\n          type: integer\n          nullable: false\n        Id:\n          description: Unique ID of this PersonImage\n          format: int64\n          type: integer\n        ImageType:\n          description: ImageType of PersonImage.\n          type: string\n        Modified:\n          description: Time of last image modificication.\n          format: date-time\n          type: string\n        MovieId:\n          description: Entertainment Movie ID of the movie this image is from.\n          format: int64\n          type: integer\n        Official:\n          description: Determines if image is official.\n          type: boolean\n        SeasonId:\n          description: Entertainment Season ID of the season this image is from.\n          format: int64\n          type: integer\n        Sexuality:\n          description: 1-5 (Very-Unlikely to Very-Likely) probability of sexual theme in\n            image.\n          format: int32\n          type: integer\n        ShowId:\n          description: Entertainment Show ID of the show this image is from.\n          format: int64\n          type: integer\n        Tags:\n          description: List of Tags associated with this PersonImage\n          items:\n            $ref: \"#/components/schemas/PersonTag\"\n          type: array\n        Violence:\n          description: 1-5 (Very-Unlikely to Very-Likely) probability of violent theme in\n            image.\n          format: int32\n          type: integer\n        Width:\n          description: Width in pixels of PersonImage.\n          format: int32\n          type: integer\n          nullable: false\n      title: PersonImage\n      type: object\n    PersonRankedResponse:\n      description: PersonRankedResponse\n      properties:\n        FilePath:\n          type: string\n        Id:\n          format: int64\n          type: integer\n          nullable: false\n        Name:\n          type: string\n      title: PersonRankedResponse\n      type: object\n    PersonResponse:\n      description: PersonResponse\n      properties:\n        AlternateNames:\n          description: List of PersonName associated with this Person.\n          items:\n            type: string\n          type: array\n        BirthDate:\n          $ref: \"#/components/schemas/FlexDate\"\n        BirthName:\n          description: Name of Person at birth.\n          type: string\n        DeathDate:\n          $ref: \"#/components/schemas/FlexDate\"\n        Descriptions:\n          description: List of biographies for this person.\n          items:\n            $ref: \"#/components/schemas/PersonDescription\"\n          type: array\n        ExternalIds:\n          description: List of alternate Ids associated with this person.\n          items:\n            $ref: \"#/components/schemas/PersonAlternateId\"\n          type: array\n        Gender:\n          description: Gender of Person.\n          type: string\n        Id:\n          description: Unique ID of a Person.\n          format: int64\n          type: integer\n          nullable: false\n        Images:\n          description: List of Images associated with this Person.\n          items:\n            $ref: \"#/components/schemas/PersonImage\"\n          type: array\n        Modified:\n          description: Datetime Person was last modified.\n          format: date-time\n          type: string\n          nullable: false\n        Name:\n          description: Full Name of this Person.\n          type: string\n        Tags:\n          description: List of tags associated with person.\n          items:\n            $ref: \"#/components/schemas/PersonTag\"\n          type: array\n        TimeStamp:\n          description: Time of last change to overall object.\n          format: date-time\n          type: string\n        VersionId:\n          description: Record Version Id\n          format: int64\n          type: integer\n          nullable: false\n      title: PersonResponse\n      type: object\n    PersonSearchHit:\n      description: PersonSearchHit\n      properties:\n        Id:\n          type: string\n        Score:\n          format: double\n          type: number\n        Source:\n          $ref: \"#/components/schemas/DiscoverPerson\"\n      title: PersonSearchHit\n      type: object\n    PersonTag:\n      description: PersonTag\n      properties:\n        Id:\n          description: ID of the object.\n          format: int64\n          type: integer\n        Name:\n          description: Name of the Tag.\n          type: string\n        TagId:\n          description: ID of the Tag.\n          format: int64\n          type: integer\n          nullable: false\n      title: PersonTag\n      type: object\n    PlatformHardwareResponse:\n      description: PlatformHardwareResponse\n      properties:\n        DeviceType:\n          type: string\n        Percentage:\n          format: double\n          type: number\n          nullable: false\n        Viewers:\n          format: int32\n          type: integer\n          nullable: false\n      title: PlatformHardwareResponse\n      type: object\n    PlatformOSResponse:\n      description: PlatformOSResponse\n      properties:\n        OS_Name:\n          type: string\n        Percentage:\n          format: double\n          type: number\n          nullable: false\n        Viewers:\n          format: int32\n          type: integer\n          nullable: false\n      title: PlatformOSResponse\n      type: object\n    Program:\n      description: Program\n      properties:\n        Id:\n          description: The ID of the program (show or movie)\n          format: int64\n          type: integer\n          nullable: false\n        Type:\n          description: The type of IVA program (show or movie).\n          type: string\n      title: Program\n      type: object\n    ProgramAlternateTitle:\n      description: ProgramAlternateTitle\n      properties:\n        Country:\n          type: string\n        Title:\n          type: string\n      title: ProgramAlternateTitle\n      type: object\n    ProgramAvailability:\n      description: ProgramAvailability\n      properties:\n        Country:\n          type: string\n        Currency:\n          type: string\n        DeliveryMethod:\n          type: string\n        ExpirationDate:\n          format: date-time\n          type: string\n        Links:\n          items:\n            $ref: \"#/components/schemas/OfferLink\"\n          type: array\n        OfferType:\n          type: string\n        PreSale:\n          type: boolean\n          nullable: false\n        Price:\n          format: double\n          type: number\n          nullable: false\n        Provider:\n          type: string\n        Quality:\n          type: string\n        StartDate:\n          format: date-time\n          type: string\n      title: ProgramAvailability\n      type: object\n    ProgramContributor:\n      description: ProgramContributor\n      properties:\n        Character:\n          type: string\n        Job:\n          type: string\n        PersonId:\n          type: string\n        PersonName:\n          type: string\n      title: ProgramContributor\n      type: object\n    ProgramDescription:\n      description: ProgramDescription\n      properties:\n        Attribution:\n          type: string\n        Description:\n          type: string\n        Language:\n          type: string\n      title: ProgramDescription\n      type: object\n    ProgramImage:\n      description: ProgramImage\n      properties:\n        FilePath:\n          type: string\n        Height:\n          format: int32\n          type: integer\n          nullable: false\n        ImageType:\n          type: string\n        Language:\n          type: string\n        Modified:\n          format: date-time\n          type: string\n        Official:\n          type: boolean\n        Sexuality:\n          format: int32\n          type: integer\n        Tags:\n          items:\n            type: string\n          type: array\n        Violence:\n          format: int32\n          type: integer\n        Width:\n          format: int32\n          type: integer\n          nullable: false\n      title: ProgramImage\n      type: object\n    ProgramPersonImage:\n      description: ProgramPersonImage\n      properties:\n        EntertainmentId:\n          description: Entertainment ID of the movie, show, episode this image is\n            promoting.  If you are doing editorial about another topic and use\n            an image from IVA, you need to reference or otherwise indicate the\n            title of the film, TV show or game so as to be promotional.\n          type: string\n        FaceDetails:\n          $ref: \"#/components/schemas/FaceDetails\"\n        FilePath:\n          type: string\n        Height:\n          format: int32\n          type: integer\n          nullable: false\n        ImageType:\n          type: string\n        Language:\n          type: string\n        Modified:\n          format: date-time\n          type: string\n        Official:\n          type: boolean\n        Sexuality:\n          format: int32\n          type: integer\n        Tags:\n          items:\n            type: string\n          type: array\n        Violence:\n          format: int32\n          type: integer\n        Width:\n          format: int32\n          type: integer\n          nullable: false\n      title: ProgramPersonImage\n      type: object\n    ProgramRelease:\n      description: ProgramRelease\n      properties:\n        Certification:\n          type: string\n        Country:\n          type: string\n        Date:\n          format: date-time\n          type: string\n        Type:\n          type: string\n      title: ProgramRelease\n      type: object\n    ProgramTrend:\n      description: ProgramTrend\n      properties:\n        Brand:\n          description: Brand associated with trend list.\n          type: string\n        Classifiers:\n          description: List of characteristics of the list.\n          items:\n            type: string\n          type: array\n        Country:\n          description: Specific country trend list is associated with.\n          type: string\n        Id:\n          description: Trend Source Id.\n          format: int32\n          type: integer\n          nullable: false\n        ListUrl:\n          description: URL of the list.\n          type: string\n        Modified:\n          description: Date the list was last updated.\n          format: date-time\n          type: string\n          nullable: false\n        Name:\n          description: Name of the trend list.\n          type: string\n        Rank:\n          description: Position in the list.  1 is first/top of the list.\n          format: int32\n          type: integer\n          nullable: false\n        TitleUrl:\n          description: URL of title on trend list.\n          type: string\n      title: ProgramTrend\n      type: object\n    ProgramVideo:\n      description: ProgramVideo\n      properties:\n        AllowAdvertising:\n          type: boolean\n        Certification:\n          type: boolean\n        Clean:\n          type: boolean\n        Company:\n          type: string\n        Duration:\n          format: int32\n          type: integer\n          nullable: false\n        Encoded:\n          format: date-time\n          type: string\n          nullable: false\n        ExpirationDate:\n          format: date-time\n          type: string\n        HomeVideo:\n          type: boolean\n        Id:\n          format: int64\n          type: integer\n          nullable: false\n        Language:\n          type: string\n        LanguageSubtitled:\n          type: string\n        Mature:\n          type: boolean\n          nullable: false\n        ScreenCaptures:\n          items:\n            $ref: \"#/components/schemas/VideoScreenCapture\"\n          type: array\n        SourceVideoHeight:\n          format: int32\n          type: integer\n          nullable: false\n        SourceVideoWidth:\n          format: int32\n          type: integer\n          nullable: false\n        StartDate:\n          format: date-time\n          type: string\n        TargetCountries:\n          items:\n            type: string\n          type: array\n        TargetLanguage:\n          type: string\n        Theatrical:\n          type: boolean\n        Title:\n          type: string\n        TuneIn:\n          type: boolean\n        Type:\n          type: string\n      title: ProgramVideo\n      type: object\n    RecentVisitorsResponse:\n      description: RecentVisitorsResponse\n      properties:\n        Collector_Tstamp:\n          format: date-time\n          type: string\n          nullable: false\n        Referrer:\n          type: string\n        User_IpAddress:\n          type: string\n        Views:\n          format: int32\n          type: integer\n          nullable: false\n      title: RecentVisitorsResponse\n      type: object\n    Recommendation:\n      description: Recommendation\n      properties:\n        businessScore:\n          description: Alternate score quality of the recommendation including IVA rules.\n          format: float\n          type: number\n          nullable: false\n        explanations:\n          description: List of reasons for recommendation.\n          items:\n            $ref: \"#/components/schemas/Explanation\"\n          type: array\n        groupId:\n          description: An enumeration of grouped recommendations.\n          type: string\n        program:\n          $ref: \"#/components/schemas/Program\"\n        score:\n          description: Quality of the recommendation relative to other recommendations.\n          format: float\n          type: number\n          nullable: false\n      title: Recommendation\n      type: object\n    RevCaptionItem:\n      description: RevCaptionItem\n      properties:\n        Content_Type:\n          type: string\n        Kind:\n          type: string\n        Text:\n          type: string\n      title: RevCaptionItem\n      type: object\n    RevCaptionsResponse:\n      description: RevCaptionsResponse\n      properties:\n        Captions:\n          description: List of captions.\n          items:\n            $ref: \"#/components/schemas/RevCaptionItem\"\n          type: array\n        Comments:\n          description: List of comments from Rev.\n          items:\n            $ref: \"#/components/schemas/RevOrderComment\"\n          type: array\n        Created:\n          description: DateTime order was placed.\n          format: date-time\n          type: string\n          nullable: false\n        Id:\n          description: Caption Order Id.  Use this ID to get individual captions.\n          format: int64\n          type: integer\n          nullable: false\n        Modified:\n          description: DateTime order was last modified.\n          format: date-time\n          type: string\n        OrderNumber:\n          description: Rev internal order number.\n          type: string\n        ReferenceId:\n          description: Optional reference Id used when creating the order.\n          type: string\n        Status:\n          description: Status of the order.\n          type: string\n        UseSandbox:\n          description: \"Determines if order was placed using Rev's testing environment. \"\n          type: boolean\n          nullable: false\n        VideoId:\n          description: ID of the video getting captioned.\n          format: int64\n          type: integer\n      title: RevCaptionsResponse\n      type: object\n    RevOrderComment:\n      description: RevOrderComment\n      properties:\n        by:\n          type: string\n        text:\n          type: string\n        timestamp:\n          format: date-time\n          type: string\n          nullable: false\n      title: RevOrderComment\n      type: object\n    SDKResponse:\n      description: SDKResponse\n      properties:\n        Url:\n          type: string\n      title: SDKResponse\n      type: object\n    ScreenCaptureRedirectResponse:\n      description: ScreenCaptureRedirectResponse\n      properties:\n        Expires:\n          description: \"Image URLs are hashed and expire. ISO 8601 Format: yyyy-mm-dd\n            hh:mm:ss.ffffff0Z \"\n          format: date-time\n          type: string\n          nullable: false\n        Url:\n          description: URL to image request.\n          type: string\n      title: ScreenCaptureRedirectResponse\n      type: object\n    SearchCelebrity:\n      description: SearchCelebrity\n      properties:\n        BirthDate:\n          description: Birth Date\n          format: date-time\n          type: string\n        BirthDayOfMonth:\n          description: Birth Day of Month\n          format: int32\n          type: integer\n        BirthMonthOfYear:\n          description: Birth Month of Year\n          format: int32\n          type: integer\n        BirthName:\n          description: Filter by birth name.\n          type: string\n        BirthYear:\n          description: Birth Year\n          format: int32\n          type: integer\n        DeathDayOfMonth:\n          description: Birth Day of Month\n          format: int32\n          type: integer\n        DeathMonthOfYear:\n          description: Birth Month of Year\n          format: int32\n          type: integer\n        ExternalId:\n          description: Filter results matching external Id\n          type: string\n        ExternalIdType:\n          description: Filter results matching external Id\n          enum:\n            - IVA\n            - TMDB\n            - IMDB\n            - Facebook\n            - Instagram\n            - Twitter\n            - Freebase_MID\n            - Freebase_ID\n            - TvRage\n          type: string\n        FaceDetails_Age:\n          description: People with images with estimated age.\n          format: int32\n          type: integer\n        FaceDetails_Beard:\n          description: People images with a beard.\n          type: boolean\n        FaceDetails_Emotions:\n          description: Filter People images by emotions.\n          enum:\n            - UNKNOWN\n            - HAPPY\n            - SAD\n            - ANGRY\n            - CONFUSED\n            - DISGUSTED\n            - SURPRISED\n            - CALM\n          items:\n            type: string\n            nullable: false\n          type: array\n        FaceDetails_Eyeglasses:\n          description: People images wearing eyeglasses.\n          type: boolean\n        FaceDetails_EyesOpen:\n          description: People images with eyes open.\n          type: boolean\n        FaceDetails_Gender:\n          description: People images based on gender.\n          enum:\n            - UNKNOWN\n            - Male\n            - Female\n          type: string\n        FaceDetails_MouthOpen:\n          description: People images with mouth open.\n          type: boolean\n        FaceDetails_Mustache:\n          description: People images with a mustache.\n          type: boolean\n        FaceDetails_Smile:\n          description: People images with smile.\n          type: boolean\n        FaceDetails_Sunglasses:\n          description: People images wearing sunglasses.\n          type: boolean\n        Gender:\n          description: Filter people by gender. (m or f)\n          enum:\n            - m\n            - f\n          type: string\n        Ids:\n          description: \"Search person using one or more Ids.  Ex:  Person/123\"\n          items:\n            type: string\n          type: array\n        ImageEntertainmentIds:\n          description: \"People with images from EntertainmentIds.  Ex: Movie/1234\"\n          items:\n            type: string\n          type: array\n        ImageSexuality:\n          description: People with image sexuality scores.\n          enum:\n            - \"1\"\n            - \"2\"\n            - \"3\"\n            - \"4\"\n            - \"5\"\n          items:\n            format: int32\n            type: integer\n            nullable: false\n          type: array\n        ImageTags:\n          description: People with image containing tags.\n          items:\n            type: string\n          type: array\n        ImageType:\n          description: People with images of type.\n          enum:\n            - UNKNOWN\n            - Poster\n            - Photo\n            - Portrait\n          type: string\n        ImageViolence:\n          description: People with image violence scores.\n          enum:\n            - \"1\"\n            - \"2\"\n            - \"3\"\n            - \"4\"\n            - \"5\"\n          items:\n            format: int32\n            type: integer\n            nullable: false\n          type: array\n        IncludeDeleted:\n          description: Include Soft Deleted Records. Default (false)\n          type: boolean\n          nullable: false\n        Includes:\n          description: Include sub objects from the person\n          enum:\n            - Images\n            - ExternalIds\n            - Descriptions\n            - AlternateNames\n          items:\n            type: string\n          type: array\n        MinImageHeight:\n          description: People with images greater than or equal to image height.\n          format: int32\n          type: integer\n        MinImageWidth:\n          description: People with images greater than or equal to image width.\n          format: int32\n          type: integer\n        ModifiedRecordsSince:\n          description: Filter results based on timestamp.  Returns \u003e= value timestamp (UTC)\n            provided.\n          format: date-time\n          type: string\n        Name:\n          description: Filter results based on Name.\n          type: string\n        OfficialImage:\n          description: Limit People with official images.\n          type: boolean\n        Skip:\n          description: Rows to skip, used for paging. Default is 0.\n          format: int32\n          type: integer\n          nullable: false\n        SortByTimeStamp:\n          description: Sort results based on last modified descending.  Default is sorted\n            by _score\n          type: boolean\n        Take:\n          description: Rows to return, used for paging. Default is 10, limit is 50.\n          format: int32\n          type: integer\n          nullable: false\n      title: SearchCelebrity\n      type: object\n    SearchCelebrityResponse:\n      description: SearchCelebrityResponse\n      properties:\n        Hits:\n          items:\n            $ref: \"#/components/schemas/PersonSearchHit\"\n          type: array\n        MaxScore:\n          format: double\n          type: number\n          nullable: false\n        Message:\n          type: string\n        Took:\n          format: int64\n          type: integer\n          nullable: false\n        Total:\n          format: int64\n          type: integer\n          nullable: false\n      title: SearchCelebrityResponse\n      type: object\n    SearchEntertainment:\n      description: SearchEntertainment\n      properties:\n        AvailabilityCountries:\n          description: List of 2 character country codes.\n          items:\n            type: string\n          type: array\n        Budget:\n          description: Filter results where movie budget is greater than or equal to this\n            value.\n          format: int64\n          type: integer\n        Certifications:\n          description: List of certifications for movie and show.\n          items:\n            type: string\n          type: array\n        CompanyName:\n          description: Filter results matching company name\n          type: string\n        Culture:\n          description: Specify the country and language\n          enum:\n            - NOT_SET\n            - English_US\n            - English_CA\n            - English_UK\n            - English_AU\n          type: string\n        DeliveryMethods:\n          description: List of availability delivery methods. See\n            /Common/GetCommonEnumerators endpoint for complete list.\n          enum:\n            - NOT_SET\n            - Scheduled\n            - Ticket\n            - Physical\n            - OnDemand\n          items:\n            type: string\n            nullable: false\n          type: array\n        ExternalId:\n          description: Filter results matching external Id\n          type: string\n        ExternalIdType:\n          description: Filter results matching external Id\n          type: string\n        Genres:\n          description: List of genres (movie and show).\n          items:\n            type: string\n          type: array\n        HasVideo:\n          description: Filter results based on having video content\n          type: boolean\n        Ids:\n          description: \"Search by one or more Ids.  Ex: Movie/123.\"\n          items:\n            type: string\n          type: array\n        IncludeDeleted:\n          description: Include Soft Deleted Records. Default (false)\n          type: boolean\n          nullable: false\n        Includes:\n          description: Include sub objects from the program\n          enum:\n            - Releases\n            - Contributors\n            - AlternateTitles\n            - Descriptions\n            - Companies\n            - Tags\n            - ExternalIds\n            - Videos\n            - Images\n            - Availabilities\n            - Genres\n            - ProgramTrends\n            - Subjects\n            - FilmingLocations\n            - NarrativeLocations\n            - BasedOns\n            - TimePeriods\n            - MicroGenres\n            - ProgramTags\n          items:\n            type: string\n          type: array\n        Jobs:\n          description: List of Jobs a contributor can have.\n          items:\n            type: string\n          type: array\n        LimitedResults:\n          type: boolean\n          nullable: false\n        Minimum_EncodeDate:\n          description: Filter results based on encode date.\n          format: date-time\n          type: string\n        Minimum_IvaRating:\n          description: Filter results with a minimum Rating greater than or equal to this\n            value. (0 to 100)\n          format: int32\n          type: integer\n        ModifiedRecordsSince:\n          description: Filter results based on timestamp.  Returns \u003e= value timestamp (UTC)\n            provided.\n          format: date-time\n          type: string\n        OfferTypes:\n          description: List of availability offer types. See /Common/GetCommonEnumerators\n            endpoint for complete list.\n          enum:\n            - NOT_SET\n            - Buy\n            - Subscription\n            - Free\n            - Rent\n          items:\n            type: string\n            nullable: false\n          type: array\n        OriginalLanguages:\n          description: The original language of the program.\n          items:\n            type: string\n          type: array\n        OriginalReleaseDateRange_End:\n          description: Filter results based on original release date range.\n          format: date-time\n          type: string\n        OriginalReleaseDateRange_Start:\n          description: Filter results based on original release date range.\n          format: date-time\n          type: string\n        OriginatingNetworks:\n          description: \"The Network the current first run shows appear on. Ex: ABC, NBC,\n            Netflix, etc.  \"\n          items:\n            type: string\n          type: array\n        PeopleIds:\n          description: Person Ids.  Currently supports one person.\n          items:\n            type: string\n          type: array\n        PersonNames:\n          description: List of names. Maximum of 3.\n          items:\n            type: string\n          type: array\n        ProgramTypes:\n          description: List of program types. See /Common/GetCommonEnumerators endpoint for\n            complete list.\n          enum:\n            - Movie\n            - Show\n            - Game\n            - Season\n            - Episode\n          items:\n            type: string\n            nullable: false\n          type: array\n        Providers:\n          description: List of availability providers.  See /Common/GetCommonEnumerators\n            endpoint for complete list.\n          enum:\n            - NOT_SET\n            - AmazonInstantVideo\n            - NBC\n            - ABC\n            - FOX\n            - FandangoMovies\n            - GooglePlay\n            - CBS\n            - The_CW\n            - TBS\n            - Nickelodeon\n            - PBS\n            - Discovery_Channel\n            - HBO\n            - Disney_XD\n            - USA_Network\n            - Hulu\n            - AmazonPrimeVideo\n            - iTunes\n            - Netflix\n            - AtomTickets\n            - YouTubePremium\n            - DCUniverse\n          items:\n            type: string\n            nullable: false\n          type: array\n        ReleaseCountries:\n          description: List of 2 character country codes when filtering on releases.\n          items:\n            type: string\n          type: array\n        ReleaseDateRange_End:\n          description: Filter results based on any release date range.\n          format: date-time\n          type: string\n        ReleaseDateRange_Start:\n          description: Filter results based on any release date range.\n          format: date-time\n          type: string\n        ReleaseTypes:\n          description: List of release types for both movie and show.\n          enum:\n            - Digital\n            - Festival\n            - Physical\n            - Premiere\n            - Theatrical_Limited_Release\n            - Theatrical_Wide_Release\n            - TV\n            - On_Demand_Release\n            - Show_Release\n          items:\n            type: string\n            nullable: false\n          type: array\n        Revenue:\n          description: Filter results where movie revenue is greater than or equal to this\n            value.\n          format: int64\n          type: integer\n        SeasonId:\n          description: Filter results to match a season.  Use for locating episodes for a\n            season.\n          type: string\n        ShowId:\n          description: Filter results to match a show.  Use for locating seasons and\n            episodes for a show.\n          type: string\n        Skip:\n          description: Rows to skip, used for paging. Default is 0.\n          format: int32\n          type: integer\n          nullable: false\n        SortBy:\n          description: SortBy\n          enum:\n            - NOT_SET\n            - Relevance\n            - TimeStamp\n            - IvaRating\n            - ReleaseDate\n            - CalculatedTrendRank\n          type: string\n        SortByTimeStamp:\n          description: Sort results based on last modified descending.  Default is sorted\n            by _score. DEPRECIATED! Use SortBy instead.\n          type: boolean\n          nullable: false\n        Status:\n          description: \"The status of the movie or show.  Ex: Returning_Series,\n            in_production, etc.  \"\n          items:\n            type: string\n          type: array\n        Tags:\n          description: List of tags (movie and show).\n          items:\n            type: string\n          type: array\n        Take:\n          description: Rows to return, used for paging. Default is 10, limit is 50.\n          format: int32\n          type: integer\n          nullable: false\n        Title:\n          description: Title search.\n          type: string\n        TrendBrands:\n          description: \"Program Trend Brands.  Ex: IMDB,IVA\"\n          enum:\n            - IMDB\n            - IVA\n            - BoxOfficeMojo\n            - TMDB\n            - RottenTomatoes\n            - TVGuide\n            - iTunes\n            - Amazon\n            - Fios\n            - Gamespot\n            - Hulu\n            - MovieClips\n            - Netflix\n            - PlutoTV\n            - Redbox\n            - TheNumbers\n            - Vudu\n            - Xfinity\n            - Youtube\n          items:\n            type: string\n          type: array\n        TrendCountries:\n          description: \"Program Trend Countries.  Ex: US,CA.\"\n          items:\n            type: string\n          type: array\n        TrendListClassifiers:\n          description: \"Program Trend List Classifiers.  Ex: AVOD,SVOD.\"\n          enum:\n            - Publisher\n            - TVOD\n            - SVOD\n            - Revenue\n            - Social\n            - Trailers\n            - AVOD\n            - Physical\n          items:\n            type: string\n          type: array\n        TrendSourceIds:\n          description: \"Program Trend Source Ids.  Ex: 2,3.\"\n          items:\n            format: int32\n            type: integer\n            nullable: false\n          type: array\n        VideoId:\n          description: Filter results based on matching a single Video ID.\n          format: int64\n          type: integer\n        VideoQualities:\n          description: List of availability video qualities. See\n            /Common/GetCommonEnumerators endpoint for complete list.\n          enum:\n            - NOT_SET\n            - HD\n            - UHD\n            - SD\n          items:\n            type: string\n            nullable: false\n          type: array\n        VideoTargetCountries:\n          description: List of 2 character country codes when filtering on video target\n            countries.\n          items:\n            type: string\n          type: array\n        VideoTargetLanguages:\n          description: Specify video target languages. This takes into consideration both\n            language spoken and language subtitled.\n          items:\n            type: string\n          type: array\n        YearRange_End:\n          description: Filter results based on start and end original release year.\n          format: int32\n          type: integer\n        YearRange_Start:\n          description: Filter results based on start and end original release year.\n          format: int32\n          type: integer\n      title: SearchEntertainment\n      type: object\n    SearchEntertainmentAutoComplete:\n      description: SearchEntertainmentAutoComplete\n      properties:\n        Field:\n          description: List of available auto completion fields.\n          enum:\n            - basedOns_instanceOfLabel\n            - basedOns_label\n            - subjects_label\n            - filmingLocations_label\n            - narrativeLocations_label\n            - microGenres_label\n            - timePeriods_label\n            - title\n            - originalTitle\n            - tags\n            - originatingNetwork\n            - companies_name\n            - contributors_personName\n          type: string\n        Prefix:\n          description: String prefix to use to locate matching strings based on Field\n            selected.\n          type: string\n        ProgramTypes:\n          description: List of program types. See /Common/GetCommonEnumerators endpoint for\n            complete list.\n          enum:\n            - Movie\n            - Show\n            - Game\n            - Season\n            - Episode\n          items:\n            type: string\n            nullable: false\n          type: array\n        Size:\n          description: Rows to return, used for paging. Default is 10, limit is 50.\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - Field\n        - Prefix\n      title: SearchEntertainmentAutoComplete\n      type: object\n    SearchEntertainmentAutoCompleteResponse:\n      description: SearchEntertainmentAutoCompleteResponse\n      properties:\n        Description:\n          type: string\n        Suggestion:\n          type: string\n      title: SearchEntertainmentAutoCompleteResponse\n      type: object\n    SearchEntertainmentResponse:\n      description: SearchEntertainmentResponse\n      properties:\n        Hits:\n          items:\n            $ref: \"#/components/schemas/SearchHit\"\n          type: array\n        MaxScore:\n          format: double\n          type: number\n          nullable: false\n        Message:\n          type: string\n        Took:\n          format: int64\n          type: integer\n          nullable: false\n        Total:\n          format: int64\n          type: integer\n          nullable: false\n      title: SearchEntertainmentResponse\n      type: object\n    SearchHit:\n      description: SearchHit\n      properties:\n        Id:\n          type: string\n        Score:\n          format: double\n          type: number\n        Source:\n          $ref: \"#/components/schemas/DiscoverProgram\"\n      title: SearchHit\n      type: object\n    SearchMovie:\n      description: SearchMovie\n      properties:\n        Filter:\n          description: Expression to filter results.\n          type: string\n        IncludeTotalResultCount:\n          description: Includes total results in response. This will have a performance\n            impact.\n          type: boolean\n          nullable: false\n        OrderBy:\n          description: List of field names to sort results.  Default is relevance.\n          items:\n            type: string\n          type: array\n        SearchFields:\n          description: List of field names to search using 'term.'\n          items:\n            type: string\n          type: array\n        SearchMode:\n          description: Specifies whether ANY or ALL of the search terms must be matched in\n            order to count the item as a match.\n          type: string\n        SelectFields:\n          description: List of field names to be returned in the object.\n          items:\n            type: string\n          type: array\n        Skip:\n          description: Skip number of results. Use this for paging results.\n          format: int32\n          type: integer\n          nullable: false\n        Top:\n          description: Limit results.  Maximum returned is 1000.\n          format: int32\n          type: integer\n          nullable: false\n        term:\n          description: Term to search for. This can be combined with all other options. Use\n            '*' to return any match.\n          type: string\n      title: SearchMovie\n      type: object\n    SearchMovieResponse:\n      description: SearchMovieResponse\n      properties:\n        Count:\n          description: Number iof Movies matched in search.\n          format: int64\n          type: integer\n        Results:\n          description: List of Match Results (Movies and their Match Scores).\n          items:\n            $ref: \"#/components/schemas/MovieResult\"\n          type: array\n      title: SearchMovieResponse\n      type: object\n    SearchShow:\n      description: SearchShow\n      properties:\n        Filter:\n          description: Expression to filter results.\n          type: string\n        IncludeTotalResultCount:\n          description: Includes total results in response. This will have a performance\n            impact.\n          type: boolean\n          nullable: false\n        OrderBy:\n          description: List of field names to sort results.  Default is relevance.\n          items:\n            type: string\n          type: array\n        SearchFields:\n          description: List of field names to search using 'term.'\n          items:\n            type: string\n          type: array\n        SearchMode:\n          description: Specifies whether ANY or ALL of the search terms must be matched in\n            order to count the item as a match.\n          type: string\n        SelectFields:\n          description: List of field names to be returned in the object.\n          items:\n            type: string\n          type: array\n        Skip:\n          description: Skip number of results. Use this for paging results.\n          format: int32\n          type: integer\n          nullable: false\n        Top:\n          description: Limit results.  Maximum returned is 1000.\n          format: int32\n          type: integer\n          nullable: false\n        term:\n          description: Term to search for. This can be combined with all other options. Use\n            '*' to return any match.\n          type: string\n      title: SearchShow\n      type: object\n    SearchShowResponse:\n      description: SearchShowResponse\n      properties:\n        Count:\n          description: Number iof Shows matched in search.\n          format: int64\n          type: integer\n        Results:\n          description: List of Match Results (Shows and their Match Scores).\n          items:\n            $ref: \"#/components/schemas/ShowResult\"\n          type: array\n      title: SearchShowResponse\n      type: object\n    Season:\n      description: Season\n      properties:\n        AlternateTitles:\n          description: List of alternate titles for this Season.\n          items:\n            $ref: \"#/components/schemas/SeasonAlternateTitle\"\n          type: array\n        Availabilities:\n          description: List of season offers.\n          items:\n            $ref: \"#/components/schemas/SeasonAvailabilityResponse\"\n          type: array\n        Contributors:\n          description: List of contributors (Cast, Director, Writer, Production, etc.) for\n            this Season.\n          items:\n            $ref: \"#/components/schemas/SeasonContributor\"\n          type: array\n        Created:\n          description: DateTime Season record created.\n          format: date-time\n          type: string\n          nullable: false\n        Descriptions:\n          description: List of descriptions for this Season.\n          items:\n            $ref: \"#/components/schemas/SeasonDescription\"\n          type: array\n        Episodes:\n          description: List of Episodes associated with Season.\n          items:\n            $ref: \"#/components/schemas/Episode\"\n          type: array\n        ExternalIds:\n          description: List of external Ids associated with Season.\n          items:\n            $ref: \"#/components/schemas/ExternalId\"\n          type: array\n        Id:\n          description: Unique ID of the Season.\n          format: int64\n          type: integer\n          nullable: false\n        Images:\n          description: List of images associated with Season.\n          items:\n            $ref: \"#/components/schemas/SeasonImage\"\n          type: array\n        Modified:\n          description: DateTime Season record last modified.\n          format: date-time\n          type: string\n          nullable: false\n        Modifier:\n          description: User who last modified the Season record.\n          format: int32\n          type: integer\n        NumberOfEpisodes:\n          description: Number of Episodes associated with Season.\n          format: int32\n          type: integer\n          nullable: false\n        OriginalLanguage:\n          description: Season original language.\n          type: string\n        OriginalReleaseDate:\n          description: Original release date of Season.\n          format: date-time\n          type: string\n        OriginalTitle:\n          description: Original title of Season\n          type: string\n        OwnerId:\n          description: User who has ownership of the Show record.\n          format: int32\n          type: integer\n        Releases:\n          description: List of releases associated with Season.\n          items:\n            $ref: \"#/components/schemas/SeasonRelease\"\n          type: array\n        SeasonNumber:\n          description: Number of Season within its associated Show.\n          format: int32\n          type: integer\n          nullable: false\n        ShowId:\n          description: ID of Show Season is associated with.\n          format: int64\n          type: integer\n          nullable: false\n        TimeStamp:\n          description: Time of last change to overall object.\n          format: date-time\n          type: string\n        Title:\n          description: English version of any foreign Original Title.\n          type: string\n        VersionId:\n          description: Record Version Id\n          format: int64\n          type: integer\n          nullable: false\n        Videos:\n          description: List of videos associated with Season.\n          items:\n            $ref: \"#/components/schemas/SeasonVideo\"\n          type: array\n        Year:\n          description: Release year of Season.\n          format: int32\n          type: integer\n      title: Season\n      type: object\n    SeasonAlternateTitle:\n      description: SeasonAlternateTitle\n      properties:\n        Country:\n          description: Country associated with this alternate title.\n          type: string\n        Id:\n          description: Unique ID of this SeasonAlternateTitle\n          format: int64\n          type: integer\n        Modifier:\n          description: ID of last user who modified the item.\n          format: int32\n          type: integer\n        Title:\n          description: The alternate title.\n          type: string\n      title: SeasonAlternateTitle\n      type: object\n    SeasonAvailabilityResponse:\n      description: SeasonAvailabilityResponse\n      properties:\n        Country:\n          type: string\n        Currency:\n          type: string\n        DeliveryMethod:\n          type: string\n        ExpirationDate:\n          format: date-time\n          type: string\n        Links:\n          items:\n            $ref: \"#/components/schemas/OfferLink\"\n          type: array\n        OfferType:\n          type: string\n        PreSale:\n          type: boolean\n          nullable: false\n        Price:\n          format: double\n          type: number\n          nullable: false\n        Provider:\n          type: string\n        Quality:\n          type: string\n        StartDate:\n          format: date-time\n          type: string\n        Title:\n          type: string\n      title: SeasonAvailabilityResponse\n      type: object\n    SeasonChangeHistoryResponse:\n      description: SeasonChangeHistoryResponse\n      properties:\n        SeasonId:\n          description: ID of the Season.\n          format: int64\n          type: integer\n          nullable: false\n      title: SeasonChangeHistoryResponse\n      type: object\n    SeasonChangeHistoryWithEntityResponse:\n      description: SeasonChangeHistoryWithEntityResponse\n      properties:\n        Entity:\n          description: Object belonging to Season that has changed.\n          type: string\n        SeasonId:\n          description: ID of the Season.\n          format: int64\n          type: integer\n          nullable: false\n      title: SeasonChangeHistoryWithEntityResponse\n      type: object\n    SeasonContributor:\n      description: SeasonContributor\n      properties:\n        Character:\n          description: Role played by SeasonContributor.\n          type: string\n        Id:\n          description: Unique ID of the SeasonContributor object.\n          format: int64\n          type: integer\n        Job:\n          description: Job of Person associated with SeasonContributor.\n          type: string\n        NumberOfEpisodes:\n          description: Count of episodes this person contributed to.\n          format: int32\n          type: integer\n          nullable: false\n        PersonId:\n          description: ID of Person associated with SeasonContributor.\n          format: int64\n          type: integer\n          nullable: false\n        PersonName:\n          description: Person's Name associated with SeasonContributor.\n          type: string\n      title: SeasonContributor\n      type: object\n    SeasonDescription:\n      description: SeasonDescription\n      properties:\n        Attribution:\n          description: Source of SeasonDescription.\n          type: string\n        Description:\n          description: Season Description.\n          type: string\n        Id:\n          description: Unique ID of this SeasonDescription\n          format: int64\n          type: integer\n        Language:\n          description: Language object for language of SeasonDescription.\n          type: string\n        Modifier:\n          description: ID of last user who modified the item.\n          format: int32\n          type: integer\n      title: SeasonDescription\n      type: object\n    SeasonImage:\n      description: SeasonImage\n      properties:\n        FilePath:\n          description: Filepath (location) of SeasonImage.\n          type: string\n        Height:\n          description: Height in pixels of SeasonImage.\n          format: int32\n          type: integer\n          nullable: false\n        Id:\n          description: Unique ID of this SeasonImage\n          format: int64\n          type: integer\n        ImageId:\n          description: ID of Image associated with SeasonImage.\n          format: int64\n          type: integer\n        ImageType:\n          description: ImageType of SeasonImage.\n          type: string\n        Language:\n          description: Language associated with SeasonImage.\n          type: string\n        Modified:\n          description: Time when image was last modified.\n          format: date-time\n          type: string\n        Modifier:\n          description: ID of last user who modified the item.\n          format: int32\n          type: integer\n        Official:\n          description: Determines if image is official.\n          type: boolean\n        Sexuality:\n          description: 1-5 (Very-Unlikely to Very-Likely) probability of sexual theme in\n            image.\n          format: int32\n          type: integer\n        Tags:\n          description: List of Tags associated with this SeasonImage\n          items:\n            $ref: \"#/components/schemas/Tag\"\n          type: array\n        Violence:\n          description: 1-5 (Very-Unlikely to Very-Likely) probability of violent theme in\n            image.\n          format: int32\n          type: integer\n        Width:\n          description: Width in pixels of SeasonImage.\n          format: int32\n          type: integer\n          nullable: false\n      title: SeasonImage\n      type: object\n    SeasonRelease:\n      description: SeasonRelease\n      properties:\n        Certification:\n          description: Certification for SeasonRelease.\n          type: string\n        Country:\n          description: The Country Season was released.\n          type: string\n        Date:\n          description: Date of this SeasonRelease.\n          format: date-time\n          type: string\n        Id:\n          description: Unique Id of this SeasonRelease.\n          format: int64\n          type: integer\n        Modifier:\n          description: ID of last user who modified the item.\n          format: int32\n          type: integer\n        Type:\n          description: The type of this SeasonRelease.\n          type: string\n      title: SeasonRelease\n      type: object\n    SeasonResponse:\n      description: SeasonResponse\n      properties:\n        AlternateTitles:\n          description: List of alternate titles for this Season.\n          items:\n            $ref: \"#/components/schemas/SeasonAlternateTitle\"\n          type: array\n        Availabilities:\n          description: List of season offers.\n          items:\n            $ref: \"#/components/schemas/SeasonAvailabilityResponse\"\n          type: array\n        Contributors:\n          description: List of contributors (Cast, Director, Writer, Production, etc.) for\n            this Season.\n          items:\n            $ref: \"#/components/schemas/SeasonContributor\"\n          type: array\n        Created:\n          description: DateTime Season record created.\n          format: date-time\n          type: string\n          nullable: false\n        Descriptions:\n          description: List of descriptions for this Season.\n          items:\n            $ref: \"#/components/schemas/SeasonDescription\"\n          type: array\n        Episodes:\n          description: List of Episodes associated with Season.\n          items:\n            $ref: \"#/components/schemas/Episode\"\n          type: array\n        ExternalIds:\n          description: List of external Ids associated with Season.\n          items:\n            $ref: \"#/components/schemas/ExternalId\"\n          type: array\n        Id:\n          description: Unique ID of the Season.\n          format: int64\n          type: integer\n          nullable: false\n        Images:\n          description: List of images associated with Season.\n          items:\n            $ref: \"#/components/schemas/SeasonImage\"\n          type: array\n        Modified:\n          description: DateTime Season record last modified.\n          format: date-time\n          type: string\n          nullable: false\n        Modifier:\n          description: User who last modified the Season record.\n          format: int32\n          type: integer\n        NumberOfEpisodes:\n          description: Number of Episodes associated with Season.\n          format: int32\n          type: integer\n          nullable: false\n        OriginalLanguage:\n          description: Season original language.\n          type: string\n        OriginalReleaseDate:\n          description: Original release date of Season.\n          format: date-time\n          type: string\n        OriginalTitle:\n          description: Original title of Season\n          type: string\n        OwnerId:\n          description: User who has ownership of the Show record.\n          format: int32\n          type: integer\n        Releases:\n          description: List of releases associated with Season.\n          items:\n            $ref: \"#/components/schemas/SeasonRelease\"\n          type: array\n        SeasonNumber:\n          description: Number of Season within its associated Show.\n          format: int32\n          type: integer\n          nullable: false\n        ShowId:\n          description: ID of Show Season is associated with.\n          format: int64\n          type: integer\n          nullable: false\n        TimeStamp:\n          description: Time of last change to overall object.\n          format: date-time\n          type: string\n        Title:\n          description: English version of any foreign Original Title.\n          type: string\n        VersionId:\n          description: Record Version Id\n          format: int64\n          type: integer\n          nullable: false\n        Videos:\n          description: List of videos associated with Season.\n          items:\n            $ref: \"#/components/schemas/SeasonVideo\"\n          type: array\n        Year:\n          description: Release year of Season.\n          format: int32\n          type: integer\n      title: SeasonResponse\n      type: object\n    SeasonVideo:\n      description: SeasonVideo\n      properties:\n        AllowAdvertising:\n          description: Flag denoting if pre-roll video ads are allowed in front of content.\n          type: boolean\n          nullable: false\n        Certification:\n          description: Certification for SeasonVideo.\n          type: boolean\n        Clean:\n          description: True if Certification, Theatrical, and HomeVideo are False.\n          type: boolean\n        Company:\n          description: Company associated with SeasonVideo.\n          type: string\n        Duration:\n          description: Runtime of SeasonVideo.\n          format: int32\n          type: integer\n          nullable: false\n        Encoded:\n          description: Datetime SeasonVideo was encoded.\n          format: date-time\n          type: string\n          nullable: false\n        Encodes:\n          description: List of Encodes (bitrate and type) for SeasonVideo.\n          items:\n            $ref: \"#/components/schemas/SeasonVideoEncode\"\n          type: array\n        ExpirationDate:\n          description: Date SeasonVideo expires.\n          format: date-time\n          type: string\n        HomeVideo:\n          description: Flag for promoting Home Video.\n          type: boolean\n        Id:\n          description: Unique ID of SeasonVideo.\n          format: int64\n          type: integer\n          nullable: false\n        Language:\n          description: Language associated with SeasonVideo.\n          type: string\n        LanguageSubtitled:\n          description: Subtitle language associated with SeasonVideo.\n          type: string\n        Mature:\n          description: Flag for designating video content not suitable for children. Age\n            gate required.\n          type: boolean\n          nullable: false\n        Modifier:\n          description: ID of last user who modified the item.\n          format: int32\n          type: integer\n        ScreenCaptures:\n          description: List of screen captures from SeasonVideo.\n          items:\n            $ref: \"#/components/schemas/SeasonVideoScreenCapture\"\n          type: array\n        SourceVideoHeight:\n          description: Height in pixels of SeasonVideo.\n          format: int32\n          type: integer\n          nullable: false\n        SourceVideoWidth:\n          description: Width in pixels of SeasonVideo.\n          format: int32\n          type: integer\n          nullable: false\n        StartDate:\n          description: First date of SeasonVideo availability.\n          format: date-time\n          type: string\n        TargetCountries:\n          description: List of countries targeted by SeasonVideo.\n          items:\n            $ref: \"#/components/schemas/TargetCountry\"\n          type: array\n        Title:\n          description: Title of SeasonVideo, not Season.\n          type: string\n        TuneIn:\n          description: Flag for promoting Tune In.\n          type: boolean\n        Type:\n          description: VideoType for the SeasonVideo.\n          type: string\n      title: SeasonVideo\n      type: object\n    SeasonVideoEncode:\n      description: SeasonVideoEncode\n      properties:\n        BitRate:\n          description: BitRate of VideoEncode.\n          format: int32\n          type: integer\n        EncodeType:\n          description: Datetime when the VideoEncode was encoded.\n          type: string\n        Id:\n          description: Unique ID of the video encode\n          format: int64\n          type: integer\n        Modifier:\n          description: ID of last user who modified the item.\n          format: int32\n          type: integer\n      title: SeasonVideoEncode\n      type: object\n    SeasonVideoExtended:\n      description: SeasonVideoExtended\n      properties:\n        AllowAdvertising:\n          description: Flag denoting if pre-roll video ads are allowed in front of content.\n          type: boolean\n          nullable: false\n        Certification:\n          description: Certification for SeasonVideo.\n          type: boolean\n        Clean:\n          description: True if Certification, Theatrical, and HomeVideo are False.\n          type: boolean\n        Company:\n          description: Company associated with SeasonVideo.\n          type: string\n        Duration:\n          description: Runtime of SeasonVideo.\n          format: int32\n          type: integer\n          nullable: false\n        Encoded:\n          description: Datetime SeasonVideo was encoded.\n          format: date-time\n          type: string\n          nullable: false\n        Encodes:\n          description: List of Encodes (bitrate and type) for SeasonVideo.\n          items:\n            $ref: \"#/components/schemas/SeasonVideoEncode\"\n          type: array\n        ExpirationDate:\n          description: Date SeasonVideo expires.\n          format: date-time\n          type: string\n        HomeVideo:\n          description: Flag for promoting Home Video.\n          type: boolean\n        Id:\n          description: Unique ID of SeasonVideo.\n          format: int64\n          type: integer\n          nullable: false\n        Language:\n          description: Language associated with SeasonVideo.\n          type: string\n        LanguageSubtitled:\n          description: Subtitle language associated with SeasonVideo.\n          type: string\n        Mature:\n          description: Flag for designating video content not suitable for children. Age\n            gate required.\n          type: boolean\n          nullable: false\n        Modifier:\n          description: ID of last user who modified the item.\n          format: int32\n          type: integer\n        ScreenCaptures:\n          description: List of screen captures from SeasonVideo.\n          items:\n            $ref: \"#/components/schemas/SeasonVideoScreenCapture\"\n          type: array\n        SeasonNumber:\n          format: int32\n          type: integer\n          nullable: false\n        SourceVideoHeight:\n          description: Height in pixels of SeasonVideo.\n          format: int32\n          type: integer\n          nullable: false\n        SourceVideoWidth:\n          description: Width in pixels of SeasonVideo.\n          format: int32\n          type: integer\n          nullable: false\n        StartDate:\n          description: First date of SeasonVideo availability.\n          format: date-time\n          type: string\n        TargetCountries:\n          description: List of countries targeted by SeasonVideo.\n          items:\n            $ref: \"#/components/schemas/TargetCountry\"\n          type: array\n        Title:\n          description: Title of SeasonVideo, not Season.\n          type: string\n        TuneIn:\n          description: Flag for promoting Tune In.\n          type: boolean\n        Type:\n          description: VideoType for the SeasonVideo.\n          type: string\n      title: SeasonVideoExtended\n      type: object\n    SeasonVideoScreenCapture:\n      description: SeasonVideoScreenCapture\n      properties:\n        Aspect:\n          description: Aspect ratio of VideoScreenCapture.\n          type: string\n        FilePath:\n          description: Filepath (location) of VideoScreenCapture.\n          type: string\n        Height:\n          description: Height in pixels of VideoScreenCapture.\n          format: int32\n          type: integer\n          nullable: false\n        Id:\n          description: Unique ID of the screen capture\n          format: int64\n          type: integer\n        Modifier:\n          description: ID of last user who modified the item.\n          format: int32\n          type: integer\n        Width:\n          description: Width in pixels of VideoScreenCapture.\n          format: int32\n          type: integer\n          nullable: false\n      title: SeasonVideoScreenCapture\n      type: object\n    Show:\n      description: Show\n      properties:\n        AlternateTitles:\n          description: List of alternate titles for this Show.\n          items:\n            $ref: \"#/components/schemas/ShowAlternateTitle\"\n          type: array\n        Availabilities:\n          description: List of show availability.\n          items:\n            $ref: \"#/components/schemas/ShowAvailabilityResponse\"\n          type: array\n        Companies:\n          description: List of companies (Production, Distribution, etc.) associated with\n            Show.\n          items:\n            $ref: \"#/components/schemas/Company\"\n          type: array\n        Contributors:\n          description: List of contributors (Cast, Director, Writer, Production, etc.) for\n            this Show.\n          items:\n            $ref: \"#/components/schemas/ShowContributor\"\n          type: array\n        Created:\n          description: DateTime Show record created.\n          format: date-time\n          type: string\n          nullable: false\n        Deleted:\n          description: Flag signifies if Show record is 'Deleted'.\n          type: boolean\n        Descriptions:\n          description: List of descriptions for this Show.\n          items:\n            $ref: \"#/components/schemas/ShowDescription\"\n          type: array\n        EpisodeVideos:\n          description: All EpisodesVideos including season and episode number.\n          items:\n            $ref: \"#/components/schemas/EpisodeVideoExtended\"\n          type: array\n        ExternalIds:\n          description: List of external Ids associated with Show.\n          items:\n            $ref: \"#/components/schemas/ExternalId\"\n          type: array\n        Genres:\n          description: List of genres associated with Show.\n          items:\n            $ref: \"#/components/schemas/ShowGenre\"\n          type: array\n        Id:\n          description: Unique ID of the Show.\n          format: int64\n          type: integer\n          nullable: false\n        Idx:\n          description: Index to differentiate shows with identical titles and year.\n          type: string\n        Images:\n          description: List of images associated with Show.\n          items:\n            $ref: \"#/components/schemas/ShowImage\"\n          type: array\n        Modified:\n          description: DateTime Show record last modified.\n          format: date-time\n          type: string\n          nullable: false\n        Modifier:\n          description: ID of last user who modified the item.\n          format: int32\n          type: integer\n        OfficialSiteUrl:\n          description: Show website home page.\n          type: string\n        OriginalLanguage:\n          description: ID of Show original language.\n          type: string\n        OriginalReleaseDate:\n          description: Original release date of Show.\n          format: date-time\n          type: string\n        OriginalTitle:\n          type: string\n        OriginatingNetwork:\n          description: Last network new episodes aired on.\n          type: string\n        OwnerId:\n          description: User who has ownership of the Show record.\n          format: int32\n          type: integer\n        RedirectTo:\n          description: Redirect to.\n          type: string\n        Releases:\n          description: List of releases associated with Show.\n          items:\n            $ref: \"#/components/schemas/ShowRelease\"\n          type: array\n        SeasonVideos:\n          description: All SeasonVideos including season and episode number.\n          items:\n            $ref: \"#/components/schemas/SeasonVideoExtended\"\n          type: array\n        Seasons:\n          items:\n            $ref: \"#/components/schemas/Season\"\n          type: array\n        Status:\n          description: Status of the show.\n          type: string\n        Tags:\n          description: List of tags associated with Show.\n          items:\n            $ref: \"#/components/schemas/Tag\"\n          type: array\n        TimeStamp:\n          description: Time of last change to overall object.\n          format: date-time\n          type: string\n        Title:\n          description: English version of any foreign Original Title.\n          type: string\n        Type:\n          description: Type of show.\n          type: string\n        VersionId:\n          description: Record Version Id\n          format: int64\n          type: integer\n        Videos:\n          description: List of videos associated with Show.\n          items:\n            $ref: \"#/components/schemas/ShowVideo\"\n          type: array\n        Year:\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - OriginalTitle\n        - Year\n      title: Show\n      type: object\n    ShowAlternateIdTypeResponse:\n      description: ShowAlternateIdTypeResponse\n      properties:\n        Id:\n          description: Unique ID of a ShowAlternateIdType.\n          format: int32\n          type: integer\n          nullable: false\n        Type:\n          description: Provider type of a ShowAlternateIdType.\n          type: string\n      title: ShowAlternateIdTypeResponse\n      type: object\n    ShowAlternateTitle:\n      description: ShowAlternateTitle\n      properties:\n        Country:\n          description: Country associated with this alternate title.\n          type: string\n        Id:\n          description: Unique ID of this ShowAlternateTitle\n          format: int64\n          type: integer\n        Modifier:\n          description: ID of last user who modified the item.\n          format: int32\n          type: integer\n        Title:\n          description: The alternate title.\n          type: string\n      title: ShowAlternateTitle\n      type: object\n    ShowAvailabilityResponse:\n      description: ShowAvailabilityResponse\n      properties:\n        Country:\n          type: string\n        Currency:\n          type: string\n        DeliveryMethod:\n          type: string\n        ExpirationDate:\n          format: date-time\n          type: string\n        Links:\n          items:\n            $ref: \"#/components/schemas/OfferLink\"\n          type: array\n        OfferType:\n          type: string\n        PreSale:\n          type: boolean\n          nullable: false\n        Price:\n          format: double\n          type: number\n          nullable: false\n        Provider:\n          type: string\n        Quality:\n          type: string\n        StartDate:\n          format: date-time\n          type: string\n        Title:\n          type: string\n      title: ShowAvailabilityResponse\n      type: object\n    ShowChangeHistoryResponse:\n      description: ShowChangeHistoryResponse\n      properties:\n        ShowId:\n          description: ID of the Show.\n          format: int64\n          type: integer\n          nullable: false\n      title: ShowChangeHistoryResponse\n      type: object\n    ShowChangeHistoryWithEntityResponse:\n      description: ShowChangeHistoryWithEntityResponse\n      properties:\n        Entity:\n          description: Object belonging to Show that has changed.\n          type: string\n        ShowId:\n          description: ID of the Show.\n          format: int64\n          type: integer\n          nullable: false\n      title: ShowChangeHistoryWithEntityResponse\n      type: object\n    ShowContributor:\n      description: ShowContributor\n      properties:\n        Character:\n          description: Role played by ShowContributor.\n          type: string\n        Job:\n          description: Job of Person associated with ShowContributor.\n          type: string\n        NumberOfEpisodes:\n          description: Number of episodes this actors contributed.\n          format: int32\n          type: integer\n          nullable: false\n        PersonId:\n          description: ID of Person associated with ShowContributor.\n          format: int64\n          type: integer\n          nullable: false\n        PersonName:\n          description: Person's Name associated with ShowContributor.\n          type: string\n      title: ShowContributor\n      type: object\n    ShowDescription:\n      description: ShowDescription\n      properties:\n        Attribution:\n          description: Source of ShowDescription.\n          type: string\n        Description:\n          description: Show Description.\n          type: string\n        Id:\n          description: Unique ID of this ShowDescription\n          format: int64\n          type: integer\n        Language:\n          description: Language object for language of ShowDescription.\n          type: string\n        Modifier:\n          description: ID of last user who modified the item.\n          format: int32\n          type: integer\n      title: ShowDescription\n      type: object\n    ShowExternalIdMap:\n      description: ShowExternalIdMap\n      properties:\n        ExternalId:\n          type: string\n        ShowId:\n          format: int64\n          type: integer\n          nullable: false\n      title: ShowExternalIdMap\n      type: object\n    ShowGenre:\n      description: ShowGenre\n      properties:\n        Id:\n          description: Id of the Genre object.\n          format: int32\n          type: integer\n        Name:\n          description: Name of the Genre.\n          type: string\n      title: ShowGenre\n      type: object\n    ShowGenreResponse:\n      description: ShowGenreResponse\n      properties:\n        Id:\n          description: Id of the Genre object.\n          format: int32\n          type: integer\n        Name:\n          description: Name of the Genre.\n          type: string\n      title: ShowGenreResponse\n      type: object\n    ShowImage:\n      description: ShowImage\n      properties:\n        FilePath:\n          description: Filepath (location) of ShowImage.\n          type: string\n        Height:\n          description: Height in pixels of ShowImage.\n          format: int32\n          type: integer\n          nullable: false\n        Id:\n          description: Unique ID of this ShowImage\n          format: int64\n          type: integer\n        ImageId:\n          description: ID of Image associated with ShowImage.\n          format: int64\n          type: integer\n        ImageType:\n          description: ImageType of ShowImage.\n          type: string\n        Language:\n          description: Language associated with ShowImage.\n          type: string\n        Modified:\n          description: Time when image was last modified.\n          format: date-time\n          type: string\n        Official:\n          description: Determines if image is official.\n          type: boolean\n        Sexuality:\n          description: 1-5 (Very-Unlikely to Very-Likely) probability of sexual theme in\n            image.\n          format: int32\n          type: integer\n        Tags:\n          description: List of Tags associated with this ShowImage\n          items:\n            $ref: \"#/components/schemas/Tag\"\n          type: array\n        Violence:\n          description: 1-5 (Very-Unlikely to Very-Likely) probability of violent theme in\n            image.\n          format: int32\n          type: integer\n        Width:\n          description: Width in pixels of ShowImage.\n          format: int32\n          type: integer\n          nullable: false\n      title: ShowImage\n      type: object\n    ShowRelease:\n      description: ShowRelease\n      properties:\n        Certification:\n          description: Certification for ShowRelease.\n          type: string\n        Country:\n          description: The Country Show was released.\n          type: string\n        Date:\n          description: Date of this ShowRelease.\n          format: date-time\n          type: string\n        Id:\n          description: Unique Id of this ShowRelease.\n          format: int64\n          type: integer\n        Modifier:\n          description: ID of last user who modified the item.\n          format: int32\n          type: integer\n        Type:\n          description: The type of this ShowRelease.\n          type: string\n      title: ShowRelease\n      type: object\n    ShowReleaseTypeResponse:\n      description: ShowReleaseTypeResponse\n      properties:\n        Id:\n          description: Unique ID of ShowReleaseType.\n          format: int32\n          type: integer\n          nullable: false\n        Type:\n          description: Name of ShowReleaseType.\n          type: string\n      title: ShowReleaseTypeResponse\n      type: object\n    ShowResponse:\n      description: ShowResponse\n      properties:\n        AlternateTitles:\n          description: List of alternate titles for this Show.\n          items:\n            $ref: \"#/components/schemas/ShowAlternateTitle\"\n          type: array\n        Availabilities:\n          description: List of show availability.\n          items:\n            $ref: \"#/components/schemas/ShowAvailabilityResponse\"\n          type: array\n        Companies:\n          description: List of companies (Production, Distribution, etc.) associated with\n            Show.\n          items:\n            $ref: \"#/components/schemas/Company\"\n          type: array\n        Contributors:\n          description: List of contributors (Cast, Director, Writer, Production, etc.) for\n            this Show.\n          items:\n            $ref: \"#/components/schemas/ShowContributor\"\n          type: array\n        Created:\n          description: DateTime Show record created.\n          format: date-time\n          type: string\n          nullable: false\n        Deleted:\n          description: Flag signifies if Show record is 'Deleted'.\n          type: boolean\n        Descriptions:\n          description: List of descriptions for this Show.\n          items:\n            $ref: \"#/components/schemas/ShowDescription\"\n          type: array\n        EpisodeVideos:\n          description: All EpisodesVideos including season and episode number.\n          items:\n            $ref: \"#/components/schemas/EpisodeVideoExtended\"\n          type: array\n        ExternalIds:\n          description: List of external Ids associated with Show.\n          items:\n            $ref: \"#/components/schemas/ExternalId\"\n          type: array\n        Genres:\n          description: List of genres associated with Show.\n          items:\n            $ref: \"#/components/schemas/ShowGenre\"\n          type: array\n        Id:\n          description: Unique ID of the Show.\n          format: int64\n          type: integer\n          nullable: false\n        Idx:\n          description: Index to differentiate shows with identical titles and year.\n          type: string\n        Images:\n          description: List of images associated with Show.\n          items:\n            $ref: \"#/components/schemas/ShowImage\"\n          type: array\n        Modified:\n          description: DateTime Show record last modified.\n          format: date-time\n          type: string\n          nullable: false\n        Modifier:\n          description: ID of last user who modified the item.\n          format: int32\n          type: integer\n        OfficialSiteUrl:\n          description: Show website home page.\n          type: string\n        OriginalLanguage:\n          description: ID of Show original language.\n          type: string\n        OriginalReleaseDate:\n          description: Original release date of Show.\n          format: date-time\n          type: string\n        OriginalTitle:\n          type: string\n        OriginatingNetwork:\n          description: Last network new episodes aired on.\n          type: string\n        OwnerId:\n          description: User who has ownership of the Show record.\n          format: int32\n          type: integer\n        RedirectTo:\n          description: Redirect to.\n          type: string\n        Releases:\n          description: List of releases associated with Show.\n          items:\n            $ref: \"#/components/schemas/ShowRelease\"\n          type: array\n        SeasonVideos:\n          description: All SeasonVideos including season and episode number.\n          items:\n            $ref: \"#/components/schemas/SeasonVideoExtended\"\n          type: array\n        Seasons:\n          items:\n            $ref: \"#/components/schemas/Season\"\n          type: array\n        Status:\n          description: Status of the show.\n          type: string\n        Tags:\n          description: List of tags associated with Show.\n          items:\n            $ref: \"#/components/schemas/Tag\"\n          type: array\n        TimeStamp:\n          description: Time of last change to overall object.\n          format: date-time\n          type: string\n        Title:\n          description: English version of any foreign Original Title.\n          type: string\n        Type:\n          description: Type of show.\n          type: string\n        VersionId:\n          description: Record Version Id\n          format: int64\n          type: integer\n        Videos:\n          description: List of videos associated with Show.\n          items:\n            $ref: \"#/components/schemas/ShowVideo\"\n          type: array\n        Year:\n          format: int32\n          type: integer\n          nullable: false\n      required:\n        - OriginalTitle\n        - Year\n      title: ShowResponse\n      type: object\n    ShowResult:\n      description: ShowResult\n      properties:\n        Document:\n          $ref: \"#/components/schemas/DiscoverShow\"\n        Score:\n          description: Score of this match in Show search.\n          format: double\n          type: number\n          nullable: false\n      title: ShowResult\n      type: object\n    ShowVideo:\n      description: ShowVideo\n      properties:\n        AllowAdvertising:\n          description: Flag denoting if pre-roll video ads are allowed in front of of\n            content.\n          type: boolean\n          nullable: false\n        Certification:\n          description: Certification for ShowVideo.\n          type: boolean\n        Clean:\n          description: True if Certification, Theatrical, and HomeVideo are False.\n          type: boolean\n        Company:\n          description: Company associated with ShowVideo.\n          type: string\n        Duration:\n          description: Runtime of ShowVideo.\n          format: int32\n          type: integer\n          nullable: false\n        Encoded:\n          description: Datetime ShowVideo was encoded.\n          format: date-time\n          type: string\n          nullable: false\n        Encodes:\n          description: List of Encodes (bitrate and type) for ShowVideo.\n          items:\n            $ref: \"#/components/schemas/ShowVideoEncode\"\n          type: array\n        ExpirationDate:\n          description: Date ShowVideo expires.\n          format: date-time\n          type: string\n        HomeVideo:\n          description: Flag for promoting Home Video.\n          type: boolean\n        Id:\n          description: Unique ID of ShowVideo.\n          format: int64\n          type: integer\n          nullable: false\n        Language:\n          description: Language associated with MovieVideo.\n          type: string\n        LanguageSubtitled:\n          description: Subtitle language associated with ShowVideo.\n          type: string\n        Mature:\n          description: Flag for designating video content not suitable for children. Age\n            gate required.\n          type: boolean\n          nullable: false\n        Modifier:\n          description: ID of last user who modified the item.\n          format: int32\n          type: integer\n        ScreenCaptures:\n          description: List of screen captures from ShowVideo.\n          items:\n            $ref: \"#/components/schemas/ShowVideoScreenCapture\"\n          type: array\n        SourceVideoHeight:\n          description: Height in pixels of ShowVideo.\n          format: int32\n          type: integer\n          nullable: false\n        SourceVideoWidth:\n          description: Width in pixels of ShowVideo.\n          format: int32\n          type: integer\n          nullable: false\n        StartDate:\n          description: First date of ShowVideo availability.\n          format: date-time\n          type: string\n        TargetCountries:\n          description: List of countries targeted by ShowVideo.\n          items:\n            $ref: \"#/components/schemas/TargetCountry\"\n          type: array\n        Title:\n          description: Title of ShowVideo, not Show.\n          type: string\n        TuneIn:\n          description: Flag for promoting tune in.\n          type: boolean\n        Type:\n          description: VideoType for the ShowVideo.\n          type: string\n      title: ShowVideo\n      type: object\n    ShowVideoEncode:\n      description: ShowVideoEncode\n      properties:\n        BitRate:\n          description: BitRate of ShowVideoEncode.\n          format: int32\n          type: integer\n        EncodeType:\n          description: Datetime when the ShowVideoEncode was encoded.\n          type: string\n        Id:\n          description: Unique ID of the video encode\n          format: int64\n          type: integer\n        Modifier:\n          description: ID of last user who modified the item.\n          format: int32\n          type: integer\n      title: ShowVideoEncode\n      type: object\n    ShowVideoScreenCapture:\n      description: ShowVideoScreenCapture\n      properties:\n        Aspect:\n          description: Aspect ratio of ShowVideoScreenCapture.\n          type: string\n        FilePath:\n          description: Filepath (location) of ShowVideoScreenCapture.\n          type: string\n        Height:\n          description: Height in pixels of ShowVideoScreenCapture.\n          format: int32\n          type: integer\n          nullable: false\n        Id:\n          description: Unique ID of the screen capture\n          format: int64\n          type: integer\n        Modifier:\n          description: ID of last user who modified the item.\n          format: int32\n          type: integer\n        Width:\n          description: Width in pixels of ShowVideoScreenCapture.\n          format: int32\n          type: integer\n          nullable: false\n      title: ShowVideoScreenCapture\n      type: object\n    ShowtimeItemDetail:\n      description: ShowtimeItemDetail\n      properties:\n        amenities:\n          items:\n            $ref: \"#/components/schemas/FandangoAmenity\"\n          type: array\n        auditoriumId:\n          format: int32\n          type: integer\n          nullable: false\n        dateTime:\n          $ref: \"#/components/schemas/FandangoDatetime\"\n        displayDate:\n          type: string\n        distance:\n          format: double\n          type: number\n          nullable: false\n        expired:\n          type: boolean\n          nullable: false\n        formatName:\n          type: string\n        id:\n          type: string\n        isTicketing:\n          type: boolean\n          nullable: false\n        message:\n          type: string\n        movieId:\n          type: string\n        movieTitle:\n          type: string\n        seatingType:\n          type: string\n        theaterChainCode:\n          type: string\n        theaterId:\n          type: string\n        theaterName:\n          type: string\n        type:\n          type: string\n      title: ShowtimeItemDetail\n      type: object\n    Station:\n      description: Station\n      properties:\n        DTV_TSID:\n          description: In the case of broadcast stations, denotes the FCC/Industry Canada\n            assigned TSID included within the transmission stream.\n          format: int32\n          type: integer\n          nullable: false\n        NTSC_TSID:\n          description: \" In the case of broadcast stations, denotes the FCC/Industry Canada\n            assigned TSID included within the transmission stream.\"\n          format: int32\n          type: integer\n          nullable: false\n        Twitter:\n          type: string\n        callsign:\n          description: Station short name.\n          type: string\n        channelNumber:\n          description: Channel number.\n          format: int32\n          type: integer\n          nullable: false\n        logoFilename:\n          description: Filename and extension for station's logo.\n          type: string\n        name:\n          type: string\n        network:\n          description: Network this station is on.\n          type: string\n        number:\n          description: ChannelNumber, hyphenated by subChannelNumber when present\n          type: string\n        stationHD:\n          description: Is this station hd?\n          type: boolean\n          nullable: false\n        stationID:\n          description: Unique station ID.\n          format: int32\n          type: integer\n          nullable: false\n        stationType:\n          type: string\n        subChannelNumber:\n          description: Sub channel number.\n          format: int32\n          type: integer\n          nullable: false\n        webLink:\n          description: URL to station's website.\n          type: string\n      title: Station\n      type: object\n    SummaryResponse:\n      description: SummaryResponse\n      properties:\n        AverageViews:\n          format: float\n          type: number\n          nullable: false\n        UniqueViewers:\n          format: int32\n          type: integer\n          nullable: false\n        Viewers:\n          format: int32\n          type: integer\n          nullable: false\n        Views:\n          format: int32\n          type: integer\n          nullable: false\n      title: SummaryResponse\n      type: object\n    Tag:\n      description: Tag\n      properties:\n        Name:\n          description: Name of the Tag.\n          type: string\n        TagId:\n          description: ID of the Tag.\n          format: int64\n          type: integer\n          nullable: false\n      title: Tag\n      type: object\n    TagResponse:\n      description: TagResponse\n      properties:\n        Id:\n          format: int64\n          type: integer\n          nullable: false\n        Name:\n          type: string\n      title: TagResponse\n      type: object\n    TargetCountry:\n      description: TargetCountry\n      properties:\n        CountryId:\n          description: ID of the Country.\n          format: int64\n          type: integer\n          nullable: false\n        Id:\n          description: ID of the TargetCountry.\n          format: int64\n          type: integer\n        Name:\n          description: Name of the country\n          type: string\n      title: TargetCountry\n      type: object\n    TestDateTimeResponse:\n      description: TestDateTimeResponse\n      properties:\n        DateTime:\n          format: date-time\n          type: string\n          nullable: false\n        DateTimeString:\n          type: string\n      title: TestDateTimeResponse\n      type: object\n    TitleReportResponse:\n      description: TitleReportResponse\n      properties:\n        Day:\n          format: date-time\n          type: string\n          nullable: false\n        PublishedId:\n          format: int32\n          type: integer\n          nullable: false\n        Viewers:\n          format: int32\n          type: integer\n          nullable: false\n        Views:\n          format: int32\n          type: integer\n          nullable: false\n      title: TitleReportResponse\n      type: object\n    TrendSourceResponse:\n      description: TrendSourceResponse\n      properties:\n        Active:\n          type: boolean\n          nullable: false\n        Brand:\n          type: string\n        Classifiers:\n          items:\n            type: string\n          type: array\n        CountryId:\n          format: int32\n          type: integer\n        Id:\n          format: int32\n          type: integer\n          nullable: false\n        ItemCount:\n          format: int32\n          type: integer\n          nullable: false\n        ListUrl:\n          type: string\n        Modified:\n          format: date-time\n          type: string\n          nullable: false\n        Name:\n          type: string\n      title: TrendSourceResponse\n      type: object\n    TvMediaChannelResponse:\n      description: TvMediaChannelResponse\n      properties:\n        DTV_TSID:\n          format: int32\n          type: integer\n          nullable: false\n        NTSC_TSID:\n          format: int32\n          type: integer\n          nullable: false\n        Twitter:\n          type: string\n        callsign:\n          type: string\n        channelNumber:\n          format: int32\n          type: integer\n          nullable: false\n        logoFilename:\n          type: string\n        name:\n          type: string\n        network:\n          type: string\n        number:\n          type: string\n        stationHD:\n          type: boolean\n          nullable: false\n        stationID:\n          format: int32\n          type: integer\n          nullable: false\n        stationType:\n          type: string\n        subChannelNumber:\n          format: int32\n          type: integer\n          nullable: false\n        webLink:\n          type: string\n      title: TvMediaChannelResponse\n      type: object\n    TvMediaCountryResponse:\n      description: TvMediaCountryResponse\n      properties:\n        countryID:\n          type: string\n        countryName:\n          type: string\n      title: TvMediaCountryResponse\n      type: object\n    TvMediaExternalId:\n      description: TvMediaExternalId\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n      title: TvMediaExternalId\n      type: object\n    TvMediaGenreResponse:\n      description: TvMediaGenreResponse\n      properties:\n        genre:\n          type: string\n        genreID:\n          type: string\n      title: TvMediaGenreResponse\n      type: object\n    TvMediaGridResponse:\n      description: TvMediaGridResponse\n      properties:\n        channel:\n          $ref: \"#/components/schemas/TvMediaChannelResponse\"\n        listings:\n          items:\n            $ref: \"#/components/schemas/TvMediaShortListingResponse\"\n          type: array\n      title: TvMediaGridResponse\n      type: object\n    TvMediaLeagueResponse:\n      description: TvMediaLeagueResponse\n      properties:\n        leagueID:\n          type: string\n        leagueName:\n          type: string\n        logo:\n          type: string\n      title: TvMediaLeagueResponse\n      type: object\n    TvMediaLineupResponse:\n      description: TvMediaLineupResponse\n      properties:\n        country:\n          type: string\n        lineupID:\n          type: string\n        lineupName:\n          type: string\n        lineupType:\n          type: string\n        providerID:\n          type: string\n        providerName:\n          type: string\n        serviceArea:\n          type: string\n        stations:\n          items:\n            $ref: \"#/components/schemas/Station\"\n          type: array\n      title: TvMediaLineupResponse\n      type: object\n    TvMediaListingResponse:\n      description: TvMediaListingResponse\n      properties:\n        PremieresAndFinalesOnly:\n          type: boolean\n          nullable: false\n        artwork:\n          $ref: \"#/components/schemas/Artwork\"\n        blackWhite:\n          type: boolean\n          nullable: false\n        breakoutLevel:\n          format: int32\n          type: integer\n          nullable: false\n        callsign:\n          type: string\n        captioned:\n          type: boolean\n          nullable: false\n        cast:\n          type: string\n        channelNumber:\n          format: int32\n          type: integer\n          nullable: false\n        description:\n          type: string\n        descriptiveVideo:\n          type: boolean\n          nullable: false\n        director:\n          type: string\n        duration:\n          format: int32\n          type: integer\n          nullable: false\n        educational:\n          type: boolean\n          nullable: false\n        episodeNumber:\n          type: string\n        episodeTitle:\n          type: string\n        eventName:\n          type: string\n        externalIds:\n          items:\n            $ref: \"#/components/schemas/TvMediaExternalId\"\n          type: array\n        guest:\n          type: string\n        hd:\n          type: boolean\n          nullable: false\n        inProgress:\n          type: boolean\n          nullable: false\n        isNew:\n          type: boolean\n          nullable: false\n        league:\n          type: string\n        listDateTime:\n          type: string\n        listingID:\n          format: int32\n          type: integer\n          nullable: false\n        live:\n          type: boolean\n          nullable: false\n        location:\n          type: string\n        logoFilename:\n          type: string\n        name:\n          type: string\n        network:\n          type: string\n        number:\n          type: string\n        partNum:\n          format: int32\n          type: integer\n          nullable: false\n        parts:\n          format: int32\n          type: integer\n          nullable: false\n        rating:\n          type: string\n        repeat:\n          type: boolean\n          nullable: false\n        seasonFinale:\n          type: boolean\n          nullable: false\n        seasonPremiere:\n          type: boolean\n          nullable: false\n        seriesFinale:\n          type: boolean\n          nullable: false\n        seriesID:\n          format: int32\n          type: integer\n          nullable: false\n        seriesPremiere:\n          type: boolean\n          nullable: false\n        showHost:\n          type: string\n        showID:\n          format: int32\n          type: integer\n          nullable: false\n        showName:\n          type: string\n        showPicture:\n          type: string\n        showType:\n          type: string\n        showTypeID:\n          type: string\n        starRating:\n          format: int32\n          type: integer\n          nullable: false\n        stationID:\n          format: int32\n          type: integer\n          nullable: false\n        stationType:\n          type: string\n        subChannelNumber:\n          format: int32\n          type: integer\n          nullable: false\n        subtitled:\n          type: boolean\n          nullable: false\n        team1:\n          type: string\n        team1ID:\n          format: int32\n          type: integer\n          nullable: false\n        team2:\n          type: string\n        team2ID:\n          format: int32\n          type: integer\n          nullable: false\n        webLink:\n          type: string\n        year:\n          type: string\n      title: TvMediaListingResponse\n      type: object\n    TvMediaRegionResponse:\n      description: TvMediaRegionResponse\n      properties:\n        regionID:\n          type: string\n        regionName:\n          type: string\n      title: TvMediaRegionResponse\n      type: object\n    TvMediaServiceAreaResponse:\n      description: TvMediaServiceAreaResponse\n      properties:\n        areaID:\n          type: string\n        areaName:\n          type: string\n      title: TvMediaServiceAreaResponse\n      type: object\n    TvMediaShortListingResponse:\n      description: TvMediaShortListingResponse\n      properties:\n        artwork:\n          $ref: \"#/components/schemas/Artwork\"\n        blackWhite:\n          type: boolean\n          nullable: false\n        breakoutLevel:\n          format: int32\n          type: integer\n          nullable: false\n        captioned:\n          type: boolean\n          nullable: false\n        cast:\n          type: string\n        description:\n          type: string\n        descriptiveVideo:\n          type: boolean\n          nullable: false\n        director:\n          type: string\n        duration:\n          format: int32\n          type: integer\n          nullable: false\n        educational:\n          type: boolean\n          nullable: false\n        episodeNumber:\n          type: string\n        episodeTitle:\n          type: string\n        eventName:\n          type: string\n        guest:\n          type: string\n        hd:\n          type: boolean\n          nullable: false\n        inProgress:\n          type: boolean\n          nullable: false\n        isNew:\n          type: boolean\n          nullable: false\n        league:\n          type: string\n        listDateTime:\n          type: string\n        listingID:\n          format: int32\n          type: integer\n          nullable: false\n        live:\n          type: boolean\n          nullable: false\n        location:\n          type: string\n        partNum:\n          format: int32\n          type: integer\n          nullable: false\n        parts:\n          format: int32\n          type: integer\n          nullable: false\n        rating:\n          type: string\n        repeat:\n          type: boolean\n          nullable: false\n        seasonFinale:\n          type: boolean\n          nullable: false\n        seasonPremiere:\n          type: boolean\n          nullable: false\n        seriesFinale:\n          type: boolean\n          nullable: false\n        seriesID:\n          format: int32\n          type: integer\n          nullable: false\n        seriesPremiere:\n          type: boolean\n          nullable: false\n        showHost:\n          type: string\n        showID:\n          format: int32\n          type: integer\n          nullable: false\n        showName:\n          type: string\n        showPicture:\n          type: string\n        showType:\n          type: string\n        showTypeID:\n          type: string\n        starRating:\n          format: int32\n          type: integer\n          nullable: false\n        subtitled:\n          type: boolean\n          nullable: false\n        team1:\n          type: string\n        team1ID:\n          format: int32\n          type: integer\n          nullable: false\n        team2:\n          type: string\n        team2ID:\n          format: int32\n          type: integer\n          nullable: false\n        year:\n          type: string\n      title: TvMediaShortListingResponse\n      type: object\n    TvMediaStationResponse:\n      description: TvMediaStationResponse\n      properties:\n        DTV_TSID:\n          format: int32\n          type: integer\n          nullable: false\n        NTSC_TSID:\n          format: int32\n          type: integer\n          nullable: false\n        Twitter:\n          type: string\n        callsign:\n          type: string\n        logoFilename:\n          type: string\n        name:\n          type: string\n        network:\n          type: string\n        stationHD:\n          type: boolean\n          nullable: false\n        stationID:\n          format: int32\n          type: integer\n          nullable: false\n        stationType:\n          type: string\n        webLink:\n          type: string\n      title: TvMediaStationResponse\n      type: object\n    TvMediaTeamResponse:\n      description: TvMediaTeamResponse\n      properties:\n        leagueID:\n          type: string\n        logo:\n          type: string\n        longName:\n          type: string\n        mediumName:\n          type: string\n        shortName:\n          type: string\n        teamID:\n          format: int32\n          type: integer\n          nullable: false\n      title: TvMediaTeamResponse\n      type: object\n    UpdateMyProgram:\n      description: UpdateMyProgram\n      properties:\n        CustomMetadata:\n          description: List of custom metadata entries.\n          items:\n            $ref: \"#/components/schemas/CustomMetadata\"\n          type: array\n        EntertainmentConnections:\n          description: List of connections to existing Entertainment programs.\n          items:\n            $ref: \"#/components/schemas/EntertainmentConnection\"\n          type: array\n        Id:\n          description: Unique ID of MyVideo.\n          format: int64\n          type: integer\n          nullable: false\n        ReferenceId:\n          description: Client reference ID of MyVideo.\n          type: string\n        Title:\n          description: Title of MyVideo.\n          type: string\n      title: UpdateMyProgram\n      type: object\n    UpdateMyVideo:\n      description: UpdateMyVideo\n      properties:\n        Companies:\n          description: Companies of MyVideo.\n          items:\n            type: string\n          type: array\n        Descriptions:\n          description: Description of MyVideo.\n          items:\n            $ref: \"#/components/schemas/MyVideoDescription\"\n          type: array\n        EntertainmentConnections:\n          description: List of connections to existing Entertainment programs.\n          items:\n            $ref: \"#/components/schemas/EntertainmentConnection\"\n          type: array\n        ExpirationDate:\n          description: Date MyVideo expires / becomes unavailable for streaming.\n          format: date-time\n          type: string\n        Id:\n          description: Unique ID of MyVideo.\n          format: int64\n          type: integer\n          nullable: false\n        ReferenceId:\n          description: Client reference ID of MyVideo.\n          type: string\n        StartDate:\n          description: First date of MyVideo availability.\n          format: date-time\n          type: string\n        Title:\n          description: Title of MyVideo.\n          type: string\n      title: UpdateMyVideo\n      type: object\n    VideoLogResponse:\n      description: VideoLogResponse\n      properties:\n        Percentage:\n          format: double\n          type: number\n          nullable: false\n        UniqueViewers:\n          format: int32\n          type: integer\n          nullable: false\n        VideoPublishedId:\n          format: int32\n          type: integer\n          nullable: false\n        VideoTitle:\n          type: string\n        Viewers:\n          format: int32\n          type: integer\n          nullable: false\n        Views:\n          format: int32\n          type: integer\n          nullable: false\n      title: VideoLogResponse\n      type: object\n    VideoResponse:\n      description: VideoResponse\n      properties:\n        Expires:\n          format: date-time\n          type: string\n          nullable: false\n        Url:\n          type: string\n      title: VideoResponse\n      type: object\n    VideoScreenCapture:\n      description: VideoScreenCapture\n      properties:\n        Aspect:\n          type: string\n        FilePath:\n          type: string\n        Height:\n          format: int32\n          type: integer\n          nullable: false\n        Width:\n          format: int32\n          type: integer\n          nullable: false\n      title: VideoScreenCapture\n      type: object\n    VideoTypeResponse:\n      description: VideoTypeResponse\n      properties:\n        Id:\n          description: Unique ID of VideoType.\n          format: int32\n          type: integer\n          nullable: false\n        Type:\n          description: Type of VideoType.\n          type: string\n      title: VideoTypeResponse\n      type: object\n    ViewersResponse:\n      description: ViewersResponse\n      properties:\n        Day:\n          format: date-time\n          type: string\n          nullable: false\n        Viewers:\n          format: int32\n          type: integer\n          nullable: false\n      title: ViewersResponse\n      type: object\n    ViewsResponse:\n      description: ViewsResponse\n      properties:\n        Day:\n          format: date-time\n          type: string\n          nullable: false\n        Views:\n          format: int32\n          type: integer\n          nullable: false\n      title: ViewsResponse\n      type: object\n    WebBrowsersResponse:\n      description: WebBrowsersResponse\n      properties:\n        Browser:\n          type: string\n        Percentage:\n          format: double\n          type: number\n          nullable: false\n        Viewers:\n          format: int32\n          type: integer\n          nullable: false\n      title: WebBrowsersResponse\n      type: object\n    XRoadMediaRecommendationResponse:\n      description: XRoadMediaRecommendationResponse\n      properties:\n        recommendations:\n          items:\n            $ref: \"#/components/schemas/Recommendation\"\n          type: array\n      title: XRoadMediaRecommendationResponse\n      type: object\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"GetSeasonBySeasonNumber\": parse schema: property \"Includes\": parse enum values: parse value \"\\\"Releases\\\"\": expected type \"array\", got \"string\""
}