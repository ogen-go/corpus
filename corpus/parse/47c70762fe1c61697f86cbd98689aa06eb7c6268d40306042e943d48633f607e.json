{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/RedHatInsights/catalog-api"
		},
		"file": {
			"name": "openapi-3-v1.2.json",
			"size": 0,
			"path": "public/doc/openapi-3-v1.2.json",
			"byteSize": 121643,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"description\": \"This API gets and orders catalog items from different cloud sources.\",\n    \"version\": \"1.2.0\",\n    \"title\": \"Catalog API\",\n    \"contact\": {\n      \"email\": \"support@redhat.com\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    }\n  },\n  \"security\": [\n    {\n      \"BasicAuth\": [\n\n      ]\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"Portfolio\",\n      \"description\": \"Portfolio API calls\"\n    },\n    {\n      \"name\": \"PortfolioItem\",\n      \"description\": \"Portfolio Item API calls\"\n    },\n    {\n      \"name\": \"Order\",\n      \"description\": \"Order API calls\"\n    },\n    {\n      \"name\": \"OrderItem\",\n      \"description\": \"OrderItem API calls\"\n    },\n    {\n      \"name\": \"OrderProcess\",\n      \"description\": \"OrderProcess API calls\"\n    }\n  ],\n  \"paths\": {\n    \"/graphql\": {\n      \"post\": {\n        \"summary\": \"Perform a GraphQL Query\",\n        \"operationId\": \"postGraphQL\",\n        \"description\": \"Performs a GraphQL Query\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/GraphQLRequest\"\n              }\n            }\n          },\n          \"description\": \"GraphQL Query Request\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"GraphQL Query Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GraphQLResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/openapi.json\": {\n      \"get\": {\n        \"summary\": \"Return this API document in JSON format\",\n        \"operationId\": \"getDocumentation\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The API document for this version of the API\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/portfolios\": {\n      \"get\": {\n        \"tags\": [\n          \"Portfolio\"\n        ],\n        \"summary\": \"List portfolios\",\n        \"operationId\": \"listPortfolios\",\n        \"description\": \"Gets a list of portfolios.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/QueryLimit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryOffset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryFilter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QuerySortBy\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns a list of portfolios. An empty list indicate either undefined portfolios in the system or inaccessibility to the caller.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PortfoliosCollection\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Portfolio\"\n        ],\n        \"summary\": \"Add a new portfolio\",\n        \"operationId\": \"createPortfolio\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Portfolio\",\n                \"required\": [\n                  \"name\"\n                ]\n              }\n            }\n          },\n          \"description\": \"Parameters needed to add a Portfolio\",\n          \"required\": true\n        },\n        \"description\": \"Adds a portfolio.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully added the new portfolio.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Portfolio\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequest\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          }\n        }\n      }\n    },\n    \"/portfolios/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"Portfolio\"\n        ],\n        \"summary\": \"Get a specific portfolio\",\n        \"operationId\": \"showPortfolio\",\n        \"description\": \"Gets the portfolio specified by the portfolio ID.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Portfolio matching the portfolio ID.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Portfolio\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequest\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Portfolio not found.\"\n          }\n        }\n      },\n      \"patch\": {\n        \"tags\": [\n          \"Portfolio\"\n        ],\n        \"summary\": \"Edit an existing portfolio\",\n        \"operationId\": \"updatePortfolio\",\n        \"description\": \"Returns the edited portfolio.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Portfolio\"\n              }\n            }\n          },\n          \"description\": \"Parameters needed to update a Portfolio\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Portfolio successfully edited.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Portfolio\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequest\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Portfolio\"\n        ],\n        \"summary\": \"Delete an existing portfolio\",\n        \"operationId\": \"destroyPortfolio\",\n        \"description\": \"Deletes the portfolio specified by the ID.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Portfolio Deleted.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestoreKey\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Failed to discard child portfolio items.\"\n          },\n          \"404\": {\n            \"description\": \"Portfolio Not Found.\"\n          }\n        }\n      }\n    },\n    \"/portfolios/{portfolio_id}/portfolio_items\": {\n      \"get\": {\n        \"tags\": [\n          \"Portfolio\"\n        ],\n        \"summary\": \"Get all portfolio items from a specific portfolio\",\n        \"operationId\": \"fetchPortfolioItemsWithPortfolio\",\n        \"description\": \"Gets all portfilio items in the portfolio specified by the given ID.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/PortfolioID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryLimit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryOffset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryFilter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QuerySortBy\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns a list of portfolio items. An empty list is returned if the portfolio is not connected to any portfolio items.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PortfolioItemsCollection\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Portfolio not found\"\n          }\n        }\n      }\n    },\n    \"/portfolios/{portfolio_id}/share\": {\n      \"post\": {\n        \"tags\": [\n          \"Portfolio\"\n        ],\n        \"summary\": \"Share a portfolio with one or more groups with specific permission\",\n        \"operationId\": \"sharePortfolio\",\n        \"description\": \"Share a Portfolio with one or more groups with specific permissions\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/PortfolioID\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SharePolicy\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully shared the portfolio\"\n          },\n          \"400\": {\n            \"description\": \"One or more of the RBAC groups was not found\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The Portfolio Object was not found.\"\n          }\n        }\n      }\n    },\n    \"/portfolios/{portfolio_id}/unshare\": {\n      \"post\": {\n        \"tags\": [\n          \"Portfolio\"\n        ],\n        \"summary\": \"Unshare a portfolio from one or more groups with specific permission\",\n        \"operationId\": \"unsharePortfolio\",\n        \"description\": \"Unshare a Portfolio with one or more groups with specific permissions\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/PortfolioID\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UnsharePolicy\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully unshared portfolio\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The Portfolio Object or the one or more of the groups was not found.\"\n          }\n        }\n      }\n    },\n    \"/portfolios/{portfolio_id}/share_info\": {\n      \"get\": {\n        \"tags\": [\n          \"Portfolio\"\n        ],\n        \"summary\": \"Fetch share information about this portfolio, the response would include a collection of groups and permissions with each group\",\n        \"operationId\": \"share_info\",\n        \"description\": \"Fetch share information about a portfolio\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/PortfolioID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns an array of group uuid, name and permissions\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ShareInfo\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The Portfolio object not found\"\n          }\n        }\n      }\n    },\n    \"/portfolios/{portfolio_id}/copy\": {\n      \"post\": {\n        \"tags\": [\n          \"Portfolio\"\n        ],\n        \"summary\": \"Make a copy of the Portfolio\",\n        \"operationId\": \"postCopyPortfolio\",\n        \"description\": \"Make a copy of the Portfolio.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/PortfolioID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The new Portfolio\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Portfolio\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Portfolio  not found\"\n          },\n          \"500\": {\n            \"description\": \"Failed to copy Portfolio\"\n          }\n        }\n      }\n    },\n    \"/portfolios/{id}/undelete\": {\n      \"post\": {\n        \"tags\": [\n          \"Portfolio\"\n        ],\n        \"summary\": \"Undelete specific portfolio\",\n        \"operationId\": \"unDeletePortfolio\",\n        \"description\": \"Undeletes the portfolio specified by the portfolio ID.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The undeleted portfolio\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Portfolio\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequest\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Portfolio not found.\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RestoreKey\"\n              }\n            }\n          },\n          \"required\": true\n        }\n      }\n    },\n    \"/portfolios/{portfolio_id}/icon\": {\n      \"get\": {\n        \"tags\": [\n          \"Portfolio\"\n        ],\n        \"summary\": \"Fetches the specified portfolio's icon image\",\n        \"operationId\": \"showPortfolioIcon\",\n        \"description\": \"Fetch the specified portfolio's icon image.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/PortfolioID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryCacheID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Portfolio Icon\",\n            \"content\": {\n              \"image/svg+xml\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"binary\"\n                }\n              },\n              \"image/png\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"binary\"\n                }\n              },\n              \"image/jpeg\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"binary\"\n                }\n              }\n            }\n          },\n          \"204\": {\n            \"description\": \"No icon present on Portfolio\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          }\n        }\n      }\n    },\n    \"/portfolios/{id}/tags\": {\n      \"get\": {\n        \"tags\": [\n          \"Portfolio\"\n        ],\n        \"summary\": \"List Tags for Portfolio\",\n        \"operationId\": \"listPortfolioTags\",\n        \"description\": \"Returns an array of Tag objects\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/QueryLimit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryOffset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryFilter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QuerySortBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Tags collection\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TagsCollection\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Portfolio Not Found.\"\n          }\n        }\n      }\n    },\n    \"/portfolios/{id}/tag\": {\n      \"post\": {\n        \"tags\": [\n          \"Portfolio\"\n        ],\n        \"summary\": \"Add Tag for Portfolio\",\n        \"operationId\": \"addPortfolioTag\",\n        \"description\": \"Adds a single tag to Portfolio object\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Tag successfully added\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Tag\"\n                  }\n                }\n              }\n            }\n          },\n          \"304\": {\n            \"$ref\": \"#/components/responses/NotModified\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Portfolio Not Found.\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Tag\"\n                }\n              }\n            }\n          },\n          \"required\": true\n        }\n      }\n    },\n    \"/portfolios/{id}/untag\": {\n      \"post\": {\n        \"tags\": [\n          \"Portfolio\"\n        ],\n        \"summary\": \"Remove Tags from Portfolio\",\n        \"description\": \"Remove Tags from Portfolio\",\n        \"operationId\": \"removePortfolioTags\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Tag Deleted\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Tag\"\n                }\n              }\n            }\n          },\n          \"required\": true\n        }\n      }\n    },\n    \"/tenants\": {\n      \"get\": {\n        \"tags\": [\n          \"Tenant\"\n        ],\n        \"summary\": \"List Tenants\",\n        \"operationId\": \"listTenants\",\n        \"description\": \"Get a list of tenants.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns a list of tenants.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TenantsCollection\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          }\n        }\n      }\n    },\n    \"/tenants/{tenant_id}\": {\n      \"get\": {\n        \"tags\": [\n          \"Tenant\"\n        ],\n        \"summary\": \"Get a specific Tenant\",\n        \"operationId\": \"showTenant\",\n        \"description\": \"Gets the tenant specified by the tenant id.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/TenantID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Tenant matching the tenant ID.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Tenant\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequest\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Tenant not found.\"\n          }\n        }\n      }\n    },\n    \"/portfolio_items\": {\n      \"get\": {\n        \"tags\": [\n          \"PortfolioItem\"\n        ],\n        \"summary\": \"List all portfolio items\",\n        \"operationId\": \"listPortfolioItems\",\n        \"description\": \"Gets a list of portfolio items.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/QueryLimit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryOffset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryFilter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QuerySortBy\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully returned a list of portfolio items.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PortfolioItemsCollection\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"PortfolioItem\"\n        ],\n        \"summary\": \"Add a new portfolio item\",\n        \"operationId\": \"createPortfolioItem\",\n        \"description\": \"Adds a name and description for a portfolio item and returns the newly created portfolio item.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The newly created portfolio item.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PortfolioItem\",\n                  \"required\": [\n                    \"name\",\n                    \"service_offering_source_ref\"\n                  ]\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequest\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Service Offering not found.\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreatePortfolioItem\"\n              }\n            }\n          },\n          \"required\": true\n        }\n      }\n    },\n    \"/portfolio_items/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"PortfolioItem\"\n        ],\n        \"summary\": \"Gets a specific portfolio item\",\n        \"operationId\": \"showPortfolioItem\",\n        \"description\": \"Gets a specific portfolio item based on the portfolio item ID passed\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/ShowDiscarded\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Portfolio item specified by the given ID.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PortfolioItem\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The portfolio item ID was not found\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"PortfolioItem\"\n        ],\n        \"summary\": \"Delete an existing portfolio item\",\n        \"operationId\": \"destroyPortfolioItem\",\n        \"description\": \"Deletes the portfolio item based on portfolio item ID passed\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Portfolio item deleted.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestoreKey\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Portfolio item not found.\"\n          }\n        }\n      },\n      \"patch\": {\n        \"tags\": [\n          \"PortfolioItem\"\n        ],\n        \"summary\": \"Edit an existing portfolio item\",\n        \"description\": \"Edits portfolio item specified by the given ID.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PortfolioItem\"\n              }\n            }\n          },\n          \"description\": \"Parameters needed to update a Portfolio Item\",\n          \"required\": true\n        },\n        \"operationId\": \"updatePortfolioItem\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Return the updated portfolio item object\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PortfolioItem\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The portfolio item ID was not found\"\n          }\n        }\n      }\n    },\n    \"/portfolio_items/{portfolio_item_id}/service_plans\": {\n      \"get\": {\n        \"tags\": [\n          \"PortfolioItem\"\n        ],\n        \"summary\": \"Gets all service plans for a specific portfolio item; requires a connection to the catalog inventory service.\",\n        \"operationId\": \"listServicePlans\",\n        \"description\": \"Gets all service plans for a portfolio item.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/PortfolioItemID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"All Service Plans\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ServicePlan\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Portfolio item not found\"\n          },\n          \"500\": {\n            \"description\": \"Could not access the catalog inventory Service\"\n          }\n        }\n      }\n    },\n    \"/portfolio_items/{portfolio_item_id}/undelete\": {\n      \"post\": {\n        \"tags\": [\n          \"PortfolioItem\"\n        ],\n        \"summary\": \"Undelete a specified Portfolio Item\",\n        \"operationId\": \"unDeletePortfolioItem\",\n        \"description\": \"If a record has been discarded, this operation will undelete it so it can be requested normally.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/PortfolioItemID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The undeleted Portfolio Item\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PortfolioItem\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Portfolio Item not found\"\n          },\n          \"500\": {\n            \"description\": \"Failed to undelete Portfolio Item\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RestoreKey\"\n              }\n            }\n          },\n          \"required\": true\n        }\n      }\n    },\n    \"/portfolio_items/{id}/tags\": {\n      \"get\": {\n        \"tags\": [\n          \"PortfolioItem\"\n        ],\n        \"summary\": \"List Tags for Portfolio Items\",\n        \"operationId\": \"listPortfolioItemTags\",\n        \"description\": \"Returns an array of Tag objects\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/QueryLimit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryOffset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryFilter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QuerySortBy\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Tags collection\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TagsCollection\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Portfolio Item Not Found.\"\n          }\n        }\n      }\n    },\n    \"/portfolio_items/{id}/tag\": {\n      \"post\": {\n        \"tags\": [\n          \"PortfolioItem\"\n        ],\n        \"summary\": \"Add Tag for Portfolio Item\",\n        \"operationId\": \"addPortfolioItemTag\",\n        \"description\": \"Adds a single tag to a Portfolio Item object\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Tag successfully added\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Tag\"\n                  }\n                }\n              }\n            }\n          },\n          \"304\": {\n            \"$ref\": \"#/components/responses/NotModified\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Portfolio Not Found.\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Tag\"\n                }\n              }\n            }\n          },\n          \"required\": true\n        }\n      }\n    },\n    \"/portfolio_items/{id}/untag\": {\n      \"post\": {\n        \"tags\": [\n          \"PortfolioItem\"\n        ],\n        \"summary\": \"Remove Tags from Portfolio Item\",\n        \"description\": \"Remove Tags from Portfolio Item\",\n        \"operationId\": \"removePortfolioItemTags\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Tag Deleted\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Tag\"\n                }\n              }\n            }\n          },\n          \"required\": true\n        }\n      }\n    },\n    \"/orders\": {\n      \"get\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"summary\": \"Get a list of orders\",\n        \"operationId\": \"listOrders\",\n        \"description\": \"Gets a list of orders associated with the logged in user.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/QueryLimit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryOffset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryFilter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QuerySortBy\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The list of orders.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrdersCollection\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"summary\": \"Create a new order\",\n        \"operationId\": \"createOrder\",\n        \"description\": \"Creates a new order.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns a newly created order.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          }\n        }\n      }\n    },\n    \"/orders/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"summary\": \"Get a specific order\",\n        \"operationId\": \"showOrder\",\n        \"description\": \"Get a specific order based on the order ID\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Order specified by the given ID.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The Order ID was not found\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"summary\": \"Delete an existing Order\",\n        \"operationId\": \"destroyOrder\",\n        \"description\": \"Deletes the Order based on order ID passed\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Order deleted.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestoreKey\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Order not found.\"\n          }\n        }\n      }\n    },\n    \"/orders/{order_id}/order_items\": {\n      \"get\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"summary\": \"Gets a list of items in a given order\",\n        \"operationId\": \"listOrderItemsFromOrder\",\n        \"description\": \"Gets a list of items associated with an order.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/OrderID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryLimit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryOffset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryFilter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QuerySortBy\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns a OrderItemsCollection object with an embedded array of OrderIem objects\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderItemsCollection\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"summary\": \"Add an order item to an order in pending state\",\n        \"operationId\": \"addToOrder\",\n        \"description\": \"Adds an order item to an order in pending state\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/OrderID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully added an item to order\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderItem\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Order not found.\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/OrderItem\"\n              }\n            }\n          },\n          \"required\": true\n        }\n      }\n    },\n    \"/orders/{order_id}/order_items/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"summary\": \"Gets an individual order item from a given order\",\n        \"operationId\": \"showOrderItemFromOrder\",\n        \"description\": \"Gets an order item associated with an order.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/OrderID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns a single OrderIem object\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderItem\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Either the order or the order item could not be found.\"\n          }\n        }\n      }\n    },\n    \"/orders/{order_id}/submit_order\": {\n      \"post\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"summary\": \"Submit a given order\",\n        \"operationId\": \"submitOrder\",\n        \"description\": \"Returns an updated order.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/OrderID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Updated order object\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      }\n    },\n    \"/orders/{order_id}/cancel\": {\n      \"patch\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"summary\": \"Cancels a given order\",\n        \"operationId\": \"cancelOrder\",\n        \"description\": \"Returns an updated order.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/OrderID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Updated order object\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequest\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      }\n    },\n    \"/orders/{id}/restore\": {\n      \"post\": {\n        \"tags\": [\n          \"Order\"\n        ],\n        \"summary\": \"Restore specific Order\",\n        \"operationId\": \"restoreOrder\",\n        \"description\": \"Restores the order specified by the order ID.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The restored order\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequest\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Order not found.\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RestoreKey\"\n              }\n            }\n          },\n          \"required\": true\n        }\n      }\n    },\n    \"/order_items\": {\n      \"get\": {\n        \"tags\": [\n          \"OrderItem\"\n        ],\n        \"summary\": \"List Order Items\",\n        \"operationId\": \"listOrderItems\",\n        \"description\": \"Gets a list of order items.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/QueryLimit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryOffset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryFilter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QuerySortBy\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns a list of order items. An empty list indicate either undefined orders in the system or inaccessibility to the caller.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderItemsCollection\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          }\n        }\n      }\n    },\n    \"/order_items/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"OrderItem\"\n        ],\n        \"summary\": \"Gets a specific order item\",\n        \"operationId\": \"showOrderItem\",\n        \"description\": \"Gets a specific order item based on the order item ID passed\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Order item specified by the given ID.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderItem\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"The Order item ID was not found\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"OrderItem\"\n        ],\n        \"summary\": \"Delete an existing OrderItem\",\n        \"operationId\": \"destroyOrderItem\",\n        \"description\": \"Deletes the order item  based on order item ID passed\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Order item deleted.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestoreKey\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Order item not found.\"\n          }\n        }\n      }\n    },\n    \"/order_items/{id}/restore\": {\n      \"post\": {\n        \"tags\": [\n          \"OrderItem\"\n        ],\n        \"summary\": \"Restore specific Order item\",\n        \"operationId\": \"restoreOrderItem\",\n        \"description\": \"Restores the order item specified by the order item ID.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The restored order item\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderItem\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequest\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Order item not found.\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RestoreKey\"\n              }\n            }\n          },\n          \"required\": true\n        }\n      }\n    },\n    \"/order_items/{order_item_id}/progress_messages\": {\n      \"get\": {\n        \"tags\": [\n          \"OrderItem\"\n        ],\n        \"summary\": \"Gets a list of progress messages in an item\",\n        \"operationId\": \"listProgressMessages\",\n        \"description\": \"Gets a list of progress messages associated with an order item. As the item is being processed the provider can update the progress messages.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/OrderItemID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryLimit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryOffset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryFilter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QuerySortBy\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns a ProgressMessagesCollection object with an embedded array of ProgressMessage objects\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProgressMessagesCollection\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Order item not found\"\n          }\n        }\n      }\n    },\n    \"/order_items/{order_item_id}/approval_requests\": {\n      \"get\": {\n        \"tags\": [\n          \"OrderItem\"\n        ],\n        \"summary\": \"Gets a list of approval requests for an item\",\n        \"operationId\": \"listApprovalRequests\",\n        \"description\": \"Gets a list of approval request associated with an order item. As the item is being approved one can check the status of the approvals.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/OrderItemID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryLimit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryOffset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryFilter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QuerySortBy\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns a ApprovalRequestCollection object with an embedded array of ProgressMessage objects\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApprovalRequestsCollection\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Order item not found\"\n          }\n        }\n      }\n    },\n    \"/portfolio_items/{portfolio_item_id}/icon\": {\n      \"get\": {\n        \"tags\": [\n          \"PortfolioItem\"\n        ],\n        \"summary\": \"Fetches the specified portfolio item's icon image\",\n        \"operationId\": \"showPortfolioItemIcon\",\n        \"description\": \"Fetch the specified portfolio item's icon image.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/PortfolioItemID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Portfolio Item Icon\",\n            \"content\": {\n              \"image/svg+xml\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"binary\"\n                }\n              },\n              \"image/png\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"binary\"\n                }\n              },\n              \"image/jpeg\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"binary\"\n                }\n              }\n            }\n          },\n          \"204\": {\n            \"description\": \"No icon present on Portfolio Item\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          }\n        }\n      }\n    },\n    \"/portfolio_items/{portfolio_item_id}/copy\": {\n      \"post\": {\n        \"tags\": [\n          \"PortfolioItem\"\n        ],\n        \"summary\": \"Make a copy of the Portfolio Item\",\n        \"operationId\": \"postCopyPortfolioItem\",\n        \"description\": \"Make a copy of the Portfolio Item.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/PortfolioItemID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The new Portfolio Item\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PortfolioItem\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Portfolio not found\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Portfolio Item not found\"\n          },\n          \"500\": {\n            \"description\": \"Failed to copy Portfolio Item\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CopyPortfolioItem\"\n              }\n            }\n          },\n          \"required\": false\n        }\n      }\n    },\n    \"/icons\": {\n      \"post\": {\n        \"tags\": [\n          \"Icon\"\n        ],\n        \"summary\": \"Create an Icon\",\n        \"operationId\": \"createIcon\",\n        \"description\": \"Creates an Icon from the specified parameters\",\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateIcon\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The newly created Icon\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Icon\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          }\n        }\n      }\n    },\n    \"/icons/{id}\": {\n      \"delete\": {\n        \"tags\": [\n          \"Icon\"\n        ],\n        \"summary\": \"Delete an existing Icon\",\n        \"operationId\": \"destroyIcon\",\n        \"description\": \"Deletes the icon based on the icon ID passed\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Icon deleted.\"\n          },\n          \"404\": {\n            \"description\": \"Icon not found.\"\n          }\n        }\n      }\n    },\n    \"/portfolio_items/{portfolio_item_id}/next_name\": {\n      \"get\": {\n        \"tags\": [\n          \"PortfolioItem\"\n        ],\n        \"summary\": \"Get the next name for a the Portfolio Item prior to a copy operation\",\n        \"operationId\": \"getPortfolioItemNextName\",\n        \"description\": \"Get the next name for a the Portfolio Item prior to a copy operation\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/PortfolioItemID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/DestinationPortfolioID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The Portfolio Item next name\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PortfolioItemNextName\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Portfolio Item not found\"\n          }\n        }\n      }\n    },\n    \"/settings\": {\n      \"get\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"summary\": \"List Tenant Settings\",\n        \"description\": \"List Tenant Settings\",\n        \"operationId\": \"listSettings\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The current tenant settings and schema\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TenantSettings\"\n                },\n                \"example\": \"{\\n  \\\"current\\\": {\\n    \\\"default_workflow\\\": \\\"2\\\",\\n    \\\"icon\\\": \\\"\u003csvg rel='stylesheet'\u003ething\u003c/svg\u003e\\\"\\n  },\\n  \\\"schema\\\": {}\\n}\\n\"\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"summary\": \"Create Tenant Setting\",\n        \"description\": \"Create Tenant Setting\",\n        \"operationId\": \"createSetting\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Setting\"\n              }\n            }\n          },\n          \"description\": \"Json encoded key/value pair to create a new setting\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully added the new setting.\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": \"{ \\n  \\\"default_workflow\\\": \\\"2\\\" \\n} \\n\"\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequest\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          }\n        }\n      }\n    },\n    \"/settings/{name}\": {\n      \"get\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"summary\": \"Get a specific Tenant Setting\",\n        \"description\": \"Get a specific Tenant Setting\",\n        \"operationId\": \"showSetting\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/SettingName\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The requested Tenant Setting\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": \"{ \\n  \\\"default_workflow\\\": \\\"2\\\" \\n} \\n\"\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequest\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          }\n        }\n      },\n      \"patch\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"summary\": \"Update a Tenant Setting\",\n        \"description\": \"Update a Tenant Setting\",\n        \"operationId\": \"updateSetting\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/SettingName\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The updated Tenant Setting\",\n            \"content\": {\n              \"application/json\": {\n                \"example\": \"{ \\n  \\\"default_workflow\\\": \\\"2\\\" \\n} \\n\"\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequest\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Settings\"\n        ],\n        \"summary\": \"Delete a Tenant Setting\",\n        \"description\": \"Delete a Tenant Setting\",\n        \"operationId\": \"destroySetting\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/SettingName\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Tenant Setting successfully deleted.\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequest\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          }\n        }\n      }\n    },\n    \"/tags\": {\n      \"get\": {\n        \"tags\": [\n          \"Tags\"\n        ],\n        \"summary\": \"List Tags\",\n        \"description\": \"List Tags\",\n        \"operationId\": \"listTags\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Index of Tags\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TagsCollection\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          }\n        }\n      }\n    },\n    \"/service_plans\": {\n      \"post\": {\n        \"tags\": [\n          \"Service Plans\"\n        ],\n        \"summary\": \"Create Service Plan\",\n        \"operationId\": \"createServicePlan\",\n        \"description\": \"Returns the new Service Plan\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ImportServicePlan\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Service Plan\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ServicePlan\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequest\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Service Plan Not Found.\"\n          },\n          \"409\": {\n            \"$ref\": \"#/components/responses/Conflict\"\n          }\n        }\n      }\n    },\n    \"/service_plans/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"Service Plans\"\n        ],\n        \"summary\": \"Show Service Plan\",\n        \"operationId\": \"showServicePlan\",\n        \"description\": \"Returns the specified Service Plan\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Service Plan\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServicePlan\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Service Plan Not Found.\"\n          }\n        }\n      }\n    },\n    \"/service_plans/{id}/base\": {\n      \"get\": {\n        \"tags\": [\n          \"Service Plans\"\n        ],\n        \"summary\": \"Show Service Plan Base Schema\",\n        \"operationId\": \"showServicePlanBase\",\n        \"description\": \"Returns the specified Service Plan's base schema\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Service Plan Base Schema\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServicePlan\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Service Plan Not Found.\"\n          }\n        }\n      }\n    },\n    \"/service_plans/{id}/modified\": {\n      \"get\": {\n        \"tags\": [\n          \"Service Plans\"\n        ],\n        \"summary\": \"Show Service Plan modified Schema\",\n        \"operationId\": \"showServicePlanModified\",\n        \"description\": \"Returns the specified Service Plan's modified schema\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Service Plan Modified Schema\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServicePlan\"\n                }\n              }\n            }\n          },\n          \"204\": {\n            \"description\": \"No modified schema present for service_plan.\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Service Plan Not Found.\"\n          }\n        }\n      },\n      \"patch\": {\n        \"tags\": [\n          \"Service Plans\"\n        ],\n        \"summary\": \"Patch Service Plan Modified Schema\",\n        \"operationId\": \"patchServicePlanModified\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PatchModifiedServicePlan\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Service Plan Modified Schema\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequest\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Service Plan Not Found.\"\n          }\n        }\n      }\n    },\n    \"/service_plans/{id}/reset\": {\n      \"post\": {\n        \"tags\": [\n          \"Service Plans\"\n        ],\n        \"summary\": \"Reset Service Plan Modified schema\",\n        \"operationId\": \"resetServicePlanModified\",\n        \"description\": \"Resets the Service Plan's Modified schema and returns the new one if it has been reset\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Modified schema for service_plan has been reset\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ServicePlan\"\n                  }\n                }\n              }\n            }\n          },\n          \"204\": {\n            \"description\": \"No modified schema present for service_plan.\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Service Plan Not Found.\"\n          }\n        }\n      }\n    },\n    \"/order_processes\": {\n      \"get\": {\n        \"tags\": [\n          \"OrderProcess\"\n        ],\n        \"summary\": \"List OrderProcesses\",\n        \"operationId\": \"listOrderProcesses\",\n        \"description\": \"Gets a list of order processes. Optionally select order processes linked to a resource object whose app_name, object_type and object_id are specified by query parameters.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ApplicationName\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/ObjectId\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/ObjectType\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryLimit\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryOffset\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QueryFilter\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/QuerySortBy\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns a list of order processes.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderProcessCollection\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"OrderProcess\"\n        ],\n        \"summary\": \"Add a new order process\",\n        \"operationId\": \"createOrderProcess\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/OrderProcess\",\n                \"required\": [\n                  \"name\"\n                ]\n              }\n            }\n          },\n          \"description\": \"Parameters needed to add an OrderProcess\",\n          \"required\": true\n        },\n        \"description\": \"Adds an order process.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully added the new order process.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderProcess\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequest\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          }\n        }\n      }\n    },\n    \"/order_processes/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"OrderProcess\"\n        ],\n        \"summary\": \"Get a specific order process\",\n        \"operationId\": \"showOrderProcess\",\n        \"description\": \"Gets the order process specified by the order process ID.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OrderProcess matching the order process ID.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderProcess\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequest\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Portfolio not found.\"\n          }\n        }\n      },\n      \"patch\": {\n        \"tags\": [\n          \"OrderProcess\"\n        ],\n        \"summary\": \"Edit an existing order process\",\n        \"operationId\": \"updateOrderProcess\",\n        \"description\": \"Returns the edited order process.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/OrderProcess\"\n              }\n            }\n          },\n          \"description\": \"Parameters needed to update a OrderProcess\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OrderProcess successfully edited.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderProcess\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequest\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"OrderProcess\"\n        ],\n        \"summary\": \"Delete an existing order process\",\n        \"operationId\": \"destroyOrderProcess\",\n        \"description\": \"Deletes the order process specified by the ID.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"OrderProcess successfully deleted.\"\n          },\n          \"400\": {\n            \"description\": \"Failed to delete order process.\"\n          },\n          \"404\": {\n            \"description\": \"OrderProcess Not Found.\"\n          }\n        }\n      }\n    },\n    \"/order_processes/{id}/before_portfolio_item\": {\n      \"patch\": {\n        \"tags\": [\n          \"OrderProcess\"\n        ],\n        \"summary\": \"Adds a 'before' product for an Order Process\",\n        \"operationId\": \"addOrderProcessBeforeItem\",\n        \"description\": \"Defines the product that will be executed before ordering when using this Order Process\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"'Before' product successfully added\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderProcess\"\n                }\n              }\n            }\n          },\n          \"304\": {\n            \"$ref\": \"#/components/responses/NotModified\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"OrderProcess or PortfolioItem Not Found.\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/OrderProcessPortfolioItemId\"\n              }\n            }\n          },\n          \"required\": true\n        }\n      }\n    },\n    \"/order_processes/{id}/after_portfolio_item\": {\n      \"patch\": {\n        \"tags\": [\n          \"OrderProcess\"\n        ],\n        \"summary\": \"Adds an 'after' product for an Order Process\",\n        \"operationId\": \"addOrderProcessAfterItem\",\n        \"description\": \"Defines the product that will be executed after ordering when using this Order Process\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"'After' product successfully added\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderProcess\"\n                }\n              }\n            }\n          },\n          \"304\": {\n            \"$ref\": \"#/components/responses/NotModified\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"OrderProcess or PortfolioItem Not Found.\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/OrderProcessPortfolioItemId\"\n              }\n            }\n          },\n          \"required\": true\n        }\n      }\n    },\n    \"/order_processes/{id}/remove_association\": {\n      \"post\": {\n        \"tags\": [\n          \"OrderProcess\"\n        ],\n        \"summary\": \"Removes the 'before' and/or 'after' product(s) for an Order Process\",\n        \"operationId\": \"removeOrderProcessAssociation\",\n        \"description\": \"Removes the association to the product(s) defined in the 'before' and/or 'after' that would be executed when using this Order Process\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Product(s) successfully removed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrderProcess\"\n                }\n              }\n            }\n          },\n          \"304\": {\n            \"$ref\": \"#/components/responses/NotModified\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"OrderProcess Not Found.\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/OrderProcessAssociationsToRemove\"\n              }\n            }\n          },\n          \"required\": true\n        }\n      }\n    },\n    \"/order_processes/{id}/link\": {\n      \"post\": {\n        \"tags\": [\n          \"OrderProcess\"\n        ],\n        \"summary\": \"Links a tag to an order process\",\n        \"operationId\": \"linkTagToOrderProcess\",\n        \"description\": \"Links a tag to an order process\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Tags successfully linked\"\n            },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n            },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n            },\n          \"404\": {\n            \"description\": \"OrderProcess Not Found.\"\n            }\n          },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ResourceObject\"\n              }\n            }\n          },\n          \"required\": true\n        }\n      }\n    },\n    \"/order_processes/{id}/unlink\": {\n      \"post\": {\n        \"tags\": [\n          \"OrderProcess\"\n        ],\n        \"summary\": \"Unlinks a tag from an order process\",\n        \"operationId\": \"unlinkTagFromOrderProcess\",\n        \"description\": \"Unlinks a tag from an order process\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/ID\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Tags successfully unlinked\"\n            },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n            },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n            },\n          \"404\": {\n            \"description\": \"OrderProcess Not Found.\"\n            }\n          },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ResourceObject\"\n              }\n            }\n          },\n          \"required\": true\n        }\n      }\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://cloud.redhat.com/{basePath}\",\n      \"description\": \"Production Server\",\n      \"variables\": {\n        \"basePath\": {\n          \"default\": \"/api/catalog/v1.2\"\n        }\n      }\n    },\n    {\n      \"url\": \"http://localhost:{port}/{basePath}\",\n      \"description\": \"Development Server\",\n      \"variables\": {\n        \"port\": {\n          \"default\": \"3000\"\n        },\n        \"basePath\": {\n          \"default\": \"/api/catalog/v1.2\"\n        }\n      }\n    }\n  ],\n  \"components\": {\n    \"parameters\": {\n      \"ID\": {\n        \"name\": \"id\",\n        \"in\": \"path\",\n        \"description\": \"ID of the resource\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\",\n          \"pattern\": \"^\\\\d+$\"\n        }\n      },\n      \"TenantID\": {\n        \"name\": \"tenant_id\",\n        \"in\": \"path\",\n        \"description\": \"ID of the resource\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\",\n          \"pattern\": \"^\\\\d+$\"\n        }\n      },\n      \"PortfolioID\": {\n        \"name\": \"portfolio_id\",\n        \"in\": \"path\",\n        \"description\": \"The Portfolio ID\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\",\n          \"pattern\": \"^\\\\d+$\"\n        }\n      },\n      \"PortfolioItemID\": {\n        \"name\": \"portfolio_item_id\",\n        \"in\": \"path\",\n        \"description\": \"The Portfolio Item ID\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\",\n          \"pattern\": \"^\\\\d+$\"\n        }\n      },\n      \"OrderID\": {\n        \"name\": \"order_id\",\n        \"in\": \"path\",\n        \"description\": \"The Order ID\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\",\n          \"pattern\": \"^\\\\d+$\"\n        }\n      },\n      \"OrderItemID\": {\n        \"name\": \"order_item_id\",\n        \"in\": \"path\",\n        \"description\": \"The Order Item ID\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\",\n          \"pattern\": \"^\\\\d+$\"\n        }\n      },\n      \"DestinationPortfolioID\": {\n        \"in\": \"query\",\n        \"name\": \"destination_portfolio_id\",\n        \"description\": \"The destination portfolio to compare names against\",\n        \"required\": false,\n        \"schema\": {\n          \"type\": \"string\",\n          \"pattern\": \"^\\\\d+$\"\n        }\n      },\n      \"SettingName\": {\n        \"name\": \"name\",\n        \"in\": \"path\",\n        \"description\": \"name of the setting\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"QueryCacheID\": {\n        \"in\": \"query\",\n        \"name\": \"cache_id\",\n        \"required\": false,\n        \"description\": \"Artificial string to help avoid falsey browser cache. This can occur after changing static resources like images. The browser will return an outdated cached response. Appending different query will result in a new async call, instead of retrieving the resource from the browser cache.\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"QueryLimit\": {\n        \"in\": \"query\",\n        \"name\": \"limit\",\n        \"required\": false,\n        \"description\": \"The numbers of items to return per page.\",\n        \"schema\": {\n          \"type\": \"integer\",\n          \"minimum\": 1,\n          \"maximum\": 1000,\n          \"default\": 100\n        }\n      },\n      \"QueryOffset\": {\n        \"in\": \"query\",\n        \"name\": \"offset\",\n        \"required\": false,\n        \"description\": \"The number of items to skip before starting to collect the result set.\",\n        \"schema\": {\n          \"type\": \"integer\",\n          \"minimum\": 0,\n          \"default\": 0\n        }\n      },\n      \"QueryFilter\": {\n        \"in\": \"query\",\n        \"name\": \"filter\",\n        \"description\": \"Filter for querying collections.\",\n        \"required\": false,\n        \"style\": \"deepObject\",\n        \"explode\": true,\n        \"schema\": {\n          \"type\": \"object\"\n        }\n      },\n      \"QuerySortBy\": {\n        \"in\": \"query\",\n        \"name\": \"sort_by\",\n        \"description\": \"Field to sort collection by.\",\n        \"required\": false,\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"ApplicationName\": {\n        \"in\": \"query\",\n        \"name\": \"app_name\",\n        \"description\": \"Name of the application.\",\n        \"required\": false,\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"ObjectId\": {\n        \"in\": \"query\",\n        \"name\": \"object_id\",\n        \"description\": \"Id of the resource object.\",\n        \"required\": false,\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"ObjectType\": {\n        \"in\": \"query\",\n        \"name\": \"object_type\",\n        \"description\": \"Type of the resource object.\",\n        \"required\": false,\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"ShowDiscarded\": {\n        \"in\": \"query\",\n        \"name\": \"show_discarded\",\n        \"required\": false,\n        \"description\": \"Whether or not to display the discarded result.\",\n        \"schema\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        }\n      }\n    },\n    \"responses\": {\n      \"BadRequest\": {\n        \"$ref\": \"#/components/schemas/ApiErrorCollection\"\n      },\n      \"Conflict\": {\n        \"$ref\": \"#/components/schemas/ApiErrorCollection\"\n      },\n      \"Forbidden\": {\n        \"$ref\": \"#/components/schemas/ApiErrorCollection\"\n      },\n      \"NotModified\": {\n        \"$ref\": \"#/components/schemas/ApiErrorCollection\"\n      },\n      \"Unauthorized\": {\n        \"$ref\": \"#/components/schemas/ApiErrorCollection\"\n      }\n    },\n    \"requestBodies\": {\n      \"Portfolio\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Portfolio\"\n            }\n          }\n        },\n        \"required\": true\n      }\n    },\n    \"securitySchemes\": {\n      \"BasicAuth\": {\n        \"type\": \"http\",\n        \"description\": \"The userid/password is needed when accessing this API externally\",\n        \"scheme\": \"basic\"\n      }\n    },\n    \"schemas\": {\n      \"Portfolio\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"readOnly\": true\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"title\": \"Name\",\n            \"example\": \"Sample Portfolio\",\n            \"minLength\": 1,\n            \"maxLength\": 512\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"title\": \"Description\",\n            \"example\": \"This is a sample description for a portfolio.\",\n            \"nullable\": true\n          },\n          \"enabled\": {\n            \"type\": \"boolean\",\n            \"title\": \"Enabled\",\n            \"default\": false,\n            \"example\": false\n          },\n          \"owner\": {\n            \"type\": \"string\",\n            \"title\": \"Owner\",\n            \"example\": \"jdoe\",\n            \"readOnly\": true\n          },\n          \"icon_id\": {\n            \"type\": \"string\",\n            \"title\": \"Icon ID\",\n            \"description\": \"The Portfolio Icon ID\",\n            \"readOnly\": true,\n            \"example\": \"1\"\n          },\n          \"created_at\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"title\": \"Created at\",\n            \"readOnly\": true\n          },\n          \"updated_at\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"title\": \"Updated at\",\n            \"readOnly\": true\n          },\n          \"metadata\": {\n            \"type\": \"object\",\n            \"title\": \"Metadata\",\n            \"description\": \"JSON Metadata about the portfolio\",\n            \"readOnly\": true\n          }\n        }\n      },\n      \"CreatePortfolioItem\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"portfolio_id\"\n        ],\n        \"properties\": {\n          \"portfolio_id\": {\n            \"type\": \"string\",\n            \"title\": \"Portfolio ID\",\n            \"description\": \"The Portfolio this portfolio item should belong to\",\n            \"example\": \"1\"\n          },\n          \"service_offering_ref\": {\n            \"type\": \"string\",\n            \"title\": \"Service Offering Ref\",\n            \"description\": \"The service offering ref should be retrieved from a call to the catalog inventory Service.\",\n            \"example\": \"177\"\n          }\n        }\n      },\n      \"CreateIcon\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"content\": {\n            \"type\": \"string\",\n            \"title\": \"Content\",\n            \"description\": \"The binary image contents, maximum size is 250KB\",\n            \"format\": \"binary\"\n          },\n          \"portfolio_id\": {\n            \"type\": \"string\",\n            \"title\": \"Portfolio ID\",\n            \"description\": \"The Portfolio this Icon belongs to\",\n            \"example\": \"1\"\n          },\n          \"portfolio_item_id\": {\n            \"type\": \"string\",\n            \"title\": \"Portfolio Item ID\",\n            \"description\": \"The Portfolio Item this Icon belongs to\",\n            \"example\": \"1\"\n          }\n        }\n      },\n      \"PatchModifiedServicePlan\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"modified\": {\n            \"type\": \"object\",\n            \"title\": \"Modified Schema\",\n            \"description\": \"the new modified schema for the service plan\"\n          }\n        }\n      },\n      \"ImportServicePlan\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"portfolio_item_id\": {\n            \"type\": \"string\",\n            \"title\": \"Portfolio Item ID\",\n            \"description\": \"The Portfolio Item to import the service plans for.\",\n            \"example\": \"177\"\n          }\n        }\n      },\n      \"CopyPortfolioItem\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"portfolio_id\": {\n            \"type\": \"string\",\n            \"title\": \"Portfolio ID\",\n            \"example\": \"2\",\n            \"description\": \"The portfolio to place the new copy of the Portfolio Item in\"\n          },\n          \"portfolio_item_name\": {\n            \"type\": \"string\",\n            \"title\": \"Portfolio Item Name\",\n            \"example\": \"nginx copy\",\n            \"description\": \"The name of the copied portfolio item\"\n          }\n        }\n      },\n      \"RestoreKey\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"restore_key\": {\n            \"type\": \"string\",\n            \"title\": \"Restore Key\",\n            \"example\": \"3c1d765c1453916143e517bfc27b57ace3da693c\"\n          }\n        }\n      },\n      \"OrderProcessPortfolioItemId\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"portfolio_item_id\": {\n            \"type\": \"string\",\n            \"title\": \"Portfolio Item Id\",\n            \"example\": \"1234\"\n          }\n        }\n      },\n      \"OrderProcessAssociationsToRemove\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations_to_remove\": {\n            \"type\": \"array\",\n            \"title\": \"Association(s) to remove\",\n            \"items\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"before\",\n                \"after\"\n              ]\n            },\n            \"example\": [\"before\", \"after\"]\n          }\n        }\n      },\n      \"PortfolioItemNextName\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"next_name\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"title\": \"Next Name\",\n            \"example\": \"Copy of Nginx\"\n          }\n        }\n      },\n      \"Setting\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"title\": \"Setting Name\",\n            \"example\": \"default_workflow\"\n          },\n          \"value\": {\n            \"type\": \"string\",\n            \"title\": \"Setting Value\",\n            \"example\": 2\n          }\n        }\n      },\n      \"PortfolioItem\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"readOnly\": true\n          },\n          \"favorite\": {\n            \"type\": \"boolean\",\n            \"title\": \"Favorite\",\n            \"example\": \"Definition of a favorite portfolio item\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"title\": \"Name\",\n            \"example\": \"Name of the portfolio item\",\n            \"minLength\": 1,\n            \"maxLength\": 512\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"title\": \"Description\",\n            \"example\": \"Description of a portfolio item\",\n            \"nullable\": true\n          },\n          \"orphan\": {\n            \"type\": \"boolean\",\n            \"readOnly\": true,\n            \"title\": \"Orphan\",\n            \"example\": \"Boolean if an associated catalog item no longer exists\"\n          },\n          \"state\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"title\": \"State\",\n            \"example\": \"The current state of a portfolio item\"\n          },\n          \"long_description\": {\n            \"type\": \"string\",\n            \"title\": \"Long Description\",\n            \"example\": \"The longer description of a portfolio item\",\n            \"nullable\": true\n          },\n          \"distributor\": {\n            \"type\": \"string\",\n            \"title\": \"Distributor\",\n            \"example\": \"The name of the provider for this Item\",\n            \"nullable\": true\n          },\n          \"documentation_url\": {\n            \"type\": \"string\",\n            \"title\": \"Documentation URL\",\n            \"example\": \"The URL for documentation of the portfolio item\",\n            \"nullable\": true\n          },\n          \"support_url\": {\n            \"type\": \"string\",\n            \"title\": \"Support URL\",\n            \"example\": \"The URL for finding support for the portfolio item\",\n            \"nullable\": true\n          },\n          \"owner\": {\n            \"type\": \"string\",\n            \"title\": \"Owner\",\n            \"example\": \"jdoe\",\n            \"readOnly\": true\n          },\n          \"service_offering_source_ref\": {\n            \"type\": \"string\",\n            \"title\": \"Service Offering Source Ref\",\n            \"description\": \"The source reference this product was created from\",\n            \"readOnly\": true,\n            \"example\": \"20\"\n          },\n          \"service_offering_type\": {\n            \"type\": \"string\",\n            \"title\": \"Service Offering Type\",\n            \"description\": \"The service offering type stored by the catalog inventory Service\",\n            \"readOnly\": true,\n            \"example\": \"job_template\"\n          },\n          \"portfolio_id\": {\n            \"type\": \"string\",\n            \"title\": \"Portfolio ID\",\n            \"description\": \"ID of a parent portfolio\",\n            \"readOnly\": true,\n            \"example\": \"1\"\n          },\n          \"icon_id\": {\n            \"type\": \"string\",\n            \"title\": \"Icon ID\",\n            \"description\": \"The Portfolio Item Icon ID\",\n            \"readOnly\": true,\n            \"example\": \"1\"\n          },\n          \"created_at\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"title\": \"Created at\",\n            \"readOnly\": true\n          },\n          \"updated_at\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"title\": \"Updated at\",\n            \"readOnly\": true\n          },\n          \"metadata\": {\n            \"type\": \"object\",\n            \"title\": \"Metadata\",\n            \"description\": \"JSON Metadata about the portfolio item\",\n            \"readOnly\": true\n          }\n        }\n      },\n      \"Order\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"readOnly\": true\n          },\n          \"user_id\": {\n            \"type\": \"string\",\n            \"readOnly\": true\n          },\n          \"state\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"Created\",\n              \"Approval Pending\",\n              \"Ordered\",\n              \"Failed\",\n              \"Completed\",\n              \"Canceled\"\n            ],\n            \"title\": \"State\",\n            \"description\": \"Current State of the order.\"\n          },\n          \"created_at\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"title\": \"Created at\",\n            \"readOnly\": true\n          },\n          \"order_request_sent_at\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"title\": \"Order request sent at\",\n            \"description\": \"The time at which the order request was sent to the catalog inventory Service\",\n            \"nullable\": true\n          },\n          \"completed_at\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"title\": \"Completed at\",\n            \"readOnly\": true\n          },\n          \"owner\": {\n            \"type\": \"string\",\n            \"title\": \"Owner\",\n            \"example\": \"jdoe\",\n            \"readOnly\": true\n          }\n        }\n      },\n      \"OrderItem\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"count\",\n          \"portfolio_item_id\"\n        ],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"readOnly\": true\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"title\": \"Name\",\n            \"description\": \"Name of the Portfolio Item or Order Process\"\n          },\n          \"count\": {\n            \"type\": \"integer\",\n            \"default\": 1,\n            \"title\": \"Item Count\"\n          },\n          \"service_parameters\": {\n            \"type\": \"object\",\n            \"title\": \"JSON object with provisioning parameters\",\n            \"nullable\": true\n          },\n          \"provider_control_parameters\": {\n            \"type\": \"object\",\n            \"title\": \"Provider Control Parameters\",\n            \"description\": \"The provider specific parameters needed to provision this service. This might include namespaces, special keys.\",\n            \"nullable\": true\n          },\n          \"portfolio_item_id\": {\n            \"type\": \"string\",\n            \"title\": \"Portfolio Item ID\",\n            \"description\": \"Stores the Portfolio Item ID.\"\n          },\n          \"state\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"Created\",\n              \"Approval Pending\",\n              \"Ordered\",\n              \"Failed\",\n              \"Completed\",\n              \"Approved\",\n              \"Denied\",\n              \"Canceled\"\n            ],\n            \"title\": \"State\",\n            \"description\": \"Current state of this order item.\",\n            \"readOnly\": true\n          },\n          \"order_id\": {\n            \"type\": \"string\",\n            \"title\": \"Order ID\",\n            \"description\": \"The Order that the OrderItem belongs to.\",\n            \"readOnly\": true\n          },\n          \"created_at\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"title\": \"Created at\",\n            \"readOnly\": true\n          },\n          \"order_request_sent_at\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"title\": \"Order request sent at\",\n            \"description\": \"The time at which the order request was sent to the catalog inventory Service\",\n            \"readOnly\": true\n          },\n          \"completed_at\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"title\": \"Completed at\",\n            \"readOnly\": true\n          },\n          \"updated_at\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"title\": \"Completed at\",\n            \"readOnly\": true\n          },\n          \"owner\": {\n            \"type\": \"string\",\n            \"title\": \"Owner\",\n            \"example\": \"jdoe\",\n            \"readOnly\": true\n          },\n          \"external_url\": {\n            \"type\": \"string\",\n            \"title\": \"External url\",\n            \"description\": \"The external url of the service instance used with relation to this order item\",\n            \"readOnly\": true\n          },\n          \"insights_request_id\": {\n            \"type\": \"string\",\n            \"title\": \"Insights Request ID \",\n            \"example\": \"364498f142194beba576833d7303abe5\",\n            \"description\": \"The insights request id can be used to collect log data for this order item as its processed by the system\",\n            \"readOnly\": true\n          },\n          \"process_sequence\": {\n            \"type\": \"integer\",\n            \"title\": \"Sequence of when the order item is ran\",\n            \"example\": 1,\n            \"description\": \"The sequence that this order item is ran relative to the other order items within the order.\",\n            \"readOnly\": true\n          },\n          \"process_scope\": {\n            \"type\": \"string\",\n            \"title\": \"Scope of when the order item is ran\",\n            \"example\": \"before\",\n            \"description\": \"Denotes the scope in which the order item will run for the order it belongs to. It can be 'before', 'after', or 'product'\",\n            \"readOnly\": true\n          },\n          \"artifacts\": {\n            \"type\": \"object\",\n            \"title\": \"Return values from a product provision\",\n            \"description\": \"Contains a prefix-stripped key/value object that contains all of the information exposed from product provisioning. Must be exposed from Tower with prefix 'expose_to_cloud_redhat_com_'\",\n            \"readOnly\": true,\n            \"example\": {\n              \"important_id\": 10,\n              \"ip_address\": \"127.0.0.1\"\n            }\n          }\n        }\n      },\n      \"ApprovalRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"title\": \"ID\",\n            \"description\": \"The unique identifier for this approval request.\",\n            \"readOnly\": true\n          },\n          \"approval_request_ref\": {\n            \"type\": \"string\",\n            \"title\": \"Approval Request Ref\",\n            \"description\": \"The id of the approval submitted to approval-api\",\n            \"readOnly\": true\n          },\n          \"order_item_id\": {\n            \"type\": \"string\",\n            \"title\": \"Order Item ID\",\n            \"description\": \"The Order Item which the approval request belongs to\",\n            \"readOnly\": true\n          },\n          \"reason\": {\n            \"type\": \"string\",\n            \"title\": \"Reason\",\n            \"description\": \"The reason for the current state.\",\n            \"readOnly\": true\n          },\n          \"request_completed_at\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"title\": \"Approval Request Completed At\",\n            \"readOnly\": true\n          },\n          \"state\": {\n            \"type\": \"string\",\n            \"title\": \"State\",\n            \"enum\": [\n              \"undecided\",\n              \"approved\",\n              \"denied\",\n              \"canceled\",\n              \"error\"\n            ],\n            \"description\": \"The state of the approval request (approved, denied, undecided, canceled, error)\",\n            \"readOnly\": true\n          }\n        }\n      },\n      \"Icon\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"title\": \"ID\",\n            \"description\": \"The unique identifier for this Service Offering Icon\",\n            \"readOnly\": true\n          },\n          \"image_id\": {\n            \"type\": \"string\",\n            \"title\": \"Image ID\",\n            \"description\": \"The Image reference containing the binary image data for this icon\",\n            \"readOnly\": false\n          },\n          \"source_ref\": {\n            \"type\": \"string\",\n            \"title\": \"Source Ref\",\n            \"description\": \"Stores the Source Ref for this icon\",\n            \"readOnly\": true\n          },\n          \"source_id\": {\n            \"type\": \"string\",\n            \"title\": \"Source ID\",\n            \"description\": \"The source ID for this icon\",\n            \"readOnly\": true\n          },\n          \"portfolio_id\": {\n            \"type\": \"string\",\n            \"title\": \"Portfolio ID\",\n            \"description\": \"The portfolio this icon belongs to.\",\n            \"readOnly\": true\n          },\n          \"portfolio_item_id\": {\n            \"type\": \"string\",\n            \"title\": \"Portfolio Item ID\",\n            \"description\": \"The portfolio_item this icon belongs to.\",\n            \"readOnly\": true\n          }\n        }\n      },\n      \"ProgressMessage\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"received_at\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"title\": \"Message Received At\",\n            \"readOnly\": true\n          },\n          \"level\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"enum\": [\n              \"info\",\n              \"error\",\n              \"warning\",\n              \"debug\"\n            ]\n          },\n          \"message\": {\n            \"type\": \"string\",\n            \"example\": \"This is a sample message\",\n            \"title\": \"Message\",\n            \"readOnly\": true\n          },\n          \"order_item_id\": {\n            \"type\": \"string\",\n            \"title\": \"Order Item ID\",\n            \"readOnly\": true\n          }\n        }\n      },\n      \"ServicePlan\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"title\": \"Name\",\n            \"description\": \"The name of the service plan.\",\n            \"readOnly\": true\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"title\": \"Description\",\n            \"description\": \"The service plan description.\",\n            \"readOnly\": true\n          },\n          \"create_json_schema\": {\n            \"type\": \"object\",\n            \"title\": \"JSON Schema\",\n            \"description\": \"JSON schema for the object.\",\n            \"readOnly\": true\n          },\n          \"portfolio_item_id\": {\n            \"type\": \"string\",\n            \"title\": \"Portfolio Item ID\",\n            \"description\": \"The reference ID of the Portfolio Item\",\n            \"readOnly\": true\n          },\n          \"id\": {\n            \"type\": \"string\",\n            \"title\": \"ID\",\n            \"description\": \"The unique identifier for this service plan.\",\n            \"readOnly\": true\n          },\n          \"imported\": {\n            \"type\": \"boolean\",\n            \"title\": \"Imported\",\n            \"description\": \"Whether or not the ServicePlan has been imported for editing\",\n            \"readOnly\": true\n          },\n          \"modified\": {\n            \"type\": \"boolean\",\n            \"title\": \"Modified\",\n            \"description\": \"Whether or not the ServicePlan has a modified schema\",\n            \"readOnly\": true\n          }\n        }\n      },\n      \"PortfoliosCollection\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"meta\": {\n            \"$ref\": \"#/components/schemas/CollectionMetadata\"\n          },\n          \"links\": {\n            \"$ref\": \"#/components/schemas/CollectionLinks\"\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Portfolio\"\n            }\n          }\n        }\n      },\n      \"PortfolioItemsCollection\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"meta\": {\n            \"$ref\": \"#/components/schemas/CollectionMetadata\"\n          },\n          \"links\": {\n            \"$ref\": \"#/components/schemas/CollectionLinks\"\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PortfolioItem\"\n            }\n          }\n        }\n      },\n      \"OrdersCollection\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"meta\": {\n            \"$ref\": \"#/components/schemas/CollectionMetadata\"\n          },\n          \"links\": {\n            \"$ref\": \"#/components/schemas/CollectionLinks\"\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Order\"\n            }\n          }\n        }\n      },\n      \"OrderItemsCollection\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"meta\": {\n            \"$ref\": \"#/components/schemas/CollectionMetadata\"\n          },\n          \"links\": {\n            \"$ref\": \"#/components/schemas/CollectionLinks\"\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/OrderItem\"\n            }\n          }\n        }\n      },\n      \"ApprovalRequestsCollection\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"meta\": {\n            \"$ref\": \"#/components/schemas/CollectionMetadata\"\n          },\n          \"links\": {\n            \"$ref\": \"#/components/schemas/CollectionLinks\"\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ApprovalRequest\"\n            }\n          }\n        }\n      },\n      \"ProgressMessagesCollection\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"meta\": {\n            \"$ref\": \"#/components/schemas/CollectionMetadata\"\n          },\n          \"links\": {\n            \"$ref\": \"#/components/schemas/CollectionLinks\"\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ProgressMessage\"\n            }\n          }\n        }\n      },\n      \"TenantsCollection\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"meta\": {\n            \"$ref\": \"#/components/schemas/CollectionMetadata\"\n          },\n          \"links\": {\n            \"$ref\": \"#/components/schemas/CollectionLinks\"\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tenant\"\n            }\n          }\n        }\n      },\n      \"CollectionLinks\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"first\": {\n            \"type\": \"string\",\n            \"title\": \"First Link\",\n            \"description\": \"The link to fetch the first group of items in the result set\"\n          },\n          \"last\": {\n            \"type\": \"string\",\n            \"title\": \"Last Link\",\n            \"description\": \"The link to fetch the last group of items in the result set\"\n          },\n          \"prev\": {\n            \"type\": \"string\",\n            \"title\": \"Previous Link\",\n            \"description\": \"The link to fetch the previous group of items in the result set\"\n          },\n          \"next\": {\n            \"type\": \"string\",\n            \"title\": \"Next Link\",\n            \"description\": \"The link to fetch the next group of items in the result set\"\n          }\n        }\n      },\n      \"CollectionMetadata\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"count\": {\n            \"type\": \"integer\",\n            \"title\": \"Total number of items in the result set\",\n            \"description\": \"Total number of items in the result set, of which only a subset is returned, defined by the QueryLimit parameter.\"\n          }\n        }\n      },\n      \"ProviderControlParameters\": {\n        \"type\": \"object\",\n        \"title\": \"Provider Control Parameters\",\n        \"description\": \"JSON Schema for Provider control parameters.\"\n      },\n      \"TenantSettings\": {\n        \"type\": \"object\",\n        \"title\": \"Tenant Settings\",\n        \"description\": \"The tenant settings and schema\",\n        \"properties\": {\n          \"current\": {\n            \"type\": \"object\",\n            \"title\": \"Current Settings\",\n            \"description\": \"The current settings for this tenant\"\n          },\n          \"schema\": {\n            \"$ref\": \"#/components/schemas/TenantSettingsSchema\"\n          }\n        }\n      },\n      \"TenantSettingsSchema\": {\n        \"type\": \"object\",\n        \"title\": \"Tenant Settings Schema\",\n        \"description\": \"JSON Schema for the Tenant Settings\"\n      },\n      \"SharePolicy\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"permissions\",\n          \"group_uuids\"\n        ],\n        \"properties\": {\n          \"permissions\": {\n            \"type\": \"array\",\n            \"title\": \"Name\",\n            \"description\": \"The permissions to apply for this share. The valid values are read, update, delete and order\",\n            \"items\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"read\",\n                \"update\",\n                \"delete\",\n                \"order\"\n              ]\n            },\n            \"minItems\": 1,\n            \"example\": [\n              \"read\",\n              \"update\",\n              \"delete\",\n              \"order\"\n            ]\n          },\n          \"group_uuids\": {\n            \"type\": \"array\",\n            \"title\": \"The Group UUIDs\",\n            \"description\": \"An array of group UUID's retrieved from the RBAC Service with whom the resource has to be shared.\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            },\n            \"minItems\": 1\n          }\n        }\n      },\n      \"UnsharePolicy\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"permissions\"\n        ],\n        \"properties\": {\n          \"permissions\": {\n            \"type\": \"array\",\n            \"title\": \"Name\",\n            \"description\": \"The permissions to remove for this resource.\",\n            \"items\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"read\",\n                \"update\",\n                \"delete\",\n                \"order\"\n              ]\n            },\n            \"minItems\": 1\n          },\n          \"group_uuids\": {\n            \"type\": \"array\",\n            \"title\": \"The Group UUIDs\",\n            \"description\": \"An array of group UUID's retrieved from the RBAC Service from which the permissions have to be removed. If group uuids are not specified we will unshare it from all groups.\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            }\n          }\n        }\n      },\n      \"Tenant\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"external_tenant\": {\n            \"type\": \"string\",\n            \"title\": \"Request account number\",\n            \"description\": \"The Request account number\"\n          },\n          \"id\": {\n            \"type\": \"string\",\n            \"title\": \"Internal tenant id\",\n            \"description\": \"The internal tenant id\"\n          }\n        }\n      },\n      \"OrderProcess\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"readOnly\": true\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"title\": \"Name\",\n            \"description\": \"The name of the order process.\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"title\": \"Description\",\n            \"description\": \"The order process description.\",\n            \"nullable\": true\n          },\n          \"created_at\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"title\": \"Created at\",\n            \"readOnly\": true\n          },\n          \"updated_at\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"title\": \"Updated at\",\n            \"readOnly\": true\n          },\n          \"before_portfolio_item_id\": {\n            \"type\": \"string\",\n            \"description\": \"The ID of the portfolio item associated to the 'before' step\",\n            \"readOnly\": true\n          },\n          \"after_portfolio_item_id\": {\n            \"type\": \"string\",\n            \"description\": \"The ID of the portfolio item associated to the 'after' step\",\n            \"readOnly\": true\n          },\n          \"metadata\": {\n            \"type\": \"object\",\n            \"title\": \"Metadata\",\n            \"description\": \"JSON Metadata about the order process\",\n            \"readOnly\": true\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"OrderProcessCollection\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"meta\": {\n            \"$ref\": \"#/components/schemas/CollectionMetadata\"\n          },\n          \"links\": {\n            \"$ref\": \"#/components/schemas/CollectionLinks\"\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/OrderProcess\"\n            }\n          }\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"tag\": {\n            \"example\": \"/namespace/architecture=x86_64\",\n            \"type\": \"string\",\n            \"pattern\": \"^/.*/.+(=.+|[^=]$)\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"TagsCollection\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"meta\": {\n            \"$ref\": \"#/components/schemas/CollectionMetadata\"\n          },\n          \"links\": {\n            \"$ref\": \"#/components/schemas/CollectionLinks\"\n          },\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            }\n          }\n        }\n      },\n      \"ShareInfo\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"group_uuid\": {\n            \"type\": \"string\",\n            \"title\": \"The Group UUID\",\n            \"description\": \"The Group UUID\"\n          },\n          \"group_name\": {\n            \"type\": \"string\",\n            \"title\": \"The Group Name\",\n            \"description\": \"The Group Name\"\n          },\n          \"permissions\": {\n            \"type\": \"array\",\n            \"title\": \"Permissions\",\n            \"description\": \"One or more permissions currently applied to this group.\",\n            \"items\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"read\",\n                \"update\",\n                \"delete\",\n                \"order\"\n              ]\n            }\n          }\n        }\n      },\n      \"GraphQLRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The GraphQL query\",\n            \"default\": \"{}\"\n          },\n          \"operationName\": {\n            \"type\": \"string\",\n            \"description\": \"If the Query contains several named operations, the operationName controls which one should be executed\",\n            \"default\": \"\"\n          },\n          \"variables\": {\n            \"type\": \"object\",\n            \"description\": \"Optional Query variables\",\n            \"nullable\": true\n          }\n        },\n        \"required\": [\n          \"query\"\n        ]\n      },\n      \"GraphQLResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"type\": \"object\",\n            \"description\": \"Results from the GraphQL query\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"description\": \"Errors resulting from the GraphQL query\",\n            \"items\": {\n              \"type\": \"object\"\n            }\n          }\n        }\n      },\n      \"ApiError\": {\n        \"type\": \"object\",\n        \"description\": \"API Error\",\n        \"properties\": {\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"HTTP status code\",\n            \"example\": \"400\"\n          },\n          \"details\": {\n            \"type\": \"string\",\n            \"description\": \"Error details\",\n            \"example\": \"Bad Request\"\n          }\n        }\n      },\n      \"ApiErrorCollection\": {\n        \"type\": \"object\",\n        \"description\": \"API Error collection\",\n        \"properties\": {\n          \"errors\": {\n            \"type\": \"array\",\n            \"description\": \"Error list from the API query\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ApiError\"\n            }\n          }\n        }\n      },\n      \"ResourceObject\": {\n         \"type\": \"object\",\n         \"description\": \"Resource object definition\",\n         \"required\": [\n          \"object_type\",\n          \"app_name\",\n          \"object_id\"\n         ],\n         \"properties\": {\n          \"object_type\": {\n            \"type\": \"string\",\n            \"title\": \"Object type\",\n            \"description\": \"Object type\",\n            \"example\": \"PortfolioItem\"\n          },\n          \"app_name\": {\n            \"type\": \"string\",\n            \"title\": \"App name\",\n            \"description\": \"Name of the application that the object belongs to\",\n            \"example\": \"catalog\"\n          },\n          \"object_id\": {\n            \"type\": \"string\",\n            \"title\": \"Object ID\",\n            \"description\": \"ID of the object\",\n            \"example\": \"123\"\n          }\n        }\n      }\n    }\n  }\n}\n"
		}
	},
	"Error": "parse: parse spec: paths: /orders/{id}/restore: post: operation \"restoreOrder\": responses: 400: resolve \"#/components/responses/BadRequest\" reference: resolve \"#/components/schemas/ApiErrorCollection\" reference: invalid response reference: \"#/components/schemas/ApiErrorCollection\""
}