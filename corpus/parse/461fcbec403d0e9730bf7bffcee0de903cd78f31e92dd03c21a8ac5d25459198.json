{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/jcorry/morellis"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "swagger/spec/swagger.yaml",
			"byteSize": 2465,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Morellis Flavor Notifications API\n  termsOfService: 'https://example.com/terms/'\n  contact:\n    email: jcorry@gmail.com\n    url: 'http://example.com/contact'\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n  x-logo:\n    url: 'https://apis.guru/openapi-template/logo.png'\n  description: \u003e\n    A notifications API for informing customers when their favorite ice cream flavor is available at Morellis Gourmet Ice Cream, the best ice cream shop in Atlanta!\nexternalDocs:\n  description: Find out how to create Github repo for your OpenAPI spec.\n  url: 'https://github.com/Rebilly/generator-openapi-repo'\ntags:\n  - name: Auth\n    description: |\n      Authentication endpoint.\n  - name: Flavor\n    description: |\n      Flavors are ice cream flavors. Endpoints include simple CRUD operations.\n  - name: Ingredient\n    description: |-\n      Ingredients are a property of Flavors but exist as a separate endpoint so that they can be searched\n      and retrieved to make the Ingredient-\u003eUser association used to determine which Users should be\n      notified when Flavors are updated.\n  - name: User\n    description: |\n      User management endpoints allow a user to manage themselves or an admin level user to manage any other user.\n  - name: Store\n    description: |\n      Store management endpoints allow a user to manage Store location data.\npaths:\n  /auth:\n    $ref: \"./paths/auth.yaml\"\n  /user:\n    $ref: \"./paths/user.yaml\"\n  /user@id:\n    $ref: \"./paths/user@{id}.yaml\"\n  /user@userId@ingredient:\n    $ref: \"./paths/user@{userId}@ingredient.yaml\"\n  /user@userId@ingredient@userIngredientId:\n    $ref: \"./paths/user@{userId}@ingredient@{userIngredientId}.yaml\"\n  /user@userId@permission.yaml:\n    $ref: \"./paths/user@{userId}@permission.yaml\"\n  /store:\n    $ref: \"./paths/store.yaml\"\n  /store@{id}:\n    $ref: \"./paths/store@{id}.yaml\"\n  /flavor:\n    $ref: \"./paths/flavor.yaml\"\n  /flavor@{id}:\n    $ref: \"./paths/flavor@{id}.yaml\"\ncomponents:\n  schemas:\n    User:\n      $ref: \"./components/schemas/User.yaml\"\n    ListMeta:\n      $ref: \"./components/schemas/ListMeta.yaml\"\n    UserIngredient:\n      $ref: \"./components/schemas/UserIngredient.yaml\"\n    Store:\n      $ref: \"./components/schemas/Store.yaml\"\n    Flavor:\n      $ref: \"./components/schemas/Flavor.yaml\"\n    Ingredient:\n      $ref: \"./components/schemas/Ingredient.yaml\"\nservers:\n  - url: 'http://localhost:4001/api/v1'\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Ingredient\": parse schema: resolve \"./components/schemas/Ingredient.yaml\": find schema: external base \"./components/schemas/Ingredient.yaml\" is not supported"
}