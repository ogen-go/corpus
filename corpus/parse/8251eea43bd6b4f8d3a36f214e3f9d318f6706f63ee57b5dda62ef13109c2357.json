{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/featurehub-io/featurehub"
		},
		"file": {
			"name": "dacha-api.yaml",
			"size": 0,
			"path": "backend/dacha-api/dacha-api.yaml",
			"byteSize": 13857,
			"content": "openapi: 3.0.1\ninfo:\n  title: Cache (Dache) API\n  description: This is used by the Edge servers to access features and environments quickly.\n  version: \"1.1.1\"\npaths:\n  /v2/environment/{eId}/{serviceAccountKey}:\n    parameters:\n      - name: eId\n        description: \"id of environment\"\n        in: path\n        schema:\n          type: string\n          format: uuid\n        required: true\n      - name: serviceAccountKey\n        description: \"serviceAccountKey of service account\"\n        in: path\n        schema:\n          type: string\n        required: true\n      - name: excludeRetired\n        description: \"exclude retired features\"\n        in: query\n        schema:\n          type: boolean\n        required: false\n    get:\n      operationId: getApiKeyDetails\n      tags:\n        - DachaApiKeyService\n      responses:\n        200:\n          description: \"All feature values for this environment\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DachaKeyDetailsResponse\"\n        404:\n          description: \"No such environment/account combo has read access\"\n  /v2/environment/{eId}/{serviceAccountKey}/permissions/{featureKey}:\n    parameters:\n      - name: eId\n        description: \"id of environment\"\n        in: path\n        schema:\n          type: string\n          format: uuid\n      - name: serviceAccountKey\n        description: \"id of service account\"\n        in: path\n        schema:\n          type: string\n      - name: featureKey\n        in: path\n        description: \"The key that we want\"\n        schema:\n          type: string\n    get:\n      operationId: getApiKeyPermissions\n      tags:\n        - DachaApiKeyService\n      responses:\n        200:\n          description: \"All permissions and feature values for this environment\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DachaPermissionResponse\"\n        404:\n          description: \"No such environment/account combo has read access\"\n  /v2/environment/{eId}/structure:\n    parameters:\n      - name: eId\n        description: \"id of environment\"\n        in: path\n        schema:\n          type: string\n          format: uuid\n    get:\n      operationId: getEnvironmentStructure\n      tags:\n        - DachaEnvironmentService\n      responses:\n        200:\n          description: \"The parent structure for this environment\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DachaStructureResponse\"\n        404:\n          description: \"No such environment/account combo has read access\"\ncomponents:\n  schemas:\n    DachaNATSRequest:\n      type: object\n      properties:\n        featuresRequest:\n          $ref: \"#/components/schemas/DachaKeyDetailsRequest\"\n        permissionRequest:\n          $ref: \"#/components/schemas/DachaPermissionRequest\"\n    DachaNATSResponse:\n      type: object\n      required:\n        - status\n      properties:\n        status:\n          type: integer\n          format: int32\n        featuresResponse:\n          $ref: \"#/components/schemas/DachaKeyDetailsResponse\"\n        permissionResponse:\n          $ref: \"#/components/schemas/DachaPermissionResponse\"\n    DachaKeyDetailsRequest:\n      description: \"Used when communication is via NATS for getApiKeyDetails request\"\n      required:\n        - eId\n        - serviceAccountKey\n      properties:\n        eId:\n          type: string\n          format: uuid\n        serviceAccountKey:\n          type: string\n        excludeRetired:\n          type: boolean\n    DachaPermissionRequest:\n      description: \"Used for permission request when communication is via NATS from Edge for getApiKeyPermissions\"\n      allOf:\n        - $ref: \"#/components/schemas/DachaKeyDetailsRequest\"\n        - type: object\n          required:\n            - featureKey\n            - eId\n            - serviceAccountKey\n          properties:\n            featureKey:\n              type: string\n    CacheManagementMessage:\n      x-package: io.featurehub.dacha.model\n      required:\n        - id\n        - mit\n        - requestType\n        - cacheState\n      properties:\n        id:\n          type: string\n          format: uuid\n        destId:\n          description: \"this allows one instance on the bus to communicate directly with another instance\"\n          type: string\n          format: uuid\n        requestType:\n          $ref: \"#/components/schemas/CacheRequestType\"\n        mit:\n          description: \"used only to negotiate master who is attempting to get data from MR\"\n          type: integer\n          format: int64\n        cacheState:\n          $ref: \"#/components/schemas/CacheState\"\n    CacheRequestType:\n      x-package: io.featurehub.dacha.model\n      type: string\n      enum:\n        - SEEKING_COMPLETE_CACHE\n        - SEEKING_REFRESH\n        - CLAIMING_MASTER\n        - CACHE_REMOVED\n        - CACHE_SOURCE\n        - DUPLICATE_MIT\n    CacheState:\n      x-package: io.featurehub.dacha.model\n      type: string\n      enum:\n        - NONE\n        - REQUESTED\n        - COMPLETE\n    PublishAction:\n      x-package: io.featurehub.dacha.model\n      type: string\n      description: \"Indicates what type of update this is. If CREATE, it is a new record, if UPDATE it updates an existing one,\n          if DELETE you should delete the record. If EMPTY then it indicates there are no records of this type and you shouldn't\n          expect to see any further. EMPTY is used to indicate that the Master process is complete.\"\n      enum:\n        - CREATE\n        - UPDATE\n        - DELETE\n        - EMPTY\n    DachaStructureResponse:\n      x-package: io.featurehub.dacha.model\n      type: object\n      required:\n        - organizationId\n        - portfolioId\n        - applicationId\n      properties:\n        organizationId:\n          x-basename: oId\n          type: string\n          format: uuid\n        portfolioId:\n          x-basename: pId\n          type: string\n          format: uuid\n        applicationId:\n          x-basename: aId\n          type: string\n          format: uuid\n    PublishEnvironment:\n      x-package: io.featurehub.dacha.model\n      description: \"Even a EMPTY message must set all the data to junk as it is an unusual situation\"\n      required:\n        - action\n        - featureValues\n        - environment\n        - serviceAccounts\n        - organizationId\n        - applicationId\n        - portfolioId\n        - count\n      properties:\n        environment:\n          $ref: \"#/components/schemas/CacheEnvironment\"\n        organizationId:\n          x-basename: oId\n          type: string\n          format: uuid\n        portfolioId:\n          x-basename: pId\n          type: string\n          format: uuid\n        applicationId:\n          x-basename: aId\n          type: string\n          format: uuid\n        featureValues:\n          x-basename: fv\n          type: array\n          items:\n            $ref: \"#/components/schemas/CacheEnvironmentFeature\"\n        serviceAccounts:\n          x-basename: sa\n          type: array\n          items:\n            type: string\n            format: UUID\n        action:\n          $ref: \"#/components/schemas/PublishAction\"\n        count:\n          x-basename: c\n          type: integer\n    CacheEnvironment:\n      x-package: io.featurehub.dacha.model\n      type: object\n      required:\n        - id\n        - version\n#        - features\n      properties:\n        id:\n          type: string\n          format: uuid\n        version:\n          type: integer\n          format: int64\n#        features:\n#          type: array\n#          items:\n#            $ref: \"#/components/schemas/CacheFeature\"\n    CacheEnvironmentFeature:\n      x-package: io.featurehub.dacha.model\n      type: object\n      description: \"A feature and its possible value (which could be null)\"\n      required:\n        - feature\n      properties:\n        feature:\n          $ref: \"#/components/schemas/CacheFeature\"\n        value:\n          $ref: \"#/components/schemas/CacheFeatureValue\"\n    CacheFeature:\n      x-package: io.featurehub.dacha.model\n      type: object\n      required:\n        - id\n        - key\n        - valueType\n        - version\n      properties:\n        id:\n          type: string\n          format: uuid\n        key:\n          type: string\n          description: \"Unique within this application\"\n        valueType:\n          $ref: \"#/components/schemas/FeatureValueType\"\n        version:\n          description: \"used for optimistic locking when renaming a feature\"\n          type: integer\n          format: int64\n    CacheFeatureValue:\n      x-package: io.featurehub.dacha.model\n      required:\n        - key\n        - locked\n        - id\n        - version\n      properties:\n        id:\n          type: string\n          format: uuid\n        key:\n          type: string\n        locked:\n          type: boolean\n        value:\n          description: \"default value if no strategy matches. interpreted by type in parent\"\n        rolloutStrategies:\n          description: \"These are custom rollout strategies that only apply to this feature value.\"\n          type: array\n          items:\n            $ref: \"#/components/schemas/CacheRolloutStrategy\"\n        version:\n          description: \"used for optimistic locking\"\n          type: integer\n          format: int64\n        retired:\n          type: boolean\n          description: \"if true or null, this feature will visible on edge. if false, it will not be passed to the client\"\n    PublishServiceAccount:\n      x-package: io.featurehub.dacha.model\n      required:\n        - action\n        - count\n      properties:\n        serviceAccount:\n          $ref: \"#/components/schemas/CacheServiceAccount\"\n        action:\n          $ref: \"#/components/schemas/PublishAction\"\n        count:\n          type: integer\n    CacheServiceAccount:\n      x-package: io.featurehub.dacha.model\n      type: object\n      required:\n        - id\n        - version\n        - apiKeyClientSide\n        - apiKeyServerSide\n        - permissions\n      properties:\n        id:\n          type: string\n          format: UUID\n        version:\n          type: integer\n          format: int64\n        apiKeyClientSide:\n          type: string\n          description: \"this is a read only field, it denotes an api key where the eval is done client side\"\n          maxLength: 400\n        apiKeyServerSide:\n          type: string\n          description: \"this is a read only field, it denotes an api key where the eval is done server side\"\n          maxLength: 400\n        permissions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/CacheServiceAccountPermission\"\n    CacheServiceAccountPermission:\n      x-package: io.featurehub.dacha.model\n      type: object\n      required:\n        - permissions\n        - environmentId\n      properties:\n        permissions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/RoleType\"\n        environmentId:\n          type: string\n          format: uuid\n    DachaPermissionResponse:\n      x-package: io.featurehub.dacha.model\n      type: object\n      required:\n        - roles\n        - feature\n      properties:\n        organizationId:\n          x-basename: oId\n          type: string\n          format: uuid\n        portfolioId:\n          x-basename: pId\n          type: string\n          format: uuid\n        applicationId:\n          x-basename: aId\n          type: string\n          format: uuid\n        serviceKeyId:\n          description: \"The actual service key id rather than the key\"\n          x-basename: sId\n          type: string\n          format: uuid\n        roles:\n          type: array\n          items:\n            $ref: \"#/components/schemas/RoleType\"\n        feature:\n          $ref: \"#/components/schemas/CacheEnvironmentFeature\"\n    PublishFeatureValue:\n      x-package: io.featurehub.dacha.model\n      type: object\n      description: \"This is the item that gets published from MR originally\"\n      required:\n        - action\n        - environmentId\n        - feature\n      properties:\n        action:\n          $ref: \"#/components/schemas/PublishAction\"\n        environmentId:\n          description: \"this needs to be passed because the feature value may be null\"\n          type: string\n          format: uuid\n        feature:\n          $ref: \"#/components/schemas/CacheEnvironmentFeature\"\n    DachaKeyDetailsResponse:\n      x-package: io.featurehub.dacha.model\n      properties:\n        etag:\n          x-basename: etag\n          type: string\n        organizationId:\n          x-basename: oId\n          type: string\n          format: uuid\n        portfolioId:\n          x-basename: pId\n          type: string\n          format: uuid\n        applicationId:\n          x-basename: aId\n          type: string\n          format: uuid\n        serviceKeyId:\n          description: \"The actual service key id rather than the key\"\n          x-basename: sId\n          type: string\n          format: uuid\n        features:\n          type: array\n          items:\n            $ref: \"#/components/schemas/CacheEnvironmentFeature\"\n    CacheRolloutStrategy:\n      x-package: io.featurehub.dacha.model\n      description: \"This is the model for the rollout strategy as required by Dacha and Edge\"\n      allOf:\n        - $ref: \"#/components/schemas/BaseRolloutStrategy\"\n        - type: object\n          required:\n            - id\n            - attributes\n          properties:\n            attributes:\n              type: array\n              items:\n                $ref: \"#/components/schemas/CacheRolloutStrategyAttribute\"\n    CacheRolloutStrategyAttribute:\n      x-package: io.featurehub.dacha.model\n      allOf:\n        - $ref: \"#/components/schemas/BaseRolloutStrategyAttribute\"\n        - type: object\n          required:\n            - conditional\n            - fieldName\n            - type\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"PublishServiceAccount\": parse schema: property \"serviceAccount\": parse schema: resolve \"#/components/schemas/CacheServiceAccount\": parse schema: property \"permissions\": parse schema: item: parse schema: resolve \"#/components/schemas/CacheServiceAccountPermission\": parse schema: property \"permissions\": parse schema: item: parse schema: resolve \"#/components/schemas/RoleType\": find schema: resolve \"#/components/schemas/RoleType\": can't find value for \"components/schemas/RoleType\""
}