{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/apiUi/apiUi"
		},
		"file": {
			"name": "adksimul8rsimulations.yaml",
			"size": 0,
			"path": "Lazarus/wsdlStub/Testing/adksimul8rsimulations.yaml",
			"byteSize": 11902,
			"content": "---\nopenapi: 3.0.0\ninfo:\n  title: ADKSimul8r\n  version: 1.0.1\nexternalDocs:\n  description: The low code approach to simulating your integrations.\n  url: https://community.pega.com/marketplace/components/adk-simul8r\nservers:\n- url: \"/\"\npaths:\n  \"/prweb/api/Simul8Tools/v1/simulations\":\n    post:\n      summary: Create simulations\n      description: |\n        # ToDo's  \n        1. Analyse SoapXML  \n        # Decisions  \n        1. ClassName is also required  \n           Besides Connector (name) also the Pega internal ClassName is required.     \n           This is to avoid conflicts since Connector (name) is not unique.  \n           (A disadvantage is that a ContentManager has to provide extra data.)  \n        1. Ruleset will be an optional parameter  \n           Besides AccessGroup  we also need Ruleset.  \n           Optional, with on Operation level the possibility to inherit from projectlevel.    \n        1. State data (Simul8r tab) will be passed and mapped.  \n           Although the data in the State tab is not used for stubbing,  \n           we will make it possible to provide it since it has a meaning for CBT.    \n      operationId: AddSimulations\n      tags:\n      - Stub Mappings\n      parameters:\n      - name: AccessGroup\n        description: The name of the access group\n        in: query\n        required: true\n        example: \"Bereavement:Employee\"\n        schema:\n          type: string\n      - name: Ruleset\n        description: Optional Ruleset identifier\n        in: query\n        required: false\n        example: \"Simul8Test2_Branch_SImulatorTestAPI\"\n        schema:\n          type: string\n      - name: Connector\n        description: |\n          The name of the service (Pega Connector)  \n          $pagedata.pyRuleName  \n          $pagedata.pyDocumentTitle  \n          $pagedata.pyServiceName  \n          $pagedata.pySystemName  \n          $pagedata.pxTabLabel  \n          $pagedata.{{method}}StubList.rowdata[index].pyServiceName  \n        in: query\n        required: true\n        example: CreateServiceRequestAPI\n        schema:\n          type: string\n      - name: ClassName\n        description: |\n          The classname for the simulation (pyClassName)  \n        in: query\n        required: true\n        example: RBG-Int-CreateServiceRequest-API\n        schema:\n          type: string\n      - name: Method\n        description: |\n          $pagedata.{{method}}StubList.rowdata[index].RESTServiceMethod\n          $pagedata.RoutingList.rowdata[index].HTTPMethod  \n          $pagedata.RoutingList.rowdata[index].RoutingLabel  \n          The http method (RESTServiceMethod)  \n          . GET  \n          . DELETE  \n          . PATCH  \n          . PUT  \n          . POST  \n        in: query\n        required: true\n        example: POST\n        schema:\n          type: string\n          enum:\n          - GET\n          - DELETE\n          - PATCH\n          - PUT\n          - POST\n      - name: body\n        description: List of simulations\n        in: body\n        schema:\n          $ref: \"#/components/schemas/simulations\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/OK_200\"\ncomponents:\n  responses:\n    OK_200:\n      description: OK\n    OK_200_Simulations:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n  schemas:\n    simulations:\n      type: array\n      items:\n        $ref: \"#/components/schemas/simulation\"\n    simulation:\n      type: object\n      required:\n      - title\n      - response\n      properties:\n        title:\n          type: string\n          description: |\n            $pagedata.{{method}}StubList.rowdata[index].pyID    \n        description:\n          type: string\n          description: |\n            $pagedata.{{method}}StubList.rowdata[index].pyLabel    \n        state:\n          type: object\n          description: |\n            This structure plays a role in the Simul8r export for ContractBasedTesting  \n          required:\n          - description\n          properties:\n            description:\n              type: string\n              description: |\n                $pagedata.{{method}}StubList.rowdata[index].PreconditionDescription    \n            whenRule:\n              type: string\n              description: |\n                $pagedata.{{method}}StubList.rowdata[index].pyWhen    \n            setDataTransform:\n              type: string\n              description: |\n                $pagedata.{{method}}StubList.rowdata[index].PreconditionDataTransform    \n        request:\n          type: object\n          properties:\n            contentType:\n              type: string\n              description: |\n                $pagedata.{{method}}StubList.rowdata[index].RequestType  \n                'JSON' when upercase value contains 'JSON'  \n                'XML' when upercase value contains 'XML'  \n            pathParameters:\n              type: array\n              description: |\n                Optional list of selection criteria on path parameters.  \n                Because the name of pathparameters in Pega may differ from the name in the schema,  \n                pathparameters are addressed by index, the first pathparameter having an index equeal 1.  \n                $pagedata.{{method}}StubList.rowdata[index].**SelectionCriteriaResourceParameters**  \n                \u003cbr/\u003epxObjClass = 'Embed-SimulationStubSelectionCriteria-ResourcePath'  \n                SelectionCriteriaType: RegEx  \n                pyMapFrom: Clipboard  \n                pyMapFromKey: Param.Pathparam2  \n                pyParameterName: Pathparam2  \n                pyValue: P2  \n              items:\n                $ref: '#/components/schemas/indexCompareItem'\n            headerParameters:\n              type: array\n              description: |\n                Optional list of selection criteria on header parameters.  \n                $pagedata.{{method}}StubList.rowdata[index].**SelectionCriteriaRequestHeaders**  \n                pxObjClass = 'Embed-SimulationStubSelectionCriteria-RequestHeader'  \n                SelectionCriteriaType: Equals  \n                pyMapFrom: CLIPBOARD  \n                pyMapFromKey: Param.headerParam2  \n                pyParameterName: headerparam2  \n                pyValue: H2  \n              items:\n                $ref: '#/components/schemas/identifierCompareItem'\n            queryParameters:\n              type: array\n              description: |\n                Optional list of selection criteria on query parameters.  \n                $pagedata.{{method}}StubList.rowdata[index].**SelectionCriteriaRequestParameters**  \n                pxObjClass = 'Embed-SimulationStubSelectionCriteria-QueryString'  \n                SelectionCriteriaType: RegEx  \n                pyMapFrom: CLIPBOARD  \n                pyMapFromKey: Param.queryparam2  \n                pyQueryStringDisplayText: queryparam2=Param.queryparam2  \n                pyParameterName: queryparam2  \n                pyValue: Q2  \n              items:\n                $ref: '#/components/schemas/identifierCompareItem'\n            bodyParameters:\n              type: array\n              description: |\n                Optional list of selection criteria on body parameters.  \n                Only **Matching rules** are supported.\n                $pagedata.{{method}}StubList.rowdata[index].**RequestContractMatchingCriteriaList**  \n                pxObjClass = 'Embed-SimulationStubContractMatchingCriteria'  \n                Type: Body  \n                Identifier: $.bodyparam2  \n                Comparator: equals  \n                ComparatorValue: B2  \n              items:\n                $ref: '#/components/schemas/pathCompareItem'\n        response:\n          type: object\n          required:\n          - status\n          properties:\n            status:\n              type: integer\n              description: |\n                [HTTP response status codes](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status)  \n            contentType:\n              type: string\n              description: |\n                $pagedata.{{method}}StubList.rowdata[index].ResponseType  \n                'JSON' when upercase value contains 'JSON'  \n                'T.B.D.' when upercase value contains 'XML'  \n            body:\n              type: string\n              description: |\n                Content of the reply, complying with contentType.  \n            responseDataTransform:\n              type: string\n              description: |\n                Below text is from the Pega Simul8r screen  \n                ***For more advanced use cases you can optionally use a response data transform to override the static values defined in the response body with dynamic information,  \n                such as unique IDs, dates and timestamps.  \n                This should be used in addition to the response body, not instead of.***  \n        advanced:\n          type: object\n          properties:\n            delayResponseMS:\n              type: integer\n              minimum: 0\n              description: |\n                $pagedata.{{method}}StubList.rowdata[index].DelayResponseMS  \n                Delay Before Responding (ms)  \n            callback:\n              type: object\n              description: |\n                Below text is from the Pega Simul8r screen  \n                ***Callback functionality allows you to simulate a callback from an external application. Populating the below fields will run   \n                the activity specified on a copy of the 'Int-' page, in the context of the access group specified, at the interval specified.  \n                This interval is triggered after the response is given.***  \n                \u003cbr/\u003eThe interval is determined by postponement.   \n                When this element is not delivered, no callback will be scheduled from this simulation.\n              required:\n              - activity\n              - accessGroup\n              properties:\n                activity:\n                  type: string\n                  description: |\n                    $pagedata.{{method}}StubList.rowdata[index].CallbackActivity\n                accessGroup:\n                  type: string\n                  description: |\n                    $pagedata.{{method}}StubList.rowdata[index].CallbackAccessGroup\n                postponement:\n                  type: integer\n                  description: |\n                    $pagedata.{{method}}StubList.rowdata[index].CallbackIntervalSeconds  \n                    In seconds.  \n                    Default 0 (zero, no postponement)  \n    identifierCompareItem:\n      type: object\n      required:\n      - identifier\n      - comparator\n      - value\n      properties:\n        identifier:\n          type: string\n          description: |\n            For more information please read the description at parent level.  \n        comparator:\n          $ref: '#/components/schemas/comparator'\n        value:\n          type: string\n    indexCompareItem:\n      type: object\n      required:\n      - ìndex\n      - comparator\n      - value\n      properties:\n        index:\n          type: integer\n          minimum: 1\n          description: |\n            For more information please read the description at parent level.  \n        comparator:\n          $ref: '#/components/schemas/comparator'\n        value:\n          type: string\n    pathCompareItem:\n      type: object\n      required:\n      - path\n      - comparator\n      - value\n      properties:\n        path:\n          type: string\n          description: |\n            For more information please read the description at parent level.  \n        comparator:\n          $ref: '#/components/schemas/comparator'\n        value:\n          type: string\n    comparator:\n      type: string\n      description:\n        Specifies how comparing will be done.  \n      enum:\n      - any\n      - contains\n      - equals\n      - regex\n",
			"canonicalURL": "/github.com/apiUi/apiUi@a449517f147bdaaa1e6691d55656a5a779c7a62e/-/blob/Lazarus/wsdlStub/Testing/adksimul8rsimulations.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/apiUi/apiUi/blob/a449517f147bdaaa1e6691d55656a5a779c7a62e/Lazarus/wsdlStub/Testing/adksimul8rsimulations.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/prweb/api/Simul8Tools/v1/simulations\": post: operation \"AddSimulations\": parameters: parse parameter \"body\": at Lazarus/wsdlStub/Testing/adksimul8rsimulations.yaml:93:13: unknown parameter location \"body\""
}