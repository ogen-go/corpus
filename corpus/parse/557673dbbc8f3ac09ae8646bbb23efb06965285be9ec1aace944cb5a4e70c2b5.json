{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bcgov/OCWA"
		},
		"file": {
			"name": "api-docs.yaml",
			"size": 0,
			"path": "microservices/projectApi/routes/v1/spec/api-docs.yaml",
			"byteSize": 7772,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Project API\n  description: \u003e\n    This is a project api that provides access to project management and\n    permission lookup.\n  license:\n    name: Apache 2.0\n    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'\n  contact:\n    name: Jeremy Ho\nservers:\n  - url: /v1\n    description: This Server\nsecurity:\n  - bearerAuth: []\npaths:\n  /admin/list/project:\n    get:\n      summary: List all projects\n      operationId: listProjects\n      tags:\n        - Admin\n      responses:\n        '200':\n          description: A paged array of requests that the user has access to\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PermissionList'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/admin/list/permission/{permissionName}':\n    get:\n      summary: List all projects with specific permission\n      operationId: listProjectsWithPermission\n      tags:\n        - Admin\n      parameters:\n        - name: permissionName\n          in: path\n          description: Name of the project\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: A paged array of requests that the user has access to\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PermissionList'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /admin/project/create:\n    post:\n      summary: Create new project\n      operationId: createProject\n      tags:\n        - Admin\n      responses:\n        '200':\n          description: A paged array of requests that the user has access to\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Success'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/admin/project/{projectName}/permission':\n    put:\n      summary: Update project permissions\n      operationId: updateProject\n      tags:\n        - Admin\n      parameters:\n        - name: projectName\n          in: path\n          description: Name of the project\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: A paged array of requests that the user has access to\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PermissionList'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/admin/project/{projectName}':\n    delete:\n      summary: Delete project\n      operationId: deleteProject\n      tags:\n        - Admin\n      parameters:\n        - name: projectName\n          in: path\n          description: Name of the project\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: A paged array of requests that the user has access to\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PermissionList'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/admin/project/{projectName}/permission/{permissionName}':\n    delete:\n      summary: Delete specific permission from project\n      operationId: deleteProjectPermission\n      tags:\n        - Admin\n      parameters:\n        - name: projectName\n          in: path\n          description: Name of the project\n          required: true\n          schema:\n            type: string\n        - name: permissionName\n          in: path\n          description: Name of the project\n          required: true\n          schema:\n            type: string\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PermissionList'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /permissions/list:\n    get:\n      summary: Get all known unique permissions\n      operationId: listPermissions\n      tags:\n        - Permissions\n      responses:\n        '200':\n          description: An array of all known permissions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PermissionList'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/permissions/{projectName}':\n    get:\n      summary: Get all permissions for a specific project\n      operationId: listProjectPermissions\n      tags:\n        - Permissions\n      parameters:\n        - name: projectName\n          in: path\n          description: Name of the project\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: A permissions object containing key-value permission pairs\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Permissions'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\ncomponents:\n  securitySchemes:\n    BearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  schemas:\n    Error:\n      required:\n        - error\n      properties:\n        error:\n          type: string\n          description: contains a message about the failure\n    PermissionList:\n      minItems: 0\n    Permissions:\n      minItems: 1\n    Success:\n      required:\n        - message\n      properties:\n        message:\n          type: string\n          description: 'Contains message about the success, normally \"Written successfully\"'\n  responses:\n    Forbidden:\n      description: Lack required role to perform action\n    NotFound:\n      description: Not found\n    UnauthorizedError:\n      description: Access token is missing or invalid\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /permissions/{projectName}: get: operation \"listProjectPermissions\": security: unknown security schema \"bearerAuth\""
}