{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/discord-gophers/goapi-gen"
		},
		"file": {
			"name": "components.yaml",
			"size": 0,
			"path": "internal/test/components/components.yaml",
			"byteSize": 6803,
			"content": "openapi: \"3.0.1\"\ninfo:\n  version: 1.0.0\n  title: Test Server\n  license:\n    name: MIT\npaths:\n  /ensure-everything-is-referenced:\n    get:\n      operationId: ensureEverythingIsReferenced\n      description: |\n        This endpoint exists so that components can be created in this\n        spec and not be pruned\n    # TODO: figure out why uncommenting this causes failures\n    #   parameters:\n    #     - $ref: \"#/components/parameters/ParameterObject\"\n      requestBody:\n        $ref: \"#/components/requestBodies/RequestBody\"\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  one:\n                    $ref: \"#/components/schemas/AdditionalPropertiesObject1\"\n                  two:\n                    $ref: \"#/components/schemas/AdditionalPropertiesObject2\"\n                  three:\n                    $ref: \"#/components/schemas/AdditionalPropertiesObject3\"\n                  four:\n                    $ref: \"#/components/schemas/AdditionalPropertiesObject4\"\n                  five:\n                    $ref: \"#/components/schemas/AdditionalPropertiesObject5\"\n                  jsonField:\n                    $ref: \"#/components/schemas/ObjectWithJsonField\"\n                  goStringTag:\n                    $ref: \"#/components/schemas/GoStringTag\"\n                  optionalValue:\n                    $ref: \"#/components/schemas/OptionalValue\"\n                  optionalObject:\n                    $ref: \"#/components/schemas/OptionalObject\"\n        default:\n          $ref: \"#/components/responses/ResponseObject\"\n  /params_with_add_props:\n    get:\n      operationId: ParamsWithAddProps\n      description: |\n        A path with parameters and a body which require additional properties\n      parameters:\n        - name: p1\n          description: |\n            This parameter has additional properties\n          in: query\n          required: true\n          style: simple\n          schema:\n            type: object\n            additionalProperties: true\n        - name: p2\n          description: |\n            This parameter has an anonymous inner property which needs to be\n            turned into a proper type for additionalProperties to work\n          in: query\n          required: true\n          schema:\n            properties:\n              inner:\n                type: object\n                additionalProperties:\n                  type: string\n            required: [inner]\n    post:\n      operationId: BodyWithAddProps\n      description: |\n        Has a request body which contains a direct additionalProperties, and\n        an anonymous inner property with additionalProperties\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                name:\n                  type: string\n                inner:\n                  type: object\n                  additionalProperties:\n                    type: integer\n              required: [name, inner]\n              additionalProperties: true\ncomponents:\n  schemas:\n    SchemaObject:\n      properties:\n        role:\n          type: string\n        firstName:\n          type: string\n      required:\n        - role\n        - firstName\n    GoStringTag:\n      description: Tests x-go-string\n      type: object\n      properties:\n        name:\n          type: string\n        id:\n          type: string\n          x-go-type: int\n          x-go-string: true\n      required: [name, id]\n    OptionalValue:\n      description: Tests x-go-optional-value\n      type: object\n      properties:\n        str1:\n          type: string\n          x-go-optional-value: true\n        str2:\n          type: string\n          x-go-optional-value: true\n    OptionalObject:\n      description: Tests x-go-optional-value on the whole object\n      x-go-optional-value: true\n      properties:\n        str1:\n          type: string\n        str2:\n          type: string\n        str_ptr1:\n          type: string\n          x-go-optional-value: false\n        str_ptr2:\n          type: string\n          x-go-optional-value: false\n    AdditionalPropertiesObject1:\n      description: Has additional properties of type int\n      type: object\n      properties:\n        name:\n          type: string\n        id:\n          type: integer\n        optional:\n          type: string\n      required: [name, id]\n      additionalProperties:\n        type: integer\n    AdditionalPropertiesObject2:\n      description: Does not allow additional properties\n      type: object\n      properties:\n        name:\n          type: string\n        id:\n          type: integer\n      required: [name, id]\n      additionalProperties: false\n    AdditionalPropertiesObject3:\n      description: Allows any additional property\n      type: object\n      properties:\n        name:\n          type: string\n      required: [name]\n      additionalProperties: true\n    AdditionalPropertiesObject4:\n      description: Has anonymous field which has additional properties\n      type: object\n      properties:\n        name:\n          type: string\n        inner:\n          type: object\n          properties:\n            name:\n              type: string\n          required: [name]\n          additionalProperties: true\n      required: [inner, name]\n      additionalProperties: true\n    AdditionalPropertiesObject5:\n      description: Has additional properties with schema for dictionaries\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/SchemaObject'\n    ObjectWithJsonField:\n      type: object\n      properties:\n        name:\n          type: string\n        value1:\n          type: string\n          format: json\n        value2:\n          type: string\n          format: json\n      required: [name, value1]\n  responses:\n    ResponseObject:\n      description: A simple response object\n      content:\n        application/json:\n          schema:\n            properties:\n              Field:\n                $ref: \"#/components/schemas/SchemaObject\"\n            required: [ Field ]\n        text/plain:\n          schema:\n            type: string\n  parameters:\n    ParameterObject:\n      name: ParameterObject\n      description: a parameter\n      in: query\n      content:\n        application/json:\n          schema:\n            properties:\n              Field:\n                $ref: \"#/components/schemas/SchemaObject\"\n            required: [ Field ]\n        text/plain:\n          schema:\n            type: string\n  requestBodies:\n    RequestBody:\n      content:\n        application/json:\n          schema:\n            properties:\n              Field:\n                $ref: \"#/components/schemas/SchemaObject\"\n            required: [ Field ]\n        text/plain:\n          schema:\n            type: string\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /params_with_add_props: get: operation \"ParamsWithAddProps\": parameters: parse parameter \"p1\": invalid style explode combination"
}