{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/microsoft/pai"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "src/rest-server/docs/swagger.yaml",
			"byteSize": 108763,
			"content": "openapi: 3.0.1\ninfo:\n  title: OpenPAI RESTful API\n  description: \u003e\n    Open Platform for AI RESTful API docs.\n    Version 2.0.1: add more examples and fix typos\n    Version 2.0.2: update job detail and job attempt schema\n    Version 2.0.3: update parameters description of get storage list, update storage example and add get job config example\n    Version 2.0.4: add default field in get storage list\n    Version 2.0.5: add more parameters to job list; add submissionTime\n    Version 2.1.0: add add/delete tag api; add tags field in get job detail and get job list; add tags filter in get job list\n    Version 2.1.1: add get event api\n    Version 2.2.0: add get task status api; add jobAttempId filter to job status api and extend job detail schema\n    Version 2.2.1: a user can add/delete tags to/from his/her own jobs\n    version 2.2.2: add get task logs api\n    version 2.2.3: set .jobStatus.appId nullable in get jobAttempt schema\n    version 2.2.4: support sorting by completionTime in get the list of jobs\n    version 2.2.5: add alert related api\n    version 2.2.6: update type of taskUid\n    version 2.2.7: add jobPriority list jobs parameter\n  license:\n    name: MIT License\n    url: \"https://github.com/microsoft/pai/blob/master/LICENSE\"\n  version: 2.2.7\nexternalDocs:\n  description: Find out more about OpenPAI\n  url: \"https://github.com/microsoft/pai\"\ntags:\n  - name: api\n    description: API information\n  - name: token\n    description: API endpoint for token\n  - name: authn\n    description: Authentication\n  - name: user\n    description: API endpoint for user\n  - name: group\n    description: API endpoint for group\n  - name: virtual cluster\n    description: API endpoint for virtual cluster\n  - name: job\n    description: API endpoint for job\n  - name: storage\n    description: API endpoint for storage\n  - name: job history\n    description: API endpoint for job history\n  - name: alert\n    description: API endpoint for alert\n  - name: kubernetes\n    description: API endpoint for kubernetes info\npaths:\n  /api/v2/info:\n    get:\n      tags:\n        - api\n      summary: Get OpenPAI cluster info.\n      description: Get OpenPAI cluster info.\n      operationId: getClusterInfo\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  name:\n                    type: string\n                    description: PAI RESTfulAPI\n                  version:\n                    type: string\n                    description: cluster version in v0.X.0 format\n                  launcherType:\n                    type: string\n                    enum:\n                      - yarn\n                      - k8s\n                  authnMethod:\n                    type: string\n                    enum:\n                      - basic\n                      - OIDC\n                required:\n                  - name\n                  - version\n                  - launcherType\n                  - authnMethod\n              example:\n                name: \"PAI RESTful API\"\n                version: \"v1.0.1\"\n                launcherType: \"k8s\"\n                authnMethod: \"basic\"\n  /api/v2/tokens:\n    get:\n      tags:\n        - token\n      summary: Get your currently signed tokens.\n      description: Get your currently signed tokens.\n      operationId: getTokens\n      security:\n        - bearerAuth: []\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  tokens:\n                    type: array\n                    items:\n                      type: string\n                    description: JWT string list\n                required:\n                  - tokens\n              example:\n                tokens:\n                  - \"JWT Token Example\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedUserError\"\n  \"/api/v2/tokens/{token}\":\n    delete:\n      tags:\n        - token\n      summary: Revoke a token.\n      description: Revoke a token.\n      operationId: deleteToken\n      security:\n        - bearerAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/token\"\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Response\"\n              example:\n                message: revoke successfully\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedUserError\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenUserError\"\n  /api/v2/tokens/application:\n    post:\n      tags:\n        - token\n      summary: Create an application access token in the system.\n      description: \u003e\n        Application access token can only be used for job related operations.\n        Application access token has no expiration time and can be revoked\n        manually.\n      operationId: createApplicationToken\n      security:\n        - bearerAuth: []\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  token:\n                    type: string\n                    description: your access token\n                  application:\n                    type: boolean\n                    description: \"true\"\n              example:\n                token: \"JWT Token Example\"\n                application: true\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedUserError\"\n  /api/v2/authn/oidc/login:\n    get:\n      tags:\n        - authn\n      summary: User login with Azure AD.\n      description: After call this API in web browser, restserver will redirect your page to Azure AD for authentication. Only be used in webportal.\n      operationId: oidcLogin\n      responses:\n        \"302\":\n          description: Redirect\n  /api/v2/authn/oidc/logout:\n    get:\n      tags:\n        - authn\n      summary: User logout from Azure AD.\n      description: After call this API in web browser, restserver will redirect your page to Azure AD for logout.\n      operationId: oidcLogout\n      responses:\n        \"302\":\n          description: Redirect\n  /api/v2/authn/basic/login:\n    post:\n      tags:\n        - authn\n      summary: Get an access token using username and password.\n      description: \u003e-\n        Authenticated and get an access token in the system (basic\n        authentication mode only).\n      operationId: basicLogin\n      requestBody:\n        description: Basic authentication.\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                username:\n                  type: string\n                  description: your username\n                password:\n                  type: string\n                  description: your password\n                expiration:\n                  type: integer\n                  description: expiration time in seconds\n              required:\n                - username\n                - password\n        required: true\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  token:\n                    type: string\n                    description: your access token\n                  user:\n                    type: string\n                    description: username\n                  admin:\n                    type: boolean\n                    description: true if user is admin\n                required:\n                  - token\n                  - user\n                  - admin\n              example:\n                token: \"JWT Token Example\"\n                user: \"user\"\n                admin: true\n        \"400\":\n          description: NoUserError or IncorrectPasswordError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Response\"\n        \"404\":\n          $ref: \"#/components/responses/NoUserError\"\n  /api/v2/authn/basic/logout:\n    delete:\n      tags:\n        - authn\n      summary: Logout and revoke the token\n      description: Logout and revoke the token\n      operationId: basicLogout\n      security:\n        - bearerAuth: []\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Response\"\n              example:\n                message: Logout successfully\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedUserError\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenUserError\"\n  /api/v2/users:\n    post:\n      tags:\n        - user\n      summary: Create a user in the system.\n      description: \"Create a user in the system by admin, basic authentication mode only.\"\n      operationId: createUser\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: User account\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                username:\n                  type: string\n                  description: 'username in [\\w.-]+ format'\n                password:\n                  type: string\n                  description: password at least 6 characters\n                admin:\n                  type: boolean\n                email:\n                  type: string\n                  description: email address or empty string\n                virtualCluster:\n                  type: array\n                  items:\n                    type: string\n                  description: vc list\n                extension:\n                  type: object\n              required:\n                - username\n                - password\n        required: true\n      responses:\n        \"201\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Response\"\n              example:\n                message: User is created successfully\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedUserError\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenUserError\"\n        \"409\":\n          $ref: \"#/components/responses/ConflictUserError\"\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n    get:\n      tags:\n        - user\n      summary: Get all users in the system.\n      description: \"Get all users in the system by admin.\"\n      operationId: getAllUser\n      security:\n        - bearerAuth: []\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                description: Array with all users in the system.\n                type: array\n                items:\n                  $ref: \"#/components/schemas/UserInfo\"\n              example:\n                - username: username\n                  admin: true\n                  virtualCluster: []\n                  storageConfig: []\n                  email: \"email@test.com\"\n                  extension: {}\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n    put:\n      tags:\n        - user\n      summary: Update a user in the system.\n      description: \u003e-\n        Update a user in the system.\n        Admin only.\n      operationId: updateUser\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: Update a user\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                data:\n                  type: object\n                  required:\n                    - username\n                  properties:\n                    username:\n                      type: string\n                      description: user name\n                    email:\n                      type: string\n                      description: \u003e-\n                        Email address.\n                        Only be allowed in basic mode.\n                        When patch is false, it's required.\n                        When patch is true, it's optional.\n                    virtualCluster:\n                      type: array\n                      description: \u003e-\n                        Array of the virtual cluster.\n                        Only be allowed in basic mode.\n                        When patch is false, it's required.\n                        When patch is true, it's optional.\n                      items:\n                        type: string\n                        description: virtual cluster name.\n                    admin:\n                      type: boolean\n                      description: \u003e-\n                        Set the user as admin or not.\n                        Only be allowed in basic mode.\n                        When patch is false, it's required.\n                        When patch is true, it's optional.\n                    password:\n                      type: string\n                      description: \u003e-\n                        Password.\n                        Only be allowed in basic mode.\n                        When patch is false, it's required.\n                        When patch is true, it's optional.\n                    extension:\n                      type: object\n                      description: \u003e-\n                        Extension fields.\n                        Be allowed in both oidc and basic mode.\n                        When patch is false, it's required.\n                        When patch is true, it's optional.\n                patch:\n                  type: boolean\n                  default: false\n      responses:\n        \"201\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Response\"\n              example:\n                message: \"update group {username} successfully.\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedUserError\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenUserError\"\n        \"404\":\n          $ref: \"#/components/responses/NoUserError\"\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n  /api/v2/users/me:\n    put:\n      tags:\n        - user\n      summary: Update user's own profile.\n      description: \u003e-\n        Update user's own profile in the system.\n      operationId: updateUserSelf\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: Update user's own profile\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                data:\n                  type: object\n                  required:\n                    - username\n                  properties:\n                    username:\n                      type: string\n                      description: user name\n                    email:\n                      type: string\n                      description: \u003e-\n                        Email address.\n                        When patch is false, it's required.\n                        When patch is true, it's optional.\n                    newPassword:\n                      type: string\n                      description: \u003e-\n                        New password.\n                        When patch is false, it's required.\n                        When patch is true, it's optional.\n                    oldPassword:\n                      type: string\n                      description: \u003e-\n                        Old password.\n                        When newPassword exists, it's required.\n                        When newPassword doesn't exists, it's useless.\n                    extension:\n                      type: object\n                      description: \u003e-\n                        Extension fields.\n                        Be allowed in both oidc and basic mode.\n                        When patch is false, it's required.\n                        When patch is true, it's optional.\n                patch:\n                  type: boolean\n                  default: false\n      responses:\n        \"201\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Response\"\n              example:\n                message: \"update group {username} successfully.\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedUserError\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenUserError\"\n        \"404\":\n          $ref: \"#/components/responses/NoUserError\"\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n  \"/api/v2/users/{user}\":\n    parameters:\n      - $ref: \"#/components/parameters/user\"\n    get:\n      tags:\n        - user\n      summary: Get a user's data.\n      description: \u003e-\n        Get a user's data.\n      operationId: getUser\n      security:\n        - bearerAuth: []\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserInfo\"\n              example:\n                username: username\n                admin: true\n                virtualCluster: []\n                storageConfig: []\n                email: \"email@test.com\"\n                extension: {}\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedUserError\"\n        \"404\":\n          $ref: \"#/components/responses/NoUserError\"\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n    delete:\n      tags:\n        - user\n      summary: Remove a user in the system.\n      description: \u003e-\n        Basic mode only.\n        Admin only.\n        Remove a user in the system.\n      operationId: deleteUser\n      security:\n        - bearerAuth: []\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Response\"\n              example:\n                message: user is removed successfully\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedUserError\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenUserError\"\n        \"404\":\n          $ref: \"#/components/responses/NoUserError\"\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n  \"/api/v2/users/{user}/group/\":\n    parameters:\n      - $ref: \"#/components/parameters/user\"\n    put:\n      tags:\n        - user\n      summary: Add a group for user.\n      description: \u003e-\n        Admin only.\n        Basic mode only.\n        Add a group to a user's grouplist.\n      operationId: updateUserGroup\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: Add a group to user's grouplist\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                groupname:\n                  type: string\n                  default: the group will be added into the user's grouplist.\n      responses:\n        \"201\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Response\"\n              example:\n                message: \"User {username} is added into group {groupname}\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedUserError\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenUserError\"\n        \"404\":\n          $ref: \"#/components/responses/NoUserError\"\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n    delete:\n      tags:\n        - user\n      summary: Remove a group from user's grouplist.\n      description: \u003e-\n        Admin only.\n        Basic mode only.\n        Remove a group from user's grouplist.\n      operationId: deleteUserGroup\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: Remove a group from the user's grouplist.\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                groupname:\n                  type: string\n                  description: the group will be removed from the user's grouplist.\n      responses:\n        \"201\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Response\"\n              example:\n                message: \"User {username} is removed from group {groupname}\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedUserError\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenUserError\"\n        \"404\":\n          $ref: \"#/components/responses/NoUserError\"\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n  \"/api/v2/users/{user}/grouplist/\":\n    parameters:\n      - $ref: \"#/components/parameters/user\"\n    put:\n      tags:\n        - user\n      summary: Replace user's grouplist\n      description: \u003e-\n        Admin only.\n        Basic mode only.\n        Update a user's grouplist.\n      operationId: updateUserGrouplist\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: Add a group to user's grouplist\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                grouplist:\n                  description: grouplist\n                  type: array\n                  items:\n                    type: string\n      responses:\n        \"201\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Response\"\n              example:\n                message: \"update user grouplist successfully.\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedUserError\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenUserError\"\n        \"404\":\n          $ref: \"#/components/responses/NoUserError\"\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n  /api/v2/groups:\n    get:\n      tags:\n        - group\n      summary: Get all group objects in the system.\n      description: Get all group objects in the system.\n      operationId: getAllGroup\n      security:\n        - bearerAuth: []\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                description: Array with all groups in the system.\n                type: array\n                items:\n                  type: object\n                  properties:\n                    groupname:\n                      type: string\n                      description: group name\n                    description:\n                      type: string\n                      description: description for the group\n                    externalName:\n                      type: string\n                      description: the external group name binding with the group in OpenPAI\n                    extension:\n                      type: object\n              example:\n                - groupname: groupName\n                  description: description\n                  externalName: externalName\n                  extension: {}\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedUserError\"\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n    post:\n      tags:\n        - group\n      summary: Create a group in the system.\n      description: \u003e-\n        Create a group in the system.\n        Admin only.\n      operationId: createGroup\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: Create a group\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                groupname:\n                  type: string\n                  description: group name\n                description:\n                  type: string\n                  description: description for the group\n                externalName:\n                  type: string\n                  description: the external group name binding with the group in OpenPAI\n                extension:\n                  type: object\n              required:\n                - groupname\n        required: true\n      responses:\n        \"201\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Response\"\n              example:\n                message: group is created successfully\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedUserError\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenUserError\"\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n    put:\n      tags:\n        - group\n      summary: Update a group in the system.\n      description: \u003e-\n        Update a group in the system.\n        Admin only.\n      operationId: updateGroup\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: Update a group\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                data:\n                  type: object\n                  required:\n                    - groupname\n                  properties:\n                    groupname:\n                      type: string\n                      description: group name\n                    description:\n                      type: string\n                      description: description for the group\n                    externalName:\n                      type: string\n                      description: the external group name binding with the group in OpenPAI\n                    extension:\n                      type: object\n                patch:\n                  type: boolean\n                  default: false\n        required: true\n      responses:\n        \"201\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Response\"\n              example:\n                message: \"update group {groupname} successfully.\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedUserError\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenUserError\"\n        \"404\":\n          $ref: \"#/components/responses/NoGroupError\"\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n  \"/api/v2/groups/{group}\":\n    parameters:\n      - $ref: \"#/components/parameters/group\"\n    get:\n      tags:\n        - group\n      summary: Get a group in the system.\n      description: \u003e-\n        Get a group in the system.\n      operationId: getGroup\n      security:\n        - bearerAuth: []\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  groupname:\n                    type: string\n                    description: group name\n                  description:\n                    type: string\n                    description: description for the group\n                  externalName:\n                    type: string\n                    description: the external group name binding with the group in OpenPAI\n                  extension:\n                    type: object\n                required:\n                  - groupname\n                  - description\n                  - externalName\n                  - extension\n              example:\n                groupname: groupName\n                description: description\n                externalName: externalName\n                extension: {}\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedUserError\"\n        \"404\":\n          $ref: \"#/components/responses/NoGroupError\"\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n    delete:\n      tags:\n        - group\n      summary: Delete a group in the system.\n      description: \u003e-\n        Delete a group in the system.\n        Admin only.\n      operationId: deleteGroup\n      security:\n        - bearerAuth: []\n      responses:\n        \"201\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Response\"\n              example:\n                message: group is removed successfully\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedUserError\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenUserError\"\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n  \"/api/v2/groups/{group}/userlist\":\n    parameters:\n      - $ref: \"#/components/parameters/group\"\n    get:\n      tags:\n        - group\n      summary: Get the user array of a group in the system.\n      description: Get the user array of a group in the system.\n      operationId: getGroupMembers\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                description: Array with all users in the group.\n                type: array\n                items:\n                  type: object\n                  properties:\n                    username:\n                      type: string\n                      description: user name\n                    clusterAdmin:\n                      type: boolean\n                      description: Cluster admin or not.\n              example:\n                - username: username\n                  clusterAdmin: false\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedUserError\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenUserError\"\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n  /api/v2/virtual-clusters:\n    get:\n      tags:\n        - virtual cluster\n      summary: Get the list of virtual clusters.\n      description: Get the list of virtual clusters.\n      operationId: listVirtualClusters\n      security:\n        - bearerAuth: []\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  $ref: \"#/components/schemas/VirtualCluster\"\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n  \"/api/v2/virtual-clusters/{vc}\":\n    get:\n      tags:\n        - virtual cluster\n      summary: Get virtual cluster status in the system.\n      description: Get virtual cluster status in the system.\n      operationId: getVirtualCluster\n      security:\n        - bearerAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/vc\"\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VirtualCluster\"\n              example:\n                capacity: 70\n                usedCapacity: 30\n                dedicated: false\n                resourcesUsed:\n                  cpu: 1\n                  memory: 1024\n                  gpu: 1\n                  vCores: 1\n                  GPUs: 1\n                resourcesGuaranteed:\n                  cpu: 2\n                  memory: 2048\n                  gpu: 2\n                  vCores: 2\n                  GPUs: 2\n                resourcesTotal:\n                  cpu: 2\n                  memory: 2048\n                  gpu: 2\n                  vCores: 2\n                  GPUs: 2\n                maxCapacity: 70\n        \"404\":\n          $ref: \"#/components/responses/NoVirtualClusterError\"\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n  /api/v2/storages:\n    get:\n      tags:\n        - storage\n      summary: Get storage list (persistent volume claims) for current user.\n      description: Get storage list for which current user has permissions.\n      operationId: getStorages\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: default\n          in: query\n          description: If true, return default storages only.\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StorageSummary\"\n              example:\n                storages:\n                  - name: name\n                    share: true\n                    volumeName: volumeName\n                    default: true\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n  \"/api/v2/storages/{storage}\":\n    get:\n      tags:\n        - storage\n      summary: Get storage (persistent volume claim) for the given name.\n      description: Get storage for the given name.\n      operationId: getStorage\n      security:\n        - bearerAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/storage\"\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StorageDetail\"\n              example:\n                name: nfs-storage-name\n                share: true\n                volumeName: nfs-volume-name\n                default: true\n                type: nfs\n                data:\n                  server: \u003cip-address\u003e\n                  path: \"/data\"\n        \"403\":\n          description: ForbiddenUserError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Response\"\n              examples:\n                ForbiddenUserError:\n                  value:\n                    code: ForbiddenUserError\n                    message: \"User {user} is not allowed to access {storage}.\"\n        \"404\":\n          $ref: \"#/components/responses/NoStorageError\"\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n  /api/v2/jobs:\n    post:\n      tags:\n        - job\n      summary: Submit a job in the system.\n      description: Submit a job in the system.\n      operationId: createJob\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: Job protocol\n        content:\n          text/yaml:\n            schema:\n              $ref: \"#/components/schemas/JobProtocol\"\n        required: true\n      responses:\n        \"202\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Response\"\n              example:\n                message: \"update job {job} successfully\"\n        \"400\":\n          $ref: \"#/components/responses/NoVirtualClusterError\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenUserError\"\n        \"409\":\n          $ref: \"#/components/responses/ConflictJobError\"\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n    get:\n      tags:\n        - job\n      summary: Get the list of jobs.\n      description: Get the list of jobs.\n      operationId: listJobs\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: username\n          in: query\n          description: filter jobs with username\n          schema:\n            type: string\n        - name: vc\n          in: query\n          description: filter jobs with virtual cluster name\n          schema:\n            type: string\n        - name: state\n          in: query\n          description: filter jobs with state\n          schema:\n            type: string\n        - name: keyword\n          in: query\n          description: filter jobs with keyword, we search keyword in user name, job name, and virtual cluster name\n          schema:\n            type: string\n        - name: tagsContain\n          in: query\n          description: filter jobs with tags. When multiple tags are specified, every job selected should have at least one of these tags\n          schema:\n            type: string\n        - name: tagsNotContain\n          in: query\n          description: filter jobs with tags. When multiple tags are specified, every job selected should have none of these tags\n          schema:\n            type: string\n        - name: jobPriority\n          in: query\n          description: filter jobs with jobPriority, fields include oppo, test, prod, and default (default means jobPriorityClass in job config is null)\n          schema:\n            type: string\n        - name: offset\n          in: query\n          description: list job offset\n          schema:\n            type: number\n        - name: limit\n          in: query\n          description: list job limit. It has a default number 5000, and its max number is 50000.\n          schema:\n            type: number\n        - name: order\n          in: query\n          description: 'order of job list.\n          It follows the format \u003cfield\u003e,\u003cASC|DESC\u003e, default value is \"submissionTime,DESC\".\n          Available fields include: jobName, submissionTime, username, vc, retries, totalTaskNumber, totalGpuNumber, state, completionTime, jobPriority.\n          CompletionTime maybe null for some jobs, these jobs will be returned at the end of the list when sorting by ASC order \u0026 at the beginning when sorting by DESC order.'\n          schema:\n            type: string\n        - name: withTotalCount\n          in: query\n          description: 'if withTotalCount is \"true\", the result will contain a \"totalCount\" and a \"data\" field, instead of a job list.'\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/JobSummary\"\n                  - $ref: \"#/components/schemas/JobSummaryWithTotalCount\"\n              example:\n                - protocolVersion: \"2\"\n                  name: job name\n                  username: user name\n                  state: SUCCEEDED\n                  subState: Completed\n                  executionType: STOP\n                  tags: [\"abnormal\", \"low_gpu_utilization\"]\n                  retries: 0\n                  submissionTime: 0\n                  createdTime: 0\n                  launchedTime: 0\n                  completedTime: 0\n                  appExitCode: 0\n                  virtualCluster: unknown\n                  jobPriority: prod\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n  \"/api/v2/jobs/{user}~{job}\":\n    get:\n      tags:\n        - job\n      summary: Get job status with the last attempt.\n      description: Get job status with the last attempt.\n      operationId: getJob\n      security:\n        - bearerAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/user\"\n        - $ref: \"#/components/parameters/job\"\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JobDetail\"\n              example:\n                name: job name\n                tags: [\"abnormal\", \"low_gpu_utilization\"]\n                jobStatus:\n                  username: user name\n                  state: SUCCEEDED\n                  subState: Completed\n                  executionType: STOP\n                  retries: 0\n                  submissionTime: 0\n                  createdTime: 0\n                  launchedTime: 0\n                  completedTime: 0\n                  attemptId: 0\n                  attemptState: SUCCEEDED,\n                  appId: id\n                  appCreatedTime: 0\n                  appLaunchedTime: 0\n                  appCompletedTime: 0\n                  appExitCode: 0\n                  virtualCluster: unknown\n                taskRoles:\n                  taskrole:\n                    taskRoleStatus:\n                      name: task role name\n                    taskStatuses:\n                      - taskIndex: 0\n                        taskUid: e0235258-0c4b-11eb-b396-96ba8c8049b4\n                        taskState: SUCCEEDED\n                        attemptId: 0\n                        attemptState: SUCCEEDED\n        \"404\":\n          $ref: \"#/components/responses/NoJobError\"\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n  \"/api/v2/jobs/{user}~{job}/attempts/{jobAttemptId}\":\n    get:\n      tags:\n        - job\n      summary: Get job status with specific job attempt.\n      description: Get job status with specific job attempt.\n      operationId: getJob\n      security:\n        - bearerAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/user\"\n        - $ref: \"#/components/parameters/job\"\n        - $ref: \"#/components/parameters/jobAttemptId\"\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JobDetail\"\n              example:\n                name: job name\n                tags: [\"abnormal\", \"low_gpu_utilization\"]\n                jobStatus:\n                  username: user name\n                  state: SUCCEEDED\n                  subState: Completed\n                  executionType: STOP\n                  retries: 0\n                  submissionTime: 0\n                  createdTime: 0\n                  launchedTIme: 0\n                  completedTime: 0\n                  attemptId: 0\n                  attemptState: SUCCEEDED,\n                  appId: id\n                  appCreatedTime: 0\n                  appLaunchedTime: 0\n                  appCompletedTime: 0\n                  appExitCode: 0\n                  virtualCluster: unknown\n                taskRoles:\n                  taskrole:\n                    taskRoleStatus:\n                      name: task role name\n                    taskStatuses:\n                      - taskIndex: 0\n                        taskUid: e0235258-0c4b-11eb-b396-96ba8c8049b4\n                        taskState: SUCCEEDED\n                        attemptId: 0\n                        attemptState: SUCCEEDED\n        \"404\":\n          $ref: \"#/components/responses/NoJobError\"\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n  \"/api/v2/jobs/{user}~{job}/config\":\n    get:\n      tags:\n        - job\n      summary: Get job configuration.\n      description: This API always returns job config in v2 format (text/yaml). Old job config in v1 format will be converted automatically.\n      operationId: getJobConfig\n      security:\n        - bearerAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/user\"\n        - $ref: \"#/components/parameters/job\"\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            text/yaml:\n              schema:\n                $ref: \"#/components/schemas/JobProtocol\"\n              example:\n                protocolVersion: 2\n                name: jobconfig\n                type: job\n                version: \"1.0\"\n                prerequisites:\n                  - name: image\n                    type: dockerimage\n                    uri: uri\n                taskRoles:\n                  taskRole:\n                    instances: 1\n                    dockerImage: image\n                    resourcePerInstance:\n                      cpu: 1\n                      memoryMB: 1024\n                      gpu: 1\n                    commands:\n                      - commands\n        \"404\":\n          description: NoJobError or NoJobConfigError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Response\"\n              examples:\n                NoJobError:\n                  $ref: \"#/components/responses/NoJobError/content/application~1json/examples/NoJobError\"\n                NoJobConfigError:\n                  $ref: \"#/components/responses/NoJobConfigError/content/application~1json/examples/NoJobConfigError\"\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n  \"/api/v2/jobs/{user}~{job}/executionType\":\n    put:\n      tags:\n        - job\n      summary: Start or stop a job.\n      description: Start or stop a job.\n      operationId: updateJobExecutionType\n      security:\n        - bearerAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/user\"\n        - $ref: \"#/components/parameters/job\"\n      requestBody:\n        description: Execution type\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                value:\n                  type: string\n                  enum:\n                    - START\n                    - STOP\n                  description: execution type\n              required:\n                - value\n        required: true\n      responses:\n        \"202\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Response\"\n              example:\n                message: execute job {job} successfully\n        \"400\":\n          $ref: \"#/components/responses/InvalidParametersError\"\n        \"404\":\n          $ref: \"#/components/responses/NoJobError\"\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n  \"/api/v2/jobs/{user}~{job}/tag\":\n    put:\n      tags:\n        - job\n      summary: Add a tag to a job. Admin users can add tags to any job. A non-admin user can add tags to his/her own jobs.\n      description: Add a tag to a job.\n      operationId: addTag\n      security:\n        - bearerAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/user\"\n        - $ref: \"#/components/parameters/job\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                value:\n                  type: string\n                  description: tag\n              required:\n                - value\n        required: true\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Response\"\n              example:\n                message: \"Add tag {tag} for job {job} successfully.\"\n        \"400\":\n          $ref: \"#/components/responses/InvalidParametersError\"\n        \"404\":\n          $ref: \"#/components/responses/NoJobError\"\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n    delete:\n      tags:\n        - job\n      summary: Delete a tag from a job. Admin users can delete tags from any job. A non-admin user can delete tags from his/her own jobs.\n      description: Delete a tag from a job.\n      operationId: deleteTag\n      security:\n        - bearerAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/user\"\n        - $ref: \"#/components/parameters/job\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                value:\n                  type: string\n                  description: tag\n              required:\n                - value\n        required: true\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Response\"\n              example:\n                message: \"Delete tag {tag} from job {job} successfully.\"\n        \"400\":\n          $ref: \"#/components/responses/InvalidParametersError\"\n        \"404\":\n          description: NoJobError or NoTagError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Response\"\n              examples:\n                NoJobError:\n                  $ref: \"#/components/responses/NoJobError/content/application~1json/examples/NoJobError\"\n                NoTagError:\n                  $ref: \"#/components/responses/NoTagError/content/application~1json/examples/NoTagError\"\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n  \"/api/v2/jobs/{user}~{job}/events\":\n    get:\n      tags:\n        - job\n      summary: Get events of a job.\n      description: Get events of a job. The events are sorted by \"lastTimestamp,DESC\".\n      operationId: getEvents\n      security:\n        - bearerAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/user\"\n        - $ref: \"#/components/parameters/job\"\n        - name: type\n          in: query\n          description: filter events with type. Could be \"Warning\" or \"Normal\".\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JobEventsWithTotalCount\"\n              example:\n                totalCount: 1\n                data:\n                - uid: \"b8a87b12-29de-4702-818a-442d5a97623e\"\n                  frameworkName: \"399af21acb5befd015d4c45f6c7c1eb9\"\n                  podUid: \"94920b63-f4d6-4c63-b72b-b926b8bc1334\"\n                  taskroleName: \"taskrole\"\n                  taskName: \"399af21acb5befd015d4c45f6c7c1eb9-taskrole-11\"\n                  taskIndex: 11\n                  type: \"Warning\"\n                  reason: \"FailedScheduling\"\n                  message: \"0/17 nodes are available: 1 Insufficient memory, 1 node(s) didn't match node selector, 1 node(s) were unschedulable, 14 Insufficient cpu, 16 Insufficient nvidia.com/gpu.\"\n                  firstTimestamp: \"2020-09-29T09:46:42.000Z\"\n                  lastTimestamp: \"2020-09-29T09:55:53.000Z\"\n                  count: 9\n                  sourceComponent: \"default-scheduler\"\n                  sourceHost: null\n        \"404\":\n          $ref: \"#/components/responses/NoJobError\"\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n  \"/api/v2/jobs/{user}~{job}/job-attempts/healthz\":\n    get:\n      deprecated: true\n      tags:\n        - job history\n      summary: Check if job attempts is healthy.\n      description: Check if job attempts is healthy.\n      operationId: getJobAttemptsHealthz\n      security:\n        - bearerAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/user\"\n        - $ref: \"#/components/parameters/job\"\n      responses:\n        \"200\":\n          description: OK\n        \"501\":\n          description: Not healthy\n  \"/api/v2/jobs/{user}~{job}/job-attempts\":\n    get:\n      deprecated: true\n      tags:\n        - job history\n      summary: Get all attempts of a job.\n      description: Get all attempts of a job.\n      operationId: getJobAttempts\n      security:\n        - bearerAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/user\"\n        - $ref: \"#/components/parameters/job\"\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/JobAttempt\"\n                description: job attempts\n              example:\n                - jobName: jobName\n                  frameworkName: frameworkName\n                  uid: uid\n                  userName: userName\n                  state: SUCCEEDED\n                  originState: Completed\n                  attemptIndex: 0\n                  jobStartedTime: 0\n                  attemptStartedTime: 0\n                  attemptCompletedTime: 0\n                  exitCode: 0\n                  exitPhrase: Succeeded\n                  exitType: Succeeded\n                  exitDiagnostics:\n                    diagnosticsSummary: Pod succeeded\n                    runtime:\n                    launcher: Pod succeeded\n                  appExitTriggerMessage: \"All Tasks are completed\"\n                  appExitTriggerTaskRoleName: taskrole\n                  appExitTriggerTaskIndex: 0\n                  appExitSpec:\n                    code: 0\n                    phrase: Succeeded\n                    issuer: USER_CONTAINER\n                    causer: USER_CONTAINER\n                    type: USER_SUCCESS\n                    stage: COMPLETING\n                    behavior: UNKNOWN\n                    reaction: NEVER_RETRY\n                    repro:\n                      - User program exits with exitcode 0\n                  appExitDiagnostics: Pod succeeded\n                  appExitMessages:\n                    container:\n                    runtime:\n                    launcher: Pod succeeded\n                  totalGpuNumber: 1\n                  totalTaskNumber: 1\n                  totalTaskRoleNumber: 1\n                  taskRoles:\n                    taskrole:\n                      taskRoleStatus:\n                        name: taskrole\n                      taskStatuses:\n                        - taskIndex: 0\n                          taskState: SUCCEEDED\n                          containerId: \u003ccontainer id\u003e\n                          containerIp: \u003ccontainer ip\u003e\n                          containerExitCode: 0\n                  isLatest: true\n        \"404\":\n          $ref: \"#/components/responses/NoJobError\"\n        \"501\":\n          $ref: \"#/components/responses/UnknownError\"\n  \"/api/v2/jobs/{user}~{job}/job-attempts/{attemptIndex}\":\n    get:\n      deprecated: true\n      tags:\n        - job history\n      summary: Get a specific attempt by attempt index.\n      description: Get a specific attempt by attempt index.\n      operationId: getJobAttempt\n      security:\n        - bearerAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/user\"\n        - $ref: \"#/components/parameters/job\"\n        - $ref: \"#/components/parameters/attemptIndex\"\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JobAttempt\"\n              example:\n                jobName: jobName\n                frameworkName: frameworkName\n                uid: uid\n                userName: userName\n                state: SUCCEEDED\n                originState: Completed\n                attemptIndex: 0\n                jobStartedTime: 0\n                attemptStartedTime: 0\n                attemptCompletedTime: 0\n                exitCode: 0\n                exitPhrase: Succeeded\n                exitType: Succeeded\n                exitDiagnostics:\n                  diagnosticsSummary: Pod succeeded\n                  runtime:\n                  launcher: Pod succeeded\n                appExitTriggerMessage: \"All Tasks are completed\"\n                appExitTriggerTaskRoleName: taskrole\n                appExitTriggerTaskIndex: 0\n                appExitSpec:\n                  code: 0\n                  phrase: Succeeded\n                  issuer: USER_CONTAINER\n                  causer: USER_CONTAINER\n                  type: USER_SUCCESS\n                  stage: COMPLETING\n                  behavior: UNKNOWN\n                  reaction: NEVER_RETRY\n                  repro:\n                    - User program exits with exitcode 0\n                appExitDiagnostics: Pod succeeded\n                appExitMessages:\n                  container:\n                  runtime:\n                  launcher: Pod succeeded\n                totalGpuNumber: 1\n                totalTaskNumber: 1\n                totalTaskRoleNumber: 1\n                taskRoles:\n                  taskrole:\n                    taskRoleStatus:\n                      name: taskrole\n                    taskStatuses:\n                      - taskIndex: 0\n                        taskState: SUCCEEDED\n                        containerId: \u003ccontainer id\u003e\n                        containerIp: \u003ccontainer ip\u003e\n                        containerExitCode: 0\n                isLatest: true\n        \"404\":\n          $ref: \"#/components/responses/NoJobError\"\n        \"501\":\n          $ref: \"#/components/responses/UnknownError\"\n  \"/api/v2/jobs/{user}~{job}/attempts/{jobAttemptId}/taskRoles/{taskRoleName}/taskIndex/{taskIndex}/attempts\":\n    get:\n      tags:\n        - job\n      summary: Get task status.\n      description: Get task status.\n      operationId: getTask\n      security:\n        - bearerAuth: []\n      parameters:\n      - $ref: \"#/components/parameters/user\"\n      - $ref: \"#/components/parameters/job\"\n      - $ref: \"#/components/parameters/jobAttemptId\"\n      - $ref: \"#/components/parameters/taskRoleName\"\n      - $ref: \"#/components/parameters/taskIndex\"\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaskStatus\"\n              example:\n                taskIndex: 0\n                taskUid: e0235258-0c4b-11eb-b396-96ba8c8049b4\n                taskState: STOPPED\n                retries: 1\n                accountableRetries: 1\n                createdTime: 1602480558000\n                launchedTime: 1602480559000\n                completedTime: 1602480603000\n                username: test_user\n                jobName: task_retry_histry_test\n                jobAttemptId: 0\n                taskRoleName: taskrole\n                attempts:\n                  - attemptId: 0\n                    attemptState: FAILED\n                    currentAttemptCreatedTime: 1602480558000\n                    currentAttemptLaunchedTime: 1602480558000\n                    currentAttemptCompletedTime: 1602480570000\n                    containerId: a9f9f1f2-5e43-4423-88c3-022433b8cd7c\n                    containerIp: 10.151.40.34\n                    containerNodeName: node16\n                    containerPorts:\n                      ssh: 37508\n                      http: 24661\n                    containerGpus: null\n                    containerLog: /api/v2/jobs/admin~admin_444da84f/attempts/0/taskRoles/taskrole/taskIndex/0/attempts/2/logs\n                    containerExitCode: -220\n                    containerExitSpec:\n                      code: -220\n                      phrase: FrameworkAttemptCompletion\n                      issuer: PAI_FC\n                      causer: USER_STOP\n                      type: USER_STOP\n                      stage: UNKNOWN\n                      behavior: PERMANENT\n                      reaction: NEVER_RETRY\n                      reason: Stop to complete current job attempt\n                      repro:\n                        - Stop a job with long running container\n                    containerExitDiagnostics: Stop to complete current FrameworkAttempt\n                  - attemptId: 1\n                    attemptState: FAILED\n                    currentAttemptCreatedTime: 1602480591000\n                    currentAttemptLaunchedTime: 1602480591000\n                    currentAttemptCompletedTime: 1602480603000\n                    containerId: a9f9f1f2-5e43-4423-88c3-022433b8cd7c\n                    containerIp: 10.151.40.34\n                    containerNodeName: node16\n                    containerPorts:\n                      ssh: 37508\n                      http: 24661\n                    containerGpus: null\n                    containerLog: /api/v2/jobs/admin~admin_444da84f/attempts/0/taskRoles/taskrole/taskIndex/0/attempts/2/logs\n                    containerExitCode: -220\n                    containerExitSpec:\n                      code: -220\n                      phrase: FrameworkAttemptCompletion\n                      issuer: PAI_FC\n                      causer: USER_STOP\n                      type: USER_STOP\n                      stage: UNKNOWN\n                      behavior: PERMANENT\n                      reaction: NEVER_RETRY\n                      reason: Stop to complete current job attempt\n                      repro:\n                        - Stop a job with long running container\n                    containerExitDiagnostics: Stop to complete current FrameworkAttempt\n        \"404\":\n          $ref: \"#/components/responses/NoTaskError\"\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n  \"/api/v2/jobs/{user}~{job}/attempts/{jobAttemptId}/taskRoles/{taskRoleName}/taskIndex/{taskIndex}/attempts/{taskAttemptId}/logs\":\n    get:\n      tags:\n        - job\n      summary: Get task log list.\n      description: Get task log list.\n      operationId: getTaskLogs\n      security:\n        - bearerAuth: []\n      parameters:\n      - $ref: \"#/components/parameters/user\"\n      - $ref: \"#/components/parameters/job\"\n      - $ref: \"#/components/parameters/jobAttemptId\"\n      - $ref: \"#/components/parameters/taskRoleName\"\n      - $ref: \"#/components/parameters/taskIndex\"\n      - $ref: \"#/components/parameters/taskAttemptId\"\n      - name: tailMode\n        in: query\n        description: getting log content via tail mode. Could be \"true\" or \"false\"\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PodLogInfo\"\n              example:\n                locations:\n                - name: stderr\n                  uri: \"https://mater_ip/log-manager/node_ip/api/v1/logs/user.pai.stderr?username=user\u0026framework-name=34775529adebae576fbc0bf48d835386\u0026pod-uid=07cdd036-1a7c-11eb-830b-000d3ab25bb6\u0026taskrole=taskrole\u0026token=token\"\n                - name: all\n                  uri:  \"https://mater_ip/log-manager/node_ip/api/v1/logs/user.pai.all?username=user\u0026framework-name=34775529adebae576fbc0bf48d835386\u0026pod-uid=07cdd036-1a7c-11eb-830b-000d3ab25bb6\u0026taskrole=taskrole\u0026token=token\"\n                - name: stdout\n                  uri: \"https://mater_ip/log-manager/node_ip/api/v1/logs/user.pai.stdout?username=user\u0026framework-name=34775529adebae576fbc0bf48d835386\u0026pod-uid=07cdd036-1a7c-11eb-830b-000d3ab25bb6\u0026taskrole=taskrole\u0026token=token\"\n        \"404\":\n          $ref: \"#/components/responses/NoTaskLogError\"\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n  /api/v2/kubernetes/nodes:\n    get:\n      tags:\n        - kubernetes\n      summary: Get kubernetes node list.\n      description: Get kubernetes node list. Need administrator permission.\n      operationId: getK8sNodes\n      security:\n        - bearerAuth: []\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              example:\n                - Please refer to Kubernetes API doc\n                - \u003e-\n                  https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.17/#list-node-v1-core\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedUserError\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenUserError\"\n  /api/v2/alerts:\n    get:\n      tags:\n        - alert\n      summary: Get related alerts.\n      description: Get related alerts. For admin users, return all the firing alerts; Return only the alerts related to the user's jobs for normal users.\n      operationId: getAlerts\n      security:\n        - bearerAuth: []\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              example:\n                - Please refer to Prometheus Alerts API:\n                - \u003e-\n                  https://prometheus.io/docs/prometheus/latest/querying/api/#alerts\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedUserError\"\n        \"500\":\n          $ref: \"#/components/responses/UnknownError\"\n  /api/v2/kubernetes/pods:\n    get:\n      tags:\n        - kubernetes\n      summary: Get kubernetes pod list.\n      description: Get kubernetes pod list. Need administrator permission.\n      operationId: getK8sPods\n      parameters:\n        - name: namespace\n          in: query\n          description: filter pods with namespace\n          schema:\n            type: string\n      security:\n        - bearerAuth: []\n      responses:\n        \"200\":\n          description: Succeeded\n          content:\n            application/json:\n              example:\n                - Please refer to Kubernetes API doc\n                - \u003e-\n                  https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.17/#list-all-namespaces-pod-v1-core\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedUserError\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenUserError\"\ncomponents:\n  parameters:\n    token:\n      name: token\n      in: path\n      description: token\n      required: true\n      schema:\n        type: string\n      example: test-token\n    user:\n      name: user\n      in: path\n      description: user name\n      required: true\n      schema:\n        type: string\n      example: test-user\n    group:\n      name: group\n      in: path\n      description: group name\n      required: true\n      schema:\n        type: string\n      example: test-group\n    vc:\n      name: vc\n      in: path\n      description: virtual cluster name\n      required: true\n      schema:\n        type: string\n      example: test-vc\n    job:\n      name: job\n      in: path\n      description: job name\n      required: true\n      schema:\n        type: string\n    framework:\n      name: framework\n      in: path\n      description: \"framework name defined by {user}~{job}\"\n      required: true\n      schema:\n        type: string\n    storage:\n      name: storage\n      in: path\n      description: storage name\n      required: true\n      schema:\n        type: string\n    attemptIndex:\n      name: attemptIndex\n      in: path\n      description: attempt index\n      required: true\n      schema:\n        type: string\n    jobAttemptId:\n      name: jobAttemptId\n      in: path\n      description: job attempt id\n      required: true\n      schema:\n        type: string\n    taskRoleName:\n      name: taskRoleName\n      in: path\n      description: task role name\n      required: true\n      schema:\n        type: string\n    taskIndex:\n      name: taskIndex\n      in: path\n      description: task index\n      required: true\n      schema:\n        type: string\n    taskAttemptId:\n      name: taskAttemptId\n      in: path\n      description: task attempt id\n      required: true\n      schema:\n        type: string\n  schemas:\n    Response:\n      type: object\n      properties:\n        code:\n          type: string\n          enum:\n            - BadConfigurationError\n            - ConflictJobError\n            - ConflictUserError\n            - ConflictVcError\n            - ForbiddenUserError\n            - ForbiddenKeyError\n            - IncorrectPasswordError\n            - InvalidParametersError\n            - NoApiError\n            - NoJobError\n            - NoJobConfigError\n            - NoJobSshInfoError\n            - NoUserError\n            - NoGroupError\n            - NoVirtualClusterError\n            - ReadOnlyJobError\n            - RemoveAdminError\n            - ReadOnlyVcError\n            - RemoveRunningVcError\n            - UnauthorizedUserError\n            - NoEnoughQuotaError\n            - NotImplementedError\n            - UnknownError\n        message:\n          type: string\n      required:\n        - message\n    JobProtocol:\n      $ref: \"https://raw.githubusercontent.com/microsoft/openpai-protocol/master/schemas/v2/schema.yaml#/components/schemas/JobProtocol\"\n    JobSummaryWithTotalCount:\n      type: object\n      properties:\n        totalCount:\n          type: number\n          description: total count of jobs with given filters\n        data:\n          $ref: \"#/components/schemas/JobSummary\"\n      required:\n        - totalCount\n        - data\n    JobEventsWithTotalCount:\n      type: object\n      properties:\n        totalCount:\n          type: number\n          description: total count of events with given filters\n        data:\n          $ref: \"#/components/schemas/JobEvents\"\n      required:\n        - totalCount\n        - data\n    JobEvents:\n      type: array\n      description: job event list\n      items:\n        type: object\n        properties:\n          uid:\n            type: string\n            description: event uid\n          frameworkName:\n            type: string\n            description: related framework name\n          podUid:\n            type: string\n            description: pod uid of the event\n          taskroleName:\n            type: string\n            description: taskrole name of the event\n          taskName:\n            type: string\n            description: task name of the event\n          taskIndex:\n            type: integer\n            description: task index of the event\n          type:\n            type: string\n            description: type of the event\n            enum:\n              - Normal\n              - Warning\n          reason:\n            type: string\n            description: event reason\n          message:\n            type: string\n            description: event message\n          firstTimestamp:\n            type: string\n            description: firstTimestamp of the event\n          lastTimestamp:\n            type: string\n            description: lastTimestamp of the event\n          count:\n            type: integer\n            description: event count between firstTimestamp and lastTimestamp\n          sourceComponent:\n            type: string\n            description: source component of the event\n          sourceHost:\n            type: string\n            nullable: true\n            description: source host of the event\n        required:\n          - uid\n          - frameworkName\n          - podUid\n          - taskroleName\n          - taskName\n          - taskIndex\n          - type\n          - reason\n          - message\n          - firstTimestamp\n          - lastTimestamp\n          - count\n          - sourceComponent\n          - sourceHost\n    JobSummary:\n      type: array\n      description: job summary list\n      items:\n        type: object\n        properties:\n          name:\n            type: string\n            description: job name\n          username:\n            type: string\n            description: user name or \"unknown\"\n          state:\n            type: string\n            description: general job state\n            enum:\n              - WAITING\n              - RUNNING\n              - STOPPING\n              - STOPPED\n              - SUCCEEDED\n              - FAILED\n              - UNKNOWN\n          subState:\n            type: string\n            description: job state in framework controller\n            enum:\n              - AttemptCreationPending\n              - AttemptCreationRequested\n              - AttemptPreparing\n              - AttemptRunning\n              - AttemptDeletionPending\n              - AttemptDeletionRequested\n              - AttemptDeleting\n              - AttemptCompleted\n              - Completed\n          executionType:\n            type: string\n            description: start or stop\n            enum:\n              - START\n              - STOP\n          tags:\n            type: array\n            description: tags\n            items:\n              type: string\n          retries:\n            type: integer\n            description: job retried times\n          retryDetails:\n            type: object\n            properties:\n              user:\n                type: integer\n              platform:\n                type: integer\n              resource:\n                type: integer\n          retryDelayTime:\n            type: integer\n            nullable: true\n            description: retry delay time\n          submissionTime:\n            type: integer\n            description: job submitted time, in number of milliseconds since the Unix Epoch.\n          createdTime:\n            type: integer\n            nullable: true\n            description: job created time, in number of milliseconds since the Unix Epoch.\n          launchedTime:\n            type: integer\n            nullable: true\n            description: job launched time, in number of milliseconds since the Unix Epoch.\n          completedTime:\n            type: integer\n            nullable: true\n            description: job completed time, in number of milliseconds since the Unix Epoch.\n          appExitCode:\n            type: integer\n            nullable: true\n            description: job exit code\n          virtualCluster:\n            type: string\n            description: virtual cluster to which the job submitted, or \"unknown\"\n          totalGpuNumber:\n            type: integer\n            description: total gpu number used in the job\n          totalTaskNumber:\n            type: integer\n            description: total task number used in the job\n          totalTaskRoleNumber:\n            type: integer\n            description: total task role number used in the job\n          debugId:\n            type: string\n            description: md5 hash name for the job in framework controller, used for debug purpose\n          jobPriority:\n            type: string\n            nullable: true\n            description: job priority\n        required:\n          - name\n          - username\n          - virtualCluster\n          - state\n          - subState\n          - executionType\n          - retries\n          - createdTime\n          - completedTime\n          - appExitCode\n    JobDetail:\n      type: object\n      description: job details\n      properties:\n        name:\n          type: string\n          description: job name\n        tags:\n          type: array\n          description: tags\n          items:\n            type: string\n        jobStatus:\n          type: object\n          description: job status\n          properties:\n            username:\n              type: string\n              description: user name or \"unknown\"\n            state:\n              type: string\n              description: general job state\n              enum:\n                - WAITING\n                - RUNNING\n                - STOPPING\n                - STOPPED\n                - SUCCEEDED\n                - FAILED\n                - UNKNOWN\n            subState:\n              type: string\n              description: job state in framework controller\n              enum:\n                - AttemptCreationPending\n                - AttemptCreationRequested\n                - AttemptPreparing\n                - AttemptRunning\n                - AttemptDeletionPending\n                - AttemptDeletionRequested\n                - AttemptDeleting\n                - AttemptCompleted\n                - Completed\n            executionType:\n              type: string\n              description: start or stop\n              enum:\n                - START\n                - STOP\n            retries:\n              type: integer\n              description: job retried times\n            retryDetails:\n              type: object\n              properties:\n                user:\n                  type: integer\n                platform:\n                  type: integer\n                resource:\n                  type: integer\n            retryDelayTime:\n              type: integer\n              nullable: true\n              description: retry delay time\n            submissionTime:\n              type: integer\n              description: \u003e-\n                job submitted time, in number of milliseconds since the Unix\n                Epoch.\n            createdTime:\n              type: integer\n              nullable: true\n              description: \u003e-\n                job created time, in number of milliseconds since the Unix\n            launchedTime:\n              type: integer\n              nullable: true\n              description: \u003e-\n                job launched time, in number of milliseconds since the Unix\n                Epoch.\n            completedTime:\n              type: integer\n              nullable: true\n              description: \u003e-\n                job completed time, in number of milliseconds since the Unix\n                Epoch.\n            attemptId:\n              type: integer\n            attemptState:\n              type: string\n            appId:\n              type: string\n              nullable: true\n              description: unique id for the job\n            appCreatedTime:\n              type: integer\n              nullable: true\n              description: \u003e-\n                job created time for last attempt, in number of milliseconds\n                since the Unix Epoch.\n            appLaunchedTime:\n              type: integer\n              nullable: true\n              description: \u003e-\n                job launched time for last attempt, in number of milliseconds\n                since the Unix Epoch.\n            appCompletedTime:\n              type: integer\n              nullable: true\n              description: \u003e\n                job completed time for last attempt, in number of milliseconds\n                since the Unix Epoch.\n                To get durations for last attempt:\n                  wholeDuration = completedTime - createdTime;\n                  runningDuration = appCompletedTime - appLaunchedTime;\n                  waitingDuration = wholeDuration - runningDuration.\n                To get durations for all attempts:\n                  runningDuration = sum(appCompletedTime - appLaunchedTime) for all attempts.\n            appExitCode:\n              type: integer\n              nullable: true\n              description: job exit code\n            appExitSpec:\n              type: object\n              nullable: true\n              description: job exit spec\n              properties:\n                code:\n                  type: integer\n                phrase:\n                  type: string\n                issuer:\n                  type: string\n                causer:\n                  type: string\n                type:\n                  type: string\n                stage:\n                  type: string\n                behavior:\n                  type: string\n                reaction:\n                  type: string\n                reason:\n                  type: string\n                repro:\n                  type: array\n                  items:\n                    type: string\n                solution:\n                  type: array\n                  items:\n                    type: string\n            appExitDiagnostics:\n              type: string\n              nullable: true\n              description: job exit diagnostics\n            appExitMessages:\n              type: object\n              nullable: true\n              properties:\n                container:\n                  type: string\n                  nullable: true\n                runtime:\n                  type: string\n                  nullable: true\n                launcher:\n                  type: string\n                  nullable: true\n            appExitTriggerMessage:\n              type: string\n              nullable: true\n              description: job completion message\n            appExitTriggerTaskRoleName:\n              type: string\n              nullable: true\n              description: task role name which triggered job completion\n            appExitTriggerTaskIndex:\n              type: integer\n              nullable: true\n              description: task index which triggered job completion\n            appExitType:\n              type: string\n              nullable: true\n              description: job completion type\n            virtualCluster:\n              type: string\n              description: virtual cluster to which the job submitted, or \"unknown\"\n          required:\n            - username\n            - virtualCluster\n            - state\n            - subState\n            - executionType\n            - retries\n            - createdTime\n            - completedTime\n            - appCreatedTime\n            - appLaunchedTime\n            - appCompletedTime\n            - appExitCode\n        taskRoles:\n          type: object\n          additionalProperties:\n            type: object\n            description: task role status\n            properties:\n              taskRoleStatus:\n                type: object\n                properties:\n                  name:\n                    type: string\n                    description: task role name\n                required:\n                  - name\n              taskStatuses:\n                type: array\n                description: task statuses in the task role\n                items:\n                  type: object\n                  properties:\n                    taskIndex:\n                      type: integer\n                      description: task index\n                    taskUid:\n                      type: string\n                    taskState:\n                      type: string\n                      description: task state\n                      enum:\n                        - WAITING\n                        - RUNNING\n                        - STOPPING\n                        - STOPPED\n                        - SUCCEEDED\n                        - FAILED\n                        - UNKNOWN\n                    containerId:\n                      type: string\n                      nullable: true\n                      description: uid of the task container\n                    containerIp:\n                      type: string\n                      nullable: true\n                      description: ip of the task container\n                    containerNodeName:\n                      type: string\n                      nullable: true\n                      description: node name of task container\n                    containerPorts:\n                      type: object\n                      description: ports of the task container\n                    containerGpus:\n                      type: string\n                      nullable: true\n                      description: gpu of the task container\n                    containerLog:\n                      type: string\n                      description: log url of the task container\n                    containerExitCode:\n                      type: integer\n                      nullable: true\n                      description: exit code the task container\n                    containerExitSpec:\n                      type: object\n                      nullable: true\n                      description: container exit spec\n                      properties:\n                        code:\n                          type: integer\n                        phrase:\n                          type: string\n                        issuer:\n                          type: string\n                        causer:\n                          type: string\n                        type:\n                          type: string\n                        stage:\n                          type: string\n                        behavior:\n                          type: string\n                        reaction:\n                          type: string\n                        reason:\n                          type: string\n                        repro:\n                          type: array\n                          items:\n                            type: string\n                        solution:\n                          type: array\n                          items:\n                            type: string\n                    containerExitDiagnostics:\n                      type: string\n                      nullable: true\n                      description: container exit diagnostics\n                    retries:\n                      type: integer\n                    accountableRetries:\n                      type: integer\n                    createdTime:\n                      type: integer\n                      nullable: true\n                      description: \u003e-\n                        task created time, in number of milliseconds since the Unix\n                        Epoch.\n                    launchedTime:\n                      type: integer\n                      nullable: true\n                      description: \u003e-\n                        task launched time, in number of milliseconds since the Unix\n                        Epoch.\n                    completedTime:\n                      type: integer\n                      nullable: true\n                      description: \u003e-\n                        task completion time, in number of milliseconds since the Unix\n                        Epoch.\n                    attemptId:\n                      type: integer\n                    attemptState:\n                      type: string\n                    currentAttemptCreatedTime:\n                      type: integer\n                      nullable: true\n                      description: \u003e-\n                        the current attempt created time, in number of milliseconds since the Unix\n                        Epoch.\n                    currentAttemptLaunchedTime:\n                      type: integer\n                      nullable: true\n                      description: \u003e-\n                        the current attempt launched time, in number of milliseconds since the Unix\n                        Epoch.\n                    currentAttemptCompletedTime:\n                      type: integer\n                      nullable: true\n                      description: \u003e-\n                        the current attempt completion time, in number of milliseconds since the Unix\n                        Epoch.\n                    hived:\n                      type: object\n                      nullable: true\n            required:\n              - taskRoleStatus\n              - taskStatuses\n        debugId:\n          type: string\n          description: md5 hash name for the job in framework controller, used for debug purpose\n      required:\n        - name\n        - jobStatus\n        - taskRoles\n    VirtualCluster:\n      type: object\n      properties:\n        capacity:\n          type: number\n          description: capacity percentage this virtual cluster can use of entire cluster\n        usedCapacity:\n          type: number\n          description: used capacity percentage this virtual cluster can use of entire cluster\n        maxCapacity:\n          type: number\n          description: max capacity percentage this virtual cluster can use of entire cluster\n        dedicated:\n          type: boolean\n          description: dedicated virtual cluster or not\n        resourcesUsed:\n          type: object\n          description: used resources\n          properties:\n            cpu:\n              type: integer\n              description: used cpu number\n            vCores:\n              type: integer\n              description: same as cpu\n            memory:\n              type: integer\n              description: used memory in MB\n            gpu:\n              type: integer\n              description: used gpu number\n            GPUs:\n              type: integer\n              description: same as gpu\n        resourcesGuaranteed:\n          type: object\n          description: guaranteed resources, including used and free\n          properties:\n            cpu:\n              type: integer\n              description: guaranteed cpu number\n            vCores:\n              type: integer\n              description: same as cpu\n            memory:\n              type: integer\n              description: guaranteed memory in MB\n            gpu:\n              type: integer\n              description: guaranteed gpu number\n            GPUs:\n              type: integer\n              description: same as gpu\n        resourcesTotal:\n          type: object\n          description: total resources, including guaranteed and bad\n          properties:\n            cpu:\n              type: integer\n              description: total cpu number\n            vCores:\n              type: integer\n              description: same as cpu\n            memory:\n              type: integer\n              description: total memory in MB\n            gpu:\n              type: integer\n              description: total gpu number\n            GPUs:\n              type: integer\n              description: same as gpu\n      required:\n        - capacity\n        - usedCapacity\n        - maxCapacity\n        - resourcesUsed\n        - resourcesGuaranteed\n        - resourcesTotal\n    StorageSummary:\n      type: object\n      description: summary of configured PV storage\n      properties:\n        storages:\n          type: array\n          items:\n            type: object\n            description: summary of each storage\n            properties:\n              name:\n                type: string\n              share:\n                type: boolean\n              volumeName:\n                type: string\n              default:\n                type: boolean\n            required:\n              - name\n              - share\n              - volumeName\n              - default\n      required:\n        - storages\n    StorageDetail:\n      type: object\n      description: detail of configured PV storage\n      properties:\n        name:\n          type: string\n        share:\n          type: boolean\n        volumeName:\n          type: string\n        type:\n          type: string\n          enum:\n            - nfs\n            - samba\n            - azureFile\n            - azureBlob\n            - other\n            - unknown\n        data:\n          anyOf:\n            - type: object\n              description: nfs type\n              properties:\n                server:\n                  type: string\n                path:\n                  type: string\n              required:\n                - server\n                - path\n            - type: object\n              description: samba type\n              properties:\n                address:\n                  type: string\n                username:\n                  type: string\n                password:\n                  type: string\n              required:\n                - address\n            - type: object\n              description: azureFile type\n              properties:\n                shareName:\n                  type: string\n                accountName:\n                  type: string\n                accountKey:\n                  type: string\n              required:\n                - shareName\n            - type: object\n              description: azureBlob type\n              properties:\n                containerName:\n                  type: string\n                accountName:\n                  type: string\n                accountKey:\n                  type: string\n                accountSASToken:\n                  type: string\n              required:\n                - containerName\n            - type: object\n              description: other/unknown type\n              properties: {}\n        readOnly:\n          type: boolean\n        secretName:\n          type: string\n        mountOptions:\n          type: array\n          items:\n            type: string\n      required:\n        - name\n        - share\n        - volumeName\n        - type\n        - data\n    JobAttempt:\n      type: object\n      description: job attempt\n      properties:\n        jobName:\n          type: string\n        frameworkName:\n          type: string\n        uid:\n          type: string\n        userName:\n          type: string\n        state:\n          type: string\n        originState:\n          type: string\n          nullable: true\n        attemptIndex:\n          type: integer\n          nullable: true\n        jobStartedTime:\n          type: integer\n          nullable: true\n        attemptStartedTime:\n          type: integer\n          nullable: true\n        attemptCompletedTime:\n          type: integer\n          nullable: true\n        exitCode:\n          type: integer\n          nullable: true\n        exitPhrase:\n          type: string\n          nullable: true\n        exitType:\n          type: string\n          nullable: true\n        exitDiagnostics:\n          type: object\n          nullable: true\n          properties:\n            diagnosticsSummary:\n              type: string\n            runtime:\n              type: object\n              nullable: true\n              properties:\n                exitCode:\n                  type: integer\n                  nullable: true\n                originUserExitCode:\n                  type: integer\n                  nullable: true\n                errorLogs:\n                  type: object\n                  nullable: true\n                  properties:\n                    user:\n                      type: string\n                    platform:\n                      type: string\n                name:\n                  type: string\n            launcher:\n              type: string\n        appExitTriggerMessage:\n          type: string\n          nullable: true\n        appExitTriggerTaskRoleName:\n          type: string\n          nullable: true\n        appExitTriggerTaskIndex:\n          type: integer\n          nullable: true\n        appExitSpec:\n          type: object\n          nullable: true\n          properties:\n            code:\n              type: integer\n            phrase:\n              type: string\n            issuer:\n              type: string\n            causer:\n              type: string\n            type:\n              type: string\n            stage:\n              type: string\n            behavior:\n              type: string\n            reaction:\n              type: string\n            reason:\n              type: string\n            repro:\n              type: array\n              items:\n                type: string\n            solution:\n              type: array\n              items:\n                type: string\n        appExitDiagnostics:\n          type: string\n          nullable: true\n        appExitMessages:\n          type: object\n          nullable: true\n          properties:\n            container:\n              type: string\n              nullable: true\n            runtime:\n              type: object\n              nullable: true\n              properties:\n                exitCode:\n                  type: integer\n                  nullable: true\n                originUserExitCode:\n                  type: integer\n                  nullable: true\n                errorLogs:\n                  type: object\n                  nullable: true\n                  properties:\n                    user:\n                      type: string\n                    platform:\n                      type: string\n                name:\n                  type: string\n            launcher:\n              type: string\n              nullable: true\n        totalGpuNumber:\n          type: integer\n        totalTasknumber:\n          type: integer\n        totalTaskRoleNumber:\n          type: integer\n        taskRoles:\n          type: object\n          properties:\n            taskrole:\n              type: object\n              properties:\n                taskRoleStatus:\n                  type: object\n                  properties:\n                    name:\n                      type: string\n                  required:\n                    - name\n                taskStatuses:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      taskIndex:\n                        type: integer\n                      taskState:\n                        type: string\n                        enum:\n                          - WAITING\n                          - RUNNING\n                          - STOPPING\n                          - STOPPED\n                          - SUCCEEDED\n                          - FAILED\n                          - UNKNOWN\n                      containerId:\n                        type: string\n                        nullable: true\n                      containerIp:\n                        type: string\n                      containerGpus:\n                        type: string\n                        nullable: true\n                      containerLog:\n                        type: string\n                      containerExitCode:\n                        type: integer\n                        nullable: true\n              required:\n                - taskRoleStatus\n                - taskStatuses\n        isLatest:\n          type: boolean\n    TaskStatus:\n      type: object\n      description: task status\n      properties:\n        taskIndex:\n          type: integer\n          description: task index\n        taskUid:\n          type: string\n        taskState:\n          type: string\n          description: task state\n          enum:\n            - WAITING\n            - RUNNING\n            - STOPPING\n            - STOPPED\n            - SUCCEEDED\n            - FAILED\n            - UNKNOWN\n        retries:\n          type: integer\n        accountableRetries:\n          type: integer\n        createdTime:\n          type: integer\n          nullable: true\n          description: \u003e-\n            task created time, in number of milliseconds since the Unix Epoch.\n        launchedTime:\n          type: integer\n          nullable: true\n          description: \u003e-\n            task launched time, in number of milliseconds since the Unix Epoch.\n        completedTime:\n          type: integer\n          nullable: true\n          description: \u003e-\n            task completion time, in number of milliseconds since the Unix Epoch.\n        username:\n          type: string\n        jobName:\n          type: string\n        jobAttemptId:\n          type: integer\n        taskRoleName:\n          type: string\n        attempts:\n          type: array\n          items:\n            type: object\n            description: task attempt specific information\n            properties:\n              attemptId:\n                type: integer\n              attemptState:\n                type: string\n              currentAttemptCreatedTime:\n                type: integer\n                nullable: true\n                description: \u003e-\n                  the current attempt created time, in number of milliseconds since the Unix\n                  Epoch.\n              currentAttemptLaunchedTime:\n                type: integer\n                nullable: true\n                description: \u003e-\n                  the current attempt launched time, in number of milliseconds since the Unix\n                  Epoch.\n              currentAttemptCompletedTime:\n                type: integer\n                nullable: true\n                description: \u003e-\n                  the current attempt completion time, in number of milliseconds since the Unix\n                  Epoch.\n              containerId:\n                type: string\n                nullable: true\n                description: uid of the task container\n              containerIp:\n                type: string\n                nullable: true\n                description: ip of the task container\n              containerNodeName:\n                type: string\n                nullable: true\n                description: node name of task container\n              containerPorts:\n                type: object\n                description: ports of the task container\n              containerGpus:\n                type: string\n                nullable: true\n                description: gpu of the task container\n              containerLog:\n                type: string\n                description: log url of the task container\n              containerExitCode:\n                type: integer\n                nullable: true\n                description: exit code the task container\n              containerExitSpec:\n                type: object\n                nullable: true\n                description: container exit spec\n                properties:\n                  code:\n                    type: integer\n                  phrase:\n                    type: string\n                  issuer:\n                    type: string\n                  causer:\n                    type: string\n                  type:\n                    type: string\n                  stage:\n                    type: string\n                  behavior:\n                    type: string\n                  reaction:\n                    type: string\n                  reason:\n                    type: string\n                  repro:\n                    type: array\n                    items:\n                      type: string\n                  solution:\n                    type: array\n                    items:\n                      type: string\n              containerExitDiagnostics:\n                type: string\n                nullable: true\n                description: container exit diagnostics\n              hived:\n                type: object\n                nullable: true\n                properties:\n                  affinityGroupName:\n                    type: string\n                    nullable: true\n                  lazyPreempted:\n                    type: object\n                    nullable: true\n                  lazyPreemptionStatus:\n                    type: object\n                    nullable: true\n    UserInfo:\n      type: object\n      properties:\n        username:\n          type: string\n          description: user name\n        admin:\n          type: boolean\n          description: Admin or not.\n        virtualCluster:\n          type: array\n          description: The list of virtualCluster which the user can access.\n          items:\n            type: string\n            description: virtual cluster name.\n        storageConfig:\n          type: array\n          description: storageconfig string arry\n          items:\n            type: string\n        email:\n          type: string\n          description: email address\n        extension:\n          type: object\n          description: extension field.\n      required:\n        - username\n        - admin\n        - virtualCluster\n        - storageConfig\n        - email\n        - extension\n    PodLogInfo:\n      type: object\n      properties:\n        locations:\n          type: array\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n                description: log name.\n              uri:\n                type: string\n                description: log content lnk.\n  responses:\n    InvalidParametersError:\n      description: InvalidParametersError\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Response\"\n          examples:\n            InvalidParametersError:\n              value:\n                code: InvalidParametersError\n                message: Invalid request parameters.\n    IncorrectPasswordError:\n      description: IncorrectPasswordError\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Response\"\n          examples:\n            IncorrectPasswordError:\n              value:\n                code: IncorrectPasswordError\n                message: Password is incorrect.\n    NoVirtualClusterError:\n      description: NoVirtualClusterError\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Response\"\n          examples:\n            NoVirtualClusterError:\n              value:\n                code: NoVirtualClusterError\n                message: \"Virtual cluster {vc} is not found.\"\n    NoGroupError:\n      description: NoGroupError\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Response\"\n          examples:\n            NoGroupError:\n              value:\n                code: NoGroupError\n                message: \"Group {groupname} is not found.\"\n    NoStorageError:\n      description: NoStorageError\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Response\"\n          examples:\n            NoVirtualClusterError:\n              value:\n                code: NoStorageError\n                message: \"Storage {storage} is not found.\"\n    UnauthorizedUserError:\n      description: UnauthorizedUserError\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Response\"\n          examples:\n            UnauthorizedUserError:\n              value:\n                code: UnauthorizedUserError\n                message: Guest is not allowed to do this operation.\n    ForbiddenUserError:\n      description: ForbiddenUserError\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Response\"\n          examples:\n            ForbiddenUserError:\n              value:\n                code: ForbiddenUserError\n                message: Non-admin is not allow to do this operation.\n            ForbiddenTokenError:\n              value:\n                code: ForbiddenUserError\n                message: Applications are not allowed to do this operation.\n    ForbiddenKeyError:\n      description: ForbiddenKeyError\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Response\"\n          examples:\n            ForbiddenKeyError:\n              value:\n                code: ForbiddenKeyError\n                message: Key empty is system reserved and should not be modified!\n    NoUserError:\n      description: NoUserError\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Response\"\n          examples:\n            NoUserError:\n              value:\n                code: NoUserError\n                message: \"User {user} is not found.\"\n    NoJobError:\n      description: NoJobError\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Response\"\n          examples:\n            NoJobError:\n              value:\n                code: NoJobError\n                message: \"Job {job} is not found.\"\n    NoTaskError:\n      description: NoTaskError\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Response\"\n          examples:\n            NoTaskError:\n              value:\n                code: NoTaskError\n                message: \"Task {task} is not found.\"\n    NoTagError:\n      description: NoTagError\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Response\"\n          examples:\n            NoTagError:\n              value:\n                code: NoTagError\n                message: \"Tag {tag} is not found for job {job} .\"\n    NoJobConfigError:\n      description: NoJobConfigError\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Response\"\n          examples:\n            NoJobConfigError:\n              value:\n                code: NoJobConfigError\n                message: \"Config of job {job} is not found.\"\n    NoJobSshInfoError:\n      description: NoJobSshInfoError\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Response\"\n          examples:\n            NoJobSshInfoError:\n              value:\n                code: NoJobSshInfoError\n                message: \"SSH info of job {job} is not found.\"\n    NoTaskLogError:\n      description: NoTaskLogError\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Response\"\n          examples:\n            NoJobSshInfoError:\n              value:\n                code: NoTaskLogError\n                message: \"Log of task is not found.\"\n    ConflictUserError:\n      description: ConflictUserError\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Response\"\n          examples:\n            ConflictUserError:\n              value:\n                code: ConflictUserError\n                message: \"User name {user} already exists.\"\n    ConflictJobError:\n      description: ConflictJobError\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Response\"\n          examples:\n            ConflictJobError:\n              value:\n                code: ConflictJobError\n                message: \"Job name {job} already exists.\"\n    UnknownError:\n      description: UnknownError\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Response\"\n          examples:\n            UnknownError:\n              value:\n                code: UnknownError\n                message: Internal error message.\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n"
		}
	},
	"Error": "parse: parse spec: paths: /api/v2/jobs/{user}~{job}/config: get: operation \"getJobConfig\": responses: 200: content: \"text/yaml\": schema: parse schema: reference \"#/components/schemas/JobProtocol\": parse schema: reference \"https://raw.githubusercontent.com/microsoft/openpai-protocol/master/schemas/v2/schema.yaml#/components/schemas/JobProtocol\": resolve reference \"https://raw.githubusercontent.com/microsoft/openpai-protocol/master/schemas/v2/schema.yaml#/components/schemas/JobProtocol\": invalid schema reference \"https://raw.githubusercontent.com/microsoft/openpai-protocol/master/schemas/v2/schema.yaml#/components/schemas/JobProtocol\""
}