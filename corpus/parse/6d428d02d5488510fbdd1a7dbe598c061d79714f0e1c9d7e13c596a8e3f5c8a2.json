{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/amazonaws.com/sns/2010-03-31/openapi.yaml",
			"byteSize": 309206,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2010-03-31'\n  x-release: v4\n  title: Amazon Simple Notification Service\n  description: '<fullname>Amazon Simple Notification Service</fullname> <p>Amazon Simple Notification Service (Amazon SNS) is a web service that enables you to build distributed web-enabled applications. Applications can use Amazon SNS to easily push real-time notification messages to interested subscribers over multiple delivery protocols. For more information about this product see the <a href=\"http://aws.amazon.com/sns/\">Amazon SNS product page</a>. For detailed information about Amazon SNS features and their associated API calls, see the <a href=\"https://docs.aws.amazon.com/sns/latest/dg/\">Amazon SNS Developer Guide</a>. </p> <p>For information on the permissions you need to use this API, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-authentication-and-access-control.html\">Identity and access management in Amazon SNS</a> in the <i>Amazon SNS Developer Guide.</i> </p> <p>We also provide SDKs that enable you to access Amazon SNS from your preferred programming language. The SDKs contain functionality that automatically takes care of tasks such as: cryptographically signing your service requests, retrying requests, and handling error responses. For a list of available SDKs, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>. </p>'\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: sns\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sns-2010-03-31.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/sns/'\nservers:\n  - url: 'http://sns.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Amazon SNS multi-region endpoint\n  - url: 'https://sns.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Amazon SNS multi-region endpoint\n  - url: 'http://sns.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon SNS endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://sns.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon SNS endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  /#Action=AddPermission:\n    get:\n      x-aws-operation-name: AddPermission\n      operationId: GET_AddPermission\n      description: 'Adds a statement to a topic''s access control policy, granting access for the specified accounts to the specified actions.'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '483':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n      parameters:\n        - name: TopicArn\n          in: query\n          required: true\n          description: The ARN of the topic whose access control policy you wish to modify.\n          schema:\n            type: string\n        - name: Label\n          in: query\n          required: true\n          description: A unique identifier for the new policy statement.\n          schema:\n            type: string\n        - name: AWSAccountId\n          in: query\n          required: true\n          description: 'The account IDs of the users (principals) who will be given access to the specified actions. The users must have account, but do not need to be signed up for this service.'\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/delegate'\n        - name: ActionName\n          in: query\n          required: true\n          description: '<p>The action you want to allow for the specified principal(s).</p> <p>Valid values: Any Amazon SNS action name, for example <code>Publish</code>.</p>'\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/action'\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - AddPermission\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: AddPermission\n      operationId: POST_AddPermission\n      description: 'Adds a statement to a topic''s access control policy, granting access for the specified accounts to the specified actions.'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '483':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/AddPermissionInput'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - AddPermission\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=CheckIfPhoneNumberIsOptedOut:\n    get:\n      x-aws-operation-name: CheckIfPhoneNumberIsOptedOut\n      operationId: GET_CheckIfPhoneNumberIsOptedOut\n      description: '<p>Accepts a phone number and indicates whether the phone holder has opted out of receiving SMS messages from your account. You cannot send SMS messages to a number that is opted out.</p> <p>To resume sending messages, you can opt in the number by using the <code>OptInPhoneNumber</code> action.</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CheckIfPhoneNumberIsOptedOutResponse'\n        '480':\n          description: ThrottledException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ThrottledException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '483':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      parameters:\n        - name: phoneNumber\n          in: query\n          required: true\n          description: The phone number for which you want to check the opt out status.\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CheckIfPhoneNumberIsOptedOut\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: CheckIfPhoneNumberIsOptedOut\n      operationId: POST_CheckIfPhoneNumberIsOptedOut\n      description: '<p>Accepts a phone number and indicates whether the phone holder has opted out of receiving SMS messages from your account. You cannot send SMS messages to a number that is opted out.</p> <p>To resume sending messages, you can opt in the number by using the <code>OptInPhoneNumber</code> action.</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CheckIfPhoneNumberIsOptedOutResponse'\n        '480':\n          description: ThrottledException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ThrottledException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '483':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/CheckIfPhoneNumberIsOptedOutInput'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CheckIfPhoneNumberIsOptedOut\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=ConfirmSubscription:\n    get:\n      x-aws-operation-name: ConfirmSubscription\n      operationId: GET_ConfirmSubscription\n      description: 'Verifies an endpoint owner''s intent to receive messages by validating the token sent to the endpoint by an earlier <code>Subscribe</code> action. If the token is valid, the action creates a new subscription and returns its Amazon Resource Name (ARN). This call requires an AWS signature only when the <code>AuthenticateOnUnsubscribe</code> flag is set to \"true\".'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ConfirmSubscriptionResponse'\n        '480':\n          description: SubscriptionLimitExceededException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SubscriptionLimitExceededException'\n        '481':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '482':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '483':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '484':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '485':\n          description: FilterPolicyLimitExceededException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/FilterPolicyLimitExceededException'\n      parameters:\n        - name: TopicArn\n          in: query\n          required: true\n          description: The ARN of the topic for which you wish to confirm a subscription.\n          schema:\n            type: string\n        - name: Token\n          in: query\n          required: true\n          description: Short-lived token sent to an endpoint during the <code>Subscribe</code> action.\n          schema:\n            type: string\n        - name: AuthenticateOnUnsubscribe\n          in: query\n          required: false\n          description: 'Disallows unauthenticated unsubscribes of the subscription. If the value of this parameter is <code>true</code> and the request has an Amazon Web Services signature, then only the topic owner and the subscription owner can unsubscribe the endpoint. The unsubscribe action requires Amazon Web Services authentication. '\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ConfirmSubscription\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: ConfirmSubscription\n      operationId: POST_ConfirmSubscription\n      description: 'Verifies an endpoint owner''s intent to receive messages by validating the token sent to the endpoint by an earlier <code>Subscribe</code> action. If the token is valid, the action creates a new subscription and returns its Amazon Resource Name (ARN). This call requires an AWS signature only when the <code>AuthenticateOnUnsubscribe</code> flag is set to \"true\".'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ConfirmSubscriptionResponse'\n        '480':\n          description: SubscriptionLimitExceededException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SubscriptionLimitExceededException'\n        '481':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '482':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '483':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '484':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '485':\n          description: FilterPolicyLimitExceededException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/FilterPolicyLimitExceededException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/ConfirmSubscriptionInput'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ConfirmSubscription\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=CreatePlatformApplication:\n    get:\n      x-aws-operation-name: CreatePlatformApplication\n      operationId: GET_CreatePlatformApplication\n      description: '<p>Creates a platform application object for one of the supported push notification services, such as APNS and GCM (Firebase Cloud Messaging), to which devices and mobile apps may register. You must specify <code>PlatformPrincipal</code> and <code>PlatformCredential</code> attributes when using the <code>CreatePlatformApplication</code> action.</p> <p> <code>PlatformPrincipal</code> and <code>PlatformCredential</code> are received from the notification service.</p> <ul> <li> <p>For <code>ADM</code>, <code>PlatformPrincipal</code> is <code>client id</code> and <code>PlatformCredential</code> is <code>client secret</code>.</p> </li> <li> <p>For <code>Baidu</code>, <code>PlatformPrincipal</code> is <code>API key</code> and <code>PlatformCredential</code> is <code>secret key</code>.</p> </li> <li> <p>For <code>APNS</code> and <code>APNS_SANDBOX</code>, <code>PlatformPrincipal</code> is <code>SSL certificate</code> and <code>PlatformCredential</code> is <code>private key</code>.</p> </li> <li> <p>For <code>GCM</code> (Firebase Cloud Messaging), there is no <code>PlatformPrincipal</code> and the <code>PlatformCredential</code> is <code>API key</code>.</p> </li> <li> <p>For <code>MPNS</code>, <code>PlatformPrincipal</code> is <code>TLS certificate</code> and <code>PlatformCredential</code> is <code>private key</code>.</p> </li> <li> <p>For <code>WNS</code>, <code>PlatformPrincipal</code> is <code>Package Security Identifier</code> and <code>PlatformCredential</code> is <code>secret key</code>.</p> </li> </ul> <p>You can use the returned <code>PlatformApplicationArn</code> as an attribute for the <code>CreatePlatformEndpoint</code> action.</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CreatePlatformApplicationResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n      parameters:\n        - name: Name\n          in: query\n          required: true\n          description: 'Application names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, hyphens, and periods, and must be between 1 and 256 characters long.'\n          schema:\n            type: string\n        - name: Platform\n          in: query\n          required: true\n          description: 'The following platforms are supported: ADM (Amazon Device Messaging), APNS (Apple Push Notification Service), APNS_SANDBOX, and GCM (Firebase Cloud Messaging).'\n          schema:\n            type: string\n        - name: Attributes\n          in: query\n          required: true\n          description: 'For a list of attributes, see <a href=\"https://docs.aws.amazon.com/sns/latest/api/API_SetPlatformApplicationAttributes.html\">SetPlatformApplicationAttributes</a>.'\n          schema:\n            type: object\n            additionalProperties:\n              $ref: '#/components/schemas/String'\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CreatePlatformApplication\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: CreatePlatformApplication\n      operationId: POST_CreatePlatformApplication\n      description: '<p>Creates a platform application object for one of the supported push notification services, such as APNS and GCM (Firebase Cloud Messaging), to which devices and mobile apps may register. You must specify <code>PlatformPrincipal</code> and <code>PlatformCredential</code> attributes when using the <code>CreatePlatformApplication</code> action.</p> <p> <code>PlatformPrincipal</code> and <code>PlatformCredential</code> are received from the notification service.</p> <ul> <li> <p>For <code>ADM</code>, <code>PlatformPrincipal</code> is <code>client id</code> and <code>PlatformCredential</code> is <code>client secret</code>.</p> </li> <li> <p>For <code>Baidu</code>, <code>PlatformPrincipal</code> is <code>API key</code> and <code>PlatformCredential</code> is <code>secret key</code>.</p> </li> <li> <p>For <code>APNS</code> and <code>APNS_SANDBOX</code>, <code>PlatformPrincipal</code> is <code>SSL certificate</code> and <code>PlatformCredential</code> is <code>private key</code>.</p> </li> <li> <p>For <code>GCM</code> (Firebase Cloud Messaging), there is no <code>PlatformPrincipal</code> and the <code>PlatformCredential</code> is <code>API key</code>.</p> </li> <li> <p>For <code>MPNS</code>, <code>PlatformPrincipal</code> is <code>TLS certificate</code> and <code>PlatformCredential</code> is <code>private key</code>.</p> </li> <li> <p>For <code>WNS</code>, <code>PlatformPrincipal</code> is <code>Package Security Identifier</code> and <code>PlatformCredential</code> is <code>secret key</code>.</p> </li> </ul> <p>You can use the returned <code>PlatformApplicationArn</code> as an attribute for the <code>CreatePlatformEndpoint</code> action.</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CreatePlatformApplicationResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/CreatePlatformApplicationInput'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CreatePlatformApplication\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=CreatePlatformEndpoint:\n    get:\n      x-aws-operation-name: CreatePlatformEndpoint\n      operationId: GET_CreatePlatformEndpoint\n      description: '<p>Creates an endpoint for a device and mobile app on one of the supported push notification services, such as GCM (Firebase Cloud Messaging) and APNS. <code>CreatePlatformEndpoint</code> requires the <code>PlatformApplicationArn</code> that is returned from <code>CreatePlatformApplication</code>. You can use the returned <code>EndpointArn</code> to send a message to a mobile app or by the <code>Subscribe</code> action for subscription to a topic. The <code>CreatePlatformEndpoint</code> action is idempotent, so if the requester already owns an endpoint with the same device token and attributes, that endpoint''s ARN is returned without creating a new endpoint. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. </p> <p>When using <code>CreatePlatformEndpoint</code> with Baidu, two attributes must be provided: ChannelId and UserId. The token field must also contain the ChannelId. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePushBaiduEndpoint.html\">Creating an Amazon SNS Endpoint for Baidu</a>. </p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CreateEndpointResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '483':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n      parameters:\n        - name: PlatformApplicationArn\n          in: query\n          required: true\n          description: PlatformApplicationArn returned from CreatePlatformApplication is used to create a an endpoint.\n          schema:\n            type: string\n        - name: Token\n          in: query\n          required: true\n          description: 'Unique identifier created by the notification service for an app on a device. The specific name for Token will vary, depending on which notification service is being used. For example, when using APNS as the notification service, you need the device token. Alternatively, when using GCM (Firebase Cloud Messaging) or ADM, the device token equivalent is called the registration ID.'\n          schema:\n            type: string\n        - name: CustomUserData\n          in: query\n          required: false\n          description: Arbitrary user data to associate with the endpoint. Amazon SNS does not use this data. The data must be in UTF-8 format and less than 2KB.\n          schema:\n            type: string\n        - name: Attributes\n          in: query\n          required: false\n          description: 'For a list of attributes, see <a href=\"https://docs.aws.amazon.com/sns/latest/api/API_SetEndpointAttributes.html\">SetEndpointAttributes</a>.'\n          schema:\n            type: object\n            additionalProperties:\n              $ref: '#/components/schemas/String'\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CreatePlatformEndpoint\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: CreatePlatformEndpoint\n      operationId: POST_CreatePlatformEndpoint\n      description: '<p>Creates an endpoint for a device and mobile app on one of the supported push notification services, such as GCM (Firebase Cloud Messaging) and APNS. <code>CreatePlatformEndpoint</code> requires the <code>PlatformApplicationArn</code> that is returned from <code>CreatePlatformApplication</code>. You can use the returned <code>EndpointArn</code> to send a message to a mobile app or by the <code>Subscribe</code> action for subscription to a topic. The <code>CreatePlatformEndpoint</code> action is idempotent, so if the requester already owns an endpoint with the same device token and attributes, that endpoint''s ARN is returned without creating a new endpoint. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. </p> <p>When using <code>CreatePlatformEndpoint</code> with Baidu, two attributes must be provided: ChannelId and UserId. The token field must also contain the ChannelId. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePushBaiduEndpoint.html\">Creating an Amazon SNS Endpoint for Baidu</a>. </p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CreateEndpointResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '483':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/CreatePlatformEndpointInput'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CreatePlatformEndpoint\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=CreateSMSSandboxPhoneNumber:\n    get:\n      x-aws-operation-name: CreateSMSSandboxPhoneNumber\n      operationId: GET_CreateSMSSandboxPhoneNumber\n      description: '<p>Adds a destination phone number to an account in the SMS sandbox and sends a one-time password (OTP) to that phone number.</p> <p>When you start using Amazon SNS to send SMS messages, your account is in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment for you to try Amazon SNS features without risking your reputation as an SMS sender. While your account is in the SMS sandbox, you can use all of the features of Amazon SNS. However, you can send SMS messages only to verified destination phone numbers. For more information, including how to move out of the sandbox to send messages without restrictions, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CreateSMSSandboxPhoneNumberResult'\n        '480':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: OptedOutException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OptedOutException'\n        '484':\n          description: UserErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/UserErrorException'\n        '485':\n          description: ThrottledException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ThrottledException'\n      parameters:\n        - name: PhoneNumber\n          in: query\n          required: true\n          description: 'The destination phone number to verify. On verification, Amazon SNS adds this phone number to the list of verified phone numbers that you can send SMS messages to.'\n          schema:\n            type: string\n            pattern: '^(\\+[0-9]{8,}|[0-9]{0,9})$'\n            maxLength: 20\n        - name: LanguageCode\n          in: query\n          required: false\n          description: The language to use for sending the OTP. The default value is <code>en-US</code>.\n          schema:\n            type: string\n            enum:\n              - en-US\n              - en-GB\n              - es-419\n              - es-ES\n              - de-DE\n              - fr-CA\n              - fr-FR\n              - it-IT\n              - ja-JP\n              - pt-BR\n              - kr-KR\n              - zh-CN\n              - zh-TW\n            description: Supported language code for sending OTP message\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CreateSMSSandboxPhoneNumber\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: CreateSMSSandboxPhoneNumber\n      operationId: POST_CreateSMSSandboxPhoneNumber\n      description: '<p>Adds a destination phone number to an account in the SMS sandbox and sends a one-time password (OTP) to that phone number.</p> <p>When you start using Amazon SNS to send SMS messages, your account is in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment for you to try Amazon SNS features without risking your reputation as an SMS sender. While your account is in the SMS sandbox, you can use all of the features of Amazon SNS. However, you can send SMS messages only to verified destination phone numbers. For more information, including how to move out of the sandbox to send messages without restrictions, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CreateSMSSandboxPhoneNumberResult'\n        '480':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: OptedOutException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OptedOutException'\n        '484':\n          description: UserErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/UserErrorException'\n        '485':\n          description: ThrottledException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ThrottledException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/CreateSMSSandboxPhoneNumberInput'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CreateSMSSandboxPhoneNumber\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=CreateTopic:\n    get:\n      x-aws-operation-name: CreateTopic\n      operationId: GET_CreateTopic\n      description: 'Creates a topic to which notifications can be published. Users can create at most 100,000 standard topics (at most 1,000 FIFO topics). For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-create-topic.html\">Creating an Amazon SNS topic</a> in the <i>Amazon SNS Developer Guide</i>. This action is idempotent, so if the requester already owns a topic with the specified name, that topic''s ARN is returned without creating a new topic.'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CreateTopicResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: TopicLimitExceededException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TopicLimitExceededException'\n        '482':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '483':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '484':\n          description: InvalidSecurityException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidSecurityException'\n        '485':\n          description: TagLimitExceededException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TagLimitExceededException'\n        '486':\n          description: StaleTagException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/StaleTagException'\n        '487':\n          description: TagPolicyException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TagPolicyException'\n        '488':\n          description: ConcurrentAccessException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ConcurrentAccessException'\n      parameters:\n        - name: Name\n          in: query\n          required: true\n          description: '<p>The name of the topic you want to create.</p> <p>Constraints: Topic names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long.</p> <p>For a FIFO (first-in-first-out) topic, the name must end with the <code>.fifo</code> suffix. </p>'\n          schema:\n            type: string\n        - name: Attributes\n          in: query\n          required: false\n          description: '<p>A map of attributes with their corresponding values.</p> <p>The following lists the names, descriptions, and values of the special request parameters that the <code>CreateTopic</code> action uses:</p> <ul> <li> <p> <code>DeliveryPolicy</code> – The policy that defines how Amazon SNS retries failed deliveries to HTTP/S endpoints.</p> </li> <li> <p> <code>DisplayName</code> – The display name to use for a topic with SMS subscriptions.</p> </li> <li> <p> <code>FifoTopic</code> – Set to true to create a FIFO topic.</p> </li> <li> <p> <code>Policy</code> – The policy that defines who can access your topic. By default, only the topic owner can publish or subscribe to the topic.</p> </li> </ul> <p>The following attribute applies only to <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html\">server-side encryption</a>:</p> <ul> <li> <p> <code>KmsMasterKeyId</code> – The ID of an Amazon Web Services managed customer master key (CMK) for Amazon SNS or a custom CMK. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms\">Key Terms</a>. For more examples, see <a href=\"https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters\">KeyId</a> in the <i>Key Management Service API Reference</i>. </p> </li> </ul> <p>The following attributes apply only to <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-fifo-topics.html\">FIFO topics</a>:</p> <ul> <li> <p> <code>FifoTopic</code> – When this is set to <code>true</code>, a FIFO topic is created.</p> </li> <li> <p> <code>ContentBasedDeduplication</code> – Enables content-based deduplication for FIFO topics.</p> <ul> <li> <p>By default, <code>ContentBasedDeduplication</code> is set to <code>false</code>. If you create a FIFO topic and this attribute is <code>false</code>, you must specify a value for the <code>MessageDeduplicationId</code> parameter for the <a href=\"https://docs.aws.amazon.com/sns/latest/api/API_Publish.html\">Publish</a> action. </p> </li> <li> <p>When you set <code>ContentBasedDeduplication</code> to <code>true</code>, Amazon SNS uses a SHA-256 hash to generate the <code>MessageDeduplicationId</code> using the body of the message (but not the attributes of the message).</p> <p>(Optional) To override the generated value, you can specify a value for the <code>MessageDeduplicationId</code> parameter for the <code>Publish</code> action.</p> </li> </ul> </li> </ul>'\n          schema:\n            type: object\n            additionalProperties:\n              $ref: '#/components/schemas/attributeValue'\n        - name: Tags\n          in: query\n          required: false\n          description: '<p>The list of tags to add to a new topic.</p> <note> <p>To be able to tag a topic on creation, you must have the <code>sns:CreateTopic</code> and <code>sns:TagResource</code> permissions.</p> </note>'\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/Tag'\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CreateTopic\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: CreateTopic\n      operationId: POST_CreateTopic\n      description: 'Creates a topic to which notifications can be published. Users can create at most 100,000 standard topics (at most 1,000 FIFO topics). For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-create-topic.html\">Creating an Amazon SNS topic</a> in the <i>Amazon SNS Developer Guide</i>. This action is idempotent, so if the requester already owns a topic with the specified name, that topic''s ARN is returned without creating a new topic.'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CreateTopicResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: TopicLimitExceededException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TopicLimitExceededException'\n        '482':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '483':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '484':\n          description: InvalidSecurityException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidSecurityException'\n        '485':\n          description: TagLimitExceededException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TagLimitExceededException'\n        '486':\n          description: StaleTagException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/StaleTagException'\n        '487':\n          description: TagPolicyException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TagPolicyException'\n        '488':\n          description: ConcurrentAccessException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ConcurrentAccessException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/CreateTopicInput'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - CreateTopic\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=DeleteEndpoint:\n    get:\n      x-aws-operation-name: DeleteEndpoint\n      operationId: GET_DeleteEndpoint\n      description: '<p>Deletes the endpoint for a device and mobile app from Amazon SNS. This action is idempotent. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. </p> <p>When you delete an endpoint that is also subscribed to a topic, then you must also unsubscribe the endpoint from the topic.</p>'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n      parameters:\n        - name: EndpointArn\n          in: query\n          required: true\n          description: EndpointArn of endpoint to delete.\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DeleteEndpoint\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: DeleteEndpoint\n      operationId: POST_DeleteEndpoint\n      description: '<p>Deletes the endpoint for a device and mobile app from Amazon SNS. This action is idempotent. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. </p> <p>When you delete an endpoint that is also subscribed to a topic, then you must also unsubscribe the endpoint from the topic.</p>'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DeleteEndpointInput'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DeleteEndpoint\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=DeletePlatformApplication:\n    get:\n      x-aws-operation-name: DeletePlatformApplication\n      operationId: GET_DeletePlatformApplication\n      description: 'Deletes a platform application object for one of the supported push notification services, such as APNS and GCM (Firebase Cloud Messaging). For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. '\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n      parameters:\n        - name: PlatformApplicationArn\n          in: query\n          required: true\n          description: PlatformApplicationArn of platform application object to delete.\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DeletePlatformApplication\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: DeletePlatformApplication\n      operationId: POST_DeletePlatformApplication\n      description: 'Deletes a platform application object for one of the supported push notification services, such as APNS and GCM (Firebase Cloud Messaging). For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. '\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DeletePlatformApplicationInput'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DeletePlatformApplication\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=DeleteSMSSandboxPhoneNumber:\n    get:\n      x-aws-operation-name: DeleteSMSSandboxPhoneNumber\n      operationId: GET_DeleteSMSSandboxPhoneNumber\n      description: '<p>Deletes an account''s verified or pending phone number from the SMS sandbox.</p> <p>When you start using Amazon SNS to send SMS messages, your account is in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment for you to try Amazon SNS features without risking your reputation as an SMS sender. While your account is in the SMS sandbox, you can use all of the features of Amazon SNS. However, you can send SMS messages only to verified destination phone numbers. For more information, including how to move out of the sandbox to send messages without restrictions, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DeleteSMSSandboxPhoneNumberResult'\n        '480':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: UserErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/UserErrorException'\n        '485':\n          description: ThrottledException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ThrottledException'\n      parameters:\n        - name: PhoneNumber\n          in: query\n          required: true\n          description: The destination phone number to delete.\n          schema:\n            type: string\n            pattern: '^(\\+[0-9]{8,}|[0-9]{0,9})$'\n            maxLength: 20\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DeleteSMSSandboxPhoneNumber\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: DeleteSMSSandboxPhoneNumber\n      operationId: POST_DeleteSMSSandboxPhoneNumber\n      description: '<p>Deletes an account''s verified or pending phone number from the SMS sandbox.</p> <p>When you start using Amazon SNS to send SMS messages, your account is in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment for you to try Amazon SNS features without risking your reputation as an SMS sender. While your account is in the SMS sandbox, you can use all of the features of Amazon SNS. However, you can send SMS messages only to verified destination phone numbers. For more information, including how to move out of the sandbox to send messages without restrictions, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DeleteSMSSandboxPhoneNumberResult'\n        '480':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: UserErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/UserErrorException'\n        '485':\n          description: ThrottledException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ThrottledException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DeleteSMSSandboxPhoneNumberInput'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DeleteSMSSandboxPhoneNumber\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=DeleteTopic:\n    get:\n      x-aws-operation-name: DeleteTopic\n      operationId: GET_DeleteTopic\n      description: 'Deletes a topic and all its subscriptions. Deleting a topic might prevent some messages previously sent to the topic from being delivered to subscribers. This action is idempotent, so deleting a topic that does not exist does not result in an error.'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '483':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '484':\n          description: StaleTagException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/StaleTagException'\n        '485':\n          description: TagPolicyException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TagPolicyException'\n        '486':\n          description: ConcurrentAccessException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ConcurrentAccessException'\n      parameters:\n        - name: TopicArn\n          in: query\n          required: true\n          description: The ARN of the topic you want to delete.\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DeleteTopic\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: DeleteTopic\n      operationId: POST_DeleteTopic\n      description: 'Deletes a topic and all its subscriptions. Deleting a topic might prevent some messages previously sent to the topic from being delivered to subscribers. This action is idempotent, so deleting a topic that does not exist does not result in an error.'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '483':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '484':\n          description: StaleTagException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/StaleTagException'\n        '485':\n          description: TagPolicyException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TagPolicyException'\n        '486':\n          description: ConcurrentAccessException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ConcurrentAccessException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/DeleteTopicInput'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DeleteTopic\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=GetEndpointAttributes:\n    get:\n      x-aws-operation-name: GetEndpointAttributes\n      operationId: GET_GetEndpointAttributes\n      description: 'Retrieves the endpoint attributes for a device on one of the supported push notification services, such as GCM (Firebase Cloud Messaging) and APNS. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. '\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/GetEndpointAttributesResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '483':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n      parameters:\n        - name: EndpointArn\n          in: query\n          required: true\n          description: EndpointArn for GetEndpointAttributes input.\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - GetEndpointAttributes\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: GetEndpointAttributes\n      operationId: POST_GetEndpointAttributes\n      description: 'Retrieves the endpoint attributes for a device on one of the supported push notification services, such as GCM (Firebase Cloud Messaging) and APNS. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. '\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/GetEndpointAttributesResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '483':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/GetEndpointAttributesInput'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - GetEndpointAttributes\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=GetPlatformApplicationAttributes:\n    get:\n      x-aws-operation-name: GetPlatformApplicationAttributes\n      operationId: GET_GetPlatformApplicationAttributes\n      description: 'Retrieves the attributes of the platform application object for the supported push notification services, such as APNS and GCM (Firebase Cloud Messaging). For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. '\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/GetPlatformApplicationAttributesResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '483':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n      parameters:\n        - name: PlatformApplicationArn\n          in: query\n          required: true\n          description: PlatformApplicationArn for GetPlatformApplicationAttributesInput.\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - GetPlatformApplicationAttributes\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: GetPlatformApplicationAttributes\n      operationId: POST_GetPlatformApplicationAttributes\n      description: 'Retrieves the attributes of the platform application object for the supported push notification services, such as APNS and GCM (Firebase Cloud Messaging). For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. '\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/GetPlatformApplicationAttributesResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '483':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/GetPlatformApplicationAttributesInput'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - GetPlatformApplicationAttributes\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=GetSMSAttributes:\n    get:\n      x-aws-operation-name: GetSMSAttributes\n      operationId: GET_GetSMSAttributes\n      description: <p>Returns the settings for sending SMS messages from your account.</p> <p>These settings are set with the <code>SetSMSAttributes</code> action.</p>\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/GetSMSAttributesResponse'\n        '480':\n          description: ThrottledException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ThrottledException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '483':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      parameters:\n        - name: attributes\n          in: query\n          required: false\n          description: '<p>A list of the individual attribute names, such as <code>MonthlySpendLimit</code>, for which you want values.</p> <p>For all attribute names, see <a href=\"https://docs.aws.amazon.com/sns/latest/api/API_SetSMSAttributes.html\">SetSMSAttributes</a>.</p> <p>If you don''t use this parameter, Amazon SNS returns all SMS attributes.</p>'\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/String'\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - GetSMSAttributes\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: GetSMSAttributes\n      operationId: POST_GetSMSAttributes\n      description: <p>Returns the settings for sending SMS messages from your account.</p> <p>These settings are set with the <code>SetSMSAttributes</code> action.</p>\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/GetSMSAttributesResponse'\n        '480':\n          description: ThrottledException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ThrottledException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '483':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/GetSMSAttributesInput'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - GetSMSAttributes\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=GetSMSSandboxAccountStatus:\n    get:\n      x-aws-operation-name: GetSMSSandboxAccountStatus\n      operationId: GET_GetSMSSandboxAccountStatus\n      description: '<p>Retrieves the SMS sandbox status for the calling account in the target Region.</p> <p>When you start using Amazon SNS to send SMS messages, your account is in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment for you to try Amazon SNS features without risking your reputation as an SMS sender. While your account is in the SMS sandbox, you can use all of the features of Amazon SNS. However, you can send SMS messages only to verified destination phone numbers. For more information, including how to move out of the sandbox to send messages without restrictions, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/GetSMSSandboxAccountStatusResult'\n        '480':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: ThrottledException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ThrottledException'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - GetSMSSandboxAccountStatus\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: GetSMSSandboxAccountStatus\n      operationId: POST_GetSMSSandboxAccountStatus\n      description: '<p>Retrieves the SMS sandbox status for the calling account in the target Region.</p> <p>When you start using Amazon SNS to send SMS messages, your account is in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment for you to try Amazon SNS features without risking your reputation as an SMS sender. While your account is in the SMS sandbox, you can use all of the features of Amazon SNS. However, you can send SMS messages only to verified destination phone numbers. For more information, including how to move out of the sandbox to send messages without restrictions, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/GetSMSSandboxAccountStatusResult'\n        '480':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: ThrottledException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ThrottledException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/GetSMSSandboxAccountStatusInput'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - GetSMSSandboxAccountStatus\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=GetSubscriptionAttributes:\n    get:\n      x-aws-operation-name: GetSubscriptionAttributes\n      operationId: GET_GetSubscriptionAttributes\n      description: Returns all of the properties of a subscription.\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/GetSubscriptionAttributesResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '483':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n      parameters:\n        - name: SubscriptionArn\n          in: query\n          required: true\n          description: The ARN of the subscription whose properties you want to get.\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - GetSubscriptionAttributes\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: GetSubscriptionAttributes\n      operationId: POST_GetSubscriptionAttributes\n      description: Returns all of the properties of a subscription.\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/GetSubscriptionAttributesResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '483':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/GetSubscriptionAttributesInput'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - GetSubscriptionAttributes\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=GetTopicAttributes:\n    get:\n      x-aws-operation-name: GetTopicAttributes\n      operationId: GET_GetTopicAttributes\n      description: Returns all of the properties of a topic. Topic properties returned might differ based on the authorization of the user.\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/GetTopicAttributesResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '483':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '484':\n          description: InvalidSecurityException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidSecurityException'\n      parameters:\n        - name: TopicArn\n          in: query\n          required: true\n          description: The ARN of the topic whose properties you want to get.\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - GetTopicAttributes\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: GetTopicAttributes\n      operationId: POST_GetTopicAttributes\n      description: Returns all of the properties of a topic. Topic properties returned might differ based on the authorization of the user.\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/GetTopicAttributesResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '483':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '484':\n          description: InvalidSecurityException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidSecurityException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/GetTopicAttributesInput'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - GetTopicAttributes\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=ListEndpointsByPlatformApplication:\n    get:\n      x-aws-operation-name: ListEndpointsByPlatformApplication\n      operationId: GET_ListEndpointsByPlatformApplication\n      description: '<p>Lists the endpoints and endpoint attributes for devices in a supported push notification service, such as GCM (Firebase Cloud Messaging) and APNS. The results for <code>ListEndpointsByPlatformApplication</code> are paginated and return a limited list of endpoints, up to 100. If additional records are available after the first page results, then a NextToken string will be returned. To receive the next page, you call <code>ListEndpointsByPlatformApplication</code> again using the NextToken string received from the previous call. When there are no more records to return, NextToken will be null. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. </p> <p>This action is throttled at 30 transactions per second (TPS).</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ListEndpointsByPlatformApplicationResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '483':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n      parameters:\n        - name: PlatformApplicationArn\n          in: query\n          required: true\n          description: PlatformApplicationArn for ListEndpointsByPlatformApplicationInput action.\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          required: false\n          description: NextToken string is used when calling ListEndpointsByPlatformApplication action to retrieve additional records that are available after the first page results.\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ListEndpointsByPlatformApplication\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: ListEndpointsByPlatformApplication\n      operationId: POST_ListEndpointsByPlatformApplication\n      description: '<p>Lists the endpoints and endpoint attributes for devices in a supported push notification service, such as GCM (Firebase Cloud Messaging) and APNS. The results for <code>ListEndpointsByPlatformApplication</code> are paginated and return a limited list of endpoints, up to 100. If additional records are available after the first page results, then a NextToken string will be returned. To receive the next page, you call <code>ListEndpointsByPlatformApplication</code> again using the NextToken string received from the previous call. When there are no more records to return, NextToken will be null. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. </p> <p>This action is throttled at 30 transactions per second (TPS).</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ListEndpointsByPlatformApplicationResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '483':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/ListEndpointsByPlatformApplicationInput'\n      parameters:\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ListEndpointsByPlatformApplication\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=ListOriginationNumbers:\n    get:\n      x-aws-operation-name: ListOriginationNumbers\n      operationId: GET_ListOriginationNumbers\n      description: 'Lists the calling account''s dedicated origination numbers and their metadata. For more information about origination numbers, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/channels-sms-originating-identities-origination-numbers.html\">Origination numbers</a> in the <i>Amazon SNS Developer Guide</i>.'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ListOriginationNumbersResult'\n        '480':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '481':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '482':\n          description: ThrottledException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ThrottledException'\n        '483':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '484':\n          description: ValidationException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: NextToken\n          in: query\n          required: false\n          description: Token that the previous <code>ListOriginationNumbers</code> request returns.\n          schema:\n            type: string\n        - name: MaxResults\n          in: query\n          required: false\n          description: The maximum number of origination numbers to return.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 30\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ListOriginationNumbers\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: ListOriginationNumbers\n      operationId: POST_ListOriginationNumbers\n      description: 'Lists the calling account''s dedicated origination numbers and their metadata. For more information about origination numbers, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/channels-sms-originating-identities-origination-numbers.html\">Origination numbers</a> in the <i>Amazon SNS Developer Guide</i>.'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ListOriginationNumbersResult'\n        '480':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '481':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '482':\n          description: ThrottledException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ThrottledException'\n        '483':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '484':\n          description: ValidationException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/ListOriginationNumbersRequest'\n      parameters:\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ListOriginationNumbers\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=ListPhoneNumbersOptedOut:\n    get:\n      x-aws-operation-name: ListPhoneNumbersOptedOut\n      operationId: GET_ListPhoneNumbersOptedOut\n      description: '<p>Returns a list of phone numbers that are opted out, meaning you cannot send SMS messages to them.</p> <p>The results for <code>ListPhoneNumbersOptedOut</code> are paginated, and each page returns up to 100 phone numbers. If additional phone numbers are available after the first page of results, then a <code>NextToken</code> string will be returned. To receive the next page, you call <code>ListPhoneNumbersOptedOut</code> again using the <code>NextToken</code> string received from the previous call. When there are no more records to return, <code>NextToken</code> will be null.</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ListPhoneNumbersOptedOutResponse'\n        '480':\n          description: ThrottledException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ThrottledException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '483':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      parameters:\n        - name: nextToken\n          in: query\n          required: false\n          description: A <code>NextToken</code> string is used when you call the <code>ListPhoneNumbersOptedOut</code> action to retrieve additional records that are available after the first page of results.\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ListPhoneNumbersOptedOut\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: ListPhoneNumbersOptedOut\n      operationId: POST_ListPhoneNumbersOptedOut\n      description: '<p>Returns a list of phone numbers that are opted out, meaning you cannot send SMS messages to them.</p> <p>The results for <code>ListPhoneNumbersOptedOut</code> are paginated, and each page returns up to 100 phone numbers. If additional phone numbers are available after the first page of results, then a <code>NextToken</code> string will be returned. To receive the next page, you call <code>ListPhoneNumbersOptedOut</code> again using the <code>NextToken</code> string received from the previous call. When there are no more records to return, <code>NextToken</code> will be null.</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ListPhoneNumbersOptedOutResponse'\n        '480':\n          description: ThrottledException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ThrottledException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '483':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/ListPhoneNumbersOptedOutInput'\n      parameters:\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ListPhoneNumbersOptedOut\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=ListPlatformApplications:\n    get:\n      x-aws-operation-name: ListPlatformApplications\n      operationId: GET_ListPlatformApplications\n      description: '<p>Lists the platform application objects for the supported push notification services, such as APNS and GCM (Firebase Cloud Messaging). The results for <code>ListPlatformApplications</code> are paginated and return a limited list of applications, up to 100. If additional records are available after the first page results, then a NextToken string will be returned. To receive the next page, you call <code>ListPlatformApplications</code> using the NextToken string received from the previous call. When there are no more records to return, <code>NextToken</code> will be null. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. </p> <p>This action is throttled at 15 transactions per second (TPS).</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ListPlatformApplicationsResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n      parameters:\n        - name: NextToken\n          in: query\n          required: false\n          description: NextToken string is used when calling ListPlatformApplications action to retrieve additional records that are available after the first page results.\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ListPlatformApplications\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: ListPlatformApplications\n      operationId: POST_ListPlatformApplications\n      description: '<p>Lists the platform application objects for the supported push notification services, such as APNS and GCM (Firebase Cloud Messaging). The results for <code>ListPlatformApplications</code> are paginated and return a limited list of applications, up to 100. If additional records are available after the first page results, then a NextToken string will be returned. To receive the next page, you call <code>ListPlatformApplications</code> using the NextToken string received from the previous call. When there are no more records to return, <code>NextToken</code> will be null. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. </p> <p>This action is throttled at 15 transactions per second (TPS).</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ListPlatformApplicationsResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/ListPlatformApplicationsInput'\n      parameters:\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ListPlatformApplications\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=ListSMSSandboxPhoneNumbers:\n    get:\n      x-aws-operation-name: ListSMSSandboxPhoneNumbers\n      operationId: GET_ListSMSSandboxPhoneNumbers\n      description: '<p>Lists the calling account''s current verified and pending destination phone numbers in the SMS sandbox.</p> <p>When you start using Amazon SNS to send SMS messages, your account is in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment for you to try Amazon SNS features without risking your reputation as an SMS sender. While your account is in the SMS sandbox, you can use all of the features of Amazon SNS. However, you can send SMS messages only to verified destination phone numbers. For more information, including how to move out of the sandbox to send messages without restrictions, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ListSMSSandboxPhoneNumbersResult'\n        '480':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ThrottledException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ThrottledException'\n      parameters:\n        - name: NextToken\n          in: query\n          required: false\n          description: Token that the previous <code>ListSMSSandboxPhoneNumbersInput</code> request returns.\n          schema:\n            type: string\n        - name: MaxResults\n          in: query\n          required: false\n          description: The maximum number of phone numbers to return.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ListSMSSandboxPhoneNumbers\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: ListSMSSandboxPhoneNumbers\n      operationId: POST_ListSMSSandboxPhoneNumbers\n      description: '<p>Lists the calling account''s current verified and pending destination phone numbers in the SMS sandbox.</p> <p>When you start using Amazon SNS to send SMS messages, your account is in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment for you to try Amazon SNS features without risking your reputation as an SMS sender. While your account is in the SMS sandbox, you can use all of the features of Amazon SNS. However, you can send SMS messages only to verified destination phone numbers. For more information, including how to move out of the sandbox to send messages without restrictions, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ListSMSSandboxPhoneNumbersResult'\n        '480':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ThrottledException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ThrottledException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/ListSMSSandboxPhoneNumbersInput'\n      parameters:\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ListSMSSandboxPhoneNumbers\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=ListSubscriptions:\n    get:\n      x-aws-operation-name: ListSubscriptions\n      operationId: GET_ListSubscriptions\n      description: '<p>Returns a list of the requester''s subscriptions. Each call returns a limited list of subscriptions, up to 100. If there are more subscriptions, a <code>NextToken</code> is also returned. Use the <code>NextToken</code> parameter in a new <code>ListSubscriptions</code> call to get further results.</p> <p>This action is throttled at 30 transactions per second (TPS).</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ListSubscriptionsResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n      parameters:\n        - name: NextToken\n          in: query\n          required: false\n          description: Token returned by the previous <code>ListSubscriptions</code> request.\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ListSubscriptions\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: ListSubscriptions\n      operationId: POST_ListSubscriptions\n      description: '<p>Returns a list of the requester''s subscriptions. Each call returns a limited list of subscriptions, up to 100. If there are more subscriptions, a <code>NextToken</code> is also returned. Use the <code>NextToken</code> parameter in a new <code>ListSubscriptions</code> call to get further results.</p> <p>This action is throttled at 30 transactions per second (TPS).</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ListSubscriptionsResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/ListSubscriptionsInput'\n      parameters:\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ListSubscriptions\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=ListSubscriptionsByTopic:\n    get:\n      x-aws-operation-name: ListSubscriptionsByTopic\n      operationId: GET_ListSubscriptionsByTopic\n      description: '<p>Returns a list of the subscriptions to a specific topic. Each call returns a limited list of subscriptions, up to 100. If there are more subscriptions, a <code>NextToken</code> is also returned. Use the <code>NextToken</code> parameter in a new <code>ListSubscriptionsByTopic</code> call to get further results.</p> <p>This action is throttled at 30 transactions per second (TPS).</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ListSubscriptionsByTopicResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '483':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n      parameters:\n        - name: TopicArn\n          in: query\n          required: true\n          description: The ARN of the topic for which you wish to find subscriptions.\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          required: false\n          description: Token returned by the previous <code>ListSubscriptionsByTopic</code> request.\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ListSubscriptionsByTopic\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: ListSubscriptionsByTopic\n      operationId: POST_ListSubscriptionsByTopic\n      description: '<p>Returns a list of the subscriptions to a specific topic. Each call returns a limited list of subscriptions, up to 100. If there are more subscriptions, a <code>NextToken</code> is also returned. Use the <code>NextToken</code> parameter in a new <code>ListSubscriptionsByTopic</code> call to get further results.</p> <p>This action is throttled at 30 transactions per second (TPS).</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ListSubscriptionsByTopicResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '483':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/ListSubscriptionsByTopicInput'\n      parameters:\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ListSubscriptionsByTopic\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=ListTagsForResource:\n    get:\n      x-aws-operation-name: ListTagsForResource\n      operationId: GET_ListTagsForResource\n      description: 'List all tags added to the specified Amazon SNS topic. For an overview, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-tags.html\">Amazon SNS Tags</a> in the <i>Amazon Simple Notification Service Developer Guide</i>.'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ListTagsForResourceResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: TagPolicyException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TagPolicyException'\n        '482':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '484':\n          description: ConcurrentAccessException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ConcurrentAccessException'\n      parameters:\n        - name: ResourceArn\n          in: query\n          required: true\n          description: The ARN of the topic for which to list tags.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 1011\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ListTagsForResource\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: ListTagsForResource\n      operationId: POST_ListTagsForResource\n      description: 'List all tags added to the specified Amazon SNS topic. For an overview, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-tags.html\">Amazon SNS Tags</a> in the <i>Amazon Simple Notification Service Developer Guide</i>.'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ListTagsForResourceResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: TagPolicyException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TagPolicyException'\n        '482':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '484':\n          description: ConcurrentAccessException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ConcurrentAccessException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/ListTagsForResourceRequest'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ListTagsForResource\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=ListTopics:\n    get:\n      x-aws-operation-name: ListTopics\n      operationId: GET_ListTopics\n      description: '<p>Returns a list of the requester''s topics. Each call returns a limited list of topics, up to 100. If there are more topics, a <code>NextToken</code> is also returned. Use the <code>NextToken</code> parameter in a new <code>ListTopics</code> call to get further results.</p> <p>This action is throttled at 30 transactions per second (TPS).</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ListTopicsResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n      parameters:\n        - name: NextToken\n          in: query\n          required: false\n          description: Token returned by the previous <code>ListTopics</code> request.\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ListTopics\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: ListTopics\n      operationId: POST_ListTopics\n      description: '<p>Returns a list of the requester''s topics. Each call returns a limited list of topics, up to 100. If there are more topics, a <code>NextToken</code> is also returned. Use the <code>NextToken</code> parameter in a new <code>ListTopics</code> call to get further results.</p> <p>This action is throttled at 30 transactions per second (TPS).</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ListTopicsResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/ListTopicsInput'\n      parameters:\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - ListTopics\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=OptInPhoneNumber:\n    get:\n      x-aws-operation-name: OptInPhoneNumber\n      operationId: GET_OptInPhoneNumber\n      description: '<p>Use this request to opt in a phone number that is opted out, which enables you to resume sending SMS messages to the number.</p> <p>You can opt in a phone number only once every 30 days.</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OptInPhoneNumberResponse'\n        '480':\n          description: ThrottledException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ThrottledException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '483':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      parameters:\n        - name: phoneNumber\n          in: query\n          required: true\n          description: The phone number to opt in. Use E.164 format.\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - OptInPhoneNumber\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: OptInPhoneNumber\n      operationId: POST_OptInPhoneNumber\n      description: '<p>Use this request to opt in a phone number that is opted out, which enables you to resume sending SMS messages to the number.</p> <p>You can opt in a phone number only once every 30 days.</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/OptInPhoneNumberResponse'\n        '480':\n          description: ThrottledException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ThrottledException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '483':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/OptInPhoneNumberInput'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - OptInPhoneNumber\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=Publish:\n    get:\n      x-aws-operation-name: Publish\n      operationId: GET_Publish\n      description: '<p>Sends a message to an Amazon SNS topic, a text message (SMS message) directly to a phone number, or a message to a mobile platform endpoint (when you specify the <code>TargetArn</code>).</p> <p>If you send a message to a topic, Amazon SNS delivers the message to each endpoint that is subscribed to the topic. The format of the message depends on the notification protocol for each subscribed endpoint.</p> <p>When a <code>messageId</code> is returned, the message has been saved and Amazon SNS will attempt to deliver it shortly.</p> <p>To use the <code>Publish</code> action for sending a message to a mobile endpoint, such as an app on a Kindle device or mobile phone, you must specify the EndpointArn for the TargetArn parameter. The EndpointArn is returned when making a call with the <code>CreatePlatformEndpoint</code> action. </p> <p>For more information about formatting messages, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-custommessage.html\">Send Custom Platform-Specific Payloads in Messages to Mobile Devices</a>. </p> <important> <p>You can publish messages only to topics and endpoints in the same Region.</p> </important>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/PublishResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '483':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '484':\n          description: EndpointDisabledException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/EndpointDisabledException'\n        '485':\n          description: PlatformApplicationDisabledException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/PlatformApplicationDisabledException'\n        '486':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '487':\n          description: KMSDisabledException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/KMSDisabledException'\n        '488':\n          description: KMSInvalidStateException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/KMSInvalidStateException'\n        '489':\n          description: KMSNotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/KMSNotFoundException'\n        '490':\n          description: KMSOptInRequired\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/KMSOptInRequired'\n        '491':\n          description: KMSThrottlingException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/KMSThrottlingException'\n        '492':\n          description: KMSAccessDeniedException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/KMSAccessDeniedException'\n        '493':\n          description: InvalidSecurityException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidSecurityException'\n      parameters:\n        - name: TopicArn\n          in: query\n          required: false\n          description: '<p>The topic you want to publish to.</p> <p>If you don''t specify a value for the <code>TopicArn</code> parameter, you must specify a value for the <code>PhoneNumber</code> or <code>TargetArn</code> parameters.</p>'\n          schema:\n            type: string\n        - name: TargetArn\n          in: query\n          required: false\n          description: 'If you don''t specify a value for the <code>TargetArn</code> parameter, you must specify a value for the <code>PhoneNumber</code> or <code>TopicArn</code> parameters.'\n          schema:\n            type: string\n        - name: PhoneNumber\n          in: query\n          required: false\n          description: '<p>The phone number to which you want to deliver an SMS message. Use E.164 format.</p> <p>If you don''t specify a value for the <code>PhoneNumber</code> parameter, you must specify a value for the <code>TargetArn</code> or <code>TopicArn</code> parameters.</p>'\n          schema:\n            type: string\n        - name: Message\n          in: query\n          required: true\n          description: '<p>The message you want to send.</p> <p>If you are publishing to a topic and you want to send the same message to all transport protocols, include the text of the message as a String value. If you want to send different messages for each transport protocol, set the value of the <code>MessageStructure</code> parameter to <code>json</code> and use a JSON object for the <code>Message</code> parameter. </p> <p/> <p>Constraints:</p> <ul> <li> <p>With the exception of SMS, messages must be UTF-8 encoded strings and at most 256 KB in size (262,144 bytes, not 262,144 characters).</p> </li> <li> <p>For SMS, each message can contain up to 140 characters. This character limit depends on the encoding schema. For example, an SMS message can contain 160 GSM characters, 140 ASCII characters, or 70 UCS-2 characters.</p> <p>If you publish a message that exceeds this size limit, Amazon SNS sends the message as multiple messages, each fitting within the size limit. Messages aren''t truncated mid-word but are cut off at whole-word boundaries.</p> <p>The total size limit for a single SMS <code>Publish</code> action is 1,600 characters.</p> </li> </ul> <p>JSON-specific constraints:</p> <ul> <li> <p>Keys in the JSON object that correspond to supported transport protocols must have simple JSON string values.</p> </li> <li> <p>The values will be parsed (unescaped) before they are used in outgoing messages.</p> </li> <li> <p>Outbound notifications are JSON encoded (meaning that the characters will be reescaped for sending).</p> </li> <li> <p>Values have a minimum length of 0 (the empty string, \"\", is allowed).</p> </li> <li> <p>Values have a maximum length bounded by the overall message size (so, including multiple protocols may limit message sizes).</p> </li> <li> <p>Non-string values will cause the key to be ignored.</p> </li> <li> <p>Keys that do not correspond to supported transport protocols are ignored.</p> </li> <li> <p>Duplicate keys are not allowed.</p> </li> <li> <p>Failure to parse or validate any key or value in the message will cause the <code>Publish</code> call to return an error (no partial delivery).</p> </li> </ul>'\n          schema:\n            type: string\n        - name: Subject\n          in: query\n          required: false\n          description: '<p>Optional parameter to be used as the \"Subject\" line when the message is delivered to email endpoints. This field will also be included, if present, in the standard JSON messages delivered to other endpoints.</p> <p>Constraints: Subjects must be ASCII text that begins with a letter, number, or punctuation mark; must not include line breaks or control characters; and must be less than 100 characters long.</p>'\n          schema:\n            type: string\n        - name: MessageStructure\n          in: query\n          required: false\n          description: '<p>Set <code>MessageStructure</code> to <code>json</code> if you want to send a different message for each protocol. For example, using one publish action, you can send a short message to your SMS subscribers and a longer message to your email subscribers. If you set <code>MessageStructure</code> to <code>json</code>, the value of the <code>Message</code> parameter must: </p> <ul> <li> <p>be a syntactically valid JSON object; and</p> </li> <li> <p>contain at least a top-level JSON key of \"default\" with a value that is a string.</p> </li> </ul> <p>You can define other top-level keys that define the message you want to send to a specific transport protocol (e.g., \"http\").</p> <p>Valid value: <code>json</code> </p>'\n          schema:\n            type: string\n        - name: MessageAttributes\n          in: query\n          required: false\n          description: Message attributes for Publish action.\n          schema:\n            type: object\n            additionalProperties:\n              $ref: '#/components/schemas/MessageAttributeValue'\n        - name: MessageDeduplicationId\n          in: query\n          required: false\n          description: '<p>This parameter applies only to FIFO (first-in-first-out) topics. The <code>MessageDeduplicationId</code> can contain up to 128 alphanumeric characters (a-z, A-Z, 0-9) and punctuation <code>(!\"#$%&amp;''()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~)</code>.</p> <p>Every message must have a unique <code>MessageDeduplicationId</code>, which is a token used for deduplication of sent messages. If a message with a particular <code>MessageDeduplicationId</code> is sent successfully, any message sent with the same <code>MessageDeduplicationId</code> during the 5-minute deduplication interval is treated as a duplicate. </p> <p>If the topic has <code>ContentBasedDeduplication</code> set, the system generates a <code>MessageDeduplicationId</code> based on the contents of the message. Your <code>MessageDeduplicationId</code> overrides the generated one.</p>'\n          schema:\n            type: string\n        - name: MessageGroupId\n          in: query\n          required: false\n          description: '<p>This parameter applies only to FIFO (first-in-first-out) topics. The <code>MessageGroupId</code> can contain up to 128 alphanumeric characters (a-z, A-Z, 0-9) and punctuation <code>(!\"#$%&amp;''()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~)</code>.</p> <p>The <code>MessageGroupId</code> is a tag that specifies that a message belongs to a specific message group. Messages that belong to the same message group are processed in a FIFO manner (however, messages in different message groups might be processed out of order). Every message must include a <code>MessageGroupId</code>.</p>'\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - Publish\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: Publish\n      operationId: POST_Publish\n      description: '<p>Sends a message to an Amazon SNS topic, a text message (SMS message) directly to a phone number, or a message to a mobile platform endpoint (when you specify the <code>TargetArn</code>).</p> <p>If you send a message to a topic, Amazon SNS delivers the message to each endpoint that is subscribed to the topic. The format of the message depends on the notification protocol for each subscribed endpoint.</p> <p>When a <code>messageId</code> is returned, the message has been saved and Amazon SNS will attempt to deliver it shortly.</p> <p>To use the <code>Publish</code> action for sending a message to a mobile endpoint, such as an app on a Kindle device or mobile phone, you must specify the EndpointArn for the TargetArn parameter. The EndpointArn is returned when making a call with the <code>CreatePlatformEndpoint</code> action. </p> <p>For more information about formatting messages, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-custommessage.html\">Send Custom Platform-Specific Payloads in Messages to Mobile Devices</a>. </p> <important> <p>You can publish messages only to topics and endpoints in the same Region.</p> </important>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/PublishResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '483':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '484':\n          description: EndpointDisabledException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/EndpointDisabledException'\n        '485':\n          description: PlatformApplicationDisabledException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/PlatformApplicationDisabledException'\n        '486':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '487':\n          description: KMSDisabledException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/KMSDisabledException'\n        '488':\n          description: KMSInvalidStateException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/KMSInvalidStateException'\n        '489':\n          description: KMSNotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/KMSNotFoundException'\n        '490':\n          description: KMSOptInRequired\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/KMSOptInRequired'\n        '491':\n          description: KMSThrottlingException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/KMSThrottlingException'\n        '492':\n          description: KMSAccessDeniedException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/KMSAccessDeniedException'\n        '493':\n          description: InvalidSecurityException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidSecurityException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/PublishInput'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - Publish\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=RemovePermission:\n    get:\n      x-aws-operation-name: RemovePermission\n      operationId: GET_RemovePermission\n      description: Removes a statement from a topic's access control policy.\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '483':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n      parameters:\n        - name: TopicArn\n          in: query\n          required: true\n          description: The ARN of the topic whose access control policy you wish to modify.\n          schema:\n            type: string\n        - name: Label\n          in: query\n          required: true\n          description: The unique label of the statement you want to remove.\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - RemovePermission\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: RemovePermission\n      operationId: POST_RemovePermission\n      description: Removes a statement from a topic's access control policy.\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '483':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/RemovePermissionInput'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - RemovePermission\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=SetEndpointAttributes:\n    get:\n      x-aws-operation-name: SetEndpointAttributes\n      operationId: GET_SetEndpointAttributes\n      description: 'Sets the attributes for an endpoint for a device on one of the supported push notification services, such as GCM (Firebase Cloud Messaging) and APNS. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. '\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '483':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n      parameters:\n        - name: EndpointArn\n          in: query\n          required: true\n          description: EndpointArn used for SetEndpointAttributes action.\n          schema:\n            type: string\n        - name: Attributes\n          in: query\n          required: true\n          description: '<p>A map of the endpoint attributes. Attributes in this map include the following:</p> <ul> <li> <p> <code>CustomUserData</code> – arbitrary user data to associate with the endpoint. Amazon SNS does not use this data. The data must be in UTF-8 format and less than 2KB.</p> </li> <li> <p> <code>Enabled</code> – flag that enables/disables delivery to the endpoint. Amazon SNS will set this to false when a notification service indicates to Amazon SNS that the endpoint is invalid. Users can set it back to true, typically after updating Token.</p> </li> <li> <p> <code>Token</code> – device token, also referred to as a registration id, for an app and mobile device. This is returned from the notification service when an app and mobile device are registered with the notification service.</p> </li> </ul>'\n          schema:\n            type: object\n            additionalProperties:\n              $ref: '#/components/schemas/String'\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - SetEndpointAttributes\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: SetEndpointAttributes\n      operationId: POST_SetEndpointAttributes\n      description: 'Sets the attributes for an endpoint for a device on one of the supported push notification services, such as GCM (Firebase Cloud Messaging) and APNS. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. '\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '483':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/SetEndpointAttributesInput'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - SetEndpointAttributes\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=SetPlatformApplicationAttributes:\n    get:\n      x-aws-operation-name: SetPlatformApplicationAttributes\n      operationId: GET_SetPlatformApplicationAttributes\n      description: 'Sets the attributes of the platform application object for the supported push notification services, such as APNS and GCM (Firebase Cloud Messaging). For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. For information on configuring attributes for message delivery status, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-msg-status.html\">Using Amazon SNS Application Attributes for Message Delivery Status</a>. '\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '483':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n      parameters:\n        - name: PlatformApplicationArn\n          in: query\n          required: true\n          description: PlatformApplicationArn for SetPlatformApplicationAttributes action.\n          schema:\n            type: string\n        - name: Attributes\n          in: query\n          required: true\n          description: '<p>A map of the platform application attributes. Attributes in this map include the following:</p> <ul> <li> <p> <code>PlatformCredential</code> – The credential received from the notification service. For <code>APNS</code> and <code>APNS_SANDBOX</code>, <code>PlatformCredential</code> is <code>private key</code>. For <code>GCM</code> (Firebase Cloud Messaging), <code>PlatformCredential</code> is <code>API key</code>. For <code>ADM</code>, <code>PlatformCredential</code> is <code>client secret</code>.</p> </li> <li> <p> <code>PlatformPrincipal</code> – The principal received from the notification service. For <code>APNS</code> and <code>APNS_SANDBOX</code>, <code>PlatformPrincipal</code> is <code>SSL certificate</code>. For <code>GCM</code> (Firebase Cloud Messaging), there is no <code>PlatformPrincipal</code>. For <code>ADM</code>, <code>PlatformPrincipal</code> is <code>client id</code>.</p> </li> <li> <p> <code>EventEndpointCreated</code> – Topic ARN to which <code>EndpointCreated</code> event notifications are sent.</p> </li> <li> <p> <code>EventEndpointDeleted</code> – Topic ARN to which <code>EndpointDeleted</code> event notifications are sent.</p> </li> <li> <p> <code>EventEndpointUpdated</code> – Topic ARN to which <code>EndpointUpdate</code> event notifications are sent.</p> </li> <li> <p> <code>EventDeliveryFailure</code> – Topic ARN to which <code>DeliveryFailure</code> event notifications are sent upon Direct Publish delivery failure (permanent) to one of the application''s endpoints.</p> </li> <li> <p> <code>SuccessFeedbackRoleArn</code> – IAM role ARN used to give Amazon SNS write access to use CloudWatch Logs on your behalf.</p> </li> <li> <p> <code>FailureFeedbackRoleArn</code> – IAM role ARN used to give Amazon SNS write access to use CloudWatch Logs on your behalf.</p> </li> <li> <p> <code>SuccessFeedbackSampleRate</code> – Sample rate percentage (0-100) of successfully delivered messages.</p> </li> </ul>'\n          schema:\n            type: object\n            additionalProperties:\n              $ref: '#/components/schemas/String'\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - SetPlatformApplicationAttributes\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: SetPlatformApplicationAttributes\n      operationId: POST_SetPlatformApplicationAttributes\n      description: 'Sets the attributes of the platform application object for the supported push notification services, such as APNS and GCM (Firebase Cloud Messaging). For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. For information on configuring attributes for message delivery status, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-msg-status.html\">Using Amazon SNS Application Attributes for Message Delivery Status</a>. '\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '483':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/SetPlatformApplicationAttributesInput'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - SetPlatformApplicationAttributes\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=SetSMSAttributes:\n    get:\n      x-aws-operation-name: SetSMSAttributes\n      operationId: GET_SetSMSAttributes\n      description: '<p>Use this request to set the default settings for sending SMS messages and receiving daily SMS usage reports.</p> <p>You can override some of these settings for a single message when you use the <code>Publish</code> action with the <code>MessageAttributes.entry.N</code> parameter. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sms_publish-to-phone.html\">Publishing to a mobile phone</a> in the <i>Amazon SNS Developer Guide</i>.</p> <note> <p>To use this operation, you must grant the Amazon SNS service principal (<code>sns.amazonaws.com</code>) permission to perform the <code>s3:ListBucket</code> action. </p> </note>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SetSMSAttributesResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: ThrottledException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ThrottledException'\n        '482':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '483':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n      parameters:\n        - name: attributes\n          in: query\n          required: true\n          description: '<p>The default settings for sending SMS messages from your account. You can set values for the following attribute names:</p> <p> <code>MonthlySpendLimit</code> – The maximum amount in USD that you are willing to spend each month to send SMS messages. When Amazon SNS determines that sending an SMS message would incur a cost that exceeds this limit, it stops sending SMS messages within minutes.</p> <important> <p>Amazon SNS stops sending SMS messages within minutes of the limit being crossed. During that interval, if you continue to send SMS messages, you will incur costs that exceed your limit.</p> </important> <p>By default, the spend limit is set to the maximum allowed by Amazon SNS. If you want to raise the limit, submit an <a href=\"https://console.aws.amazon.com/support/home#/case/create?issueType=service-limit-increase&amp;limitType=service-code-sns\">SNS Limit Increase case</a>. For <b>New limit value</b>, enter your desired monthly spend limit. In the <b>Use Case Description</b> field, explain that you are requesting an SMS monthly spend limit increase.</p> <p> <code>DeliveryStatusIAMRole</code> – The ARN of the IAM role that allows Amazon SNS to write logs about SMS deliveries in CloudWatch Logs. For each SMS message that you send, Amazon SNS writes a log that includes the message price, the success or failure status, the reason for failure (if the message failed), the message dwell time, and other information.</p> <p> <code>DeliveryStatusSuccessSamplingRate</code> – The percentage of successful SMS deliveries for which Amazon SNS will write logs in CloudWatch Logs. The value can be an integer from 0 - 100. For example, to write logs only for failed deliveries, set this value to <code>0</code>. To write logs for 10% of your successful deliveries, set it to <code>10</code>.</p> <p> <code>DefaultSenderID</code> – A string, such as your business brand, that is displayed as the sender on the receiving device. Support for sender IDs varies by country. The sender ID can be 1 - 11 alphanumeric characters, and it must contain at least one letter.</p> <p> <code>DefaultSMSType</code> – The type of SMS message that you will send by default. You can assign the following values:</p> <ul> <li> <p> <code>Promotional</code> – (Default) Noncritical messages, such as marketing messages. Amazon SNS optimizes the message delivery to incur the lowest cost.</p> </li> <li> <p> <code>Transactional</code> – Critical messages that support customer transactions, such as one-time passcodes for multi-factor authentication. Amazon SNS optimizes the message delivery to achieve the highest reliability.</p> </li> </ul> <p> <code>UsageReportS3Bucket</code> – The name of the Amazon S3 bucket to receive daily SMS usage reports from Amazon SNS. Each day, Amazon SNS will deliver a usage report as a CSV file to the bucket. The report includes the following information for each SMS message that was successfully delivered by your account:</p> <ul> <li> <p>Time that the message was published (in UTC)</p> </li> <li> <p>Message ID</p> </li> <li> <p>Destination phone number</p> </li> <li> <p>Message type</p> </li> <li> <p>Delivery status</p> </li> <li> <p>Message price (in USD)</p> </li> <li> <p>Part number (a message is split into multiple parts if it is too long for a single message)</p> </li> <li> <p>Total number of parts</p> </li> </ul> <p>To receive the report, the bucket must have a policy that allows the Amazon SNS service principal to perform the <code>s3:PutObject</code> and <code>s3:GetBucketLocation</code> actions.</p> <p>For an example bucket policy and usage report, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sms_stats.html\">Monitoring SMS Activity</a> in the <i>Amazon SNS Developer Guide</i>.</p>'\n          schema:\n            type: object\n            additionalProperties:\n              $ref: '#/components/schemas/String'\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - SetSMSAttributes\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: SetSMSAttributes\n      operationId: POST_SetSMSAttributes\n      description: '<p>Use this request to set the default settings for sending SMS messages and receiving daily SMS usage reports.</p> <p>You can override some of these settings for a single message when you use the <code>Publish</code> action with the <code>MessageAttributes.entry.N</code> parameter. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sms_publish-to-phone.html\">Publishing to a mobile phone</a> in the <i>Amazon SNS Developer Guide</i>.</p> <note> <p>To use this operation, you must grant the Amazon SNS service principal (<code>sns.amazonaws.com</code>) permission to perform the <code>s3:ListBucket</code> action. </p> </note>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SetSMSAttributesResponse'\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: ThrottledException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ThrottledException'\n        '482':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '483':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/SetSMSAttributesInput'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - SetSMSAttributes\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=SetSubscriptionAttributes:\n    get:\n      x-aws-operation-name: SetSubscriptionAttributes\n      operationId: GET_SetSubscriptionAttributes\n      description: Allows a subscription owner to set an attribute of the subscription to a new value.\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: FilterPolicyLimitExceededException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/FilterPolicyLimitExceededException'\n        '482':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '483':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '484':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n      parameters:\n        - name: SubscriptionArn\n          in: query\n          required: true\n          description: The ARN of the subscription to modify.\n          schema:\n            type: string\n        - name: AttributeName\n          in: query\n          required: true\n          description: '<p>A map of attributes with their corresponding values.</p> <p>The following lists the names, descriptions, and values of the special request parameters that this action uses:</p> <ul> <li> <p> <code>DeliveryPolicy</code> – The policy that defines how Amazon SNS retries failed deliveries to HTTP/S endpoints.</p> </li> <li> <p> <code>FilterPolicy</code> – The simple JSON object that lets your subscriber receive only a subset of messages, rather than receiving every message published to the topic.</p> </li> <li> <p> <code>RawMessageDelivery</code> – When set to <code>true</code>, enables raw message delivery to Amazon SQS or HTTP/S endpoints. This eliminates the need for the endpoints to process JSON formatting, which is otherwise created for Amazon SNS metadata.</p> </li> <li> <p> <code>RedrivePolicy</code> – When specified, sends undeliverable messages to the specified Amazon SQS dead-letter queue. Messages that can''t be delivered due to client errors (for example, when the subscribed endpoint is unreachable) or server errors (for example, when the service that powers the subscribed endpoint becomes unavailable) are held in the dead-letter queue for further analysis or reprocessing.</p> </li> </ul> <p>The following attribute applies only to Amazon Kinesis Data Firehose delivery stream subscriptions:</p> <ul> <li> <p> <code>SubscriptionRoleArn</code> – The ARN of the IAM role that has the following:</p> <ul> <li> <p>Permission to write to the Kinesis Data Firehose delivery stream</p> </li> <li> <p>Amazon SNS listed as a trusted entity</p> </li> </ul> <p>Specifying a valid ARN for this attribute is required for Kinesis Data Firehose delivery stream subscriptions. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-firehose-as-subscriber.html\">Fanout to Kinesis Data Firehose delivery streams</a> in the <i>Amazon SNS Developer Guide</i>.</p> </li> </ul>'\n          schema:\n            type: string\n        - name: AttributeValue\n          in: query\n          required: false\n          description: The new value for the attribute in JSON format.\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - SetSubscriptionAttributes\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: SetSubscriptionAttributes\n      operationId: POST_SetSubscriptionAttributes\n      description: Allows a subscription owner to set an attribute of the subscription to a new value.\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: FilterPolicyLimitExceededException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/FilterPolicyLimitExceededException'\n        '482':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '483':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '484':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/SetSubscriptionAttributesInput'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - SetSubscriptionAttributes\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=SetTopicAttributes:\n    get:\n      x-aws-operation-name: SetTopicAttributes\n      operationId: GET_SetTopicAttributes\n      description: Allows a topic owner to set an attribute of the topic to a new value.\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '483':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '484':\n          description: InvalidSecurityException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidSecurityException'\n      parameters:\n        - name: TopicArn\n          in: query\n          required: true\n          description: The ARN of the topic to modify.\n          schema:\n            type: string\n        - name: AttributeName\n          in: query\n          required: true\n          description: '<p>A map of attributes with their corresponding values.</p> <p>The following lists the names, descriptions, and values of the special request parameters that the <code>SetTopicAttributes</code> action uses:</p> <ul> <li> <p> <code>DeliveryPolicy</code> – The policy that defines how Amazon SNS retries failed deliveries to HTTP/S endpoints.</p> </li> <li> <p> <code>DisplayName</code> – The display name to use for a topic with SMS subscriptions.</p> </li> <li> <p> <code>Policy</code> – The policy that defines who can access your topic. By default, only the topic owner can publish or subscribe to the topic.</p> </li> </ul> <p>The following attribute applies only to <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html\">server-side-encryption</a>:</p> <ul> <li> <p> <code>KmsMasterKeyId</code> – The ID of an Amazon Web Services managed customer master key (CMK) for Amazon SNS or a custom CMK. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms\">Key Terms</a>. For more examples, see <a href=\"https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters\">KeyId</a> in the <i>Key Management Service API Reference</i>. </p> </li> </ul> <p>The following attribute applies only to <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-fifo-topics.html\">FIFO topics</a>:</p> <ul> <li> <p> <code>ContentBasedDeduplication</code> – Enables content-based deduplication for FIFO topics.</p> <ul> <li> <p>By default, <code>ContentBasedDeduplication</code> is set to <code>false</code>. If you create a FIFO topic and this attribute is <code>false</code>, you must specify a value for the <code>MessageDeduplicationId</code> parameter for the <a href=\"https://docs.aws.amazon.com/sns/latest/api/API_Publish.html\">Publish</a> action. </p> </li> <li> <p>When you set <code>ContentBasedDeduplication</code> to <code>true</code>, Amazon SNS uses a SHA-256 hash to generate the <code>MessageDeduplicationId</code> using the body of the message (but not the attributes of the message).</p> <p>(Optional) To override the generated value, you can specify a value for the <code>MessageDeduplicationId</code> parameter for the <code>Publish</code> action.</p> </li> </ul> </li> </ul>'\n          schema:\n            type: string\n        - name: AttributeValue\n          in: query\n          required: false\n          description: The new value for the attribute.\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - SetTopicAttributes\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: SetTopicAttributes\n      operationId: POST_SetTopicAttributes\n      description: Allows a topic owner to set an attribute of the topic to a new value.\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '483':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '484':\n          description: InvalidSecurityException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidSecurityException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/SetTopicAttributesInput'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - SetTopicAttributes\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=Subscribe:\n    get:\n      x-aws-operation-name: Subscribe\n      operationId: GET_Subscribe\n      description: '<p>Subscribes an endpoint to an Amazon SNS topic. If the endpoint type is HTTP/S or email, or if the endpoint and the topic are not in the same account, the endpoint owner must run the <code>ConfirmSubscription</code> action to confirm the subscription.</p> <p>You call the <code>ConfirmSubscription</code> action with the token from the subscription response. Confirmation tokens are valid for three days.</p> <p>This action is throttled at 100 transactions per second (TPS).</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SubscribeResponse'\n        '480':\n          description: SubscriptionLimitExceededException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SubscriptionLimitExceededException'\n        '481':\n          description: FilterPolicyLimitExceededException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/FilterPolicyLimitExceededException'\n        '482':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '484':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '485':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '486':\n          description: InvalidSecurityException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidSecurityException'\n      parameters:\n        - name: TopicArn\n          in: query\n          required: true\n          description: The ARN of the topic you want to subscribe to.\n          schema:\n            type: string\n        - name: Protocol\n          in: query\n          required: true\n          description: '<p>The protocol that you want to use. Supported protocols include:</p> <ul> <li> <p> <code>http</code> – delivery of JSON-encoded message via HTTP POST</p> </li> <li> <p> <code>https</code> – delivery of JSON-encoded message via HTTPS POST</p> </li> <li> <p> <code>email</code> – delivery of message via SMTP</p> </li> <li> <p> <code>email-json</code> – delivery of JSON-encoded message via SMTP</p> </li> <li> <p> <code>sms</code> – delivery of message via SMS</p> </li> <li> <p> <code>sqs</code> – delivery of JSON-encoded message to an Amazon SQS queue</p> </li> <li> <p> <code>application</code> – delivery of JSON-encoded message to an EndpointArn for a mobile app and device</p> </li> <li> <p> <code>lambda</code> – delivery of JSON-encoded message to an Lambda function</p> </li> <li> <p> <code>firehose</code> – delivery of JSON-encoded message to an Amazon Kinesis Data Firehose delivery stream.</p> </li> </ul>'\n          schema:\n            type: string\n        - name: Endpoint\n          in: query\n          required: false\n          description: '<p>The endpoint that you want to receive notifications. Endpoints vary by protocol:</p> <ul> <li> <p>For the <code>http</code> protocol, the (public) endpoint is a URL beginning with <code>http://</code>.</p> </li> <li> <p>For the <code>https</code> protocol, the (public) endpoint is a URL beginning with <code>https://</code>.</p> </li> <li> <p>For the <code>email</code> protocol, the endpoint is an email address.</p> </li> <li> <p>For the <code>email-json</code> protocol, the endpoint is an email address.</p> </li> <li> <p>For the <code>sms</code> protocol, the endpoint is a phone number of an SMS-enabled device.</p> </li> <li> <p>For the <code>sqs</code> protocol, the endpoint is the ARN of an Amazon SQS queue.</p> </li> <li> <p>For the <code>application</code> protocol, the endpoint is the EndpointArn of a mobile app and device.</p> </li> <li> <p>For the <code>lambda</code> protocol, the endpoint is the ARN of an Lambda function.</p> </li> <li> <p>For the <code>firehose</code> protocol, the endpoint is the ARN of an Amazon Kinesis Data Firehose delivery stream.</p> </li> </ul>'\n          schema:\n            type: string\n        - name: Attributes\n          in: query\n          required: false\n          description: '<p>A map of attributes with their corresponding values.</p> <p>The following lists the names, descriptions, and values of the special request parameters that the <code>Subscribe</code> action uses:</p> <ul> <li> <p> <code>DeliveryPolicy</code> – The policy that defines how Amazon SNS retries failed deliveries to HTTP/S endpoints.</p> </li> <li> <p> <code>FilterPolicy</code> – The simple JSON object that lets your subscriber receive only a subset of messages, rather than receiving every message published to the topic.</p> </li> <li> <p> <code>RawMessageDelivery</code> – When set to <code>true</code>, enables raw message delivery to Amazon SQS or HTTP/S endpoints. This eliminates the need for the endpoints to process JSON formatting, which is otherwise created for Amazon SNS metadata.</p> </li> <li> <p> <code>RedrivePolicy</code> – When specified, sends undeliverable messages to the specified Amazon SQS dead-letter queue. Messages that can''t be delivered due to client errors (for example, when the subscribed endpoint is unreachable) or server errors (for example, when the service that powers the subscribed endpoint becomes unavailable) are held in the dead-letter queue for further analysis or reprocessing.</p> </li> </ul> <p>The following attribute applies only to Amazon Kinesis Data Firehose delivery stream subscriptions:</p> <ul> <li> <p> <code>SubscriptionRoleArn</code> – The ARN of the IAM role that has the following:</p> <ul> <li> <p>Permission to write to the Kinesis Data Firehose delivery stream</p> </li> <li> <p>Amazon SNS listed as a trusted entity</p> </li> </ul> <p>Specifying a valid ARN for this attribute is required for Kinesis Data Firehose delivery stream subscriptions. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-firehose-as-subscriber.html\">Fanout to Kinesis Data Firehose delivery streams</a> in the <i>Amazon SNS Developer Guide</i>.</p> </li> </ul>'\n          schema:\n            type: object\n            additionalProperties:\n              $ref: '#/components/schemas/attributeValue'\n        - name: ReturnSubscriptionArn\n          in: query\n          required: false\n          description: '<p>Sets whether the response from the <code>Subscribe</code> request includes the subscription ARN, even if the subscription is not yet confirmed.</p> <p>If you set this parameter to <code>true</code>, the response includes the ARN in all cases, even if the subscription is not yet confirmed. In addition to the ARN for confirmed subscriptions, the response also includes the <code>pending subscription</code> ARN value for subscriptions that aren''t yet confirmed. A subscription becomes confirmed when the subscriber calls the <code>ConfirmSubscription</code> action with a confirmation token.</p> <p/> <p>The default value is <code>false</code>.</p>'\n          schema:\n            type: boolean\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - Subscribe\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: Subscribe\n      operationId: POST_Subscribe\n      description: '<p>Subscribes an endpoint to an Amazon SNS topic. If the endpoint type is HTTP/S or email, or if the endpoint and the topic are not in the same account, the endpoint owner must run the <code>ConfirmSubscription</code> action to confirm the subscription.</p> <p>You call the <code>ConfirmSubscription</code> action with the token from the subscription response. Confirmation tokens are valid for three days.</p> <p>This action is throttled at 100 transactions per second (TPS).</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SubscribeResponse'\n        '480':\n          description: SubscriptionLimitExceededException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SubscriptionLimitExceededException'\n        '481':\n          description: FilterPolicyLimitExceededException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/FilterPolicyLimitExceededException'\n        '482':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '484':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '485':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '486':\n          description: InvalidSecurityException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidSecurityException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/SubscribeInput'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - Subscribe\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=TagResource:\n    get:\n      x-aws-operation-name: TagResource\n      operationId: GET_TagResource\n      description: '<p>Add tags to the specified Amazon SNS topic. For an overview, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-tags.html\">Amazon SNS Tags</a> in the <i>Amazon SNS Developer Guide</i>.</p> <p>When you use topic tags, keep the following guidelines in mind:</p> <ul> <li> <p>Adding more than 50 tags to a topic isn''t recommended.</p> </li> <li> <p>Tags don''t have any semantic meaning. Amazon SNS interprets tags as character strings.</p> </li> <li> <p>Tags are case-sensitive.</p> </li> <li> <p>A new tag with a key identical to that of an existing tag overwrites the existing tag.</p> </li> <li> <p>Tagging actions are limited to 10 TPS per account, per Region. If your application requires a higher throughput, file a <a href=\"https://console.aws.amazon.com/support/home#/case/create?issueType=technical\">technical support request</a>.</p> </li> </ul>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TagResourceResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: TagLimitExceededException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TagLimitExceededException'\n        '482':\n          description: StaleTagException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/StaleTagException'\n        '483':\n          description: TagPolicyException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TagPolicyException'\n        '484':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '485':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '486':\n          description: ConcurrentAccessException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ConcurrentAccessException'\n      parameters:\n        - name: ResourceArn\n          in: query\n          required: true\n          description: The ARN of the topic to which to add tags.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 1011\n        - name: Tags\n          in: query\n          required: true\n          description: The tags to be added to the specified topic. A tag consists of a required key and an optional value.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/Tag'\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - TagResource\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: TagResource\n      operationId: POST_TagResource\n      description: '<p>Add tags to the specified Amazon SNS topic. For an overview, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-tags.html\">Amazon SNS Tags</a> in the <i>Amazon SNS Developer Guide</i>.</p> <p>When you use topic tags, keep the following guidelines in mind:</p> <ul> <li> <p>Adding more than 50 tags to a topic isn''t recommended.</p> </li> <li> <p>Tags don''t have any semantic meaning. Amazon SNS interprets tags as character strings.</p> </li> <li> <p>Tags are case-sensitive.</p> </li> <li> <p>A new tag with a key identical to that of an existing tag overwrites the existing tag.</p> </li> <li> <p>Tagging actions are limited to 10 TPS per account, per Region. If your application requires a higher throughput, file a <a href=\"https://console.aws.amazon.com/support/home#/case/create?issueType=technical\">technical support request</a>.</p> </li> </ul>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TagResourceResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: TagLimitExceededException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TagLimitExceededException'\n        '482':\n          description: StaleTagException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/StaleTagException'\n        '483':\n          description: TagPolicyException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TagPolicyException'\n        '484':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '485':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '486':\n          description: ConcurrentAccessException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ConcurrentAccessException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/TagResourceRequest'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - TagResource\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=Unsubscribe:\n    get:\n      x-aws-operation-name: Unsubscribe\n      operationId: GET_Unsubscribe\n      description: '<p>Deletes a subscription. If the subscription requires authentication for deletion, only the owner of the subscription or the topic''s owner can unsubscribe, and an Amazon Web Services signature is required. If the <code>Unsubscribe</code> call does not require authentication and the requester is not the subscription owner, a final cancellation message is delivered to the endpoint, so that the endpoint owner can easily resubscribe to the topic if the <code>Unsubscribe</code> request was unintended.</p> <p>This action is throttled at 100 transactions per second (TPS).</p>'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '483':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '484':\n          description: InvalidSecurityException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidSecurityException'\n      parameters:\n        - name: SubscriptionArn\n          in: query\n          required: true\n          description: The ARN of the subscription to be deleted.\n          schema:\n            type: string\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - Unsubscribe\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: Unsubscribe\n      operationId: POST_Unsubscribe\n      description: '<p>Deletes a subscription. If the subscription requires authentication for deletion, only the owner of the subscription or the topic''s owner can unsubscribe, and an Amazon Web Services signature is required. If the <code>Unsubscribe</code> call does not require authentication and the requester is not the subscription owner, a final cancellation message is delivered to the endpoint, so that the endpoint owner can easily resubscribe to the topic if the <code>Unsubscribe</code> request was unintended.</p> <p>This action is throttled at 100 transactions per second (TPS).</p>'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '483':\n          description: NotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '484':\n          description: InvalidSecurityException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidSecurityException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/UnsubscribeInput'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - Unsubscribe\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=UntagResource:\n    get:\n      x-aws-operation-name: UntagResource\n      operationId: GET_UntagResource\n      description: 'Remove tags from the specified Amazon SNS topic. For an overview, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-tags.html\">Amazon SNS Tags</a> in the <i>Amazon SNS Developer Guide</i>.'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/UntagResourceResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: TagLimitExceededException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TagLimitExceededException'\n        '482':\n          description: StaleTagException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/StaleTagException'\n        '483':\n          description: TagPolicyException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TagPolicyException'\n        '484':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '485':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '486':\n          description: ConcurrentAccessException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ConcurrentAccessException'\n      parameters:\n        - name: ResourceArn\n          in: query\n          required: true\n          description: The ARN of the topic from which to remove tags.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 1011\n        - name: TagKeys\n          in: query\n          required: true\n          description: The list of tag keys to remove from the specified topic.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/TagKey'\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - UntagResource\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: UntagResource\n      operationId: POST_UntagResource\n      description: 'Remove tags from the specified Amazon SNS topic. For an overview, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-tags.html\">Amazon SNS Tags</a> in the <i>Amazon SNS Developer Guide</i>.'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/UntagResourceResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: TagLimitExceededException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TagLimitExceededException'\n        '482':\n          description: StaleTagException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/StaleTagException'\n        '483':\n          description: TagPolicyException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TagPolicyException'\n        '484':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '485':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '486':\n          description: ConcurrentAccessException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ConcurrentAccessException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/UntagResourceRequest'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - UntagResource\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n  /#Action=VerifySMSSandboxPhoneNumber:\n    get:\n      x-aws-operation-name: VerifySMSSandboxPhoneNumber\n      operationId: GET_VerifySMSSandboxPhoneNumber\n      description: '<p>Verifies a destination phone number with a one-time password (OTP) for the calling account.</p> <p>When you start using Amazon SNS to send SMS messages, your account is in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment for you to try Amazon SNS features without risking your reputation as an SMS sender. While your account is in the SMS sandbox, you can use all of the features of Amazon SNS. However, you can send SMS messages only to verified destination phone numbers. For more information, including how to move out of the sandbox to send messages without restrictions, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/VerifySMSSandboxPhoneNumberResult'\n        '480':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: VerificationException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/VerificationException'\n        '485':\n          description: ThrottledException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ThrottledException'\n      parameters:\n        - name: PhoneNumber\n          in: query\n          required: true\n          description: The destination phone number to verify.\n          schema:\n            type: string\n            pattern: '^(\\+[0-9]{8,}|[0-9]{0,9})$'\n            maxLength: 20\n        - name: OneTimePassword\n          in: query\n          required: true\n          description: The OTP sent to the destination number from the <code>CreateSMSSandBoxPhoneNumber</code> call.\n          schema:\n            type: string\n            pattern: '^[0-9]+$'\n            description: String of Origination/Destination address including phone numbers and email addresses\n            minLength: 5\n            maxLength: 8\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - VerifySMSSandboxPhoneNumber\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      x-aws-operation-name: VerifySMSSandboxPhoneNumber\n      operationId: POST_VerifySMSSandboxPhoneNumber\n      description: '<p>Verifies a destination phone number with a one-time password (OTP) for the calling account.</p> <p>When you start using Amazon SNS to send SMS messages, your account is in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment for you to try Amazon SNS features without risking your reputation as an SMS sender. While your account is in the SMS sandbox, you can use all of the features of Amazon SNS. However, you can send SMS messages only to verified destination phone numbers. For more information, including how to move out of the sandbox to send messages without restrictions, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/VerifySMSSandboxPhoneNumberResult'\n        '480':\n          description: AuthorizationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AuthorizationErrorException'\n        '481':\n          description: InternalErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InternalErrorException'\n        '482':\n          description: InvalidParameterException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: VerificationException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/VerificationException'\n        '485':\n          description: ThrottledException\n          content:\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ThrottledException'\n      requestBody:\n        content:\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/VerifySMSSandboxPhoneNumberInput'\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - VerifySMSSandboxPhoneNumber\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - '2010-03-31'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    delegate:\n      type: string\n    action:\n      type: string\n    InvalidParameterException: {}\n    InternalErrorException: {}\n    AuthorizationErrorException: {}\n    NotFoundException: {}\n    CheckIfPhoneNumberIsOptedOutResponse:\n      type: object\n      properties:\n        isOptedOut:\n          allOf:\n            - $ref: '#/components/schemas/boolean'\n            - description: '<p>Indicates whether the phone number is opted out:</p> <ul> <li> <p> <code>true</code> – The phone number is opted out, meaning you cannot publish SMS messages to it.</p> </li> <li> <p> <code>false</code> – The phone number is opted in, meaning you can publish SMS messages to it.</p> </li> </ul>'\n      description: The response from the <code>CheckIfPhoneNumberIsOptedOut</code> action.\n    ThrottledException: {}\n    ConfirmSubscriptionResponse:\n      type: object\n      properties:\n        SubscriptionArn:\n          allOf:\n            - $ref: '#/components/schemas/subscriptionARN'\n            - description: The ARN of the created subscription.\n      description: Response for ConfirmSubscriptions action.\n    SubscriptionLimitExceededException: {}\n    FilterPolicyLimitExceededException: {}\n    CreatePlatformApplicationResponse:\n      type: object\n      properties:\n        PlatformApplicationArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: PlatformApplicationArn is returned.\n      description: Response from CreatePlatformApplication action.\n    String:\n      type: string\n    CreateEndpointResponse:\n      type: object\n      properties:\n        EndpointArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: EndpointArn returned from CreateEndpoint action.\n      description: Response from CreateEndpoint action.\n    CreateSMSSandboxPhoneNumberResult:\n      type: object\n      properties: {}\n    OptedOutException: {}\n    UserErrorException: {}\n    CreateTopicResponse:\n      type: object\n      properties:\n        TopicArn:\n          allOf:\n            - $ref: '#/components/schemas/topicARN'\n            - description: The Amazon Resource Name (ARN) assigned to the created topic.\n      description: Response from CreateTopic action.\n    attributeValue:\n      type: string\n    Tag:\n      type: object\n      required:\n        - Key\n        - Value\n      properties:\n        Key:\n          allOf:\n            - $ref: '#/components/schemas/TagKey'\n            - description: The required key portion of the tag.\n        Value:\n          allOf:\n            - $ref: '#/components/schemas/TagValue'\n            - description: The optional value portion of the tag.\n      description: The list of tags to be added to the specified topic.\n    TopicLimitExceededException: {}\n    InvalidSecurityException: {}\n    TagLimitExceededException: {}\n    StaleTagException: {}\n    TagPolicyException: {}\n    ConcurrentAccessException: {}\n    DeleteSMSSandboxPhoneNumberResult:\n      type: object\n      properties: {}\n    ResourceNotFoundException: {}\n    GetEndpointAttributesResponse:\n      type: object\n      properties:\n        Attributes:\n          allOf:\n            - $ref: '#/components/schemas/MapStringToString'\n            - description: '<p>Attributes include the following:</p> <ul> <li> <p> <code>CustomUserData</code> – arbitrary user data to associate with the endpoint. Amazon SNS does not use this data. The data must be in UTF-8 format and less than 2KB.</p> </li> <li> <p> <code>Enabled</code> – flag that enables/disables delivery to the endpoint. Amazon SNS will set this to false when a notification service indicates to Amazon SNS that the endpoint is invalid. Users can set it back to true, typically after updating Token.</p> </li> <li> <p> <code>Token</code> – device token, also referred to as a registration id, for an app and mobile device. This is returned from the notification service when an app and mobile device are registered with the notification service.</p> <note> <p>The device token for the iOS platform is returned in lowercase.</p> </note> </li> </ul>'\n      description: Response from GetEndpointAttributes of the EndpointArn.\n    GetPlatformApplicationAttributesResponse:\n      type: object\n      properties:\n        Attributes:\n          allOf:\n            - $ref: '#/components/schemas/MapStringToString'\n            - description: '<p>Attributes include the following:</p> <ul> <li> <p> <code>EventEndpointCreated</code> – Topic ARN to which EndpointCreated event notifications should be sent.</p> </li> <li> <p> <code>EventEndpointDeleted</code> – Topic ARN to which EndpointDeleted event notifications should be sent.</p> </li> <li> <p> <code>EventEndpointUpdated</code> – Topic ARN to which EndpointUpdate event notifications should be sent.</p> </li> <li> <p> <code>EventDeliveryFailure</code> – Topic ARN to which DeliveryFailure event notifications should be sent upon Direct Publish delivery failure (permanent) to one of the application''s endpoints.</p> </li> </ul>'\n      description: Response for GetPlatformApplicationAttributes action.\n    GetSMSAttributesResponse:\n      type: object\n      properties:\n        attributes:\n          allOf:\n            - $ref: '#/components/schemas/MapStringToString'\n            - description: The SMS attribute names and their values.\n      description: The response from the <code>GetSMSAttributes</code> request.\n    GetSMSSandboxAccountStatusResult:\n      type: object\n      required:\n        - IsInSandbox\n      properties:\n        IsInSandbox:\n          allOf:\n            - $ref: '#/components/schemas/boolean'\n            - description: Indicates whether the calling account is in the SMS sandbox.\n    GetSubscriptionAttributesResponse:\n      type: object\n      properties:\n        Attributes:\n          allOf:\n            - $ref: '#/components/schemas/SubscriptionAttributesMap'\n            - description: '<p>A map of the subscription''s attributes. Attributes in this map include the following:</p> <ul> <li> <p> <code>ConfirmationWasAuthenticated</code> – <code>true</code> if the subscription confirmation request was authenticated.</p> </li> <li> <p> <code>DeliveryPolicy</code> – The JSON serialization of the subscription''s delivery policy.</p> </li> <li> <p> <code>EffectiveDeliveryPolicy</code> – The JSON serialization of the effective delivery policy that takes into account the topic delivery policy and account system defaults.</p> </li> <li> <p> <code>FilterPolicy</code> – The filter policy JSON that is assigned to the subscription. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-message-filtering.html\">Amazon SNS Message Filtering</a> in the <i>Amazon SNS Developer Guide</i>.</p> </li> <li> <p> <code>Owner</code> – The account ID of the subscription''s owner.</p> </li> <li> <p> <code>PendingConfirmation</code> – <code>true</code> if the subscription hasn''t been confirmed. To confirm a pending subscription, call the <code>ConfirmSubscription</code> action with a confirmation token.</p> </li> <li> <p> <code>RawMessageDelivery</code> – <code>true</code> if raw message delivery is enabled for the subscription. Raw messages are free of JSON formatting and can be sent to HTTP/S and Amazon SQS endpoints.</p> </li> <li> <p> <code>RedrivePolicy</code> – When specified, sends undeliverable messages to the specified Amazon SQS dead-letter queue. Messages that can''t be delivered due to client errors (for example, when the subscribed endpoint is unreachable) or server errors (for example, when the service that powers the subscribed endpoint becomes unavailable) are held in the dead-letter queue for further analysis or reprocessing.</p> </li> <li> <p> <code>SubscriptionArn</code> – The subscription''s ARN.</p> </li> <li> <p> <code>TopicArn</code> – The topic ARN that the subscription is associated with.</p> </li> </ul> <p>The following attribute applies only to Amazon Kinesis Data Firehose delivery stream subscriptions:</p> <ul> <li> <p> <code>SubscriptionRoleArn</code> – The ARN of the IAM role that has the following:</p> <ul> <li> <p>Permission to write to the Kinesis Data Firehose delivery stream</p> </li> <li> <p>Amazon SNS listed as a trusted entity</p> </li> </ul> <p>Specifying a valid ARN for this attribute is required for Kinesis Data Firehose delivery stream subscriptions. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-firehose-as-subscriber.html\">Fanout to Kinesis Data Firehose delivery streams</a> in the <i>Amazon SNS Developer Guide</i>.</p> </li> </ul>'\n      description: Response for GetSubscriptionAttributes action.\n    GetTopicAttributesResponse:\n      type: object\n      properties:\n        Attributes:\n          allOf:\n            - $ref: '#/components/schemas/TopicAttributesMap'\n            - description: '<p>A map of the topic''s attributes. Attributes in this map include the following:</p> <ul> <li> <p> <code>DeliveryPolicy</code> – The JSON serialization of the topic''s delivery policy.</p> </li> <li> <p> <code>DisplayName</code> – The human-readable name used in the <code>From</code> field for notifications to <code>email</code> and <code>email-json</code> endpoints.</p> </li> <li> <p> <code>Owner</code> – The account ID of the topic''s owner.</p> </li> <li> <p> <code>Policy</code> – The JSON serialization of the topic''s access control policy.</p> </li> <li> <p> <code>SubscriptionsConfirmed</code> – The number of confirmed subscriptions for the topic.</p> </li> <li> <p> <code>SubscriptionsDeleted</code> – The number of deleted subscriptions for the topic.</p> </li> <li> <p> <code>SubscriptionsPending</code> – The number of subscriptions pending confirmation for the topic.</p> </li> <li> <p> <code>TopicArn</code> – The topic''s ARN.</p> </li> <li> <p> <code>EffectiveDeliveryPolicy</code> – The JSON serialization of the effective delivery policy, taking system defaults into account.</p> </li> </ul> <p>The following attribute applies only to <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html\">server-side-encryption</a>:</p> <ul> <li> <p> <code>KmsMasterKeyId</code> - The ID of an Amazon Web Services managed customer master key (CMK) for Amazon SNS or a custom CMK. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms\">Key Terms</a>. For more examples, see <a href=\"https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters\">KeyId</a> in the <i>Key Management Service API Reference</i>.</p> </li> </ul> <p>The following attributes apply only to <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-fifo-topics.html\">FIFO topics</a>:</p> <ul> <li> <p> <code>FifoTopic</code> – When this is set to <code>true</code>, a FIFO topic is created.</p> </li> <li> <p> <code>ContentBasedDeduplication</code> – Enables content-based deduplication for FIFO topics.</p> <ul> <li> <p>By default, <code>ContentBasedDeduplication</code> is set to <code>false</code>. If you create a FIFO topic and this attribute is <code>false</code>, you must specify a value for the <code>MessageDeduplicationId</code> parameter for the <a href=\"https://docs.aws.amazon.com/sns/latest/api/API_Publish.html\">Publish</a> action. </p> </li> <li> <p>When you set <code>ContentBasedDeduplication</code> to <code>true</code>, Amazon SNS uses a SHA-256 hash to generate the <code>MessageDeduplicationId</code> using the body of the message (but not the attributes of the message).</p> <p>(Optional) To override the generated value, you can specify a value for the <code>MessageDeduplicationId</code> parameter for the <code>Publish</code> action.</p> </li> </ul> </li> </ul>'\n      description: Response for GetTopicAttributes action.\n    ListEndpointsByPlatformApplicationResponse:\n      type: object\n      properties:\n        Endpoints:\n          allOf:\n            - $ref: '#/components/schemas/ListOfEndpoints'\n            - description: Endpoints returned for ListEndpointsByPlatformApplication action.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: NextToken string is returned when calling ListEndpointsByPlatformApplication action if additional records are available after the first page results.\n      description: Response for ListEndpointsByPlatformApplication action.\n    ListOriginationNumbersResult:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/nextToken'\n            - description: A <code>NextToken</code> string is returned when you call the <code>ListOriginationNumbers</code> operation if additional pages of records are available.\n        PhoneNumbers:\n          allOf:\n            - $ref: '#/components/schemas/PhoneNumberInformationList'\n            - description: A list of the calling account's verified and pending origination numbers.\n    ValidationException: {}\n    ListPhoneNumbersOptedOutResponse:\n      type: object\n      properties:\n        phoneNumbers:\n          allOf:\n            - $ref: '#/components/schemas/PhoneNumberList'\n            - description: 'A list of phone numbers that are opted out of receiving SMS messages. The list is paginated, and each page can contain up to 100 phone numbers.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A <code>NextToken</code> string is returned when you call the <code>ListPhoneNumbersOptedOut</code> action if additional records are available after the first page of results.\n      description: The response from the <code>ListPhoneNumbersOptedOut</code> action.\n    ListPlatformApplicationsResponse:\n      type: object\n      properties:\n        PlatformApplications:\n          allOf:\n            - $ref: '#/components/schemas/ListOfPlatformApplications'\n            - description: Platform applications returned when calling ListPlatformApplications action.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: NextToken string is returned when calling ListPlatformApplications action if additional records are available after the first page results.\n      description: Response for ListPlatformApplications action.\n    ListSMSSandboxPhoneNumbersResult:\n      type: object\n      required:\n        - PhoneNumbers\n      properties:\n        PhoneNumbers:\n          allOf:\n            - $ref: '#/components/schemas/SMSSandboxPhoneNumberList'\n            - description: A list of the calling account's pending and verified phone numbers.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A <code>NextToken</code> string is returned when you call the <code>ListSMSSandboxPhoneNumbersInput</code> operation if additional pages of records are available.\n    ListSubscriptionsResponse:\n      type: object\n      properties:\n        Subscriptions:\n          allOf:\n            - $ref: '#/components/schemas/SubscriptionsList'\n            - description: A list of subscriptions.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/nextToken'\n            - description: Token to pass along to the next <code>ListSubscriptions</code> request. This element is returned if there are more subscriptions to retrieve.\n      description: Response for ListSubscriptions action\n    ListSubscriptionsByTopicResponse:\n      type: object\n      properties:\n        Subscriptions:\n          allOf:\n            - $ref: '#/components/schemas/SubscriptionsList'\n            - description: A list of subscriptions.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/nextToken'\n            - description: Token to pass along to the next <code>ListSubscriptionsByTopic</code> request. This element is returned if there are more subscriptions to retrieve.\n      description: Response for ListSubscriptionsByTopic action.\n    ListTagsForResourceResponse:\n      type: object\n      properties:\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: The tags associated with the specified topic.\n    ListTopicsResponse:\n      type: object\n      properties:\n        Topics:\n          allOf:\n            - $ref: '#/components/schemas/TopicsList'\n            - description: A list of topic ARNs.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/nextToken'\n            - description: Token to pass along to the next <code>ListTopics</code> request. This element is returned if there are additional topics to retrieve.\n      description: Response for ListTopics action.\n    OptInPhoneNumberResponse:\n      type: object\n      properties: {}\n      description: The response for the OptInPhoneNumber action.\n    PublishResponse:\n      type: object\n      properties:\n        MessageId:\n          allOf:\n            - $ref: '#/components/schemas/messageId'\n            - description: '<p>Unique identifier assigned to the published message.</p> <p>Length Constraint: Maximum 100 characters</p>'\n        SequenceNumber:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '<p>This response element applies only to FIFO (first-in-first-out) topics. </p> <p>The sequence number is a large, non-consecutive number that Amazon SNS assigns to each message. The length of <code>SequenceNumber</code> is 128 bits. <code>SequenceNumber</code> continues to increase for each <code>MessageGroupId</code>.</p>'\n      description: Response for Publish action.\n    MessageAttributeValue:\n      type: object\n      required:\n        - DataType\n      properties:\n        DataType:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'Amazon SNS supports the following logical data types: String, String.Array, Number, and Binary. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMessageAttributes.html#SNSMessageAttributes.DataTypes\">Message Attribute Data Types</a>.'\n        StringValue:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'Strings are Unicode with UTF8 binary encoding. For a list of code values, see <a href=\"https://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters\">ASCII Printable Characters</a>.'\n        BinaryValue:\n          allOf:\n            - $ref: '#/components/schemas/Binary'\n            - description: 'Binary type attributes can store any binary data, for example, compressed data, encrypted data, or images.'\n      description: '<p>The user-specified message attribute value. For string data types, the value attribute has the same restrictions on the content as the message body. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/api/API_Publish.html\">Publish</a>.</p> <p>Name, type, and value must not be empty or null. In addition, the message body should not be empty or null. All parts of the message attribute, including name, type, and value, are included in the message size restriction, which is currently 256 KB (262,144 bytes). For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMessageAttributes.html\">Amazon SNS message attributes</a> and <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sms_publish-to-phone.html\">Publishing to a mobile phone</a> in the <i>Amazon SNS Developer Guide.</i> </p>'\n    InvalidParameterValueException: {}\n    EndpointDisabledException: {}\n    PlatformApplicationDisabledException: {}\n    KMSDisabledException: {}\n    KMSInvalidStateException: {}\n    KMSNotFoundException: {}\n    KMSOptInRequired: {}\n    KMSThrottlingException: {}\n    KMSAccessDeniedException: {}\n    SetSMSAttributesResponse:\n      type: object\n      properties: {}\n      description: The response for the SetSMSAttributes action.\n    SubscribeResponse:\n      type: object\n      properties:\n        SubscriptionArn:\n          allOf:\n            - $ref: '#/components/schemas/subscriptionARN'\n            - description: 'The ARN of the subscription if it is confirmed, or the string \"pending confirmation\" if the subscription requires confirmation. However, if the API request parameter <code>ReturnSubscriptionArn</code> is true, then the value is always the subscription ARN, even if the subscription requires confirmation.'\n      description: Response for Subscribe action.\n    TagResourceResponse:\n      type: object\n      properties: {}\n    UntagResourceResponse:\n      type: object\n      properties: {}\n    TagKey:\n      type: string\n      minLength: 1\n      maxLength: 128\n    VerifySMSSandboxPhoneNumberResult:\n      type: object\n      properties: {}\n      description: The destination phone number's verification status.\n    VerificationException: {}\n    ActionsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/action'\n    topicARN:\n      type: string\n    label:\n      type: string\n    DelegatesList:\n      type: array\n      items:\n        $ref: '#/components/schemas/delegate'\n    AddPermissionInput:\n      type: object\n      required:\n        - TopicArn\n        - Label\n        - AWSAccountId\n        - ActionName\n      title: AddPermissionInput\n      properties:\n        TopicArn:\n          allOf:\n            - $ref: '#/components/schemas/topicARN'\n            - description: The ARN of the topic whose access control policy you wish to modify.\n        Label:\n          allOf:\n            - $ref: '#/components/schemas/label'\n            - description: A unique identifier for the new policy statement.\n        AWSAccountId:\n          allOf:\n            - $ref: '#/components/schemas/DelegatesList'\n            - description: 'The account IDs of the users (principals) who will be given access to the specified actions. The users must have account, but do not need to be signed up for this service.'\n        ActionName:\n          allOf:\n            - $ref: '#/components/schemas/ActionsList'\n            - description: '<p>The action you want to allow for the specified principal(s).</p> <p>Valid values: Any Amazon SNS action name, for example <code>Publish</code>.</p>'\n    AmazonResourceName:\n      type: string\n      minLength: 1\n      maxLength: 1011\n    Binary:\n      type: string\n    PhoneNumber:\n      type: string\n    CheckIfPhoneNumberIsOptedOutInput:\n      type: object\n      required:\n        - phoneNumber\n      title: CheckIfPhoneNumberIsOptedOutInput\n      properties:\n        phoneNumber:\n          allOf:\n            - $ref: '#/components/schemas/PhoneNumber'\n            - description: The phone number for which you want to check the opt out status.\n      description: The input for the <code>CheckIfPhoneNumberIsOptedOut</code> action.\n    boolean:\n      type: boolean\n    token:\n      type: string\n    authenticateOnUnsubscribe:\n      type: string\n    ConfirmSubscriptionInput:\n      type: object\n      required:\n        - TopicArn\n        - Token\n      title: ConfirmSubscriptionInput\n      properties:\n        TopicArn:\n          allOf:\n            - $ref: '#/components/schemas/topicARN'\n            - description: The ARN of the topic for which you wish to confirm a subscription.\n        Token:\n          allOf:\n            - $ref: '#/components/schemas/token'\n            - description: Short-lived token sent to an endpoint during the <code>Subscribe</code> action.\n        AuthenticateOnUnsubscribe:\n          allOf:\n            - $ref: '#/components/schemas/authenticateOnUnsubscribe'\n            - description: 'Disallows unauthenticated unsubscribes of the subscription. If the value of this parameter is <code>true</code> and the request has an Amazon Web Services signature, then only the topic owner and the subscription owner can unsubscribe the endpoint. The unsubscribe action requires Amazon Web Services authentication. '\n      description: Input for ConfirmSubscription action.\n    subscriptionARN:\n      type: string\n    MapStringToString:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/String'\n    CreatePlatformApplicationInput:\n      type: object\n      required:\n        - Name\n        - Platform\n        - Attributes\n      title: CreatePlatformApplicationInput\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'Application names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, hyphens, and periods, and must be between 1 and 256 characters long.'\n        Platform:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The following platforms are supported: ADM (Amazon Device Messaging), APNS (Apple Push Notification Service), APNS_SANDBOX, and GCM (Firebase Cloud Messaging).'\n        Attributes:\n          allOf:\n            - $ref: '#/components/schemas/MapStringToString'\n            - description: 'For a list of attributes, see <a href=\"https://docs.aws.amazon.com/sns/latest/api/API_SetPlatformApplicationAttributes.html\">SetPlatformApplicationAttributes</a>.'\n      description: Input for CreatePlatformApplication action.\n    CreatePlatformEndpointInput:\n      type: object\n      required:\n        - PlatformApplicationArn\n        - Token\n      title: CreatePlatformEndpointInput\n      properties:\n        PlatformApplicationArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: PlatformApplicationArn returned from CreatePlatformApplication is used to create a an endpoint.\n        Token:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'Unique identifier created by the notification service for an app on a device. The specific name for Token will vary, depending on which notification service is being used. For example, when using APNS as the notification service, you need the device token. Alternatively, when using GCM (Firebase Cloud Messaging) or ADM, the device token equivalent is called the registration ID.'\n        CustomUserData:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Arbitrary user data to associate with the endpoint. Amazon SNS does not use this data. The data must be in UTF-8 format and less than 2KB.\n        Attributes:\n          allOf:\n            - $ref: '#/components/schemas/MapStringToString'\n            - description: 'For a list of attributes, see <a href=\"https://docs.aws.amazon.com/sns/latest/api/API_SetEndpointAttributes.html\">SetEndpointAttributes</a>.'\n      description: Input for CreatePlatformEndpoint action.\n    PhoneNumberString:\n      type: string\n      pattern: '^(\\+[0-9]{8,}|[0-9]{0,9})$'\n      maxLength: 20\n    LanguageCodeString:\n      type: string\n      enum:\n        - en-US\n        - en-GB\n        - es-419\n        - es-ES\n        - de-DE\n        - fr-CA\n        - fr-FR\n        - it-IT\n        - ja-JP\n        - pt-BR\n        - kr-KR\n        - zh-CN\n        - zh-TW\n      description: Supported language code for sending OTP message\n    CreateSMSSandboxPhoneNumberInput:\n      type: object\n      required:\n        - PhoneNumber\n      title: CreateSMSSandboxPhoneNumberInput\n      properties:\n        PhoneNumber:\n          allOf:\n            - $ref: '#/components/schemas/PhoneNumberString'\n            - description: 'The destination phone number to verify. On verification, Amazon SNS adds this phone number to the list of verified phone numbers that you can send SMS messages to.'\n        LanguageCode:\n          allOf:\n            - $ref: '#/components/schemas/LanguageCodeString'\n            - description: The language to use for sending the OTP. The default value is <code>en-US</code>.\n    topicName:\n      type: string\n    TopicAttributesMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/attributeValue'\n    TagList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Tag'\n    CreateTopicInput:\n      type: object\n      required:\n        - Name\n      title: CreateTopicInput\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/topicName'\n            - description: '<p>The name of the topic you want to create.</p> <p>Constraints: Topic names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long.</p> <p>For a FIFO (first-in-first-out) topic, the name must end with the <code>.fifo</code> suffix. </p>'\n        Attributes:\n          allOf:\n            - $ref: '#/components/schemas/TopicAttributesMap'\n            - description: '<p>A map of attributes with their corresponding values.</p> <p>The following lists the names, descriptions, and values of the special request parameters that the <code>CreateTopic</code> action uses:</p> <ul> <li> <p> <code>DeliveryPolicy</code> – The policy that defines how Amazon SNS retries failed deliveries to HTTP/S endpoints.</p> </li> <li> <p> <code>DisplayName</code> – The display name to use for a topic with SMS subscriptions.</p> </li> <li> <p> <code>FifoTopic</code> – Set to true to create a FIFO topic.</p> </li> <li> <p> <code>Policy</code> – The policy that defines who can access your topic. By default, only the topic owner can publish or subscribe to the topic.</p> </li> </ul> <p>The following attribute applies only to <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html\">server-side encryption</a>:</p> <ul> <li> <p> <code>KmsMasterKeyId</code> – The ID of an Amazon Web Services managed customer master key (CMK) for Amazon SNS or a custom CMK. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms\">Key Terms</a>. For more examples, see <a href=\"https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters\">KeyId</a> in the <i>Key Management Service API Reference</i>. </p> </li> </ul> <p>The following attributes apply only to <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-fifo-topics.html\">FIFO topics</a>:</p> <ul> <li> <p> <code>FifoTopic</code> – When this is set to <code>true</code>, a FIFO topic is created.</p> </li> <li> <p> <code>ContentBasedDeduplication</code> – Enables content-based deduplication for FIFO topics.</p> <ul> <li> <p>By default, <code>ContentBasedDeduplication</code> is set to <code>false</code>. If you create a FIFO topic and this attribute is <code>false</code>, you must specify a value for the <code>MessageDeduplicationId</code> parameter for the <a href=\"https://docs.aws.amazon.com/sns/latest/api/API_Publish.html\">Publish</a> action. </p> </li> <li> <p>When you set <code>ContentBasedDeduplication</code> to <code>true</code>, Amazon SNS uses a SHA-256 hash to generate the <code>MessageDeduplicationId</code> using the body of the message (but not the attributes of the message).</p> <p>(Optional) To override the generated value, you can specify a value for the <code>MessageDeduplicationId</code> parameter for the <code>Publish</code> action.</p> </li> </ul> </li> </ul>'\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: '<p>The list of tags to add to a new topic.</p> <note> <p>To be able to tag a topic on creation, you must have the <code>sns:CreateTopic</code> and <code>sns:TagResource</code> permissions.</p> </note>'\n      description: Input for CreateTopic action.\n    DeleteEndpointInput:\n      type: object\n      required:\n        - EndpointArn\n      title: DeleteEndpointInput\n      properties:\n        EndpointArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: EndpointArn of endpoint to delete.\n      description: Input for DeleteEndpoint action.\n    DeletePlatformApplicationInput:\n      type: object\n      required:\n        - PlatformApplicationArn\n      title: DeletePlatformApplicationInput\n      properties:\n        PlatformApplicationArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: PlatformApplicationArn of platform application object to delete.\n      description: Input for DeletePlatformApplication action.\n    DeleteSMSSandboxPhoneNumberInput:\n      type: object\n      required:\n        - PhoneNumber\n      title: DeleteSMSSandboxPhoneNumberInput\n      properties:\n        PhoneNumber:\n          allOf:\n            - $ref: '#/components/schemas/PhoneNumberString'\n            - description: The destination phone number to delete.\n    DeleteTopicInput:\n      type: object\n      required:\n        - TopicArn\n      title: DeleteTopicInput\n      properties:\n        TopicArn:\n          allOf:\n            - $ref: '#/components/schemas/topicARN'\n            - description: The ARN of the topic you want to delete.\n    Endpoint:\n      type: object\n      properties:\n        EndpointArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: EndpointArn for mobile app and device.\n        Attributes:\n          allOf:\n            - $ref: '#/components/schemas/MapStringToString'\n            - description: Attributes for endpoint.\n      description: Endpoint for mobile app and device.\n    GetEndpointAttributesInput:\n      type: object\n      required:\n        - EndpointArn\n      title: GetEndpointAttributesInput\n      properties:\n        EndpointArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: EndpointArn for GetEndpointAttributes input.\n      description: Input for GetEndpointAttributes action.\n    GetPlatformApplicationAttributesInput:\n      type: object\n      required:\n        - PlatformApplicationArn\n      title: GetPlatformApplicationAttributesInput\n      properties:\n        PlatformApplicationArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: PlatformApplicationArn for GetPlatformApplicationAttributesInput.\n      description: Input for GetPlatformApplicationAttributes action.\n    ListString:\n      type: array\n      items:\n        $ref: '#/components/schemas/String'\n    GetSMSAttributesInput:\n      type: object\n      title: GetSMSAttributesInput\n      properties:\n        attributes:\n          allOf:\n            - $ref: '#/components/schemas/ListString'\n            - description: '<p>A list of the individual attribute names, such as <code>MonthlySpendLimit</code>, for which you want values.</p> <p>For all attribute names, see <a href=\"https://docs.aws.amazon.com/sns/latest/api/API_SetSMSAttributes.html\">SetSMSAttributes</a>.</p> <p>If you don''t use this parameter, Amazon SNS returns all SMS attributes.</p>'\n      description: The input for the <code>GetSMSAttributes</code> request.\n    GetSMSSandboxAccountStatusInput:\n      type: object\n      title: GetSMSSandboxAccountStatusInput\n      properties: {}\n    GetSubscriptionAttributesInput:\n      type: object\n      required:\n        - SubscriptionArn\n      title: GetSubscriptionAttributesInput\n      properties:\n        SubscriptionArn:\n          allOf:\n            - $ref: '#/components/schemas/subscriptionARN'\n            - description: The ARN of the subscription whose properties you want to get.\n      description: Input for GetSubscriptionAttributes.\n    SubscriptionAttributesMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/attributeValue'\n    GetTopicAttributesInput:\n      type: object\n      required:\n        - TopicArn\n      title: GetTopicAttributesInput\n      properties:\n        TopicArn:\n          allOf:\n            - $ref: '#/components/schemas/topicARN'\n            - description: The ARN of the topic whose properties you want to get.\n      description: Input for GetTopicAttributes action.\n    Iso2CountryCode:\n      type: string\n      pattern: '^[A-Za-z]{2}$'\n      description: 'The two-character code, in ISO 3166-1 alpha-2 format, for the country or region. For example, GB or US.'\n      maxLength: 2\n    ListEndpointsByPlatformApplicationInput:\n      type: object\n      required:\n        - PlatformApplicationArn\n      title: ListEndpointsByPlatformApplicationInput\n      properties:\n        PlatformApplicationArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: PlatformApplicationArn for ListEndpointsByPlatformApplicationInput action.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: NextToken string is used when calling ListEndpointsByPlatformApplication action to retrieve additional records that are available after the first page results.\n      description: Input for ListEndpointsByPlatformApplication action.\n    ListOfEndpoints:\n      type: array\n      items:\n        $ref: '#/components/schemas/Endpoint'\n    PlatformApplication:\n      type: object\n      properties:\n        PlatformApplicationArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: PlatformApplicationArn for platform application object.\n        Attributes:\n          allOf:\n            - $ref: '#/components/schemas/MapStringToString'\n            - description: Attributes for platform application object.\n      description: Platform application object.\n    ListOfPlatformApplications:\n      type: array\n      items:\n        $ref: '#/components/schemas/PlatformApplication'\n    nextToken:\n      type: string\n    MaxItemsListOriginationNumbers:\n      type: integer\n      minimum: 1\n      maximum: 30\n    ListOriginationNumbersRequest:\n      type: object\n      title: ListOriginationNumbersRequest\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/nextToken'\n            - description: Token that the previous <code>ListOriginationNumbers</code> request returns.\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxItemsListOriginationNumbers'\n            - description: The maximum number of origination numbers to return.\n    PhoneNumberInformationList:\n      type: array\n      description: List of customer owned phone numbers.\n      items:\n        $ref: '#/components/schemas/PhoneNumberInformation'\n    string:\n      type: string\n    ListPhoneNumbersOptedOutInput:\n      type: object\n      title: ListPhoneNumbersOptedOutInput\n      properties:\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A <code>NextToken</code> string is used when you call the <code>ListPhoneNumbersOptedOut</code> action to retrieve additional records that are available after the first page of results.\n      description: The input for the <code>ListPhoneNumbersOptedOut</code> action.\n    PhoneNumberList:\n      type: array\n      items:\n        $ref: '#/components/schemas/PhoneNumber'\n    ListPlatformApplicationsInput:\n      type: object\n      title: ListPlatformApplicationsInput\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: NextToken string is used when calling ListPlatformApplications action to retrieve additional records that are available after the first page results.\n      description: Input for ListPlatformApplications action.\n    MaxItems:\n      type: integer\n      minimum: 1\n      maximum: 100\n    ListSMSSandboxPhoneNumbersInput:\n      type: object\n      title: ListSMSSandboxPhoneNumbersInput\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/nextToken'\n            - description: Token that the previous <code>ListSMSSandboxPhoneNumbersInput</code> request returns.\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxItems'\n            - description: The maximum number of phone numbers to return.\n    SMSSandboxPhoneNumberList:\n      type: array\n      items:\n        $ref: '#/components/schemas/SMSSandboxPhoneNumber'\n    ListSubscriptionsByTopicInput:\n      type: object\n      required:\n        - TopicArn\n      title: ListSubscriptionsByTopicInput\n      properties:\n        TopicArn:\n          allOf:\n            - $ref: '#/components/schemas/topicARN'\n            - description: The ARN of the topic for which you wish to find subscriptions.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/nextToken'\n            - description: Token returned by the previous <code>ListSubscriptionsByTopic</code> request.\n      description: Input for ListSubscriptionsByTopic action.\n    SubscriptionsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Subscription'\n    ListSubscriptionsInput:\n      type: object\n      title: ListSubscriptionsInput\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/nextToken'\n            - description: Token returned by the previous <code>ListSubscriptions</code> request.\n      description: Input for ListSubscriptions action.\n    ListTagsForResourceRequest:\n      type: object\n      required:\n        - ResourceArn\n      title: ListTagsForResourceRequest\n      properties:\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/AmazonResourceName'\n            - description: The ARN of the topic for which to list tags.\n    ListTopicsInput:\n      type: object\n      title: ListTopicsInput\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/nextToken'\n            - description: Token returned by the previous <code>ListTopics</code> request.\n    TopicsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Topic'\n    MessageAttributeMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/MessageAttributeValue'\n    NumberCapability:\n      type: string\n      enum:\n        - SMS\n        - MMS\n        - VOICE\n      description: Enum listing out all supported number capabilities.\n    NumberCapabilityList:\n      type: array\n      description: 'List of number capability (SMS,MMS,Voice).'\n      items:\n        $ref: '#/components/schemas/NumberCapability'\n    OTPCode:\n      type: string\n      pattern: '^[0-9]+$'\n      description: String of Origination/Destination address including phone numbers and email addresses\n      minLength: 5\n      maxLength: 8\n    OptInPhoneNumberInput:\n      type: object\n      required:\n        - phoneNumber\n      title: OptInPhoneNumberInput\n      properties:\n        phoneNumber:\n          allOf:\n            - $ref: '#/components/schemas/PhoneNumber'\n            - description: The phone number to opt in. Use E.164 format.\n      description: Input for the OptInPhoneNumber action.\n    Timestamp:\n      type: string\n      format: date-time\n    RouteType:\n      type: string\n      enum:\n        - Transactional\n        - Promotional\n        - Premium\n      description: 'Enum listing out all supported route types. The following enum values are supported. 1. Transactional : Non-marketing traffic 2. Promotional : Marketing 3. Premium : Premium routes for OTP delivery to the carriers'\n    PhoneNumberInformation:\n      type: object\n      properties:\n        CreatedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The date and time when the phone number was created.\n        PhoneNumber:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The phone number.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The status of the phone number.\n        Iso2CountryCode:\n          allOf:\n            - $ref: '#/components/schemas/Iso2CountryCode'\n            - description: 'The two-character code for the country or region, in ISO 3166-1 alpha-2 format.'\n        RouteType:\n          allOf:\n            - $ref: '#/components/schemas/RouteType'\n            - description: The list of supported routes.\n        NumberCapabilities:\n          allOf:\n            - $ref: '#/components/schemas/NumberCapabilityList'\n            - description: The capabilities of each phone number.\n      description: A list of phone numbers and their metadata.\n    message:\n      type: string\n    subject:\n      type: string\n    messageStructure:\n      type: string\n    PublishInput:\n      type: object\n      required:\n        - Message\n      title: PublishInput\n      properties:\n        TopicArn:\n          allOf:\n            - $ref: '#/components/schemas/topicARN'\n            - description: '<p>The topic you want to publish to.</p> <p>If you don''t specify a value for the <code>TopicArn</code> parameter, you must specify a value for the <code>PhoneNumber</code> or <code>TargetArn</code> parameters.</p>'\n        TargetArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'If you don''t specify a value for the <code>TargetArn</code> parameter, you must specify a value for the <code>PhoneNumber</code> or <code>TopicArn</code> parameters.'\n        PhoneNumber:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '<p>The phone number to which you want to deliver an SMS message. Use E.164 format.</p> <p>If you don''t specify a value for the <code>PhoneNumber</code> parameter, you must specify a value for the <code>TargetArn</code> or <code>TopicArn</code> parameters.</p>'\n        Message:\n          allOf:\n            - $ref: '#/components/schemas/message'\n            - description: '<p>The message you want to send.</p> <p>If you are publishing to a topic and you want to send the same message to all transport protocols, include the text of the message as a String value. If you want to send different messages for each transport protocol, set the value of the <code>MessageStructure</code> parameter to <code>json</code> and use a JSON object for the <code>Message</code> parameter. </p> <p/> <p>Constraints:</p> <ul> <li> <p>With the exception of SMS, messages must be UTF-8 encoded strings and at most 256 KB in size (262,144 bytes, not 262,144 characters).</p> </li> <li> <p>For SMS, each message can contain up to 140 characters. This character limit depends on the encoding schema. For example, an SMS message can contain 160 GSM characters, 140 ASCII characters, or 70 UCS-2 characters.</p> <p>If you publish a message that exceeds this size limit, Amazon SNS sends the message as multiple messages, each fitting within the size limit. Messages aren''t truncated mid-word but are cut off at whole-word boundaries.</p> <p>The total size limit for a single SMS <code>Publish</code> action is 1,600 characters.</p> </li> </ul> <p>JSON-specific constraints:</p> <ul> <li> <p>Keys in the JSON object that correspond to supported transport protocols must have simple JSON string values.</p> </li> <li> <p>The values will be parsed (unescaped) before they are used in outgoing messages.</p> </li> <li> <p>Outbound notifications are JSON encoded (meaning that the characters will be reescaped for sending).</p> </li> <li> <p>Values have a minimum length of 0 (the empty string, \"\", is allowed).</p> </li> <li> <p>Values have a maximum length bounded by the overall message size (so, including multiple protocols may limit message sizes).</p> </li> <li> <p>Non-string values will cause the key to be ignored.</p> </li> <li> <p>Keys that do not correspond to supported transport protocols are ignored.</p> </li> <li> <p>Duplicate keys are not allowed.</p> </li> <li> <p>Failure to parse or validate any key or value in the message will cause the <code>Publish</code> call to return an error (no partial delivery).</p> </li> </ul>'\n        Subject:\n          allOf:\n            - $ref: '#/components/schemas/subject'\n            - description: '<p>Optional parameter to be used as the \"Subject\" line when the message is delivered to email endpoints. This field will also be included, if present, in the standard JSON messages delivered to other endpoints.</p> <p>Constraints: Subjects must be ASCII text that begins with a letter, number, or punctuation mark; must not include line breaks or control characters; and must be less than 100 characters long.</p>'\n        MessageStructure:\n          allOf:\n            - $ref: '#/components/schemas/messageStructure'\n            - description: '<p>Set <code>MessageStructure</code> to <code>json</code> if you want to send a different message for each protocol. For example, using one publish action, you can send a short message to your SMS subscribers and a longer message to your email subscribers. If you set <code>MessageStructure</code> to <code>json</code>, the value of the <code>Message</code> parameter must: </p> <ul> <li> <p>be a syntactically valid JSON object; and</p> </li> <li> <p>contain at least a top-level JSON key of \"default\" with a value that is a string.</p> </li> </ul> <p>You can define other top-level keys that define the message you want to send to a specific transport protocol (e.g., \"http\").</p> <p>Valid value: <code>json</code> </p>'\n        MessageAttributes:\n          allOf:\n            - $ref: '#/components/schemas/MessageAttributeMap'\n            - description: Message attributes for Publish action.\n        MessageDeduplicationId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '<p>This parameter applies only to FIFO (first-in-first-out) topics. The <code>MessageDeduplicationId</code> can contain up to 128 alphanumeric characters (a-z, A-Z, 0-9) and punctuation <code>(!\"#$%&amp;''()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~)</code>.</p> <p>Every message must have a unique <code>MessageDeduplicationId</code>, which is a token used for deduplication of sent messages. If a message with a particular <code>MessageDeduplicationId</code> is sent successfully, any message sent with the same <code>MessageDeduplicationId</code> during the 5-minute deduplication interval is treated as a duplicate. </p> <p>If the topic has <code>ContentBasedDeduplication</code> set, the system generates a <code>MessageDeduplicationId</code> based on the contents of the message. Your <code>MessageDeduplicationId</code> overrides the generated one.</p>'\n        MessageGroupId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '<p>This parameter applies only to FIFO (first-in-first-out) topics. The <code>MessageGroupId</code> can contain up to 128 alphanumeric characters (a-z, A-Z, 0-9) and punctuation <code>(!\"#$%&amp;''()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~)</code>.</p> <p>The <code>MessageGroupId</code> is a tag that specifies that a message belongs to a specific message group. Messages that belong to the same message group are processed in a FIFO manner (however, messages in different message groups might be processed out of order). Every message must include a <code>MessageGroupId</code>.</p>'\n      description: Input for Publish action.\n    messageId:\n      type: string\n    RemovePermissionInput:\n      type: object\n      required:\n        - TopicArn\n        - Label\n      title: RemovePermissionInput\n      properties:\n        TopicArn:\n          allOf:\n            - $ref: '#/components/schemas/topicARN'\n            - description: The ARN of the topic whose access control policy you wish to modify.\n        Label:\n          allOf:\n            - $ref: '#/components/schemas/label'\n            - description: The unique label of the statement you want to remove.\n      description: Input for RemovePermission action.\n    SMSSandboxPhoneNumberVerificationStatus:\n      type: string\n      enum:\n        - Pending\n        - Verified\n      description: 'Enum listing out all supported destination phone number verification statuses. The following enum values are supported. 1. PENDING : The destination phone number is pending verification. 2. VERIFIED : The destination phone number is verified.'\n    SMSSandboxPhoneNumber:\n      type: object\n      properties:\n        PhoneNumber:\n          allOf:\n            - $ref: '#/components/schemas/PhoneNumberString'\n            - description: The destination phone number.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/SMSSandboxPhoneNumberVerificationStatus'\n            - description: The destination phone number's verification status.\n      description: '<p>A verified or pending destination phone number in the SMS sandbox.</p> <p>When you start using Amazon SNS to send SMS messages, your account is in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment for you to try Amazon SNS features without risking your reputation as an SMS sender. While your account is in the SMS sandbox, you can use all of the features of Amazon SNS. However, you can send SMS messages only to verified destination phone numbers. For more information, including how to move out of the sandbox to send messages without restrictions, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>'\n    SetEndpointAttributesInput:\n      type: object\n      required:\n        - EndpointArn\n        - Attributes\n      title: SetEndpointAttributesInput\n      properties:\n        EndpointArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: EndpointArn used for SetEndpointAttributes action.\n        Attributes:\n          allOf:\n            - $ref: '#/components/schemas/MapStringToString'\n            - description: '<p>A map of the endpoint attributes. Attributes in this map include the following:</p> <ul> <li> <p> <code>CustomUserData</code> – arbitrary user data to associate with the endpoint. Amazon SNS does not use this data. The data must be in UTF-8 format and less than 2KB.</p> </li> <li> <p> <code>Enabled</code> – flag that enables/disables delivery to the endpoint. Amazon SNS will set this to false when a notification service indicates to Amazon SNS that the endpoint is invalid. Users can set it back to true, typically after updating Token.</p> </li> <li> <p> <code>Token</code> – device token, also referred to as a registration id, for an app and mobile device. This is returned from the notification service when an app and mobile device are registered with the notification service.</p> </li> </ul>'\n      description: Input for SetEndpointAttributes action.\n    SetPlatformApplicationAttributesInput:\n      type: object\n      required:\n        - PlatformApplicationArn\n        - Attributes\n      title: SetPlatformApplicationAttributesInput\n      properties:\n        PlatformApplicationArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: PlatformApplicationArn for SetPlatformApplicationAttributes action.\n        Attributes:\n          allOf:\n            - $ref: '#/components/schemas/MapStringToString'\n            - description: '<p>A map of the platform application attributes. Attributes in this map include the following:</p> <ul> <li> <p> <code>PlatformCredential</code> – The credential received from the notification service. For <code>APNS</code> and <code>APNS_SANDBOX</code>, <code>PlatformCredential</code> is <code>private key</code>. For <code>GCM</code> (Firebase Cloud Messaging), <code>PlatformCredential</code> is <code>API key</code>. For <code>ADM</code>, <code>PlatformCredential</code> is <code>client secret</code>.</p> </li> <li> <p> <code>PlatformPrincipal</code> – The principal received from the notification service. For <code>APNS</code> and <code>APNS_SANDBOX</code>, <code>PlatformPrincipal</code> is <code>SSL certificate</code>. For <code>GCM</code> (Firebase Cloud Messaging), there is no <code>PlatformPrincipal</code>. For <code>ADM</code>, <code>PlatformPrincipal</code> is <code>client id</code>.</p> </li> <li> <p> <code>EventEndpointCreated</code> – Topic ARN to which <code>EndpointCreated</code> event notifications are sent.</p> </li> <li> <p> <code>EventEndpointDeleted</code> – Topic ARN to which <code>EndpointDeleted</code> event notifications are sent.</p> </li> <li> <p> <code>EventEndpointUpdated</code> – Topic ARN to which <code>EndpointUpdate</code> event notifications are sent.</p> </li> <li> <p> <code>EventDeliveryFailure</code> – Topic ARN to which <code>DeliveryFailure</code> event notifications are sent upon Direct Publish delivery failure (permanent) to one of the application''s endpoints.</p> </li> <li> <p> <code>SuccessFeedbackRoleArn</code> – IAM role ARN used to give Amazon SNS write access to use CloudWatch Logs on your behalf.</p> </li> <li> <p> <code>FailureFeedbackRoleArn</code> – IAM role ARN used to give Amazon SNS write access to use CloudWatch Logs on your behalf.</p> </li> <li> <p> <code>SuccessFeedbackSampleRate</code> – Sample rate percentage (0-100) of successfully delivered messages.</p> </li> </ul>'\n      description: Input for SetPlatformApplicationAttributes action.\n    SetSMSAttributesInput:\n      type: object\n      required:\n        - attributes\n      title: SetSMSAttributesInput\n      properties:\n        attributes:\n          allOf:\n            - $ref: '#/components/schemas/MapStringToString'\n            - description: '<p>The default settings for sending SMS messages from your account. You can set values for the following attribute names:</p> <p> <code>MonthlySpendLimit</code> – The maximum amount in USD that you are willing to spend each month to send SMS messages. When Amazon SNS determines that sending an SMS message would incur a cost that exceeds this limit, it stops sending SMS messages within minutes.</p> <important> <p>Amazon SNS stops sending SMS messages within minutes of the limit being crossed. During that interval, if you continue to send SMS messages, you will incur costs that exceed your limit.</p> </important> <p>By default, the spend limit is set to the maximum allowed by Amazon SNS. If you want to raise the limit, submit an <a href=\"https://console.aws.amazon.com/support/home#/case/create?issueType=service-limit-increase&amp;limitType=service-code-sns\">SNS Limit Increase case</a>. For <b>New limit value</b>, enter your desired monthly spend limit. In the <b>Use Case Description</b> field, explain that you are requesting an SMS monthly spend limit increase.</p> <p> <code>DeliveryStatusIAMRole</code> – The ARN of the IAM role that allows Amazon SNS to write logs about SMS deliveries in CloudWatch Logs. For each SMS message that you send, Amazon SNS writes a log that includes the message price, the success or failure status, the reason for failure (if the message failed), the message dwell time, and other information.</p> <p> <code>DeliveryStatusSuccessSamplingRate</code> – The percentage of successful SMS deliveries for which Amazon SNS will write logs in CloudWatch Logs. The value can be an integer from 0 - 100. For example, to write logs only for failed deliveries, set this value to <code>0</code>. To write logs for 10% of your successful deliveries, set it to <code>10</code>.</p> <p> <code>DefaultSenderID</code> – A string, such as your business brand, that is displayed as the sender on the receiving device. Support for sender IDs varies by country. The sender ID can be 1 - 11 alphanumeric characters, and it must contain at least one letter.</p> <p> <code>DefaultSMSType</code> – The type of SMS message that you will send by default. You can assign the following values:</p> <ul> <li> <p> <code>Promotional</code> – (Default) Noncritical messages, such as marketing messages. Amazon SNS optimizes the message delivery to incur the lowest cost.</p> </li> <li> <p> <code>Transactional</code> – Critical messages that support customer transactions, such as one-time passcodes for multi-factor authentication. Amazon SNS optimizes the message delivery to achieve the highest reliability.</p> </li> </ul> <p> <code>UsageReportS3Bucket</code> – The name of the Amazon S3 bucket to receive daily SMS usage reports from Amazon SNS. Each day, Amazon SNS will deliver a usage report as a CSV file to the bucket. The report includes the following information for each SMS message that was successfully delivered by your account:</p> <ul> <li> <p>Time that the message was published (in UTC)</p> </li> <li> <p>Message ID</p> </li> <li> <p>Destination phone number</p> </li> <li> <p>Message type</p> </li> <li> <p>Delivery status</p> </li> <li> <p>Message price (in USD)</p> </li> <li> <p>Part number (a message is split into multiple parts if it is too long for a single message)</p> </li> <li> <p>Total number of parts</p> </li> </ul> <p>To receive the report, the bucket must have a policy that allows the Amazon SNS service principal to perform the <code>s3:PutObject</code> and <code>s3:GetBucketLocation</code> actions.</p> <p>For an example bucket policy and usage report, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sms_stats.html\">Monitoring SMS Activity</a> in the <i>Amazon SNS Developer Guide</i>.</p>'\n      description: The input for the SetSMSAttributes action.\n    attributeName:\n      type: string\n    SetSubscriptionAttributesInput:\n      type: object\n      required:\n        - SubscriptionArn\n        - AttributeName\n      title: SetSubscriptionAttributesInput\n      properties:\n        SubscriptionArn:\n          allOf:\n            - $ref: '#/components/schemas/subscriptionARN'\n            - description: The ARN of the subscription to modify.\n        AttributeName:\n          allOf:\n            - $ref: '#/components/schemas/attributeName'\n            - description: '<p>A map of attributes with their corresponding values.</p> <p>The following lists the names, descriptions, and values of the special request parameters that this action uses:</p> <ul> <li> <p> <code>DeliveryPolicy</code> – The policy that defines how Amazon SNS retries failed deliveries to HTTP/S endpoints.</p> </li> <li> <p> <code>FilterPolicy</code> – The simple JSON object that lets your subscriber receive only a subset of messages, rather than receiving every message published to the topic.</p> </li> <li> <p> <code>RawMessageDelivery</code> – When set to <code>true</code>, enables raw message delivery to Amazon SQS or HTTP/S endpoints. This eliminates the need for the endpoints to process JSON formatting, which is otherwise created for Amazon SNS metadata.</p> </li> <li> <p> <code>RedrivePolicy</code> – When specified, sends undeliverable messages to the specified Amazon SQS dead-letter queue. Messages that can''t be delivered due to client errors (for example, when the subscribed endpoint is unreachable) or server errors (for example, when the service that powers the subscribed endpoint becomes unavailable) are held in the dead-letter queue for further analysis or reprocessing.</p> </li> </ul> <p>The following attribute applies only to Amazon Kinesis Data Firehose delivery stream subscriptions:</p> <ul> <li> <p> <code>SubscriptionRoleArn</code> – The ARN of the IAM role that has the following:</p> <ul> <li> <p>Permission to write to the Kinesis Data Firehose delivery stream</p> </li> <li> <p>Amazon SNS listed as a trusted entity</p> </li> </ul> <p>Specifying a valid ARN for this attribute is required for Kinesis Data Firehose delivery stream subscriptions. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-firehose-as-subscriber.html\">Fanout to Kinesis Data Firehose delivery streams</a> in the <i>Amazon SNS Developer Guide</i>.</p> </li> </ul>'\n        AttributeValue:\n          allOf:\n            - $ref: '#/components/schemas/attributeValue'\n            - description: The new value for the attribute in JSON format.\n      description: Input for SetSubscriptionAttributes action.\n    SetTopicAttributesInput:\n      type: object\n      required:\n        - TopicArn\n        - AttributeName\n      title: SetTopicAttributesInput\n      properties:\n        TopicArn:\n          allOf:\n            - $ref: '#/components/schemas/topicARN'\n            - description: The ARN of the topic to modify.\n        AttributeName:\n          allOf:\n            - $ref: '#/components/schemas/attributeName'\n            - description: '<p>A map of attributes with their corresponding values.</p> <p>The following lists the names, descriptions, and values of the special request parameters that the <code>SetTopicAttributes</code> action uses:</p> <ul> <li> <p> <code>DeliveryPolicy</code> – The policy that defines how Amazon SNS retries failed deliveries to HTTP/S endpoints.</p> </li> <li> <p> <code>DisplayName</code> – The display name to use for a topic with SMS subscriptions.</p> </li> <li> <p> <code>Policy</code> – The policy that defines who can access your topic. By default, only the topic owner can publish or subscribe to the topic.</p> </li> </ul> <p>The following attribute applies only to <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html\">server-side-encryption</a>:</p> <ul> <li> <p> <code>KmsMasterKeyId</code> – The ID of an Amazon Web Services managed customer master key (CMK) for Amazon SNS or a custom CMK. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms\">Key Terms</a>. For more examples, see <a href=\"https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters\">KeyId</a> in the <i>Key Management Service API Reference</i>. </p> </li> </ul> <p>The following attribute applies only to <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-fifo-topics.html\">FIFO topics</a>:</p> <ul> <li> <p> <code>ContentBasedDeduplication</code> – Enables content-based deduplication for FIFO topics.</p> <ul> <li> <p>By default, <code>ContentBasedDeduplication</code> is set to <code>false</code>. If you create a FIFO topic and this attribute is <code>false</code>, you must specify a value for the <code>MessageDeduplicationId</code> parameter for the <a href=\"https://docs.aws.amazon.com/sns/latest/api/API_Publish.html\">Publish</a> action. </p> </li> <li> <p>When you set <code>ContentBasedDeduplication</code> to <code>true</code>, Amazon SNS uses a SHA-256 hash to generate the <code>MessageDeduplicationId</code> using the body of the message (but not the attributes of the message).</p> <p>(Optional) To override the generated value, you can specify a value for the <code>MessageDeduplicationId</code> parameter for the <code>Publish</code> action.</p> </li> </ul> </li> </ul>'\n        AttributeValue:\n          allOf:\n            - $ref: '#/components/schemas/attributeValue'\n            - description: The new value for the attribute.\n      description: Input for SetTopicAttributes action.\n    protocol:\n      type: string\n    endpoint:\n      type: string\n    SubscribeInput:\n      type: object\n      required:\n        - TopicArn\n        - Protocol\n      title: SubscribeInput\n      properties:\n        TopicArn:\n          allOf:\n            - $ref: '#/components/schemas/topicARN'\n            - description: The ARN of the topic you want to subscribe to.\n        Protocol:\n          allOf:\n            - $ref: '#/components/schemas/protocol'\n            - description: '<p>The protocol that you want to use. Supported protocols include:</p> <ul> <li> <p> <code>http</code> – delivery of JSON-encoded message via HTTP POST</p> </li> <li> <p> <code>https</code> – delivery of JSON-encoded message via HTTPS POST</p> </li> <li> <p> <code>email</code> – delivery of message via SMTP</p> </li> <li> <p> <code>email-json</code> – delivery of JSON-encoded message via SMTP</p> </li> <li> <p> <code>sms</code> – delivery of message via SMS</p> </li> <li> <p> <code>sqs</code> – delivery of JSON-encoded message to an Amazon SQS queue</p> </li> <li> <p> <code>application</code> – delivery of JSON-encoded message to an EndpointArn for a mobile app and device</p> </li> <li> <p> <code>lambda</code> – delivery of JSON-encoded message to an Lambda function</p> </li> <li> <p> <code>firehose</code> – delivery of JSON-encoded message to an Amazon Kinesis Data Firehose delivery stream.</p> </li> </ul>'\n        Endpoint:\n          allOf:\n            - $ref: '#/components/schemas/endpoint'\n            - description: '<p>The endpoint that you want to receive notifications. Endpoints vary by protocol:</p> <ul> <li> <p>For the <code>http</code> protocol, the (public) endpoint is a URL beginning with <code>http://</code>.</p> </li> <li> <p>For the <code>https</code> protocol, the (public) endpoint is a URL beginning with <code>https://</code>.</p> </li> <li> <p>For the <code>email</code> protocol, the endpoint is an email address.</p> </li> <li> <p>For the <code>email-json</code> protocol, the endpoint is an email address.</p> </li> <li> <p>For the <code>sms</code> protocol, the endpoint is a phone number of an SMS-enabled device.</p> </li> <li> <p>For the <code>sqs</code> protocol, the endpoint is the ARN of an Amazon SQS queue.</p> </li> <li> <p>For the <code>application</code> protocol, the endpoint is the EndpointArn of a mobile app and device.</p> </li> <li> <p>For the <code>lambda</code> protocol, the endpoint is the ARN of an Lambda function.</p> </li> <li> <p>For the <code>firehose</code> protocol, the endpoint is the ARN of an Amazon Kinesis Data Firehose delivery stream.</p> </li> </ul>'\n        Attributes:\n          allOf:\n            - $ref: '#/components/schemas/SubscriptionAttributesMap'\n            - description: '<p>A map of attributes with their corresponding values.</p> <p>The following lists the names, descriptions, and values of the special request parameters that the <code>Subscribe</code> action uses:</p> <ul> <li> <p> <code>DeliveryPolicy</code> – The policy that defines how Amazon SNS retries failed deliveries to HTTP/S endpoints.</p> </li> <li> <p> <code>FilterPolicy</code> – The simple JSON object that lets your subscriber receive only a subset of messages, rather than receiving every message published to the topic.</p> </li> <li> <p> <code>RawMessageDelivery</code> – When set to <code>true</code>, enables raw message delivery to Amazon SQS or HTTP/S endpoints. This eliminates the need for the endpoints to process JSON formatting, which is otherwise created for Amazon SNS metadata.</p> </li> <li> <p> <code>RedrivePolicy</code> – When specified, sends undeliverable messages to the specified Amazon SQS dead-letter queue. Messages that can''t be delivered due to client errors (for example, when the subscribed endpoint is unreachable) or server errors (for example, when the service that powers the subscribed endpoint becomes unavailable) are held in the dead-letter queue for further analysis or reprocessing.</p> </li> </ul> <p>The following attribute applies only to Amazon Kinesis Data Firehose delivery stream subscriptions:</p> <ul> <li> <p> <code>SubscriptionRoleArn</code> – The ARN of the IAM role that has the following:</p> <ul> <li> <p>Permission to write to the Kinesis Data Firehose delivery stream</p> </li> <li> <p>Amazon SNS listed as a trusted entity</p> </li> </ul> <p>Specifying a valid ARN for this attribute is required for Kinesis Data Firehose delivery stream subscriptions. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-firehose-as-subscriber.html\">Fanout to Kinesis Data Firehose delivery streams</a> in the <i>Amazon SNS Developer Guide</i>.</p> </li> </ul>'\n        ReturnSubscriptionArn:\n          allOf:\n            - $ref: '#/components/schemas/boolean'\n            - description: '<p>Sets whether the response from the <code>Subscribe</code> request includes the subscription ARN, even if the subscription is not yet confirmed.</p> <p>If you set this parameter to <code>true</code>, the response includes the ARN in all cases, even if the subscription is not yet confirmed. In addition to the ARN for confirmed subscriptions, the response also includes the <code>pending subscription</code> ARN value for subscriptions that aren''t yet confirmed. A subscription becomes confirmed when the subscriber calls the <code>ConfirmSubscription</code> action with a confirmation token.</p> <p/> <p>The default value is <code>false</code>.</p>'\n      description: Input for Subscribe action.\n    account:\n      type: string\n    Subscription:\n      type: object\n      properties:\n        SubscriptionArn:\n          allOf:\n            - $ref: '#/components/schemas/subscriptionARN'\n            - description: The subscription's ARN.\n        Owner:\n          allOf:\n            - $ref: '#/components/schemas/account'\n            - description: The subscription's owner.\n        Protocol:\n          allOf:\n            - $ref: '#/components/schemas/protocol'\n            - description: The subscription's protocol.\n        Endpoint:\n          allOf:\n            - $ref: '#/components/schemas/endpoint'\n            - description: The subscription's endpoint (format depends on the protocol).\n        TopicArn:\n          allOf:\n            - $ref: '#/components/schemas/topicARN'\n            - description: The ARN of the subscription's topic.\n      description: A wrapper type for the attributes of an Amazon SNS subscription.\n    TagValue:\n      type: string\n      minLength: 0\n      maxLength: 256\n    TagKeyList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TagKey'\n    TagResourceRequest:\n      type: object\n      required:\n        - ResourceArn\n        - Tags\n      title: TagResourceRequest\n      properties:\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/AmazonResourceName'\n            - description: The ARN of the topic to which to add tags.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: The tags to be added to the specified topic. A tag consists of a required key and an optional value.\n    Topic:\n      type: object\n      properties:\n        TopicArn:\n          allOf:\n            - $ref: '#/components/schemas/topicARN'\n            - description: The topic's ARN.\n      description: 'A wrapper type for the topic''s Amazon Resource Name (ARN). To retrieve a topic''s attributes, use <code>GetTopicAttributes</code>.'\n    UnsubscribeInput:\n      type: object\n      required:\n        - SubscriptionArn\n      title: UnsubscribeInput\n      properties:\n        SubscriptionArn:\n          allOf:\n            - $ref: '#/components/schemas/subscriptionARN'\n            - description: The ARN of the subscription to be deleted.\n      description: Input for Unsubscribe action.\n    UntagResourceRequest:\n      type: object\n      required:\n        - ResourceArn\n        - TagKeys\n      title: UntagResourceRequest\n      properties:\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/AmazonResourceName'\n            - description: The ARN of the topic from which to remove tags.\n        TagKeys:\n          allOf:\n            - $ref: '#/components/schemas/TagKeyList'\n            - description: The list of tag keys to remove from the specified topic.\n    VerifySMSSandboxPhoneNumberInput:\n      type: object\n      required:\n        - PhoneNumber\n        - OneTimePassword\n      title: VerifySMSSandboxPhoneNumberInput\n      properties:\n        PhoneNumber:\n          allOf:\n            - $ref: '#/components/schemas/PhoneNumberString'\n            - description: The destination phone number to verify.\n        OneTimePassword:\n          allOf:\n            - $ref: '#/components/schemas/OTPCode'\n            - description: The OTP sent to the destination number from the <code>CreateSMSSandBoxPhoneNumber</code> call.\nsecurity:\n  - hmac: []\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@3237843a76543b0ee2c1e5f65e28ec6b526e8700/-/blob/APIs/amazonaws.com/sns/2010-03-31/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/3237843a76543b0ee2c1e5f65e28ec6b526e8700/APIs/amazonaws.com/sns/2010-03-31/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/#Action=GetEndpointAttributes\": at 1:142719: get: operation \"GET_GetEndpointAttributes\": at 1:142726: parse path \"/#Action=GetEndpointAttributes\": path MUST NOT contain a fragment"
}