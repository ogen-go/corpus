{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/nestjs/swagger"
		},
		"file": {
			"name": "api-spec.json",
			"path": "e2e/api-spec.json",
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"paths\": {\n    \"/api/v1\": {\n      \"get\": {\n        \"operationId\": \"AppController_getHello\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\"\n          }\n        }\n      }\n    },\n    \"/api/v2\": {\n      \"get\": {\n        \"operationId\": \"AppController_getHello\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\"\n          }\n        }\n      }\n    },\n    \"/api/v1/alias1\": {\n      \"get\": {\n        \"operationId\": \"AppController_withAliases\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\"\n          }\n        }\n      }\n    },\n    \"/api/v1/alias2\": {\n      \"get\": {\n        \"operationId\": \"AppController_withAliases\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\"\n          }\n        }\n      }\n    },\n    \"/api/v2/alias1\": {\n      \"get\": {\n        \"operationId\": \"AppController_withAliases\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\"\n          }\n        }\n      }\n    },\n    \"/api/v2/alias2\": {\n      \"get\": {\n        \"operationId\": \"AppController_withAliases\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\"\n          }\n        }\n      }\n    },\n    \"/api/cats\": {\n      \"post\": {\n        \"operationId\": \"CatsController_create\",\n        \"x-foo\": {\n          \"test\": \"bar \"\n        },\n        \"summary\": \"Create cat\",\n        \"parameters\": [\n          {\n            \"name\": \"header\",\n            \"in\": \"header\",\n            \"description\": \"Test\",\n            \"required\": false,\n            \"schema\": {\n              \"default\": \"test\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateCatDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"The record has been successfully created.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Cat\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Forbidden.\"\n          }\n        },\n        \"tags\": [\n          \"cats\",\n          \"create cats\"\n        ],\n        \"security\": [\n          {\n            \"key2\": [],\n            \"key1\": []\n          },\n          {\n            \"bearer\": []\n          },\n          {\n            \"basic\": []\n          }\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"CatsController_findAll\",\n        \"x-multiple\": {\n          \"test\": \"test\"\n        },\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"JavaScript\",\n            \"source\": \"console.log('Hello World');\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"header\",\n            \"in\": \"header\",\n            \"description\": \"Test\",\n            \"required\": false,\n            \"schema\": {\n              \"default\": \"test\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"maximum\": 10000,\n              \"exclusiveMaximum\": true,\n              \"exclusiveMinimum\": true,\n              \"title\": \"Page\",\n              \"format\": \"int32\",\n              \"default\": 0,\n              \"type\": \"number\"\n            }\n          },\n          {\n            \"name\": \"_sortBy\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": {\n              \"nullable\": true,\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"number\"\n            }\n          },\n          {\n            \"name\": \"enum\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/LettersEnum\"\n            }\n          },\n          {\n            \"name\": \"enumArr\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/LettersEnum\"\n              }\n            }\n          },\n          {\n            \"name\": \"beforeDate\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"filter\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\"\n          }\n        },\n        \"tags\": [\n          \"cats\",\n          \"tag2\",\n          \"tag1\"\n        ],\n        \"security\": [\n          {\n            \"key2\": [],\n            \"key1\": []\n          },\n          {\n            \"bearer\": []\n          },\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/cats/{id}\": {\n      \"get\": {\n        \"operationId\": \"CatsController_findOne\",\n        \"x-auth-type\": \"NONE\",\n        \"parameters\": [\n          {\n            \"name\": \"header\",\n            \"in\": \"header\",\n            \"description\": \"Test\",\n            \"required\": false,\n            \"schema\": {\n              \"default\": \"test\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"id\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The found record\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Cat\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"cats\"\n        ],\n        \"security\": [\n          {\n            \"key2\": [],\n            \"key1\": []\n          },\n          {\n            \"bearer\": []\n          },\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/cats/explicit-query\": {\n      \"get\": {\n        \"operationId\": \"CatsController_findAllWithExplicitQuery\",\n        \"parameters\": [\n          {\n            \"name\": \"header\",\n            \"in\": \"header\",\n            \"description\": \"Test\",\n            \"required\": false,\n            \"schema\": {\n              \"default\": \"test\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"minimum\": 0,\n              \"maximum\": 10000,\n              \"exclusiveMaximum\": true,\n              \"exclusiveMinimum\": true,\n              \"title\": \"Page\",\n              \"format\": \"int32\",\n              \"default\": 0,\n              \"type\": \"number\"\n            }\n          },\n          {\n            \"name\": \"_sortBy\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"nullable\": true,\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"number\"\n            }\n          },\n          {\n            \"name\": \"enum\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/LettersEnum\"\n            }\n          },\n          {\n            \"name\": \"enumArr\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/LettersEnum\"\n              }\n            }\n          },\n          {\n            \"name\": \"beforeDate\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"additionalProperties\": true,\n              \"type\": \"object\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\"\n          }\n        },\n        \"tags\": [\n          \"cats\"\n        ],\n        \"security\": [\n          {\n            \"key2\": [],\n            \"key1\": []\n          },\n          {\n            \"bearer\": []\n          },\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/cats/bulk\": {\n      \"get\": {\n        \"operationId\": \"CatsController_findAllBulk\",\n        \"parameters\": [\n          {\n            \"name\": \"header\",\n            \"in\": \"header\",\n            \"description\": \"Test\",\n            \"required\": false,\n            \"schema\": {\n              \"default\": \"test\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\"\n          }\n        },\n        \"tags\": [\n          \"cats\"\n        ],\n        \"security\": [\n          {\n            \"key2\": [],\n            \"key1\": []\n          },\n          {\n            \"bearer\": []\n          },\n          {\n            \"basic\": []\n          }\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"CatsController_createBulk\",\n        \"parameters\": [\n          {\n            \"name\": \"header\",\n            \"in\": \"header\",\n            \"description\": \"Test\",\n            \"required\": false,\n            \"schema\": {\n              \"default\": \"test\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\"\n          }\n        },\n        \"tags\": [\n          \"cats\"\n        ],\n        \"security\": [\n          {\n            \"key2\": [],\n            \"key1\": []\n          },\n          {\n            \"bearer\": []\n          },\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/cats/as-form-data\": {\n      \"post\": {\n        \"operationId\": \"CatsController_createAsFormData\",\n        \"summary\": \"Create cat\",\n        \"parameters\": [\n          {\n            \"name\": \"header\",\n            \"in\": \"header\",\n            \"description\": \"Test\",\n            \"required\": false,\n            \"schema\": {\n              \"default\": \"test\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateCatDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"The record has been successfully created.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Cat\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Forbidden.\"\n          }\n        },\n        \"tags\": [\n          \"cats\"\n        ],\n        \"security\": [\n          {\n            \"key2\": [],\n            \"key1\": []\n          },\n          {\n            \"bearer\": []\n          },\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/cats/site*\": {\n      \"get\": {\n        \"operationId\": \"CatsController_getSite\",\n        \"parameters\": [\n          {\n            \"name\": \"header\",\n            \"in\": \"header\",\n            \"description\": \"Test\",\n            \"required\": false,\n            \"schema\": {\n              \"default\": \"test\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\"\n          }\n        },\n        \"tags\": [\n          \"cats\"\n        ],\n        \"security\": [\n          {\n            \"key2\": [],\n            \"key1\": []\n          },\n          {\n            \"bearer\": []\n          },\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/cats/with-enum/{type}\": {\n      \"get\": {\n        \"operationId\": \"CatsController_getWithEnumParam\",\n        \"parameters\": [\n          {\n            \"name\": \"header\",\n            \"in\": \"header\",\n            \"description\": \"Test\",\n            \"required\": false,\n            \"schema\": {\n              \"default\": \"test\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"type\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"A\",\n                \"B\",\n                \"C\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\"\n          }\n        },\n        \"tags\": [\n          \"cats\"\n        ],\n        \"security\": [\n          {\n            \"key2\": [],\n            \"key1\": []\n          },\n          {\n            \"bearer\": []\n          },\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/cats/with-random-query\": {\n      \"get\": {\n        \"operationId\": \"CatsController_getWithRandomQuery\",\n        \"parameters\": [\n          {\n            \"name\": \"header\",\n            \"in\": \"header\",\n            \"description\": \"Test\",\n            \"required\": false,\n            \"schema\": {\n              \"default\": \"test\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"type\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"schema\": {\n              \"minLength\": 10,\n              \"maxLength\": 100,\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\"\n          }\n        },\n        \"tags\": [\n          \"cats\"\n        ],\n        \"security\": [\n          {\n            \"key2\": [],\n            \"key1\": []\n          },\n          {\n            \"bearer\": []\n          },\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    }\n  },\n  \"info\": {\n    \"title\": \"Cats example\",\n    \"description\": \"The cats API description\",\n    \"version\": \"1.0\",\n    \"contact\": {}\n  },\n  \"tags\": [\n    {\n      \"name\": \"cats\",\n      \"description\": \"\"\n    }\n  ],\n  \"servers\": [],\n  \"components\": {\n    \"securitySchemes\": {\n      \"basic\": {\n        \"type\": \"http\",\n        \"scheme\": \"basic\"\n      },\n      \"bearer\": {\n        \"scheme\": \"bearer\",\n        \"bearerFormat\": \"JWT\",\n        \"type\": \"http\"\n      },\n      \"oauth2\": {\n        \"type\": \"oauth2\",\n        \"flows\": {}\n      },\n      \"api_key\": {\n        \"type\": \"apiKey\",\n        \"in\": \"header\",\n        \"name\": \"api_key\"\n      },\n      \"key1\": {\n        \"type\": \"apiKey\",\n        \"in\": \"header\",\n        \"name\": \"key1\"\n      },\n      \"key2\": {\n        \"type\": \"apiKey\",\n        \"in\": \"header\",\n        \"name\": \"key2\"\n      },\n      \"cookie\": {\n        \"type\": \"apiKey\",\n        \"in\": \"cookie\",\n        \"name\": \"connect.sid\"\n      }\n    },\n    \"schemas\": {\n      \"ExtraModel\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"one\": {\n            \"type\": \"string\"\n          },\n          \"two\": {\n            \"type\": \"number\"\n          }\n        },\n        \"required\": [\n          \"one\",\n          \"two\"\n        ]\n      },\n      \"LettersEnum\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"A\",\n          \"B\",\n          \"C\"\n        ]\n      },\n      \"TagDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"name\"\n          }\n        },\n        \"required\": [\n          \"name\"\n        ]\n      },\n      \"CreateCatDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"age\": {\n            \"type\": \"number\",\n            \"minimum\": 1,\n            \"maximum\": 200\n          },\n          \"_breed\": {\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"uri\"\n            }\n          },\n          \"createdAt\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"urls\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"options\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"isReadonly\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"enum\": {\n            \"$ref\": \"#/components/schemas/LettersEnum\"\n          },\n          \"enumArr\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/LettersEnum\"\n            }\n          },\n          \"tag\": {\n            \"description\": \"tag\",\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/TagDto\"\n              }\n            ]\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"age\",\n          \"_breed\",\n          \"tags\",\n          \"createdAt\",\n          \"urls\",\n          \"options\",\n          \"enum\",\n          \"enumArr\"\n        ]\n      },\n      \"Cat\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"Kitty\",\n            \"description\": \"The name of the Cat\"\n          },\n          \"age\": {\n            \"type\": \"number\",\n            \"example\": 1,\n            \"minimum\": 0,\n            \"description\": \"The age of the Cat\"\n          },\n          \"breed\": {\n            \"type\": \"string\",\n            \"example\": \"Maine Coon\",\n            \"description\": \"The breed of the Cat\"\n          },\n          \"_tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"createdAt\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"urls\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"_options\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"isReadonly\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"enum\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"A\",\n              \"B\",\n              \"C\"\n            ]\n          },\n          \"enumArr\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"A\",\n                \"B\",\n                \"C\"\n              ]\n            }\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"age\",\n          \"breed\",\n          \"_tags\",\n          \"createdAt\",\n          \"urls\",\n          \"_options\",\n          \"enum\",\n          \"enumArr\"\n        ]\n      }\n    }\n  },\n  \"security\": [\n    {\n      \"bearer\": []\n    },\n    {\n      \"basic\": [],\n      \"cookie\": []\n    }\n  ]\n}"
		}
	},
	"Error": "parse: paths: /api/v1: get: duplicate operationId: \"AppController_getHello\""
}