{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "Programs_GET_POST.yaml",
			"path": "Specification/BrAPI-Core/Programs/Programs_GET_POST.yaml",
			"content": "info:\n  title: BrAPI\n  version: ''\nopenapi: 3.0.0\npaths:\n  /programs:\n    get:\n      summary: Get a filtered list of breeding Programs\n      description: Get a filtered list of breeding Programs. This list can be filtered by common crop name to narrow results to a specific crop.\n      parameters:\n      - name: commonCropName\n        description: Filter by the common crop name. Exact match.\n        in: query\n        required: false\n        schema:\n          type: string\n      - name: programDbId\n        description: Program filter to only return trials associated with given program id.\n        in: query\n        required: false\n        schema:\n          type: string\n      - name: programName\n        description: Filter by program name. Exact match.\n        in: query\n        required: false\n        schema:\n          type: string\n      - name: abbreviation\n        description: Filter by program abbreviation. Exact match.\n        in: query\n        required: false\n        schema:\n          type: string\n      - $ref: '#/components/parameters/externalReferenceID'\n      - $ref: '#/components/parameters/externalReferenceSource'\n      - $ref: '#/components/parameters/page'\n      - $ref: '#/components/parameters/pageSize'\n      - $ref: '#/components/parameters/authorizationHeader'\n      responses:\n        '200':\n          $ref: '#/components/responses/ProgramListResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n      tags:\n      - Programs\n    post:\n      summary: Add new breeding Programs to the database\n      description: Add new breeding Programs to the database. The `programDbId` is set by the server, all other fields are take from the request body, or a default value is used.\n      parameters:\n      - $ref: '#/components/parameters/authorizationHeader'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items: \n                $ref: '#/components/schemas/ProgramNewRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/ProgramListResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n      tags:\n      - Programs\ncomponents:\n  responses:\n    ProgramListResponse:\n      content:\n        application/json:\n          schema:\n            title: ProgramListResponse\n            properties:\n              '@context':\n                $ref: '#/components/schemas/Context'\n              metadata:\n                $ref: '#/components/schemas/metadata'\n              result:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/Program'\n                    type: array\n                required:\n                - data\n                type: object\n            required:\n            - metadata\n            - result\n            type: object\n      description: OK\n      headers: {}\n"
		}
	},
	"Error": "parse: paths: /programs: get: operation \"\": parameters: parse parameter \"\": resolve \"#/components/parameters/externalReferenceID\" reference: component by reference \"#/components/parameters/externalReferenceID\" not found"
}