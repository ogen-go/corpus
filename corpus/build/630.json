{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"path": "openapi/nytimes.moviereviews/openapi.yml",
			"content": "openapi: 3.0.0\nservers:\n  - url: http://api.nytimes.com/svc/movies/v2\n  - url: https://api.nytimes.com/svc/movies/v2\ninfo:\n  x-ballerina-display:\n    label: New York Times Movie Reviews\n    iconPath: \"icon.png\"\n  description: \u003e\n    This is a generated connector from [New York Times Movie Review API v2.0.0](https://developer.nytimes.com/docs/movie-reviews-api/1/overview) OpenAPI specification.\n\n    With the New York Times Movie Reviews API you can search for movie reviews. \n\n    The Movie Reviews API provides services for searching New York Times movie reviews by keyword and opening date and filter by Critics' Picks.\n  termsOfService: http://developer.nytimes.com/tou\n  title: Movie Reviews API\n  version: 2.0.0\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials. \n  \n    Create a [NYTimes account](https://developer.nytimes.com/accounts/login) and obtain tokens following [this guide](https://developer.nytimes.com/get-started).\n  x-apiClientRegistration:\n    url: http://developer.nytimes.com/signup\n  x-apisguru-categories:\n    - media\n    - open_data\n  x-logo:\n    url: https://static01.nyt.com/images/icons/t_logo_291_black.png\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/nytimes/public_api_specs/master/movie_reviews/movie_reviews_v2.json\n      version: \"3.0\"\n  x-providerName: nytimes.com\n  x-serviceName: movie_reviews\nexternalDocs:\n  url: http://developer.nytimes.com/\nsecurity:\n  - apikey: []\npaths:\n  \"/critics/{resourceType}.json\":\n    get:\n      operationId: criticsPicks\n      summary: Get movie reviews that are critics' picks. You can either specify the reviewer name or use \"all\", \"full-time\", or \"part-time\".\n      parameters:\n        - description: |\n            all | full-time | part-time | [reviewer-name]\n\n            Specify all to get all Times reviewers, or specify full-time or part-time to get that subset. Specify a reviewer's name to get details about a particular reviewer.\n          in: path\n          name: resourceType\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  copyright:\n                    type: string\n                  num_results:\n                    type: integer\n                  results:\n                    items:\n                      $ref: \"#/components/schemas/Critic\"\n                    type: array\n                  status:\n                    type: string\n                type: object\n          description: An array of Movie Critics\n  /reviews/search.json:\n    get:\n      operationId: searchMovieReviews\n      summary: Search for movie reviews. Supports filtering by Critics' Pick.\n      parameters:\n        - description: |\n            Search keywords; matches movie title and indexed terms\n\n            To limit your search to exact matches only, surround your search string with single quotation marks (e.g., query='28+days+later'). Otherwise, responses will include partial matches (\"head words\") as well as exact matches (e.g., president will match president, presidents and presidential).\n              \n              If you specify multiple terms without quotation marks, they will be combined in an OR search.\n              \n              If you omit the query parameter, your request will be equivalent to a reviews and NYT Critics' Picks request.\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: |\n            Set this parameter to Y to limit the results to NYT Critics' Picks. To get only those movies that have not been highlighted by Times critics, specify critics-pick=N. (To get all reviews regardless of critics-pick status, simply omit this parameter.)\n          in: query\n          name: critics-pick\n          schema:\n            enum:\n              - Y\n              - N\n            type: string\n        - description: |\n            Include this parameter to limit your results to reviews by a specific critic. Reviewer names should be formatted like this: Manohla Dargis.\n          in: query\n          name: reviewer\n          schema:\n            type: string\n        - description: |\n            Single date: YYYY-MM-DD\n\n            Start and end date: YYYY-MM-DD;YYYY-MM-DD\n\n            The publication-date is the date the review was first published in The Times.\n          in: query\n          name: publication-date\n          schema:\n            type: string\n        - description: |\n            Single date: YYYY-MM-DD\n\n            Start and end date: YYYY-MM-DD;YYYY-MM-DD\n\n            The opening-date is the date the movie's opening date in the New York region.\n          in: query\n          name: opening-date\n          required: false\n          schema:\n            type: string\n        - description: Positive integer, multiple of 20\n          in: query\n          name: offset\n          required: false\n          schema:\n            default: 20\n            type: integer\n        - description: |\n            Sets the sort order of the results.\n\n            Results ordered by-title are in ascending alphabetical order. Results ordered by one of the date parameters are in reverse chronological order.\n\n            If you do not specify a sort order, the results will be ordered by publication-date.\n          in: query\n          name: order\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  copyright:\n                    type: string\n                  num_results:\n                    type: integer\n                  results:\n                    items:\n                      $ref: \"#/components/schemas/Movie\"\n                    type: array\n                  status:\n                    type: string\n                type: object\n          description: An array of Movies\n  \"/reviews/{resourceType}.json\":\n    get:\n      operationId: getMovieReviews\n      summary: Get movie reviews. Can filter to only return Critics' Picks. Supports ordering results by-publication-date or by-opening-date. Use offset to paginate thru results, 20 at a time.\n      parameters:\n        - description: |+\n            Specify all to retrieve all reviews, including NYT Critics' Picks.\n\n            Specify picks to get NYT Critics' Picks currently in theaters.\n\n          in: path\n          name: resourceType\n          required: true\n          schema:\n            enum:\n              - all\n              - picks\n            type: string\n        - description: Positive integer, multiple of 20\n          in: query\n          name: offset\n          required: false\n          schema:\n            default: 20\n            type: integer\n        - description: |\n            Sets the sort order of the results.\n\n            Results ordered by-title are in ascending alphabetical order. Results ordered by one of the date parameters are in reverse chronological order.\n\n            If you do not specify a sort order, the results will be ordered by publication-date.\n          in: query\n          name: order\n          required: false\n          schema:\n            default: by-publication-date\n            enum:\n              - by-title\n              - by-publication-date\n              - by-opening-date\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  copyright:\n                    type: string\n                  num_results:\n                    type: integer\n                  results:\n                    items:\n                      $ref: \"#/components/schemas/Movie\"\n                    type: array\n                  status:\n                    type: string\n                type: object\n          description: An array of Movies\ncomponents:\n  schemas:\n    Critic:\n      properties:\n        bio:\n          type: string\n          nullable: true\n        display_name:\n          type: string\n          nullable: true\n        multimedia:\n          properties:\n            resource:\n              properties:\n                credit:\n                  type: string\n                height:\n                  type: integer\n                src:\n                  type: string\n                type:\n                  type: string\n                width:\n                  type: integer\n              type: object\n          type: object\n          nullable: true\n        seo_name:\n          type: string\n          nullable: true\n        sort_name:\n          type: string\n          nullable: true\n        status:\n          type: string\n          nullable: true\n      type: object\n    Movie:\n      properties:\n        byline:\n          type: string\n          nullable: true\n        critics_pick:\n          type: integer\n          nullable: true\n        date_updated:\n          type: string\n          nullable: true\n        display_title:\n          type: string\n          nullable: true\n        headline:\n          type: string\n          nullable: true\n        link:\n          properties:\n            suggested_link_text:\n              type: string\n            type:\n              type: string\n            url:\n              type: string\n          type: object\n          nullable: true\n        mpaa_rating:\n          type: string\n          nullable: true\n        multimedia:\n          properties:\n            resource:\n              properties:\n                height:\n                  type: integer\n                src:\n                  type: string\n                type:\n                  type: string\n                width:\n                  type: integer\n              type: object\n          type: object\n          nullable: true\n        opening_date:\n          type: string\n          nullable: true\n        publication_date:\n          type: string\n          nullable: true\n        summary_short:\n          type: string\n          nullable: true\n      type: object\n  securitySchemes:\n    apikey:\n      in: query\n      name: api-key\n      type: apiKey\n      description: Represents API Key `api-key`\n\n"
		}
	},
	"Error": "parse: paths: /reviews/search.json: get: searchMovieReviews: parameters: parse parameter \"critics-pick\": schema: parse enum values: parse value \"true\": expected type \"string\", got \"bool\""
}