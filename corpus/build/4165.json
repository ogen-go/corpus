{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OpenBanking-Brasil/areadesenvolvedor"
		},
		"file": {
			"name": "swagger_payments_apis.yaml",
			"path": "documentation/source/versions/v1.0.0-rc6.8/swagger/swagger_payments_apis.yaml",
			"content": "﻿openapi: 3.0.0\ninfo:\n  title: API Payment Initiation - Open Banking Brasil\n  description: |\n    API de Iniciação de Pagamentos, reponsável por viabilizar as operações de iniciação de pagamentos para o Open Banking Brasil.  \n    Para cada uma das formas de pagamento previstas é necessário obter prévio consentimento do cliente através dos `endpoints` dedicados ao consentimento nesta API.\n\n    # Orientações\n    No diretório de participantes duas `Roles` estão relacionadas à presente API: \n    - `CONTA`, referente às instituições detentoras de conta participantes do Open Banking Brasil;\n    - `PAGTO`, referente às instituições iniciadoras de transação de pagamento de conta participantes do Open Banking Brasil.   \n    Os tokens utilizados para consumo dos `endpoints` desta API devem possuir os `scopes` `openId` e `payments`.  \n    Esta API não requer a implementação de `permissions` para sua utilização.\n  version: 1.0.0-rc1.0\n  license:\n    name: Apache 2.0\n    url: 'https://www.apache.org/licenses/LICENSE-2.0'\n  contact:\n    name: Governança do Open Banking Brasil – Especificações\n    email: gt-interfaces@openbankingbr.org\n    url: 'https://openbanking-brasil.github.io/areadesenvolvedor/'\nservers:\n  - url: 'https://api.banco.com.br/open-banking/payments/v1'\n    description: Servidor de Produção\n  - url: 'https://apih.banco.com.br/open-banking/payments/v1'\n    description: Servidor de Homologação\ntags:\n  - name: Pagamentos\npaths:\n  /consents:\n    post:\n      tags:\n        - Pagamentos\n      summary: Criar consentimento para a iniciação de pagamento.\n      operationId: paymentsPostConsents\n      description: Método de criação do consentimento para a iniciação de pagamento.\n      parameters:\n        - $ref: '#/components/parameters/Authorization'\n        - $ref: '#/components/parameters/xFapiAuthDate'\n        - $ref: '#/components/parameters/xFapiCustomerIpAddress'\n        - $ref: '#/components/parameters/xFapiInteractionId'\n        - $ref: '#/components/parameters/xCustomerUserAgent'\n        - $ref: '#/components/parameters/XIdempotencyKey'\n        - $ref: '#/components/parameters/XJwsSignature'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreatePaymentConsent'\n        description: Payload para criação do consentimento para iniciação do pagamento.\n        required: true\n      responses:\n        '201':\n          $ref: '#/components/responses/201PaymentsConsentsConsentCreated'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaType'\n        '422':\n          $ref: '#/components/responses/UnprocessableEntityConsents'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          description: Erro inesperado.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseError'\n      security:\n        - OpenId:\n            - openId\n            - payments-consents\n  '/consents/{consentId}':\n    get:\n      tags:\n        - Pagamentos\n      summary: Consultar consentimento para iniciação de pagamento.\n      operationId: paymentsGetConsentsConsentId\n      description: Método para consulta do consentimento para a iniciação de pagamento.\n      parameters:\n        - $ref: '#/components/parameters/consentId'\n        - $ref: '#/components/parameters/Authorization'\n        - $ref: '#/components/parameters/xFapiAuthDate'\n        - $ref: '#/components/parameters/xFapiCustomerIpAddress'\n        - $ref: '#/components/parameters/xFapiInteractionId'\n        - $ref: '#/components/parameters/xCustomerUserAgent'\n      responses:\n        '200':\n          $ref: '#/components/responses/200PaymentsConsentsConsentIdRead'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          description: Erro inesperado.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseError'\n      security:\n        - OpenId:\n            - openId\n            - payments-consents\n  /pix/payments:\n    post:\n      tags:\n        - Pagamentos\n      summary: Criar iniciação de pagamento.\n      operationId: paymentsPostPixPayments\n      description: Método para criar uma iniciação de pagamento.\n      parameters:\n        - $ref: '#/components/parameters/Authorization'\n        - $ref: '#/components/parameters/xFapiAuthDate'\n        - $ref: '#/components/parameters/xFapiCustomerIpAddress'\n        - $ref: '#/components/parameters/xFapiInteractionId'\n        - $ref: '#/components/parameters/xCustomerUserAgent'\n        - $ref: '#/components/parameters/XIdempotencyKey'\n        - $ref: '#/components/parameters/XJwsSignature'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreatePixPayment'\n        description: Payload para criação da iniciação do pagamento Pix.\n        required: true\n      responses:\n        '201':\n          $ref: '#/components/responses/201PaymentsInitiationPixPaymentCreated'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaType'\n        '422':\n          $ref: '#/components/responses/UnprocessableEntityPixPayments'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          description: Erro inesperado.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseError'\n      security:\n        - OpenId:\n            - openId\n            - payments-initiation\n  '/pix/payments/{paymentId}':\n    get:\n      tags:\n        - Pagamentos\n      summary: Consultar iniciação de pagamento.\n      operationId: paymentsGetPixPaymentsPaymentId\n      description: Método para consultar uma iniciação de pagamento.\n      parameters:\n        - $ref: '#/components/parameters/paymentId'\n        - $ref: '#/components/parameters/Authorization'\n        - $ref: '#/components/parameters/xFapiAuthDate'\n        - $ref: '#/components/parameters/xFapiCustomerIpAddress'\n        - $ref: '#/components/parameters/xFapiInteractionId'\n        - $ref: '#/components/parameters/xCustomerUserAgent'\n      responses:\n        '200':\n          $ref: '#/components/responses/200PaymentsInitiationPixPaymentIdRead'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          description: Erro inesperado.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseError'\n      security:\n        - OpenId:\n            - openId\n            - payments-initiation\ncomponents:\n  schemas:\n    CreditorAccount:\n      type: object\n      description: |\n        Objeto que contém a identificação da conta de destino do beneficiário/recebedor.  \n      required:\n        - ispb\n        - number\n        - checkDigit\n        - accountType\n      properties:\n        ispb:\n          type: string\n          minLength: 8\n          maxLength: 8\n          pattern: '^[0-9]{8}$'\n          example: '12345678'\n          description: |\n            Deve ser preenchido com o ISPB (Identificador do Sistema de Pagamentos Brasileiros) do participante do SPI (Sistema de pagamentos instantâneos) somente com números.\n        branchCode:\n          type: string\n          maxLength: 4\n          pattern: '^\\d{4}$'\n          example: '1774'\n          description: |\n            Código da Agência detentora da conta sem dígito.  \n            (Agência é a dependência destinada ao atendimento aos clientes, ao público em geral e aos associados de cooperativas de crédito,  \n            no exercício de atividades da instituição, não podendo ser móvel ou transitória).  \n            [Restrição] Preenchimento obrigatório para os seguintes tipos de conta: CACC (CONTA_DEPOSITO_A_VISTA), SVGS (CONTA_POUPANCA) e SLRY (CONTA_SALARIO).\n        number:\n          type: string\n          minLength: 1\n          maxLength: 20\n          pattern: '^\\d{8,20}$'\n          example: '1234567890'\n          description: Número da conta sem o dígito.\n        checkDigit:\n          type: string\n          pattern: \\w*\\W*\n          minLength: 1\n          maxLength: 1\n          example: '4'\n          description: Dígito da conta.\n        accountType:\n          $ref: '#/components/schemas/EnumAccountPaymentsType'\n      additionalProperties: false\n    CreatePixPayment:\n      type: object\n      required:\n        - data\n      properties:\n        data:\n          $ref: '#/components/schemas/CreatePixPaymentData'\n      additionalProperties: false\n    CreatePaymentConsent:\n      type: object\n      required:\n        - data\n      properties:\n        data:\n          $ref: '#/components/schemas/CreatePaymentConsentData'\n      additionalProperties: false\n    CreatePaymentConsentData:\n      type: object\n      description: Objeto contendo as informações de consentimento para a iniciação de pagamento individual.\n      required:\n        - creditor\n        - payment\n      properties:\n        creditor:\n          $ref: '#/components/schemas/Identification'\n        payment:\n          $ref: '#/components/schemas/PaymentConsent'\n        debtorAccount:\n          $ref: '#/components/schemas/DebtorAccount'\n      additionalProperties: false\n    CreatePixPaymentData:\n      type: object\n      description: Objeto contendo dados do pagamento e do recebedor (creditor).\n      required:\n        - payment\n        - creditorAccount\n      properties:\n        payment:\n          $ref: '#/components/schemas/PaymentPix'\n        creditorAccount:\n          $ref: '#/components/schemas/CreditorAccount'\n        remittanceInformation:\n          type: string\n          maxLength: 140\n          pattern: \\w*\\W*\n          example: Pagamento da nota XPTO035-002.\n          description: |\n            Deve ser preenchido sempre que o usuário pagador inserir alguma informação adicional em um pagamento, a ser enviada ao recebedor.\n        qrCode:\n          type: string\n          maxLength: 512\n          pattern: \\w*\\W*\n          example: |\n            00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012  \n            BR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062  \n            530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB  \n            CD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\n          description: |\n            Sequência de caracteres que corresponde ao QR Code disponibilizado para o pagador.  \n            É a sequência de caracteres que seria lida pelo leitor de QR Code, e deve propiciar o retorno dos dados do pagador após consulta na DICT.  \n            Essa funcionalidade é possível tanto para QR Code estático quanto para QR Code dinâmico.  \n            No arranjo do Pix esta é a mesma sequência gerada e/ou lida pela funcionalidade Pix Copia e Cola.  \n            Este campo deverá ser no formato UTF-8.  \n            [Restrição] Preenchimento obrigatório para pagamentos por QR Code, observado o tamanho máximo de 512 bytes.\n        pixKey:\n          type: string\n          maxLength: 77\n          pattern: \\w*\\W*\n          description: |\n            Chave cadastrada no DICT pertencente ao recebedor. Os tipos de chaves podem ser: telefone, e-mail, cpf/cnpj ou chave aleatória.  \n            No caso de telefone celular deve ser informado no padrão E.1641.  \n            Para e-mail deve ter o formato xxxxxxxx@xxxxxxx.xxx(.xx) e no máximo 77 caracteres.  \n            No caso de CPF deverá ser informado com 11 números, sem pontos ou traços.  \n            Para o caso de CNPJ deverá ser informado com 14 números, sem pontos ou traços.  \n            No caso de chave aleatória deve ser informado o UUID gerado pelo DICT, conforme formato especificado na RFC41223.  \n            [Restrição] Preenchimento obrigatório para pagamentos via Chave.\n      additionalProperties: false\n    DebtorAccount:\n      type: object\n      description: |\n        Objeto que contém a identificação da conta de origem do pagador.  \n        As informações quanto à conta de origem do pagador poderão ser trazidas no consentimento para a detentora, caso a iniciadora tenha coletado essas informações do cliente. Do contrário, será coletada na detentora e trazida para a iniciadora como resposta à criação do pagamento.\n      required:\n        - ispb\n        - number\n        - checkDigit\n        - accountType\n      properties:\n        ispb:\n          type: string\n          minLength: 8\n          maxLength: 8\n          pattern: '^[0-9]{8}$'\n          example: '12345678'\n          description: |\n            Deve ser preenchido com o ISPB (Identificador do Sistema de Pagamentos Brasileiros) do participante do SPI (Sistema de pagamentos instantâneos) somente com números.\n        branchCode:\n          type: string\n          maxLength: 4\n          pattern: '^\\d{4}$'\n          example: '1774'\n          description: |\n            Código da Agência detentora da conta sem dígito.  \n            (Agência é a dependência destinada ao atendimento aos clientes, ao público em geral e aos associados de cooperativas de crédito,  \n            no exercício de atividades da instituição, não podendo ser móvel ou transitória).  \n            [Restrição] Preenchimento obrigatório para os seguintes tipos de conta: CACC (CONTA_DEPOSITO_A_VISTA), SVGS (CONTA_POUPANCA) e SLRY (CONTA_SALARIO).\n        number:\n          type: string\n          minLength: 1\n          maxLength: 20\n          pattern: '^\\d{8,20}$'\n          example: '1234567890'\n          description: Número da conta sem o dígito.\n        checkDigit:\n          type: string\n          pattern: \\w*\\W*\n          minLength: 1\n          maxLength: 1\n          example: '4'\n          description: Dígito da conta.\n        accountType:\n          $ref: '#/components/schemas/EnumAccountPaymentsType'\n      additionalProperties: false\n    PaymentConsent:\n      type: object\n      description: Objeto contendo dados de pagamento para consentimento.\n      required:\n        - type\n        - dateTime\n        - currency\n        - amount\n      properties:\n        type:\n          type: string\n          maxLength: 3\n          enum:\n            - PIX\n          example: PIX\n          description: |\n            Este campo define o tipo de pagamento que será iniciado após a autorização do consentimento.\n        dateTime:\n          type: string\n          format: date-time\n          maxLength: 20\n          pattern: '^(\\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)Z$'\n          example: '2021-01-01T00:00:00Z'\n          description: |\n            Data e hora do pagamento. \n            Uma string com data e hora conforme especificação RFC-3339, sempre com a utilização de timezone UTC(UTC time format).\n        currency:\n          type: string\n          maxLength: 3\n          pattern: '^(\\w{3}){1}$'\n          example: BRL\n          description: |\n            Código da moeda nacional segundo modelo ISO-4217, ou seja, 'BRL'. \n            Todos os valores monetários informados estão representados com a moeda vigente do Brasil.\n        amount:\n          type: number\n          format: double\n          maxLength: 19\n          pattern: '^((\\d{1,16}\\.\\d{2}))$'\n          example: 100000.12\n          description: |\n            Valor da transação com 2 casas decimais.\n      additionalProperties: false\n    ResponsePaymentConsent:\n      type: object\n      required:\n        - data\n      properties:\n        data:\n          $ref: '#/components/schemas/ResponsePaymentConsentData'\n      additionalProperties: false\n    ResponsePaymentConsentData:\n      type: object\n      description: Objeto contendo as informações de resposta do consentimento para a iniciação de pagamento individual.\n      required:\n        - consentId\n        - statusUpdateDateTime\n        - creationDateTime\n        - status\n        - creditor\n        - payment\n        - debtor\n      properties:\n        consentId:\n          type: string\n          pattern: '^[a-zA-Z0-9][a-zA-Z0-9\\-\\:]{0,99}$'\n          minLength: 1\n          maxLength: 100\n          example: 'urn:bancoex:C1DD33123'\n          description: |\n            Identificador único do consentimento criado para a iniciação de pagamento solicitada.\n        creationDateTime:\n          description: 'Data e hora em que o consentimento foi criado. Uma string com data e hora conforme especificação RFC-3339, sempre com a utilização de timezone UTC(UTC time format).'\n          type: string\n          format: date-time\n          example: '2021-05-21T08:30:00Z'\n          pattern: '^(\\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)Z$'\n          maxLength: 20\n        statusUpdateDateTime:\n          type: string\n          format: date-time\n          example: '2021-05-21T08:30:00Z'\n          pattern: '^(\\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)Z$'\n          maxLength: 20\n          description: |\n            Data e hora em que o recurso foi atualizado. Uma string com data e hora conforme especificação RFC-3339, sempre com a utilização de timezone UTC(UTC time format).\n        status:\n          type: string\n          maxLength: 22\n          enum:\n            - AWAITING_AUTHORISATION\n            - AUTHORISED\n            - REJECTED\n            - CONSUMED\n          example: AWAITING_AUTHORISATION\n          description: |\n            Retorna o estado do consentimento, o qual no momento de sua criação será AWAITING_AUTHORISATION.\n            Este estado será alterado depois da autorização do consentimento na detentora da conta do pagador (Debtor) para AUTHORISED ou REJECTED. \n            O consentimento fica no estado CONSUMED após ocorrer a iniciação do pagamento referente ao consentimento.  \n            Em caso de consentimento expirado a detentora deverá retornar o status REJECTED.  \n            Estados possíveis:  \n            AWAITING_AUTHORISATION - Aguardando autorização  \n            AUTHORISED - Autorizado   \n            REJECTED - Rejeitado  \n            CONSUMED - Consumido \n        creditor:\n          $ref: '#/components/schemas/Identification'\n        payment:\n          $ref: '#/components/schemas/PaymentConsent'\n        debtorAccount:\n          $ref: '#/components/schemas/DebtorAccount'\n      additionalProperties: false\n    ResponsePixPayment:\n      type: object\n      required:\n        - data\n      properties:\n        data:\n          $ref: '#/components/schemas/ResponsePixPaymentData'\n      additionalProperties: false\n    ResponseError:\n      type: object\n      required:\n        - errors\n      properties:\n        errors:\n          type: array\n          minItems: 1\n          maxItems: 13\n          items:\n            type: object\n            required:\n              - code\n              - title\n              - detail\n            properties:\n              code:\n                description: Código de erro específico do endpoint\n                type: string\n                pattern: \\w*\\W*\n                maxLength: 255\n              title:\n                description: Título legível por humanos deste erro específico\n                type: string\n                pattern: \\w*\\W*\n                maxLength: 255\n              detail:\n                description: Descrição legível por humanos deste erro específico\n                type: string\n                pattern: \\w*\\W*\n                maxLength: 2048\n            additionalProperties: false\n        meta:\n          type: object\n          description: Meta informações referente a API requisitada.\n          required:\n            - totalRecords\n            - totalPages\n            - requestDateTime\n          properties:\n            totalRecords:\n              type: integer\n              format: int32\n              description: Número total de registros no resultado\n              example: 1\n            totalPages:\n              type: integer\n              format: int32\n              description: Número total de páginas no resultado\n              example: 1\n            requestDateTime:\n              description: 'Data e hora da consulta, conforme especificação RFC-3339, formato UTC.'\n              type: string\n              maxLength: 20\n              format: date-time\n              example: '2021-05-21T08:30:00Z'\n          additionalProperties: false\n      additionalProperties: false\n    ResponsePixPaymentData:\n      type: object\n      description: Objeto contendo dados do pagamento e da conta do recebedor (creditor).\n      required:\n        - paymentId\n        - consentId\n        - creationDateTime\n        - statusUpdateDateTime\n        - status\n        - payment\n        - creditor\n      properties:\n        paymentId:\n          type: string\n          minLength: 1\n          maxLength: 100\n          pattern: '^[a-zA-Z0-9][a-zA-Z0-9\\-]{0,99}$'\n          example: TXpRMU9UQTROMWhZV2xSU1FUazJSMDl\n          description: |\n            Código ou identificador único informado pela instituição detentora da conta para representar  \n            a iniciação de pagamento individual. O `paymentId` deve ser diferente do `endToEndId` retornado pela detentora.  \n            Este é o identificador que deverá ser utilizado na consulta ao status da iniciação de pagamento efetuada.\n        endToEndId:\n          type: string\n          minLength: 32\n          maxLength: 32\n          pattern: '^([E])([0-9]{8})([0-9]{4})(0[1-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])(2[0-3]|[01][0-9])([0-5][0-9])([a-zA-Z0-9]{11})$'\n          example: E9040088820210128000800123873170\n          description: |\n            Código de identificação único da transação no arranjo do Pix. É usado em toda a cadeia de mensagens de uma instrução de pagamento no SPI. É um código gerado pela instituição detentora da conta que está iniciando o pagamento.  \n            Deve ser preenchido no formato padrão ExxxxxxxxyyyyMMddHHmmkkkkkkkkkkk (32 caracteres), sendo:  \n            • “E” – fixo (1 caractere);  \n            • xxxxxxxx – identificação do agente que gerou o `endToEndId`, podendo ser: o ISPB do participante direto ou o ISPB do participante indireto (8 caracteres numéricos [0-9]);  \n            • yyyyMMddHHmm – data, hora e minuto (12 caracteres), seguindo o horário UTC, da submissão da ordem de pagamento, caso a liquidação seja prioritária, ou prevista para o envio da ordem ao sistema de liquidação, caso seja realizado um agendamento. No caso de ordens prioritárias, aceita-se o preenchimento, pelo agente que gerou o \u003cEndToEndId\u003e, com uma tolerância máxima de 1 hora e 30 minutos, para o futuro e para o passado, em relação ao horário efetivo de processamento da ordem pelo SPI. Para ordens não prioritárias, a tolerância máxima é de 12 horas, para o futuro e para o passado;  \n            • kkkkkkkkkkk – sequencial criado pelo agente que gerou o `endToEndId` (11 caracteres alfanuméricos [a-z|A-Z|0-9]). Deve ser único dentro de cada “yyyyMMddHHmm”.  \n            Exemplo: E000000002020080120300000000001B  \n            O `endToEndId` é gerado pela detentora. Ele deve ser único, não podendo ser repetido em qualquer outra operação enviada ao SPI.  \n            [Restrição] É obrigatório o retorno após o status \"ACCEPTED_SETTLEMENT_IN_PROCESS\".\n        consentId:\n          type: string\n          maxLength: 100\n          pattern: '^[a-zA-Z0-9][a-zA-Z0-9\\-\\:]{0,99}$'\n          example: 'urn:bancoex:C1DD33123'\n          description: |\n            Identificador único do consentimento.\n        creationDateTime:\n          type: string\n          format: date-time\n          pattern: '^(\\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)Z$'\n          example: '2020-07-21T08:30:00Z'\n          description: |\n            Data e hora em que o recurso foi criado.  \n            Uma string com data e hora conforme especificação RFC-3339,  \n            sempre com a utilização de timezone UTC(UTC time format).\n        statusUpdateDateTime:\n          type: string\n          format: date-time\n          pattern: '^(\\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)Z$'\n          example: '2020-07-21T08:30:00Z'\n          description: |\n            Data e hora da última atualização da iniciação de pagamento.  \n            Uma string com data e hora conforme especificação RFC-3339,  \n            sempre com a utilização de timezone UTC(UTC time format).\n        pixKey:\n          type: string\n          maxLength: 77\n          pattern: \\w*\\W*\n          example: '12345678901'\n          description: |\n            Chave cadastrada no DICT pertencente ao recebedor. Os tipos de chaves podem ser: telefone, e-mail, cpf/cnpj ou chave aleatória.  \n            No caso de telefone celular deve ser informado no padrão E.1641.  \n            Para e-mail deve ter o formato xxxxxxxx@xxxxxxx.xxx(.xx) e no máximo 77 caracteres.  \n            No caso de CPF deverá ser informado com 11 números, sem pontos ou traços.  \n            Para o caso de CNPJ deverá ser informado com 14 números, sem pontos ou traços.  \n            No caso de chave aleatória deve ser informado o UUID gerado pelo DICT, conforme formato especificado na RFC41223.  \n            [Restrição] Preenchimento obrigatório para pagamentos via Chave.\n        status:\n          type: string\n          maxLength: 45\n          enum:\n            - PDNG\n            - PART\n            - ACSP\n            - ACSC\n            - ACCC\n            - RJCT\n          example: PDNG\n          description: |\n            Estado atual da iniciação de pagamento. O estado evolui na seguinte ordem:  \n            1. PDNG (PENDING) - Iniciação de pagamento ou transação de pagamento está pendente. Checagens adicionais em realização.  \n            2. PART (PARTIALLY ACCEPTED) - Aguardando autorização múltipla alçada.  \n            3. ACSP (ACCEPTED_SETTLEMENT_IN_PROCESS) - Iniciação de pagamento aceita e processamento do pagamento foi iniciado.  \n            4. ACSC (ACCEPTED_SETTLEMENT_COMPLETED_DEBITOR_ACCOUNT) - Débito realizado na conta do pagador.  \n            5. ACCC (ACCEPTED_SETTLEMENT_COMPLETED) - Crédito realizado na instituição de destino.  \n            Em caso insucesso:  \n            RJCT (REJECTED) - Instrução de pagamento rejeitada.\n        rejectionReason:\n          type: string\n          maxLength: 4\n          enum:\n            - AB03\n            - AB09\n            - AB11\n            - AC03\n            - AC06\n            - AC07\n            - AC14\n            - AG03\n            - AG12\n            - AG13\n            - AGNT\n            - AM01\n            - AM02\n            - AM04\n            - AM09\n            - AM12\n            - AM18\n            - BE01\n            - BE15\n            - BE17\n            - CH11\n            - CH16\n            - DS04\n            - DS0G\n            - DS0H\n            - DS27\n            - DT02\n            - DT05\n            - ED05\n            - FF07\n            - FF08\n            - RC09\n            - RC10\n            - RR4\n            - SL02\n          example: DS27\n          description: |\n            Motivo da rejeição do pagamento. Informações complementares sobre o motivo do status.  \n            AB03 (ABORTED_SETTLEMENT_TIMEOUT) - Liquidação da transação interrompida devido a timeout no SPI.                       \n            AB09 (ERROR_CREDITOR_AGENT) - Transação interrompida devido a erro no participante do usuário recebedor.  \n            AB11 (TIMEOUT_DEBTOR_AGENT) - Timeout do participante emissor da ordem de pagamento.  \n            AC03 (INVALID_CREDITOR_ACCOUNT_NUMBER) - Número da conta transacional do usuário recebedor inexistente ou inválido.  \n            AC06 (BLOCKED_ACCOUNT) - Conta transacional do usuário recebedor encontra-se bloqueada.  \n            AC07 (CLOSED_CREDITOR_ACCOUNT_NUMBER) - Número da conta transacional do usuário recebedor encerrada.  \n            AC14 (INVALID_CREDITOR_ACCOUNTTYPE) - Tipo incorreto para a conta transacional do usuário recebedor.    AG03 (TRANSACTION_NOT_SUPPORTED) - Tipo de transação não é suportado/autorizado na conta transacional do usuário recebedor. Exemplo: transferência para conta salário.  \n            AG12 (NOT_ALLOWED_BOOK_TRANSFER) - Não é permitida ordem de pagamento/devolução no SPI cujos recursos sejam transferidos de uma conta transacional para outra em uma mesma instituição participante ou entre participantes que utilizem o serviço de liquidação de um mesmo participante liquidante no SPI (booktransfer).  \n            AG13 (FORBIDDEN_RETURN_PAYMENT) - Não é permitido devolver a devolução de um pagamento instantâneo.  \n            AGNT (INCORRECT_AGENT) - Participante direto não é liquidante do participante do usuário pagador / participante do usuário recebedor.  \n            AM01 (ZERO_AMOUNT) - Ordem de pagamento instantâneo com valor zero.  \n            AM02 (NOT_ALLOWED_AMOUNT) - Ordem de pagamento/devolução em valor que faz superar o limite permitido para o tipo de conta transacional creditada.  \n            AM04 (INSUFFICIENT_FUNDS) - Saldo insuficiente na conta PI do participante do usuário pagador.  \n            AM09 (WRONG_AMOUNT) - Devolução de pagamento em valor que faz superar o valor da ordem de pagamento instantâneo correspondente.  \n            AM12 (INVALID_AMOUNT) - Divergência entre a somatória dos valores do bloco ‘valorDoDinheiroOuCompra’ e o campo ‘valor’.  \n            AM18 (INVALID_NUMBER_OF_TRANSACTIONS) - Quantidade de transações inválida.  \n            BE01 (INCONSISTENT_WITH_END_CUSTOMER) - CPF/CNPJ do usuário recebedor não é consistente com o titular da conta transacional especificada.  \n            BE15 (INVALID_IDENTIFICATION_CODE) - Código de situação de pagamento ou de erro inválido.  \n            BE17 (INVALID_CREDITOR_IDENTIFICATION_CODE) - QR Code rejeitado pelo participante do usuário recebedor.  \n            CH11 (CREDITOR_IDENTIFIER_INCORRECT) - CPF/CNPJ do usuário recebedor incorreto.  \n            CH16 (ELEMENT_CONTENT_FORMALLY_INCORRECT) - Elemento da mensagem incorreto.  \n            DS04 (ORDER_REJECTED) - Ordem rejeitada pelo participante do usuário recebedor.  \n            DS0G (NOT_ALLOWED_PAYMENT) - Participante que assinou a mensagem não é autorizado a realizar a operação na conta PI debitada. No caso em que o participante que assinou a mensagem não é o titular da conta PI debitada nem é o liquidante no SPI do participante do usuário pagador.  \n            DS0H (NOT_ALLOWED_ACCOUNT) - ISPB do participante que submeteu a resposta à ordem de pagamento/devolução diferente do ISPB do participante creditado pela ordem.  \n            DS27 (USER_NOT_YET_ACTIVATED) - Participante não se encontra cadastrado ou ainda não iniciou a operação no SPI.  \n            DT02 (INVALID_CREATION_DATE) - Data e Hora do envio da mensagem inválida.  \n            DT05 (INVALID_CUT_OFF_DATE) - Transação extrapola o prazo máximo para devolução de pagamento instantâneo regulamentado pelo Arranjo Pix.  \n            ED05 (SETTLEMENT_FAILED) - Erro no processamento do pagamento instantâneo.  \n            FF07 (INVALID_PURPOSE) - Inconsistência entre a finalidade da transação e o preenchimento do bloco elementos Structured.  \n            FF08 (INVALID_END_TO_END_ID) - Identificador da operação mal formatado.  \n            RC09 (INVALID_DEBTOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER) - ISPB do participante do usuário pagador inválido ou inexistente.  \n            RC10 (INVALID_CREDITOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER) - ISPB do participante do usuário recebedor inválido ou inexistente.  \n            RR4  (REGULATORY_REASON) - Ordem de pagamento em que o usuário pagador é sancionado por resolução do Conselho de Segurança das Nações Unidas (CSNU). Nos casos em que o usuário recebedor for o sancionado, a ordem de pagamento não deve ser rejeitada.  \n            SL02 (SPECIFIC_SERVICE_OFFERED_BY_CREDITOR_AGENT) - A transação original não está relacionada ao serviço de Saque Pix.  \n            [Restrição] Esse motivo deverá ser enviado quando o campo /data/status for igual a RJCT (REJECTED).  \n        payment:\n          $ref: '#/components/schemas/PaymentPix'\n        remittanceInformation:\n          type: string\n          maxLength: 140\n          pattern: \\w*\\W*\n          example: Pagamento da nota RSTO035-002.\n          description: |\n            Deve ser preenchido sempre que o usuário pagador inserir alguma informação adicional em um pagamento, a ser enviada ao recebedor.\n        creditorAccount:\n          $ref: '#/components/schemas/CreditorAccount'\n      additionalProperties: false\n    PaymentPix:\n      type: object\n      description: Objeto contendo dados do pagameto como moeda e valor.\n      required:\n        - amount\n        - currency\n      properties:\n        amount:\n          type: number\n          format: double\n          maxLength: 19\n          pattern: '^((\\d{1,16}\\.\\d{2}))$'\n          example: 100000.12\n          description: |\n            Valor da transação com 2 casas decimais.\n        currency:\n          type: string\n          maxLength: 3\n          pattern: '^(\\w{3}){1}$'\n          example: BRL\n          description: |\n            Código da moeda nacional segundo modelo ISO-4217, ou seja, 'BRL'.  \n            Todos os valores monetários informados estão representados com a moeda vigente do Brasil.\n      additionalProperties: false\n    EnumAccountPaymentsType:\n      type: string\n      maxLength: 4\n      enum:\n        - CACC\n        - SLRY\n        - SVGS\n        - TRAN\n      example: CACC\n      description: |\n        Tipos de contas usadas para pagamento via Pix.  \n        Modalidades tradicionais previstas pela Resolução 4.753, não contemplando contas vinculadas,  \n        conta de domiciliados no exterior, contas em moedas estrangeiras e conta correspondente moeda eletrônica.  \n        Segue descrição de cada valor do ENUM para o escopo do Pix.  \n        CACC - Current - Conta Corrente.  \n        SLRY - Salary - Conta-Salário.  \n        SVGS - Savings - Conta de Poupança.  \n        TRAN - TransactingAccount - Conta de Pagamento pré-paga.\n    Identification:\n      type: object\n      description: Objeto contendo os dados do recebedor (creditor).\n      required:\n        - personType\n        - cpfCnpj\n        - name\n      properties:\n        personType:\n          type: string\n          maxLength: 15\n          enum:\n            - PESSOA_NATURAL\n            - PESSOA_JURIDICA\n          description: |\n            Titular, pessoa natural ou juridica a quem se referem os dados de recebedor (creditor).\n        cpfCnpj:\n          type: string\n          minLength: 11\n          maxLength: 14\n          pattern: '^\\d{11}$|^\\d{14}$'\n          example: '58764789000137'\n          description: |\n            Identificação da pessoa envolvida na transação.  \n            Preencher com o CPF ou CNPJ, de acordo com o valor escolhido no campo type.  \n            O CPF será utilizado com 11 números e deverá ser informado sem pontos ou traços.  \n            O CNPJ será utilizado com 14 números e deverá ser informado sem pontos ou traços.\n        name:\n          type: string\n          maxLength: 140\n          pattern: \\w*\\W*\n          example: Marco Antonio de Brito\n          description: |\n            Em caso de pessoa natural deve ser informado o nome completo do titular da conta do recebedor.  \n            Em caso de pessoa jurídica deve ser informada a razão social ou o nome fantasia da conta do recebedor.\n      additionalProperties: false\n  parameters:\n    consentId:\n      name: consentId\n      in: path\n      description: |\n        O consentId é o identificador único do consentimento e deverá ser um URN - Uniform Resource Name.  \n        Um URN, conforme definido na [RFC8141](https://tools.ietf.org/html/rfc8141) é um Uniform Resource \n        Identifier - URI - que é atribuído sob o URI scheme \"urn\" e um namespace URN específico, com a intenção de que o URN \n        seja um identificador de recurso persistente e independente da localização.  \n        Considerando a string urn:bancoex:C1DD33123 como exemplo para consentId temos:\n        - o namespace(urn)\n        - o identificador associado ao namespace da instituição transnmissora (bancoex) \n        - o identificador específico dentro do namespace (C1DD33123).  \n        Informações mais detalhadas sobre a construção de namespaces devem ser consultadas na [RFC8141](https://tools.ietf.org/html/rfc8141).\n      required: true\n      schema:\n        type: string\n        pattern: '^urn:[a-zA-Z0-9][a-zA-Z0-9-]{0,31}:[a-zA-Z0-9()+,\\-.:=@;$_!*''%\\/?#]+$'\n        maxLength: 256\n    paymentId:\n      name: paymentId\n      in: path\n      description: Identificador da operação de pagamento.\n      required: true\n      schema:\n        type: string\n        pattern: '^[a-zA-Z0-9][a-zA-Z0-9\\-]{0,99}$'\n        maxLength: 100\n    Authorization:\n      name: Authorization\n      in: header\n      description: Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado\n      required: true\n      schema:\n        type: string\n        pattern: \\w*\\W*\n        maxLength: 2048\n    xCustomerUserAgent:\n      name: x-customer-user-agent\n      in: header\n      description: Indica o user-agent que o usuário utiliza.\n      required: false\n      schema:\n        type: string\n        pattern: \\w*\\W*\n        minLength: 1\n        maxLength: 100\n    xFapiAuthDate:\n      name: x-fapi-auth-date\n      in: header\n      description: 'Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231).Exemplo: Sun, 10 Sep 2017 19:43:31 UTC'\n      required: false\n      schema:\n        type: string\n        pattern: '^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)$'\n        minLength: 29\n        maxLength: 29\n    xFapiCustomerIpAddress:\n      name: x-fapi-customer-ip-address\n      in: header\n      description: O endereço IP do usuário se estiver atualmente logado com o receptor.\n      required: false\n      schema:\n        type: string\n        pattern: \\w*\\W*\n        minLength: 1\n        maxLength: 100\n    xFapiInteractionId:\n      name: x-fapi-interaction-id\n      in: header\n      description: 'Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve \"reproduzir\" esse valor no cabeçalho de resposta.'\n      required: false\n      schema:\n        type: string\n        pattern: '^[a-zA-Z0-9][a-zA-Z0-9\\-]{0,99}$'\n        minLength: 1\n        maxLength: 100\n    XIdempotencyKey:\n      name: x-idempotency-key\n      in: header\n      description: Cabeçalho HTTP personalizado. Identificador de solicitação exclusivo para suportar a idempotência.\n      required: true\n      schema:\n        type: string\n        maxLength: 40\n        pattern: ^(?!\\s)(.*)(\\S)$\n    XJwsSignature:\n      name: x-jws-signature\n      in: header\n      description: Cabeçalho contendo uma assinatura JWS separada do corpo do payload.\n      required: true\n      schema:\n        type: string\n        pattern: \\w*\\W*\n        maxLength: 2048\n  securitySchemes:\n    OpenId:\n      type: openIdConnect\n      openIdConnectUrl: 'https://authserver.example/.well-known/openid-configuration'\n  responses:\n    BadRequest:\n      description: 'A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL.'\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/ResponseError'\n    Forbidden:\n      description: O token tem escopo incorreto ou uma política de segurança foi violada\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/ResponseError'\n    InternalServerError:\n      description: Ocorreu um erro no gateway da API ou no microsserviço\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/ResponseError'\n    MethodNotAllowed:\n      description: O consumidor tentou acessar o recurso com um método não suportado\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/ResponseError'\n    NotAcceptable:\n      description: A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/ResponseError'\n    NotFound:\n      description: O recurso solicitado não existe ou não foi implementado\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/ResponseError'\n    TooManyRequests:\n      description: 'A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido'\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/ResponseError'\n    UnprocessableEntityConsents:\n      description: 'A solicitação foi bem formada, mas não pôde ser processada devido à lógica de negócios específica da solicitação.'\n      content:\n        application/json; charset=utf-8:\n          schema:\n            type: object\n            required:\n              - errors\n            properties:\n              errors:\n                type: array\n                minItems: 1\n                maxItems: 3\n                items:\n                  type: object\n                  required:\n                    - code\n                    - title\n                    - detail\n                  properties:\n                    code:\n                      type: string\n                      enum:\n                        - '01'\n                        - '02'\n                        - '99'\n                      description: |\n                        Códigos de erros previstos na criação de consentimento para a iniciação de pagamentos.  \n                        • 01 – Forma de pagamento inválida;  \n                        • 02 – Data de pagamento inválida;  \n                        • 99 – Desconhecido.  \n                      example: '01'\n                    title:\n                      type: string\n                      maxLength: 255\n                      pattern: \\w*\\W*\n                      example: Forma de pagamento inválida.\n                      description: |\n                        Título específico do erro reportado, de acordo com o código enviado:  \n                        • 01: Forma de pagamento inválida;  \n                        • 02: Data de pagamento inválida;  \n                        • 99: Desconhecido.       \n                    detail:\n                      type: string\n                      maxLength: 2048\n                      pattern: \\w*\\W*\n                      example: Meio de pagamento inválido.\n                      description: |\n                        Descrição específica do erro de acordo com o código reportado.\n                        • 01: Meio de pagamento inválido;  \n                        • 02: Data de pagamento inválida no contexto, por exemplo, data no passado.  \n                        Para pagamentos únicos deve ser informada a data atual, do dia corrente.    \n                        • 99: Não informada pela instituição detentora da conta. \n                  additionalProperties: false\n              meta:\n                $ref: '#/components/schemas/ResponseError/properties/meta'\n            additionalProperties: false\n          examples:\n            Forma de pagamento inválida:\n              summary: Forma de pagamento inválida\n              value:\n                errors:\n                  - code: '01'\n                    title: Forma de pagamento inválida\n                    detail: Meio de pagamento inválido.\n                meta:\n                  totalRecords: 1\n                  totalPages: 1\n                  requestDateTime: '2021-05-21T08:30:00Z'\n            Data de pagamento inválida:\n              summary: Data de pagamento inválida\n              value:\n                errors:\n                  - code: '02'\n                    title: Data de pagamento inválida\n                    detail: 'Data de pagamento inválida no contexto, por exemplo, data no passado.'\n                meta:\n                  totalRecords: 1\n                  totalPages: 1\n                  requestDateTime: '2021-05-21T08:30:00Z'\n            Desconhecido:\n              summary: Desconhecido\n              value:\n                errors:\n                  - code: '99'\n                    title: Desconhecido\n                    detail: Não informada pela instituição detentora da conta.\n                meta:\n                  totalRecords: 1\n                  totalPages: 1\n                  requestDateTime: '2021-05-21T08:30:00Z'\n    UnprocessableEntityPixPayments:\n      description: 'A solicitação foi bem formada, mas não pôde ser processada devido à lógica de negócios específica da solicitação.'\n      content:\n        application/json; charset=utf-8:\n          schema:\n            type: object\n            required:\n              - errors\n            properties:\n              errors:\n                type: array\n                minItems: 1\n                maxItems: 9\n                items:\n                  type: object\n                  required:\n                    - code\n                    - title\n                    - detail\n                  properties:\n                    code:\n                      type: string\n                      enum:\n                        - '01'\n                        - '02'\n                        - '03'\n                        - '04'\n                        - '05'\n                        - '06'\n                        - '07'\n                        - '10'\n                        - '99'\n                      description: |\n                        Códigos de erros previstos na criação da iniciação de pagamento.  \n                        • 01 – Saldo insuficiente;  \n                        • 02 – Beneficiário incompatível;  \n                        • 03 – Valor da transação incompatível;  \n                        • 04 – Acima do limite estabelecido;  \n                        • 05 – Valor inválido;  \n                        • 06 – Cobrança inválida;  \n                        • 07 – Consentimento inválido;  \n                        • 10 – Janela de operação inválida;     \n                        • 99 – Desconhecido.  \n                      example: '01'\n                    title:\n                      type: string\n                      maxLength: 255\n                      pattern: \\w*\\W*\n                      example: Forma de pagamento inválida.\n                      description: |\n                        Título específico do erro reportado, de acordo com o código enviado:  \n                        • 01: Saldo insuficiente;  \n                        • 02: Beneficiário incompatível;  \n                        • 03: Valor da transação incompatível;  \n                        • 04: Acima do limite estabelecido;  \n                        • 05: Valor inválido;  \n                        • 06: Cobrança inválida;  \n                        • 07: Consentimento inválido;  \n                        • 10: Janela de operação inválida;     \n                        • 99: Desconhecido.  \n                    detail:\n                      type: string\n                      maxLength: 2048\n                      pattern: \\w*\\W*\n                      example: Meio de pagamento inválido.\n                      description: |\n                        Descrição específica do erro de acordo com o código reportado.  \n                        • 01: A conta selecionada não possui saldo suficiente para realizar o pagamento.  \n                        • 02: O beneficiário informado no consentimento não é o mesmo do esperado pelo DICT.  \n                        • 03: O valor informado no consentimento não é o mesmo valor do informado no payload de pagamento.    \n                        • 04: O valor (ou quantidade de transações) ultrapassa a faixa de limite parametrizada na detentora para permitir a realização de transações pelo cliente.  \n                        • 05: O valor enviado não é válido para o QR Code informado.  \n                        • 06: Validação de expiração, validação de vencimento ou Status Válido.  \n                        • 07: Consentimento inválido (status diferente de \"AUTHORISED\" ou está expirado).  \n                        • 10: Requisição está fora da janela de funcionamento.        \n                        • 99: Não informada pela instituição detentora da conta. \n                  additionalProperties: false\n              meta:\n                $ref: '#/components/schemas/ResponseError/properties/meta'\n            additionalProperties: false\n          examples:\n            Saldo insuficiente:\n              summary: Saldo insuficiente\n              value:\n                errors:\n                  - code: '01'\n                    title: Saldo insuficiente\n                    detail: A conta selecionada não possui saldo suficiente para realizar o pagamento.\n                meta:\n                  totalRecords: 1\n                  totalPages: 1\n                  requestDateTime: '2021-05-21T08:30:00Z'\n            Beneficiário incompatível:\n              summary: Beneficiário incompatível\n              value:\n                errors:\n                  - code: '02'\n                    title: Beneficiário incompatível\n                    detail: O beneficiário informado no consentimento não é o mesmo do esperado pelo DICT.\n                meta:\n                  totalRecords: 1\n                  totalPages: 1\n                  requestDateTime: '2021-05-21T08:30:00Z'\n            Valor da transação incompatível:\n              summary: Valor da transação incompatível\n              value:\n                errors:\n                  - code: '03'\n                    title: Valor da transação incompatível\n                    detail: O valor informado no consentimento não é o mesmo valor do informado no payload de pagamento.\n                meta:\n                  totalRecords: 1\n                  totalPages: 1\n                  requestDateTime: '2021-05-21T08:30:00Z'\n            Acima do limite estabelecido:\n              summary: Acima do limite estabelecido\n              value:\n                errors:\n                  - code: '04'\n                    title: Acima do limite estabelecido\n                    detail: O valor (ou quantidade de transações) ultrapassa a faixa de limite parametrizada na detentora para permitir a realização de transações pelo cliente.\n                meta:\n                  totalRecords: 1\n                  totalPages: 1\n                  requestDateTime: '2021-05-21T08:30:00Z'\n            Valor inválido:\n              summary: Valor inválido\n              value:\n                errors:\n                  - code: '05'\n                    title: Valor inválido\n                    detail: O valor enviado não é válido para o QR Code informado.\n                meta:\n                  totalRecords: 1\n                  totalPages: 1\n                  requestDateTime: '2021-05-21T08:30:00Z'\n            Cobrança inválida:\n              summary: Cobrança inválida\n              value:\n                errors:\n                  - code: '06'\n                    title: Cobrança inválida\n                    detail: 'Validação de expiração, validação de vencimento ou Status Válido.'\n                meta:\n                  totalRecords: 1\n                  totalPages: 1\n                  requestDateTime: '2021-05-21T08:30:00Z'\n            Consentimento inválido:\n              summary: Consentimento inválido\n              value:\n                errors:\n                  - code: '07'\n                    title: Consentimento inválido\n                    detail: Consentimento inválido (status diferente de 'AUTHORISED' ou está expirado).\n                meta:\n                  totalRecords: 1\n                  totalPages: 1\n                  requestDateTime: '2021-05-21T08:30:00Z'\n            Janela de operação inválida:\n              summary: Janela de operação inválida\n              value:\n                errors:\n                  - code: '10'\n                    title: Janela de operação inválida\n                    detail: Requisição está fora da janela de funcionamento.\n                meta:\n                  totalRecords: 1\n                  totalPages: 1\n                  requestDateTime: '2021-05-21T08:30:00Z'\n            Desconhecido:\n              summary: Desconhecido\n              value:\n                errors:\n                  - code: '99'\n                    title: Desconhecido\n                    detail: Não informada pela instituição detentora da conta.\n                meta:\n                  totalRecords: 1\n                  totalPages: 1\n                  requestDateTime: '2021-05-21T08:30:00Z'\n    Unauthorized:\n      description: Cabeçalho de autenticação ausente/inválido ou token inválido\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/ResponseError'\n    UnsupportedMediaType:\n      description: O formato do payload não é um formato suportado.\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/ResponseError'\n    201PaymentsConsentsConsentCreated:\n      description: Consentimento de pagamento criado com sucesso.\n      headers:\n        x-fapi-interaction-id:\n          schema:\n            $ref: '#/components/responses/200PaymentsConsentsConsentIdRead/headers/x-fapi-interaction-id/schema'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ResponsePaymentConsent'\n    200PaymentsConsentsConsentIdRead:\n      description: Dados do consentimento de pagamento obtidos com sucesso.\n      headers:\n        x-fapi-interaction-id:\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9][a-zA-Z0-9\\-]{0,99}$'\n            maxLength: 100\n            description: 'Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve \"reproduzir\" esse valor no cabeçalho de resposta.'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ResponsePaymentConsent'\n    201PaymentsInitiationPixPaymentCreated:\n      description: Iniciação de pagamento Pix criada com sucesso.\n      headers:\n        x-fapi-interaction-id:\n          schema:\n            $ref: '#/components/responses/200PaymentsConsentsConsentIdRead/headers/x-fapi-interaction-id/schema'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ResponsePixPayment'\n    200PaymentsInitiationPixPaymentIdRead:\n      description: Dados de iniciação de pagamento Pix obtidos com sucesso.\n      headers:\n        x-fapi-interaction-id:\n          schema:\n            $ref: '#/components/responses/200PaymentsConsentsConsentIdRead/headers/x-fapi-interaction-id/schema'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ResponsePixPayment'\n"
		}
	},
	"Error": "parse: paths: /consents: post: operation \"paymentsPostConsents\": responses: 422: resolve \"#/components/responses/UnprocessableEntityConsents\" reference: content: \"application/json; charset=utf-8\": schema: parse schema: meta: parse schema: reference \"#/components/schemas/ResponseError/properties/meta\": resolve reference \"#/components/schemas/ResponseError/properties/meta\": schema not found"
}