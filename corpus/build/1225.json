{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Backbase/backbase-openapi-tools"
		},
		"file": {
			"name": "payment-order-client-api-v2.0.0.yaml",
			"path": "boat-maven-plugin/src/main/resources/payment-order-client-api-v2.0.0.yaml",
			"content": "openapi: 3.0.3\ninfo:\n  title: Payment Orders Client Api\n  description: \"Provides access to querying, initiating, approving and managing (recurring)\\\n    \\ payment orders, payment order drafts and batch payments.\\n# Payment types\\n\\\n    Different payment types are supported: SEPA, US domestic wire, ACH debit, among\\\n    \\ others. The configuration of the service determines which types will be accepted.\\\n    \\ The service supports configuring custom payment types.\\n# Dates\\nA general note\\\n    \\ on all the dates that are used by this API.\\nAll dates accept the format of\\\n    \\ yyyy-MM-dd.\\nValues will be interpreted according to the local time zone of\\\n    \\ where this application is running!\\nThis means that any timezone is ignored.\\n\"\n  version: 2.0.0\nservers:\n- url: http://localhost:4010\n  description: mock-api-server\n- url: http://localhost:8080\n  description: Springboot default port\n- url: https://localhost:8081\n  description: \"Best practice: use https\"\ntags:\n- name: approve\n  description: Payment approval API.\n- name: payment-orders\n  description: Core payments API.\n- name: utility\n  description: Utility endpoints.\n- name: validate\n  description: Validation of a payment.\npaths:\n  /client-api/v2/payment-orders:\n    summary: Payment Orders\n    get:\n      tags:\n      - payment-orders\n      summary: Retrieve list of payments orders.\n      description: Retrieve list of payments orders.\n      operationId: getPaymentOrders\n      parameters:\n      - name: status\n        in: query\n        description: Status of the payment\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - ENTERED\n            - READY\n            - ACCEPTED\n            - PROCESSED\n            - REJECTED\n            - CANCELLED\n            - CANCELLATION_PENDING\n      - name: paymentTypeGroup\n        in: query\n        description: |\n          Field used for searching payment orders by payment type group. Value should be one of the 'paymentTypeGroups'\n          which is configured in the application properties in the service.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          default: CREDIT\n      - name: createdByMe\n        in: query\n        description: \"If true: filter payment orders to return only the payments that\\\n          \\ have been created by the current user.\\nIf false: No additional filter\\\n          \\ should be added.\\n\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: boolean\n          default: false\n      - name: userId\n        in: query\n        description: |\n          The internal userId to load the payment orders from.\n          You will need to send the saId in conjunction with this parameter.\n          You must have the view privilege for \"Support Access for Payments\" function of \"Support Access\" resource\n          and be higher in the legal entities hierarchy to access other user payments.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: b3e4692d-6772-4fb2-9446-374857684932\n      - name: saId\n        in: query\n        description: |\n          The internal service agreement id that should be used for loading payment of a passed userId.\n          You will need to send the userId in conjunction with this parameter.\n          You must have the view privilege for \"Support Access for Payments\" function of \"Support Access\" resource\n          and be higher in the legal entities hierarchy to access other user payments.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\n      - name: query\n        in: query\n        description: \"Minimum length is 3.\\nThe search term used to make partial search\\\n          \\ on properties account name and iban/bban.\\nAdditions for batch-orders\\\n          \\ only: full search on currency, partial on batch name.\\n\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: John\n      - name: amountFrom\n        in: query\n        description: Lower value of the range search. The value is inclusive so this\n          is acting as \u003e=.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: number\n        example: 1000\n      - name: amountTo\n        in: query\n        description: Upper value of the range search. The value is inclusive so this\n          is acting as \u003c=.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: number\n        example: 10000\n      - name: executionDate\n        in: query\n        description: Exact value to match against the requested execution date.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          format: date\n        example: 2015-05-23\n      - name: executionDateFrom\n        in: query\n        description: Lower value of the range search. The value is inclusive so this\n          is acting as \u003e=.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          format: date\n        example: 2015-05-24\n      - name: executionDateTo\n        in: query\n        description: Upper value of the range search. The value is inclusive so this\n          is acting as \u003c=.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          format: date\n        example: 2015-05-25\n      - name: nextExecutionDate\n        in: query\n        description: Next execution date equals to\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          format: date\n        example: 2015-05-26\n      - name: nextExecutionDateFrom\n        in: query\n        description: Lower value of the range search. The value is inclusive so this\n          is acting as \u003e=.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          format: date\n        example: 2017-07-25\n      - name: nextExecutionDateTo\n        in: query\n        description: Upper value of the range search. The value is inclusive so this\n          is acting as \u003c=.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          format: date\n        example: 2017-07-26\n      - name: paymentMode\n        in: query\n        description: Whether to return recurring or single payment orders only.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          enum:\n          - SINGLE\n          - RECURRING\n      - name: paymentSetupId\n        in: query\n        description: Field used for searching by exact matches on payment setup id\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: abc\n      - name: transferFrequency\n        in: query\n        description: Field for searching on transfer frequencies\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          enum:\n          - ONCE\n          - DAILY\n          - WEEKLY\n          - BIWEEKLY\n          - MONTHLY\n          - QUARTERLY\n          - YEARLY\n      - name: from\n        in: query\n        description: Page Number. Skip over pages of elements by specifying a start\n          value for the query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int32\n          default: 0\n        example: 20\n      - name: size\n        in: query\n        description: \"Limit the number of elements on the response. When used in combination\\\n          \\ with cursor, the value\\nis allowed to be a negative number to indicate\\\n          \\ requesting records upwards from the starting point indicated\\nby the cursor.\\n\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int32\n          default: 10\n        example: 80\n      - name: orderBy\n        in: query\n        description: \"Order by field: status, originatorName, originatorAccount, counterpartyName,\\\n          \\ counterpartyAccount,\\ncurrency, amount, requestedExecutionDate\\n\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: direction\n        in: query\n        description: Direction\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          default: DESC\n          enum:\n          - ASC\n          - DESC\n      responses:\n        \"200\":\n          description: Gets a list of payment orders\n          headers:\n            X-Total-Count:\n              description: The total number of payments matching the search criteria.\n              style: simple\n              explode: false\n              schema:\n                type: integer\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentOrdersGet'\n              example:\n                $ref: '#/components/examples/payment-orders-payment-orders-get'\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestError'\n              examples:\n                example:\n                  $ref: '#/components/examples/example'\n                invalid-payment-type-group:\n                  $ref: '#/components/examples/invalid-payment-type-group'\n        \"500\":\n          description: InternalServer\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/internal-server-error'\n              example:\n                $ref: '#/components/examples/lib-internal-server-error'\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/forbidden-error'\n              example:\n                $ref: '#/components/examples/lib-forbidden-error'\n      x-BbAccessControl-resource: Payments\n      x-BbAccessControl-function: \"Different functions per payment type, eg 'SEPA\\\n        \\ CT', 'US Domestic Wire', etc\"\n      x-BbAccessControl-privilege: view\n    post:\n      tags:\n      - payment-orders\n      summary: Start a new Payment Order initiation process.\n      description: Start a new Payment Order initiation process\n      operationId: postPaymentOrders\n      parameters:\n      - name: X-MFA\n        in: header\n        description: Challenge payload response\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: sms challenge=\"123456789\"\n      requestBody:\n        description: Start a new Payment Order initiation process\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PaymentOrdersPost'\n            examples:\n              simple:\n                $ref: '#/components/examples/simple'\n              approved:\n                $ref: '#/components/examples/approved'\n              complex:\n                $ref: '#/components/examples/complex'\n              us-wire-domestic-payment-post:\n                $ref: '#/components/examples/us-wire-domestic-payment-post'\n              us-wire-international-payment-post:\n                $ref: '#/components/examples/us-wire-international-payment-post'\n              us-wire-international-payment-post-transfer-fee:\n                $ref: '#/components/examples/us-wire-international-payment-post-transfer-fee'\n              ach-debit-post:\n                $ref: '#/components/examples/ach-debit-post'\n              ach-credit-post:\n                $ref: '#/components/examples/ach-credit-post'\n        required: true\n      responses:\n        \"201\":\n          description: PaymentOrderCreated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentOrdersPostResponse'\n              examples:\n                simple:\n                  $ref: '#/components/examples/simple-1'\n                approved:\n                  $ref: '#/components/examples/approved-1'\n        \"202\":\n          description: PaymentOrderAccepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentOrdersPostResponse'\n              examples:\n                simple:\n                  $ref: '#/components/examples/simple-1'\n                approved:\n                  $ref: '#/components/examples/approved-1'\n        \"403\":\n          description: BreachReportError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BreachReportError'\n              example:\n                $ref: '#/components/examples/error-breach-report-error'\n        \"401\":\n          description: Unauthorized\n          headers:\n            WWW-Authenticate:\n              description: Comma separated challenges\n              style: simple\n              explode: false\n              schema:\n                type: string\n              example: \"sms challenge=\\\"\\\", pki challenge=\\\"Z8nlwZe0daUNWCWIbfJe3iIgauh\\\"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedError'\n              example:\n                $ref: '#/components/examples/lib-unauthorized-error'\n        \"500\":\n          description: InternalServer\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/internal-server-error'\n              example:\n                $ref: '#/components/examples/lib-internal-server-error'\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bad-request-error'\n              example:\n                $ref: '#/components/examples/lib-bad-request-validation-error'\n      x-BbAccessControl-resource: Payments;Product Summary (for enrichment)\n      x-BbAccessControl-function: \"Different functions per payment type, eg 'SEPA\\\n        \\ CT', 'US Domestic Wire', etc; Product Summary\"\n      x-BbAccessControl-privilege: create;view\n  /client-api/v2/payment-orders/validate:\n    summary: /validate\n    post:\n      tags:\n      - payment-orders\n      - validate\n      summary: Validate a payment order.\n      description: Validate a payment order\n      operationId: postValidate\n      requestBody:\n        description: Validate a payment order\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PaymentOrdersValidatePost'\n            examples:\n              simple:\n                $ref: '#/components/examples/simple'\n              complex:\n                $ref: '#/components/examples/complex'\n        required: true\n      responses:\n        \"200\":\n          description: \"The payment order is valid, enriched payment order is returned.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentOrdersValidatePostResponse'\n              examples:\n                default:\n                  $ref: '#/components/examples/default'\n                intra-legal-entity:\n                  $ref: '#/components/examples/intra-legal-entity'\n                can-approve:\n                  $ref: '#/components/examples/can-approve'\n                final-approver:\n                  $ref: '#/components/examples/final-approver'\n        \"500\":\n          description: InternalServer\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/internal-server-error'\n              example:\n                $ref: '#/components/examples/lib-internal-server-error'\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bad-request-error'\n              example:\n                $ref: '#/components/examples/lib-bad-request-validation-error'\n      x-BbAccessControl-resource: Product Summary (for enrichment)\n      x-BbAccessControl-function: Product Summary\n      x-BbAccessControl-privilege: view\n  /client-api/v2/payment-orders/bulk-approvals:\n    summary: Bulk Approvals\n    description: Performs a bulk approval operation on a set of payment orders\n    put:\n      tags:\n      - payment-orders\n      summary: Approve or reject a set of given payment orders at once.\n      description: Approve or reject a set of given payment orders at once\n      operationId: putBulkApprovals\n      requestBody:\n        description: Approve or reject a set of given payment orders at once\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BulkPaymentOrdersApprovalPutRequest'\n            example:\n              $ref: '#/components/examples/payment-orders-approval-bulk-payment-orders-approval-put-request'\n        required: true\n      responses:\n        \"200\":\n          description: Payment order with the approval status\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BulkPaymentOrdersApprovalPutResponse'\n              examples:\n                success:\n                  $ref: '#/components/examples/success'\n                limits-breach:\n                  $ref: '#/components/examples/limits-breach'\n        \"500\":\n          description: InternalServer\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/internal-server-error'\n              example:\n                $ref: '#/components/examples/lib-internal-server-error'\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bad-request-error'\n              example:\n                $ref: '#/components/examples/lib-bad-request-validation-error'\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/forbidden-error'\n              example:\n                $ref: '#/components/examples/lib-forbidden-error'\n      x-BbAccessControl-resource: Payments\n      x-BbAccessControl-function: \"Different functions per payment type, eg 'SEPA\\\n        \\ CT', 'US Domestic Wire', etc\"\n      x-BbAccessControl-privilege: \"view,approve\"\n  /client-api/v2/payment-orders/approvals:\n    summary: Approvable Payment Orders\n    description: This resources only provides and acts upon payment orders which can\n      be approved or rejected by the user.\n    get:\n      tags:\n      - payment-orders\n      summary: Retrieve payment orders that can be approved or rejected by the user.\n      description: Retrieve payment orders that can be approved or rejected by the\n        user.\n      operationId: getApprovablePaymentOrders\n      parameters:\n      - name: cursor\n        in: query\n        description: Record UUID. As an alternative for specifying 'from' this allows\n          to point to the record to start the selection from.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          default: \"\"\n        example: 76d5be8b-e80d-4842-8ce6-ea67519e8f74\n      - name: size\n        in: query\n        description: \"Limit the number of elements on the response. When used in combination\\\n          \\ with cursor, the value is allowed to be a negative number to indicate\\\n          \\ requesting records upwards from the starting point indicated by the cursor.\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int32\n          default: 10\n        example: 80\n      responses:\n        \"200\":\n          description: Response containing payment orders\n          headers:\n            X-Cursor:\n              description: The value to pass in the cursor query parameter to request\n                the next page.\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentOrdersGet'\n              example:\n                $ref: '#/components/examples/payment-orders-approvable-payment-orders-get'\n        \"500\":\n          description: InternalServer\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/internal-server-error'\n              example:\n                $ref: '#/components/examples/lib-internal-server-error'\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bad-request-error'\n              example:\n                $ref: '#/components/examples/lib-bad-request-validation-error'\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/forbidden-error'\n              example:\n                $ref: '#/components/examples/lib-forbidden-error'\n      x-BbAccessControl-resource: Payments\n      x-BbAccessControl-function: \"Different functions per payment type, eg 'SEPA\\\n        \\ CT', 'US Domestic Wire', etc\"\n      x-BbAccessControl-privilege: \"view,approve\"\n  /client-api/v2/payment-orders/{paymentOrderId}:\n    summary: Payment Order\n    description: The operations on the single payment order identified by the Id\n    get:\n      tags:\n      - payment-orders\n      description: Retrieve the single payment order\n      operationId: getPaymentOrderById\n      parameters:\n      - name: paymentOrderId\n        in: path\n        description: Payment Order ID\n        required: true\n        style: simple\n        explode: false\n        schema:\n          maxLength: 36\n          type: string\n      - name: userId\n        in: query\n        description: The internal userId to load the payment orders from. You will\n          need to send the saId in conjunction with this parameter. You must have\n          the view privilege for \"Support Access for Payments\" function of \"Support\n          Access\" resource and be higher in the legal entities hierarchy to access\n          other user payments.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: b3e4692d-6772-4fb2-9446-374857684932\n      - name: saId\n        in: query\n        description: The internal service agreement id that should be used for loading\n          payment of a passed userId. You will need to send the userId in conjunction\n          with this parameter. You must have the view privilege for \"Support Access\n          for Payments\" function of \"Support Access\" resource and be higher in the\n          legal entities hierarchy to access other user payments.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\n      responses:\n        \"200\":\n          description: Gets a single payment order\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentOrderGetResponse'\n              examples:\n                simple:\n                  $ref: '#/components/examples/simple-2'\n                withApprovalDetails:\n                  $ref: '#/components/examples/withApprovalDetails'\n                withLogicalApprovalDetails:\n                  $ref: '#/components/examples/withLogicalApprovalDetails'\n        \"404\":\n          description: NotFound\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/not-found-error'\n              example:\n                $ref: '#/components/examples/lib-not-found-error'\n        \"500\":\n          description: InternalServer\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/internal-server-error'\n              example:\n                $ref: '#/components/examples/lib-internal-server-error'\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bad-request-error'\n              example:\n                $ref: '#/components/examples/lib-bad-request-validation-error'\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/forbidden-error'\n              example:\n                $ref: '#/components/examples/lib-forbidden-error'\n      x-BbAccessControl-resource: Payments\n      x-BbAccessControl-function: \"Different functions per payment type, eg 'SEPA\\\n        \\ CT', 'US Domestic Wire', etc\"\n      x-BbAccessControl-privilege: view\n    put:\n      tags:\n      - payment-orders\n      summary: Updates a single payment order.\n      description: \"### Updates a single payment order.  \\n\\nNot implemented.\\n\\n\"\n      operationId: putPaymentOrderById\n      parameters:\n      - name: paymentOrderId\n        in: path\n        description: Payment Order ID\n        required: true\n        style: simple\n        explode: false\n        schema:\n          maxLength: 36\n          type: string\n      - name: X-MFA\n        in: header\n        description: Challenge payload response\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: sms challenge=\"123456789\"\n      requestBody:\n        description: \"### Updates a single payment order.  \\n\\nNot implemented.\\n\\n\"\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PaymentOrderPut'\n            example:\n              $ref: '#/components/examples/payment-orders-payment-orders-put-single'\n        required: true\n      responses:\n        \"201\":\n          description: PaymentOrderCreated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentOrdersPostResponse'\n              examples:\n                simple:\n                  $ref: '#/components/examples/simple-1'\n                approved:\n                  $ref: '#/components/examples/approved-1'\n        \"202\":\n          description: PaymentOrderAccepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentOrdersPostResponse'\n              examples:\n                simple:\n                  $ref: '#/components/examples/simple-1'\n                approved:\n                  $ref: '#/components/examples/approved-1'\n        \"403\":\n          description: BreachReportError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BreachReportError'\n              example:\n                $ref: '#/components/examples/error-breach-report-error'\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/unauthorized-error'\n              example:\n                $ref: '#/components/examples/lib-unauthorized-error'\n        \"500\":\n          description: InternalServer\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/internal-server-error'\n              example:\n                $ref: '#/components/examples/lib-internal-server-error'\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bad-request-error'\n              example:\n                $ref: '#/components/examples/lib-bad-request-validation-error'\n    delete:\n      tags:\n      - payment-orders\n      summary: Deletes a payment order if:.\n      description: |-\n        Deletes a payment order if:\n\n        - The version is the exact same as the stored database.\n        - The payment status in DBS is Entered\n        - Has no approvals or approval is disabled\n        - Request comes from a user who is the creator/initiator of the payment\n        - The user has the required entitlement:\n          - ?Delete' permission for the corresponding business function (respective payment type) and arrangement id\n      operationId: deletePaymentOrderById\n      parameters:\n      - name: paymentOrderId\n        in: path\n        description: Payment Order ID\n        required: true\n        style: simple\n        explode: false\n        schema:\n          maxLength: 36\n          type: string\n      - name: version\n        in: query\n        description: Query string\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int32\n      responses:\n        \"204\":\n          description: Payment Order has been deleted\n        \"500\":\n          description: InternalServer\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/internal-server-error'\n              example:\n                $ref: '#/components/examples/lib-internal-server-error'\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bad-request-error'\n              example:\n                $ref: '#/components/examples/lib-bad-request-validation-error'\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/forbidden-error'\n              example:\n                $ref: '#/components/examples/lib-forbidden-error'\n      x-BbAccessControl-resource: Payments\n      x-BbAccessControl-function: \"Different functions per payment type, eg 'SEPA\\\n        \\ CT', 'US Domestic Wire', etc\"\n      x-BbAccessControl-privilege: delete\n  /client-api/v2/payment-orders/{paymentOrderId}/approvals:\n    summary: Approvals\n    description: Performs an approval operation on the given payment order\n    put:\n      tags:\n      - payment-orders\n      - approve\n      description: Approves or rejects a given payment order\n      operationId: putApprovalsByPaymentOrderId\n      parameters:\n      - name: paymentOrderId\n        in: path\n        description: Payment Order ID\n        required: true\n        style: simple\n        explode: false\n        schema:\n          maxLength: 36\n          type: string\n      requestBody:\n        description: Approves or rejects a given payment order\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PaymentOrderApprovalPutRequest'\n            example:\n              $ref: '#/components/examples/payment-orders-approval-payment-order-approval-put-request'\n        required: true\n      responses:\n        \"202\":\n          description: PaymentOrderAccepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentOrdersPostResponse'\n              examples:\n                simple:\n                  $ref: '#/components/examples/simple-1'\n                approved:\n                  $ref: '#/components/examples/approved-1'\n        \"403\":\n          description: BreachReportError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BreachReportError'\n              example:\n                $ref: '#/components/examples/error-breach-report-error'\n        \"500\":\n          description: InternalServer\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/internal-server-error'\n              example:\n                $ref: '#/components/examples/lib-internal-server-error'\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bad-request-error'\n              example:\n                $ref: '#/components/examples/lib-bad-request-validation-error'\n      x-BbAccessControl-resource: Payments\n      x-BbAccessControl-function: \"Different functions per payment type, eg 'SEPA\\\n        \\ CT', 'US Domestic Wire', etc\"\n      x-BbAccessControl-privilege: \"view,approve\"\n  /client-api/v2/payment-orders/{paymentOrderId}/cancel:\n    summary: Cancel payment order\n    description: The operations on the single payment order identified by the internal\n      id\n    post:\n      tags:\n      - payment-orders\n      description: Cancel a single payment order.\n      operationId: postCancelByPaymentOrderId\n      parameters:\n      - name: paymentOrderId\n        in: path\n        description: Payment Order ID\n        required: true\n        style: simple\n        explode: false\n        schema:\n          maxLength: 36\n          type: string\n      requestBody:\n        description: Cancel a single payment order.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PaymentOrderCancelPostRequest'\n            example:\n              $ref: '#/components/examples/payment-orders-payment-order-cancel-request'\n        required: true\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentOrderCancelPostResponse'\n              example:\n                $ref: '#/components/examples/payment-orders-payment-order-cancel-response'\n        \"500\":\n          description: InternalServer\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/internal-server-error'\n              example:\n                $ref: '#/components/examples/lib-internal-server-error'\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bad-request-error'\n              example:\n                $ref: '#/components/examples/lib-bad-request-validation-error'\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/forbidden-error'\n              example:\n                $ref: '#/components/examples/lib-forbidden-error'\n        \"404\":\n          description: NotFound\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/not-found-error'\n              example:\n                $ref: '#/components/examples/lib-not-found-error'\n      x-BbAccessControl-resource: Payments\n      x-BbAccessControl-function: \"Different functions per payment type, eg 'SEPA\\\n        \\ CT', 'US Domestic Wire', etc\"\n      x-BbAccessControl-privilege: cancel\n  /client-api/v2/payment-orders/currencies:\n    summary: Currencies\n    description: Endpoint to manipulate currencies\n    get:\n      tags:\n      - payment-orders\n      - utility\n      description: Get currencies available for payment\n      operationId: getCurrencies\n      responses:\n        \"200\":\n          description: Currencies\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CurrenciesGet'\n              example:\n                $ref: '#/components/examples/payment-orders-currencies-get-response'\n        \"500\":\n          description: InternalServer\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/internal-server-error'\n              example:\n                $ref: '#/components/examples/lib-internal-server-error'\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bad-request-error'\n              example:\n                $ref: '#/components/examples/lib-bad-request-validation-error'\n  /client-api/v2/payment-orders/rate:\n    summary: Rate\n    description: Endpoint to get exchange rate\n    get:\n      tags:\n      - payment-orders\n      - utility\n      description: Get available rate for currencies\n      operationId: getRate\n      parameters:\n      - name: currencyFrom\n        in: query\n        description: Currency transfer from\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: EUR\n      - name: currencyTo\n        in: query\n        description: Currency transfer to\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: USD\n      responses:\n        \"200\":\n          description: Response containing converted rate\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateGet'\n              example:\n                $ref: '#/components/examples/payment-orders-rate-get-response'\n        \"500\":\n          description: InternalServer\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/internal-server-error'\n              example:\n                $ref: '#/components/examples/lib-internal-server-error'\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bad-request-error'\n              example:\n                $ref: '#/components/examples/lib-bad-request-validation-error'\ncomponents:\n  schemas:\n    PaymentOrdersGet:\n      title: PaymentOrdersGet\n      type: array\n      description: List of Payment Orders\n      items:\n        $ref: '#/components/schemas/IdentifiedPaymentOrder'\n    PaymentOrdersPost:\n      title: InitiatePaymentOrder\n      required:\n      - originatorAccount\n      - requestedExecutionDate\n      - transferTransactionInformation\n      type: object\n      properties:\n        originatorAccount:\n          $ref: '#/components/schemas/AccountIdentification'\n        batchBooking:\n          type: boolean\n          description: Indicate whenever there should be only one debit posting for\n            the whole set of instructions\n        instructionPriority:\n          type: string\n          description: Specify the priority of execution of the payment order.\n          enum:\n          - NORM\n          - HIGH\n        requestedExecutionDate:\n          type: string\n          description: The preferred date for the payment order to be executed.\n          format: date\n        paymentMode:\n          type: string\n          description: Denotes whether payment will be single or will be recurring\n          enum:\n          - SINGLE\n          - RECURRING\n        paymentType:\n          maxLength: 22\n          minLength: 1\n          type: string\n          description: The type of payment.\n        schedule:\n          $ref: '#/components/schemas/Schedule'\n        entryClass:\n          maxLength: 3\n          type: string\n          description: Used for ACH Standard Entry Class (SEC) Code to designate how\n            the transaction was authorized by the originator.\n        transferTransactionInformation:\n          $ref: '#/components/schemas/InitiateTransaction'\n        approved:\n          type: boolean\n          description: \"When set to true, the submitted payment order will also be\\\n            \\ approved by the user.\"\n    PaymentOrdersPostResponse:\n      title: PaymentOrdersPostResponse\n      required:\n      - id\n      - status\n      type: object\n      properties:\n        id:\n          type: string\n        status:\n          type: string\n          description: The internal DBS status of the payment order..\n          enum:\n          - DRAFT\n          - ENTERED\n          - READY\n          - ACCEPTED\n          - PROCESSED\n          - REJECTED\n          - CANCELLED\n          - CANCELLATION_PENDING\n          - CONFIRMATION_PENDING\n          - CONFIRMATION_DECLINED\n        bankStatus:\n          maxLength: 35\n          type: string\n          description: Internal status of the payment or batch order in the core banking\n            system.\n        reasonCode:\n          maxLength: 4\n          type: string\n          description: Reason code the core banking system accepted/rejected the payment\n            or batch.\n        reasonText:\n          maxLength: 35\n          type: string\n          description: Human readable reason the core banking system accepted/rejected\n            the payment or batch.\n        errorDescription:\n          maxLength: 105\n          type: string\n          description: Additional information from the core banking system on why\n            the payment was refused.\n        nextExecutionDate:\n          type: string\n          description: The execution date of the payment that the core system calculated.\n          format: date\n        paymentSetupId:\n          maxLength: 128\n          type: string\n          description: Generated when the PISP sets up the payments before the Backbase\n            authorization flow.\n        paymentSubmissionId:\n          maxLength: 128\n          type: string\n          description: Generated when the PISP submits the payment which is after\n            the Backbase authorization flow.\n        approvalStatus:\n          maxLength: 70\n          type: string\n          description: The status as returned by the approval service.\n        transferFee:\n          $ref: '#/components/schemas/Currency'\n        exchangeRateInformation:\n          $ref: '#/components/schemas/ExchangeRateInformation'\n        additions:\n          type: object\n          additionalProperties:\n            type: string\n    PaymentOrdersValidatePost:\n      title: InitiatePaymentOrder\n      required:\n      - originatorAccount\n      - requestedExecutionDate\n      - transferTransactionInformation\n      type: object\n      properties:\n        originatorAccount:\n          $ref: '#/components/schemas/AccountIdentification'\n        batchBooking:\n          type: boolean\n          description: Indicate whenever there should be only one debit posting for\n            the whole set of instructions\n        instructionPriority:\n          type: string\n          description: Specify the priority of execution of the payment order.\n          enum:\n          - NORM\n          - HIGH\n        requestedExecutionDate:\n          type: string\n          description: The preferred date for the payment order to be executed.\n          format: date\n        paymentMode:\n          type: string\n          description: Denotes whether payment will be single or will be recurring\n          enum:\n          - SINGLE\n          - RECURRING\n        paymentType:\n          maxLength: 22\n          minLength: 1\n          type: string\n          description: The type of payment.\n        schedule:\n          $ref: '#/components/schemas/Schedule'\n        entryClass:\n          maxLength: 3\n          type: string\n          description: Used for ACH Standard Entry Class (SEC) Code to designate how\n            the transaction was authorized by the originator.\n        transferTransactionInformation:\n          $ref: '#/components/schemas/InitiateTransaction'\n        approved:\n          type: boolean\n          description: \"When set to true, the submitted payment order will also be\\\n            \\ approved by the user.\"\n    PaymentOrdersValidatePostResponse:\n      title: PaymentOrdersValidatePostResponse\n      required:\n      - canApprove\n      - finalApprover\n      - isIntraLegalEntityPaymentOrder\n      type: object\n      properties:\n        originatorAccount:\n          $ref: '#/components/schemas/OriginatorAccount'\n        batchBooking:\n          type: boolean\n          description: Indicate whenever there should be only one debit posting for\n            the whole set of instructions\n        instructionPriority:\n          type: string\n          description: Specify the priority of execution of the payment order.\n          enum:\n          - NORM\n          - HIGH\n        requestedExecutionDate:\n          type: string\n          description: The preferred date for the payment order to be executed.\n          format: date\n        paymentMode:\n          type: string\n          description: Denotes whether payment will be single or will be recurring\n          enum:\n          - SINGLE\n          - RECURRING\n        paymentType:\n          maxLength: 22\n          minLength: 1\n          type: string\n          description: The type of payment.\n        entryClass:\n          maxLength: 3\n          type: string\n          description: Used for ACH Standard Entry Class (SEC) Code to designate how\n            the transaction was authorized by the originator.\n        schedule:\n          $ref: '#/components/schemas/Schedule'\n        transferTransactionInformation:\n          $ref: '#/components/schemas/IdentifiedTransaction'\n        paymentSetupId:\n          maxLength: 128\n          type: string\n          description: Generated when the PISP sets up the payments before the Backbase\n            authorization flow.\n        paymentSubmissionId:\n          maxLength: 128\n          type: string\n          description: Generated when the PISP submits the payment which is after\n            the Backbase authorization flow.\n        originator:\n          $ref: '#/components/schemas/InvolvedParty'\n        totalAmount:\n          $ref: '#/components/schemas/Currency'\n        isIntraLegalEntityPaymentOrder:\n          type: boolean\n          description: This flag is true to indicate the validated payment order is\n            a payment order between two accounts within the same legal entity.\n        canApprove:\n          type: boolean\n          description: This flag is true to indicate that an approval can be created\n            and approved by the current user for the validated payment order.\n        finalApprover:\n          type: boolean\n          description: This flag is true to indicate that the current user will be\n            the final approver for the validated payment order.\n        additions:\n          type: object\n          additionalProperties:\n            type: string\n    BulkPaymentOrdersApprovalPutRequest:\n      title: BulkPaymentOrdersApprovalPutRequest\n      required:\n      - approvalStatus\n      - paymentOrderIds\n      type: object\n      properties:\n        approvalStatus:\n          type: string\n          description: The options for approval.\n          enum:\n          - APPROVED\n          - REJECTED\n        paymentOrderIds:\n          type: array\n          description: The list of ids of the payment orders to bulk update.\n          items:\n            pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n            type: string\n            description: Unique identification of the payment order.\n        comment:\n          maxLength: 140\n          type: string\n          description: \"When approving or rejecting, the user can add comments which\\\n            \\ would explain the reason for the action.\"\n    BulkPaymentOrdersApprovalPutResponse:\n      title: BulkPaymentOrdersApprovalPutResponse\n      required:\n      - approvalStatus\n      - failCount\n      - paymentOrders\n      - successCount\n      type: object\n      properties:\n        approvalStatus:\n          type: string\n          description: The status of the approval.\n          enum:\n          - PENDING\n          - APPROVED\n          - REJECTED\n          - CANCELLED\n        comment:\n          maxLength: 140\n          type: string\n          description: \"When approving or rejecting, the user can add comments which\\\n            \\ would explain the reason for the action.\"\n        paymentOrders:\n          type: array\n          description: The list of payment orders including details about the operation\n            and new status.\n          items:\n            required:\n            - paymentOrderId\n            - status\n            type: object\n            properties:\n              paymentOrderId:\n                pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n                type: string\n                description: Unique identification of the payment order.\n              paymentOrder:\n                $ref: '#/components/schemas/IdentifiedPaymentOrder'\n              approvalStatus:\n                maxLength: 70\n                type: string\n                description: The current status of the approval request as returned\n                  by the approval service after the update. This will be empty if\n                  the payment order or approval was not found.\n              status:\n                required:\n                - code\n                type: object\n                properties:\n                  code:\n                    type: string\n                    description: \"OK if the payment order was updated successfully,\\\n                      \\ ERROR otherwise.\"\n                    enum:\n                    - OK\n                    - ERROR\n                  message:\n                    type: string\n                    description: Main error message\n                  errors:\n                    type: array\n                    description: Details why the update failed. Uses the same error\n                      items from building blocks.\n                    items:\n                      $ref: '#/components/schemas/ErrorItem'\n                description: A status object to report about the result of the operation.\n                  In case of error it contains details about why it failed.\n              breachReport:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BreachReportItem'\n        successCount:\n          type: integer\n          description: The number of payment orders processed successfully.\n          format: int32\n        failCount:\n          type: integer\n          description: The number of payment orders that failed processing.\n          format: int32\n    PaymentOrderGetResponse:\n      title: PaymentOrderGet\n      required:\n      - id\n      - status\n      - version\n      type: object\n      properties:\n        approvalDetails:\n          $ref: '#/components/schemas/PresentationApprovalDetailDto'\n        id:\n          pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n          type: string\n          description: Unique identification of the payment order.\n        approvalId:\n          pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n          type: string\n          description: The id of the approval request that is or was used to get this\n            item approved.\n        status:\n          type: string\n          description: The internal DBS status of the payment order..\n          enum:\n          - DRAFT\n          - ENTERED\n          - READY\n          - ACCEPTED\n          - PROCESSED\n          - REJECTED\n          - CANCELLED\n          - CANCELLATION_PENDING\n          - CONFIRMATION_PENDING\n          - CONFIRMATION_DECLINED\n        bankStatus:\n          maxLength: 35\n          type: string\n          description: Internal status of the payment or batch order in the core banking\n            system.\n        reasonCode:\n          maxLength: 4\n          type: string\n          description: Reason code the core banking system accepted/rejected the payment\n            or batch.\n        reasonText:\n          maxLength: 35\n          type: string\n          description: Human readable reason the core banking system accepted/rejected\n            the payment or batch.\n        errorDescription:\n          maxLength: 105\n          type: string\n          description: Additional information from the core banking system on why\n            the payment was refused.\n        createdBy:\n          maxLength: 128\n          type: string\n          description: Creator user info.\n        createdAt:\n          type: string\n          description: Date and time indicating when the payment was created\n          format: date-time\n        updatedBy:\n          maxLength: 128\n          type: string\n          description: Updater user info.\n        updatedAt:\n          type: string\n          description: Date and time indicating when the payment was updated\n          format: date-time\n        actions:\n          $ref: '#/components/schemas/Actions'\n        version:\n          type: integer\n          description: Indication of what version the payment order currently has\n          format: int32\n        contextualInformation:\n          $ref: '#/components/schemas/ContextualInformation'\n        intraLegalEntity:\n          type: boolean\n          description: Indication if this payment was an intra-company payment.\n        originatorAccountCurrency:\n          pattern: \"^[A-Z]{3}$\"\n          type: string\n          description: Currency code of the payment order originating account\n        confirmationId:\n          maxLength: 36\n          minLength: 1\n          type: string\n          description: The confirmation id for transaction signing.\n        paymentSetupId:\n          maxLength: 128\n          type: string\n          description: Generated when the PISP sets up the payments before the Backbase\n            authorization flow.\n        paymentSubmissionId:\n          maxLength: 128\n          type: string\n          description: Generated when the PISP submits the payment which is after\n            the Backbase authorization flow.\n        originator:\n          $ref: '#/components/schemas/InvolvedParty'\n        originatorAccount:\n          $ref: '#/components/schemas/OriginatorAccount'\n        batchBooking:\n          type: boolean\n          description: Indicate whenever there should be only one debit posting for\n            the whole set of instructions\n        instructionPriority:\n          type: string\n          description: Specify the priority of execution of the payment order.\n          enum:\n          - NORM\n          - HIGH\n        requestedExecutionDate:\n          type: string\n          description: The preferred date for the payment order to be executed.\n          format: date\n        paymentMode:\n          type: string\n          description: Denotes whether payment will be single or will be recurring\n          enum:\n          - SINGLE\n          - RECURRING\n        paymentType:\n          maxLength: 22\n          minLength: 1\n          type: string\n          description: The type of payment.\n        entryClass:\n          maxLength: 3\n          type: string\n          description: Used for ACH Standard Entry Class (SEC) Code to designate how\n            the transaction was authorized by the originator.\n        schedule:\n          $ref: '#/components/schemas/Schedule'\n        transferTransactionInformation:\n          $ref: '#/components/schemas/IdentifiedTransaction'\n        totalAmount:\n          $ref: '#/components/schemas/Currency'\n        additions:\n          type: object\n          additionalProperties:\n            type: string\n    PaymentOrderPut:\n      title: InitiatePaymentOrderWithId\n      type: object\n      allOf:\n      - $ref: '#/components/schemas/InitiatePaymentOrder'\n      - required:\n        - id\n        type: object\n        properties:\n          id:\n            $ref: '#/components/schemas/PaymentId'\n    PaymentOrderApprovalPutRequest:\n      title: ApprovalStatusPutRequest\n      required:\n      - approvalStatus\n      type: object\n      properties:\n        approvalStatus:\n          type: string\n          description: The options for approval.\n          enum:\n          - APPROVED\n          - REJECTED\n        comment:\n          maxLength: 140\n          type: string\n          description: \"When approving or rejecting, the user can add comments which\\\n            \\ would explain the reason for the action.\"\n    PaymentOrderCancelPostRequest:\n      title: CancelRequest\n      required:\n      - version\n      type: object\n      properties:\n        version:\n          type: integer\n          description: Indication of what version the payment the user wants to cancel\n          format: int32\n    PaymentOrderCancelPostResponse:\n      title: CancelResponse\n      required:\n      - accepted\n      type: object\n      properties:\n        accepted:\n          type: boolean\n          description: Indication if the cancel request was accepted\n    CurrenciesGet:\n      title: CurrenciesGet\n      type: array\n      description: Currencies available for payment response\n      items:\n        $ref: '#/components/schemas/CurrenciesGetResponseBody'\n    RateGet:\n      title: RateGet\n      required:\n      - rate\n      type: object\n      properties:\n        rate:\n          type: number\n          description: Rate for given currencies\n    BadRequestError:\n      title: BadRequestError\n      required:\n      - message\n      type: object\n      properties:\n        message:\n          type: string\n          description: Any further information\n        errors:\n          type: array\n          description: Detailed error information\n          items:\n            $ref: '#/components/schemas/error-item'\n    UnauthorizedError:\n      title: UnauthorizedError\n      type: object\n      properties:\n        message:\n          type: string\n          description: Any further information\n        errors:\n          type: array\n          description: Detailed error information\n          items:\n            $ref: '#/components/schemas/error-item'\n    internal-server-error:\n      title: InternalServerError\n      type: object\n      properties:\n        message:\n          type: string\n          description: Further Information\n      description: Represents HTTP 500 Internal Server Error\n    forbidden-error:\n      title: ForbiddenError\n      type: object\n      properties:\n        message:\n          type: string\n          description: Any further information\n        errors:\n          type: array\n          description: Detailed error information\n          items:\n            $ref: '#/components/schemas/error-item'\n    BreachReportError:\n      required:\n      - message\n      type: object\n      properties:\n        message:\n          type: string\n        payment:\n          $ref: '#/components/schemas/IdentifiedPaymentOrder'\n        checkTime:\n          type: string\n          format: date-time\n        breachReport:\n          type: array\n          items:\n            $ref: '#/components/schemas/BreachReportItem'\n    IdentifiedPaymentOrder:\n      required:\n      - id\n      - status\n      - version\n      properties:\n        id:\n          pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n          type: string\n          description: Unique identification of the payment order.\n        approvalId:\n          pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n          type: string\n          description: The id of the approval request that is or was used to get this\n            item approved.\n        status:\n          type: string\n          description: The internal DBS status of the payment order..\n          enum:\n          - DRAFT\n          - ENTERED\n          - READY\n          - ACCEPTED\n          - PROCESSED\n          - REJECTED\n          - CANCELLED\n          - CANCELLATION_PENDING\n          - CONFIRMATION_PENDING\n          - CONFIRMATION_DECLINED\n        bankStatus:\n          maxLength: 35\n          type: string\n          description: Internal status of the payment or batch order in the core banking\n            system.\n        reasonCode:\n          maxLength: 4\n          type: string\n          description: Reason code the core banking system accepted/rejected the payment\n            or batch.\n        reasonText:\n          maxLength: 35\n          type: string\n          description: Human readable reason the core banking system accepted/rejected\n            the payment or batch.\n        errorDescription:\n          maxLength: 105\n          type: string\n          description: Additional information from the core banking system on why\n            the payment was refused.\n        createdBy:\n          maxLength: 128\n          type: string\n          description: Creator user info.\n        createdAt:\n          type: string\n          description: Date and time indicating when the payment was created\n          format: date-time\n        updatedBy:\n          maxLength: 128\n          type: string\n          description: Updater user info.\n        updatedAt:\n          type: string\n          description: Date and time indicating when the payment was updated\n          format: date-time\n        actions:\n          $ref: '#/components/schemas/Actions'\n        version:\n          type: integer\n          description: Indication of what version the payment order currently has\n          format: int32\n        contextualInformation:\n          $ref: '#/components/schemas/ContextualInformation'\n        intraLegalEntity:\n          type: boolean\n          description: Indication if this payment was an intra-company payment.\n        originatorAccountCurrency:\n          pattern: \"^[A-Z]{3}$\"\n          type: string\n          description: Currency code of the payment order originating account\n        confirmationId:\n          maxLength: 36\n          minLength: 1\n          type: string\n          description: The confirmation id for transaction signing.\n        paymentSetupId:\n          maxLength: 128\n          type: string\n          description: Generated when the PISP sets up the payments before the Backbase\n            authorization flow.\n        paymentSubmissionId:\n          maxLength: 128\n          type: string\n          description: Generated when the PISP submits the payment which is after\n            the Backbase authorization flow.\n        originator:\n          $ref: '#/components/schemas/InvolvedParty'\n        originatorAccount:\n          $ref: '#/components/schemas/OriginatorAccount'\n        batchBooking:\n          type: boolean\n          description: Indicate whenever there should be only one debit posting for\n            the whole set of instructions\n        instructionPriority:\n          type: string\n          description: Specify the priority of execution of the payment order.\n          enum:\n          - NORM\n          - HIGH\n        requestedExecutionDate:\n          type: string\n          description: The preferred date for the payment order to be executed.\n          format: date\n        paymentMode:\n          type: string\n          description: Denotes whether payment will be single or will be recurring\n          enum:\n          - SINGLE\n          - RECURRING\n        paymentType:\n          maxLength: 22\n          minLength: 1\n          type: string\n          description: The type of payment.\n        entryClass:\n          maxLength: 3\n          type: string\n          description: Used for ACH Standard Entry Class (SEC) Code to designate how\n            the transaction was authorized by the originator.\n        schedule:\n          $ref: '#/components/schemas/Schedule'\n        transferTransactionInformation:\n          $ref: '#/components/schemas/IdentifiedTransaction'\n        totalAmount:\n          $ref: '#/components/schemas/Currency'\n        additions:\n          type: object\n          additionalProperties:\n            type: string\n    Actions:\n      type: array\n      description: An array of actions that could be performed on a payment order.\n        Actions that can be done are dependant on the payment itself.\n      items:\n        type: string\n        description: The actions that can be performed by the user (with the current\n          context). This field is not evaluated when payment is requested by support\n          employee on behalf of another user.\n        enum:\n        - APPROVE\n        - FINAL_APPROVE\n        - REJECT\n        - CANCEL\n        - DELETE\n    ContextualInformation:\n      required:\n      - externalUserId\n      - origin\n      - serviceAgreementId\n      type: object\n      properties:\n        externalUserId:\n          maxLength: 64\n          type: string\n          description: The (unique and human readable) external user id of the user.\n        internalUserId:\n          maxLength: 36\n          minLength: 1\n          type: string\n          description: General purpose identifier. Can be UUID but does not have to.\n        serviceAgreementId:\n          maxLength: 36\n          minLength: 1\n          type: string\n          description: General purpose identifier. Can be UUID but does not have to.\n        legalEntityId:\n          maxLength: 36\n          minLength: 1\n          type: string\n          description: General purpose identifier. Can be UUID but does not have to.\n        origin:\n          maxLength: 200\n          minLength: 1\n          type: string\n          description: Name the system where endpoint is calling from\n    ExternalUserId:\n      maxLength: 64\n      type: string\n      description: The (unique and human readable) external user id of the user.\n    InvolvedParty:\n      required:\n      - name\n      type: object\n      properties:\n        name:\n          maxLength: 140\n          type: string\n        role:\n          type: string\n          description: These are the possible values the role of an involved party\n            can  have.\n          enum:\n          - CREDITOR\n          - DEBTOR\n        postalAddress:\n          $ref: '#/components/schemas/PostalAddress'\n        recipientId:\n          maxLength: 15\n          type: string\n          description: Used for ACH Credit to indicate the id of the recipient\n      description: This object is a common denominator for the debtor or creditor\n        party.\n    BatchBooking:\n      type: boolean\n      description: Indicate whenever there should be only one debit posting for the\n        whole set of instructions\n    PaymentMode:\n      type: string\n      description: Denotes whether payment will be single or will be recurring\n      enum:\n      - SINGLE\n      - RECURRING\n    Schedule:\n      required:\n      - every\n      - \"on\"\n      - startDate\n      - transferFrequency\n      type: object\n      properties:\n        nonWorkingDayExecutionStrategy:\n          type: string\n          description: Strategy for executing payments on non-working days\n          enum:\n          - BEFORE\n          - AFTER\n          - NONE\n        transferFrequency:\n          type: string\n          description: Denotes how frequently the transfer should be made\n          enum:\n          - ONCE\n          - DAILY\n          - WEEKLY\n          - BIWEEKLY\n          - MONTHLY\n          - QUARTERLY\n          - YEARLY\n        \"on\":\n          type: integer\n          description: Denotes day on which transfer should be executed. For WEEKLY\n            transferFrequency it will be 1..7 indicating weekday. For BIWEEKLY it\n            will be 1..14 indicating the day of the two week period. For MONTHLY it\n            will be 1..31 indicating day of month. For YEARLY it will be 1..12 indicating\n            month of the year.\n          format: int32\n        startDate:\n          type: string\n          description: When to start executing the schedule. First transfer will be\n            executed on first calculated date by schedule after this date.\n          format: date\n        endDate:\n          type: string\n          description: When to stop transfers. Transfers will not be executed after\n            this date. Only one of endDate and repeat is possible. If neither repeat\n            nor endDate is provided transfer will be executed until canceled\n          format: date\n        repeat:\n          type: integer\n          description: Number of transfer to be executed. Only one of endDate and\n            repeat is possible. If neither repeat nor endDate is provided transfer\n            will be executed until canceled\n          format: int32\n        every:\n          type: integer\n          description: \"Indicates skip interval of transfer. 1 would mean execute\\\n            \\ every time, 2 - every other time\"\n          format: int32\n          enum:\n          - 1\n          - 2\n        nextExecutionDate:\n          type: string\n          description: \"Date when the next payment will be executed, taking in consideration\\\n            \\ bank holidays and cut-off times. It will be only retrieved when getting\\\n            \\ payments, it will be dismissed when creating or updating.\"\n          format: date\n      description: Schedule for recurring transfer. Mandatory if paymentMode is RECURRING\n    IdentifiedTransaction:\n      required:\n      - counterparty\n      - counterpartyAccount\n      - instructedAmount\n      type: object\n      properties:\n        counterparty:\n          $ref: '#/components/schemas/InvolvedParty'\n        counterpartyAccount:\n          $ref: '#/components/schemas/CounterpartyAccount'\n        counterpartyBank:\n          $ref: '#/components/schemas/Bank'\n        instructedAmount:\n          $ref: '#/components/schemas/Currency'\n        correspondentBank:\n          $ref: '#/components/schemas/Bank'\n        intermediaryBank:\n          $ref: '#/components/schemas/Bank'\n        messageToBank:\n          maxLength: 140\n          type: string\n          description: The message to the bank used for US domestic wire payments\n        targetCurrency:\n          pattern: \"^[A-Z]{3}$\"\n          type: string\n          description: The alpha-3 code (complying with ISO 4217) of the currency\n        remittanceInformation:\n          $ref: '#/components/schemas/RemittanceInformation'\n        endToEndIdentification:\n          maxLength: 35\n          type: string\n        mandateIdentifier:\n          maxLength: 15\n          type: string\n          description: \"The mandate identifier, of the counter party, giving permission\\\n            \\ for the debit order.\"\n        chargeBearer:\n          type: string\n          description: \"Indicated who pays the fees for an international transfer.\\\n            \\ Possible values: OUR(originator), BEN(beneficiary or SHA(shared).\"\n          enum:\n          - OUR\n          - BEN\n          - SHA\n        transferFee:\n          $ref: '#/components/schemas/Currency'\n        exchangeRateInformation:\n          $ref: '#/components/schemas/ExchangeRateInformation'\n      description: \"The object defining the identified transaction, which means the\\\n        \\ counterparty will have a arrangementId where applicable.\"\n    CounterpartyAccount:\n      required:\n      - identification\n      properties:\n        accountType:\n          maxLength: 10\n          type: string\n          description: \"The type of the account, e.g. for ACH we have CHECKING/SAVINGS\"\n        arrangementId:\n          maxLength: 36\n          minLength: 1\n          type: string\n          description: The unique arrangement id.\n        externalArrangementId:\n          maxLength: 70\n          minLength: 1\n          type: string\n          description: The external unique arrangement id.\n        identification:\n          $ref: '#/components/schemas/Identification'\n        name:\n          maxLength: 140\n          type: string\n          description: Default name field used in DBS\n      description: The counterparty Account is the original account identification\n        plus the arrangement if applicable.\n    Name:\n      maxLength: 140\n      type: string\n      description: Default name field used in DBS\n    Bank:\n      type: object\n      properties:\n        bankBranchCode:\n          maxLength: 11\n          type: string\n          description: \"Some code to identify a bank office, p.e. ABA routing transit\\\n            \\ number (9) or Swift BIC code (11)\"\n        name:\n          maxLength: 140\n          type: string\n          description: The name of a bank\n        postalAddress:\n          $ref: '#/components/schemas/PostalAddress'\n        bic:\n          pattern: \"^([A-Z0-9]){4}([A-Z]){2}([A-Z0-9]){2}([A-Z0-9]{3})?$\"\n          type: string\n          description: Business identifier code as specified by ISO 9362:2014\n      description: This object is used to identify the counterparty or correspondent\n        bank.\n    Currency:\n      $ref: '#/components/schemas/currency'\n    currency:\n      title: Currency\n      required:\n      - amount\n      - currencyCode\n      type: object\n      properties:\n        amount:\n          maximum: 1.0E+18\n          minimum: -1.0E+18\n          type: string\n          description: The amount in the specified currency\n        currencyCode:\n          pattern: \"^[A-Z]{3}$\"\n          type: string\n          description: The alpha-3 code (complying with ISO 4217) of the currency\n            that qualifies the amount\n        additions:\n          type: object\n          additionalProperties:\n            type: string\n          description: Additional properties\n    EndToEndIdentification:\n      maxLength: 35\n      type: string\n    MandateIdentifier:\n      maxLength: 15\n      type: string\n      description: \"The mandate identifier, of the counter party, giving permission\\\n        \\ for the debit order.\"\n    BreachReportItem:\n      required:\n      - breachInfo\n      type: object\n      properties:\n        limitedEntity:\n          type: array\n          description: \"When not set, user-BBID must be set\"\n          items:\n            $ref: '#/components/schemas/EntityDescription'\n        shadow:\n          type: boolean\n          description: Shadow limit flag. Applicable for certain entity-types\n        currency:\n          type: string\n          description: Currency code\n        user-BBID:\n          type: string\n          description: BBID of the user for whom the personal limit is assigned\n        breachInfo:\n          type: array\n          description: List of breached periodic limits related to a particular limitable\n            entity\n          items:\n            $ref: '#/components/schemas/BreachInfo'\n    EntityDescription:\n      required:\n      - description\n      - ref\n      - type\n      type: object\n      properties:\n        ref:\n          type: string\n        type:\n          type: string\n        description:\n          type: string\n    BreachInfo:\n      required:\n      - breachType\n      - currentConsumption\n      - currentThreshold\n      type: object\n      properties:\n        breachType:\n          type: string\n          enum:\n          - THRESHOLD\n          - CONSUMPTION\n        breachedLimitType:\n          type: string\n          enum:\n          - PERIODIC\n          - TRANSACTIONAL\n        timeframe:\n          $ref: '#/components/schemas/TimeFrame'\n        currentConsumption:\n          type: string\n          description: The amount in the specified currency\n        currentThreshold:\n          type: string\n          description: The amount in the specified currency\n    TimeFrame:\n      required:\n      - endTime\n      - period\n      - startTime\n      type: object\n      properties:\n        period:\n          type: string\n        startTime:\n          type: string\n          format: date-time\n        endTime:\n          type: string\n          format: date-time\n    Amount:\n      type: string\n      description: The amount in the specified currency\n    bad-request-error:\n      title: BadRequestError\n      required:\n      - message\n      type: object\n      properties:\n        message:\n          type: string\n          description: Any further information\n        errors:\n          type: array\n          description: Detailed error information\n          items:\n            $ref: '#/components/schemas/error-item'\n    not-found-error:\n      title: NotFoundError\n      type: object\n      properties:\n        message:\n          type: string\n          description: Any further information\n        errors:\n          type: array\n          description: Detailed error information\n          items:\n            $ref: '#/components/schemas/error-item'\n    unauthorized-error:\n      title: UnauthorizedError\n      type: object\n      properties:\n        message:\n          type: string\n          description: Any further information\n        errors:\n          type: array\n          description: Detailed error information\n          items:\n            $ref: '#/components/schemas/error-item'\n    payment-orders-get:\n      title: PaymentOrdersGet\n      type: array\n      description: List of Payment Orders\n      items:\n        $ref: '#/components/schemas/IdentifiedPaymentOrder'\n    InitiatePaymentOrder:\n      title: InitiatePaymentOrder\n      required:\n      - originatorAccount\n      - requestedExecutionDate\n      - transferTransactionInformation\n      type: object\n      properties:\n        originatorAccount:\n          $ref: '#/components/schemas/AccountIdentification'\n        batchBooking:\n          type: boolean\n          description: Indicate whenever there should be only one debit posting for\n            the whole set of instructions\n        instructionPriority:\n          type: string\n          description: Specify the priority of execution of the payment order.\n          enum:\n          - NORM\n          - HIGH\n        requestedExecutionDate:\n          type: string\n          description: The preferred date for the payment order to be executed.\n          format: date\n        paymentMode:\n          type: string\n          description: Denotes whether payment will be single or will be recurring\n          enum:\n          - SINGLE\n          - RECURRING\n        paymentType:\n          maxLength: 22\n          minLength: 1\n          type: string\n          description: The type of payment.\n        schedule:\n          $ref: '#/components/schemas/Schedule'\n        entryClass:\n          maxLength: 3\n          type: string\n          description: Used for ACH Standard Entry Class (SEC) Code to designate how\n            the transaction was authorized by the originator.\n        transferTransactionInformation:\n          $ref: '#/components/schemas/InitiateTransaction'\n        approved:\n          type: boolean\n          description: \"When set to true, the submitted payment order will also be\\\n            \\ approved by the user.\"\n    InitiateTransaction:\n      required:\n      - counterparty\n      - counterpartyAccount\n      - instructedAmount\n      type: object\n      properties:\n        counterparty:\n          $ref: '#/components/schemas/InvolvedParty'\n        counterpartyAccount:\n          $ref: '#/components/schemas/InitiateCounterpartyAccount'\n        counterpartyBank:\n          $ref: '#/components/schemas/Bank'\n        instructedAmount:\n          $ref: '#/components/schemas/Currency'\n        correspondentBank:\n          $ref: '#/components/schemas/Bank'\n        intermediaryBank:\n          $ref: '#/components/schemas/Bank'\n        messageToBank:\n          maxLength: 140\n          type: string\n          description: The message to the bank used for US domestic wire payments\n        targetCurrency:\n          pattern: \"^[A-Z]{3}$\"\n          type: string\n          description: The alpha-3 code (complying with ISO 4217) of the currency\n        remittanceInformation:\n          maxLength: 140\n          type: string\n          description: The remittance info for manually initiated credit transfers.\n            Does not have a type since it will always default to UNSTRUCTURED.\n        endToEndIdentification:\n          maxLength: 35\n          type: string\n        mandateIdentifier:\n          maxLength: 15\n          type: string\n          description: \"The mandate identifier, of the counter party, giving permission\\\n            \\ for the debit order.\"\n        chargeBearer:\n          type: string\n          description: \"Indicated who pays the fees for an international transfer.\\\n            \\ Possible values: OUR(originator), BEN(beneficiary or SHA(shared).\"\n          enum:\n          - OUR\n          - BEN\n          - SHA\n        transferFee:\n          $ref: '#/components/schemas/Currency'\n        additions:\n          type: object\n          additionalProperties:\n            type: object\n      description: The object defining the transaction to be initiated.\n    InitiateCounterpartyAccount:\n      type: object\n      properties:\n        accountType:\n          maxLength: 10\n          type: string\n          description: \"The type of the account, e.g. for ACH we have CHECKING/SAVINGS\"\n        selectedContact:\n          $ref: '#/components/schemas/SelectedContactDto'\n      description: \"The counterparty Account is the original account identification\\\n        \\ plus the type of account if applicable. It also holds the details of the\\\n        \\ selected contact, if any.\"\n      allOf:\n      - $ref: '#/components/schemas/AccountIdentification'\n      - type: object\n    SelectedContactDto:\n      type: object\n      properties:\n        contactId:\n          type: string\n          description: The id of the selected contact.\n        accountId:\n          type: string\n          description: The id of the selected account.\n      description: Holds the contact and account id when an account from a contact\n        was selected while creating a payment. This information is not persisted in\n        DBS but can be used in service extensions to enrich details from the selected\n        contact and store it in the additional properties of the payment order.\n    payment-orders-post-response:\n      title: PaymentOrdersPostResponse\n      required:\n      - id\n      - status\n      type: object\n      properties:\n        id:\n          type: string\n        status:\n          type: string\n          description: The internal DBS status of the payment order..\n          enum:\n          - DRAFT\n          - ENTERED\n          - READY\n          - ACCEPTED\n          - PROCESSED\n          - REJECTED\n          - CANCELLED\n          - CANCELLATION_PENDING\n          - CONFIRMATION_PENDING\n          - CONFIRMATION_DECLINED\n        bankStatus:\n          maxLength: 35\n          type: string\n          description: Internal status of the payment or batch order in the core banking\n            system.\n        reasonCode:\n          maxLength: 4\n          type: string\n          description: Reason code the core banking system accepted/rejected the payment\n            or batch.\n        reasonText:\n          maxLength: 35\n          type: string\n          description: Human readable reason the core banking system accepted/rejected\n            the payment or batch.\n        errorDescription:\n          maxLength: 105\n          type: string\n          description: Additional information from the core banking system on why\n            the payment was refused.\n        nextExecutionDate:\n          type: string\n          description: The execution date of the payment that the core system calculated.\n          format: date\n        paymentSetupId:\n          maxLength: 128\n          type: string\n          description: Generated when the PISP sets up the payments before the Backbase\n            authorization flow.\n        paymentSubmissionId:\n          maxLength: 128\n          type: string\n          description: Generated when the PISP submits the payment which is after\n            the Backbase authorization flow.\n        approvalStatus:\n          maxLength: 70\n          type: string\n          description: The status as returned by the approval service.\n        transferFee:\n          $ref: '#/components/schemas/Currency'\n        exchangeRateInformation:\n          $ref: '#/components/schemas/ExchangeRateInformation'\n        additions:\n          type: object\n          additionalProperties:\n            type: string\n    validate-payment-order-response:\n      title: PaymentOrdersValidatePostResponse\n      required:\n      - canApprove\n      - finalApprover\n      - isIntraLegalEntityPaymentOrder\n      type: object\n      properties:\n        originatorAccount:\n          $ref: '#/components/schemas/OriginatorAccount'\n        batchBooking:\n          type: boolean\n          description: Indicate whenever there should be only one debit posting for\n            the whole set of instructions\n        instructionPriority:\n          type: string\n          description: Specify the priority of execution of the payment order.\n          enum:\n          - NORM\n          - HIGH\n        requestedExecutionDate:\n          type: string\n          description: The preferred date for the payment order to be executed.\n          format: date\n        paymentMode:\n          type: string\n          description: Denotes whether payment will be single or will be recurring\n          enum:\n          - SINGLE\n          - RECURRING\n        paymentType:\n          maxLength: 22\n          minLength: 1\n          type: string\n          description: The type of payment.\n        entryClass:\n          maxLength: 3\n          type: string\n          description: Used for ACH Standard Entry Class (SEC) Code to designate how\n            the transaction was authorized by the originator.\n        schedule:\n          $ref: '#/components/schemas/Schedule'\n        transferTransactionInformation:\n          $ref: '#/components/schemas/IdentifiedTransaction'\n        paymentSetupId:\n          maxLength: 128\n          type: string\n          description: Generated when the PISP sets up the payments before the Backbase\n            authorization flow.\n        paymentSubmissionId:\n          maxLength: 128\n          type: string\n          description: Generated when the PISP submits the payment which is after\n            the Backbase authorization flow.\n        originator:\n          $ref: '#/components/schemas/InvolvedParty'\n        totalAmount:\n          $ref: '#/components/schemas/Currency'\n        isIntraLegalEntityPaymentOrder:\n          type: boolean\n          description: This flag is true to indicate the validated payment order is\n            a payment order between two accounts within the same legal entity.\n        canApprove:\n          type: boolean\n          description: This flag is true to indicate that an approval can be created\n            and approved by the current user for the validated payment order.\n        finalApprover:\n          type: boolean\n          description: This flag is true to indicate that the current user will be\n            the final approver for the validated payment order.\n        additions:\n          type: object\n          additionalProperties:\n            type: string\n    bulk-payment-orders-approval-put-request:\n      title: BulkPaymentOrdersApprovalPutRequest\n      required:\n      - approvalStatus\n      - paymentOrderIds\n      type: object\n      properties:\n        approvalStatus:\n          type: string\n          description: The options for approval.\n          enum:\n          - APPROVED\n          - REJECTED\n        paymentOrderIds:\n          type: array\n          description: The list of ids of the payment orders to bulk update.\n          items:\n            pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n            type: string\n            description: Unique identification of the payment order.\n        comment:\n          maxLength: 140\n          type: string\n          description: \"When approving or rejecting, the user can add comments which\\\n            \\ would explain the reason for the action.\"\n    bulk-payment-orders-approval-put-response:\n      title: BulkPaymentOrdersApprovalPutResponse\n      required:\n      - approvalStatus\n      - failCount\n      - paymentOrders\n      - successCount\n      type: object\n      properties:\n        approvalStatus:\n          type: string\n          description: The status of the approval.\n          enum:\n          - PENDING\n          - APPROVED\n          - REJECTED\n          - CANCELLED\n        comment:\n          maxLength: 140\n          type: string\n          description: \"When approving or rejecting, the user can add comments which\\\n            \\ would explain the reason for the action.\"\n        paymentOrders:\n          type: array\n          description: The list of payment orders including details about the operation\n            and new status.\n          items:\n            required:\n            - paymentOrderId\n            - status\n            type: object\n            properties:\n              paymentOrderId:\n                pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n                type: string\n                description: Unique identification of the payment order.\n              paymentOrder:\n                $ref: '#/components/schemas/IdentifiedPaymentOrder'\n              approvalStatus:\n                maxLength: 70\n                type: string\n                description: The current status of the approval request as returned\n                  by the approval service after the update. This will be empty if\n                  the payment order or approval was not found.\n              status:\n                required:\n                - code\n                type: object\n                properties:\n                  code:\n                    type: string\n                    description: \"OK if the payment order was updated successfully,\\\n                      \\ ERROR otherwise.\"\n                    enum:\n                    - OK\n                    - ERROR\n                  message:\n                    type: string\n                    description: Main error message\n                  errors:\n                    type: array\n                    description: Details why the update failed. Uses the same error\n                      items from building blocks.\n                    items:\n                      $ref: '#/components/schemas/ErrorItem'\n                description: A status object to report about the result of the operation.\n                  In case of error it contains details about why it failed.\n              breachReport:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BreachReportItem'\n        successCount:\n          type: integer\n          description: The number of payment orders processed successfully.\n          format: int32\n        failCount:\n          type: integer\n          description: The number of payment orders that failed processing.\n          format: int32\n    payment-order-get-response:\n      title: PaymentOrderGet\n      required:\n      - id\n      - status\n      - version\n      type: object\n      properties:\n        approvalDetails:\n          $ref: '#/components/schemas/PresentationApprovalDetailDto'\n        id:\n          pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n          type: string\n          description: Unique identification of the payment order.\n        approvalId:\n          pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n          type: string\n          description: The id of the approval request that is or was used to get this\n            item approved.\n        status:\n          type: string\n          description: The internal DBS status of the payment order..\n          enum:\n          - DRAFT\n          - ENTERED\n          - READY\n          - ACCEPTED\n          - PROCESSED\n          - REJECTED\n          - CANCELLED\n          - CANCELLATION_PENDING\n          - CONFIRMATION_PENDING\n          - CONFIRMATION_DECLINED\n        bankStatus:\n          maxLength: 35\n          type: string\n          description: Internal status of the payment or batch order in the core banking\n            system.\n        reasonCode:\n          maxLength: 4\n          type: string\n          description: Reason code the core banking system accepted/rejected the payment\n            or batch.\n        reasonText:\n          maxLength: 35\n          type: string\n          description: Human readable reason the core banking system accepted/rejected\n            the payment or batch.\n        errorDescription:\n          maxLength: 105\n          type: string\n          description: Additional information from the core banking system on why\n            the payment was refused.\n        createdBy:\n          maxLength: 128\n          type: string\n          description: Creator user info.\n        createdAt:\n          type: string\n          description: Date and time indicating when the payment was created\n          format: date-time\n        updatedBy:\n          maxLength: 128\n          type: string\n          description: Updater user info.\n        updatedAt:\n          type: string\n          description: Date and time indicating when the payment was updated\n          format: date-time\n        actions:\n          $ref: '#/components/schemas/Actions'\n        version:\n          type: integer\n          description: Indication of what version the payment order currently has\n          format: int32\n        contextualInformation:\n          $ref: '#/components/schemas/ContextualInformation'\n        intraLegalEntity:\n          type: boolean\n          description: Indication if this payment was an intra-company payment.\n        originatorAccountCurrency:\n          pattern: \"^[A-Z]{3}$\"\n          type: string\n          description: Currency code of the payment order originating account\n        confirmationId:\n          maxLength: 36\n          minLength: 1\n          type: string\n          description: The confirmation id for transaction signing.\n        paymentSetupId:\n          maxLength: 128\n          type: string\n          description: Generated when the PISP sets up the payments before the Backbase\n            authorization flow.\n        paymentSubmissionId:\n          maxLength: 128\n          type: string\n          description: Generated when the PISP submits the payment which is after\n            the Backbase authorization flow.\n        originator:\n          $ref: '#/components/schemas/InvolvedParty'\n        originatorAccount:\n          $ref: '#/components/schemas/OriginatorAccount'\n        batchBooking:\n          type: boolean\n          description: Indicate whenever there should be only one debit posting for\n            the whole set of instructions\n        instructionPriority:\n          type: string\n          description: Specify the priority of execution of the payment order.\n          enum:\n          - NORM\n          - HIGH\n        requestedExecutionDate:\n          type: string\n          description: The preferred date for the payment order to be executed.\n          format: date\n        paymentMode:\n          type: string\n          description: Denotes whether payment will be single or will be recurring\n          enum:\n          - SINGLE\n          - RECURRING\n        paymentType:\n          maxLength: 22\n          minLength: 1\n          type: string\n          description: The type of payment.\n        entryClass:\n          maxLength: 3\n          type: string\n          description: Used for ACH Standard Entry Class (SEC) Code to designate how\n            the transaction was authorized by the originator.\n        schedule:\n          $ref: '#/components/schemas/Schedule'\n        transferTransactionInformation:\n          $ref: '#/components/schemas/IdentifiedTransaction'\n        totalAmount:\n          $ref: '#/components/schemas/Currency'\n        additions:\n          type: object\n          additionalProperties:\n            type: string\n    initiate-payment-order-with-id:\n      title: InitiatePaymentOrderWithId\n      type: object\n      allOf:\n      - $ref: '#/components/schemas/InitiatePaymentOrder'\n      - required:\n        - id\n        type: object\n        properties:\n          id:\n            $ref: '#/components/schemas/PaymentId'\n    payment-order-approval-request:\n      title: ApprovalStatusPutRequest\n      required:\n      - approvalStatus\n      type: object\n      properties:\n        approvalStatus:\n          type: string\n          description: The options for approval.\n          enum:\n          - APPROVED\n          - REJECTED\n        comment:\n          maxLength: 140\n          type: string\n          description: \"When approving or rejecting, the user can add comments which\\\n            \\ would explain the reason for the action.\"\n    payment-order-cancel-request:\n      title: CancelRequest\n      required:\n      - version\n      type: object\n      properties:\n        version:\n          type: integer\n          description: Indication of what version the payment the user wants to cancel\n          format: int32\n    payment-order-cancel-response:\n      title: CancelResponse\n      required:\n      - accepted\n      type: object\n      properties:\n        accepted:\n          type: boolean\n          description: Indication if the cancel request was accepted\n    currencies-get-response:\n      title: CurrenciesGet\n      type: array\n      description: Currencies available for payment response\n      items:\n        $ref: '#/components/schemas/CurrenciesGetResponseBody'\n    rate-get-response:\n      title: RateGet\n      required:\n      - rate\n      type: object\n      properties:\n        rate:\n          type: number\n          description: Rate for given currencies\n    error-item:\n      title: ErrorItem\n      type: object\n      properties:\n        message:\n          type: string\n          description: Any further information.\n        key:\n          type: string\n          description: \"{capability-name}.api.{api-key-name}. For generated validation\\\n            \\ errors this is the path in the document the error resolves to. e.g.\\\n            \\ object name + '.' + field\"\n        context:\n          type: object\n          additionalProperties:\n            type: string\n          description: Context can be anything used to construct localised messages.\n    PaymentId:\n      pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n      type: string\n      description: Unique identification of the payment order.\n    ApprovalId:\n      pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n      type: string\n      description: The id of the approval request that is or was used to get this\n        item approved.\n    Status:\n      type: string\n      description: The internal DBS status of the payment order..\n      enum:\n      - DRAFT\n      - ENTERED\n      - READY\n      - ACCEPTED\n      - PROCESSED\n      - REJECTED\n      - CANCELLED\n      - CANCELLATION_PENDING\n      - CONFIRMATION_PENDING\n      - CONFIRMATION_DECLINED\n    BankStatus:\n      maxLength: 35\n      type: string\n      description: Internal status of the payment or batch order in the core banking\n        system.\n    ReasonCode:\n      maxLength: 4\n      type: string\n      description: Reason code the core banking system accepted/rejected the payment\n        or batch.\n    ReasonText:\n      maxLength: 35\n      type: string\n      description: Human readable reason the core banking system accepted/rejected\n        the payment or batch.\n    ErrorDescription:\n      maxLength: 105\n      type: string\n      description: Additional information from the core banking system on why the\n        payment was refused.\n    ConfirmationId:\n      maxLength: 36\n      minLength: 1\n      type: string\n      description: The confirmation id for transaction signing.\n    PaymentSetupId:\n      maxLength: 128\n      type: string\n      description: Generated when the PISP sets up the payments before the Backbase\n        authorization flow.\n    PaymentSubmissionId:\n      maxLength: 128\n      type: string\n      description: Generated when the PISP submits the payment which is after the\n        Backbase authorization flow.\n    OriginatorAccount:\n      required:\n      - arrangementId\n      - identification\n      properties:\n        arrangementId:\n          maxLength: 36\n          minLength: 1\n          type: string\n          description: The unique arrangement id.\n        externalArrangementId:\n          maxLength: 70\n          minLength: 1\n          type: string\n          description: The external unique arrangement id.\n        identification:\n          $ref: '#/components/schemas/Identification'\n        name:\n          maxLength: 140\n          type: string\n          description: \"This is the name of the account, and not the name of the account\\\n            \\ holder.\"\n      description: The product identification of the originator\n    ArrangementId:\n      maxLength: 36\n      minLength: 1\n      type: string\n      description: The unique arrangement id.\n    ExternalArrangementId:\n      maxLength: 70\n      minLength: 1\n      type: string\n      description: The external unique arrangement id.\n    Identification:\n      required:\n      - identification\n      - schemeName\n      type: object\n      properties:\n        identification:\n          maxLength: 36\n          type: string\n          description: \"The identifier of the account. Can be a regular account number,\\\n            \\ or an ID.\"\n        schemeName:\n          type: string\n          description: This describes the type of the account identifier. ID will\n            mean it refers to an account known within DBS.\n          enum:\n          - IBAN\n          - BBAN\n          - ID\n          - EXTERNAL_ID\n    SchemeNames:\n      type: string\n      description: This describes the type of the account identifier. ID will mean\n        it refers to an account known within DBS.\n      enum:\n      - IBAN\n      - BBAN\n      - ID\n      - EXTERNAL_ID\n    InstructionPriority:\n      type: string\n      description: Specify the priority of execution of the payment order.\n      enum:\n      - NORM\n      - HIGH\n    RequestedExecutionDate:\n      type: string\n      description: The preferred date for the payment order to be executed.\n      format: date\n    PaymentType:\n      maxLength: 22\n      minLength: 1\n      type: string\n      description: The type of payment.\n    EntryClass:\n      maxLength: 3\n      type: string\n      description: Used for ACH Standard Entry Class (SEC) Code to designate how the\n        transaction was authorized by the originator.\n    Id:\n      maxLength: 36\n      minLength: 1\n      type: string\n      description: General purpose identifier. Can be UUID but does not have to.\n    InvolvedPartyRole:\n      type: string\n      description: These are the possible values the role of an involved party can  have.\n      enum:\n      - CREDITOR\n      - DEBTOR\n    PostalAddress:\n      type: object\n      properties:\n        addressLine1:\n          maxLength: 70\n          type: string\n        addressLine2:\n          maxLength: 70\n          type: string\n        streetName:\n          maxLength: 70\n          type: string\n        postCode:\n          maxLength: 16\n          type: string\n        town:\n          maxLength: 35\n          type: string\n        countrySubDivision:\n          maxLength: 35\n          type: string\n        country:\n          maxLength: 2\n          type: string\n      description: Postal address object with fields\n    RecipientId:\n      maxLength: 15\n      type: string\n      description: Used for ACH Credit to indicate the id of the recipient\n    MessageToBank:\n      maxLength: 140\n      type: string\n      description: The message to the bank used for US domestic wire payments\n    CurrencyCode:\n      pattern: \"^[A-Z]{3}$\"\n      type: string\n      description: The alpha-3 code (complying with ISO 4217) of the currency\n    RemittanceInformation:\n      required:\n      - content\n      - type\n      type: object\n      properties:\n        type:\n          type: string\n          description: When type is structured it consists of some XML tags used when\n            the transaction was uploaded.\n          enum:\n          - STRUCTURED\n          - UNSTRUCTURED\n        content:\n          maxLength: 140\n          type: string\n          description: The content of the remittance information.\n      description: \"This is the object representation of the remittance info and can\\\n        \\ contain different types of remittance info. It is only used in responses,\\\n        \\ not for input requests!\"\n    ChargeBearer:\n      type: string\n      description: \"Indicated who pays the fees for an international transfer. Possible\\\n        \\ values: OUR(originator), BEN(beneficiary or SHA(shared).\"\n      enum:\n      - OUR\n      - BEN\n      - SHA\n    ExchangeRateInformation:\n      type: object\n      properties:\n        currencyCode:\n          pattern: \"^[A-Z]{3}$\"\n          type: string\n          description: Currency in which the rate of exchange is expressed in a currency\n            exchange.\n        rate:\n          maximum: 1.0E+18\n          minimum: -1.0E+18\n          type: string\n          description: The factor used for conversion of an amount from one currency\n            to another.\n        rateType:\n          type: string\n          description: Specifies the type used to complete the currency exchange.\n          enum:\n          - ACTUAL\n          - INDICATIVE\n          - AGREED\n        contractIdentification:\n          maxLength: 256\n          type: string\n          description: Unique and unambiguous reference to the foreign exchange contract\n            agreed between the initiating party/creditor and the debtor agent.\n      description: The detailed information on the exchange rate that has been used\n        in the payment transaction.\n    AccountType:\n      maxLength: 10\n      type: string\n      description: \"The type of the account, e.g. for ACH we have CHECKING/SAVINGS\"\n    BankBranchCode:\n      maxLength: 11\n      type: string\n      description: \"Some code to identify a bank office, p.e. ABA routing transit\\\n        \\ number (9) or Swift BIC code (11)\"\n    BankName:\n      maxLength: 140\n      type: string\n      description: The name of a bank\n    Bic:\n      pattern: \"^([A-Z0-9]){4}([A-Z]){2}([A-Z0-9]){2}([A-Z0-9]{3})?$\"\n      type: string\n      description: Business identifier code as specified by ISO 9362:2014\n    AccountIdentification:\n      required:\n      - identification\n      type: object\n      properties:\n        identification:\n          $ref: '#/components/schemas/Identification'\n        name:\n          maxLength: 140\n          type: string\n          description: \"This is the name of the account, and not the name of the account\\\n            \\ holder.\"\n    NextExecutionDate:\n      type: string\n      description: The execution date of the payment that the core system calculated.\n      format: date\n    ApprovalStatusResponse:\n      maxLength: 70\n      type: string\n      description: The status as returned by the approval service.\n    ApprovalStatus:\n      type: string\n      description: The options for approval.\n      enum:\n      - APPROVED\n      - REJECTED\n    Comment:\n      maxLength: 140\n      type: string\n      description: \"When approving or rejecting, the user can add comments which would\\\n        \\ explain the reason for the action.\"\n    ApprovalStatus_2:\n      type: string\n      description: The status of the approval.\n      enum:\n      - PENDING\n      - APPROVED\n      - REJECTED\n      - CANCELLED\n    ErrorItem:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Default Message. Any further information.\n        key:\n          type: string\n          description: \"{capability-name}.api.{api-key-name}. For generated validation\\\n            \\ errors this is the path in the document the error resolves to. e.g.\\\n            \\ object name + '.' + field\"\n        context:\n          type: object\n          description: Context can be anything used to construct localised messages.\n      description: A validation error\n    SuccessCount:\n      type: integer\n      description: The number of payment orders processed successfully.\n      format: int32\n    FailCount:\n      type: integer\n      description: The number of payment orders that failed processing.\n      format: int32\n    PresentationApprovalDetailDto:\n      required:\n      - approvalTypes\n      - createdAt\n      - function\n      - id\n      - itemId\n      - policy\n      - resource\n      - serviceAgreementId\n      - status\n      - userId\n      properties:\n        approvalTypes:\n          type: array\n          items:\n            $ref: '#/components/schemas/PresentationApprovalTypeDto'\n        policy:\n          $ref: '#/components/schemas/PresentationPolicyDto'\n        id:\n          pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n          type: string\n          description: Universally Unique Identifier (UUID).\n        userId:\n          maxLength: 36\n          minLength: 1\n          type: string\n          description: General purpose identifier. Can be UUID but does not have to.\n        externalUserId:\n          maxLength: 64\n          type: string\n          description: The (unique and human readable) external user id of the user.\n        userFullName:\n          maxLength: 255\n          minLength: 1\n          type: string\n          description: The full name of a user.\n        serviceAgreementId:\n          maxLength: 36\n          minLength: 1\n          type: string\n          description: General purpose identifier. Can be UUID but does not have to.\n        itemId:\n          maxLength: 36\n          minLength: 1\n          type: string\n          description: General purpose identifier. Can be UUID but does not have to.\n        dataAccessItemId:\n          maxLength: 36\n          minLength: 1\n          type: string\n          description: General purpose identifier. Can be UUID but does not have to.\n        resource:\n          maxLength: 32\n          type: string\n          description: This is the name of the resource.\n        function:\n          maxLength: 32\n          type: string\n          description: This is the name of the business function.\n        status:\n          type: string\n          description: The status of the approval.\n          enum:\n          - PENDING\n          - APPROVED\n          - REJECTED\n          - CANCELLED\n        records:\n          type: array\n          description: A list of records of all the approve and reject actions on\n            the approval.\n          items:\n            $ref: '#/components/schemas/PresentationRecordDto'\n        canApprove:\n          type: boolean\n          description: \"This flag indicates if the user (with the current context)\\\n            \\ that is requesting the approval can approve it, depending on the policy\\\n            \\ that applies. In case a support employee requests the payment on behalf\\\n            \\ of another user, this flag is indicating whether the target user can\\\n            \\ approve the item and not the support employee himself.\"\n        canReject:\n          type: boolean\n          description: \"This flag indicates if the user (with the current context)\\\n            \\ that is requesting the approval can reject it, depending on the policy\\\n            \\ that applies. In case a support employee requests the payment on behalf\\\n            \\ of another user, this flag is indicating whether the target user can\\\n            \\ reject the item and not the support employee himself.\"\n        finalApprover:\n          type: boolean\n          description: \"This flag indicates if the user (with the current context)\\\n            \\ is the final approver that is needed. In case a support employee requests\\\n            \\ the payment on behalf of another user, this flag is indicating whether\\\n            \\ the target user is a final approver and not the support employee himself.\"\n        action:\n          maxLength: 20\n          type: string\n          description: The action of the approval request\n        createdAt:\n          type: string\n          description: The timestamp indicates when the object was created.\n          format: date-time\n      description: A detailed approval object that holds extended details of a single\n        item to be approved.\n    PresentationApprovalTypeDto:\n      required:\n      - id\n      - name\n      - rank\n      type: object\n      properties:\n        id:\n          pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n          type: string\n          description: Universally Unique Identifier (UUID).\n        name:\n          maxLength: 50\n          type: string\n          description: The name of an item.\n        description:\n          maxLength: 255\n          type: string\n          description: This gives a more in detailed description of the item and its\n            purpose.\n        rank:\n          minimum: 1\n          type: integer\n          description: The rank determines which item takes precedence over another.\n            1 means highest precedence and 100 takes lower precedence than 10. Must\n            be unique!\n          format: int32\n      description: A simple object that represents a type of approval that can be\n        placed on an approval.\n    Description:\n      maxLength: 255\n      type: string\n      description: This gives a more in detailed description of the item and its purpose.\n    PresentationPolicyDto:\n      required:\n      - id\n      - name\n      type: object\n      properties:\n        id:\n          pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n          type: string\n          description: Universally Unique Identifier (UUID).\n        name:\n          maxLength: 140\n          type: string\n          description: Default name field used in DBS\n        description:\n          maxLength: 255\n          type: string\n          description: This gives a more in detailed description of the item and its\n            purpose.\n        items:\n          type: array\n          description: A list of approval types and the number of each approval type\n            is required. If there are 0 items a zero-approval-policy applies.\n          items:\n            $ref: '#/components/schemas/PresentationPolicyItemDto'\n        logicalItems:\n          type: array\n          description: Contains a list of logical approval policy items. These items\n            have been used in the calculation of this approval state.\n          items:\n            $ref: '#/components/schemas/LogicalPolicyDetailsDto'\n      description: This object describes how a policy is built up. It tells you what\n        policies apply (#policyItems) or if you can self-approve.\n    PresentationPolicyItemDto:\n      required:\n      - approvalTypeId\n      - numberOfApprovals\n      type: object\n      properties:\n        approvalTypeId:\n          pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n          type: string\n          description: Universally Unique Identifier (UUID).\n        numberOfApprovals:\n          type: integer\n          description: The number of a certain type of approval that is required.\n          format: int32\n    NumberOfApprovalNumberOfApprovals:\n      type: integer\n      description: The number of a certain type of approval that is required.\n      format: int32\n    FullName:\n      maxLength: 255\n      minLength: 1\n      type: string\n      description: The full name of a user.\n    PresentationRecordDto:\n      required:\n      - approvalTypeId\n      - createdAt\n      - id\n      - status\n      - userId\n      type: object\n      properties:\n        id:\n          pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n          type: string\n          description: Universally Unique Identifier (UUID).\n        userId:\n          maxLength: 36\n          minLength: 1\n          type: string\n          description: General purpose identifier. Can be UUID but does not have to.\n        externalUserId:\n          maxLength: 64\n          type: string\n          description: The (unique and human readable) external user id of the user.\n        userFullName:\n          maxLength: 255\n          minLength: 1\n          type: string\n          description: The full name of a user.\n        approvalTypeId:\n          pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n          type: string\n          description: Universally Unique Identifier (UUID).\n        status:\n          type: string\n          description: The list of accepted statuses that a user can request to update\n            an approval to.\n          enum:\n          - APPROVED\n          - REJECTED\n        createdAt:\n          type: string\n          description: The timestamp indicates when the object was created.\n          format: date-time\n        comment:\n          maxLength: 140\n          type: string\n          description: \"When approving or rejecting, the user can add comments which\\\n            \\ would explain the reason for the action.\"\n      description: A single record of either an approval or rejection by a user on\n        an approval request.\n    CreatedAt:\n      type: string\n      description: The timestamp indicates when the object was created.\n      format: date-time\n    Action:\n      maxLength: 20\n      type: string\n      description: The action of the approval request\n    CurrenciesGetResponseBody:\n      $ref: '#/components/schemas/currencies-get-response-body'\n    currencies-get-response-body:\n      title: Currency\n      required:\n      - code\n      type: object\n      properties:\n        code:\n          pattern: \"^[A-Z]{3}$\"\n          type: string\n          description: The alpha-3 code (complying with ISO 4217) of the currency\n      description: Currency\n    Uuid:\n      pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n      type: string\n      description: Universally Unique Identifier (UUID).\n    ResourceName:\n      maxLength: 32\n      type: string\n      description: This is the name of the resource.\n    FunctionName:\n      maxLength: 32\n      type: string\n      description: This is the name of the business function.\n    Name_2:\n      maxLength: 50\n      type: string\n      description: The name of an item.\n    Rank:\n      minimum: 1\n      type: integer\n      description: The rank determines which item takes precedence over another. 1\n        means highest precedence and 100 takes lower precedence than 10. Must be unique!\n      format: int32\n    LogicalPolicyDetailsDto:\n      type: object\n      properties:\n        rank:\n          minimum: 0\n          type: integer\n          description: Rank of this logical operation with 1 as the highest precedence.\n            The rank is unique inside the details list.\n          format: int32\n        operator:\n          type: string\n          description: \"Type of logical operation, please see Community for each operation\\\n            \\ implementation\"\n          enum:\n          - OR\n        items:\n          maxItems: 5\n          minItems: 0\n          type: array\n          description: List of policy items inside this logical operation.\n          items:\n            $ref: '#/components/schemas/PolicyItemDetailsDto'\n          default: []\n      description: A policy declaration that allows you to add logical operators to\n        the contained policy items.\n    LogicalOperator:\n      type: string\n      description: \"Type of logical operation, please see Community for each operation\\\n        \\ implementation\"\n      enum:\n      - OR\n    PolicyItemDetailsDto:\n      required:\n      - approvalType\n      - numberOfApprovals\n      type: object\n      properties:\n        approvalType:\n          $ref: '#/components/schemas/ApprovalTypeDto'\n        numberOfApprovals:\n          maximum: 99\n          minimum: 1\n          type: integer\n          description: The number of a certain type of approval that is required.\n          format: int32\n      description: A detailed policy item with the full approval type.\n    ApprovalTypeDto:\n      required:\n      - id\n      - name\n      - rank\n      type: object\n      properties:\n        id:\n          pattern: \"^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[1-5][0-9a-fA-F]{3}-?[89abAB][0-9a-fA-F]{3}-?[0-9a-fA-F]{12}$\"\n          type: string\n          description: \"Universal Unique Identifier, \"\n        name:\n          maxLength: 50\n          type: string\n          description: The name of an item.\n        description:\n          maxLength: 255\n          type: string\n          description: This gives a more in detailed description of the item and its\n            purpose.\n        rank:\n          minimum: 1\n          type: integer\n          description: The rank determines which item takes precedence over another.\n            1 means highest precedence and 100 takes lower precedence than 10. Must\n            be unique!\n          format: int32\n      description: \"An approval type, also known as approval level, is used to allow\\\n        \\ a hierarchy of approvals to grant to various users or groups to allow complex\\\n        \\ policies to be defined.\"\n    Uuid_2:\n      pattern: \"^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[1-5][0-9a-fA-F]{3}-?[89abAB][0-9a-fA-F]{3}-?[0-9a-fA-F]{12}$\"\n      type: string\n      description: \"Universal Unique Identifier, \"\n    NumberOfApprovals:\n      maximum: 99\n      minimum: 1\n      type: integer\n      description: The number of a certain type of approval that is required.\n      format: int32\n    RecordStatus:\n      type: string\n      description: The list of accepted statuses that a user can request to update\n        an approval to.\n      enum:\n      - APPROVED\n      - REJECTED\n  examples:\n    invalid-payment-type-group:\n      summary: invalid-payment-type-group\n      value:\n        message: \"Payment type group invalid. Must be one of [credit, debit]\"\n    payment-orders-rate-get-response:\n      summary: payment-orders-rate-get-response\n      value:\n        rate: 1.07\n    error-breach-report-error:\n      summary: error-breach-report-error\n      value:\n        message: \"Limits has been breached, check the report for more details\"\n        payment:\n          id: 7d341c28-6714-11e7-907b-a6006ad3dba0\n          status: ENTERED\n          originatorAccount:\n            arrangementId: 729190df-a421-4937-94fd-5e1a3da132cc\n            identification:\n              identification: NL53RABO0309349755\n              schemeName: IBAN\n          instructionPriority: NORM\n          requestedExecutionDate: 2017-07-16\n          transferTransactionInformation:\n            name: Jack Jackson\n            instructedAmount:\n              amount: \"5000.55\"\n              currencyCode: EUR\n            counterpartyAccount:\n              identification:\n                identification: FR708933019952AUNHQNQ0KZ\n                schemeName: IBAN\n              arrangementId: fe9d66ae-b927-4ac7-8799-c5a38a596ff2\n            counterparty:\n              name: Backbase\n              postalAddress:\n                addressLine1: Jacob Bontiusplaats 9\n                zipcode: 1018LL\n                city: Amsterdam\n                country: NL\n            remittanceInformation:\n              type: UNSTRUCTURED\n              content: Return a debt\n          version: 0\n        checkTime: 2017-01-31T12:12:12Z\n        breachReport:\n        - limitedEntity:\n          - ref: 1234567-12312-123123\n            type: Service Agreement\n            description: \"Kuhic, Gislason and Kemmer. SERVICE AGREEMENT\"\n          shadow: false\n          currency: EUR\n          user-BBID: oleksii\n          breachInfo:\n          - breachType: THRESHOLD\n            breachedLimitType: PERIODIC\n            timeframe:\n              period: daily\n              startTime: 2017-01-31T00:00:00Z\n              endTime: 2017-01-31T23:59:59Z\n            currentConsumption: \"250.0\"\n            currentThreshold: \"499.9\"\n          - breachType: CONSUMPTION\n            timeframe:\n              period: monthly\n              startTime: 2017-01-01T00:00:00Z\n              endTime: 2017-01-31T23:59:59Z\n            currentConsumption: \"9950.0\"\n            currentThreshold: \"10000.0\"\n        - user-BBID: oleksii\n          shadow: false\n          currency: EUR\n          breachInfo:\n          - breachType: CONSUMPTION\n            timeframe:\n              period: daily\n              startTime: 2017-01-31T00:00:00Z\n              endTime: 2017-01-31T23:59:59Z\n            currentConsumption: \"500.0\"\n            currentThreshold: \"1000.0\"\n        - limitedEntity:\n          - ref: 1234567-12312-123123\n            type: Function Access Group\n            description: Payments approvers\n          - ref: 1234567-12312-123123\n            type: Function\n            description: Domestic payments\n          - ref: Approve\n            type: Privilege\n            description: Approve\n          shadow: false\n          currency: EUR\n          breachInfo:\n          - breachType: THRESHOLD\n            timeframe:\n              period: daily\n              startTime: 2017-01-31T00:00:00Z\n              endTime: 2017-01-31T23:59:59Z\n            currentConsumption: \"250.0\"\n            currentThreshold: \"499.9\"\n        - limitedEntity:\n          - ref: 1234567-12312-123123\n            type: Legal Entity\n            description: \"Kuhic, Gislason and Kemmer\"\n          shadow: false\n          currency: EUR\n          breachInfo:\n          - breachType: CONSUMPTION\n            timeframe:\n              period: quarterly\n              startTime: 2017-01-01T00:00:00Z\n              endTime: 2017-03-31T23:59:59Z\n            currentConsumption: \"99950.0\"\n            currentThreshold: \"100000.0\"\n    us-wire-domestic-payment-post:\n      summary: us-wire-domestic-payment-post\n      value:\n        originatorAccount:\n          identification:\n            identification: 8a48e08c60daa5940160dac699050088\n            schemeName: ID\n        totalAmount:\n          amount: \"10.29\"\n          currencyCode: USD\n        requestedExecutionDate: 2016-05-16\n        paymentType: US_DOMESTIC_WIRE\n        transferTransactionInformation:\n          instructedAmount:\n            amount: \"10.29\"\n            currencyCode: USD\n          counterparty:\n            name: Jane Doe\n          counterpartyAccount:\n            identification:\n              identification: \"4902331374\"\n              schemeName: BBAN\n          counterpartyBank:\n            bankBranchCode: \"111000025\"\n    us-wire-international-payment-post:\n      summary: us-wire-international-payment-post\n      value:\n        originatorAccount:\n          identification:\n            identification: 8a48e08c60daa5940160dac699050088\n            schemeName: ID\n        requestedExecutionDate: 2018-01-04\n        paymentType: US_FOREIGN_WIRE\n        transferTransactionInformation:\n          instructedAmount:\n            amount: \"29.99\"\n            currencyCode: USD\n          counterparty:\n            name: John Doe\n          counterpartyAccount:\n            identification:\n              identification: \"4902331374\"\n              schemeName: BBAN\n          counterpartyBank:\n            bankBranchCode: \"111000025\"\n            bic: INGBNL2A\n            name: ING BANK N.V.\n            postalAddress:\n              addressLine1: FINANCIAL PLAZA BIJLMERDREEF 109 1102 BW AMSTERDAM\n              country: NL\n          correspondentBank:\n            bankBranchCode: \"011000015\"\n            name: FEDERAL RESERVE BANK\n          intermediaryBank:\n            bankBranchCode: \"122105155\"\n            name: SNSB2886803298\n          messageToBank: My us domestic wire payment explanation.\n          targetCurrency: EUR\n    simple:\n      summary: simple\n      value:\n        originatorAccount:\n          identification:\n            identification: 729190df-a421-4937-94fd-5e1a3da132cc\n            schemeName: ID\n        requestedExecutionDate: 2017-08-11\n        paymentType: SEPA_CREDIT_TRANSFER\n        transferTransactionInformation:\n          instructedAmount:\n            amount: \"100.00\"\n            currencyCode: EUR\n          counterparty:\n            name: J. Sparrow\n          counterpartyAccount:\n            identification:\n              identification: NL21ABNA0136371124\n              schemeName: IBAN\n            selectedContact:\n              contactId: 14b0b245-c7a9-427e-8e77-26c2f98dfa3d\n              accountId: 61425aed-5d5c-4292-8f60-e2f3efc9b66a\n    lib-internal-server-error:\n      summary: lib-internal-server-error\n      value:\n        message: Description of error\n    ach-debit-post:\n      summary: ach-debit-post\n      value:\n        originatorAccount:\n          identification:\n            identification: 8a48e08c60daa5940160dac699050088\n            schemeName: ID\n        totalAmount:\n          amount: \"10.29\"\n          currencyCode: USD\n        requestedExecutionDate: 2016-05-16\n        paymentType: ACH_DEBIT\n        transferTransactionInformation:\n          instructedAmount:\n            amount: \"10.29\"\n            currencyCode: USD\n          counterparty:\n            name: Jane Doe\n          counterpartyAccount:\n            identification:\n              identification: \"4902331374\"\n              schemeName: BBAN\n          counterpartyBank:\n            bankBranchCode: \"111000025\"\n          mandateIdentifier: MNDTREF0239-348\n    example:\n      summary: example\n      value:\n        message: Bad Request\n        errors:\n        - message: \"Value Exceeded. Must be between {min} and {max}.\"\n          key: common.api.shoesize\n          context:\n            max: \"50\"\n            min: \"1\"\n    payment-orders-approval-bulk-payment-orders-approval-put-request:\n      summary: payment-orders-approval-bulk-payment-orders-approval-put-request\n      value:\n        approvalStatus: APPROVED\n        paymentOrderIds:\n        - 7d34169c-6714-11e7-907b-a6006ad3dba0\n        - d2ff7c65-24ae-430f-92b9-c7ca5b143081\n        - 9a20be2b-b8f3-45dc-a625-55635235de4c\n        - c7653c55-ee9b-4f65-96db-cbda76efd3ae\n    lib-not-found-error:\n      summary: lib-not-found-error\n      value:\n        message: Resource not found.\n        errors:\n        - message: \"Unable to find the resource requested resource: {resource}.\"\n          key: common.api.resource\n          context:\n            resource: aResource\n    approved:\n      summary: approved\n      value:\n        originatorAccount:\n          identification:\n            identification: 729190df-a421-4937-94fd-5e1a3da132cc\n            schemeName: ID\n        requestedExecutionDate: 2017-08-11\n        paymentType: SEPA_CREDIT_TRANSFER\n        transferTransactionInformation:\n          instructedAmount:\n            amount: \"100.00\"\n            currencyCode: EUR\n          counterparty:\n            name: J. Sparrow\n          counterpartyAccount:\n            identification:\n              identification: NL21ABNA0136371124\n              schemeName: IBAN\n            selectedContact:\n              contactId: 14b0b245-c7a9-427e-8e77-26c2f98dfa3d\n              accountId: 61425aed-5d5c-4292-8f60-e2f3efc9b66a\n        approved: true\n    default:\n      summary: default\n      value:\n        originatorAccount:\n          arrangementId: 729190df-a421-4937-94fd-5e1a3da132cc\n          externalArrangementId: \"729190421493794513132\"\n          identification:\n            identification: NL53RABO0309349755\n            schemeName: IBAN\n        originator:\n          name: Credit Account\n          postalAddress:\n            addressLine1: \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n        instructionPriority: NORM\n        requestedExecutionDate: 2017-07-16\n        paymentType: SEPA_CREDIT_TRANSFER\n        isIntraLegalEntityPaymentOrder: false\n        canApprove: false\n        finalApprover: false\n        transferTransactionInformation:\n          instructedAmount:\n            amount: \"5000.55\"\n            currencyCode: EUR\n          counterpartyAccount:\n            identification:\n              identification: FR708933019952AUNHQNQ0KZ\n              schemeName: IBAN\n            name: ABN Amro\n          counterparty:\n            name: Backbase\n            postalAddress:\n              addressLine1: \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n              country: NL\n          remittanceInformation:\n            type: UNSTRUCTURED\n            content: Return a debt\n    limits-breach:\n      summary: limits-breach\n      value:\n        approvalStatus: APPROVED\n        paymentOrders:\n        - paymentOrderId: 7d34169c-6714-11e7-907b-a6006ad3dba0\n          paymentOrder:\n            id: 7d34169c-6714-11e7-907b-a6006ad3dba0\n            approvalId: 49dad7ab-604b-407a-ba47-a61ad93f31ce\n            status: ENTERED\n            originatorAccount:\n              arrangementId: 729190df-a421-4937-94fd-5e1a3da132cc\n              externalArrangementId: \"729190421493794513132\"\n              identification:\n                identification: 0260-0959-3\n                schemeName: BBAN\n            originator:\n              name: Smith Bonus Savings\n              postalAddress:\n                addressLine1: 228 Park Ave S\n                town: New York\n            instructionPriority: HIGH\n            requestedExecutionDate: 2017-08-16\n            paymentMode: SINGLE\n            paymentType: US_FOREIGN_WIRE\n            transferTransactionInformation:\n              endToEndIdentification: Some reference\n              instructedAmount:\n                amount: \"749.99\"\n                currencyCode: EUR\n              counterpartyAccount:\n                identification:\n                  identification: MR1300020001010000123456753\n                  schemeName: IBAN\n                arrangementId: fe9d66ae-b927-4ac7-8799-c5a38a596ff2\n                externalArrangementId: \"9669274787995385962\"\n              counterparty:\n                name: John Smith\n                postalAddress:\n                  addressLine1: 2589 Peaceful Lane\n                  postCode: \"44128\"\n                  town: Warrensville Heights\n                  country: US\n              remittanceInformation:\n                type: UNSTRUCTURED\n                content: Unstructured content\n              counterpartyBank:\n                bankBranchCode: \"082000549\"\n                name: Morgan Chase\n                postalAddress:\n                  addressLine1: 4789 Vernon Street\n                  postCode: \"92028\"\n                  town: Fallbrook\n                  country: US\n              correspondentBank:\n                bankBranchCode: \"122105155\"\n                name: Bank of America\n              intermediaryBank:\n                bic: DABAIE2D\n                bankBranchCode: \"102000021\"\n                name: SNSB\n              messageToBank: My us international wire payment explanation.\n              targetCurrency: EUR\n            actions:\n            - APPROVE\n            createdBy: U00243\n            createdAt: 2017-05-12T14:33:13.452Z\n            version: 2\n          approvalStatus: PENDING\n          status:\n            code: OK\n        - paymentOrderId: d2ff7c65-24ae-430f-92b9-c7ca5b143081\n          paymentOrder:\n            id: d2ff7c65-24ae-430f-92b9-c7ca5b143081\n            approvalId: 2d9367dc-8af1-411d-81f6-9e28c46dd189\n            status: REJECTED\n            originatorAccount:\n              arrangementId: 729190df-a421-4937-94fd-5e1a3da132cc\n              externalArrangementId: \"729190421493794513132\"\n              identification:\n                identification: NL81TRIO0212471066\n                schemeName: IBAN\n            originator:\n              name: Smith Bonus Savings\n              postalAddress:\n                addressLine1: \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n            instructionPriority: HIGH\n            requestedExecutionDate: 2017-08-16\n            paymentMode: SINGLE\n            paymentType: SEPA_CREDIT_TRANSFER\n            transferTransactionInformation:\n              endToEndIdentification: Some reference\n              instructedAmount:\n                amount: \"749.99\"\n                currencyCode: EUR\n              counterpartyAccount:\n                identification:\n                  identification: MR1300020001010000123456753\n                  schemeName: IBAN\n                arrangementId: fe9d66ae-b927-4ac7-8799-c5a38a596ff2\n                externalArrangementId: \"9669274787995385962\"\n              counterparty:\n                name: John Smith\n            actions: []\n            createdBy: U00243\n            createdAt: 2017-05-12T14:33:13.452Z\n            version: 2\n          approvalStatus: REJECTED\n          status:\n            code: ERROR\n            message: \"Not allowed to update this approval, status is final\"\n            errors:\n            - message: \"Not allowed to update this approval, status is final\"\n              key: paymentorder.api.Approval.NotAllowed\n              context:\n                status: REJECTED\n        - paymentOrderId: 9a20be2b-b8f3-45dc-a625-55635235de4c\n          status:\n            code: ERROR\n            message: Payment not found\n            errors:\n            - message: Payment not found\n              key: paymentorder.api.PaymentOrder.NotFound\n        - paymentOrderId: c7653c55-ee9b-4f65-96db-cbda76efd3ae\n          paymentOrder:\n            id: c7653c55-ee9b-4f65-96db-cbda76efd3ae\n            approvalId: fe383f48-df2e-4b17-a0d2-3443b2e3738c\n            status: ENTERED\n            originatorAccount:\n              arrangementId: 729190df-a421-4937-94fd-5e1a3da132cc\n              externalArrangementId: \"729190421493794513132\"\n              identification:\n                identification: NL81TRIO0212471066\n                schemeName: IBAN\n            originator:\n              name: Smith Bonus Savings\n              postalAddress:\n                addressLine1: \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n            instructionPriority: HIGH\n            requestedExecutionDate: 2017-08-16\n            paymentMode: SINGLE\n            paymentType: SEPA_CREDIT_TRANSFER\n            transferTransactionInformation:\n              endToEndIdentification: Some reference\n              instructedAmount:\n                amount: \"749.99\"\n                currencyCode: EUR\n              counterpartyAccount:\n                identification:\n                  identification: MR1300020001010000123456753\n                  schemeName: IBAN\n                arrangementId: fe9d66ae-b927-4ac7-8799-c5a38a596ff2\n                externalArrangementId: \"9669274787995385962\"\n              counterparty:\n                name: John Smith\n            actions: []\n            createdBy: U00243\n            createdAt: 2017-05-12T14:33:13.452Z\n            version: 2\n          status:\n            code: ERROR\n            message: \"Limits has been breached, check report for details\"\n          breachReport:\n          - breachInfo:\n            - breachType: THRESHOLD\n              breachedLimitType: PERIODIC\n              currentConsumption: \"999.00\"\n              currentThreshold: \"1000.00\"\n              timeframe:\n                period: DAILY\n                startTime: 2017-05-12T00:00:00.000Z\n                endTime: 2017-05-12T23:59:59.999Z\n        successCount: 1\n        failCount: 3\n    payment-orders-payment-orders-get:\n      summary: payment-orders-payment-orders-get\n      value:\n      - id: 7d34169c-6714-11e7-907b-a6006ad3dba0\n        approvalId: 49dad7ab-604b-407a-ba47-a61ad93f31ce\n        status: ENTERED\n        originatorAccount:\n          arrangementId: 3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\n          externalArrangementId: a3f8defe-f447-4475-b5c1-d3971ec7a273\n          identification:\n            identification: NL81TRIO0212471066\n            schemeName: IBAN\n        originator:\n          name: Smith Bonus Savings\n          postalAddress:\n            addressLine1: \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n        instructionPriority: HIGH\n        requestedExecutionDate: 2018-08-16\n        paymentMode: SINGLE\n        paymentType: SEPA_CREDIT_TRANSFER\n        transferTransactionInformation:\n          endToEndIdentification: Some reference\n          instructedAmount:\n            amount: \"749.99\"\n            currencyCode: EUR\n          counterpartyAccount:\n            identification:\n              identification: MR1300020001010000123456753\n              schemeName: IBAN\n            arrangementId: fe9d66ae-b927-4ac7-8799-c5a38a596ff2\n            externalArrangementId: \"9669274787995385962\"\n          counterparty:\n            name: John Smith\n        actions:\n        - APPROVE\n        - FINAL_APPROVE\n        - REJECT\n        createdBy: U00243\n        createdAt: 2017-05-12T14:33:13.452Z\n        version: 1\n      - id: 0d0b6350-0ff9-11e8-b642-0ed5f89f718b\n        approvalId: 518bbd4a-0ff9-11e8-b642-0ed5f89f718b\n        status: PROCESSED\n        bankStatus: FINISHED\n        originatorAccount:\n          arrangementId: 729190df-a421-4937-94fd-5e1a3da132cc\n          externalArrangementId: \"729190421493794513132\"\n          identification:\n            identification: NL18INGB0664923638\n            schemeName: IBAN\n          name: Credit Account\n        originator:\n          name: Random Account\n          postalAddress:\n            country: NL\n        batchBooking: true\n        instructionPriority: NORM\n        requestedExecutionDate: 2018-08-11\n        paymentMode: RECURRING\n        paymentType: SEPA_CREDIT_TRANSFER\n        schedule:\n          transferFrequency: MONTHLY\n          \"on\": 1\n          startDate: 2017-08-12\n          every: 1\n          nextExecutionDate: 2018-08-15\n          endDate: 2018-05-12\n        transferTransactionInformation:\n          instructedAmount:\n            amount: \"100.00\"\n            currencyCode: EUR\n          counterpartyAccount:\n            identification:\n              identification: NO9386011117947\n              schemeName: IBAN\n          counterparty:\n            name: Jack Yellow\n          remittanceInformation:\n            type: STRUCTURED\n            content: \u003csome-xml-tags\u003estructured content with XML\u003c/some-xml-tags\u003e\n        createdBy: U00243\n        createdAt: 2017-05-12T14:33:13.452Z\n        version: 1\n      - id: 7d341c28-6714-11e7-907b-a6006ad3dba0\n        approvalId: c383c69f-38bf-4e3e-ad3f-5f58cf971bb1\n        status: REJECTED\n        bankStatus: ACCOUNT_BLOCKED\n        reasonCode: AB01\n        reasonText: Account blocked\n        errorDescription: Blocked by bank.\n        originatorAccount:\n          arrangementId: 1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\n          externalArrangementId: bcf10f4d-4b2f-4413-9bab-31ff693608b5\n          identification:\n            identification: FR188388353832IH3CAWFYXAA36\n            schemeName: IBAN\n        originator:\n          name: Mr and Mrs J. Smith\n        instructionPriority: NORM\n        requestedExecutionDate: 2018-07-16\n        paymentType: SEPA_CREDIT_TRANSFER\n        transferTransactionInformation:\n          instructedAmount:\n            amount: \"5000.55\"\n            currencyCode: EUR\n          counterpartyAccount:\n            identification:\n              identification: LT121000011101001000\n              schemeName: IBAN\n            name: ABN Amro\n          counterparty:\n            name: Backbase\n            postalAddress:\n              addressLine1: \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n              country: NL\n          remittanceInformation:\n            type: UNSTRUCTURED\n            content: Return a debt\n        createdBy: U00243\n        createdAt: 2017-05-12T14:33:13.452Z\n        version: 1\n      - id: 7d34215a-6714-11e7-907b-a6006ad3dba0\n        approvalId: ae01c614-d473-48d6-af7d-f516292b39cb\n        status: ACCEPTED\n        bankStatus: ACCEPTEDTECHNICALVALIDATION\n        reasonCode: AC01\n        reasonText: Accepted by bank\n        originatorAccount:\n          arrangementId: 3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\n          externalArrangementId: a3f8defe-f447-4475-b5c1-d3971ec7a273\n          identification:\n            identification: NL81TRIO0212471066\n            schemeName: IBAN\n        originator:\n          name: Smith Bonus Savings\n        batchBooking: false\n        requestedExecutionDate: 2018-07-23\n        paymentMode: SINGLE\n        paymentType: SEPA_CREDIT_TRANSFER\n        transferTransactionInformation:\n          endToEndIdentification: Some reference\n          instructedAmount:\n            amount: \"749.99\"\n            currencyCode: EUR\n          counterpartyAccount:\n            identification:\n              identification: LI21088100002324013AA\n              schemeName: IBAN\n          counterparty:\n            name: Delivery Service\n        actions:\n        - APPROVE\n        - REJECT\n        createdBy: U00243\n        createdAt: 2017-05-12T14:33:13.452Z\n        version: 1\n      - id: 7d342c15-6714-11e7-907b-a6006ad3dba0\n        approvalId: ae01a624-d473-48d6-af7d-f516292b39cb\n        status: ACCEPTED\n        bankStatus: ACCEPTEDTECHNICALVALIDATION\n        reasonCode: AC01\n        reasonText: Accepted by bank\n        originatorAccount:\n          arrangementId: 1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\n          externalArrangementId: bcf10f4d-4b2f-4413-9bab-31ff693608b5\n          identification:\n            identification: FR188388353832IH3CAWFYXAA36\n            schemeName: IBAN\n        originator:\n          name: Mr and Mrs J. Smith\n        batchBooking: false\n        requestedExecutionDate: 2018-06-12\n        paymentMode: SINGLE\n        paymentType: SEPA_CREDIT_TRANSFER\n        transferTransactionInformation:\n          endToEndIdentification: Some reference\n          instructedAmount:\n            amount: \"99.99\"\n            currencyCode: EUR\n          counterpartyAccount:\n            identification:\n              identification: MR1300020001010000123456753\n              schemeName: IBAN\n            arrangementId: fe9d66ae-b927-4ac7-8799-c5a38a596ff2\n            externalArrangementId: \"9669274787995385962\"\n          counterparty:\n            name: John Smith\n        actions:\n        - APPROVE\n        - REJECT\n        createdBy: U00243\n        createdAt: 2017-05-12T14:33:13.452Z\n        version: 1\n      - id: 7d341a2a-6714-11e7-907b-a6006ad3dba0\n        approvalId: 264b69e4-3df0-49c1-8cda-e2bb437461e8\n        status: ACCEPTED\n        bankStatus: FINISHED\n        originatorAccount:\n          arrangementId: 1cdb2224-8926-4b4d-a99f-1c9dfbbb4699\n          externalArrangementId: bcf10f4d-4b2f-4413-9bab-31ff693608b5\n          identification:\n            identification: FR188388353832IH3CAWFYXAA36\n            schemeName: IBAN\n        originator:\n          name: Mr and Mrs J. Smith\n        batchBooking: true\n        instructionPriority: NORM\n        requestedExecutionDate: 2018-08-11\n        paymentMode: RECURRING\n        paymentType: SEPA_CREDIT_TRANSFER\n        schedule:\n          transferFrequency: MONTHLY\n          \"on\": 1\n          startDate: 2017-08-12\n          every: 1\n          nextExecutionDate: 2018-08-15\n          endDate: 2018-05-12\n        transferTransactionInformation:\n          instructedAmount:\n            amount: \"133.33\"\n            currencyCode: EUR\n          counterpartyAccount:\n            identification:\n              identification: NO9386011117947\n              schemeName: IBAN\n          counterparty:\n            name: Jack Yellow\n          remittanceInformation:\n            type: STRUCTURED\n            content: \u003csome-xml-tags\u003estructured content with XML\u003c/some-xml-tags\u003e\n        createdBy: U00243\n        createdAt: 2017-05-12T14:33:13.452Z\n        version: 9312\n      - id: 5cea81b2-0ff9-11e8-b642-0ed5f89f718b\n        approvalId: 61624e82-0ff9-11e8-b642-0ed5f89f718b\n        status: ACCEPTED\n        bankStatus: FINISHED\n        originatorAccount:\n          arrangementId: 3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\n          externalArrangementId: a3f8defe-f447-4475-b5c1-d3971ec7a273\n          identification:\n            identification: NL81TRIO0212471066\n            schemeName: IBAN\n        originator:\n          name: Smith Bonus Savings\n          postalAddress:\n            addressLine1: \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n        batchBooking: true\n        instructionPriority: NORM\n        requestedExecutionDate: 2018-08-11\n        paymentMode: RECURRING\n        paymentType: SEPA_CREDIT_TRANSFER\n        schedule:\n          transferFrequency: MONTHLY\n          \"on\": 1\n          startDate: 2017-08-12\n          every: 1\n          nextExecutionDate: 2018-08-15\n          endDate: 2018-05-12\n        transferTransactionInformation:\n          instructedAmount:\n            amount: \"166.66\"\n            currencyCode: EUR\n          counterpartyAccount:\n            identification:\n              identification: HU42117730161111101800000000\n              schemeName: IBAN\n          counterparty:\n            name: Jack Brown\n          remittanceInformation:\n            type: STRUCTURED\n            content: \u003csome-xml-tags\u003estructured content with XML\u003c/some-xml-tags\u003e\n        createdBy: U00243\n        createdAt: 2017-05-12T14:33:13.452Z\n        version: 42\n        originatingAccountCurrency: EUR\n      - id: 06db9298-189b-11e8-accf-0ed5f89f718b\n        approvalId: 11863018-189b-11e8-accf-0ed5f89f718b\n        status: ENTERED\n        originatorAccount:\n          arrangementId: 729190df-a421-4937-94fd-5e1a3da132cc\n          identification:\n            identification: 0260-0959-3\n            schemeName: BBAN\n        originator:\n          name: John Doe\n          postalAddress:\n            addressLine1: 228 Park Ave S\n            town: New York\n        batchBooking: false\n        instructionPriority: NORM\n        requestedExecutionDate: 2017-08-12\n        paymentMode: RECURRING\n        paymentType: US_FOREIGN_WIRE\n        schedule:\n          transferFrequency: MONTHLY\n          \"on\": 1\n          startDate: 2017-08-12\n          every: 1\n          nextExecutionDate: 2017-09-12\n          endDate: 2018-05-12\n        transferTransactionInformation:\n          endToEndIdentification: TRNSCT REF 1234567890\n          instructedAmount:\n            amount: \"104.66\"\n            currencyCode: USD\n          counterpartyAccount:\n            identification:\n              identification: NL91 ABNA 0417 1643 00\n              schemeName: IBAN\n          counterparty:\n            name: Jack Brown\n            postalAddress:\n              addressLine1: 2589 Peaceful Lane\n              postCode: \"44128\"\n              town: Warrensville Heights\n              country: US\n          remittanceInformation:\n            type: UNSTRUCTURED\n            content: Unstructured content\n          counterpartyBank:\n            bankBranchCode: \"082000549\"\n            name: Morgan Chase\n            postalAddress:\n              addressLine1: 4789 Vernon Street\n              postCode: \"92028\"\n              town: Fallbrook\n              country: US\n          correspondentBank:\n            bankBranchCode: \"122105155\"\n            name: Bank of America\n          intermediaryBank:\n            bic: DABAIE2D\n            bankBranchCode: \"102000021\"\n            name: SNSB\n          messageToBank: My us international wire payment explanation.\n          targetCurrency: EUR\n        createdBy: U00243\n        createdAt: 2017-05-12T14:33:13.452Z\n        version: 42\n      - id: fa088818-623a-4260-bc46-1ff678de8dae\n        approvalId: 8605dc85-726c-4795-9b55-ff698ad2d1e4\n        status: ENTERED\n        originatorAccount:\n          arrangementId: 07642680-2b6f-11e8-b467-0ed5f89f718b\n          identification:\n            identification: \"00400440116243\"\n            schemeName: BBAN\n        originator:\n          name: Mr John Usmith\n          postalAddress:\n            addressLine1: \"Jacob Bontiusplaats 9, 1018LL, New York\"\n        instructionPriority: HIGH\n        requestedExecutionDate: 2018-08-16\n        paymentMode: SINGLE\n        paymentType: INTERNAL\n        transferTransactionInformation:\n          endToEndIdentification: Some reference\n          instructedAmount:\n            amount: \"749.99\"\n            currencyCode: USD\n          counterpartyAccount:\n            accountType: SAVINGS\n            identification:\n              identification: \"3242342348899\"\n              schemeName: BBAN\n            arrangementId: fe9d66ae-b927-4ac7-8799-c5a38a596ff2\n          counterparty:\n            name: John Doe\n        actions:\n        - APPROVE\n        - REJECT\n        createdBy: U00243\n        createdAt: 2017-05-12T14:33:13.452Z\n        version: 1\n      - id: f58a410e-469c-41f1-8c51-21b6d24bd3c1\n        approvalId: 7527c230-01a7-41b8-a021-dc29aca98fe3\n        status: ENTERED\n        originatorAccount:\n          arrangementId: 07642680-2b6f-11e8-b467-0ed5f89f718b\n          identification:\n            identification: \"00400440116243\"\n            schemeName: BBAN\n        originator:\n          name: Mr John Usmith\n          postalAddress:\n            addressLine1: \"Jacob Bontiusplaats 9, 1018LL, Los Angeles\"\n        instructionPriority: HIGH\n        requestedExecutionDate: 2018-08-16\n        paymentMode: SINGLE\n        paymentType: INTERNAL\n        transferTransactionInformation:\n          endToEndIdentification: Some reference\n          instructedAmount:\n            amount: \"134\"\n            currencyCode: USD\n          counterpartyAccount:\n            accountType: CHECKING\n            identification:\n              identification: \"3242342123899\"\n              schemeName: BBAN\n            arrangementId: fe9d66ae-b927-4ac7-8799-c5a38a596ff2\n          counterparty:\n            name: Dan Brown\n          remittanceInformation:\n            type: UNSTRUCTURED\n            content: Return a debt`\n        actions:\n        - APPROVE\n        - REJECT\n        createdBy: U00243\n        createdAt: 2017-05-12T14:33:13.452Z\n        version: 1\n    lib-bad-request-validation-error:\n      summary: lib-bad-request-validation-error\n      value:\n        message: Bad Request\n        errors:\n        - message: \"Value Exceeded. Must be between {min} and {max}.\"\n          key: common.api.shoesize\n          context:\n            max: \"50\"\n            min: \"1\"\n    complex:\n      summary: complex\n      value:\n        originatorAccount:\n          identification:\n            identification: 729190df-a421-4937-94fd-5e1a3da132cc\n            schemeName: ID\n        batchBooking: true\n        instructionPriority: NORM\n        requestedExecutionDate: 2018-01-01\n        paymentMode: RECURRING\n        paymentType: SEPA_CREDIT_TRANSFER\n        schedule:\n          nonWorkingDayExecutionStrategy: AFTER\n          transferFrequency: MONTHLY\n          \"on\": 1\n          startDate: 2018-01-01\n          repeat: 2\n          every: 1\n        transferTransactionInformation:\n          instructedAmount:\n            amount: \"100.00\"\n            currencyCode: EUR\n          counterparty:\n            name: Dagobert Duck\n            postalAddress:\n              addressLine1: Some other street\n              addressLine2: \"99\"\n              postCode: 1100 ZZ\n              town: Amsterdam\n              country: NL\n          counterpartyAccount:\n            identification:\n              identification: fe9d66ae-b927-4ac7-8799-c5a38a596ff2\n              schemeName: ID\n          remittanceInformation: Salary\n          endToEndIdentification: 5e1a3da132cc\n    us-wire-international-payment-post-transfer-fee:\n      summary: us-wire-international-payment-post-transfer-fee\n      value:\n        originatorAccount:\n          identification:\n            identification: 8a48e08c60daa5940160dac699050088\n            schemeName: ID\n        requestedExecutionDate: 2018-01-04\n        paymentType: US_FOREIGN_WIRE\n        transferTransactionInformation:\n          instructedAmount:\n            amount: \"29.99\"\n            currencyCode: USD\n          counterparty:\n            name: John Doe\n          counterpartyAccount:\n            identification:\n              identification: \"4902331374\"\n              schemeName: BBAN\n          counterpartyBank:\n            bankBranchCode: \"111000025\"\n            bic: INGBNL2A\n            name: ING BANK N.V.\n            postalAddress:\n              addressLine1: FINANCIAL PLAZA BIJLMERDREEF 109 1102 BW AMSTERDAM\n              country: NL\n          correspondentBank:\n            bankBranchCode: \"011000015\"\n            name: FEDERAL RESERVE BANK\n          intermediaryBank:\n            bankBranchCode: \"122105155\"\n            name: SNSB2886803298\n          messageToBank: My us domestic wire payment explanation.\n          targetCurrency: EUR\n          chargeBearer: SHA\n          transferFee:\n            amount: \"0.29\"\n            currencyCode: USD\n    lib-unauthorized-error:\n      summary: lib-unauthorized-error\n      value:\n        message: Access to requested resource denied.\n        errors:\n        - message: Resource access denied due to invalid credentials.\n          key: common.api.token\n          context:\n            accessToken: expired\n    payment-orders-approvable-payment-orders-get:\n      summary: payment-orders-approvable-payment-orders-get\n      value:\n      - id: 7d34169c-6714-11e7-907b-a6006ad3dba0\n        approvalId: 49dad7ab-604b-407a-ba47-a61ad93f31ce\n        status: ENTERED\n        originatorAccount:\n          name: Smith Bonus Savings\n          arrangementId: 3cdb2224-8926-4b4d-a99f-1c9dfbbb4699\n          externalArrangementId: a3f8defe-f447-4475-b5c1-d3971ec7a273\n          identification:\n            identification: NL81TRIO0212471066\n            schemeName: IBAN\n        originator:\n          name: Smith Bonus Savings\n          postalAddress:\n            addressLine1: \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n        batchBooking: false\n        instructionPriority: HIGH\n        requestedExecutionDate: 2018-08-16\n        paymentMode: SINGLE\n        paymentType: SEPA_CREDIT_TRANSFER\n        transferTransactionInformation:\n          instructedAmount:\n            amount: \"749.99\"\n            currencyCode: EUR\n          counterpartyAccount:\n            identification:\n              identification: MR1300020001010000123456753\n              schemeName: IBAN\n            arrangementId: fe9d66ae-b927-4ac7-8799-c5a38a596ff2\n            externalArrangementId: \"9669274787995385962\"\n          counterparty:\n            name: John Smith\n        actions:\n        - APPROVE\n        - FINAL_APPROVE\n        - REJECT\n        createdBy: U00243\n        createdAt: 2017-05-12T14:33:13.452Z\n        version: 1\n      - id: 06db9298-189b-11e8-accf-0ed5f89f718b\n        approvalId: 11863018-189b-11e8-accf-0ed5f89f718b\n        status: ENTERED\n        originatorAccount:\n          name: John Doe\n          arrangementId: 729190df-a421-4937-94fd-5e1a3da132cc\n          identification:\n            identification: 0260-0959-3\n            schemeName: BBAN\n        originator:\n          name: John Doe\n          postalAddress:\n            addressLine1: 228 Park Ave S\n            town: New York\n        batchBooking: false\n        instructionPriority: NORM\n        requestedExecutionDate: 2017-08-12\n        paymentMode: RECURRING\n        paymentType: US_FOREIGN_WIRE\n        schedule:\n          transferFrequency: MONTHLY\n          \"on\": 1\n          startDate: 2017-08-12\n          every: 1\n          nextExecutionDate: 2017-09-12\n          endDate: 2018-05-12\n        transferTransactionInformation:\n          endToEndIdentification: TRNSCT REF 1234567890\n          instructedAmount:\n            amount: \"104.66\"\n            currencyCode: USD\n          counterpartyAccount:\n            identification:\n              identification: NL91 ABNA 0417 1643 00\n              schemeName: IBAN\n          counterparty:\n            name: Jack Brown\n            postalAddress:\n              addressLine1: 2589 Peaceful Lane\n              postCode: \"44128\"\n              town: Warrensville Heights\n              country: US\n          remittanceInformation:\n            type: UNSTRUCTURED\n            content: Unstructured content\n          counterpartyBank:\n            bankBranchCode: \"082000549\"\n            name: Morgan Chase\n            postalAddress:\n              addressLine1: 4789 Vernon Street\n              postCode: \"92028\"\n              town: Fallbrook\n              country: US\n          correspondentBank:\n            bankBranchCode: \"122105155\"\n            name: Bank of America\n          intermediaryBank:\n            bic: DABAIE2D\n            bankBranchCode: \"102000021\"\n            name: SNSB\n          messageToBank: My us international wire payment explanation.\n          targetCurrency: EUR\n        actions:\n        - APPROVE\n        - REJECT\n        createdBy: U00243\n        createdAt: 2017-05-12T14:33:13.452Z\n        version: 42\n      - id: fa088818-623a-4260-bc46-1ff678de8dae\n        approvalId: 8605dc85-726c-4795-9b55-ff698ad2d1e4\n        status: ENTERED\n        originatorAccount:\n          name: Mr John Usmith\n          arrangementId: 07642680-2b6f-11e8-b467-0ed5f89f718b\n          identification:\n            identification: \"00400440116243\"\n            schemeName: BBAN\n        originator:\n          name: Mr John Usmith\n          postalAddress:\n            addressLine1: \"Jacob Bontiusplaats 9, 1018LL, New York\"\n        instructionPriority: HIGH\n        requestedExecutionDate: 2018-08-16\n        paymentMode: SINGLE\n        paymentType: INTERNAL\n        transferTransactionInformation:\n          instructedAmount:\n            amount: \"749.99\"\n            currencyCode: USD\n          counterpartyAccount:\n            accountType: SAVINGS\n            identification:\n              identification: \"3242342348899\"\n              schemeName: BBAN\n            arrangementId: fe9d66ae-b927-4ac7-8799-c5a38a596ff2\n          counterparty:\n            name: John Doe\n        actions:\n        - APPROVE\n        - REJECT\n        createdBy: U00243\n        createdAt: 2017-05-12T14:33:13.452Z\n        version: 1\n    payment-orders-approval-payment-order-approval-put-request:\n      summary: payment-orders-approval-payment-order-approval-put-request\n      value:\n        approvalStatus: APPROVED\n    simple-1:\n      summary: simple-1\n      value:\n        id: af2599ef-759a-4b78-8e67-4949055a532b\n        status: ENTERED\n    payment-orders-payment-order-cancel-request:\n      summary: payment-orders-payment-order-cancel-request\n      value:\n        version: 2\n    simple-2:\n      summary: simple-2\n      value:\n        id: 7d341c28-6714-11e7-907b-a6006ad3dba0\n        approvalId: 49dad7ab-604b-407a-ba47-a61ad93f31ce\n        status: ACCEPTED\n        bankStatus: ACCEPTEDTECHNICALVALIDATION\n        reasonCode: AC01\n        reasonText: Accepted by bank\n        originatorAccount:\n          arrangementId: 729190df-a421-4937-94fd-5e1a3da132cc\n          externalArrangementId: \"729190421493794513132\"\n          identification:\n            identification: NL53RABO0309349755\n            schemeName: IBAN\n        instructionPriority: NORM\n        requestedExecutionDate: 2017-07-16\n        paymentType: SEPA_CREDIT_TRANSFER\n        transferTransactionInformation:\n          instructedAmount:\n            amount: \"5000.55\"\n            currencyCode: EUR\n          counterpartyAccount:\n            identification:\n              identification: FR708933019952AUNHQNQ0KZ\n              schemeName: IBAN\n            arrangementId: fe9d66ae-b927-4ac7-8799-c5a38a596ff2\n            externalArrangementId: \"9669274787995385962\"\n          counterparty:\n            name: Backbase\n            postalAddress:\n              addressLine1: \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n              country: NL\n          remittanceInformation:\n            type: UNSTRUCTURED\n            content: Return a debt\n        actions: []\n        createdBy: U00243\n        createdAt: 2017-05-12T14:33:13.452Z\n        contextualInformation:\n          externalUserId: b3e4692d-6772-4fb2-9446-132435465768\n          internalUserId: b3e4692d-6772-4fb2-9446-374857684932\n          serviceAgreementId: c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\n          legalEntityId: 27263171-94d5-4d82-975c-61d8c41644d0\n          origin: actions\n        originatorAccountCurrency: EUR\n        version: 1\n    payment-orders-payment-orders-put-single:\n      summary: payment-orders-payment-orders-put-single\n      value:\n        id: af2599ef-759a-4b78-8e67-4949055a532b\n        originatorAccount:\n          identification:\n            identification: 729190df-a421-4937-94fd-5e1a3da132cc\n            schemeName: ID\n        requestedExecutionDate: 2017-08-11\n        transferTransactionInformation:\n          instructedAmount:\n            amount: \"120.00\"\n            currencyCode: EUR\n          counterparty:\n            name: J. Sparrow\n          counterpartyAccount:\n            identification:\n              identification: NL21ABNA0136371124\n              schemeName: IBAN\n    intra-legal-entity:\n      summary: intra-legal-entity\n      value:\n        originatorAccount:\n          arrangementId: 729190df-a421-4937-94fd-5e1a3da132cc\n          externalArrangementId: \"729190421493794513132\"\n          identification:\n            identification: NL53RABO0309349755\n            schemeName: IBAN\n        originator:\n          name: Credit Account\n          postalAddress:\n            addressLine1: \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n        instructionPriority: NORM\n        requestedExecutionDate: 2017-07-16\n        paymentType: SEPA_CT_ILE\n        isIntraLegalEntityPaymentOrder: true\n        canApprove: false\n        finalApprover: false\n        transferTransactionInformation:\n          instructedAmount:\n            amount: \"5000.55\"\n            currencyCode: EUR\n          counterpartyAccount:\n            identification:\n              identification: FR708933019952AUNHQNQ0KZ\n              schemeName: IBAN\n            name: ABN Amro\n          counterparty:\n            name: Backbase\n            postalAddress:\n              addressLine1: \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n              country: NL\n          remittanceInformation:\n            type: UNSTRUCTURED\n            content: Return a debt\n    withLogicalApprovalDetails:\n      summary: withLogicalApprovalDetails\n      value:\n        id: 7d341c28-6714-11e7-907b-a6006ad3dba0\n        approvalId: 49dad7ab-604b-407a-ba47-a61ad93f31ce\n        status: ENTERED\n        originatorAccount:\n          arrangementId: 729190df-a421-4937-94fd-5e1a3da132cc\n          externalArrangementId: \"729190421493794513132\"\n          identification:\n            identification: NL53RABO0309349755\n            schemeName: IBAN\n        instructionPriority: NORM\n        requestedExecutionDate: 2018-07-22\n        paymentType: SEPA_CREDIT_TRANSFER\n        transferTransactionInformation:\n          instructedAmount:\n            amount: \"5000.55\"\n            currencyCode: EUR\n          counterpartyAccount:\n            identification:\n              identification: FR708933019952AUNHQNQ0KZ\n              schemeName: IBAN\n            arrangementId: fe9d66ae-b927-4ac7-8799-c5a38a596ff2\n            externalArrangementId: \"9669274787995385962\"\n          counterparty:\n            name: Backbase\n            postalAddress:\n              addressLine1: \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n              country: NL\n          remittanceInformation:\n            type: UNSTRUCTURED\n            content: Return a debt\n        version: 1\n        actions: []\n        createdBy: U00243\n        createdAt: 2018-07-22T13:44:02Z\n        originatorAccountCurrency: EUR\n        approvalDetails:\n          id: b3e4692d-6772-4fb2-9446-b8f4607f49b1\n          userId: b3e4692d-6772-4fb2-9446-bebebebebebe\n          externalUserId: davyJones88\n          userFullName: Davy Jones\n          serviceAgreementId: c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\n          itemId: 7d341c28-6714-11e7-907b-a6006ad3dba0\n          dataAccessItemId: 729190df-a421-4937-94fd-5e1a3da132cc\n          resource: Payments\n          function: SEPA_CREDIT_TRANSFER\n          status: PENDING\n          createdAt: 2018-07-22T13:44:02Z\n          records:\n          - id: 59f23015-9007-4391-a604-1d17e85ab3c0\n            userId: b3e4692d-6772-4fb2-9446-babababababa\n            externalUserId: flying-dutchman\n            userFullName: Jack Sparrow\n            approvalTypeId: ed47a5d7-1626-4e8c-819c-8c1851cb0357\n            status: APPROVED\n            createdAt: 2018-07-22T13:44:02Z\n          approvalTypes:\n          - id: ed47a5d7-1626-4e8c-819c-8c1851cb0357\n            name: A\n            description: 1st approval\n            rank: 100\n          - id: 5fa97eb5-277f-4b2c-b05d-f13d630e05c8\n            name: B\n            description: 2nd approval\n            rank: 101\n          policy:\n            id: 8ac202da-273b-4d2b-8aa6-c12f9d9fa736\n            name: Or policy\n            description: A policy that requires A OR B approvals\n            logicalItems:\n            - rank: 1\n              operator: OR\n              items:\n              - approvalType:\n                  id: ed47a5d7-1626-4e8c-819c-8c1851cb0357\n                  name: A\n                  description: Or A approval\n                  rank: 100\n                numberOfApprovals: 1\n              - approvalType:\n                  id: 5fa97eb5-277f-4b2c-b05d-f13d630e05c8\n                  name: B\n                  description: Or B approval\n                  rank: 101\n                numberOfApprovals: 1\n          canApprove: false\n          canReject: false\n          finalApprover: false\n    ach-credit-post:\n      summary: ach-credit-post\n      value:\n        originatorAccount:\n          identification:\n            identification: 8a48e08c60daa5940160dac699050088\n            schemeName: ID\n        totalAmount:\n          amount: \"10.29\"\n          currencyCode: USD\n        requestedExecutionDate: 2019-10-16\n        paymentType: ACH_CREDIT\n        entryClass: CCD\n        transferTransactionInformation:\n          instructedAmount:\n            amount: \"10.29\"\n            currencyCode: USD\n          counterparty:\n            name: Jane Doe\n            recipientId: \"1234567\"\n          counterpartyAccount:\n            identification:\n              identification: \"4902331374\"\n              schemeName: BBAN\n            accountType: SAVINGS\n          counterpartyBank:\n            bankBranchCode: \"111000025\"\n    withApprovalDetails:\n      summary: withApprovalDetails\n      value:\n        id: 7d341c28-6714-11e7-907b-a6006ad3dba0\n        approvalId: 49dad7ab-604b-407a-ba47-a61ad93f31ce\n        status: ENTERED\n        originatorAccount:\n          arrangementId: 729190df-a421-4937-94fd-5e1a3da132cc\n          externalArrangementId: \"729190421493794513132\"\n          identification:\n            identification: NL53RABO0309349755\n            schemeName: IBAN\n        instructionPriority: NORM\n        requestedExecutionDate: 2018-07-22\n        paymentType: SEPA_CREDIT_TRANSFER\n        transferTransactionInformation:\n          instructedAmount:\n            amount: \"5000.55\"\n            currencyCode: EUR\n          counterpartyAccount:\n            identification:\n              identification: FR708933019952AUNHQNQ0KZ\n              schemeName: IBAN\n            arrangementId: fe9d66ae-b927-4ac7-8799-c5a38a596ff2\n            externalArrangementId: \"9669274787995385962\"\n          counterparty:\n            name: Backbase\n            postalAddress:\n              addressLine1: \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n              country: NL\n          remittanceInformation:\n            type: UNSTRUCTURED\n            content: Return a debt\n        version: 1\n        actions: []\n        createdBy: U00243\n        createdAt: 2018-07-22T13:44:02Z\n        originatorAccountCurrency: EUR\n        approvalDetails:\n          id: b3e4692d-6772-4fb2-9446-b8f4607f49b1\n          userId: b3e4692d-6772-4fb2-9446-bebebebebebe\n          externalUserId: davyJones88\n          userFullName: Davy Jones\n          serviceAgreementId: c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\n          itemId: 7d341c28-6714-11e7-907b-a6006ad3dba0\n          dataAccessItemId: 729190df-a421-4937-94fd-5e1a3da132cc\n          resource: Payments\n          function: SEPA_CREDIT_TRANSFER\n          status: PENDING\n          createdAt: 2018-07-22T13:44:02Z\n          records:\n          - id: 59f23015-9007-4391-a604-1d17e85ab3c0\n            userId: b3e4692d-6772-4fb2-9446-babababababa\n            externalUserId: flying-dutchman\n            userFullName: Jack Sparrow\n            approvalTypeId: ed47a5d7-1626-4e8c-819c-8c1851cb0357\n            status: APPROVED\n            createdAt: 2018-07-22T13:44:02Z\n          approvalTypes:\n          - id: ed47a5d7-1626-4e8c-819c-8c1851cb0357\n            name: A\n            description: 1st approval\n            rank: 100\n          - id: 5fa97eb5-277f-4b2c-b05d-f13d630e05c8\n            name: B\n            description: 2nd approval\n            rank: 101\n          policy:\n            id: 6546c424-d3b1-4848-bbda-31cd44ab6915\n            name: Default policy\n            description: \"A default policy that requires two approvals of different\\\n              \\ types: A + B\"\n            items:\n            - approvalTypeId: ed47a5d7-1626-4e8c-819c-8c1851cb0357\n              numberOfApprovals: 1\n            - approvalTypeId: 5fa97eb5-277f-4b2c-b05d-f13d630e05c8\n              numberOfApprovals: 1\n          canApprove: false\n          canReject: false\n          finalApprover: false\n    can-approve:\n      summary: can-approve\n      value:\n        originatorAccount:\n          arrangementId: 729190df-a421-4937-94fd-5e1a3da132cc\n          externalArrangementId: \"729190421493794513132\"\n          identification:\n            identification: NL53RABO0309349755\n            schemeName: IBAN\n        originator:\n          name: Credit Account\n          postalAddress:\n            addressLine1: \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n        instructionPriority: NORM\n        requestedExecutionDate: 2017-07-16\n        paymentType: SEPA_CREDIT_TRANSFER\n        isIntraLegalEntityPaymentOrder: false\n        canApprove: true\n        finalApprover: false\n        transferTransactionInformation:\n          instructedAmount:\n            amount: \"5000.55\"\n            currencyCode: EUR\n          counterpartyAccount:\n            identification:\n              identification: FR708933019952AUNHQNQ0KZ\n              schemeName: IBAN\n            name: ABN Amro\n          counterparty:\n            name: Backbase\n            postalAddress:\n              addressLine1: \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n              country: NL\n          remittanceInformation:\n            type: UNSTRUCTURED\n            content: Return a debt\n    payment-orders-currencies-get-response:\n      summary: payment-orders-currencies-get-response\n      value:\n      - code: EUR\n      - code: USD\n      - code: GBP\n      - code: ISK\n      - code: KWD\n    payment-orders-payment-order-cancel-response:\n      summary: payment-orders-payment-order-cancel-response\n      value:\n        accepted: true\n    lib-forbidden-error:\n      summary: lib-forbidden-error\n      value:\n        message: Access to requested resource denied.\n        errors:\n        - message: \"Resource access denied due to an insufficient user quota of {quota}.\"\n          key: common.api.quota\n          context:\n            quota: someQuota\n    success:\n      summary: success\n      value:\n        approvalStatus: APPROVED\n        paymentOrders:\n        - paymentOrderId: 7d34169c-6714-11e7-907b-a6006ad3dba0\n          paymentOrder:\n            id: 7d34169c-6714-11e7-907b-a6006ad3dba0\n            approvalId: 49dad7ab-604b-407a-ba47-a61ad93f31ce\n            status: ENTERED\n            originatorAccount:\n              arrangementId: 729190df-a421-4937-94fd-5e1a3da132cc\n              externalArrangementId: \"729190421493794513132\"\n              identification:\n                identification: 0260-0959-3\n                schemeName: BBAN\n            originator:\n              name: Smith Bonus Savings\n              postalAddress:\n                addressLine1: 228 Park Ave S\n                town: New York\n            instructionPriority: HIGH\n            requestedExecutionDate: 2017-08-16\n            paymentMode: SINGLE\n            paymentType: US_FOREIGN_WIRE\n            transferTransactionInformation:\n              endToEndIdentification: Some reference\n              instructedAmount:\n                amount: \"749.99\"\n                currencyCode: EUR\n              counterpartyAccount:\n                identification:\n                  identification: MR1300020001010000123456753\n                  schemeName: IBAN\n                arrangementId: fe9d66ae-b927-4ac7-8799-c5a38a596ff2\n                externalArrangementId: \"9669274787995385962\"\n              counterparty:\n                name: John Smith\n                postalAddress:\n                  addressLine1: 2589 Peaceful Lane\n                  postCode: \"44128\"\n                  town: Warrensville Heights\n                  country: US\n              remittanceInformation:\n                type: UNSTRUCTURED\n                content: Unstructured content\n              counterpartyBank:\n                bankBranchCode: \"082000549\"\n                name: Morgan Chase\n                postalAddress:\n                  addressLine1: 4789 Vernon Street\n                  postCode: \"92028\"\n                  town: Fallbrook\n                  country: US\n              correspondentBank:\n                bankBranchCode: \"122105155\"\n                name: Bank of America\n              intermediaryBank:\n                bic: DABAIE2D\n                bankBranchCode: \"102000021\"\n                name: SNSB\n              messageToBank: My us international wire payment explanation.\n              targetCurrency: EUR\n            actions:\n            - APPROVE\n            createdBy: U00243\n            createdAt: 2017-05-12T14:33:13.452Z\n            version: 2\n          approvalStatus: PENDING\n          status:\n            code: OK\n        - paymentOrderId: d2ff7c65-24ae-430f-92b9-c7ca5b143081\n          paymentOrder:\n            id: d2ff7c65-24ae-430f-92b9-c7ca5b143081\n            approvalId: 2d9367dc-8af1-411d-81f6-9e28c46dd189\n            status: REJECTED\n            originatorAccount:\n              arrangementId: 729190df-a421-4937-94fd-5e1a3da132cc\n              externalArrangementId: \"729190421493794513132\"\n              identification:\n                identification: NL81TRIO0212471066\n                schemeName: IBAN\n            originator:\n              name: Smith Bonus Savings\n              postalAddress:\n                addressLine1: \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n            instructionPriority: HIGH\n            requestedExecutionDate: 2017-08-16\n            paymentMode: SINGLE\n            paymentType: SEPA_CREDIT_TRANSFER\n            transferTransactionInformation:\n              endToEndIdentification: Some reference\n              instructedAmount:\n                amount: \"749.99\"\n                currencyCode: EUR\n              counterpartyAccount:\n                identification:\n                  identification: MR1300020001010000123456753\n                  schemeName: IBAN\n                arrangementId: fe9d66ae-b927-4ac7-8799-c5a38a596ff2\n                externalArrangementId: \"9669274787995385962\"\n              counterparty:\n                name: John Smith\n            actions: []\n            createdBy: U00243\n            createdAt: 2017-05-12T14:33:13.452Z\n            version: 2\n          approvalStatus: REJECTED\n          status:\n            code: ERROR\n            message: \"Not allowed to update this approval, status is final\"\n            errors:\n            - message: \"Not allowed to update this approval, status is final\"\n              key: paymentorder.api.Approval.NotAllowed\n              context:\n                status: REJECTED\n        - paymentOrderId: 9a20be2b-b8f3-45dc-a625-55635235de4c\n          status:\n            code: ERROR\n            message: Payment not found\n            errors:\n            - message: Payment not found\n              key: paymentorder.api.PaymentOrder.NotFound\n        - paymentOrderId: c7653c55-ee9b-4f65-96db-cbda76efd3ae\n          paymentOrder:\n            id: c7653c55-ee9b-4f65-96db-cbda76efd3ae\n            approvalId: fe383f48-df2e-4b17-a0d2-3443b2e3738c\n            status: ENTERED\n            originatorAccount:\n              arrangementId: 729190df-a421-4937-94fd-5e1a3da132cc\n              externalArrangementId: \"729190421493794513132\"\n              identification:\n                identification: NL81TRIO0212471066\n                schemeName: IBAN\n            originator:\n              name: Smith Bonus Savings\n              postalAddress:\n                addressLine1: \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n            instructionPriority: HIGH\n            requestedExecutionDate: 2017-08-16\n            paymentMode: SINGLE\n            paymentType: SEPA_CREDIT_TRANSFER\n            transferTransactionInformation:\n              endToEndIdentification: Some reference\n              instructedAmount:\n                amount: \"749.99\"\n                currencyCode: EUR\n              counterpartyAccount:\n                identification:\n                  identification: MR1300020001010000123456753\n                  schemeName: IBAN\n                arrangementId: fe9d66ae-b927-4ac7-8799-c5a38a596ff2\n                externalArrangementId: \"9669274787995385962\"\n              counterparty:\n                name: John Smith\n            actions: []\n            createdBy: U00243\n            createdAt: 2017-05-12T14:33:13.452Z\n            version: 2\n          status:\n            code: ERROR\n            message: Approval not found\n            errors:\n            - message: Approval not found\n              key: paymentorder.api.Approval.NotFound\n        successCount: 1\n        failCount: 3\n    approved-1:\n      summary: approved-1\n      value:\n        id: af2599ef-759a-4b78-8e67-4949055a532b\n        status: ENTERED\n        approvalStatus: APPROVED\n    final-approver:\n      summary: final-approver\n      value:\n        originatorAccount:\n          arrangementId: 729190df-a421-4937-94fd-5e1a3da132cc\n          externalArrangementId: \"729190421493794513132\"\n          identification:\n            identification: NL53RABO0309349755\n            schemeName: IBAN\n        originator:\n          name: Credit Account\n          postalAddress:\n            addressLine1: \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n        instructionPriority: NORM\n        requestedExecutionDate: 2017-07-16\n        paymentType: SEPA_CREDIT_TRANSFER\n        isIntraLegalEntityPaymentOrder: false\n        canApprove: true\n        finalApprover: true\n        transferTransactionInformation:\n          instructedAmount:\n            amount: \"5000.55\"\n            currencyCode: EUR\n          counterpartyAccount:\n            identification:\n              identification: FR708933019952AUNHQNQ0KZ\n              schemeName: IBAN\n            name: ABN Amro\n          counterparty:\n            name: Backbase\n            postalAddress:\n              addressLine1: \"Jacob Bontiusplaats 9, 1018LL, Amsterdam\"\n              country: NL\n          remittanceInformation:\n            type: UNSTRUCTURED\n            content: Return a debt\n"
		}
	},
	"Error": "parse: paths: /client-api/v2/payment-orders/approvals: get: getApprovablePaymentOrders: responses: 200: content: application/json: schema: parse schema: reference \"#/components/schemas/PaymentOrdersGet\": parse schema: item: parse schema: reference \"#/components/schemas/IdentifiedPaymentOrder\": parse schema: transferTransactionInformation: parse schema: reference \"#/components/schemas/IdentifiedTransaction\": parse schema: instructedAmount: parse schema: reference \"#/components/schemas/Currency\": infinite recursion: \"#/components/schemas/Currency\""
}