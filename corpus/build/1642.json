{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/peneksglazami/tarantool-cartridge-webinar"
		},
		"file": {
			"name": "api.yaml",
			"path": "api/api.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  title: Центр аутентификации\n  description: API демонстрационного приложения \"Центр аутентификации\"\n  version: 1.0.0\n\npaths:\n  /login:\n    post:\n      tags:\n        - Authentication\n      summary: Аутентификация пользователя по логину и паролю\n      operationId: login\n      parameters:\n        - in: body\n          name: request\n          schema:\n            $ref: '#/components/schemas/loginRequest'\n      responses:\n        200:\n          description: \u003e\n            Аутентификация пройдена успешно.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/loginResponse'\n        403:\n          description: Указаны неверные логин и пароль\n\n  /user/{uuid}:\n    get:\n      tags:\n        - User\n      summary: Получение информации об учётной записи пользователя\n      operationId: getUser\n      parameters:\n        - in: path\n          name: uuid\n          required: true\n          description: UUID учётной записи пользователя\n          schema:\n            type: string\n      responses:\n        200:\n          description: Информация об учетной записи пользователя\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getUserResponse'\n    put:\n      tags:\n        - User\n      summary: Обновление учётной записи пользователя\n      operationId: updateUser\n      parameters:\n        - in: path\n          name: uuid\n          required: true\n          description: UUID учётной записи пользователя\n          schema:\n            type: string\n        - in: boby\n          name: userInfo\n          required: true\n          description: Обновлённая информация об учётных данных клиента\n          schema:\n            $ref: '#/components/schemas/updateUserRequest'\n      responses:\n        200:\n          description: Учётная запись пользователя обновлена\n    delete:\n      tags:\n        - User\n      summary: Удаление учетной записи пользователя\n      operationId: deleteUser\n      parameters:\n        - in: path\n          name: uuid\n          required: true\n          description: UUID учётной записи пользователя\n          schema:\n            type: string\n      responses:\n        200:\n          description: Учётная запись пользователя удалена\n  /user:\n    post:\n      tags:\n        - User\n      summary: Создание учетной записи пользователя\n      operationId: createUser\n      parameters:\n        - in: body\n          name: userInfo\n          required: true\n          schema:\n            $ref: '#/components/schemas/createUserRequest'\n      responses:\n        200:\n          description: Учётная запись успешно создана\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/createUserResponse'\n\n  /user/update-group:\n    put:\n      summary: Обновление группы учётных записей клиентов\n      operationId: updateUserGroup\n      tags:\n        - User\n      parameters:\n        - in: body\n          name: userGroupUpdateRequest\n          schema:\n            $ref: '#/components/schemas/userGroupUpdateRequest'\n      responses:\n        200:\n          description: Обновление группы учётных записей клиентов\n\ncomponents:\n  schemas:\n    loginRequest:\n      type: object\n      required:\n        - login\n        - password\n      properties:\n        login:\n          type: string\n        password:\n          type: string\n\n    loginResponse:\n      type: object\n      required:\n        - authToken\n      properties:\n        authToken:\n          type: string\n\n    getUserResponse:\n      type: object\n      required:\n        - uuid\n        - login\n        - groups\n        - status\n      properties:\n        uuid:\n          type: string\n        login:\n          type: string\n        groups:\n          type: array\n          items:\n            type: string\n        status:\n          $ref: '#/components/schemas/userStatus'\n\n    updateUserRequest:\n      type: object\n      description: Запрос на обновление параметров учётной записи.\n      required:\n        - login\n        - password\n        - groupId\n        - status\n      properties:\n        login:\n          type: string\n        password:\n          type: string\n        groups:\n          type: array\n          items:\n            type: string\n        status:\n          $ref: '#/components/schemas/userStatus'\n\n    createUserRequest:\n      type: object\n      required:\n        - login\n        - password\n        - groups\n        - status\n      properties:\n        login:\n          type: string\n        password:\n          type: string\n        groups:\n          type: array\n          items:\n            type: string\n        status:\n          $ref: '#/components/schemas/userStatus'\n\n    createUserResponse:\n      type: object\n      required:\n        - uuid\n      properties:\n        uuid:\n          type: string\n\n    userGroupUpdateRequest:\n      type: object\n      required:\n        - groupId\n        - newStatus\n      properties:\n        groupId:\n          type: string\n          description: Идентификатор группы, к которому должна принадлежать учётная запись\n        newStatus:\n          $ref: '#/components/schemas/userStatus'\n\n    userStatus:\n      type: string\n      enum: [ ACTIVE, BLOCKED ]"
		}
	},
	"Error": "parse: paths: /user/update-group: put: operation \"updateUserGroup\": parameters: parse parameter \"userGroupUpdateRequest\": unsupported parameter type \"body\""
}