{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dofapi/dofapi"
		},
		"file": {
			"name": "swagger.json",
			"path": "server/swagger.json",
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"title\": \"LoopBack Application\",\n        \"version\": \"1.0.0\"\n    },\n    \"paths\": {\n        \"/classes/count\": {\n            \"get\": {\n                \"x-controller-name\": \"ClasseController\",\n                \"x-operation-name\": \"count\",\n                \"tags\": [\n                    \"ClasseController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Classe model count\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"count\": {\n                                            \"type\": \"number\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"where\",\n                        \"in\": \"query\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"schema\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                ],\n                \"operationId\": \"ClasseController.count\"\n            }\n        },\n        \"/classes/{id}\": {\n            \"get\": {\n                \"x-controller-name\": \"ClasseController\",\n                \"x-operation-name\": \"findById\",\n                \"tags\": [\n                    \"ClasseController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Classe model instance\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Classe\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"schema\": {\n                            \"type\": \"number\"\n                        },\n                        \"required\": true\n                    }\n                ],\n                \"operationId\": \"ClasseController.findById\"\n            }\n        },\n        \"/classes\": {\n            \"get\": {\n                \"x-controller-name\": \"ClasseController\",\n                \"x-operation-name\": \"find\",\n                \"tags\": [\n                    \"ClasseController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Array of Classe model instances\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Classe\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"filter\",\n                        \"in\": \"query\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"schema\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"where\": {\n                                    \"type\": \"object\"\n                                },\n                                \"fields\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"_id\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"ankamaId\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"name\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"level\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"type\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"imgUrl\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"url\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"description\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"category\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"title\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"videoUrl\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"roles\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"spells\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"maleImg\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"femaleImg\": {\n                                            \"type\": \"boolean\"\n                                        }\n                                    }\n                                },\n                                \"offset\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"limit\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"skip\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"order\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"operationId\": \"ClasseController.find\"\n            }\n        },\n        \"/consumables/count\": {\n            \"get\": {\n                \"x-controller-name\": \"ConsumableController\",\n                \"x-operation-name\": \"count\",\n                \"tags\": [\n                    \"ConsumableController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Consumable model count\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"count\": {\n                                            \"type\": \"number\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"where\",\n                        \"in\": \"query\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"schema\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                ],\n                \"operationId\": \"ConsumableController.count\"\n            }\n        },\n        \"/consumables/{id}\": {\n            \"get\": {\n                \"x-controller-name\": \"ConsumableController\",\n                \"x-operation-name\": \"findById\",\n                \"tags\": [\n                    \"ConsumableController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Consumable model instance\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Consumable\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"schema\": {\n                            \"type\": \"number\"\n                        },\n                        \"required\": true\n                    }\n                ],\n                \"operationId\": \"ConsumableController.findById\"\n            }\n        },\n        \"/consumables\": {\n            \"get\": {\n                \"x-controller-name\": \"ConsumableController\",\n                \"x-operation-name\": \"find\",\n                \"tags\": [\n                    \"ConsumableController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Array of Consumable model instances\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Consumable\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"filter\",\n                        \"in\": \"query\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"schema\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"where\": {\n                                    \"type\": \"object\"\n                                },\n                                \"fields\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"_id\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"ankamaId\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"name\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"level\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"type\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"imgUrl\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"url\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"description\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"statistics\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"conditions\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"recipe\": {\n                                            \"type\": \"boolean\"\n                                        }\n                                    }\n                                },\n                                \"offset\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"limit\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"skip\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"order\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"operationId\": \"ConsumableController.find\"\n            }\n        },\n        \"/equipments/count\": {\n            \"get\": {\n                \"x-controller-name\": \"EquipmentController\",\n                \"x-operation-name\": \"count\",\n                \"tags\": [\n                    \"EquipmentController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Equipment model count\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"count\": {\n                                            \"type\": \"number\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"where\",\n                        \"in\": \"query\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"schema\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                ],\n                \"operationId\": \"EquipmentController.count\"\n            }\n        },\n        \"/equipments/{id}/set\": {\n            \"get\": {\n                \"x-controller-name\": \"EquipmentController\",\n                \"x-operation-name\": \"findOwningList\",\n                \"tags\": [\n                    \"EquipmentController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Set model instance\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Set\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"schema\": {\n                            \"type\": \"number\"\n                        },\n                        \"required\": true\n                    }\n                ],\n                \"operationId\": \"EquipmentController.findOwningList\"\n            }\n        },\n        \"/equipments/{id}\": {\n            \"get\": {\n                \"x-controller-name\": \"EquipmentController\",\n                \"x-operation-name\": \"findById\",\n                \"tags\": [\n                    \"EquipmentController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Equipment model instance\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Equipment\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"schema\": {\n                            \"type\": \"number\"\n                        },\n                        \"required\": true\n                    }\n                ],\n                \"operationId\": \"EquipmentController.findById\"\n            }\n        },\n        \"/equipments\": {\n            \"get\": {\n                \"x-controller-name\": \"EquipmentController\",\n                \"x-operation-name\": \"find\",\n                \"tags\": [\n                    \"EquipmentController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Array of Equipment model instances\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Equipment\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"filter\",\n                        \"in\": \"query\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"schema\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"where\": {\n                                    \"type\": \"object\"\n                                },\n                                \"fields\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"_id\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"ankamaId\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"name\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"level\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"type\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"imgUrl\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"url\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"description\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"statistics\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"conditions\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"recipe\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"setId\": {\n                                            \"type\": \"boolean\"\n                                        }\n                                    }\n                                },\n                                \"offset\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"limit\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"skip\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"order\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"string\"\n                                    }\n                                },\n                                \"include\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"relation\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"scope\": {\n                                                \"properties\": {\n                                                    \"where\": {\n                                                        \"type\": \"object\"\n                                                    },\n                                                    \"fields\": {\n                                                        \"type\": \"object\",\n                                                        \"properties\": {}\n                                                    },\n                                                    \"offset\": {\n                                                        \"type\": \"integer\",\n                                                        \"minimum\": 0\n                                                    },\n                                                    \"limit\": {\n                                                        \"type\": \"integer\",\n                                                        \"minimum\": 0\n                                                    },\n                                                    \"skip\": {\n                                                        \"type\": \"integer\",\n                                                        \"minimum\": 0\n                                                    },\n                                                    \"order\": {\n                                                        \"type\": \"array\",\n                                                        \"items\": {\n                                                            \"type\": \"string\"\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"operationId\": \"EquipmentController.find\"\n            }\n        },\n        \"/harnesses/count\": {\n            \"get\": {\n                \"x-controller-name\": \"HarnessController\",\n                \"x-operation-name\": \"count\",\n                \"tags\": [\n                    \"HarnessController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Harness model count\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"count\": {\n                                            \"type\": \"number\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"where\",\n                        \"in\": \"query\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"schema\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                ],\n                \"operationId\": \"HarnessController.count\"\n            }\n        },\n        \"/harnesses/{id}\": {\n            \"get\": {\n                \"x-controller-name\": \"HarnessController\",\n                \"x-operation-name\": \"findById\",\n                \"tags\": [\n                    \"HarnessController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Harness model instance\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Harness\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"schema\": {\n                            \"type\": \"number\"\n                        },\n                        \"required\": true\n                    }\n                ],\n                \"operationId\": \"HarnessController.findById\"\n            }\n        },\n        \"/harnesses\": {\n            \"get\": {\n                \"x-controller-name\": \"HarnessController\",\n                \"x-operation-name\": \"find\",\n                \"tags\": [\n                    \"HarnessController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Array of Harness model instances\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Harness\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"filter\",\n                        \"in\": \"query\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"schema\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"where\": {\n                                    \"type\": \"object\"\n                                },\n                                \"fields\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"_id\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"ankamaId\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"name\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"level\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"type\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"imgUrl\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"url\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"description\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"recipe\": {\n                                            \"type\": \"boolean\"\n                                        }\n                                    }\n                                },\n                                \"offset\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"limit\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"skip\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"order\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"operationId\": \"HarnessController.find\"\n            }\n        },\n        \"/havenbags/count\": {\n            \"get\": {\n                \"x-controller-name\": \"HavenbagController\",\n                \"x-operation-name\": \"count\",\n                \"tags\": [\n                    \"HavenbagController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Havenbag model count\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"count\": {\n                                            \"type\": \"number\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"where\",\n                        \"in\": \"query\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"schema\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                ],\n                \"operationId\": \"HavenbagController.count\"\n            }\n        },\n        \"/havenbags/{id}\": {\n            \"get\": {\n                \"x-controller-name\": \"HavenbagController\",\n                \"x-operation-name\": \"findById\",\n                \"tags\": [\n                    \"HavenbagController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Havenbag model instance\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Havenbag\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"schema\": {\n                            \"type\": \"number\"\n                        },\n                        \"required\": true\n                    }\n                ],\n                \"operationId\": \"HavenbagController.findById\"\n            }\n        },\n        \"/havenbags\": {\n            \"get\": {\n                \"x-controller-name\": \"HavenbagController\",\n                \"x-operation-name\": \"find\",\n                \"tags\": [\n                    \"HavenbagController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Array of Havenbag model instances\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Havenbag\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"filter\",\n                        \"in\": \"query\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"schema\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"where\": {\n                                    \"type\": \"object\"\n                                },\n                                \"fields\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"_id\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"ankamaId\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"name\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"level\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"type\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"imgUrl\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"url\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"description\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"furnitures\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"decors\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"grounds\": {\n                                            \"type\": \"boolean\"\n                                        }\n                                    }\n                                },\n                                \"offset\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"limit\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"skip\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"order\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"operationId\": \"HavenbagController.find\"\n            }\n        },\n        \"/idols/count\": {\n            \"get\": {\n                \"x-controller-name\": \"IdolController\",\n                \"x-operation-name\": \"count\",\n                \"tags\": [\n                    \"IdolController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Idol model count\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"count\": {\n                                            \"type\": \"number\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"where\",\n                        \"in\": \"query\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"schema\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                ],\n                \"operationId\": \"IdolController.count\"\n            }\n        },\n        \"/idols/{id}\": {\n            \"get\": {\n                \"x-controller-name\": \"IdolController\",\n                \"x-operation-name\": \"findById\",\n                \"tags\": [\n                    \"IdolController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Idol model instance\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Idol\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"schema\": {\n                            \"type\": \"number\"\n                        },\n                        \"required\": true\n                    }\n                ],\n                \"operationId\": \"IdolController.findById\"\n            }\n        },\n        \"/idols\": {\n            \"get\": {\n                \"x-controller-name\": \"IdolController\",\n                \"x-operation-name\": \"find\",\n                \"tags\": [\n                    \"IdolController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Array of Idol model instances\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Idol\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"filter\",\n                        \"in\": \"query\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"schema\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"where\": {\n                                    \"type\": \"object\"\n                                },\n                                \"fields\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"_id\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"ankamaId\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"name\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"level\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"type\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"imgUrl\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"url\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"description\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"statistics\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"spells\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"bonus\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"recipe\": {\n                                            \"type\": \"boolean\"\n                                        }\n                                    }\n                                },\n                                \"offset\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"limit\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"skip\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"order\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"operationId\": \"IdolController.find\"\n            }\n        },\n        \"/monsters/count\": {\n            \"get\": {\n                \"x-controller-name\": \"MonsterController\",\n                \"x-operation-name\": \"count\",\n                \"tags\": [\n                    \"MonsterController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Monster model count\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"count\": {\n                                            \"type\": \"number\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"where\",\n                        \"in\": \"query\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"schema\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                ],\n                \"operationId\": \"MonsterController.count\"\n            }\n        },\n        \"/monsters/{id}\": {\n            \"get\": {\n                \"x-controller-name\": \"MonsterController\",\n                \"x-operation-name\": \"findById\",\n                \"tags\": [\n                    \"MonsterController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Monster model instance\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Monster\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"schema\": {\n                            \"type\": \"number\"\n                        },\n                        \"required\": true\n                    }\n                ],\n                \"operationId\": \"MonsterController.findById\"\n            }\n        },\n        \"/monsters\": {\n            \"get\": {\n                \"x-controller-name\": \"MonsterController\",\n                \"x-operation-name\": \"find\",\n                \"tags\": [\n                    \"MonsterController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Array of Monster model instances\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Monster\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"filter\",\n                        \"in\": \"query\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"schema\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"where\": {\n                                    \"type\": \"object\"\n                                },\n                                \"fields\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"_id\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"ankamaId\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"name\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"level\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"type\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"imgUrl\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"url\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"description\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"statistics\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"resistances\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"areas\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"drops\": {\n                                            \"type\": \"boolean\"\n                                        }\n                                    }\n                                },\n                                \"offset\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"limit\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"skip\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"order\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"operationId\": \"MonsterController.find\"\n            }\n        },\n        \"/mounts/count\": {\n            \"get\": {\n                \"x-controller-name\": \"MountController\",\n                \"x-operation-name\": \"count\",\n                \"tags\": [\n                    \"MountController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Mount model count\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"count\": {\n                                            \"type\": \"number\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"where\",\n                        \"in\": \"query\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"schema\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                ],\n                \"operationId\": \"MountController.count\"\n            }\n        },\n        \"/mounts/{id}\": {\n            \"get\": {\n                \"x-controller-name\": \"MountController\",\n                \"x-operation-name\": \"findById\",\n                \"tags\": [\n                    \"MountController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Mount model instance\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Mount\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"schema\": {\n                            \"type\": \"number\"\n                        },\n                        \"required\": true\n                    }\n                ],\n                \"operationId\": \"MountController.findById\"\n            }\n        },\n        \"/mounts\": {\n            \"get\": {\n                \"x-controller-name\": \"MountController\",\n                \"x-operation-name\": \"find\",\n                \"tags\": [\n                    \"MountController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Array of Mount model instances\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Mount\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"filter\",\n                        \"in\": \"query\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"schema\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"where\": {\n                                    \"type\": \"object\"\n                                },\n                                \"fields\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"_id\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"ankamaId\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"name\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"level\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"type\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"imgUrl\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"url\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"description\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"statistics\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"characteristics\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"conditions\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"recipe\": {\n                                            \"type\": \"boolean\"\n                                        }\n                                    }\n                                },\n                                \"offset\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"limit\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"skip\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"order\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"operationId\": \"MountController.find\"\n            }\n        },\n        \"/pets/count\": {\n            \"get\": {\n                \"x-controller-name\": \"PetController\",\n                \"x-operation-name\": \"count\",\n                \"tags\": [\n                    \"PetController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Pet model count\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"count\": {\n                                            \"type\": \"number\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"where\",\n                        \"in\": \"query\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"schema\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                ],\n                \"operationId\": \"PetController.count\"\n            }\n        },\n        \"/pets/{id}\": {\n            \"get\": {\n                \"x-controller-name\": \"PetController\",\n                \"x-operation-name\": \"findById\",\n                \"tags\": [\n                    \"PetController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Pet model instance\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Pet\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"schema\": {\n                            \"type\": \"number\"\n                        },\n                        \"required\": true\n                    }\n                ],\n                \"operationId\": \"PetController.findById\"\n            }\n        },\n        \"/pets\": {\n            \"get\": {\n                \"x-controller-name\": \"PetController\",\n                \"x-operation-name\": \"find\",\n                \"tags\": [\n                    \"PetController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Array of Pet model instances\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Pet\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"filter\",\n                        \"in\": \"query\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"schema\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"where\": {\n                                    \"type\": \"object\"\n                                },\n                                \"fields\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"_id\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"ankamaId\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"name\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"level\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"type\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"imgUrl\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"url\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"description\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"statistics\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"conditions\": {\n                                            \"type\": \"boolean\"\n                                        }\n                                    }\n                                },\n                                \"offset\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"limit\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"skip\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"order\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"operationId\": \"PetController.find\"\n            }\n        },\n        \"/professions/count\": {\n            \"get\": {\n                \"x-controller-name\": \"ProfessionController\",\n                \"x-operation-name\": \"count\",\n                \"tags\": [\n                    \"ProfessionController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Profession model count\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"count\": {\n                                            \"type\": \"number\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"where\",\n                        \"in\": \"query\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"schema\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                ],\n                \"operationId\": \"ProfessionController.count\"\n            }\n        },\n        \"/professions/{id}\": {\n            \"get\": {\n                \"x-controller-name\": \"ProfessionController\",\n                \"x-operation-name\": \"findById\",\n                \"tags\": [\n                    \"ProfessionController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Profession model instance\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Profession\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"schema\": {\n                            \"type\": \"number\"\n                        },\n                        \"required\": true\n                    }\n                ],\n                \"operationId\": \"ProfessionController.findById\"\n            }\n        },\n        \"/professions\": {\n            \"get\": {\n                \"x-controller-name\": \"ProfessionController\",\n                \"x-operation-name\": \"find\",\n                \"tags\": [\n                    \"ProfessionController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Array of Profession model instances\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Profession\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"filter\",\n                        \"in\": \"query\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"schema\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"where\": {\n                                    \"type\": \"object\"\n                                },\n                                \"fields\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"_id\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"ankamaId\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"name\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"level\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"type\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"imgUrl\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"url\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"description\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"harvests\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"recipe\": {\n                                            \"type\": \"boolean\"\n                                        }\n                                    }\n                                },\n                                \"offset\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"limit\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"skip\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"order\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"operationId\": \"ProfessionController.find\"\n            }\n        },\n        \"/resources/count\": {\n            \"get\": {\n                \"x-controller-name\": \"ResourceController\",\n                \"x-operation-name\": \"count\",\n                \"tags\": [\n                    \"ResourceController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Resource model count\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"count\": {\n                                            \"type\": \"number\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"where\",\n                        \"in\": \"query\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"schema\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                ],\n                \"operationId\": \"ResourceController.count\"\n            }\n        },\n        \"/resources/{id}\": {\n            \"get\": {\n                \"x-controller-name\": \"ResourceController\",\n                \"x-operation-name\": \"findById\",\n                \"tags\": [\n                    \"ResourceController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Resource model instance\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Resource\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"schema\": {\n                            \"type\": \"number\"\n                        },\n                        \"required\": true\n                    }\n                ],\n                \"operationId\": \"ResourceController.findById\"\n            }\n        },\n        \"/resources\": {\n            \"get\": {\n                \"x-controller-name\": \"ResourceController\",\n                \"x-operation-name\": \"find\",\n                \"tags\": [\n                    \"ResourceController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Array of Resource model instances\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Resource\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"filter\",\n                        \"in\": \"query\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"schema\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"where\": {\n                                    \"type\": \"object\"\n                                },\n                                \"fields\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"_id\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"ankamaId\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"name\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"level\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"type\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"imgUrl\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"url\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"description\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"recipe\": {\n                                            \"type\": \"boolean\"\n                                        }\n                                    }\n                                },\n                                \"offset\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"limit\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"skip\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"order\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"operationId\": \"ResourceController.find\"\n            }\n        },\n        \"/set/{id}/equipments\": {\n            \"get\": {\n                \"x-controller-name\": \"SetEquipmentsController\",\n                \"x-operation-name\": \"find\",\n                \"tags\": [\n                    \"SetEquipmentsController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Array of equipment's belonging to set\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Equipment\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"schema\": {\n                            \"type\": \"number\"\n                        },\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"filter\",\n                        \"in\": \"query\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"schema\": {\n                            \"type\": \"object\",\n                            \"additionalProperties\": true\n                        }\n                    }\n                ],\n                \"operationId\": \"SetEquipmentsController.find\"\n            }\n        },\n        \"/sets/count\": {\n            \"get\": {\n                \"x-controller-name\": \"SetController\",\n                \"x-operation-name\": \"count\",\n                \"tags\": [\n                    \"SetController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Set model count\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"count\": {\n                                            \"type\": \"number\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"where\",\n                        \"in\": \"query\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"schema\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                ],\n                \"operationId\": \"SetController.count\"\n            }\n        },\n        \"/sets/{id}/weapons\": {\n            \"get\": {\n                \"x-controller-name\": \"SetWeaponController\",\n                \"x-operation-name\": \"find\",\n                \"tags\": [\n                    \"SetWeaponController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Array of weapon's belonging to set\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Weapon\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"schema\": {\n                            \"type\": \"number\"\n                        },\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"filter\",\n                        \"in\": \"query\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"schema\": {\n                            \"type\": \"object\",\n                            \"additionalProperties\": true\n                        }\n                    }\n                ],\n                \"operationId\": \"SetWeaponController.find\"\n            }\n        },\n        \"/sets/{id}\": {\n            \"get\": {\n                \"x-controller-name\": \"SetController\",\n                \"x-operation-name\": \"findById\",\n                \"tags\": [\n                    \"SetController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Set model instance\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Set\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"schema\": {\n                            \"type\": \"number\"\n                        },\n                        \"required\": true\n                    }\n                ],\n                \"operationId\": \"SetController.findById\"\n            }\n        },\n        \"/sets\": {\n            \"get\": {\n                \"x-controller-name\": \"SetController\",\n                \"x-operation-name\": \"find\",\n                \"tags\": [\n                    \"SetController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Array of Set model instances\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Set\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"filter\",\n                        \"in\": \"query\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"schema\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"where\": {\n                                    \"type\": \"object\"\n                                },\n                                \"fields\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"_id\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"ankamaId\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"name\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"level\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"type\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"imgUrl\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"url\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"description\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"bonus\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"equipment_id\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"weapon_id\": {\n                                            \"type\": \"boolean\"\n                                        }\n                                    }\n                                },\n                                \"offset\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"limit\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"skip\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"order\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"string\"\n                                    }\n                                },\n                                \"include\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"relation\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"scope\": {\n                                                \"properties\": {\n                                                    \"where\": {\n                                                        \"type\": \"object\"\n                                                    },\n                                                    \"fields\": {\n                                                        \"type\": \"object\",\n                                                        \"properties\": {}\n                                                    },\n                                                    \"offset\": {\n                                                        \"type\": \"integer\",\n                                                        \"minimum\": 0\n                                                    },\n                                                    \"limit\": {\n                                                        \"type\": \"integer\",\n                                                        \"minimum\": 0\n                                                    },\n                                                    \"skip\": {\n                                                        \"type\": \"integer\",\n                                                        \"minimum\": 0\n                                                    },\n                                                    \"order\": {\n                                                        \"type\": \"array\",\n                                                        \"items\": {\n                                                            \"type\": \"string\"\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"operationId\": \"SetController.find\"\n            }\n        },\n        \"/weapons/count\": {\n            \"get\": {\n                \"x-controller-name\": \"WeaponController\",\n                \"x-operation-name\": \"count\",\n                \"tags\": [\n                    \"WeaponController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Weapon model count\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"count\": {\n                                            \"type\": \"number\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"where\",\n                        \"in\": \"query\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"schema\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                ],\n                \"operationId\": \"WeaponController.count\"\n            }\n        },\n        \"/weapons/{id}/set\": {\n            \"get\": {\n                \"x-controller-name\": \"WeaponController\",\n                \"x-operation-name\": \"findOwningList\",\n                \"tags\": [\n                    \"WeaponController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Set model instance\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Set\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"schema\": {\n                            \"type\": \"number\"\n                        },\n                        \"required\": true\n                    }\n                ],\n                \"operationId\": \"WeaponController.findOwningList\"\n            }\n        },\n        \"/weapons/{id}\": {\n            \"get\": {\n                \"x-controller-name\": \"WeaponController\",\n                \"x-operation-name\": \"findById\",\n                \"tags\": [\n                    \"WeaponController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Weapon model instance\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Weapon\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"schema\": {\n                            \"type\": \"number\"\n                        },\n                        \"required\": true\n                    }\n                ],\n                \"operationId\": \"WeaponController.findById\"\n            }\n        },\n        \"/weapons\": {\n            \"get\": {\n                \"x-controller-name\": \"WeaponController\",\n                \"x-operation-name\": \"find\",\n                \"tags\": [\n                    \"WeaponController\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Array of Weapon model instances\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Weapon\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"filter\",\n                        \"in\": \"query\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"schema\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"where\": {\n                                    \"type\": \"object\"\n                                },\n                                \"fields\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"_id\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"ankamaId\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"name\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"level\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"type\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"imgUrl\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"url\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"description\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"statistics\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"conditions\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"characteristics\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"recipe\": {\n                                            \"type\": \"boolean\"\n                                        },\n                                        \"setId\": {\n                                            \"type\": \"boolean\"\n                                        }\n                                    }\n                                },\n                                \"offset\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"limit\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"skip\": {\n                                    \"type\": \"integer\",\n                                    \"minimum\": 0\n                                },\n                                \"order\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"string\"\n                                    }\n                                },\n                                \"include\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"relation\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"scope\": {\n                                                \"properties\": {\n                                                    \"where\": {\n                                                        \"type\": \"object\"\n                                                    },\n                                                    \"fields\": {\n                                                        \"type\": \"object\",\n                                                        \"properties\": {}\n                                                    },\n                                                    \"offset\": {\n                                                        \"type\": \"integer\",\n                                                        \"minimum\": 0\n                                                    },\n                                                    \"limit\": {\n                                                        \"type\": \"integer\",\n                                                        \"minimum\": 0\n                                                    },\n                                                    \"skip\": {\n                                                        \"type\": \"integer\",\n                                                        \"minimum\": 0\n                                                    },\n                                                    \"order\": {\n                                                        \"type\": \"array\",\n                                                        \"items\": {\n                                                            \"type\": \"string\"\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"operationId\": \"WeaponController.find\"\n            }\n        }\n    },\n    \"servers\": [\n        {\n            \"url\": \"/\"\n        }\n    ],\n    \"components\": {\n        \"schemas\": {\n            \"Classe\": {\n                \"title\": \"Classe\",\n                \"properties\": {\n                    \"_id\": {\n                        \"type\": \"number\"\n                    },\n                    \"ankamaId\": {\n                        \"type\": \"number\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"level\": {\n                        \"type\": \"number\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    },\n                    \"imgUrl\": {\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"category\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": {\n                        \"type\": \"string\"\n                    },\n                    \"videoUrl\": {\n                        \"type\": \"string\"\n                    },\n                    \"roles\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"spells\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"maleImg\": {\n                        \"type\": \"string\"\n                    },\n                    \"femaleImg\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"_id\"\n                ]\n            },\n            \"Consumable\": {\n                \"title\": \"Consumable\",\n                \"properties\": {\n                    \"_id\": {\n                        \"type\": \"number\"\n                    },\n                    \"ankamaId\": {\n                        \"type\": \"number\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"level\": {\n                        \"type\": \"number\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    },\n                    \"imgUrl\": {\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"statistics\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"conditions\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"recipe\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                },\n                \"required\": [\n                    \"_id\"\n                ]\n            },\n            \"Equipment\": {\n                \"title\": \"Equipment\",\n                \"properties\": {\n                    \"_id\": {\n                        \"type\": \"number\"\n                    },\n                    \"ankamaId\": {\n                        \"type\": \"number\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"level\": {\n                        \"type\": \"number\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    },\n                    \"imgUrl\": {\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"statistics\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"conditions\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"recipe\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"setId\": {\n                        \"type\": \"number\"\n                    }\n                },\n                \"required\": [\n                    \"_id\"\n                ]\n            },\n            \"Set\": {\n                \"title\": \"Set\",\n                \"properties\": {\n                    \"_id\": {\n                        \"type\": \"number\"\n                    },\n                    \"ankamaId\": {\n                        \"type\": \"number\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"level\": {\n                        \"type\": \"number\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    },\n                    \"imgUrl\": {\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"bonus\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"equipment_id\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"weapon_id\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"required\": [\n                    \"_id\"\n                ]\n            },\n            \"Harness\": {\n                \"title\": \"Harness\",\n                \"properties\": {\n                    \"_id\": {\n                        \"type\": \"number\"\n                    },\n                    \"ankamaId\": {\n                        \"type\": \"number\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"level\": {\n                        \"type\": \"number\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    },\n                    \"imgUrl\": {\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"recipe\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                },\n                \"required\": [\n                    \"_id\"\n                ]\n            },\n            \"Havenbag\": {\n                \"title\": \"Havenbag\",\n                \"properties\": {\n                    \"_id\": {\n                        \"type\": \"number\"\n                    },\n                    \"ankamaId\": {\n                        \"type\": \"number\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"level\": {\n                        \"type\": \"number\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    },\n                    \"imgUrl\": {\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"furnitures\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"decors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"grounds\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"required\": [\n                    \"_id\"\n                ]\n            },\n            \"Idol\": {\n                \"title\": \"Idol\",\n                \"properties\": {\n                    \"_id\": {\n                        \"type\": \"number\"\n                    },\n                    \"ankamaId\": {\n                        \"type\": \"number\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"level\": {\n                        \"type\": \"number\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    },\n                    \"imgUrl\": {\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"statistics\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"spells\": {\n                        \"type\": \"string\"\n                    },\n                    \"bonus\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"recipe\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                },\n                \"required\": [\n                    \"_id\"\n                ]\n            },\n            \"Monster\": {\n                \"title\": \"Monster\",\n                \"properties\": {\n                    \"_id\": {\n                        \"type\": \"number\"\n                    },\n                    \"ankamaId\": {\n                        \"type\": \"number\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"level\": {\n                        \"type\": \"number\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    },\n                    \"imgUrl\": {\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"statistics\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"resistances\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"areas\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"drops\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                },\n                \"required\": [\n                    \"_id\"\n                ]\n            },\n            \"Mount\": {\n                \"title\": \"Mount\",\n                \"properties\": {\n                    \"_id\": {\n                        \"type\": \"number\"\n                    },\n                    \"ankamaId\": {\n                        \"type\": \"number\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"level\": {\n                        \"type\": \"number\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    },\n                    \"imgUrl\": {\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"statistics\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"characteristics\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"conditions\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"recipe\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                },\n                \"required\": [\n                    \"_id\"\n                ]\n            },\n            \"Pet\": {\n                \"title\": \"Pet\",\n                \"properties\": {\n                    \"_id\": {\n                        \"type\": \"number\"\n                    },\n                    \"ankamaId\": {\n                        \"type\": \"number\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"level\": {\n                        \"type\": \"number\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    },\n                    \"imgUrl\": {\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"statistics\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"conditions\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"required\": [\n                    \"_id\"\n                ]\n            },\n            \"Profession\": {\n                \"title\": \"Profession\",\n                \"properties\": {\n                    \"_id\": {\n                        \"type\": \"number\"\n                    },\n                    \"ankamaId\": {\n                        \"type\": \"number\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"level\": {\n                        \"type\": \"number\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    },\n                    \"imgUrl\": {\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"harvests\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"recipe\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                },\n                \"required\": [\n                    \"_id\"\n                ]\n            },\n            \"Resource\": {\n                \"title\": \"Resource\",\n                \"properties\": {\n                    \"_id\": {\n                        \"type\": \"number\"\n                    },\n                    \"ankamaId\": {\n                        \"type\": \"number\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"level\": {\n                        \"type\": \"number\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    },\n                    \"imgUrl\": {\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"recipe\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                },\n                \"required\": [\n                    \"_id\"\n                ]\n            },\n            \"Weapon\": {\n                \"title\": \"Weapon\",\n                \"properties\": {\n                    \"_id\": {\n                        \"type\": \"number\"\n                    },\n                    \"ankamaId\": {\n                        \"type\": \"number\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"level\": {\n                        \"type\": \"number\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    },\n                    \"imgUrl\": {\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"statistics\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"conditions\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"characteristics\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"recipe\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"setId\": {\n                        \"type\": \"number\"\n                    }\n                },\n                \"required\": [\n                    \"_id\"\n                ]\n            }\n        }\n    }\n}"
		}
	},
	"Error": "make ir: path \"/havenbags\": get: parameters: field \"where\": nested objects not allowed"
}