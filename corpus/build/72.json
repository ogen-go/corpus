{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/geopython/pygeoapi"
		},
		"file": {
			"name": "pygeoapi-test-openapi.yml",
			"path": "tests/pygeoapi-test-openapi.yml",
			"content": "# =================================================================\n#\n# Authors: Tom Kralidis \u003ctomkralidis@gmail.com\u003e\n#\n# Copyright (c) 2019 Tom Kralidis\n#\n# Permission is hereby granted, free of charge, to any person\n# obtaining a copy of this software and associated documentation\n# files (the \"Software\"), to deal in the Software without\n# restriction, including without limitation the rights to use,\n# copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the\n# Software is furnished to do so, subject to the following\n# conditions:\n#\n# The above copyright notice and this permission notice shall be\n# included in all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n# OTHER DEALINGS IN THE SOFTWARE.\n#\n# =================================================================\n\ncomponents:\n  parameters:\n    f:\n      description: The optional f parameter indicates the output format which the\n        server shall provide as part of the response document.  The default format\n        is GeoJSON.\n      explode: false\n      in: query\n      name: f\n      required: false\n      schema:\n        default: json\n        enum:\n        - json\n        - html\n        type: string\n      style: form\n    sortby:\n      name: sortby\n      in: query\n      required: false\n      schema:\n        type: array\n        minItems: 1\n        items:\n          type: string\n          pattern: \"[+|-][A-Za-z_][A-Za-z_0-9]*\"\n      explode: false\n      style: form\n    startindex:\n      description: The optional startindex parameter indicates the index within the\n        result set from which the server shall begin presenting results in the response\n        document.  The first element has an index of 0 (default).\n      explode: false\n      in: query\n      name: startindex\n      required: false\n      schema:\n        default: 0\n        minimum: 0\n        type: integer\n      style: form\n  responses:\n    '200':\n      description: successful operation\n    default:\n      content:\n        application/json:\n          schema:\n            $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/exception.yaml\n      description: Unexpected error\ninfo:\n  contact:\n    email: you@example.org\n    name: Organization Name\n    url: https://pygeoapi.io\n  description: pygeoapi provides an API to geospatial data\n  license:\n    name: CC-BY 4.0 license\n    url: https://creativecommons.org/licenses/by/4.0/\n  termsOfService: None\n  title: pygeoapi default instance\n  version: 3.0.2\n  x-keywords:\n  - geospatial\n  - data\n  - api\nopenapi: 3.0.2\npaths:\n  /:\n    get:\n      description: Landing page\n      parameters:\n      - $ref: '#/components/parameters/f'\n      responses:\n        '200':\n          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/LandingPage\n        '400':\n          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter\n        '500':\n          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError\n      summary: Landing page\n      tags:\n      - server\n  /openapi:\n    get:\n      description: This document\n      parameters:\n      - $ref: '#/components/parameters/f'\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter\n        default:\n          $ref: '#/components/responses/default'\n      summary: This document\n      tags:\n      - server\n  /collections:\n    get:\n      description: Feature Collections\n      parameters:\n      - $ref: '#/components/parameters/f'\n      responses:\n        '200':\n          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Collections\n        '400':\n          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter\n        '500':\n          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError\n      summary: Feature Collections\n      tags:\n      - server\n  /collections/obs:\n    get:\n      description: My cool observations\n      parameters:\n      - $ref: '#/components/parameters/f'\n      responses:\n        '200':\n          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Collection\n        '400':\n          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter\n        '404':\n          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound\n        '500':\n          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError\n      summary: Get feature collection metadata\n      tags:\n      - obs\n  /collections/obs/items:\n    get:\n      description: My cool observations\n      parameters:\n      - description: The optional f parameter indicates the output format which the\n          server shall provide as part of the response document.  The default format\n          is GeoJSON.\n        explode: false\n        in: query\n        name: f\n        required: false\n        schema:\n          default: json\n          enum:\n          - json\n          - html\n          - csv\n          type: string\n        style: form\n      - $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/bbox\n      - $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/limit\n      - $ref: '#/components/parameters/sortby'\n      - $ref: '#/components/parameters/startindex'\n      responses:\n        '200':\n          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Features\n        '400':\n          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter\n        '404':\n          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound\n        '500':\n          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError\n      summary: Get Observations features\n      tags:\n      - obs\n  /collections/obs/items/{featureId}:\n    get:\n      description: My cool observations\n      parameters:\n      - $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/featureId\n      - $ref: '#/components/parameters/f'\n      responses:\n        '200':\n          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Feature\n        '400':\n          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter\n        '404':\n          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound\n        '500':\n          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError\n      summary: Get Observations feature by id\n      tags:\n      - obs\n  /conformance:\n    get:\n      description: API conformance definition\n      parameters:\n      - $ref: '#/components/parameters/f'\n      responses:\n        '200':\n          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ConformanceDeclaration\n        '400':\n          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter\n        '500':\n          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError\n      summary: API conformance definition\n      tags:\n      - server\n  /processes:\n    get:\n      description: Processes\n      parameters:\n      - $ref: '#/components/parameters/f'\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        default:\n          $ref: '#/components/responses/default'\n      summary: Processes\n      tags:\n      - server\n  /processes/hello-world:\n    get:\n      description: Hello World process\n      parameters:\n      - $ref: '#/components/parameters/f'\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        default:\n          $ref: '#/components/responses/default'\n      summary: Get process metadata\n      tags:\n      - hello-world\n  /processes/hello-world/jobs:\n    get:\n      description: Hello World process\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        default:\n          $ref: '#/components/responses/default'\n      summary: Retrieve job list for process\n      tags:\n      - hello-world\n    post:\n      description: Hello World process\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            example:\n              inputs:\n              - id: name\n                type: text/plain\n                value: hi there\n            schema:\n              $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/execute.yaml\n        description: Mandatory execute request JSON\n        required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        default:\n          $ref: '#/components/responses/default'\n      summary: Process Hello World process execution\n      tags:\n      - hello-world\nservers:\n- description: pygeoapi provides an API to geospatial data\n  url: http://localhost:5000/\ntags:\n- description: pygeoapi provides an API to geospatial data\n  externalDocs:\n    description: information\n    url: http://example.org\n  name: server\n- description: My cool observations\n  name: obs\n- description: Hello World process\n  name: hello-world\n\n"
		}
	},
	"Error": "parse: paths: /collections/obs/items: get: : parameters: parse parameter \"\": resolve \"http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/bbox\" reference: invalid parameter reference: \"http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/bbox\""
}