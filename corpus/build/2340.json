{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cdimascio/express-openapi-validator"
		},
		"file": {
			"name": "ems.yaml",
			"path": "examples/6-multi-file-spec/ems.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  title: EMS\n  description: Spec for EMS API\n  version: 1.0.0\nservers:\n  - url: /v1\npaths:\n  /queries:\n    get:\n      summary: Returns all queries\n      operationId: getQueries\n      parameters:\n        - name: offset\n          in: query\n          required: false\n          description: The record index to start returning (e.g. 1 = second record)\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: An array of query objects\n          content:\n            'application/json':\n              schema:\n                $ref: 'schemas/queries.yaml'\n        '500':\n          description: Server error\n    # post:\n    #   summary: Create a new query\n    #   operationId: createQuery\n    #   requestBody:\n    #     description: A JSON object describing a query\n    #     required: true\n    #     content:\n    #       'application/json':\n    #         schema:\n    #           $ref: 'schemas/queryrequest.yaml'\n    #   responses:\n    #     '201':\n    #       description: The created query object\n    #       content:\n    #         'application/json':\n    #           schema:\n    #             $ref: 'schemas/queryresponse.yaml'\n    #     '404':\n    #       description: Query not found\n    #     '500':\n    #       description: Server error\n    post:\n      summary: Create a new query\n      operationId: createQuery\n      requestBody:\n        $ref: '#/components/requestBodies/QueryBody'\n      responses:\n        '201':\n          description: The created query object\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas/queryresponse.yaml'\n        '404':\n          description: Query not found\n        '500':\n          description: Server error\n    put:\n      summary: Update queries in bulk\n      operationId: updateQueryBulk\n      requestBody:\n        $ref: '#/components/requestBodies/QueriesBody'\n      responses:\n        '200':\n          description: An array of updated query objects\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas/queries.yaml'\n        '500':\n          description: Server error\n\ncomponents:\n  requestBodies:\n    QueryBody:\n      description: A JSON object describing a query request\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: 'schemas/queryrequest.yaml'\n    QueriesBody:\n      description: An array of JSON objects describing query requests\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: 'schemas/queryrequest.yaml'"
		}
	},
	"Error": "parse: paths: /queries: get: getQueries: responses: 200: content: application/json: schema: parse schema: reference \"schemas/queries.yaml\": resolve reference \"schemas/queries.yaml\": invalid schema reference \"schemas/queries.yaml\""
}