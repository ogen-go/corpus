{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mapcentia/geocloud2"
		},
		"file": {
			"name": "api.json",
			"path": "public/swagger/v2/api.json",
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"title\": \"GC2 API\",\n        \"contact\": {\n            \"email\": \"mh@mapcentia.com\"\n        },\n        \"version\": \"2.0.0\"\n    },\n    \"paths\": {\n        \"/api/v2/configuration/{userId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Configuration\"\n                ],\n                \"summary\": \"Returns all configurations (unpublished configurations are returned if authorized user is the author)\",\n                \"operationId\": \"app\\\\api\\\\v2\\\\Configuration::get_all\",\n                \"parameters\": [\n                    {\n                        \"name\": \"userId\",\n                        \"in\": \"path\",\n                        \"description\": \"User identifier\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation status\"\n                    }\n                }\n            }\n        },\n        \"/api/v2/configuration/{userId}/{configurationId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Configuration\"\n                ],\n                \"summary\": \"Returns specific configuration (unpublished configuration is returned if authorized user is the author)\",\n                \"operationId\": \"app\\\\api\\\\v2\\\\Configuration::get_specific\",\n                \"parameters\": [\n                    {\n                        \"name\": \"userId\",\n                        \"in\": \"path\",\n                        \"description\": \"User identifier\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"configurationId\",\n                        \"in\": \"path\",\n                        \"description\": \"Configuration id (key)\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation status\"\n                    }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Configuration\"\n                ],\n                \"summary\": \"Deletes configuration\",\n                \"operationId\": \"app\\\\api\\\\v2\\\\Configuration::delete_index\",\n                \"parameters\": [\n                    {\n                        \"name\": \"userId\",\n                        \"in\": \"path\",\n                        \"description\": \"User identifier\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"configurationId\",\n                        \"in\": \"path\",\n                        \"description\": \"Configuration id (key)\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation status\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"cookieAuth\": []\n                    }\n                ]\n            }\n        },\n        \"/api/v2/configuration/{userId}/\": {\n            \"post\": {\n                \"tags\": [\n                    \"Configuration\"\n                ],\n                \"summary\": \"Creates configuration\",\n                \"operationId\": \"app\\\\api\\\\v2\\\\Configuration::post_index\",\n                \"parameters\": [\n                    {\n                        \"name\": \"userId\",\n                        \"in\": \"path\",\n                        \"description\": \"User identifier\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"description\": \"Configuration data\",\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"name\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"published\": {\n                                        \"type\": \"boolean\"\n                                    },\n                                    \"description\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"body\": {\n                                        \"type\": \"string\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation status\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"cookieAuth\": []\n                    }\n                ]\n            }\n        },\n        \"/apiv2/configuration/{userId}/{configurationId}\": {\n            \"put\": {\n                \"tags\": [\n                    \"Configuration\"\n                ],\n                \"summary\": \"Creates configuration\",\n                \"operationId\": \"app\\\\api\\\\v2\\\\Configuration::put_index\",\n                \"parameters\": [\n                    {\n                        \"name\": \"userId\",\n                        \"in\": \"path\",\n                        \"description\": \"User identifier\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"configurationId\",\n                        \"in\": \"path\",\n                        \"description\": \"Configuration id (key)\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"description\": \"Configuration data\",\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"name\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"published\": {\n                                        \"type\": \"boolean\"\n                                    },\n                                    \"description\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"body\": {\n                                        \"type\": \"string\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation status\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"cookieAuth\": []\n                    }\n                ]\n            }\n        },\n        \"/api/v2/database/schemas\": {\n            \"get\": {\n                \"tags\": [\n                    \"Database\"\n                ],\n                \"summary\": \"Returns available schemas\",\n                \"operationId\": \"app\\\\api\\\\v2\\\\Database::get_schemas\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation status\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"cookieAuth\": []\n                    }\n                ]\n            }\n        },\n        \"/api/v2/database/search\": {\n            \"get\": {\n                \"tags\": [\n                    \"Database\"\n                ],\n                \"summary\": \"Returns databases found according to provided filters\",\n                \"operationId\": \"app\\\\api\\\\v2\\\\Database::get_search\",\n                \"parameters\": [\n                    {\n                        \"name\": \"userIdentifier\",\n                        \"in\": \"query\",\n                        \"description\": \"Filters databases that have user with specified name registered\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation status\"\n                    }\n                }\n            }\n        },\n        \"/api/v2/keyvalue/{userId}/{key}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Keyvalue\"\n                ],\n                \"summary\": \"Get value by key\",\n                \"operationId\": \"app\\\\api\\\\v2\\\\Keyvalue::get_index\",\n                \"parameters\": [\n                    {\n                        \"name\": \"userId\",\n                        \"in\": \"path\",\n                        \"description\": \"User identifier\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"key\",\n                        \"in\": \"path\",\n                        \"description\": \"Key to fetch\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation status\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"success\": {\n                                            \"type\": \"boolean\",\n                                            \"example\": true\n                                        },\n                                        \"data\": {\n                                            \"type\": \"object\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            },\n                            \"text/plain\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"tags\": [\n                    \"Keyvalue\"\n                ],\n                \"summary\": \"Update value in store\",\n                \"operationId\": \"app\\\\api\\\\v2\\\\Keyvalue::put_index\",\n                \"parameters\": [\n                    {\n                        \"name\": \"userId\",\n                        \"in\": \"path\",\n                        \"description\": \"User identifier\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"key\",\n                        \"in\": \"path\",\n                        \"description\": \"Key to update\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"description\": \"New JSON value to store\",\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"object\"\n                            }\n                        },\n                        \"text/plain\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation status\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"success\": {\n                                            \"type\": \"boolean\",\n                                            \"example\": true\n                                        },\n                                        \"data\": {\n                                            \"type\": \"object\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            },\n                            \"text/plain\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Keyvalue\"\n                ],\n                \"summary\": \"Create new key/value in store\",\n                \"operationId\": \"app\\\\api\\\\v2\\\\Keyvalue::post_index\",\n                \"parameters\": [\n                    {\n                        \"name\": \"userId\",\n                        \"in\": \"path\",\n                        \"description\": \"User identifier\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"key\",\n                        \"in\": \"path\",\n                        \"description\": \"Key to create\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"description\": \"JSON value to store\",\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"object\"\n                            }\n                        },\n                        \"text/plain\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation status\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"success\": {\n                                            \"type\": \"boolean\",\n                                            \"example\": true\n                                        },\n                                        \"data\": {\n                                            \"type\": \"object\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            },\n                            \"text/plain\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Keyvalue\"\n                ],\n                \"summary\": \"Delete a key/bvalue in store\",\n                \"operationId\": \"app\\\\api\\\\v2\\\\Keyvalue::delete_index\",\n                \"parameters\": [\n                    {\n                        \"name\": \"userId\",\n                        \"in\": \"path\",\n                        \"description\": \"User identifier\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"key\",\n                        \"in\": \"path\",\n                        \"description\": \"Key to delete\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation status\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"string\",\n                                            \"example\": \"my_key\"\n                                        },\n                                        \"success\": {\n                                            \"type\": \"boolean\",\n                                            \"example\": true\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/v2/session/start\": {\n            \"get\": {\n                \"tags\": [\n                    \"Session\"\n                ],\n                \"summary\": \"Starts the session\",\n                \"operationId\": \"app\\\\api\\\\v2\\\\Session::get_start\",\n                \"parameters\": [\n                    {\n                        \"name\": \"user\",\n                        \"in\": \"query\",\n                        \"description\": \"User name\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"password\",\n                        \"in\": \"query\",\n                        \"description\": \"Password\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"schema\",\n                        \"in\": \"query\",\n                        \"description\": \"Schema\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation status\"\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Session\"\n                ],\n                \"summary\": \"Starts the session\",\n                \"operationId\": \"app\\\\api\\\\v2\\\\Session::post_start\",\n                \"requestBody\": {\n                    \"description\": \"Credentials\",\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"user\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"password\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"schema\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"database\": {\n                                        \"type\": \"string\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation status\"\n                    }\n                }\n            }\n        },\n        \"/api/v2/session\": {\n            \"get\": {\n                \"tags\": [\n                    \"Session\"\n                ],\n                \"summary\": \"Checks the session\",\n                \"operationId\": \"app\\\\api\\\\v2\\\\Session::get_index\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation status\"\n                    }\n                }\n            }\n        },\n        \"/api/v2/session/stop\": {\n            \"get\": {\n                \"tags\": [\n                    \"Session\"\n                ],\n                \"summary\": \"Destroys the session\",\n                \"operationId\": \"app\\\\api\\\\v2\\\\Session::get_stop\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation status\"\n                    }\n                }\n            }\n        },\n        \"/api/v2/user\": {\n            \"post\": {\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"Creates user\",\n                \"operationId\": \"app\\\\api\\\\v2\\\\User::post_index\",\n                \"requestBody\": {\n                    \"description\": \"User data\",\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"required\": [\n                                    \"name\",\n                                    \"email\",\n                                    \"password\"\n                                ],\n                                \"properties\": {\n                                    \"name\": {\n                                        \"type\": \"string\",\n                                        \"example\": \"user\"\n                                    },\n                                    \"email\": {\n                                        \"type\": \"string\",\n                                        \"example\": \"user@example.com\"\n                                    },\n                                    \"password\": {\n                                        \"type\": \"string\",\n                                        \"example\": \"1234Luggage\"\n                                    },\n                                    \"subuser\": {\n                                        \"type\": \"boolean\",\n                                        \"example\": true\n                                    },\n                                    \"usergroup\": {\n                                        \"type\": \"string\",\n                                        \"example\": \"My group\"\n                                    },\n                                    \"parentdb\": {\n                                        \"type\": \"string\",\n                                        \"example\": \"mydatabase\"\n                                    },\n                                    \"properties\": {\n                                        \"type\": \"object\",\n                                        \"example\": {\n                                            \"org\": \"Ajax Inc.\"\n                                        }\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation status\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"cookieAuth\": []\n                    }\n                ]\n            }\n        },\n        \"/api/v2/user/{userId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"Returns extended information about user (meta, schemas, groups). User data is available only for the actual user and his superuser\",\n                \"operationId\": \"app\\\\api\\\\v2\\\\User::get_default\",\n                \"parameters\": [\n                    {\n                        \"name\": \"userId\",\n                        \"in\": \"path\",\n                        \"description\": \"User identifier\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation status\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"cookieAuth\": []\n                    }\n                ]\n            },\n            \"put\": {\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"Updates user information. User can only update himself or its subuser.\",\n                \"operationId\": \"app\\\\api\\\\v2\\\\User::put_index\",\n                \"parameters\": [\n                    {\n                        \"name\": \"userId\",\n                        \"in\": \"path\",\n                        \"description\": \"User identifier\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"description\": \"User data\",\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"currentPassword\": {\n                                        \"type\": \"string\",\n                                        \"example\": \"1234Luggage\"\n                                    },\n                                    \"password\": {\n                                        \"type\": \"string\",\n                                        \"example\": \"1234Luggage\"\n                                    },\n                                    \"email\": {\n                                        \"type\": \"string\",\n                                        \"example\": \"user@example.com\"\n                                    },\n                                    \"usergroup\": {\n                                        \"type\": \"string\",\n                                        \"example\": \"My group\"\n                                    },\n                                    \"properties\": {\n                                        \"type\": \"object\",\n                                        \"example\": {\n                                            \"org\": \"Ajax Inc.\"\n                                        }\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation status\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"cookieAuth\": []\n                    }\n                ]\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"Deletes user. User can only delete himself or be deleted by its superuser.\",\n                \"operationId\": \"app\\\\api\\\\v2\\\\User::delete_index\",\n                \"parameters\": [\n                    {\n                        \"name\": \"userId\",\n                        \"in\": \"path\",\n                        \"description\": \"User identifier\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation status\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"cookieAuth\": []\n                    }\n                ]\n            }\n        },\n        \"/api/v2/user/{userId}/subusers\": {\n            \"get\": {\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"Returns subusers\",\n                \"operationId\": \"app\\\\api\\\\v2\\\\User::get_subusers\",\n                \"parameters\": [\n                    {\n                        \"name\": \"userId\",\n                        \"in\": \"path\",\n                        \"description\": \"User identifier\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Operation status\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"cookieAuth\": []\n                    }\n                ]\n            }\n        }\n    },\n    \"components\": {\n        \"securitySchemes\": {\n            \"cookieAuth\": {\n                \"type\": \"apiKey\",\n                \"name\": \"PHPSESSID\",\n                \"in\": \"cookie\"\n            }\n        }\n    }\n}"
		}
	},
	"Error": "parse: paths: /api/v2/keyvalue/{userId}/{key}: get: app\\api\\v2\\Keyvalue::get_index: parameters: parse parameter \"key\": path parameters must be required"
}