{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/eightcard/openapi-to-normalizr"
		},
		"file": {
			"name": "timeline.v3.yml",
			"path": "example/timeline.v3.yml",
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: タイムラインAPI\n  contact:\n    name: API Support\n    url: http://www.example.com/support\n    email: support@example.com\nservers:\n  - url: http://localhost:10010\ntags:\n  - name: default\npaths:\n  /timeline:\n    get:\n      tags:\n        - default\n      description: |\n        投稿一覧を取得\n      responses:\n        200:\n          $ref: '#/components/responses/TimelineResponse'\n    post:\n      tags:\n        - default\n      description: ｜\n        投稿を新規作成\n      responses:\n        201:\n          description: 投稿作成成功\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Post'\n      requestBody:\n        description: |\n          作成する投稿情報\n        $ref: '#/components/requestBodies/PostRequest'\n        required: true\n  /timeline/{id}:\n    parameters:\n      - name: id\n        in: path\n        description: 投稿ID\n        required: true\n        schema:\n          type: integer\n          format: int64\n    get:\n      tags:\n        - default\n      description: |\n        指定されたIDに応じた投稿を取得\n      responses:\n        200:\n          description: 投稿取得成功\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Post'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      tags:\n        - default\n      description: |\n        指定されたIDの投稿を削除\n      responses:\n        200:\n          description: 削除成功\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\ncomponents:\n  responses:\n    TimelineResponse:\n      description: |\n        投稿一覧レスポンス\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/Post'\n  requestBodies:\n    PostRequest:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              text:\n                type: string\n              publisher:\n                type: object\n                $ref: '#/components/schemas/Person'\n  # schemasで表現されるものがモデルとして正規化対象となる\n  schemas:\n    Post:\n      description: |\n        投稿モデル\n      required:\n        - id\n        - text\n      properties:\n        text:\n          type: string\n        id:\n          type: integer\n          format: int64\n        postedAt:\n          type: string\n          format: date-time\n        publisher:\n          description: |\n            投稿の投稿者\n            - publisherKind=1 個人\n            - publisherKind=2 企業\n          required:\n            - publisherKind\n          type: object\n          oneOf:\n            - $ref: '#/components/schemas/Person'\n            - $ref: '#/components/schemas/Company'\n          discriminator:\n            propertyName: publisherKind\n            mapping:\n              1: '#/components/schemas/Person'\n              2: '#/components/schemas/Company'\n    Person:\n      description: |\n        投稿者の人物モデル\n      # 正規化するときの主キーはx-id-attributeで指定できる (デフォルトはid)\n      x-id-attribute: personId\n      properties:\n        publisherKind:\n          type: number\n          default: 1\n        name:\n          type: string\n        personId:\n          type: integer\n          format: int64\n    Company:\n      description: |\n        投稿者の企業モデル\n      properties:\n        publisherKind:\n          type: number\n          default: 2\n        name:\n          type: string\n        id:\n          type: integer\n          format: int64\n        logo:\n          type: string\n    Error:\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n"
		}
	},
	"Error": "make ir: path \"/timeline\": get: responses: 200: contents: application/json: schema: item: field publisher: oneOf: discriminator: unable to map 1 to #/components/schemas/Person"
}