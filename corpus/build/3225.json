{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/opengeospatial/e-learning"
		},
		"file": {
			"name": "serich-WMTS-API-1.0.0-openapi.yaml",
			"path": "docs/wmts/text/serich-WMTS-API-1.0.0-openapi.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0-alpha\n  title: Draft WMTS API for Discussion Purposes Only\n  description: \u003e\n    Draft (unofficial for discussion purposes only) WMTS API for retrieval of OGC WMTS resources. The design of this API roughly corresponds to the \"resource-oriented style\" described in version 1.0.0 of the OGC 07-057r7 OpenGIS Web Map Tile Service Implementation Standard at www.opengeospatial.org/standards/wmts.\n  termsOfService: http://cite.deegree.org/deegree-webservices-3.4-RC3/\n  contact:\n    name: OGC Tech Desk\n    email: techdesk@opengeospatial.org\n  license:\n    name: CC-BY 4.0 license\n    url: https://creativecommons.org/licenses/by/4.0/\nservers:\n  - url: http://cite.deegree.org/{basePath}\n    description: Server on which the API is implemented\n    variables:\n      basePath:\n        default: '1.0.0'\npaths:\n  /{serviceMetadataDocumentName}:\n    get:\n      summary: Retrieve WMTS ServiceMetadata.\n      description: This endpoint returns a WMTS ServiceMetadata resource.\n      parameters:\n        - $ref: \"#/components/parameters/serviceMetadataDocumentNameParam\"\n      responses:\n        '200':\n          description: ServiceMetadata resource available\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/Capabilities'\n        '404':\n          description: File Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /retrieveTile/{Style}/{Dimension}/{TileMatrixSet}/{TileMatrix}/{TileRow}/{TileCol}:\n    get:\n      summary: Retrieve a WMTS Tile.\n      description: This endpoint returns a Tile resource.\n      parameters:\n        - $ref: \"#/components/parameters/styleParam\"\n        - $ref: \"#/components/parameters/dimensionParam\"\n        - $ref: \"#/components/parameters/tileMatrixSetParam\"\n        - $ref: \"#/components/parameters/tileMatrixParam\"\n        - $ref: \"#/components/parameters/tileRowParam\"\n        - $ref: \"#/components/parameters/tileColParam\"\n      responses:\n        '200':\n          description: Tile matched the specified criteria\n          content:\n            'image/*':\n              schema:\n                type: string\n                format: binary\n        '404':\n          description: File Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /retrieveFeatureInfo/{Style}/{Dimension}/{TileMatrixSet}/{TileMatrix}/{TileRow}/{TileCol}/{J}/{I}:\n    get:\n      summary: Retrieve FeatureInfo.\n      description: This endpoint returns a Feature resource.\n      parameters:\n        - $ref: \"#/components/parameters/styleParam\"\n        - $ref: \"#/components/parameters/dimensionParam\"\n        - $ref: \"#/components/parameters/tileMatrixSetParam\"\n        - $ref: \"#/components/parameters/tileMatrixParam\"\n        - $ref: \"#/components/parameters/tileRowParam\"\n        - $ref: \"#/components/parameters/tileColParam\"\n        - $ref: \"#/components/parameters/jParam\"\n        - $ref: \"#/components/parameters/iParam\"\n      responses:\n        '200':\n          description: Feature information matched the specified criteria\n          content:\n            'application/gml+xml':\n              schema:\n                $ref: '#/components/schemas/featureGML'\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/featureGeoJSON'\n        '404':\n          description: File Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\ncomponents:\n  parameters:\n    serviceMetadataDocumentNameParam:\n      name: serviceMetadataDocumentName\n      in: path\n      required: true\n      schema:\n        type: string\n      example: 'WMTSCapabilities.xml'\n    styleParam:\n      name: style\n      in: path\n      required: true\n      schema:\n        type: string  # per WMTS Spec Table 7\n      example: 'blue'\n    dimensionParam:  # Refer to WMS 1.3.0 Annex C\n      name: dimension\n      in: path\n      required: true  # Note: the WMTS Spec allows 0..*\n      schema:\n        type: string\n      example: '2007-05' # assumes ServiceMetadata Dimension-Identifier is 'TIME'\n    tileMatrixSetParam:\n      name: tileMatrixSet\n      in: path\n      required: true\n      schema:\n        type: string\n      example: 'coastlinesInCrs84'\n    tileMatrixParam:  # scale\n      name: tileMatrix\n      in: path\n      required: true\n      schema:\n        type: string\n      example: '5e6'\n    tileRowParam:\n      name: tileRow\n      in: path\n      required: true\n      schema:\n        type: string\n      example: '42'\n    tileColParam:\n      name: tileCol\n      in: path\n      required: true\n      schema:\n        type: string\n      example: '112'\n    jParam:\n      name: j\n      in: path\n      required: true\n      schema:\n        type: string\n      example: '23'\n    iParam:\n      name: i\n      in: path\n      required: true\n      schema:\n        type: string\n      example: '35'\n  schemas:\n    Capabilities:\n      type: object\n      required:\n        - Version\n        - serviceMetadataURL\n      properties:\n        Version:\n          type: string\n          example: '1.0.0'\n        updateSequence:\n          type: string\n        ServiceIdentification:\n          $ref: '#/components/schemas/ServiceIdentification'\n        ServiceProvider:\n          $ref: '#/components/schemas/ServiceProvider'\n        Contents:\n          $ref: '#/components/schemas/Contents'\n        serviceMetadataURL:\n          type: string\n          example: 'http://cite.deegree.org/1.0.0/WMTSCapabilities.xml'\n        Themes:\n          $ref: '#/components/schemas/Themes'\n    ServiceIdentification:\n      type: object\n      required:\n        - Title\n      properties:\n        Title:\n          type: object\n        Abstract:\n          type: object\n        Keywords:\n          type: object\n        ServiceType:\n          type: object\n        ServiceTypeVersion:\n          type: object\n        Fees:\n          type: object\n        AccessConstraints:\n          type: object\n    ServiceProvider:\n      type: object\n      required:\n        - IndividualName\n      properties:\n        IndividualName:\n          type: object\n        PositionName:\n          type: object\n        ContactInfo:\n          type: object\n    Contents:\n      type: object\n      properties:\n        Layer:\n          $ref: '#/components/schemas/Layer'\n        tileMatrixSet:\n          $ref: '#/components/schemas/tileMatrixSet'\n        otherSource:\n          type: string\n    Layer:\n      type: object\n      required:\n        - Identifier\n        - Style\n        - Format\n        - tileMatrixSetLink\n        - resourceURL\n      properties:\n        Identifier:\n          type: string\n          example: 'coastlines'\n        Title:\n          type: string\n          example: 'Coastlines'\n        Abstract:\n          type: string\n          example: 'Coastline/shorelines (BA010)'\n        Keywords:\n          type: string\n        BoundingBox:\n          $ref: '#/components/schemas/boundingBox'\n        WGS84BoundingBox:\n          $ref: '#/components/schemas/boundingBox'\n        Style:\n          type: object\n        Format:\n          type: string\n          example:\n            oneOf:\n              pngExample: 'image/png'\n              gifExample: 'image/gif'\n        infoFormat:\n          type: string\n          example: 'application/gml+xml'\n        Dimension:\n          $ref: '#/components/schemas/Dimension'\n        Metadata:\n          type: object\n        tileMatrixSetLink:\n          $ref: '#/components/schemas/tileMatrixSetLink'\n        resourceURL:\n          $ref: '#/components/schemas/resourceURL'\n    boundingBox:\n      type: object\n      required:\n        - lowerCorner\n        - upperCorner\n      properties:\n        lowerCorner:\n          type: string\n          example: '-180 -90'\n        upperCorner:\n          type: string\n          example: '180 90'\n    Dimension:\n          type: string\n          example:\n            oneOf:\n              timeExample: 'time'\n              elevationExample: 'elevation'\n              otherExample: 'temperature'\n    tileMatrixSetLink:\n      type: object\n      required:\n        - tileMatrixSet\n      properties:\n        tileMatrixSet:\n          $ref: '#/components/schemas/tileMatrixSet'\n        tileMatrixLimits:\n          $ref: '#/components/schemas/tileMatrixSetLimits'\n    tileMatrixSet:\n      type: object\n      required:\n        - matrixSetID\n        - SupportedCRS\n        - tileMatrix\n      properties:\n        matrixSetID:\n          type: string\n          example: 'BigWorld'\n        matrixSetTitle:\n          type: string\n        matrixSetAsbtract:\n          type: string\n        matrixSetKeywords:\n          type: string\n        matrixSetBoundingBox:\n          $ref: '#/components/schemas/boundingBox'\n        SupportedCRS:\n          type: string\n          example: 'urn:ogc:def:crs:OGC:1.3:CRS84'\n        wellKnownScaleSet:\n          type: string\n        tileMatrix:\n          $ref: '#/components/schemas/tileMatrix'\n    tileMatrixSetLimits:\n      type: object\n      required:\n        - tileMatrixID\n        - minTileRow\n        - maxTileRow\n        - minTileCol\n        - maxTileCol\n      properties:\n        tileMatrixID:\n          type: string\n          example: 'BigWorld'\n        minTileRow:\n          type: integer\n          format: int32\n          minimum: 0\n        maxTileRow:\n          type: integer\n          format: int32\n        minTileCol:\n          type: integer\n          format: int32\n          minimum: 0\n        maxTileCol:\n          type: integer\n          format: int32\n    tileMatrix:\n      type: object\n      required:\n        - tileMatrixIdentifier\n        - scaleDenominator\n        - topLeftCorner\n        - tileWidth\n        - tileHeight\n        - matrixWidth\n        - matrixHeight\n      properties:\n        tileMatrixIdentifier:\n          type: string\n          example: '2.5e6'\n        tileMatrixTitle:\n          type: string\n        tileMatrixAsbtract:\n          type: string\n        tileMatrixKeywords:\n          type: string\n        scaleDenominator:\n          type: number\n          format: double\n          example: 2.5e6\n        topLeftCorner:\n          $ref: '#/components/schemas/tilePosition'\n        tileWidthInPixels:\n          type: integer\n          format: int32\n          minimum: 0\n        tileHeightInPixels:\n          type: integer\n          format: int32\n          minimum: 0\n        matrixWidthInTiles:\n          type: integer\n          format: int32\n          minimum: 0\n        matrixHeightInTiles:\n          type: integer\n          format: int32\n          minimum: 0\n    tilePosition:\n      type: object\n      required:\n        - firstCoordinate\n        - secondCoordinate\n      properties:\n        firstCoordinate:\n          type: number\n          format: double\n          example: -180\n        secondCoordinate:\n          type: number\n          format: double\n          example: 84\n    Themes:\n      type: array\n      items:\n        $ref: '#/components/schemas/Theme'\n    Theme:\n      type: object\n      required:\n        - themeIdentifier\n      properties:\n        themeIdentifier:\n          type: string\n          example: 'Boundaries'\n        themeTitle:\n          type: string\n          example: 'Boundaries'\n        themeAbstract:\n          type: string\n        themeKeywords:\n          type: string\n        Theme:\n          $ref: '#/components/schemas/Theme'\n        layerRef:\n          type: string\n          example:\n            oneOf:\n              Example1: 'coastlines'\n              Example2: 'politicalBoundaries'\n              Example3: 'depthContours'\n    resourceURL:  # one per layer\n      type: object\n      required:\n        - format\n        - resourceType\n        - hrefTemplate\n      properties:\n        format:\n          type: string  # per WMTS Spec Tables 31 and 33\n          enum:\n            - image/png\n            - application/gml+xml\n        resourceType:\n          type: string  # per WMTS Spec Tables 31 and 33\n          enum:\n            - tile\n            - FeatureInfo\n        hrefTemplate:\n          type: string  # per WMTS Spec Tables 32 and 34\n          example:\n            oneOf:\n              tileTemplate: 'http://www.maps.bob/etopo2/default/ {TileMatrixSet}/{TileMatrix}/{TileRow}/{TileCol}.png'\n              FeatureInfoTemplate: 'http://www.maps.bob/etopo2/default/ {TileMatrixSet}/{TileMatrix}/{TileRow}/{TileCol}/{J}/{I}.xml'\n    featureGML:\n      type: object\n      required:\n        - 'gml:id'\n      xml:\n        name: AbstractFeature\n        namespace: 'http://www.opengis.net/gml/3.2'\n        prefix: gml\n      properties:\n        'gml:id':\n          type: string\n          xml:\n            namespace: 'http://www.opengis.net/gml/3.2'\n            prefix: gml\n            attribute: true\n    featureGeoJSON:\n      type: object\n      required:\n        - type\n        - geometry\n        - properties\n      properties:\n        type:\n          type: string\n          enum:\n            - Feature\n        geometry:\n          $ref: '#/components/schemas/geometryGeoJSON'\n          nullable: true\n        properties:\n          type: object\n          nullable: true\n    geometryGeoJSON:\n      type: object\n      required:\n        - type\n      properties:\n        type:\n          type: string\n          enum:\n            - Point\n            - MultiPoint\n            - LineString\n            - MultiLineString\n            - Polygon\n            - MultiPolygon\n            - GeometryCollection\n    Error:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n"
		}
	},
	"Error": "parse: paths: /retrieveFeatureInfo/{Style}/{Dimension}/{TileMatrixSet}/{TileMatrix}/{TileRow}/{TileCol}/{J}/{I}: get: operation \"\": parse path: path parameter not specified: \"Style\""
}