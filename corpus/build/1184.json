{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "APIs/youneedabudget.com/1.0.0/openapi.yaml",
			"content": "openapi: 3.0.0\nservers:\n  - url: https://api.youneedabudget.com/v1\ninfo:\n  contact:\n    x-twitter: ynab\n  description: Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.youneedabudget.com\n  title: YNAB API Endpoints\n  version: 1.0.0\n  x-apisguru-categories:\n    - financial\n  x-logo:\n    url: https://twitter.com/ynab/profile_image?size=original\n  x-origin:\n    - format: openapi\n      url: https://api.youneedabudget.com/papi/spec-v1-swagger.json\n      version: \"3.0\"\n  x-providerName: youneedabudget.com\nsecurity:\n  - bearer: []\ntags:\n  - name: User\n  - name: Budgets\n  - description: The accounts for a budget\n    name: Accounts\n  - description: The categories for a budget\n    name: Categories\n  - description: The payees for a budget\n    name: Payees\n  - description: When you enter a transaction and specify a payee on the YNAB mobile apps, the GPS coordinates for that location are stored, with your permission, so that the next time you are in the same place (like the Grocery store) we can pre-populate nearby payees for you!  Itâ€™s handy and saves you time.  This resource makes these locations available.  Locations will not be available for all payees.\n    name: Payee Locations\n  - description: Each budget contains one or more months, which is where Ready to Assign, Age of Money and category (budgeted / activity / balances) amounts are available.\n    name: Months\n  - description: The transactions for a budget\n    name: Transactions\n  - description: The scheduled transactions for a budget\n    name: Scheduled Transactions\npaths:\n  /budgets:\n    get:\n      description: Returns budgets list with summary information\n      operationId: getBudgets\n      parameters:\n        - description: Whether to include the list of budget accounts\n          in: query\n          name: include_accounts\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BudgetSummaryResponse\"\n          description: The list of budgets\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: No budgets were found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: An error occurred\n      summary: List budgets\n      tags:\n        - Budgets\n  \"/budgets/{budget_id}\":\n    get:\n      description: Returns a single budget with all related entities.  This resource is effectively a full budget export.\n      operationId: getBudgetById\n      parameters:\n        - description: 'The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n          in: path\n          name: budget_id\n          required: true\n          schema:\n            type: string\n        - description: The starting server knowledge.  If provided, only entities that have changed since `last_knowledge_of_server` will be included.\n          in: query\n          name: last_knowledge_of_server\n          required: false\n          schema:\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BudgetDetailResponse\"\n          description: The requested budget\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: The specified budget was not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: An error occurred\n      summary: Single budget\n      tags:\n        - Budgets\n  \"/budgets/{budget_id}/accounts\":\n    get:\n      description: Returns all accounts\n      operationId: getAccounts\n      parameters:\n        - description: 'The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n          in: path\n          name: budget_id\n          required: true\n          schema:\n            type: string\n        - description: The starting server knowledge.  If provided, only entities that have changed since `last_knowledge_of_server` will be included.\n          in: query\n          name: last_knowledge_of_server\n          required: false\n          schema:\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountsResponse\"\n          description: The list of requested accounts\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: No accounts were found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: An error occurred\n      summary: Account list\n      tags:\n        - Accounts\n    post:\n      description: Creates a new account\n      operationId: createAccount\n      parameters:\n        - description: 'The id of the budget (\"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget)'\n          in: path\n          name: budget_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SaveAccountWrapper\"\n        description: The account to create.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountResponse\"\n          description: The account was successfully created\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: The request could not be understood due to malformed syntax or validation error(s).\n      summary: Create a new account\n      tags:\n        - Accounts\n  \"/budgets/{budget_id}/accounts/{account_id}\":\n    get:\n      description: Returns a single account\n      operationId: getAccountById\n      parameters:\n        - description: 'The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n          in: path\n          name: budget_id\n          required: true\n          schema:\n            type: string\n        - description: The id of the account\n          in: path\n          name: account_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountResponse\"\n          description: The requested account\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: The requested account was not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: An error occurred\n      summary: Single account\n      tags:\n        - Accounts\n  \"/budgets/{budget_id}/accounts/{account_id}/transactions\":\n    get:\n      description: Returns all transactions for a specified account\n      operationId: getTransactionsByAccount\n      parameters:\n        - description: 'The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n          in: path\n          name: budget_id\n          required: true\n          schema:\n            type: string\n        - description: The id of the account\n          in: path\n          name: account_id\n          required: true\n          schema:\n            type: string\n        - description: If specified, only transactions on or after this date will be included.  The date should be ISO formatted (e.g. 2016-12-30).\n          in: query\n          name: since_date\n          required: false\n          schema:\n            format: date\n            type: string\n        - description: If specified, only transactions of the specified type will be included. \"uncategorized\" and \"unapproved\" are currently supported.\n          in: query\n          name: type\n          required: false\n          schema:\n            enum:\n              - uncategorized\n              - unapproved\n            type: string\n        - description: The starting server knowledge.  If provided, only entities that have changed since `last_knowledge_of_server` will be included.\n          in: query\n          name: last_knowledge_of_server\n          required: false\n          schema:\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransactionsResponse\"\n          description: The list of requested transactions\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: No transactions were found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: An error occurred\n      summary: List account transactions\n      tags:\n        - Transactions\n  \"/budgets/{budget_id}/categories\":\n    get:\n      description: Returns all categories grouped by category group.  Amounts (budgeted, activity, balance, etc.) are specific to the current budget month (UTC).\n      operationId: getCategories\n      parameters:\n        - description: 'The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n          in: path\n          name: budget_id\n          required: true\n          schema:\n            type: string\n        - description: The starting server knowledge.  If provided, only entities that have changed since `last_knowledge_of_server` will be included.\n          in: query\n          name: last_knowledge_of_server\n          required: false\n          schema:\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CategoriesResponse\"\n          description: The categories grouped by category group\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: No categories were found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: An error occurred\n      summary: List categories\n      tags:\n        - Categories\n  \"/budgets/{budget_id}/categories/{category_id}\":\n    get:\n      description: Returns a single category.  Amounts (budgeted, activity, balance, etc.) are specific to the current budget month (UTC).\n      operationId: getCategoryById\n      parameters:\n        - description: 'The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n          in: path\n          name: budget_id\n          required: true\n          schema:\n            type: string\n        - description: The id of the category\n          in: path\n          name: category_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CategoryResponse\"\n          description: The requested category\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: The category not was found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: An error occurred\n      summary: Single category\n      tags:\n        - Categories\n  \"/budgets/{budget_id}/categories/{category_id}/transactions\":\n    get:\n      description: Returns all transactions for a specified category\n      operationId: getTransactionsByCategory\n      parameters:\n        - description: 'The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n          in: path\n          name: budget_id\n          required: true\n          schema:\n            type: string\n        - description: The id of the category\n          in: path\n          name: category_id\n          required: true\n          schema:\n            type: string\n        - description: If specified, only transactions on or after this date will be included.  The date should be ISO formatted (e.g. 2016-12-30).\n          in: query\n          name: since_date\n          required: false\n          schema:\n            format: date\n            type: string\n        - description: If specified, only transactions of the specified type will be included. \"uncategorized\" and \"unapproved\" are currently supported.\n          in: query\n          name: type\n          required: false\n          schema:\n            enum:\n              - uncategorized\n              - unapproved\n            type: string\n        - description: The starting server knowledge.  If provided, only entities that have changed since `last_knowledge_of_server` will be included.\n          in: query\n          name: last_knowledge_of_server\n          required: false\n          schema:\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HybridTransactionsResponse\"\n          description: The list of requested transactions\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: No transactions were found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: An error occurred\n      summary: List category transactions\n      tags:\n        - Transactions\n  \"/budgets/{budget_id}/months\":\n    get:\n      description: Returns all budget months\n      operationId: getBudgetMonths\n      parameters:\n        - description: 'The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n          in: path\n          name: budget_id\n          required: true\n          schema:\n            type: string\n        - description: The starting server knowledge.  If provided, only entities that have changed since `last_knowledge_of_server` will be included.\n          in: query\n          name: last_knowledge_of_server\n          required: false\n          schema:\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MonthSummariesResponse\"\n          description: The list of budget months\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: No budget months were found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: An error occurred\n      summary: List budget months\n      tags:\n        - Months\n  \"/budgets/{budget_id}/months/{month}\":\n    get:\n      description: Returns a single budget month\n      operationId: getBudgetMonth\n      parameters:\n        - description: 'The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n          in: path\n          name: budget_id\n          required: true\n          schema:\n            type: string\n        - description: The budget month in ISO format (e.g. 2016-12-01) (\"current\" can also be used to specify the current calendar month (UTC))\n          in: path\n          name: month\n          required: true\n          schema:\n            format: date\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MonthDetailResponse\"\n          description: The budget month detail\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: The budget month was not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: An error occurred\n      summary: Single budget month\n      tags:\n        - Months\n  \"/budgets/{budget_id}/months/{month}/categories/{category_id}\":\n    get:\n      description: Returns a single category for a specific budget month.  Amounts (budgeted, activity, balance, etc.) are specific to the current budget month (UTC).\n      operationId: getMonthCategoryById\n      parameters:\n        - description: 'The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n          in: path\n          name: budget_id\n          required: true\n          schema:\n            type: string\n        - description: The budget month in ISO format (e.g. 2016-12-01) (\"current\" can also be used to specify the current calendar month (UTC))\n          in: path\n          name: month\n          required: true\n          schema:\n            format: date\n            type: string\n        - description: The id of the category\n          in: path\n          name: category_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CategoryResponse\"\n          description: The requested month category\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: The month category was not was found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: An error occurred\n      summary: Single category for a specific budget month\n      tags:\n        - Categories\n    patch:\n      description: Update a category for a specific month.  Only `budgeted` amount can be updated.\n      operationId: updateMonthCategory\n      parameters:\n        - description: 'The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n          in: path\n          name: budget_id\n          required: true\n          schema:\n            type: string\n        - description: The budget month in ISO format (e.g. 2016-12-01) (\"current\" can also be used to specify the current calendar month (UTC))\n          in: path\n          name: month\n          required: true\n          schema:\n            format: date\n            type: string\n        - description: The id of the category\n          in: path\n          name: category_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SaveMonthCategoryWrapper\"\n        description: The category to update.  Only `budgeted` amount can be updated and any other fields specified will be ignored.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SaveCategoryResponse\"\n          description: The month category was successfully updated\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: The request could not be understood due to malformed syntax or validation error(s)\n      summary: Update a category for a specific month\n      tags:\n        - Categories\n  \"/budgets/{budget_id}/payee_locations\":\n    get:\n      description: Returns all payee locations\n      operationId: getPayeeLocations\n      parameters:\n        - description: 'The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n          in: path\n          name: budget_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PayeeLocationsResponse\"\n          description: The list of payee locations\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: No payees locations were found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: An error occurred\n      summary: List payee locations\n      tags:\n        - Payee Locations\n  \"/budgets/{budget_id}/payee_locations/{payee_location_id}\":\n    get:\n      description: Returns a single payee location\n      operationId: getPayeeLocationById\n      parameters:\n        - description: 'The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n          in: path\n          name: budget_id\n          required: true\n          schema:\n            type: string\n        - description: id of payee location\n          in: path\n          name: payee_location_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PayeeLocationResponse\"\n          description: The payee location\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: The payee location was not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: An error occurred\n      summary: Single payee location\n      tags:\n        - Payee Locations\n  \"/budgets/{budget_id}/payees\":\n    get:\n      description: Returns all payees\n      operationId: getPayees\n      parameters:\n        - description: 'The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n          in: path\n          name: budget_id\n          required: true\n          schema:\n            type: string\n        - description: The starting server knowledge.  If provided, only entities that have changed since `last_knowledge_of_server` will be included.\n          in: query\n          name: last_knowledge_of_server\n          required: false\n          schema:\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PayeesResponse\"\n          description: The requested list of payees\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: No payees were found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: An error occurred\n      summary: List payees\n      tags:\n        - Payees\n  \"/budgets/{budget_id}/payees/{payee_id}\":\n    get:\n      description: Returns a single payee\n      operationId: getPayeeById\n      parameters:\n        - description: 'The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n          in: path\n          name: budget_id\n          required: true\n          schema:\n            type: string\n        - description: The id of the payee\n          in: path\n          name: payee_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PayeeResponse\"\n          description: The requested payee\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: The payee was not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: An error occurred\n      summary: Single payee\n      tags:\n        - Payees\n  \"/budgets/{budget_id}/payees/{payee_id}/payee_locations\":\n    get:\n      description: Returns all payee locations for a specified payee\n      operationId: getPayeeLocationsByPayee\n      parameters:\n        - description: 'The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n          in: path\n          name: budget_id\n          required: true\n          schema:\n            type: string\n        - description: id of payee\n          in: path\n          name: payee_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PayeeLocationsResponse\"\n          description: The list of requested payee locations\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: No payees locations were found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: An error occurred\n      summary: List locations for a payee\n      tags:\n        - Payee Locations\n  \"/budgets/{budget_id}/payees/{payee_id}/transactions\":\n    get:\n      description: Returns all transactions for a specified payee\n      operationId: getTransactionsByPayee\n      parameters:\n        - description: 'The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n          in: path\n          name: budget_id\n          required: true\n          schema:\n            type: string\n        - description: The id of the payee\n          in: path\n          name: payee_id\n          required: true\n          schema:\n            type: string\n        - description: If specified, only transactions on or after this date will be included.  The date should be ISO formatted (e.g. 2016-12-30).\n          in: query\n          name: since_date\n          required: false\n          schema:\n            format: date\n            type: string\n        - description: If specified, only transactions of the specified type will be included. \"uncategorized\" and \"unapproved\" are currently supported.\n          in: query\n          name: type\n          required: false\n          schema:\n            enum:\n              - uncategorized\n              - unapproved\n            type: string\n        - description: The starting server knowledge.  If provided, only entities that have changed since `last_knowledge_of_server` will be included.\n          in: query\n          name: last_knowledge_of_server\n          required: false\n          schema:\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HybridTransactionsResponse\"\n          description: The list of requested transactions\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: No transactions were found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: An error occurred\n      summary: List payee transactions\n      tags:\n        - Transactions\n  \"/budgets/{budget_id}/scheduled_transactions\":\n    get:\n      description: Returns all scheduled transactions\n      operationId: getScheduledTransactions\n      parameters:\n        - description: 'The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n          in: path\n          name: budget_id\n          required: true\n          schema:\n            type: string\n        - description: The starting server knowledge.  If provided, only entities that have changed since `last_knowledge_of_server` will be included.\n          in: query\n          name: last_knowledge_of_server\n          required: false\n          schema:\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ScheduledTransactionsResponse\"\n          description: The list of requested scheduled transactions\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: No scheduled transactions were found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: An error occurred\n      summary: List scheduled transactions\n      tags:\n        - Scheduled Transactions\n  \"/budgets/{budget_id}/scheduled_transactions/{scheduled_transaction_id}\":\n    get:\n      description: Returns a single scheduled transaction\n      operationId: getScheduledTransactionById\n      parameters:\n        - description: 'The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n          in: path\n          name: budget_id\n          required: true\n          schema:\n            type: string\n        - description: The id of the scheduled transaction\n          in: path\n          name: scheduled_transaction_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ScheduledTransactionResponse\"\n          description: The requested Scheduled Transaction\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: The scheduled transaction was not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: An error occurred\n      summary: Single scheduled transaction\n      tags:\n        - Scheduled Transactions\n  \"/budgets/{budget_id}/settings\":\n    get:\n      description: Returns settings for a budget\n      operationId: getBudgetSettingsById\n      parameters:\n        - description: 'The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n          in: path\n          name: budget_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BudgetSettingsResponse\"\n          description: The requested budget settings\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: The specified Budget was not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: An error occurred\n      summary: Budget Settings\n      tags:\n        - Budgets\n  \"/budgets/{budget_id}/transactions\":\n    get:\n      description: Returns budget transactions\n      operationId: getTransactions\n      parameters:\n        - description: 'The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n          in: path\n          name: budget_id\n          required: true\n          schema:\n            type: string\n        - description: If specified, only transactions on or after this date will be included.  The date should be ISO formatted (e.g. 2016-12-30).\n          in: query\n          name: since_date\n          required: false\n          schema:\n            format: date\n            type: string\n        - description: If specified, only transactions of the specified type will be included. \"uncategorized\" and \"unapproved\" are currently supported.\n          in: query\n          name: type\n          required: false\n          schema:\n            enum:\n              - uncategorized\n              - unapproved\n            type: string\n        - description: The starting server knowledge.  If provided, only entities that have changed since `last_knowledge_of_server` will be included.\n          in: query\n          name: last_knowledge_of_server\n          required: false\n          schema:\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransactionsResponse\"\n          description: The list of requested transactions\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: An error occurred\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: No transactions were found\n      summary: List transactions\n      tags:\n        - Transactions\n    patch:\n      description: Updates multiple transactions, by `id` or `import_id`.\n      operationId: updateTransactions\n      parameters:\n        - description: 'The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n          in: path\n          name: budget_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateTransactionsWrapper\"\n        description: The transactions to update. Each transaction must have either an `id` or `import_id` specified. If `id` is specified as null an `import_id` value can be provided which will allow transaction(s) to be updated by their `import_id`. If an `id` is specified, it will always be used for lookup.\n        required: true\n      responses:\n        \"209\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SaveTransactionsResponse\"\n          description: The transactions were successfully updated\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: The request could not be understood due to malformed syntax or validation error(s).\n      summary: Update multiple transactions\n      tags:\n        - Transactions\n    post:\n      description: Creates a single transaction or multiple transactions.  If you provide a body containing a `transaction` object, a single transaction will be created and if you provide a body containing a `transactions` array, multiple transactions will be created.  Scheduled transactions cannot be created on this endpoint.\n      operationId: createTransaction\n      parameters:\n        - description: 'The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n          in: path\n          name: budget_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SaveTransactionsWrapper\"\n        description: The transaction or transactions to create.  To create a single transaction you can specify a value for the `transaction` object and to create multiple transactions you can specify an array of `transactions`.  It is expected that you will only provide a value for one of these objects.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SaveTransactionsResponse\"\n          description: The transaction or transactions were successfully created\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: The request could not be understood due to malformed syntax or validation error(s).\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: A transaction on the same account with the same `import_id` already exists.\n      summary: Create a single transaction or multiple transactions\n      tags:\n        - Transactions\n  \"/budgets/{budget_id}/transactions/bulk\":\n    post:\n      description: Creates multiple transactions.  Although this endpoint is still supported, it is recommended to use 'POST /budgets/{budget_id}/transactions' to create multiple transactions.\n      operationId: bulkCreateTransactions\n      parameters:\n        - description: 'The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n          in: path\n          name: budget_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BulkTransactions\"\n        description: The list of transactions to create\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BulkResponse\"\n          description: The bulk request was processed successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: The request could not be understood due to malformed syntax or validation error(s)\n      summary: Bulk create transactions\n      tags:\n        - Deprecated\n  \"/budgets/{budget_id}/transactions/import\":\n    post:\n      description: Imports available transactions on all linked accounts for the given budget.  Linked accounts allow transactions to be imported directly from a specified financial institution and this endpoint initiates that import.  Sending a request to this endpoint is the equivalent of clicking \"Import\" on each account in the web application or tapping the \"New Transactions\" banner in the mobile applications.  The response for this endpoint contains the transaction ids that have been imported.\n      operationId: importTransactions\n      parameters:\n        - description: 'The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n          in: path\n          name: budget_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransactionsImportResponse\"\n          description: The request was successful but there were no transactions to import\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransactionsImportResponse\"\n          description: One or more transactions were imported successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: The request could not be understood due to malformed syntax or validation error(s)\n      summary: Import transactions\n      tags:\n        - Transactions\n  \"/budgets/{budget_id}/transactions/{transaction_id}\":\n    get:\n      description: Returns a single transaction\n      operationId: getTransactionById\n      parameters:\n        - description: 'The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n          in: path\n          name: budget_id\n          required: true\n          schema:\n            type: string\n        - description: The id of the transaction\n          in: path\n          name: transaction_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransactionResponse\"\n          description: The requested transaction\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: The transaction was not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: An error occurred\n      summary: Single transaction\n      tags:\n        - Transactions\n    put:\n      description: Updates a single transaction\n      operationId: updateTransaction\n      parameters:\n        - description: 'The id of the budget. \"last-used\" can be used to specify the last used budget and \"default\" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget).'\n          in: path\n          name: budget_id\n          required: true\n          schema:\n            type: string\n        - description: The id of the transaction\n          in: path\n          name: transaction_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SaveTransactionWrapper\"\n        description: The transaction to update\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransactionResponse\"\n          description: The transaction was successfully updated\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: The request could not be understood due to malformed syntax or validation error(s)\n      summary: Updates an existing transaction\n      tags:\n        - Transactions\n  /user:\n    get:\n      description: Returns authenticated user information\n      operationId: getUser\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserResponse\"\n          description: The user info\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: An error occurred\n      summary: User info\n      tags:\n        - User\ncomponents:\n  schemas:\n    Account:\n      properties:\n        balance:\n          description: The current balance of the account in milliunits format\n          format: int64\n          type: integer\n        cleared_balance:\n          description: The current cleared balance of the account in milliunits format\n          format: int64\n          type: integer\n        closed:\n          description: Whether this account is closed or not\n          type: boolean\n        deleted:\n          description: Whether or not the account has been deleted.  Deleted accounts will only be included in delta requests.\n          type: boolean\n        direct_import_in_error:\n          description: If an account linked to a financial institution (direct_import_linked=true) and the linked connection is not in a healthy state, this will be true.\n          type: boolean\n        direct_import_linked:\n          description: Whether or not the account is linked to a financial institution for automatic transaction import.\n          type: boolean\n        id:\n          format: uuid\n          type: string\n        name:\n          type: string\n        note:\n          type: string\n        on_budget:\n          description: Whether this account is on budget or not\n          type: boolean\n        transfer_payee_id:\n          description: The payee id which should be used when transferring to this account\n          format: uuid\n          type: string\n        type:\n          description: \"The type of account. Note: payPal, merchantAccount, investmentAccount, and mortgage types have been deprecated and will be removed in the future.\"\n          enum:\n            - checking\n            - savings\n            - cash\n            - creditCard\n            - lineOfCredit\n            - otherAsset\n            - otherLiability\n            - payPal\n            - merchantAccount\n            - investmentAccount\n            - mortgage\n          type: string\n        uncleared_balance:\n          description: The current uncleared balance of the account in milliunits format\n          format: int64\n          type: integer\n      required:\n        - id\n        - name\n        - type\n        - on_budget\n        - closed\n        - balance\n        - cleared_balance\n        - uncleared_balance\n        - transfer_payee_id\n        - deleted\n      type: object\n    AccountResponse:\n      properties:\n        data:\n          properties:\n            account:\n              $ref: \"#/components/schemas/Account\"\n          required:\n            - account\n          type: object\n      required:\n        - data\n      type: object\n    AccountsResponse:\n      properties:\n        data:\n          properties:\n            accounts:\n              items:\n                $ref: \"#/components/schemas/Account\"\n              type: array\n            server_knowledge:\n              description: The knowledge of the server\n              format: int64\n              type: integer\n          required:\n            - accounts\n            - server_knowledge\n          type: object\n      required:\n        - data\n      type: object\n    BudgetDetail:\n      allOf:\n        - $ref: \"#/components/schemas/BudgetSummary\"\n        - properties:\n            accounts:\n              items:\n                $ref: \"#/components/schemas/Account\"\n              type: array\n            categories:\n              items:\n                $ref: \"#/components/schemas/Category\"\n              type: array\n            category_groups:\n              items:\n                $ref: \"#/components/schemas/CategoryGroup\"\n              type: array\n            months:\n              items:\n                $ref: \"#/components/schemas/MonthDetail\"\n              type: array\n            payee_locations:\n              items:\n                $ref: \"#/components/schemas/PayeeLocation\"\n              type: array\n            payees:\n              items:\n                $ref: \"#/components/schemas/Payee\"\n              type: array\n            scheduled_subtransactions:\n              items:\n                $ref: \"#/components/schemas/ScheduledSubTransaction\"\n              type: array\n            scheduled_transactions:\n              items:\n                $ref: \"#/components/schemas/ScheduledTransactionSummary\"\n              type: array\n            subtransactions:\n              items:\n                $ref: \"#/components/schemas/SubTransaction\"\n              type: array\n            transactions:\n              items:\n                $ref: \"#/components/schemas/TransactionSummary\"\n              type: array\n          type: object\n    BudgetDetailResponse:\n      properties:\n        data:\n          properties:\n            budget:\n              $ref: \"#/components/schemas/BudgetDetail\"\n            server_knowledge:\n              description: The knowledge of the server\n              format: int64\n              type: integer\n          required:\n            - budget\n            - server_knowledge\n          type: object\n      required:\n        - data\n      type: object\n    BudgetSettings:\n      properties:\n        currency_format:\n          $ref: \"#/components/schemas/CurrencyFormat\"\n        date_format:\n          $ref: \"#/components/schemas/DateFormat\"\n      required:\n        - date_format\n        - currency_format\n      type: object\n    BudgetSettingsResponse:\n      properties:\n        data:\n          properties:\n            settings:\n              $ref: \"#/components/schemas/BudgetSettings\"\n          required:\n            - settings\n          type: object\n      required:\n        - data\n      type: object\n    BudgetSummary:\n      properties:\n        accounts:\n          description: The budget accounts (only included if `include_accounts=true` specified as query parameter)\n          items:\n            $ref: \"#/components/schemas/Account\"\n          type: array\n        currency_format:\n          $ref: \"#/components/schemas/CurrencyFormat\"\n        date_format:\n          $ref: \"#/components/schemas/DateFormat\"\n        first_month:\n          description: The earliest budget month\n          format: date\n          type: string\n        id:\n          format: uuid\n          type: string\n        last_modified_on:\n          description: The last time any changes were made to the budget from either a web or mobile client\n          format: date-time\n          type: string\n        last_month:\n          description: The latest budget month\n          format: date\n          type: string\n        name:\n          type: string\n      required:\n        - id\n        - name\n      type: object\n    BudgetSummaryResponse:\n      properties:\n        data:\n          properties:\n            budgets:\n              items:\n                $ref: \"#/components/schemas/BudgetSummary\"\n              type: array\n            default_budget:\n              $ref: \"#/components/schemas/BudgetSummary\"\n          required:\n            - budgets\n          type: object\n      required:\n        - data\n      type: object\n    BulkResponse:\n      properties:\n        data:\n          properties:\n            bulk:\n              properties:\n                duplicate_import_ids:\n                  description: If any Transactions were not created because they had an `import_id` matching a transaction already on the same account, the specified import_id(s) will be included in this list.\n                  items:\n                    type: string\n                  type: array\n                transaction_ids:\n                  description: The list of Transaction ids that were created.\n                  items:\n                    type: string\n                  type: array\n              required:\n                - transaction_ids\n                - duplicate_import_ids\n              type: object\n          required:\n            - bulk\n          type: object\n      required:\n        - data\n      type: object\n    BulkTransactions:\n      properties:\n        transactions:\n          items:\n            $ref: \"#/components/schemas/SaveTransaction\"\n          type: array\n      required:\n        - transactions\n      type: object\n    CategoriesResponse:\n      properties:\n        data:\n          properties:\n            category_groups:\n              items:\n                $ref: \"#/components/schemas/CategoryGroupWithCategories\"\n              type: array\n            server_knowledge:\n              description: The knowledge of the server\n              format: int64\n              type: integer\n          required:\n            - category_groups\n            - server_knowledge\n          type: object\n      required:\n        - data\n      type: object\n    Category:\n      properties:\n        activity:\n          description: Activity amount in milliunits format\n          format: int64\n          type: integer\n        balance:\n          description: Balance in milliunits format\n          format: int64\n          type: integer\n        budgeted:\n          description: Budgeted amount in milliunits format\n          format: int64\n          type: integer\n        category_group_id:\n          format: uuid\n          type: string\n        deleted:\n          description: Whether or not the category has been deleted.  Deleted categories will only be included in delta requests.\n          type: boolean\n        goal_creation_month:\n          description: The month a goal was created\n          format: date\n          type: string\n        goal_months_to_budget:\n          description: The number of months, including the current month, left in the current goal period.\n          format: int32\n          type: integer\n        goal_overall_funded:\n          description: The total amount funded towards the goal within the current goal period.\n          format: int64\n          type: integer\n        goal_overall_left:\n          description: The amount of funding still needed to complete the goal within the current goal period.\n          format: int64\n          type: integer\n        goal_percentage_complete:\n          description: The percentage completion of the goal\n          format: int32\n          type: integer\n        goal_target:\n          description: The goal target amount in milliunits\n          format: int64\n          type: integer\n        goal_target_month:\n          description: The original target month for the goal to be completed.  Only some goal types specify this date.\n          format: date\n          type: string\n        goal_type:\n          description: The type of goal, if the category has a goal (TB='Target Category Balance', TBD='Target Category Balance by Date', MF='Monthly Funding', NEED='Plan Your Spending')\n          enum:\n            - TB\n            - TBD\n            - MF\n            - NEED\n            - null\n          type: string\n        goal_under_funded:\n          description: The amount of funding still needed in the current month to stay on track towards completing the goal within the current goal period.  This amount will generally correspond to the 'Underfunded' amount in the web and mobile clients except when viewing a category with a Needed for Spending Goal in a future month.  The web and mobile clients will ignore any funding from a prior goal period when viewing category with a Needed for Spending Goal in a future month.\n          format: int64\n          type: integer\n        hidden:\n          description: Whether or not the category is hidden\n          type: boolean\n        id:\n          format: uuid\n          type: string\n        name:\n          type: string\n        note:\n          type: string\n        original_category_group_id:\n          description: If category is hidden this is the id of the category group it originally belonged to before it was hidden.\n          format: uuid\n          type: string\n      required:\n        - id\n        - category_group_id\n        - name\n        - hidden\n        - budgeted\n        - activity\n        - balance\n        - deleted\n      type: object\n    CategoryGroup:\n      properties:\n        deleted:\n          description: Whether or not the category group has been deleted.  Deleted category groups will only be included in delta requests.\n          type: boolean\n        hidden:\n          description: Whether or not the category group is hidden\n          type: boolean\n        id:\n          format: uuid\n          type: string\n        name:\n          type: string\n      required:\n        - id\n        - name\n        - hidden\n        - deleted\n      type: object\n    CategoryGroupWithCategories:\n      allOf:\n        - $ref: \"#/components/schemas/CategoryGroup\"\n        - properties:\n            categories:\n              description: Category group categories.  Amounts (budgeted, activity, balance, etc.) are specific to the current budget month (UTC).\n              items:\n                $ref: \"#/components/schemas/Category\"\n              type: array\n          required:\n            - categories\n          type: object\n    CategoryResponse:\n      properties:\n        data:\n          properties:\n            category:\n              $ref: \"#/components/schemas/Category\"\n          required:\n            - category\n          type: object\n      required:\n        - data\n      type: object\n    CurrencyFormat:\n      description: The currency format setting for the budget.  In some cases the format will not be available and will be specified as null.\n      properties:\n        currency_symbol:\n          type: string\n        decimal_digits:\n          format: int32\n          type: integer\n        decimal_separator:\n          type: string\n        display_symbol:\n          type: boolean\n        example_format:\n          type: string\n        group_separator:\n          type: string\n        iso_code:\n          type: string\n        symbol_first:\n          type: boolean\n      required:\n        - iso_code\n        - example_format\n        - decimal_digits\n        - decimal_separator\n        - symbol_first\n        - group_separator\n        - currency_symbol\n        - display_symbol\n      type: object\n    DateFormat:\n      description: The date format setting for the budget.  In some cases the format will not be available and will be specified as null.\n      properties:\n        format:\n          type: string\n      required:\n        - format\n      type: object\n    ErrorDetail:\n      properties:\n        detail:\n          type: string\n        id:\n          type: string\n        name:\n          type: string\n      required:\n        - id\n        - name\n        - detail\n      type: object\n    ErrorResponse:\n      properties:\n        error:\n          $ref: \"#/components/schemas/ErrorDetail\"\n      required:\n        - error\n      type: object\n    HybridTransaction:\n      allOf:\n        - $ref: \"#/components/schemas/TransactionSummary\"\n        - properties:\n            account_name:\n              type: string\n            category_name:\n              type: string\n            parent_transaction_id:\n              description: For subtransaction types, this is the id of the parent transaction.  For transaction types, this id will be always be null.\n              type: string\n            payee_name:\n              type: string\n            type:\n              description: Whether the hybrid transaction represents a regular transaction or a subtransaction\n              enum:\n                - transaction\n                - subtransaction\n              type: string\n          required:\n            - type\n            - account_name\n          type: object\n    HybridTransactionsResponse:\n      properties:\n        data:\n          properties:\n            transactions:\n              items:\n                $ref: \"#/components/schemas/HybridTransaction\"\n              type: array\n          required:\n            - transactions\n          type: object\n      required:\n        - data\n      type: object\n    MonthDetail:\n      allOf:\n        - $ref: \"#/components/schemas/MonthSummary\"\n        - properties:\n            categories:\n              description: The budget month categories.  Amounts (budgeted, activity, balance, etc.) are specific to the {month} parameter specified.\n              items:\n                $ref: \"#/components/schemas/Category\"\n              type: array\n          required:\n            - categories\n          type: object\n    MonthDetailResponse:\n      properties:\n        data:\n          properties:\n            month:\n              $ref: \"#/components/schemas/MonthDetail\"\n          required:\n            - month\n          type: object\n      required:\n        - data\n      type: object\n    MonthSummariesResponse:\n      properties:\n        data:\n          properties:\n            months:\n              items:\n                $ref: \"#/components/schemas/MonthSummary\"\n              type: array\n            server_knowledge:\n              description: The knowledge of the server\n              format: int64\n              type: integer\n          required:\n            - months\n            - server_knowledge\n          type: object\n      required:\n        - data\n      type: object\n    MonthSummary:\n      properties:\n        activity:\n          description: \"The total amount of transactions in the month, excluding those categorized to 'Inflow: Ready to Assign'\"\n          format: int64\n          type: integer\n        age_of_money:\n          description: The Age of Money as of the month\n          format: int32\n          type: integer\n        budgeted:\n          description: The total amount budgeted in the month\n          format: int64\n          type: integer\n        deleted:\n          description: Whether or not the month has been deleted.  Deleted months will only be included in delta requests.\n          type: boolean\n        income:\n          description: \"The total amount of transactions categorized to 'Inflow: Ready to Assign' in the month\"\n          format: int64\n          type: integer\n        month:\n          format: date\n          type: string\n        note:\n          type: string\n        to_be_budgeted:\n          description: The available amount for 'Ready to Assign'\n          format: int64\n          type: integer\n      required:\n        - month\n        - income\n        - budgeted\n        - activity\n        - to_be_budgeted\n        - deleted\n      type: object\n    Payee:\n      properties:\n        deleted:\n          description: Whether or not the payee has been deleted.  Deleted payees will only be included in delta requests.\n          type: boolean\n        id:\n          format: uuid\n          type: string\n        name:\n          type: string\n        transfer_account_id:\n          description: If a transfer payee, the `account_id` to which this payee transfers to\n          type: string\n      required:\n        - id\n        - name\n        - deleted\n      type: object\n    PayeeLocation:\n      properties:\n        deleted:\n          description: Whether or not the payee location has been deleted.  Deleted payee locations will only be included in delta requests.\n          type: boolean\n        id:\n          format: uuid\n          type: string\n        latitude:\n          type: string\n        longitude:\n          type: string\n        payee_id:\n          format: uuid\n          type: string\n      required:\n        - id\n        - payee_id\n        - latitude\n        - longitude\n        - deleted\n      type: object\n    PayeeLocationResponse:\n      properties:\n        data:\n          properties:\n            payee_location:\n              $ref: \"#/components/schemas/PayeeLocation\"\n          required:\n            - payee_location\n          type: object\n      required:\n        - data\n      type: object\n    PayeeLocationsResponse:\n      properties:\n        data:\n          properties:\n            payee_locations:\n              items:\n                $ref: \"#/components/schemas/PayeeLocation\"\n              type: array\n          required:\n            - payee_locations\n          type: object\n      required:\n        - data\n      type: object\n    PayeeResponse:\n      properties:\n        data:\n          properties:\n            payee:\n              $ref: \"#/components/schemas/Payee\"\n          required:\n            - payee\n          type: object\n      required:\n        - data\n      type: object\n    PayeesResponse:\n      properties:\n        data:\n          properties:\n            payees:\n              items:\n                $ref: \"#/components/schemas/Payee\"\n              type: array\n            server_knowledge:\n              description: The knowledge of the server\n              format: int64\n              type: integer\n          required:\n            - payees\n            - server_knowledge\n          type: object\n      required:\n        - data\n      type: object\n    SaveAccount:\n      properties:\n        balance:\n          description: The current balance of the account in milliunits format\n          format: int64\n          type: integer\n        name:\n          description: The name of the account\n          type: string\n        type:\n          description: The account type\n          enum:\n            - checking\n            - savings\n            - creditCard\n            - cash\n            - lineOfCredit\n            - otherAsset\n            - otherLiability\n          type: string\n      required:\n        - name\n        - type\n        - balance\n      type: object\n    SaveAccountWrapper:\n      properties:\n        account:\n          $ref: \"#/components/schemas/SaveAccount\"\n      required:\n        - account\n      type: object\n    SaveCategoryResponse:\n      properties:\n        data:\n          properties:\n            category:\n              $ref: \"#/components/schemas/Category\"\n            server_knowledge:\n              description: The knowledge of the server\n              format: int64\n              type: integer\n          required:\n            - category\n            - server_knowledge\n          type: object\n      required:\n        - data\n      type: object\n    SaveMonthCategory:\n      properties:\n        budgeted:\n          description: Budgeted amount in milliunits format\n          format: int64\n          type: integer\n      required:\n        - budgeted\n      type: object\n    SaveMonthCategoryWrapper:\n      properties:\n        category:\n          $ref: \"#/components/schemas/SaveMonthCategory\"\n      required:\n        - category\n      type: object\n    SaveSubTransaction:\n      properties:\n        amount:\n          description: The subtransaction amount in milliunits format.\n          format: int64\n          type: integer\n        category_id:\n          description: The category for the subtransaction.  Credit Card Payment categories are not permitted and will be ignored if supplied.\n          format: uuid\n          type: string\n        memo:\n          maxLength: 200\n          type: string\n        payee_id:\n          description: The payee for the subtransaction.\n          format: uuid\n          type: string\n        payee_name:\n          description: The payee name.  If a `payee_name` value is provided and `payee_id` has a null value, the `payee_name` value will be used to resolve the payee by either (1) a matching payee rename rule (only if import_id is also specified on parent transaction) or (2) a payee with the same name or (3) creation of a new payee.\n          maxLength: 50\n          type: string\n      required:\n        - amount\n      type: object\n    SaveTransaction:\n      properties:\n        account_id:\n          format: uuid\n          type: string\n        amount:\n          description: The transaction amount in milliunits format.  Split transaction amounts cannot be changed and if a different amount is supplied it will be ignored.\n          format: int64\n          type: integer\n        approved:\n          description: Whether or not the transaction is approved.  If not supplied, transaction will be unapproved by default.\n          type: boolean\n        category_id:\n          description: The category for the transaction.  To configure a split transaction, you can specify null for `category_id` and provide a `subtransactions` array as part of the transaction object.  If an existing transaction is a split, the `category_id` cannot be changed.  Credit Card Payment categories are not permitted and will be ignored if supplied.\n          format: uuid\n          type: string\n        cleared:\n          description: The cleared status of the transaction\n          enum:\n            - cleared\n            - uncleared\n            - reconciled\n          type: string\n        date:\n          description: The transaction date in ISO format (e.g. 2016-12-01).  Future dates (scheduled transactions) are not permitted.  Split transaction dates cannot be changed and if a different date is supplied it will be ignored.\n          format: date\n          type: string\n        flag_color:\n          description: The transaction flag\n          enum:\n            - red\n            - orange\n            - yellow\n            - green\n            - blue\n            - purple\n            - null\n          type: string\n        import_id:\n          description: \"If specified, the new transaction will be assigned this `import_id` and considered \\\"imported\\\".  We will also attempt to match this imported transaction to an existing \\\"user-entered\\\" transation on the same account, with the same amount, and with a date +/-10 days from the imported transaction date.\u003cbr\u003e\u003cbr\u003eTransactions imported through File Based Import or Direct Import (not through the API) are assigned an import_id in the format: 'YNAB:[milliunit_amount]:[iso_date]:[occurrence]'. For example, a transaction dated 2015-12-30 in the amount of -$294.23 USD would have an import_id of 'YNAB:-294230:2015-12-30:1'.  If a second transaction on the same account was imported and had the same date and same amount, its import_id would be 'YNAB:-294230:2015-12-30:2'.  Using a consistent format will prevent duplicates through Direct Import and File Based Import.\u003cbr\u003e\u003cbr\u003eIf import_id is omitted or specified as null, the transaction will be treated as a \\\"user-entered\\\" transaction. As such, it will be eligible to be matched against transactions later being imported (via DI, FBI, or API).\"\n          maxLength: 36\n          type: string\n        memo:\n          maxLength: 200\n          type: string\n        payee_id:\n          description: The payee for the transaction.  To create a transfer between two accounts, use the account transfer payee pointing to the target account.  Account transfer payees are specified as `tranfer_payee_id` on the account resource.\n          format: uuid\n          type: string\n        payee_name:\n          description: The payee name.  If a `payee_name` value is provided and `payee_id` has a null value, the `payee_name` value will be used to resolve the payee by either (1) a matching payee rename rule (only if `import_id` is also specified) or (2) a payee with the same name or (3) creation of a new payee.\n          maxLength: 50\n          type: string\n        subtransactions:\n          description: An array of subtransactions to configure a transaction as a split.  Updating `subtransactions` on an existing split transaction is not supported.\n          items:\n            $ref: \"#/components/schemas/SaveSubTransaction\"\n          type: array\n      required:\n        - account_id\n        - date\n        - amount\n      type: object\n    SaveTransactionWrapper:\n      properties:\n        transaction:\n          $ref: \"#/components/schemas/SaveTransaction\"\n      required:\n        - transaction\n      type: object\n    SaveTransactionsResponse:\n      properties:\n        data:\n          properties:\n            duplicate_import_ids:\n              description: If multiple transactions were specified, a list of import_ids that were not created because of an existing `import_id` found on the same account\n              items:\n                type: string\n              type: array\n            server_knowledge:\n              description: The knowledge of the server\n              format: int64\n              type: integer\n            transaction:\n              $ref: \"#/components/schemas/TransactionDetail\"\n            transaction_ids:\n              description: The transaction ids that were saved\n              items:\n                type: string\n              type: array\n            transactions:\n              description: If multiple transactions were specified, the transactions that were saved\n              items:\n                $ref: \"#/components/schemas/TransactionDetail\"\n              type: array\n          required:\n            - transaction_ids\n            - server_knowledge\n          type: object\n      required:\n        - data\n      type: object\n    SaveTransactionsWrapper:\n      properties:\n        transaction:\n          $ref: \"#/components/schemas/SaveTransaction\"\n        transactions:\n          items:\n            $ref: \"#/components/schemas/SaveTransaction\"\n          type: array\n      type: object\n    ScheduledSubTransaction:\n      properties:\n        amount:\n          description: The scheduled subtransaction amount in milliunits format\n          format: int64\n          type: integer\n        category_id:\n          format: uuid\n          type: string\n        deleted:\n          description: Whether or not the scheduled subtransaction has been deleted.  Deleted scheduled subtransactions will only be included in delta requests.\n          type: boolean\n        id:\n          format: uuid\n          type: string\n        memo:\n          type: string\n        payee_id:\n          format: uuid\n          type: string\n        scheduled_transaction_id:\n          format: uuid\n          type: string\n        transfer_account_id:\n          description: If a transfer, the account_id which the scheduled subtransaction transfers to\n          format: uuid\n          type: string\n      required:\n        - id\n        - scheduled_transaction_id\n        - amount\n        - deleted\n      type: object\n    ScheduledTransactionDetail:\n      allOf:\n        - $ref: \"#/components/schemas/ScheduledTransactionSummary\"\n        - properties:\n            account_name:\n              type: string\n            category_name:\n              type: string\n            payee_name:\n              type: string\n            subtransactions:\n              description: If a split scheduled transaction, the subtransactions.\n              items:\n                $ref: \"#/components/schemas/ScheduledSubTransaction\"\n              type: array\n          required:\n            - account_name\n            - subtransactions\n          type: object\n    ScheduledTransactionResponse:\n      properties:\n        data:\n          properties:\n            scheduled_transaction:\n              $ref: \"#/components/schemas/ScheduledTransactionDetail\"\n          required:\n            - scheduled_transaction\n          type: object\n      required:\n        - data\n      type: object\n    ScheduledTransactionSummary:\n      properties:\n        account_id:\n          format: uuid\n          type: string\n        amount:\n          description: The scheduled transaction amount in milliunits format\n          format: int64\n          type: integer\n        category_id:\n          format: uuid\n          type: string\n        date_first:\n          description: The first date for which the Scheduled Transaction was scheduled.\n          format: date\n          type: string\n        date_next:\n          description: The next date for which the Scheduled Transaction is scheduled.\n          format: date\n          type: string\n        deleted:\n          description: Whether or not the scheduled transaction has been deleted.  Deleted scheduled transactions will only be included in delta requests.\n          type: boolean\n        flag_color:\n          description: The scheduled transaction flag\n          enum:\n            - red\n            - orange\n            - yellow\n            - green\n            - blue\n            - purple\n            - null\n          type: string\n        frequency:\n          enum:\n            - never\n            - daily\n            - weekly\n            - everyOtherWeek\n            - twiceAMonth\n            - every4Weeks\n            - monthly\n            - everyOtherMonth\n            - every3Months\n            - every4Months\n            - twiceAYear\n            - yearly\n            - everyOtherYear\n          type: string\n        id:\n          format: uuid\n          type: string\n        memo:\n          type: string\n        payee_id:\n          format: uuid\n          type: string\n        transfer_account_id:\n          description: If a transfer, the account_id which the scheduled transaction transfers to\n          format: uuid\n          type: string\n      required:\n        - id\n        - date_first\n        - date_next\n        - frequency\n        - amount\n        - account_id\n        - deleted\n      type: object\n    ScheduledTransactionsResponse:\n      properties:\n        data:\n          properties:\n            scheduled_transactions:\n              items:\n                $ref: \"#/components/schemas/ScheduledTransactionDetail\"\n              type: array\n            server_knowledge:\n              description: The knowledge of the server\n              format: int64\n              type: integer\n          required:\n            - scheduled_transactions\n            - server_knowledge\n          type: object\n      required:\n        - data\n      type: object\n    SubTransaction:\n      properties:\n        amount:\n          description: The subtransaction amount in milliunits format\n          format: int64\n          type: integer\n        category_id:\n          format: uuid\n          type: string\n        category_name:\n          type: string\n        deleted:\n          description: Whether or not the subtransaction has been deleted.  Deleted subtransactions will only be included in delta requests.\n          type: boolean\n        id:\n          type: string\n        memo:\n          type: string\n        payee_id:\n          format: uuid\n          type: string\n        payee_name:\n          type: string\n        transaction_id:\n          type: string\n        transfer_account_id:\n          description: If a transfer, the account_id which the subtransaction transfers to\n          format: uuid\n          type: string\n        transfer_transaction_id:\n          description: If a transfer, the id of transaction on the other side of the transfer\n          type: string\n      required:\n        - id\n        - transaction_id\n        - amount\n        - deleted\n      type: object\n    TransactionDetail:\n      allOf:\n        - $ref: \"#/components/schemas/TransactionSummary\"\n        - properties:\n            account_name:\n              type: string\n            category_name:\n              type: string\n            payee_name:\n              type: string\n            subtransactions:\n              description: If a split transaction, the subtransactions.\n              items:\n                $ref: \"#/components/schemas/SubTransaction\"\n              type: array\n          required:\n            - account_name\n            - subtransactions\n          type: object\n    TransactionResponse:\n      properties:\n        data:\n          properties:\n            transaction:\n              $ref: \"#/components/schemas/TransactionDetail\"\n          required:\n            - transaction\n          type: object\n      required:\n        - data\n      type: object\n    TransactionSummary:\n      properties:\n        account_id:\n          format: uuid\n          type: string\n        amount:\n          description: The transaction amount in milliunits format\n          format: int64\n          type: integer\n        approved:\n          description: Whether or not the transaction is approved\n          type: boolean\n        category_id:\n          format: uuid\n          type: string\n        cleared:\n          description: The cleared status of the transaction\n          enum:\n            - cleared\n            - uncleared\n            - reconciled\n          type: string\n        date:\n          description: The transaction date in ISO format (e.g. 2016-12-01)\n          format: date\n          type: string\n        deleted:\n          description: Whether or not the transaction has been deleted.  Deleted transactions will only be included in delta requests.\n          type: boolean\n        flag_color:\n          description: The transaction flag\n          enum:\n            - red\n            - orange\n            - yellow\n            - green\n            - blue\n            - purple\n            - null\n          type: string\n        id:\n          type: string\n        import_id:\n          description: \"If the Transaction was imported, this field is a unique (by account) import identifier.  If this transaction was imported through File Based Import or Direct Import and not through the API, the import_id will have the format: 'YNAB:[milliunit_amount]:[iso_date]:[occurrence]'.  For example, a transaction dated 2015-12-30 in the amount of -$294.23 USD would have an import_id of 'YNAB:-294230:2015-12-30:1'.  If a second transaction on the same account was imported and had the same date and same amount, its import_id would be 'YNAB:-294230:2015-12-30:2'.\"\n          type: string\n        matched_transaction_id:\n          description: If transaction is matched, the id of the matched transaction\n          type: string\n        memo:\n          type: string\n        payee_id:\n          format: uuid\n          type: string\n        transfer_account_id:\n          description: If a transfer transaction, the account to which it transfers\n          format: uuid\n          type: string\n        transfer_transaction_id:\n          description: If a transfer transaction, the id of transaction on the other side of the transfer\n          type: string\n      required:\n        - id\n        - date\n        - amount\n        - cleared\n        - approved\n        - account_id\n        - deleted\n      type: object\n    TransactionsImportResponse:\n      properties:\n        data:\n          properties:\n            transaction_ids:\n              description: The list of transaction ids that were imported.\n              items:\n                type: string\n              type: array\n          required:\n            - transaction_ids\n          type: object\n      required:\n        - data\n      type: object\n    TransactionsResponse:\n      properties:\n        data:\n          properties:\n            server_knowledge:\n              description: The knowledge of the server\n              format: int64\n              type: integer\n            transactions:\n              items:\n                $ref: \"#/components/schemas/TransactionDetail\"\n              type: array\n          required:\n            - transactions\n            - server_knowledge\n          type: object\n      required:\n        - data\n      type: object\n    UpdateTransaction:\n      allOf:\n        - properties:\n            id:\n              type: string\n          required:\n            - id\n          type: object\n        - $ref: \"#/components/schemas/SaveTransaction\"\n    UpdateTransactionsWrapper:\n      properties:\n        transactions:\n          items:\n            $ref: \"#/components/schemas/UpdateTransaction\"\n          type: array\n      required:\n        - transactions\n      type: object\n    User:\n      properties:\n        id:\n          format: uuid\n          type: string\n      required:\n        - id\n      type: object\n    UserResponse:\n      properties:\n        data:\n          properties:\n            user:\n              $ref: \"#/components/schemas/User\"\n          required:\n            - user\n          type: object\n      required:\n        - data\n      type: object\n  securitySchemes:\n    bearer:\n      in: header\n      name: Authorization\n      type: apiKey\n"
		}
	},
	"Error": "parse: paths: /budgets/{budget_id}/transactions: patch: updateTransactions: responses: 209: unknown status code: 209"
}