{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/radiantearth/stac-api-spec"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "fragments/filter/openapi.yaml",
			"content": "openapi: 3.0.3\ninfo:\n  title: The SpatioTemporal Asset Catalog API - Filter\n  description: Adds parameters to compare properties and only return the items that match\n  version: 1.0.0-beta.5\n\ntags:\n  - name: STAC API - Core\n    description: Part of STAC API - Core definition\n  - name: STAC API - Features\n    description: Part of STAC API - Features definition\n  - name: STAC API - Filter Extension\n    description: Part of STAC API - Filter extension definition\n\npaths:\n  '/':\n    get:\n      description: Landing Page\n      tags:\n        - STAC API - Core\n      responses:\n        '200':\n          description: Landing Page\n          links:\n            queryables:\n              operationId: getQueryables\n              description: |-\n                A link with rel=queryables for the entire catalog.\n\n  /queryables:\n    get:\n      summary: Get the JSON Schema defining the list of variable terms that can be used in CQL2 expressions.\n      operationId: getQueryables\n      description: |-\n        This endpoint returns a list of variable terms that can be used in CQL2 expressions. The\n        precise definition of this can be found in the OGC API - Features - Part 3: Filtering and the \n        Common Query Language (CQL) specification.\n      tags:\n        - STAC API - Filter Extension\n      # parameters:\n      # todo: may have collections parameter in the future\n      responses:\n        '200':\n          $ref: '#/components/responses/Queryables'\n        default:\n          $ref: '../../core/commons.yaml#/components/responses/Error'\n  /collections/{collectionId}:\n    get:\n      description: |-\n        This endpoint returns a list of Collections.\n      tags:\n        - STAC API - Features\n        - STAC API - Collections\n      parameters:\n        - in: path\n          name: collectionId\n          schema:\n            type: string\n          required: true\n          description: ID of Collection\n      responses:\n        '200':\n          description: Collection description\n          links:\n            queryables:\n              operationId: getQueryables\n              description: |-\n                A link with rel=queryables for queryables to only apply to this collection.\n  /collections/{collectionId}/queryables:\n    get:\n      summary: Get the JSON Schema defining the list of variable terms that can be used in CQL2 expressions.\n      operationId: getQueryablesForCollection\n      description: |-\n        This endpoint returns a list of variable terms that can be used in CQL2 expressions. The\n        precise definition of this can be found in the OGC API - Features - Part 3: Filtering and the \n        Common Query Language (CQL) specification.\n      parameters:\n        - in: path\n          name: collectionId\n          schema:\n            type: string\n          required: true\n          description: ID of Collection\n      tags:\n        - STAC API - Filter Extension\n      responses:\n        '200':\n          $ref: '#/components/responses/Queryables'\n        default:\n          $ref: '../../core/commons.yaml#/components/responses/Error'\ncomponents:\n  parameters:\n    filter:\n      name: filter\n      x-stac-api-fragment: filter\n      in: query\n      description: |-\n        **Extension:** Filter\n\n        A CQL2 filter expression for filtering items.\n      required: true\n      schema:\n        oneOf:\n          - $ref: '#/components/schemas/filter-cql-json'\n          - $ref: '#/components/schemas/filter-cql-text'\n    filter-lang:\n      name: filter-lang\n      x-stac-api-fragment: filter\n      in: query\n      description: |-\n        **Extension:** Filter\n\n        The CQL2 filter encoding that the 'filter' value uses. Must be one of 'cql-text' or 'cql-json'.\n      required: false\n      schema:\n        $ref: '#/components/schemas/filter-lang'\n    filter-crs:\n      name: filter-crs\n      x-stac-api-fragment: filter\n      in: query\n      description: |-\n        **Extension:** Filter\n\n        The CRS used by spatial predicates in the filter parameter. In STAC API, only value that must be accepted\n        is 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'.\n      required: false\n      schema:\n        $ref: '#/components/schemas/filter-crs'\n  schemas:\n    searchBody:\n      type: object\n      x-stac-api-fragment: filter\n      description: |-\n        **Extension:** Filter\n\n        A filter for properties in Items.\n      properties:\n        filter:\n          $ref: '#/components/schemas/filter-cql-json'\n        filter-lang:\n          $ref: '#/components/schemas/filter-lang'\n        filter-crs:\n          $ref: '#/components/schemas/filter-crs'\n    filter-cql-text:\n      description: |\n        A CQL2 filter expression in the 'cql-text' encoding.\n      type: string\n    filter-cql-json:\n      $ref: './cql.yml#/components/schemas/booleanValueExpression'\n    filter-lang:\n      description: |\n        The CQL2 filter encoding that the 'filter' value uses.\n      type: string\n      enum:\n        - 'cql-text'\n        - 'cql-json'\n    filter-crs:\n      description: |\n        The coordinate reference system (CRS) used by spatial literals in the 'filter' value.  The only value that STAC APIs must\n        accept is 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'.\n      type: string\n      format: uri\n  responses:\n    Queryables:\n      description: A JSON Schema defining the Queryables allowed in CQL2 expressions\n      content:\n        application/schema+json:\n          schema:\n            type: object\n"
		}
	},
	"Error": "parse: paths: /collections/{collectionId}/queryables: get: getQueryablesForCollection: responses: default: resolve \"../../core/commons.yaml#/components/responses/Error\" reference: invalid response reference: \"../../core/commons.yaml#/components/responses/Error\""
}