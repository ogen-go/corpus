{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Veridax/privapi"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "APIs/tomtom.com/search/1.0.0/openapi.yaml",
			"content": "openapi: 3.0.0\nservers:\n  - url: 'https://api.tomtom.com'\ninfo:\n  contact:\n    name: Contact Us\n    url: 'https://developer.tomtom.com/contact-us'\n    x-twitter: TomTom\n  description: 'Search API is a RESTful API that allows developers to run a single line fuzzy search for addresses and POIs. Search API returns the latitude/longitude of a specific address, cross street, geographic feature, or point of interest (POI).'\n  title: Search\n  version: 1.0.0\n  x-apisguru-categories:\n    - location\n  x-logo:\n    url: 'https://twitter.com/TomTom/profile_image?size=original'\n  x-origin:\n    - converter:\n        url: 'https://github.com/lucybot/api-spec-converter'\n        version: 2.7.18\n      format: openapi\n      url: 'https://developer.tomtom.com/system/files/swagger_models/search_api.yaml'\n      version: '3.0'\n  x-providerName: tomtom.com\n  x-serviceName: search\nsecurity:\n  - api_key: []\npaths:\n  '/search/{versionNumber}/additionalData.{ext}':\n    get:\n      parameters:\n        - $ref: '#/components/parameters/versionNumber'\n        - description: Expected response format.\n          in: path\n          name: ext\n          required: true\n          schema:\n            enum:\n              - json\n            type: string\n        - description: 'Comma separated list of geometry UUIDs, previously retrieved from an Search API request.'\n          example: '00004631-3400-3c00-0000-0000673c4d2e,00004631-3400-3c00-0000-0000673c42fe'\n          in: query\n          name: geometries\n          required: true\n          schema:\n            type: string\n        - description: Defines the precision of the geometries.\n          in: query\n          name: geometriesZoom\n          schema:\n            enum:\n              - 0\n              - 1\n              - 2\n              - 3\n              - 4\n              - 5\n              - 6\n              - 7\n              - 8\n              - 9\n              - 10\n              - 11\n              - 12\n              - 13\n              - 14\n              - 15\n              - 16\n              - 17\n              - 18\n              - 19\n              - 20\n              - 21\n              - 22\n            type: integer\n      responses:\n        '200':\n          description: 'OK: additional data were retrieved and the body of the response contains requested data.'\n        '400':\n          description: 'Bad request: one or more parameters(i.e. geometries, ext) were incorrectly specified.'\n        '403':\n          description: |-\n            Permission, capacity, or authentication issues:\n              - Forbidden\n              - Not authorized\n              - Account inactive\n              - Account over queries per second limit\n              - Account over rate limit\n              - Rate limit exceeded\n        '404':\n          description: 'Not Found: the requested resource could not be found, but it may be available again in the future.'\n        '405':\n          description: 'Method Not Allowed: the client used a HTTP method other than GET.'\n        '408':\n          description: Request timeout.\n        '414':\n          description: Requested uri is too long.\n        '500':\n          description: An error occurred while processing the request. Please try again later.\n        '502':\n          description: Internal network connectivity issue.\n        '503':\n          description: Service currently unavailable.\n        '504':\n          description: Internal network connectivity issue or a request that has taken too long to complete.\n        '596':\n          description: Service not found.\n      summary: Additional Data\n      tags:\n        - Additional Data\n  '/search/{versionNumber}/cS/{category}.{ext}':\n    get:\n      deprecated: true\n      parameters:\n        - $ref: '#/components/parameters/versionNumber'\n        - description: Query string. Must be properly URL encoded.\n          example: pizza\n          in: path\n          name: category\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/ext'\n        - $ref: '#/components/parameters/typeahead'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/ofs'\n        - $ref: '#/components/parameters/countrySet'\n        - $ref: '#/components/parameters/lat'\n        - $ref: '#/components/parameters/lon'\n        - $ref: '#/components/parameters/radius'\n        - $ref: '#/components/parameters/topLeft'\n        - $ref: '#/components/parameters/btmRight'\n        - $ref: '#/components/parameters/language'\n        - $ref: '#/components/parameters/idxSet'\n        - $ref: '#/components/parameters/view'\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '405':\n          $ref: '#/components/responses/405'\n        404/596:\n          $ref: '#/components/responses/404596'\n        5XX:\n          $ref: '#/components/responses/5xx'\n      summary: Low Bandwith Category Search\n      tags:\n        - Search\n  '/search/{versionNumber}/categorySearch/{query}.{ext}':\n    get:\n      parameters:\n        - $ref: '#/components/parameters/versionNumber'\n        - description: Query string. Must be properly URL encoded.\n          example: pizza\n          in: path\n          name: query\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/ext'\n        - $ref: '#/components/parameters/typeahead'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/ofs'\n        - $ref: '#/components/parameters/countrySet'\n        - $ref: '#/components/parameters/lat'\n        - $ref: '#/components/parameters/lon'\n        - $ref: '#/components/parameters/radius'\n        - $ref: '#/components/parameters/topLeft'\n        - $ref: '#/components/parameters/btmRight'\n        - $ref: '#/components/parameters/language'\n        - $ref: '#/components/parameters/extendedPostalCodesFor'\n        - $ref: '#/components/parameters/view'\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '405':\n          $ref: '#/components/responses/405'\n        404/596:\n          $ref: '#/components/responses/404596'\n        5XX:\n          $ref: '#/components/responses/5xx'\n      summary: Category Search\n      tags:\n        - Search\n  '/search/{versionNumber}/geocode/{query}.{ext}':\n    get:\n      parameters:\n        - $ref: '#/components/parameters/versionNumber'\n        - description: Query string. Must be properly URL encoded.\n          example: 4 north 2nd street san jose\n          in: path\n          name: query\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/ext'\n        - $ref: '#/components/parameters/storeResult'\n        - $ref: '#/components/parameters/typeahead'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/ofs'\n        - $ref: '#/components/parameters/countrySet'\n        - $ref: '#/components/parameters/lat'\n        - $ref: '#/components/parameters/lon'\n        - $ref: '#/components/parameters/radius'\n        - $ref: '#/components/parameters/topLeft'\n        - $ref: '#/components/parameters/btmRight'\n        - $ref: '#/components/parameters/language'\n        - $ref: '#/components/parameters/extendedPostalCodesFor'\n        - $ref: '#/components/parameters/view'\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '405':\n          $ref: '#/components/responses/405'\n        404/596:\n          $ref: '#/components/responses/404596'\n        5XX:\n          $ref: '#/components/responses/5xx'\n      summary: Geocode\n      tags:\n        - Geocoding\n  '/search/{versionNumber}/geometryFilter.{ext}':\n    get:\n      parameters:\n        - $ref: '#/components/parameters/versionNumber'\n        - $ref: '#/components/parameters/ext'\n        - description: List of geometries to filter by. Available types are CIRCLE (with the radius expressed in meters) and POLYGON.\n          example: '[{\"type\":\"CIRCLE\", \"position\":\"40.80558, -73.96548\", \"radius\":100}, {\"type\":\"POLYGON\", \"vertices\":[\"37.7524152343544, -122.43576049804686\", \"37.70660472542312, -122.43301391601562\", \"37.712059855877314, -122.36434936523438\", \"37.75350561243041, -122.37396240234374\"]}]'\n          in: query\n          name: geometryList\n          required: true\n          schema:\n            type: string\n        - description: 'List of POIs to filter. The only required attribute of a POI is position, everything else is optional and will be echoed back when passed in.'\n          example: '[{\"poi\":{\"name\":\"S Restaurant Toms\"},\"address\":{\"freeformAddress\":\"2880 Broadway, New York, NY 10025\"},\"position\":{\"lat\":40.80558,\"lon\":-73.96548}},{\"poi\":{\"name\":\"Yasha Raman Corporation\"},\"address\":{\"freeformAddress\":\"940 Amsterdam Ave, New York, NY 10025\"},\"position\":{\"lat\":40.80076,\"lon\":-73.96556}}]'\n          in: query\n          name: poiList\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '405':\n          $ref: '#/components/responses/405'\n        404/596:\n          $ref: '#/components/responses/404596'\n        5XX:\n          $ref: '#/components/responses/5xx'\n      summary: Geometry Filter\n      tags:\n        - Filters\n    post:\n      parameters:\n        - $ref: '#/components/parameters/versionNumber'\n        - $ref: '#/components/parameters/ext'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              example:\n                geometryList:\n                  - position: '40.80558,-73.96548'\n                    radius: 100\n                    type: CIRCLE\n                  - type: POLYGON\n                    vertices:\n                      - '37.7524152343544,-122.43576049804686'\n                      - '37.70660472542312,-122.43301391601562'\n                      - '37.712059855877314,-122.36434936523438'\n                      - '37.75350561243041,-122.37396240234374'\n                poiList:\n                  - address:\n                      freeformAddress: '2880 Broadway, New York, NY 10025'\n                    poi:\n                      name: S Restaurant Tom's\n                    position:\n                      lat: 40.80558\n                      lon: -73.96548\n              properties:\n                geometryList:\n                  items:\n                    properties:\n                      position:\n                        type: string\n                      radius:\n                        type: integer\n                      type:\n                        type: string\n                      vertices:\n                        items:\n                          type: string\n                        type: array\n                    type: object\n                  type: array\n                poiList:\n                  items:\n                    properties:\n                      address:\n                        properties:\n                          freeformAddress:\n                            type: string\n                        type: object\n                      poi:\n                        properties:\n                          name:\n                            type: string\n                        type: object\n                      position:\n                        properties:\n                          lat:\n                            format: float\n                            type: number\n                          lon:\n                            format: float\n                            type: number\n                        type: object\n                    type: object\n                  type: array\n              type: object\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '405':\n          $ref: '#/components/responses/405'\n        404/596:\n          $ref: '#/components/responses/404596'\n        5XX:\n          $ref: '#/components/responses/5xx'\n      summary: Geometry Filter\n      tags:\n        - Filters\n  '/search/{versionNumber}/geometrySearch/{query}.{ext}':\n    get:\n      parameters:\n        - $ref: '#/components/parameters/versionNumber'\n        - description: Query string. Must be properly URL encoded.\n          example: pizza\n          in: path\n          name: query\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/ext'\n        - description: List of geometries to filter by. Available types are CIRCLE (with the radius expressed in meters) and POLYGON.\n          example: '[{\"type\":\"POLYGON\", \"vertices\":[\"37.7524152343544, -122.43576049804686\", \"37.70660472542312, -122.43301391601562\", \"37.712059855877314, -122.36434936523438\", \"37.75350561243041, -122.37396240234374\"]}, {\"type\":\"CIRCLE\", \"position\":\"37.71205, -121.36434\", \"radius\":6000}, {\"type\":\"CIRCLE\", \"position\":\"37.31205, -121.36434\", \"radius\":1000}]'\n          in: query\n          name: geometryList\n          schema:\n            type: string\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/language'\n        - $ref: '#/components/parameters/extendedPostalCodesFor'\n        - $ref: '#/components/parameters/idxSet'\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '405':\n          $ref: '#/components/responses/405'\n        404/596:\n          $ref: '#/components/responses/404596'\n        5XX:\n          $ref: '#/components/responses/5xx'\n      summary: Geometry Search\n      tags:\n        - Search\n    post:\n      parameters:\n        - $ref: '#/components/parameters/versionNumber'\n        - description: Query string. Must be properly URL encoded.\n          example: pizza\n          in: path\n          name: query\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/ext'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/language'\n        - $ref: '#/components/parameters/extendedPostalCodesFor'\n        - $ref: '#/components/parameters/idxSet'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              example:\n                geometryList:\n                  - type: POLYGON\n                    vertices:\n                      - '37.7524152343544,-122.43576049804686'\n                      - '37.70660472542312,-122.43301391601562'\n                      - '37.712059855877314,-122.36434936523438'\n                      - '37.75350561243041,-122.37396240234374'\n                  - position: '37.71205,-121.36434'\n                    radius: 6000\n                    type: CIRCLE\n                  - position: '37.31205,-121.36434'\n                    radius: 1000\n                    type: CIRCLE\n              properties:\n                geometryList:\n                  items:\n                    properties:\n                      position:\n                        type: string\n                      radius:\n                        type: integer\n                      type:\n                        type: string\n                      vertices:\n                        items:\n                          type: string\n                        type: array\n                    type: object\n                  type: array\n              type: object\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '405':\n          $ref: '#/components/responses/405'\n        404/596:\n          $ref: '#/components/responses/404596'\n        5XX:\n          $ref: '#/components/responses/5xx'\n      summary: Geometry Search\n      tags:\n        - Search\n  '/search/{versionNumber}/nearbySearch/.{ext}':\n    get:\n      parameters:\n        - $ref: '#/components/parameters/versionNumber'\n        - $ref: '#/components/parameters/ext'\n        - description: |-\n            Latitude where results should be biased.  \n            NOTE: supplying a lat/lon without a radius will return search results biased to that point.\n          example: 37.337\n          in: query\n          name: lat\n          required: true\n          schema:\n            format: float\n            type: number\n        - description: |-\n            Longitude where results should be biased\n            NOTE: supplying a lat/lon without a radius will return search results biased to that point.\n          example: -121.89\n          in: query\n          name: lon\n          required: true\n          schema:\n            format: float\n            type: number\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/ofs'\n        - $ref: '#/components/parameters/countrySet'\n        - description: 'If radius and position are set, the results will be constrained to the defined area. The radius parameter is specified in meters.'\n          in: query\n          name: radius\n          schema:\n            default: 10000\n            maximum: 50000\n            type: integer\n        - deprecated: true\n          description: 'Top left position of the bounding box. This is specified as a comma separated string composed of lat., lon.'\n          example: '37.553,-122.453'\n          in: query\n          name: topLeft\n          schema:\n            type: string\n        - deprecated: true\n          description: 'Bottom right position of the bounding box. This is specified as a comma separated string composed of lat., lon.'\n          example: '37.4,-122.55'\n          in: query\n          name: btmRight\n          schema:\n            type: string\n        - $ref: '#/components/parameters/language'\n        - $ref: '#/components/parameters/extendedPostalCodesFor'\n        - $ref: '#/components/parameters/minFuzzyLevel'\n        - $ref: '#/components/parameters/maxFuzzyLevel'\n        - $ref: '#/components/parameters/idxSet'\n        - $ref: '#/components/parameters/view'\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '405':\n          $ref: '#/components/responses/405'\n        404/596:\n          $ref: '#/components/responses/404596'\n        5XX:\n          $ref: '#/components/responses/5xx'\n      summary: Nearby Search\n      tags:\n        - Search\n  '/search/{versionNumber}/poiSearch/{query}.{ext}':\n    get:\n      parameters:\n        - $ref: '#/components/parameters/versionNumber'\n        - description: Query string. Must be properly URL encoded.\n          example: pizza\n          in: path\n          name: query\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/ext'\n        - $ref: '#/components/parameters/typeahead'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/ofs'\n        - $ref: '#/components/parameters/countrySet'\n        - $ref: '#/components/parameters/lat'\n        - $ref: '#/components/parameters/lon'\n        - $ref: '#/components/parameters/radius'\n        - $ref: '#/components/parameters/topLeft'\n        - $ref: '#/components/parameters/btmRight'\n        - $ref: '#/components/parameters/language'\n        - $ref: '#/components/parameters/extendedPostalCodesFor'\n        - $ref: '#/components/parameters/view'\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '405':\n          $ref: '#/components/responses/405'\n        404/596:\n          $ref: '#/components/responses/404596'\n        5XX:\n          $ref: '#/components/responses/5xx'\n      summary: Points of Interest Search\n      tags:\n        - Search\n  '/search/{versionNumber}/reverseGeocode/crossStreet/{position}.{ext}':\n    get:\n      parameters:\n        - $ref: '#/components/parameters/versionNumber'\n        - $ref: '#/components/parameters/position'\n        - $ref: '#/components/parameters/ext'\n        - description: Maximum number of cross-streets to return.\n          in: query\n          name: limit\n          schema:\n            default: 1\n            maximum: 100\n            minimum: 0\n            type: integer\n        - deprecated: true\n          description: 'If the \"spatialKeys\" flag is set, the response will also contain a proprietary geospatial keys for a specified location.'\n          in: query\n          name: spatialKeys\n          schema:\n            default: false\n            type: boolean\n        - description: 'The directional heading in degrees, usually similar to the course along a road segment. Entered in degrees, measured clockwise from north (so north is 0, east is 90, etc.)'\n          in: query\n          name: heading\n          schema:\n            format: float\n            type: number\n        - description: The maximum distance in meters from the specified position for the reverse geocoder to consider.\n          in: query\n          name: radius\n          schema:\n            default: 10000\n            type: integer\n        - $ref: '#/components/parameters/language'\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '405':\n          $ref: '#/components/responses/405'\n        404/596:\n          $ref: '#/components/responses/404596'\n        5XX:\n          $ref: '#/components/responses/5xx'\n      summary: Cross Street lookup\n      tags:\n        - Reverse Geocoding\n  '/search/{versionNumber}/reverseGeocode/{position}.{ext}':\n    get:\n      parameters:\n        - $ref: '#/components/parameters/versionNumber'\n        - $ref: '#/components/parameters/position'\n        - $ref: '#/components/parameters/ext'\n        - deprecated: true\n          description: 'If the \"spatialKeys\" flag is set, the response will also contain a proprietary geospatial keys for a specified location.'\n          in: query\n          name: spatialKeys\n          schema:\n            default: false\n            type: boolean\n        - description: To enable return of the posted speed limit (where available).\n          in: query\n          name: returnSpeedLimit\n          schema:\n            default: false\n            type: boolean\n        - description: 'The directional heading in degrees, usually similar to the course along a road segment. Entered in degrees, measured clockwise from north (so north is 0, east is 90, etc.)'\n          in: query\n          name: heading\n          schema:\n            format: float\n            type: number\n        - description: The maximum distance in meters from the specified position for the reverse geocoder to consider.\n          in: query\n          name: radius\n          schema:\n            default: 10000\n            type: integer\n        - description: 'If a number is sent in along with the request, the response may include the side of the street (Left/Right) and an offset position for that number.'\n          in: query\n          name: number\n          schema:\n            type: string\n        - description: Enables return of the road use array for reverse geocodes at street level.\n          in: query\n          name: returnRoadUse\n          schema:\n            default: false\n            type: boolean\n        - description: 'Restricts reverse geocodes to a certain type of road use. The road use array for reverse geocodes can be one or more of: [\"LimitedAccess\", \"Arterial\", \"Terminal\", \"Ramp\", \"Rotary\", \"LocalStreet\"].'\n          in: query\n          name: roadUse\n          schema:\n            type: string\n        - description: Specifies the jsonp callback method.\n          in: query\n          name: callback\n          schema:\n            default: cb\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '405':\n          $ref: '#/components/responses/405'\n        404/596:\n          $ref: '#/components/responses/404596'\n        5XX:\n          $ref: '#/components/responses/5xx'\n      summary: Reverse Geocode\n      tags:\n        - Reverse Geocoding\n  '/search/{versionNumber}/routedFilter/{position}/{heading}.{ext}':\n    get:\n      deprecated: true\n      parameters:\n        - $ref: '#/components/parameters/versionNumber'\n        - $ref: '#/components/parameters/position'\n        - description: 'The directional heading in degrees, usually similar to the course along a road segment. Entered in degrees, measured clockwise from north (so north is 0, east is 90, etc.)'\n          example: -15.6\n          in: path\n          name: heading\n          required: true\n          schema:\n            format: float\n            type: number\n        - $ref: '#/components/parameters/ext'\n        - description: 'List of POIs to filter. The only required attribute of a POI is position, everything else is optional and will be echoed back when passed in.'\n          example: '[{\"poi\":{\"name\":\"Cleaire Advanced Emission Controls\"},\"address\":{\"freeformAddress\":\"7220 Trade St, San Diego, CA 92121\"},\"position\":{\"lat\":\"37.83274\",\"lon\":\"-122.27631\"}}]'\n          in: query\n          name: poiList\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/routingTimeout'\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '405':\n          $ref: '#/components/responses/405'\n        404/596:\n          $ref: '#/components/responses/404596'\n        5XX:\n          $ref: '#/components/responses/5xx'\n      summary: Routed Filter\n      tags:\n        - Filters\n    post:\n      deprecated: true\n      parameters:\n        - $ref: '#/components/parameters/versionNumber'\n        - $ref: '#/components/parameters/position'\n        - description: 'The directional heading in degrees, usually similar to the course along a road segment. Entered in degrees, measured clockwise from north (so north is 0, east is 90, etc.)'\n          example: 90\n          in: path\n          name: heading\n          required: true\n          schema:\n            format: float\n            type: number\n        - $ref: '#/components/parameters/ext'\n        - $ref: '#/components/parameters/routingTimeout'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              example:\n                poiList:\n                  - address:\n                      freeformAddress: '9500 Gilman Dr, San Diego, CA 92037'\n                    poi:\n                      name: University of California San Diego\n                    position:\n                      lat: 32.87349\n                      lon: -117.2378\n                  - address:\n                      freeformAddress: '7220 Trade St, San Diego, CA 92121'\n                    poi:\n                      name: Cleaire Advanced Emission Controls\n                    position:\n                      lat: 37.83274\n                      lon: -122.27631\n              properties:\n                poiList:\n                  items:\n                    properties:\n                      address:\n                        properties:\n                          freeformAddress:\n                            type: string\n                        type: object\n                      poi:\n                        properties:\n                          name:\n                            type: string\n                        type: object\n                      position:\n                        properties:\n                          lat:\n                            format: float\n                            type: number\n                          lon:\n                            format: float\n                            type: number\n                        type: object\n                    type: object\n                  type: array\n              type: object\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '405':\n          $ref: '#/components/responses/405'\n        404/596:\n          $ref: '#/components/responses/404596'\n        5XX:\n          $ref: '#/components/responses/5xx'\n      summary: Routed Filter\n      tags:\n        - Filters\n  '/search/{versionNumber}/routedSearch/{query}/{position}/{heading}.{ext}':\n    get:\n      deprecated: true\n      parameters:\n        - $ref: '#/components/parameters/versionNumber'\n        - description: Query string. Must be properly URL encoded.\n          example: gas\n          in: path\n          name: query\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/position'\n        - description: 'The directional heading in degrees, usually similar to the course along a road segment. Entered in degrees, measured clockwise from north (so north is 0, east is 90, etc.)'\n          example: 90\n          in: path\n          name: heading\n          required: true\n          schema:\n            format: float\n            type: number\n        - $ref: '#/components/parameters/ext'\n        - $ref: '#/components/parameters/typeahead'\n        - $ref: '#/components/parameters/limit'\n        - description: 'Multiplies the limit by N to gather more candidate POIs, which will then be sorted by drive distance, returning only the top candidates according to the limit.'\n          in: query\n          name: multiplier\n          schema:\n            default: 2\n            type: integer\n        - $ref: '#/components/parameters/routingTimeout'\n        - $ref: '#/components/parameters/language'\n        - $ref: '#/components/parameters/extendedPostalCodesFor'\n        - $ref: '#/components/parameters/idxSet'\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '405':\n          $ref: '#/components/responses/405'\n        404/596:\n          $ref: '#/components/responses/404596'\n        5XX:\n          $ref: '#/components/responses/5xx'\n      summary: Routed Search\n      tags:\n        - Search\n  '/search/{versionNumber}/s/{query}.{ext}':\n    get:\n      deprecated: true\n      parameters:\n        - $ref: '#/components/parameters/versionNumber'\n        - description: Query string. Must be properly URL encoded.\n          example: pizza\n          in: path\n          name: query\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/ext'\n        - $ref: '#/components/parameters/typeahead'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/ofs'\n        - $ref: '#/components/parameters/countrySet'\n        - $ref: '#/components/parameters/lat'\n        - $ref: '#/components/parameters/lon'\n        - $ref: '#/components/parameters/radius'\n        - $ref: '#/components/parameters/topLeft'\n        - $ref: '#/components/parameters/btmRight'\n        - $ref: '#/components/parameters/language'\n        - $ref: '#/components/parameters/idxSet'\n        - $ref: '#/components/parameters/view'\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '405':\n          $ref: '#/components/responses/405'\n        404/596:\n          $ref: '#/components/responses/404596'\n        5XX:\n          $ref: '#/components/responses/5xx'\n      summary: Low bandwith Search\n      tags:\n        - Search\n  '/search/{versionNumber}/search/{query}.{ext}':\n    get:\n      parameters:\n        - $ref: '#/components/parameters/versionNumber'\n        - description: |-\n            Query string. Must be properly URL encoded.\n\n            To perform a reverse geocode, the user can provide latitude and longitude coordinates directly in the query. More information can be found \u003ca href=\"/search-api/search-api-documentation-search/fuzzy-search#AdditionalInfo\"\u003ehere\u003c/a\u003e.\n          example: pizza\n          in: path\n          name: query\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/ext'\n        - $ref: '#/components/parameters/typeahead'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/ofs'\n        - $ref: '#/components/parameters/countrySet'\n        - $ref: '#/components/parameters/lat'\n        - $ref: '#/components/parameters/lon'\n        - $ref: '#/components/parameters/radius'\n        - $ref: '#/components/parameters/topLeft'\n        - $ref: '#/components/parameters/btmRight'\n        - $ref: '#/components/parameters/language'\n        - $ref: '#/components/parameters/extendedPostalCodesFor'\n        - $ref: '#/components/parameters/minFuzzyLevel'\n        - $ref: '#/components/parameters/maxFuzzyLevel'\n        - $ref: '#/components/parameters/idxSet'\n        - $ref: '#/components/parameters/view'\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '405':\n          $ref: '#/components/responses/405'\n        404/596:\n          $ref: '#/components/responses/404596'\n        5XX:\n          $ref: '#/components/responses/5xx'\n      summary: Fuzzy Search\n      tags:\n        - Search\n  '/search/{versionNumber}/searchAlongRoute/{query}.{ext}':\n    post:\n      parameters:\n        - $ref: '#/components/parameters/versionNumber'\n        - description: Query string. Must be properly URL encoded.\n          example: pizza\n          in: path\n          name: query\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/ext'\n        - description: Maximum detour time\n          example: 1200\n          in: query\n          name: maxDetourTime\n          required: true\n          schema:\n            maximum: 3600\n            type: integer\n        - $ref: '#/components/parameters/limit'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              example:\n                route:\n                  points:\n                    - lat: 37.7524152343544\n                      lon: -122.43576049804686\n                    - lat: 37.70660472542312\n                      lon: -122.43301391601562\n                    - lat: 37.712059855877314\n                      lon: -122.36434936523438\n                    - lat: 37.75350561243041\n                      lon: -122.37396240234374\n              properties:\n                route:\n                  properties:\n                    points:\n                      items:\n                        properties:\n                          lat:\n                            format: float\n                            type: number\n                          lon:\n                            format: float\n                            type: number\n                        type: object\n                      type: array\n                  type: object\n              type: object\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '405':\n          $ref: '#/components/responses/405'\n        404/596:\n          $ref: '#/components/responses/404596'\n        5XX:\n          $ref: '#/components/responses/5xx'\n      summary: Along Route Search\n      tags:\n        - Search\n  '/search/{versionNumber}/structuredGeocode.{ext}':\n    get:\n      parameters:\n        - $ref: '#/components/parameters/versionNumber'\n        - $ref: '#/components/parameters/ext'\n        - $ref: '#/components/parameters/countryCode'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/ofs'\n        - $ref: '#/components/parameters/streetNumber'\n        - $ref: '#/components/parameters/streetName'\n        - $ref: '#/components/parameters/crossStreet'\n        - $ref: '#/components/parameters/municipality'\n        - $ref: '#/components/parameters/municipalitySubdivision'\n        - $ref: '#/components/parameters/countryTertiarySubdivision'\n        - $ref: '#/components/parameters/countrySecondarySubdivision'\n        - $ref: '#/components/parameters/countrySubdivision'\n        - $ref: '#/components/parameters/postalCode'\n        - $ref: '#/components/parameters/language'\n        - $ref: '#/components/parameters/extendedPostalCodesFor'\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '403':\n          $ref: '#/components/responses/403'\n        '405':\n          $ref: '#/components/responses/405'\n        404/596:\n          $ref: '#/components/responses/404596'\n        5XX:\n          $ref: '#/components/responses/5xx'\n      summary: Structured Geocode\n      tags:\n        - Geocoding\ncomponents:\n  parameters:\n    btmRight:\n      description: 'Bottom right position of the bounding box. This is specified as a comma separated string composed of lat., lon.'\n      example: '37.4,-122.55'\n      in: query\n      name: btmRight\n      schema:\n        type: string\n    countryCode:\n      description: '2 or 3 letter country code (e.g.: FR, ES).'\n      example: NL\n      in: query\n      name: countryCode\n      required: true\n      schema:\n        type: string\n    countrySecondarySubdivision:\n      description: The county for the structured address.\n      in: query\n      name: countrySecondarySubdivision\n      schema:\n        type: string\n    countrySet:\n      description: Comma separated string of country codes. This will limit the search to the specified countries.\n      example: FR\n      in: query\n      name: countrySet\n      schema:\n        type: string\n    countrySubdivision:\n      description: The state or province for the structured address.\n      in: query\n      name: countrySubdivision\n      schema:\n        type: string\n    countryTertiarySubdivision:\n      description: The named area for the structured address.\n      in: query\n      name: countryTertiarySubdivision\n      schema:\n        type: string\n    crossStreet:\n      description: The cross street name for the structured address.\n      in: query\n      name: crossStreet\n      schema:\n        type: string\n    ext:\n      description: Expected response format.\n      example: xml\n      in: path\n      name: ext\n      required: true\n      schema:\n        enum:\n          - json\n          - jsonp\n          - js\n          - xml\n        type: string\n    extendedPostalCodesFor:\n      description: |-\n        Indexes for which extended postal codes should be included in the results. Available indexes are:\n          - \u003cb\u003eAddr\u003c/b\u003e = Address ranges\n          - \u003cb\u003eGeo\u003c/b\u003e = Geographies\n          - \u003cb\u003ePAD\u003c/b\u003e = Point Addresses\n          - \u003cb\u003ePOI\u003c/b\u003e = Points of Interest\n          - \u003cb\u003eStr\u003c/b\u003e = Streets\n          - \u003cb\u003eXStr\u003c/b\u003e = Cross Streets (intersections)\n      in: query\n      name: extendedPostalCodesFor\n      schema:\n        type: string\n    idxSet:\n      description: |-\n        A comma separated list of indexes which should be utilized for the search. Item order does not matter. Available indexes are:\n          - \u003cb\u003eAddr\u003c/b\u003e = Address range interpolation (when there is no PAD)\n          - \u003cb\u003eGeo\u003c/b\u003e = Geographies\n          - \u003cb\u003ePAD\u003c/b\u003e = Point Addresses\n          - \u003cb\u003ePOI\u003c/b\u003e = Points of interest\n          - \u003cb\u003eStr\u003c/b\u003e = Streets\n          - \u003cb\u003eXstr\u003c/b\u003e = Cross Streets (intersections)\n      example: POI\n      in: query\n      name: idxSet\n      schema:\n        type: string\n    language:\n      description: 'Language in which search results should be returned. Should be one of \u003ca href=\"/search-api/search-api-documentation/supported-languages\"\u003esupported IETF language tags\u003c/a\u003e, case insensitive.'\n      in: query\n      name: language\n      schema:\n        type: string\n    lat:\n      description: |-\n        Latitude where results should be biased.  \n        NOTE: supplying a lat/lon without a radius will return search results biased to that point.\n      example: 37.337\n      in: query\n      name: lat\n      schema:\n        format: float\n        type: number\n    limit:\n      description: Maximum number of search results that will be returned.\n      in: query\n      name: limit\n      schema:\n        default: 10\n        maximum: 100\n        type: integer\n    lon:\n      description: |-\n        Longitude where results should be biased\n        NOTE: supplying a lat/lon without a radius will return search results biased to that point.\n      example: -121.89\n      in: query\n      name: lon\n      schema:\n        format: float\n        type: number\n    maxFuzzyLevel:\n      description: Maximum fuzziness level to be used.\n      in: query\n      name: maxFuzzyLevel\n      schema:\n        default: 2\n        maximum: 4\n        minimum: 1\n        type: integer\n    minFuzzyLevel:\n      description: Minimum fuzziness level to be used.\n      in: query\n      name: minFuzzyLevel\n      schema:\n        default: 1\n        maximum: 4\n        minimum: 1\n        type: integer\n    municipality:\n      description: The municipality (city/town) for the structured address.\n      example: Amsterdam\n      in: query\n      name: municipality\n      schema:\n        type: string\n    municipalitySubdivision:\n      description: The municipality subdivision (sub/super city) for the structured address.\n      in: query\n      name: municipalitySubdivision\n      schema:\n        type: string\n    ofs:\n      description: Starting offset of the returned results within the full result set.\n      in: query\n      name: ofs\n      schema:\n        default: 0\n        maximum: 1900\n        type: integer\n    position:\n      description: 'This is specified as a comma separated string composed of lat., lon.'\n      example: '37.8328,-122.27669'\n      in: path\n      name: position\n      required: true\n      schema:\n        type: string\n    postalCode:\n      description: The zip code or postal code for the structured address.\n      in: query\n      name: postalCode\n      schema:\n        type: string\n    radius:\n      description: 'If radius \u003cb\u003eand\u003c/b\u003e position are set, the results will be constrained to the defined area. The radius parameter is specified in meters.'\n      in: query\n      name: radius\n      schema:\n        type: integer\n    routingTimeout:\n      description: Only return results that arrive from routing engine within this time limit.\n      in: query\n      name: routingTimeout\n      schema:\n        default: 4000\n        type: integer\n    storeResult:\n      deprecated: true\n      description: 'If the \"storeResult\" flag is set, the query will be interpreted as a stored geocode and will be billed according to the terms of use.'\n      in: query\n      name: storeResult\n      schema:\n        default: false\n        type: boolean\n    streetName:\n      description: The street name for the structured address.\n      in: query\n      name: streetName\n      schema:\n        type: string\n    streetNumber:\n      description: The street number for the structured address.\n      in: query\n      name: streetNumber\n      schema:\n        type: string\n    topLeft:\n      description: 'Top left position of the bounding box. This is specified as a comma separated string composed of lat., lon.'\n      example: '37.553,-122.453'\n      in: query\n      name: topLeft\n      schema:\n        type: string\n    typeahead:\n      description: 'If the \"typeahead\" flag is set, the query will be interpreted as a partial input and the search will enter \u003cb\u003epredictive\u003c/b\u003e mode.'\n      in: query\n      name: typeahead\n      schema:\n        default: false\n        type: boolean\n    versionNumber:\n      description: Service version number. The current value is 2.\n      in: path\n      name: versionNumber\n      required: true\n      schema:\n        enum:\n          - 2\n        type: integer\n    view:\n      description: Geopolitical View.\n      in: query\n      name: view\n      required: false\n      schema:\n        default: Unified\n        enum:\n          - Unified\n          - IN\n          - PK\n          - IL\n          - MA\n        type: string\n  responses:\n    '200':\n      description: 'OK: the search successfully returned zero or more results.'\n    '400':\n      description: 'Bad Request: one or more parameters were incorrectly specified.'\n    '403':\n      description: |-\n        Forbidden: possible causes include:\n          - Service requires SSL\n          - Not authorized\n          - Rate or volume limit exceeded\n          - Unknown referer\n    '405':\n      description: 'Method Not Allowed: the HTTP method (GET, POST, etc) is not supported for this request.'\n    '404596':\n      description: 'Not Found: the HTTP request method (GET, POST, etc) or path is incorrect.'\n    5xx:\n      description: An error occurred while processing the request. Please try again later.\n  securitySchemes:\n    api_key:\n      in: query\n      name: key\n      type: apiKey\n"
		}
	},
	"Error": "parse: paths: /search/{versionNumber}/additionalData.{ext}: get: : responses: 596: unknown status code: 596"
}