{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/eclipse/kapua"
		},
		"file": {
			"name": "account-scopeId.yaml",
			"path": "rest-api/resources/src/main/resources/openapi/account/account-scopeId.yaml",
			"content": "openapi: 3.0.2\n\ninfo:\n  title: Eclipse Kapua REST API - Accounts\n  version: '1.0'\n  contact:\n    name: Eclipse Kapua Dev Team\n    url: https://eclipse.org/kapua\n    email: kapua-dev@eclipse.org\n  license:\n    name: Eclipse Public License 2.0\n    url: https://www.eclipse.org/legal/epl-2.0\n\npaths:\n  /{scopeId}/accounts:\n    get:\n      tags:\n        - Account\n      summary: Get all the Accounts\n      operationId: accountList\n      parameters:\n        - $ref: '../openapi.yaml#/components/parameters/scopeId'\n        - name: name\n          in: query\n          description: An optional string to filter Accounts according to their name\n          schema:\n            type: string\n        - name: recursive\n          in: query\n          description: |\n            An optional flag to include all accounts that are directly or indirectly children of the current one.\n            Setting this to `true` and also using the `name` parameter will result in this last one beign ignored.\n          schema:\n            type: boolean\n        - $ref: '../openapi.yaml#/components/parameters/sortParam'\n        - $ref: '../openapi.yaml#/components/parameters/sortDir'\n        - $ref: '../openapi.yaml#/components/parameters/limit'\n        - $ref: '../openapi.yaml#/components/parameters/offset'\n      responses:\n        200:\n          description: The list of the Accounts available in the Scope\n          content:\n            application/json:\n              schema:\n                $ref: './account.yaml#/components/schemas/accountListResult'\n        401:\n          $ref: '../openapi.yaml#/components/responses/unauthenticated'\n        403:\n          $ref: '../openapi.yaml#/components/responses/subjectUnauthorized'\n        500:\n          $ref: '../openapi.yaml#/components/responses/kapuaError'\n      description: Get all the Accounts in the given Scope\n    post:\n      tags:\n        - Account\n      summary: Create a new Account\n      operationId: accountCreate\n      parameters:\n        - $ref: '../openapi.yaml#/components/parameters/scopeId'\n      requestBody:\n        description: An object containing the properties for the new Account to be created\n        content:\n          application/json:\n            schema:\n              $ref: './account.yaml#/components/schemas/accountCreator'\n        required: true\n      responses:\n        201:\n          description: The Account that has just been created\n          content:\n            application/json:\n              schema:\n                $ref: './account.yaml#/components/schemas/account'\n        401:\n          $ref: '../openapi.yaml#/components/responses/unauthenticated'\n        403:\n          $ref: '../openapi.yaml#/components/responses/subjectUnauthorized'\n        404:\n          $ref: '../openapi.yaml#/components/responses/entityNotFound'\n        500:\n          $ref: '../openapi.yaml#/components/responses/kapuaError'\n"
		}
	},
	"Error": "parse: paths: /{scopeId}/accounts: get: operation \"accountList\": parameters: parse parameter \"\": resolve \"../openapi.yaml#/components/parameters/scopeId\" reference: invalid parameter reference: \"../openapi.yaml#/components/parameters/scopeId\""
}