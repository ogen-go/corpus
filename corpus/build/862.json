{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wavesplatform/Waves"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "node/src/main/resources/swagger-ui/openapi.yaml",
			"content": "openapi: 3.0.1\ninfo:\n  version: '{{version}}'\n  title: Waves Full Node ({{chainId}})\n  description: \u003e-\n    The Waves node REST API is the main interface for interacting with the\n    blockchain. See\n    [documentation](https://docs.waves.tech/en/waves-node/node-api/) for more\n    info. If this API lacks data you need, check the [Waves Data Services\n    API](https://docs.waves.tech/en/building-apps/waves-api-and-sdk/waves-data-service-api).\n  termsOfService: ''\n  license:\n    name: MIT License\n    url: 'https://github.com/wavesplatform/Waves/blob/version-1.3.x/LICENSE'\nservers:\n  - url: /\ntags:\n  - name: addresses\n  - name: blocks\n  - name: peers\n  - name: blockchain\n  - name: transactions\n  - name: utils\n  - name: wallet\n  - name: alias\n  - name: assets\n  - name: leasing\n  - name: activation\n  - name: debug\n  - name: node\npaths:\n  /addresses:\n    get:\n      tags:\n        - addresses\n      summary: Wallet addresses\n      description: \u003e-\n        Get a list of account addresses in the [node\n        wallet](https://docs.waves.tech/en/waves-node/how-to-work-with-node-wallet)\n      operationId: getWalletAddresses\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n    post:\n      tags:\n        - addresses\n      summary: Create wallet address\n      description: \u003e-\n        Generate a new account address in the [node\n        wallet](https://docs.waves.tech/en/waves-node/how-to-work-with-node-wallet)\n      operationId: createWalletAddress\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - address\n                type: object\n                properties:\n                  address:\n                    type: string\n        '403':\n          $ref: '#/components/responses/ApiKeyNotValid'\n      security:\n        - APIKey: []\n  '/addresses/seq/{from}/{to}':\n    get:\n      tags:\n        - addresses\n      summary: Wallet addresses by range\n      description: \u003e-\n        Get a list addresses in the [node\n        wallet](https://docs.waves.tech/en/waves-node/how-to-work-with-node-wallet)\n        by a given range of indices. Max range {from}-{to} is 100 addresses\n      operationId: getWalletAddressesRange\n      parameters:\n        - name: from\n          in: path\n          description: Start address\n          required: true\n          schema:\n            type: integer\n        - name: to\n          in: path\n          description: End address (not included)\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n  '/addresses/seed/{address}':\n    get:\n      tags:\n        - addresses\n      summary: Seed\n      description: 'Export seed value for the {address}'\n      operationId: getAccountSeed\n      parameters:\n        - $ref: '#/components/parameters/address'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - address\n                  - seed\n                type: object\n                properties:\n                  address:\n                    type: string\n                  seed:\n                    type: string\n        '403':\n          $ref: '#/components/responses/ApiKeyNotValid'\n      security:\n        - APIKey: []\n  '/addresses/publicKey/{publicKey}':\n    get:\n      tags:\n        - addresses\n      summary: Address from a public key\n      description: Generate an address from a given public key\n      operationId: getAddressByPublicKey\n      parameters:\n        - name: publicKey\n          in: path\n          description: Public key base58 encoded\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - address\n                type: object\n                properties:\n                  address:\n                    type: string\n  '/addresses/balance/{address}':\n    get:\n      tags:\n        - addresses\n      summary: Regular balance\n      description: Get the regular balance in WAVES at a given address\n      operationId: getRegularBalance\n      parameters:\n        - $ref: '#/components/parameters/address'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Balance'\n  /addresses/balance:\n    get:\n      tags:\n        - addresses\n      summary: Multiple accounts balances\n      description: \u003e-\n        Get regular balances for multiple addresses. For dozens of addresses,\n        better use the POST method\n      operationId: getMultipleBalances\n      parameters:\n        - name: address\n          in: query\n          description: Addresses base58 encoded\n          required: true\n          style: form\n          explode: true\n          schema:\n            type: array\n            minItems: 1\n            maxItems: 47\n            items:\n              type: string\n              pattern: '^[1-9A-HJ-NP-Za-km-z]{35}$'\n        - name: height\n          in: query\n          description: \u003e-\n            For balance at height requests. Max number of blocks back from the\n            current height is set by `waves.db.max-rollback-depth`, 2000 by\n            default\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Balance'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n    post:\n      tags:\n        - addresses\n      summary: Multiple accounts balances\n      description: \u003e-\n        Get regular balances for multiple addresses. Max number of addresses is\n        set by `waves.rest-api.transactions-by-address-limit`, 1000 by default\n      operationId: getMultipleBalancesViaPost\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - addresses\n              properties:\n                addresses:\n                  type: array\n                  description: Addresses base58 encoded\n                  items:\n                    type: string\n                    pattern: '^[1-9A-HJ-NP-Za-km-z]{35}$'\n                  minItems: 1\n                  maxItems: 1000\n                height:\n                  allOf:\n                    - $ref: '#/components/schemas/Height'\n                  description: \u003e-\n                    For balance at height requests. Max number of blocks back\n                    from the current height is set by\n                    `waves.db.max-rollback-depth`, 2000 by default\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Balance'\n  '/addresses/effectiveBalance/{address}':\n    get:\n      tags:\n        - addresses\n      summary: Effective balance\n      description: Get the effective balance in WAVES at a given address\n      operationId: getEffectiveBalance\n      parameters:\n        - $ref: '#/components/parameters/address'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Balance'\n  '/addresses/data/{address}':\n    get:\n      tags:\n        - addresses\n      summary: Data by keys or regexp\n      description: Read account data entries by given keys or a regular expression\n      operationId: getDataByFilter\n      parameters:\n        - $ref: '#/components/parameters/address'\n        - name: matches\n          in: query\n          description: \u003e-\n            URL encoded (percent-encoded) \u003ca\n            href='https://www.tutorialspoint.com/scala/scala_regular_expressions.htm'\u003eregular\n            expression\u003c/a\u003e to filter keys\n          schema:\n            type: string\n        - name: key\n          in: query\n          description: Exact keys to query\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DataEntry'\n    post:\n      tags:\n        - addresses\n      summary: Data by keys\n      description: Read account data entries by given keys\n      operationId: getDataByMultipleKeysViaPost\n      parameters:\n        - $ref: '#/components/parameters/address'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                keys:\n                  type: array\n                  description: Exact keys to query\n                  items:\n                    type: string\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                key:\n                  type: array\n                  description: Exact keys to query\n                  items:\n                    type: string\n            encoding:\n              key:\n                style: form\n                explode: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DataEntry'\n      x-codegen-request-body-name: keys\n  '/addresses/validate/{address}':\n    get:\n      tags:\n        - addresses\n      summary: Validate\n      description: 'Check whether address {address} is valid or not'\n      operationId: validateAddress\n      parameters:\n        - $ref: '#/components/parameters/address'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - address\n                  - valid\n                type: object\n                properties:\n                  address:\n                    type: string\n                  valid:\n                    type: boolean\n  '/addresses/scriptInfo/{address}/meta':\n    get:\n      tags:\n        - addresses\n      summary: Meta by address\n      description: Account script meta\n      operationId: getScriptMeta\n      parameters:\n        - $ref: '#/components/parameters/address'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScriptMeta'\n  '/addresses/scriptInfo/{address}':\n    get:\n      tags:\n        - addresses\n      summary: Account script info\n      description: \u003e-\n        Get an account script or a dApp script with additional info by a given\n        address\n      operationId: getScriptInfo\n      parameters:\n        - $ref: '#/components/parameters/address'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - address\n                  - complexity\n                  - extraFee\n                type: object\n                properties:\n                  address:\n                    type: string\n                  script:\n                    type: string\n                    format: byte\n                    nullable: true\n                    description: Compiled script in base64 representation\n                  scriptText:\n                    type: string\n                    nullable: true\n                    description: Compiled script in text representation\n                  complexity:\n                    type: integer\n                    format: int64\n                    description: \u003e-\n                      The maximum of `callableComplexities` and\n                      `verifierComplexity`\n                  verifierComplexity:\n                    type: integer\n                    format: int64\n                    description: \u003e-\n                      [Complexity](https://docs.waves.tech/en/ride/base-concepts/complexity)\n                      of an account script or the verifier function of the dApp\n                      script\n                  callableComplexities:\n                    type: object\n                    description: \u003e-\n                      Complexity of callable functions of the dApp script. Empty\n                      for an account script\n                  extraFee:\n                    type: integer\n                    format: int64\n                    description: \u003e-\n                      Extra fee for transactions sending on behalf of the\n                      account\n  '/addresses/{address}':\n    delete:\n      tags:\n        - addresses\n      summary: Delete\n      description: 'Remove the account with address {address} from the wallet'\n      operationId: deleteWalletAddress\n      parameters:\n        - $ref: '#/components/parameters/address'\n      responses:\n        '200':\n          description: Deletion result\n          content:\n            application/json:\n              schema:\n                required:\n                  - deleted\n                type: object\n                properties:\n                  deleted:\n                    type: boolean\n        '403':\n          $ref: '#/components/responses/ApiKeyNotValid'\n      security:\n        - APIKey: []\n  '/addresses/balance/details/{address}':\n    get:\n      tags:\n        - addresses\n      summary: All types of balances in WAVES\n      description: \u003e-\n        Get the available, regular, generating, and effective balance, see\n        [definitions](https://docs.waves.tech/en/blockchain/account/account-balance#account-balance-in-waves)\n      operationId: getWavesBalances\n      parameters:\n        - $ref: '#/components/parameters/address'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - address\n                  - available\n                  - effective\n                  - generating\n                  - regular\n                type: object\n                properties:\n                  address:\n                    type: string\n                  regular:\n                    type: integer\n                    format: int64\n                  generating:\n                    type: integer\n                    format: int64\n                  available:\n                    type: integer\n                    format: int64\n                  effective:\n                    type: integer\n                    format: int64\n  '/addresses/balance/{address}/{confirmations}':\n    get:\n      tags:\n        - addresses\n      summary: Confirmed regular balance in WAVES\n      description: \u003e-\n        Get the minimum regular balance at a given address for {confirmations}\n        blocks back from the current height. Max number of confirmations is set\n        by `waves.db.max-rollback-depth`, 2000 by default\n      operationId: getConfirmedRegularBalance\n      parameters:\n        - $ref: '#/components/parameters/address'\n        - name: confirmations\n          in: path\n          description: Number of blocks\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Balance'\n  '/addresses/effectiveBalance/{address}/{confirmations}':\n    get:\n      tags:\n        - addresses\n      summary: Confirmed effective balance in WAVES\n      description: \u003e-\n        Get the minimum effective balance at a given address for {confirmations}\n        blocks from the current height. Max number of confirmations is set by\n        `waves.db.max-rollback-depth`, 2000 by default\n      operationId: getConfirmedEffectiveBalance\n      parameters:\n        - $ref: '#/components/parameters/address'\n        - name: confirmations\n          in: path\n          description: Number of blocks\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Balance'\n  '/addresses/data/{address}/{key}':\n    get:\n      tags:\n        - addresses\n      summary: Data by key\n      description: Read account data entries by a given key\n      operationId: getDataByKey\n      parameters:\n        - $ref: '#/components/parameters/address'\n        - name: key\n          in: path\n          description: Data key\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataEntry'\n  '/blocks/{id}':\n    get:\n      tags:\n        - blocks\n      summary: Block by ID\n      description: Get a block by its ID\n      operationId: getBlockById\n      parameters:\n        - $ref: '#/components/parameters/blockId'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Block'\n  '/blocks/heightByTimestamp/{timestamp}':\n    get:\n      tags: [blocks]\n      operationId: getHeightByTimestamp\n      summary: Blockchain height for timestamp\n      description: \u003e-\n        Get height of the most recent block such that its timestamp does not exceed the given `{timestamp}`.\n      parameters:\n        - name: timestamp\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/Timestamp'\n      responses:\n        '200':\n          $ref: '#/components/responses/Height'\n\n  '/blocks/address/{address}/{from}/{to}':\n    get:\n      tags:\n        - blocks\n      summary: Blocks forged by address\n      description: \u003e-\n        Get a list of blocks forged by a given address. Max range {from}-{to} is\n        100 blocks\n      operationId: getBlocksByAddress\n      parameters:\n        - name: from\n          in: path\n          description: Start block height\n          required: true\n          schema:\n            type: integer\n        - name: to\n          in: path\n          description: End block height\n          required: true\n          schema:\n            type: integer\n        - $ref: '#/components/parameters/address'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Block'\n  '/blocks/seq/{from}/{to}':\n    get:\n      tags:\n        - blocks\n      summary: Block range\n      description: \u003e-\n        Get blocks at a given range of heights. Max range {from}-{to} is 100\n        blocks\n      operationId: getBlocksRange\n      parameters:\n        - name: from\n          in: path\n          description: Start block height\n          required: true\n          schema:\n            type: integer\n        - name: to\n          in: path\n          description: End block height\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Block'\n  '/blocks/delay/{id}/{blockNum}':\n    get:\n      tags:\n        - blocks\n      summary: Average block delay\n      description: \u003e-\n        Average delay in milliseconds between last `blockNum` blocks starting\n        from block with `id`\n      operationId: getBlockDelay\n      parameters:\n        - $ref: '#/components/parameters/blockId'\n        - name: blockNum\n          in: path\n          description: Number of blocks to count delay\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - delay\n                type: object\n                properties:\n                  delay:\n                    type: integer\n                    format: int64\n  /blocks/height:\n    get:\n      tags:\n        - blocks\n      summary: Blockchain height\n      description: Get the current blockchain height\n      operationId: getHeight\n      responses:\n        '200':\n          $ref: '#/components/responses/Height'\n  '/blocks/at/{height}':\n    get:\n      tags:\n        - blocks\n      summary: Block at height\n      description: Get a block at a given height\n      operationId: getBlockByHeight\n      parameters:\n        - name: height\n          in: path\n          description: Block height\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Block'\n  /blocks/last:\n    get:\n      tags:\n        - blocks\n      summary: Last block\n      description: Get the block at the current blockchain height\n      operationId: getLastBlock\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Block'\n  '/blocks/height/{id}':\n    get:\n      tags:\n        - blocks\n      summary: Block height\n      description: Get the height of a block by its ID\n      operationId: getBlockHeightbyId\n      parameters:\n        - $ref: '#/components/parameters/blockId'\n      responses:\n        '200':\n          $ref: '#/components/responses/Height'\n  '/blocks/headers/at/{height}':\n    get:\n      tags:\n        - blocks\n      summary: Block headers at height\n      description: Get block headers at a given height\n      operationId: getBlockHeadersByHeight\n      parameters:\n        - name: height\n          in: path\n          description: Block height\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlockHeader'\n  '/blocks/headers/{id}':\n    get:\n      tags:\n        - blocks\n      summary: Block headers by ID\n      description: Get headers of a given block\n      operationId: getBlockHeadersById\n      parameters:\n        - $ref: '#/components/parameters/blockId'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlockHeader'\n  '/blocks/headers/seq/{from}/{to}':\n    get:\n      tags:\n        - blocks\n      summary: Block headers at range\n      description: \u003e-\n        Get block headers at a given range of heights. Max range {from}-{to} is\n        100 blocks\n      operationId: getBlockHeadersRange\n      parameters:\n        - name: from\n          in: path\n          description: Start block height\n          required: true\n          schema:\n            type: integer\n        - name: to\n          in: path\n          description: End block height\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BlockHeader'\n  /blocks/headers/last:\n    get:\n      tags:\n        - blocks\n      summary: Last block headers\n      description: Get headers of the block at the current blockchain height\n      operationId: getLastBlockHeaders\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlockHeader'\n  /peers/connect:\n    post:\n      tags:\n        - peers\n      summary: Connect to peer\n      description: Connect to peer\n      operationId: connectPeer\n      requestBody:\n        description: JSON with data\n        content:\n          application/json:\n            schema:\n              required:\n                - host\n                - port\n              type: object\n              properties:\n                host:\n                  type: string\n                  example: 127.0.0.1\n                port:\n                  type: integer\n                  format: int32\n                  example: 6868\n        required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - hostname\n                  - status\n                type: object\n                properties:\n                  hostname:\n                    type: string\n                  status:\n                    type: string\n        '403':\n          $ref: '#/components/responses/ApiKeyNotValid'\n      security:\n        - APIKey: []\n      x-codegen-request-body-name: body\n  /peers/clearblacklist:\n    post:\n      tags:\n        - peers\n      summary: Clear ban list\n      description: Clear the list of banned peers\n      operationId: clearBanList\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - result\n                type: object\n                properties:\n                  result:\n                    type: string\n        '403':\n          $ref: '#/components/responses/ApiKeyNotValid'\n      security:\n        - APIKey: []\n  /peers/all:\n    get:\n      tags:\n        - peers\n      summary: Peer list\n      description: \u003e-\n        Get a list of all ever known not banned peers with a publicly available\n        declared address\n      operationId: getPeers\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  required:\n                    - address\n                    - lastSeen\n                  type: object\n                  properties:\n                    address:\n                      type: string\n                    lastSeen:\n                      type: integer\n                      format: int64\n  /peers/connected:\n    get:\n      tags:\n        - peers\n      summary: Connected peers list\n      description: Get a list of all peers currently connected to the node\n      operationId: getConnectedPeers\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - peers\n                type: object\n                properties:\n                  peers:\n                    type: array\n                    items:\n                      required:\n                        - address\n                        - applicationName\n                        - applicationVersion\n                        - declaredAddress\n                        - peerName\n                        - peerNonce\n                      type: object\n                      properties:\n                        address:\n                          type: string\n                        declaredAddress:\n                          type: string\n                        peerName:\n                          type: string\n                        peerNonce:\n                          type: integer\n                          format: int64\n                        applicationName:\n                          type: string\n                        applicationVersion:\n                          type: string\n  /peers/blacklisted:\n    get:\n      tags:\n        - peers\n      summary: Ban list\n      description: Get a list of all currently banned peers of the node\n      operationId: getBannedPeers\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  required:\n                    - hostname\n                    - reason\n                    - timestamp\n                  type: object\n                  properties:\n                    hostname:\n                      type: string\n                    timestamp:\n                      type: integer\n                      format: int64\n                    reason:\n                      type: string\n  /peers/suspended:\n    get:\n      tags:\n        - peers\n      summary: Suspended peers list\n      description: Suspended peers list\n      operationId: getSuspendedPeers\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  required:\n                    - hostname\n                    - reason\n                    - timestamp\n                  type: object\n                  properties:\n                    hostname:\n                      type: string\n                    timestamp:\n                      type: integer\n                      format: int64\n                    reason:\n                      type: string\n  /blockchain/rewards:\n    get:\n      tags:\n        - blockchain\n      summary: Current reward status\n      description: Get current status of block reward\n      operationId: getRewardStatus\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RewardStatus'\n  '/blockchain/rewards/{height}':\n    get:\n      tags:\n        - blockchain\n      summary: Reward status\n      description: Get status of block reward at height\n      operationId: getRewardStatusAtHeight\n      parameters:\n        - name: height\n          in: path\n          description: Target block height\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RewardStatus'\n  /transactions/status:\n    get:\n      tags:\n        - transactions\n      summary: Transaction statuses\n      description: \u003e-\n        Get transaction statuses by their ID. For dozens of transactions, better\n        use the POST method.\u003cbr\u003eTransactions in the response are in the same\n        order as in the request.\n      operationId: getTxStatuses\n      parameters:\n        - name: id\n          in: query\n          required: true\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/TransactionId'\n            minItems: 1\n            maxItems: 42\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionStatus'\n    post:\n      tags:\n        - transactions\n      summary: Transaction statuses\n      description: \u003e-\n        Get transaction statuses by their ID. Max number of transactions is set\n        by `waves.rest-api.transactions-by-address-limit`, 1000 by\n        default.\u003cbr\u003eTransactions in the response are in the same order as in the\n        request.\n      operationId: getTxStatusesViaPost\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                ids:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/TransactionId'\n                  minItems: 1\n                  maxItems: 1000\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/TransactionId'\n            encoding:\n              id:\n                style: form\n                explode: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TransactionStatus'\n      x-codegen-request-body-name: ids\n  '/transactions/info/{id}':\n    get:\n      tags:\n        - transactions\n      summary: Transaction info\n      description: Get a transaction by its ID\n      operationId: getTxById\n      parameters:\n        - $ref: '#/components/parameters/txId'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Transaction'\n  /transactions/info:\n    get:\n      tags:\n        - transactions\n      summary: Transaction info\n      description: Get transactions by IDs\n      operationId: getMultipleTxs\n      parameters:\n        - name: id\n          in: query\n          description: Transaction IDs base58 encoded\n          required: true\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              $ref: '#/components/parameters/txId'\n            minItems: 1\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Transaction'\n  /transactions/sign:\n    post:\n      tags:\n        - transactions\n      summary: Sign transaction on behalf of wallet account\n      description: \u003e-\n        Sign a transaction with the private key corresponding to the `sender`.\n        Sender must exist in the [node's\n        wallet](https://docs.waves.tech/en/waves-node/how-to-work-with-node-wallet)\n      operationId: signTx\n      requestBody:\n        description: \u003e-\n          Transaction [data in\n          JSON](https://docs.waves.tech/en/blockchain/transaction/#json-representation)\n          including\n          [`type`](https://docs.waves.tech/en/blockchain/transaction-type/) and\n          `sender`. If `timestamp` is omitted, current node's time is used.\n          `senderPublicKey` is ignored.\n        content:\n          application/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Transaction'\n        '403':\n          $ref: '#/components/responses/ApiKeyNotValid'\n      security:\n        - APIKey: []\n      x-codegen-request-body-name: json\n  /transactions/unconfirmed:\n    get:\n      tags:\n        - transactions\n      summary: Unconfirmed transactions\n      description: Get a list of transactions in node's UTX pool\n      operationId: getUnconfirmedTxs\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Transaction'\n  '/transactions/address/{address}/limit/{limit}':\n    get:\n      tags:\n        - transactions\n      summary: List of transactions by address\n      description: \u003e-\n        Get a list of the latest transactions involving a given address. Max\n        number of transactions is set by\n        `waves.rest-api.transactions-by-address-limit`, 1000 by default. For\n        pagination, use the field {after}\n      operationId: getTxsByAddress\n      parameters:\n        - $ref: '#/components/parameters/address'\n        - name: limit\n          in: path\n          description: Number of transactions to be returned\n          required: true\n          schema:\n            type: integer\n        - name: after\n          in: query\n          description: ID of the transaction to paginate after\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Transaction'\n  /transactions/unconfirmed/size:\n    get:\n      tags:\n        - transactions\n      summary: Number of unconfirmed transactions\n      description: Get the number of transactions in the UTX pool\n      operationId: getUtxPoolSize\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - size\n                type: object\n                properties:\n                  size:\n                    type: integer\n                    format: int32\n  '/transactions/unconfirmed/info/{id}':\n    get:\n      tags:\n        - transactions\n      summary: Unconfirmed transaction info\n      description: Get an unconfirmed transaction by its ID\n      operationId: getUnconfirmedTxById\n      parameters:\n        - $ref: '#/components/parameters/txId'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Transaction'\n  /transactions/calculateFee:\n    post:\n      tags:\n        - transactions\n      summary: Calculate transaction fee\n      description: Get the minimum fee for a given transaction\n      operationId: calculateTxFee\n      requestBody:\n        description: \u003e-\n          Transaction [data in\n          JSON](https://docs.waves.tech/en/blockchain/transaction/#json-representation)\n          including\n          [`type`](https://docs.waves.tech/en/blockchain/transaction-type/) and\n          `senderPublicKey`. To calculate a sponsored fee, specify `feeAssetId`.\n          `fee` and `sender` are ignored.\n        content:\n          application/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - feeAmount\n                  - feeAssetId\n                type: object\n                properties:\n                  feeAssetId:\n                    type: string\n                  feeAmount:\n                    type: integer\n                    format: int64\n      x-codegen-request-body-name: json\n  '/transactions/sign/{signerAddress}':\n    post:\n      tags:\n        - transactions\n      summary: Sign transaction on behalf of wallet account\n      description: \u003e-\n        Sign a transaction with the private key corresponding to a given\n        address. The address must exist in the [node's\n        wallet](https://docs.waves.tech/en/waves-node/how-to-work-with-node-wallet)\n      operationId: signTxWithAddress\n      parameters:\n        - name: signerAddress\n          in: path\n          description: Wallet address base58 encoded\n          required: true\n          schema:\n            type: string\n            pattern: '^[1-9A-HJ-NP-Za-km-z]{35}$'\n      requestBody:\n        description: \u003e-\n          Transaction [data in\n          JSON](https://docs.waves.tech/en/blockchain/transaction/#json-representation)\n          including\n          [`type`](https://docs.waves.tech/en/blockchain/transaction-type/) and\n          `sender`. If `timestamp` is omitted, current node's time is used.\n          `senderPublicKey` is ignored.\n        content:\n          application/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Transaction'\n        '403':\n          $ref: '#/components/responses/ApiKeyNotValid'\n      security:\n        - APIKey: []\n      x-codegen-request-body-name: json\n  /transactions/broadcast:\n    post:\n      tags:\n        - transactions\n      summary: Broadcast transaction\n      description: Broadcast a signed transaction.\u003cbr\u003eCheck out [how to use this endpoint](https://docs.waves.tech/en/waves-node/node-api/transactions#step-4-broadcast-transaction)\n      operationId: broadcastSignedTx\n      parameters:\n        - name: trace\n          in: query\n          schema:\n            type: string\n            enum: [yes]\n          description: Return trace\n      requestBody:\n        description: \u003e-\n          Transaction [data in\n          JSON](https://docs.waves.tech/en/blockchain/transaction/#json-representation)\n          including\n          [`type`](https://docs.waves.tech/en/blockchain/transaction-type/) and\n          `signature`/`proofs`\n        content:\n          application/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Transaction'\n      x-codegen-request-body-name: json\n  /transactions/merkleProof:\n    get:\n      tags:\n        - transactions\n      summary: Merkle proofs\n      description: \u003e-\n        Get [merkle\n        proofs](https://docs.waves.tech/en/blockchain/block/merkle-root#proof-of-transaction-in-block)\n        for given transactions. For dozens of transactions, better use the POST\n        method\n      operationId: getMerkleProofs\n      parameters:\n        - name: id\n          in: query\n          description: Transaction ID\n          required: true\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionMerkleProofs'\n    post:\n      tags:\n        - transactions\n      summary: Merkle proofs\n      description: \u003e-\n        Get [merkle\n        proofs](https://docs.waves.tech/en/blockchain/block/merkle-root#proof-of-transaction-in-block)\n        for given transactions\n      operationId: getMerkleProofsViaPost\n      requestBody:\n        description: Transaction IDs\n        content:\n          application/json:\n            schema:\n              required:\n                - ids\n              type: object\n              properties:\n                ids:\n                  type: array\n                  items:\n                    type: string\n        required: false\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TransactionMerkleProofs'\n      x-codegen-request-body-name: ids\n  '/utils/seed/{length}':\n    get:\n      tags:\n        - utils\n      summary: Seed of specified length\n      description: \u003e-\n        Generate random seed of a given length in bytes. The returned value is\n        base58 encoded\n      operationId: generateSeedByLength\n      parameters:\n        - name: length\n          in: path\n          description: Seed length\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - seed\n                type: object\n                properties:\n                  seed:\n                    type: string\n  /utils/script/compile:\n    post:\n      tags:\n        - utils\n      summary: Compile\n      description: Compiles string code to base64 script representation\n      operationId: compileScript\n      requestBody:\n        description: Script code\n        content:\n          application/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CompiledScript'\n      deprecated: true\n      x-codegen-request-body-name: code\n  /utils/time:\n    get:\n      tags:\n        - utils\n      summary: Time\n      description: Current Node time (UTC)\n      operationId: getTime\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - NTP\n                  - system\n                type: object\n                properties:\n                  system:\n                    type: integer\n                    format: int64\n                  NTP:\n                    type: integer\n                    format: int64\n  /utils/script/decompile:\n    post:\n      tags:\n        - utils\n      summary: Decompile\n      description: Decompiles base64 script representation to string code\n      operationId: decompileScript\n      requestBody:\n        description: Script code\n        content:\n          application/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - script\n                type: object\n                properties:\n                  script:\n                    type: string\n      x-codegen-request-body-name: code\n  /utils/script/compileCode:\n    post:\n      tags:\n        - utils\n      summary: Compile script\n      description: Compiles string code to base64 script representation\n      operationId: compileCode\n      requestBody:\n        content:\n          text/plain:\n            schema:\n              type: string\n        required: true\n      parameters:\n        - name: compact\n          in: query\n          description: 'If true, compacts the contract. False by default'\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CompiledScript'\n      x-codegen-request-body-name: code\n  /utils/script/compileWithImports:\n    post:\n      tags:\n        - utils\n      summary: Compile script\n      description: Compiles string code with imports to base64 script representation\n      operationId: compileWithImports\n      requestBody:\n        description: Script code with imports\n        content:\n          application/json:\n            schema:\n              required:\n                - imports\n                - script\n              type: object\n              properties:\n                script:\n                  type: string\n                imports:\n                  type: object\n                  additionalProperties:\n                    type: string\n        required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CompiledScript'\n      x-codegen-request-body-name: code\n  /utils/script/estimate:\n    post:\n      tags:\n        - utils\n      summary: Estimate\n      description: Estimates complexity of a given compiled code\n      operationId: estimateScript\n      requestBody:\n        description: Compiled code in base64 script representation\n        content:\n          text/plain:\n            schema:\n              type: string\n              format: byte\n        required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - script\n                  - scriptText\n                  - complexity\n                  - verifierComplexity\n                  - callableComplexities\n                  - extraFee\n                type: object\n                properties:\n                  script:\n                    type: string\n                    format: byte\n                    nullable: true\n                    description: Compiled script in base64 script representation\n                  scriptText:\n                    type: string\n                    nullable: true\n                    description: Compiled script in text representation\n                  complexity:\n                    type: integer\n                    format: int64\n                    description: \u003e-\n                      The maximum of `callableComplexities` and\n                      `verifierComplexity`\n                  verifierComplexity:\n                    type: integer\n                    format: int64\n                    description: \u003e-\n                      [Complexity](https://docs.waves.tech/en/ride/base-concepts/complexity)\n                      of the account or asset script or the verifier function of\n                      the dApp script\n                  callableComplexities:\n                    type: object\n                    description: \u003e-\n                      Complexity of callable functions of the dApp script. Empty\n                      for an account script or asset script\n                  extraFee:\n                    type: integer\n                    format: int64\n                    description: \u003e-\n                      Extra fee for transactions sending on behalf of the dApp\n                      or smart account or transactions involving the asset\n      x-codegen-request-body-name: code\n  '/utils/script/evaluate/{address}':\n    post:\n      tags:\n        - utils\n      summary: Evaluate\n      description: \u003e-\n        Evaluates the provided expression, taking into account the deployed dApp\n        contract\n      operationId: evaluateScript\n      parameters:\n        - name: address\n          in: path\n          description: Address of the deployed dApp contract\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Expression to evaluate\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                expr:\n                  type: string\n        required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  address:\n                    type: string\n                  expr:\n                    type: string\n                  result:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                      value: {}\n  /utils/seed:\n    get:\n      tags:\n        - utils\n      summary: Seed\n      description: Generate random seed. The returned value is base58 encoded\n      operationId: generateSeed\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - seed\n                type: object\n                properties:\n                  seed:\n                    type: string\n  /utils/hash/secure:\n    post:\n      tags:\n        - utils\n      summary: Secure hash\n      description: \u003e-\n        Calculate the\n        [Keccak-256](https://keccak.team/files/Keccak-submission-3.pdf) hash of\n        the\n        [BLAKE2b-256](https://en.wikipedia.org/wiki/BLAKE_%28hash_function%29)\n        hash of a given message\n      operationId: hashSecure\n      requestBody:\n        description: Message to hash\n        content:\n          text/plain:\n            schema:\n              type: string\n        required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HashedMessage'\n      x-codegen-request-body-name: message\n  /utils/hash/fast:\n    post:\n      tags:\n        - utils\n      summary: Fast hash\n      description: \u003e-\n        Calculate the\n        [BLAKE2b-256](https://en.wikipedia.org/wiki/BLAKE_%28hash_function%29)\n        hash of a given message\n      operationId: hashFast\n      requestBody:\n        description: Message to hash\n        content:\n          text/plain:\n            schema:\n              type: string\n        required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HashedMessage'\n      x-codegen-request-body-name: message\n  /utils/transactionSerialize:\n    post:\n      tags:\n        - utils\n      summary: Serialize transaction\n      description: Serialize transaction\n      operationId: serializeTx\n      requestBody:\n        description: \u003e-\n          Transaction [data in\n          JSON](https://docs.waves.tech/en/blockchain/transaction/#json-representation)\n          including\n          [`type`](https://docs.waves.tech/en/blockchain/transaction-type/)\n        content:\n          application/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - bytes\n                type: object\n                properties:\n                  bytes:\n                    type: array\n                    items:\n                      type: number\n      x-codegen-request-body-name: json\n  /wallet/seed:\n    get:\n      tags:\n        - wallet\n      summary: Seed\n      description: Export wallet seed\n      operationId: getSeed\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - seed\n                type: object\n                properties:\n                  seed:\n                    type: string\n        '403':\n          $ref: '#/components/responses/ApiKeyNotValid'\n      security:\n        - APIKey: []\n  '/alias/by-alias/{alias}':\n    get:\n      tags:\n        - alias\n      summary: Address by alias\n      description: \u003e-\n        Get an address associated with a given alias. Alias should be plain text\n        without an 'alias' prefix and chain ID.\n      operationId: getAddressByAlias\n      parameters:\n        - name: alias\n          in: path\n          description: Alias\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - address\n                type: object\n                properties:\n                  address:\n                    type: string\n  '/alias/by-address/{address}':\n    get:\n      tags:\n        - alias\n      summary: Aliases by address\n      description: Get a list of aliases associated with a given address\n      operationId: getAliasesByAddress\n      parameters:\n        - $ref: '#/components/parameters/address'\n      responses:\n        '200':\n          description: Aliases\n          content:\n            application/json:\n              schema:\n                uniqueItems: true\n                type: array\n                items:\n                  type: string\n  '/assets/balance/{address}':\n    get:\n      tags:\n        - assets\n      summary: Asset balances\n      description: \u003e-\n        Get account balances in all or specified assets (excluding WAVES) at a given address.\u003cbr\u003e\n        Note: Full portfolio also excludes NFTs.\n      operationId: getAssetBalances\n      parameters:\n        - $ref: '#/components/parameters/address'\n        - name: id\n          in: query\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/AssetId'\n            minItems: 1\n            maxItems: 100\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AssetBalancesResponse'\n    post:\n      tags:\n        - assets\n      summary: Asset balances\n      description: \u003e-\n        Get account balances in specified assets (excluding WAVES) at a given address\n      operationId: getAssetBalancesViaPost\n      parameters:\n        - $ref: '#/components/parameters/address'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                ids:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/AssetId'\n                  minItems: 1\n                  maxItems: 100\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/AssetId'\n            encoding:\n              id:\n                style: form\n                explode: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AssetBalancesResponse'\n      x-codegen-request-body-name: ids\n  '/assets/details/{assetId}':\n    get:\n      tags:\n        - assets\n      summary: Information about asset\n      description: \u003e-\n        Get detailed information about a given asset. See [fields\n        descriptions](https://docs.waves.tech/en/blockchain/token/#custom-token-parameters)\n      operationId: getAssetDetails\n      parameters:\n        - $ref: '#/components/parameters/assetId'\n        - name: full\n          in: query\n          description: 'If true, the response contains `scriptDetails` for scripted assets. False by default'\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AssetDetails'\n  /assets/details:\n    get:\n      tags:\n        - assets\n      summary: Information about multiple assets\n      description: \u003e-\n        Get detailed information about given assets. See [fields\n        descriptions](https://docs.waves.tech/en/blockchain/token/#custom-token-parameters)\n      operationId: getMultipleAssetDetails\n      parameters:\n        - name: id\n          in: query\n          description: Asset ID base58 encoded\n          required: true\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: full\n          in: query\n          description: 'If true, the response contains `scriptDetails` for scripted assets. False by default'\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AssetDetails'\n  '/assets/balance/{address}/{assetId}':\n    get:\n      tags:\n        - assets\n      summary: Account balance in asset\n      description: \u003e-\n        Get the account balance in a given asset. 0 for non-existent asset (use\n        [GET /assets/details/{assetId}](#/assets/getAssetDetails) to check if\n        the asset exists)\n      operationId: getAssetBalanceByAddress\n      parameters:\n        - $ref: '#/components/parameters/address'\n        - $ref: '#/components/parameters/assetId'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - address\n                  - assetId\n                  - balance\n                type: object\n                properties:\n                  address:\n                    type: string\n                  assetId:\n                    type: string\n                  balance:\n                    type: integer\n                    format: int64\n  '/assets/{assetId}/distribution':\n    get:\n      tags:\n        - assets\n      summary: Asset balance distribution\n      description: Get asset balance distribution by addresses\n      operationId: getAssetDistributionOld\n      parameters:\n        - $ref: '#/components/parameters/assetId'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AssetDistribution'\n      deprecated: true\n  '/assets/{assetId}/distribution/{height}/limit/{limit}':\n    get:\n      tags:\n        - assets\n      summary: Asset balance distribution at height\n      description: \u003e-\n        Get asset balance distribution by addresses at a given height. Max\n        number of addresses is set by\n        `waves.rest-api.distribution-address-limit`, 1000 by default. For\n        pagination, use the field {after}\n      operationId: getAssetDistribution\n      parameters:\n        - $ref: '#/components/parameters/assetId'\n        - name: height\n          in: path\n          description: \u003e-\n            For balance at height requests. Max number of blocks back from the\n            current height is set by `waves.db.max-rollback-depth`, 2000 by\n            default\n          required: true\n          schema:\n            type: integer\n        - name: limit\n          in: path\n          description: Number of addresses to be returned\n          required: true\n          schema:\n            type: integer\n        - name: after\n          in: query\n          description: Address to paginate after\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AssetDistribution'\n  '/assets/nft/{address}/limit/{limit}':\n    get:\n      tags:\n        - assets\n      summary: Account NFTs\n      description: \u003e-\n        Get a list of [non-fungible\n        tokens](https://docs.waves.tech/en/blockchain/token/non-fungible-token)\n        at a given address. Max for 1000 tokens. For pagination, use the field\n        {after}. See [fields\n        descriptions](https://docs.waves.tech/en/blockchain/token/#custom-token-parameters).\u003cbr\u003eSince\n        activation of [feature\n        #15](https://docs.waves.tech/en/waves-node/features/) this method\n        returns only tokens that are issued as NFT (amount: 1, decimal places:\n        0, reissuable: false) after activation of feature #13. Before activation\n        of feature #15 the method returned all the assets that are issued as\n        NFT.\n      operationId: getNfts\n      parameters:\n        - $ref: '#/components/parameters/address'\n        - name: limit\n          in: path\n          description: Number of tokens to be returned\n          required: true\n          schema:\n            type: integer\n        - name: after\n          in: query\n          description: ID of the token to paginate after\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AssetDetails'\n  '/leasing/active/{address}':\n    get:\n      tags:\n        - leasing\n      summary: Active leases by address\n      description: Get all active leases involving a given address\n      operationId: getActiveLeases\n      parameters:\n        - $ref: '#/components/parameters/address'\n      responses:\n        '200':\n          description: Lease info\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/LeaseInfo'\n  '/leasing/info/{id}':\n    get:\n      tags:\n        - leasing\n      summary: Lease info\n      description: Get lease parameters by lease ID\n      operationId: getLease\n      parameters:\n        - name: id\n          in: path\n          description: Lease ID base58 encoded\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LeaseInfo'\n  /leasing/info:\n    get:\n      tags:\n        - leasing\n      summary: Multiple leases info\n      description: Get lease parameters by lease IDs\n      operationId: getMultipleLeases\n      parameters:\n        - name: id\n          in: query\n          description: Lease ID base58 encoded\n          required: true\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n              pattern: '^[1-9A-HJ-NP-Za-km-z]{32,44}$'\n            minItems: 1\n            maxItems: 1000\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/LeaseInfo'\n    post:\n      tags:\n        - leasing\n      summary: Multiple leases info\n      description: Get lease parameters by lease IDs\n      operationId: getMultipleLeasesViaPost\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                ids:\n                  type: array\n                  description: Lease IDs base58 encoded\n                  items:\n                    type: string\n                    pattern: '^[1-9A-HJ-NP-Za-km-z]{32,44}$'\n                  minItems: 1\n                  maxItems: 1000\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: array\n                  description: Lease IDs base58 encoded\n                  items:\n                    type: string\n                    pattern: '^[1-9A-HJ-NP-Za-km-z]{32,44}$'\n            encoding:\n              id:\n                style: form\n                explode: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/LeaseInfo'\n      x-codegen-request-body-name: ids\n  /activation/status:\n    get:\n      tags:\n        - activation\n      summary: Feature activation status\n      description: \u003e-\n        Activation statuses of [blockchain\n        features](https://docs.waves.tech/en/waves-node/features/)\n      operationId: getFeatureStatuses\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - features\n                  - height\n                  - nextCheck\n                  - votingInterval\n                  - votingThreshold\n                type: object\n                properties:\n                  height:\n                    allOf:\n                      - $ref: '#/components/schemas/Height'\n                    description: Current blockchain height on the node\n                  votingInterval:\n                    type: integer\n                    format: int32\n                    description: Voting period length in blocks\n                  votingThreshold:\n                    type: integer\n                    format: int32\n                    description: Number of blocks that support a feature to approve it\n                  nextCheck:\n                    type: integer\n                    format: int32\n                    description: Next height to calculate feature statuses\n                  features:\n                    type: array\n                    items:\n                      required:\n                        - blockchainStatus\n                        - description\n                        - id\n                        - nodeStatus\n                      type: object\n                      properties:\n                        id:\n                          type: integer\n                          format: int32\n                          description: Feature ID\n                        description:\n                          type: string\n                        blockchainStatus:\n                          type: string\n                          enum:\n                            - VOTING\n                            - APPROVED\n                            - ACTIVATED\n                          description: Feature status\n                        nodeStatus:\n                          type: string\n                          enum:\n                            - NOT_IMPLEMENTED\n                            - IMPLEMENTED\n                            - VOTED\n                          description: Support for the feature on the node\n                        activationHeight:\n                          $ref: '#/components/schemas/Height'\n                        supportingBlocks:\n                          type: integer\n                          format: int32\n                          description: Number of blocks that support for the feature\n  /debug/print:\n    post:\n      tags:\n        - debug\n      summary: Print\n      description: 'Prints a string at DEBUG level, strips to 100 chars'\n      operationId: print\n      requestBody:\n        description: JSON with data\n        content:\n          application/json:\n            schema:\n              required:\n                - message\n              type: object\n              properties:\n                message:\n                  type: string\n        required: true\n      responses:\n        '200':\n          description: Success\n          content: {}\n        '403':\n          $ref: '#/components/responses/ApiKeyNotValid'\n      security:\n        - APIKey: []\n      x-codegen-request-body-name: body\n  /debug/state:\n    get:\n      tags:\n        - debug\n      summary: Regular address balance\n      description: Regular address balance at the current height\n      operationId: getWavesDistribution\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: integer\n                  format: int64\n                description: map of address \u003c-\u003e balance\n                example:\n                  addr1: 0\n                  addr2: 100\n        '403':\n          $ref: '#/components/responses/ApiKeyNotValid'\n      security:\n        - APIKey: []\n  /debug/info:\n    get:\n      tags:\n        - debug\n      summary: State\n      description: All info you need to debug\n      operationId: getDebugInfo\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - extensionLoaderState\n                  - historyReplierCacheSizes\n                  - microBlockSynchronizerCacheSizes\n                  - minerState\n                  - scoreObserverStats\n                  - stateHeight\n                type: object\n                properties:\n                  stateHeight:\n                    $ref: '#/components/schemas/Height'\n                  extensionLoaderState:\n                    type: string\n                  historyReplierCacheSizes:\n                    required:\n                      - awaiting\n                      - microBlockOwners\n                      - nextInvs\n                      - successfullyReceived\n                    type: object\n                    properties:\n                      microBlockOwners:\n                        type: integer\n                        format: int64\n                      nextInvs:\n                        type: integer\n                        format: int64\n                      awaiting:\n                        type: integer\n                        format: int64\n                      successfullyReceived:\n                        type: integer\n                        format: int64\n                  microBlockSynchronizerCacheSizes:\n                    required:\n                      - awaiting\n                      - microBlockOwners\n                      - nextInvs\n                      - successfullyReceived\n                    type: object\n                    properties:\n                      microBlockOwners:\n                        type: integer\n                        format: int64\n                      nextInvs:\n                        type: integer\n                        format: int64\n                      awaiting:\n                        type: integer\n                        format: int64\n                      successfullyReceived:\n                        type: integer\n                        format: int64\n                  scoreObserverStats:\n                    required:\n                      - currentBestChannel\n                      - localScore\n                      - scoresCacheSize\n                    type: object\n                    properties:\n                      localScore:\n                        type: integer\n                        format: int64\n                      currentBestChannel:\n                        type: string\n                      scoresCacheSize:\n                        type: integer\n                        format: int64\n                  minerState:\n                    type: string\n        '403':\n          $ref: '#/components/responses/ApiKeyNotValid'\n      security:\n        - APIKey: []\n  '/debug/stateHash/{height}':\n    get:\n      tags:\n        - debug\n      summary: State hash\n      description: \u003e-\n        Get state hash at height. Available only if node configuration contains\n        `waves.db.store-state-hashes = true` option\n      operationId: getStateHash\n      parameters:\n        - name: height\n          in: path\n          description: Target block height\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: State hash\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  blockId:\n                    type: string\n                  wavesBalanceHash:\n                    type: string\n                  assetsBalanceHash:\n                    type: string\n                  dataEntryHash:\n                    type: string\n                  accountScriptHash:\n                    type: string\n                  assetScriptHash:\n                    type: string\n                  leaseBalanceHash:\n                    type: string\n                  leaseStatusHash:\n                    type: string\n                  sponsorshipHash:\n                    type: string\n                  aliasHash:\n                    type: string\n                  stateHash:\n                    type: string\n  /debug/blacklist:\n    post:\n      tags:\n        - debug\n      summary: Ban peer\n      description: \u003e-\n        Move a given peer to the ban list for the time specified in\n        `waves.network.black-list-residence-time`, 15 min by default. The\n        connection to the peer is immediately closed (if it was open)\n      operationId: banPeer\n      requestBody:\n        description: IP address of node\n        content:\n          application/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        '200':\n          description: Success\n          content: {}\n        '403':\n          $ref: '#/components/responses/ApiKeyNotValid'\n        '404':\n          description: There are no peer with such address\n          content: {}\n      security:\n        - APIKey: []\n      x-codegen-request-body-name: address\n  '/debug/portfolios/{address}':\n    get:\n      tags:\n        - debug\n      summary: Portfolio\n      description: \u003e-\n        Get current portfolio considering pessimistic transactions in the UTX\n        pool\n      operationId: getPortfolios\n      parameters:\n        - $ref: '#/components/parameters/address'\n        - name: considerUnspent\n          in: query\n          description: Taking into account pessimistic transactions from UTX pool\n          schema:\n            type: boolean\n            default: true\n      responses:\n        '200':\n          description: Json portfolio\n          content:\n            application/json:\n              schema:\n                required:\n                  - assets\n                  - balance\n                  - lease\n                type: object\n                properties:\n                  balance:\n                    type: integer\n                    format: int64\n                  lease:\n                    required:\n                      - in\n                      - out\n                    type: object\n                    properties:\n                      in:\n                        type: integer\n                        format: int64\n                      out:\n                        type: integer\n                        format: int64\n                  assets:\n                    type: object\n                    additionalProperties:\n                      type: integer\n                      format: int64\n                    description: map of assetId \u003c-\u003e balance\n                    example:\n                      assetId1: 0\n                      assetId2: 100\n        '403':\n          $ref: '#/components/responses/ApiKeyNotValid'\n      security:\n        - APIKey: []\n  '/debug/rollback-to/{id}':\n    delete:\n      tags:\n        - debug\n      summary: Block id\n      description: Rollback the state to the block with a given ID\n      operationId: rollbackToId\n      parameters:\n        - $ref: '#/components/parameters/blockId'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - BlockId\n                type: object\n                properties:\n                  BlockId:\n                    type: string\n        '403':\n          $ref: '#/components/responses/ApiKeyNotValid'\n      security:\n        - APIKey: []\n  /debug/validate:\n    post:\n      tags:\n        - debug\n      summary: Validate Transaction\n      description: \u003e-\n        Validates a transaction and measures time spent in milliseconds. You\n        should use the JSON transaction format with proofs\n      operationId: validateTx\n      requestBody:\n        description: Signed transaction\n        content:\n          application/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - trace\n                  - valid\n                  - validationTime\n                type: object\n                properties:\n                  valid:\n                    type: boolean\n                  validationTime:\n                    type: integer\n                    format: int32\n                  trace:\n                    type: array\n                    items:\n                      type: string\n      x-codegen-request-body-name: transaction\n  '/debug/balances/history/{address}':\n    get:\n      tags:\n        - debug\n      summary: History of regular balance\n      description: \u003e-\n        Get history of the regular balance at a given address. Max depth is set\n        by `waves.db.max-rollback-depth`, 2000 by default\n      operationId: getBalanceHistory\n      parameters:\n        - $ref: '#/components/parameters/address'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  required:\n                    - balance\n                    - height\n                  type: object\n                  properties:\n                    height:\n                      $ref: '#/components/schemas/Height'\n                    balance:\n                      type: integer\n                      format: int64\n  '/debug/stateWaves/{height}':\n    get:\n      tags:\n        - debug\n      summary: Regular address balance at the height\n      description: \u003e-\n        Regular address balance at the height. Max number of blocks back from\n        the current height is set by `waves.db.max-rollback-depth`, 2000 by\n        default\n      operationId: getWavesDistributionAtHeight\n      parameters:\n        - name: height\n          in: path\n          description: Height\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: integer\n                  format: int64\n                description: map of address \u003c-\u003e balance\n                example:\n                  addr1: 0\n                  addr2: 100\n        '403':\n          $ref: '#/components/responses/ApiKeyNotValid'\n      security:\n        - APIKey: []\n  /debug/rollback:\n    post:\n      tags:\n        - debug\n      summary: Rollback to height\n      description: \u003e-\n        Removes all blocks after a given height. Max number of blocks back from\n        the current height is set by `waves.db.max-rollback-depth`, 2000 by\n        default\n      operationId: rollbackToHeight\n      requestBody:\n        description: JSON with data\n        content:\n          application/json:\n            schema:\n              required:\n                - returnTransactionsToUtx\n                - rollbackTo\n              type: object\n              properties:\n                rollbackTo:\n                  type: integer\n                  format: int32\n                returnTransactionsToUtx:\n                  type: boolean\n        required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - BlockId\n                type: object\n                properties:\n                  BlockId:\n                    type: string\n        '403':\n          $ref: '#/components/responses/ApiKeyNotValid'\n      security:\n        - APIKey: []\n      x-codegen-request-body-name: body\n  /debug/minerInfo:\n    get:\n      tags:\n        - debug\n      summary: State\n      description: All miner info you need to debug\n      operationId: getGeneratingInfo\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - address\n                  - miningBalance\n                  - timestamp\n                type: object\n                properties:\n                  address:\n                    type: string\n                  miningBalance:\n                    type: integer\n                    format: int64\n                  timestamp:\n                    type: integer\n                    format: int64\n        '403':\n          $ref: '#/components/responses/ApiKeyNotValid'\n      security:\n        - APIKey: []\n  /debug/configInfo:\n    get:\n      tags:\n        - debug\n      summary: Config\n      description: Currently running node config\n      operationId: getConfig\n      parameters:\n        - name: full\n          in: query\n          description: Exposes full typesafe config\n          schema:\n            type: boolean\n            default: false\n      responses:\n        '200':\n          description: Json config\n          content: {}\n        '403':\n          $ref: '#/components/responses/ApiKeyNotValid'\n      security:\n        - APIKey: []\n  /node/stop:\n    post:\n      tags:\n        - node\n      summary: Stop\n      description: Stop the node\n      operationId: stopNode\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - stopped\n                type: object\n                properties:\n                  stopped:\n                    type: boolean\n        '403':\n          $ref: '#/components/responses/ApiKeyNotValid'\n      security:\n        - APIKey: []\n  /node/status:\n    get:\n      tags:\n        - node\n      summary: Status\n      description: Get status of the running core\n      operationId: getNodeStatus\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - blockchainHeight\n                  - stateHeight\n                  - updatedDate\n                  - updatedTimestamp\n                type: object\n                properties:\n                  blockchainHeight:\n                    $ref: '#/components/schemas/Height'\n                  stateHeight:\n                    $ref: '#/components/schemas/Height'\n                  updatedTimestamp:\n                    $ref: '#/components/schemas/Timestamp'\n                  updatedDate:\n                    type: string\n  /node/version:\n    get:\n      tags:\n        - node\n      summary: Version\n      description: Get Waves node version\n      operationId: getNodeVersion\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - version\n                type: object\n                properties:\n                  version:\n                    type: string\ncomponents:\n  schemas:\n    Timestamp:\n      type: integer\n      format: int64\n      minimum: 0\n      example: 1460678400000\n    Height:\n      type: integer\n      format: int32\n      minimum: 1\n      example: 1610000\n    Hash:\n      type: string\n      pattern: '^[1-9A-HJ-NP-Za-km-z]{32,44}$'\n      example: DG2xFkPdDwKUoBkzGAhQtLpSGzfXLiCYPEzeKH2Ad24p\n    Signature:\n      type: string\n    Proof:\n      type: string\n    AssetId:\n      allOf:\n        - $ref: '#/components/schemas/Hash'\n    BlockId:\n      oneOf:\n        - $ref: '#/components/schemas/Signature'\n        - $ref: '#/components/schemas/Hash'\n    AssetName:\n      type: string\n      minLength: 4\n      maxLength: 16\n    AssetDescription:\n      type: string\n      maxLength: 1000\n    AssetDecimals:\n      type: integer\n      minimum: 0\n      maximum: 8\n      example: 2\n    LeaseId:\n      description: Lease ID\n      allOf:\n        - $ref: '#/components/schemas/Hash'\n    TransactionId:\n      allOf:\n        - $ref: '#/components/schemas/Hash'\n    Address:\n      type: string\n      pattern: '^[1-9A-HJ-NP-Za-km-z]{35}$'\n      example: 3P274YB5qseSE9DTTL3bpSjosZrYBPDpJ8k\n    Alias:\n      type: string\n      pattern: '^alias\\:.:[\\-\\.0-9@_a-z]{4,30}$'\n    AddressOrAlias:\n      oneOf:\n        - $ref: '#/components/schemas/Address'\n        - $ref: '#/components/schemas/Alias'\n    PublicKey:\n      type: string\n      example: 2eEUvypDSivnzPiLrbYEW39SM8yMZ1aq4eJuiKfs4sEY\n    Amount:\n      type: integer\n      format: int64\n      minimum: 0\n    TransactionBase:\n      type: object\n      required: [id, timestamp, type, fee]\n      properties:\n        timestamp:\n          $ref: '#/components/schemas/Timestamp'\n        sender:\n          allOf:\n            - $ref: '#/components/schemas/Address'\n          readOnly: true\n        senderPublicKey:\n          $ref: '#/components/schemas/PublicKey'\n        id:\n          allOf:\n            - $ref: '#/components/schemas/TransactionId'\n          readOnly: true\n        applicationStatus:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationStatus'\n          readOnly: true\n        version:\n          type: integer\n          minimum: 1\n        type:\n          type: integer\n          minimum: 1\n        proofs:\n          type: array\n          items:\n            $ref: '#/components/schemas/Proof'\n        signature:\n          $ref: '#/components/schemas/Signature'\n        fee:\n          $ref: '#/components/schemas/Amount'\n        feeAssetId:\n          allOf:\n            - $ref: '#/components/schemas/AssetId'\n          nullable: true\n    TransactionInfo:\n      allOf:\n        - $ref: '#/components/schemas/TransactionBase'\n        - type: object\n          required: [height, sender, senderPublicKey, proofs, signature]\n    ApiError:\n      required:\n        - error\n        - message\n      type: object\n      properties:\n        error:\n          type: integer\n          format: int32\n        message:\n          type: string\n    AssetDistribution:\n      required:\n        - hasNext\n        - last\n        - values\n      type: object\n      properties:\n        hasNext:\n          type: boolean\n        last:\n          $ref: '#/components/schemas/Address'\n        values:\n          additionalProperties:\n            type: integer\n            format: int64\n          description: map of assetId \u003c-\u003e balance\n          example:\n            2eEUvypDSivnzPiLrbYEW39SM8yMZ1aq4eJuiKfs4sEY: 15\n            3PPqZ623dAfbmxmnpTjwV6yD5GA5s3PJiUG: 25\n    AssetDetailsBase:\n      type: object\n      required:\n        - assetId\n        - name\n        - description\n        - quantity\n        - decimals\n      properties:\n        assetId:\n          $ref: '#/components/schemas/AssetId'\n        name:\n          $ref: '#/components/schemas/AssetName'\n        description:\n          $ref: '#/components/schemas/AssetDescription'\n        decimals:\n          $ref: '#/components/schemas/AssetDecimals'\n    AssetDetails:\n      allOf:\n        - $ref: '#/components/schemas/AssetDetailsBase'\n        - type: object\n          required:\n            - issueHeight\n            - issueTimestamp\n            - issuer\n            - minSponsoredAssetFee\n            - reissuable\n            - scriptDetails\n            - scripted\n            - originTransactionId\n          properties:\n            issueHeight:\n              $ref: '#/components/schemas/Height'\n            issueTimestamp:\n              $ref: '#/components/schemas/Timestamp'\n            issuer:\n              $ref: '#/components/schemas/Address'\n            issuerPublicKey:\n              $ref: '#/components/schemas/PublicKey'\n            reissuable:\n              type: boolean\n            scripted:\n              type: boolean\n            minSponsoredAssetFee:\n              type: integer\n              format: int64\n            originTransactionId:\n              type: string\n            scriptDetails:\n              type: object\n              required:\n                - script\n                - scriptComplexity\n                - scriptText\n              properties:\n                scriptComplexity:\n                  type: integer\n                  format: int32\n                script:\n                  type: string\n                  format: byte\n                scriptText:\n                  type: string\n    AssetBalanceAndDetails:\n      required:\n        - assetId\n        - balance\n        - issueTransaction\n        - minSponsoredAssetFee\n        - quantity\n        - reissuable\n        - sponsorBalance\n      type: object\n      properties:\n        assetId:\n          type: string\n          description: Asset ID base58 encoded\n        balance:\n          type: integer\n          format: int64\n          description: Account balance in the asset\n        reissuable:\n          type: boolean\n          description: Indicates if the asset is reissuable\n        minSponsoredAssetFee:\n          type: integer\n          format: int64\n          nullable: true\n          description: \u003e-\n            For [sponsored\n            asset](https://docs.waves.tech/en/blockchain/waves-protocol/sponsored-fee)\n            only: the equivalent of 0.001 WAVES\n        sponsorBalance:\n          type: integer\n          format: int64\n          nullable: true\n          description: \u003e-\n            For [sponsored\n            asset](https://docs.waves.tech/en/blockchain/waves-protocol/sponsored-fee)\n            only: the sponsor balance in WAVES\n        quantity:\n          type: integer\n          format: int64\n          description: Total supply of the asset\n        issueTransaction:\n          $ref: '#/components/schemas/IssueTransaction'\n    AssetBalancesResponse:\n      required:\n        - address\n        - balances\n      type: object\n      properties:\n        address:\n          type: string\n        balances:\n          type: array\n          items:\n            $ref: '#/components/schemas/AssetBalanceAndDetails'\n    Balance:\n      required:\n        - address\n        - balance\n        - confirmations\n      type: object\n      properties:\n        address:\n          type: string\n        confirmations:\n          type: integer\n          format: int32\n        balance:\n          type: integer\n          format: int64\n    BlockHeader:\n      required:\n        - blocksize\n        - generator\n        - generatorPublicKey\n        - height\n        - nxt-consensus\n        - reference\n        - signature\n        - timestamp\n        - totalFee\n        - transactionCount\n        - version\n        - VRF\n        - transactionsRoot\n      type: object\n      properties:\n        timestamp:\n          type: integer\n          format: int64\n        version:\n          type: integer\n          format: int32\n        height:\n          $ref: '#/components/schemas/Height'\n        totalFee:\n          type: integer\n          format: int64\n        reference:\n          type: string\n        generator:\n          $ref: '#/components/schemas/Address'\n        generatorPublicKey:\n          $ref: '#/components/schemas/PublicKey'\n        signature:\n          type: string\n        id:\n          type: string\n        nxt-consensus:\n          required:\n            - base-target\n            - generation-signature\n          type: object\n          properties:\n            base-target:\n              type: integer\n              format: int64\n            generation-signature:\n              type: string\n        blocksize:\n          type: integer\n          format: int32\n        transactionCount:\n          type: integer\n          format: int32\n        features:\n          type: array\n          items:\n            type: integer\n            format: int32\n        reward:\n          type: integer\n          format: int64\n        desiredReward:\n          type: integer\n          format: int64\n        VRF:\n          type: string\n        transactionsRoot:\n          type: string\n    Block:\n      allOf:\n        - $ref: '#/components/schemas/BlockHeader'\n        - type: object\n          required:\n            - transactions\n          properties:\n            transactions:\n              type: array\n              items:\n                $ref: '#/components/schemas/Transaction'\n    CompiledScript:\n      required:\n        - script\n        - complexity\n        - verifierComplexity\n        - callableComplexities\n        - extraFee\n      type: object\n      properties:\n        script:\n          type: string\n          format: byte\n          nullable: true\n          description: Compiled script in base64 representation\n        complexity:\n          type: integer\n          format: int64\n          description: The maximum of `callableComplexities` and `verifierComplexity`\n        verifierComplexity:\n          type: integer\n          format: int64\n          description: \u003e-\n            [Complexity](https://docs.waves.tech/en/ride/base-concepts/complexity)\n            of an account or asset script or the verifier function of the dApp\n            script\n        callableComplexities:\n          type: object\n          description: \u003e-\n            Complexity of callable functions of the dApp script. Empty for an\n            account script or asset script\n        extraFee:\n          type: integer\n          format: int64\n          description: \u003e-\n            Extra fee for transactions sending on behalf of the dApp or smart\n            account or transactions involving the asset\n    ScriptMeta:\n      required:\n        - callableFuncTypes\n        - version\n      type: object\n      properties:\n        version:\n          type: string\n        isArrayArguments:\n          type: boolean\n        callableFuncTypes:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              required:\n                - name\n                - type\n              type: object\n              properties:\n                name:\n                  type: string\n                type:\n                  type: string\n    BinaryEntry:\n      required:\n        - key\n        - type\n        - value\n      type: object\n      properties:\n        key:\n          type: string\n        type:\n          type: string\n          enum:\n            - binary\n        value:\n          type: string\n          format: byte\n    BooleanEntry:\n      required:\n        - key\n        - type\n        - value\n      type: object\n      properties:\n        key:\n          type: string\n        type:\n          type: string\n          enum:\n            - boolean\n        value:\n          type: boolean\n    IntegerEntry:\n      required:\n        - key\n        - type\n        - value\n      type: object\n      properties:\n        key:\n          type: string\n        type:\n          type: string\n          enum:\n            - integer\n        value:\n          type: integer\n          format: int64\n    StringEntry:\n      required:\n        - key\n        - type\n        - value\n      type: object\n      properties:\n        key:\n          type: string\n        type:\n          type: string\n          enum:\n            - string\n        value:\n          type: string\n    DataEntry:\n      oneOf:\n        - $ref: '#/components/schemas/BinaryEntry'\n        - $ref: '#/components/schemas/BooleanEntry'\n        - $ref: '#/components/schemas/IntegerEntry'\n        - $ref: '#/components/schemas/StringEntry'\n      discriminator:\n        propertyName: type\n        mapping:\n          binary: '#/components/schemas/BinaryEntry'\n          boolean: '#/components/schemas/BooleanEntry'\n          integer: '#/components/schemas/IntegerEntry'\n          string: '#/components/schemas/StringEntry'\n    DeleteEntry:\n      required:\n        - key\n        - value\n      type: object\n      properties:\n        key:\n          type: string\n        value:\n          nullable: true\n          description: null for entry deletion\n    HashedMessage:\n      required:\n        - hash\n        - message\n      type: object\n      properties:\n        message:\n          type: string\n        hash:\n          $ref: '#/components/schemas/Hash'\n    Order:\n      type: object\n      properties:\n        version:\n          type: integer\n          format: int32\n        id:\n          type: string\n        sender:\n          allOf:\n            - $ref: '#/components/schemas/Address'\n          readOnly: true\n        senderPublicKey:\n          $ref: '#/components/schemas/PublicKey'\n        matcherPublicKey:\n          $ref: '#/components/schemas/PublicKey'\n        assetPair:\n          type: object\n          properties:\n            amountAsset:\n              type: string\n              nullable: true\n            priceAsset:\n              type: string\n              nullable: true\n        orderType:\n          type: string\n          enum:\n            - buy\n            - sell\n        amount:\n          $ref: '#/components/schemas/Amount'\n        price:\n          $ref: '#/components/schemas/Amount'\n        timestamp:\n          $ref: '#/components/schemas/Timestamp'\n        expiration:\n          $ref: '#/components/schemas/Timestamp'\n        matcherFee:\n          $ref: '#/components/schemas/Amount'\n        signature:\n          $ref: '#/components/schemas/Signature'\n        proofs:\n          type: array\n          items:\n            $ref: '#/components/schemas/Signature'\n        matcherFeeAssetId:\n          $ref: '#/components/schemas/AssetId'\n    RewardStatus:\n      required:\n        - currentReward\n        - height\n        - minIncrement\n        - nextCheck\n        - term\n        - totalWavesAmount\n        - votes\n        - votingInterval\n        - votingIntervalStart\n        - votingThreshold\n      type: object\n      properties:\n        height:\n          $ref: '#/components/schemas/Height'\n        totalWavesAmount:\n          $ref: '#/components/schemas/Amount'\n        currentReward:\n          $ref: '#/components/schemas/Amount'\n        minIncrement:\n          $ref: '#/components/schemas/Amount'\n        term:\n          type: integer\n          format: int32\n        nextCheck:\n          $ref: '#/components/schemas/Height'\n        votingIntervalStart:\n          $ref: '#/components/schemas/Height'\n        votingInterval:\n          type: integer\n          format: int32\n        votingThreshold:\n          type: integer\n          format: int32\n        votes:\n          type: object\n          required: [decrease, increase]\n          properties:\n            increase:\n              type: integer\n              format: int32\n            decrease:\n              type: integer\n              format: int32\n    Signed:\n      type: object\n      properties:\n        message:\n          type: string\n          description: plain text\n        publicKey:\n          $ref: '#/components/schemas/PublicKey'\n        signature:\n          $ref: '#/components/schemas/Signature'\n    NonGenesisTransaction:\n      required: [sender, senderPublicKey, applicationStatus, version, proofs, signature, feeAssetId]\n      allOf:\n        - $ref: '#/components/schemas/TransactionBase'\n      oneOf:\n        - $ref: '#/components/schemas/BurnTransaction'\n        - $ref: '#/components/schemas/CreateAliasTransaction'\n        - $ref: '#/components/schemas/DataTransaction'\n        - $ref: '#/components/schemas/ExchangeTransaction'\n        - $ref: '#/components/schemas/GenesisTransaction'\n        - $ref: '#/components/schemas/InvokeScriptTransaction'\n        - $ref: '#/components/schemas/IssueTransaction'\n        - $ref: '#/components/schemas/LeaseCancelTransaction'\n        - $ref: '#/components/schemas/LeaseTransaction'\n        - $ref: '#/components/schemas/MassTransferTransaction'\n        - $ref: '#/components/schemas/ReissueTransaction'\n        - $ref: '#/components/schemas/SetAssetScriptTransaction'\n        - $ref: '#/components/schemas/SetScriptTransaction'\n        - $ref: '#/components/schemas/SponsorFeeTransaction'\n        - $ref: '#/components/schemas/TransferTransaction'\n        - $ref: '#/components/schemas/UpdateAssetInfoTransaction'\n    Transaction:\n      oneOf:\n        - $ref: '#/components/schemas/GenesisTransaction'\n        - $ref: '#/components/schemas/NonGenesisTransaction'\n    ApplicationStatus:\n      type: string\n      enum:\n        - succeeded\n        - script_execution_failed\n      description: |\n        * `succeeded`: transaction is successful\n        * `script_execution_failed`: the dApp script or the asset script failed\n\n        See [Transaction Validation](https://docs.waves.tech/en/blockchain/transaction/transaction-validation) for details.\n    LeaseStatus:\n      type: string\n      enum:\n        - active\n        - canceled\n      description: |\n        * `active`: lease is active; \n        * `canceled`: lease has been canceled\n    LeaseInfo:\n      required:\n        - id\n        - originTransactionId\n        - sender\n        - recipient\n        - amount\n        - height\n        - status\n      type: object\n      properties:\n        id:\n          allOf:\n            - $ref: '#/components/schemas/LeaseId'\n          description: Lease ID\n        originTransactionId:\n          allOf:\n            - $ref: '#/components/schemas/TransactionId'\n          description: ID of Lease or Invoke Script transaction that created the lease\n        sender:\n          $ref: '#/components/schemas/Address'\n        recipient:\n          allOf:\n            - $ref: '#/components/schemas/Address'\n          description: Lease recipient address\n        amount:\n          type: integer\n          format: int32\n          description: Leased WAVES amount\n          allOf:\n            - $ref: '#/components/schemas/Amount'\n        height:\n          allOf:\n            - $ref: '#/components/schemas/Height'\n          description: \u003e-\n            The sequential number of the block that contains the origin transaction\n        status:\n          $ref: '#/components/schemas/LeaseStatus'\n        cancelHeight:\n          allOf:\n            - $ref: '#/components/schemas/Height'\n          description: \"The sequential number of the block that contains the cancel transaction\"\n        cancelTransactionId:\n          allOf:\n            - $ref: '#/components/schemas/TransactionId'\n          description: ID of Lease Cancel or Invoke Script transaction that canceled the lease\n    TransactionStatus:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/TransactionId'\n        status:\n          type: string\n          enum:\n            - confirmed\n            - unconfirmed\n            - not_found\n          description: |\n            * `not_found`: transaction is not found\n            * `unconfirmed`: transaction is in the UTX pool\n            * `confirmed`: transaction is added to the block or microblock\n        height:\n          allOf:\n            - $ref: '#/components/schemas/Height'\n          description: The sequential number of the block that contains the transaction\n        confirmations:\n          type: integer\n          format: int32\n          description: \u003e-\n            Number of blocks added on top of the one that contains the\n            transaction\n        applicationStatus:\n          $ref: '#/components/schemas/ApplicationStatus'\n    TransactionMerkleProofs:\n      required:\n        - id\n        - merkleProof\n        - transactionIndex\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/TransactionId'\n        transactionIndex:\n          type: integer\n          format: int32\n          description: Sequential number of the transaction in the block\n        merkleProof:\n          type: array\n          description: 'Array of sibling hashes of the Merkle tree, bottom-to-top'\n          items:\n            $ref: '#/components/schemas/Hash'\n    BurnTransaction:\n      type: object\n      required: [assetId, amount]\n      properties:\n        assetId:\n          $ref: '#/components/schemas/AssetId'\n        amount:\n          $ref: '#/components/schemas/Amount'\n    CreateAliasTransaction:\n      type: object\n      required: [alias]\n      properties:\n        alias:\n          type: string\n          pattern: '^[\\-\\.0-9@_a-z]{4,30}$'\n    DataTransaction:\n      type: object\n      required: [data]\n      properties:\n        data:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/DataEntry'\n              - $ref: '#/components/schemas/DeleteEntry'\n    ExchangeTransaction:\n      type: object\n      required:\n        - order1\n        - order2\n        - amount\n        - price\n        - buyMatcherFee\n        - sellMatcherFee\n      properties:\n        order1:\n          $ref: '#/components/schemas/Order'\n        order2:\n          $ref: '#/components/schemas/Order'\n        amount:\n          $ref: '#/components/schemas/Amount'\n        price:\n          $ref: '#/components/schemas/Amount'\n        buyMatcherFee:\n          $ref: '#/components/schemas/Amount'\n        sellMatcherFee:\n          $ref: '#/components/schemas/Amount'\n    GenesisTransaction:\n      type: object\n      required:\n        - id\n        - fee\n        - timestamp\n        - signature\n        - recipient\n        - amount\n      properties:\n        id:\n          $ref: '#/components/schemas/Signature'\n        signature:\n          $ref: '#/components/schemas/Signature'\n        fee:\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 0\n        timestamp:\n          $ref: '#/components/schemas/Timestamp'\n        recipient:\n          $ref: '#/components/schemas/Address'\n        amount:\n          $ref: '#/components/schemas/Amount'\n    InvokeScriptTransaction:\n      type: object\n      required:\n        - dApp\n        - payment\n        - call\n        - stateChanges\n      properties:\n        dApp:\n          $ref: '#/components/schemas/AddressOrAlias'\n        payment:\n          type: array\n          items:\n            type: object\n            properties:\n              amount:\n                $ref: '#/components/schemas/Amount'\n              assetId:\n                allOf:\n                  - $ref: '#/components/schemas/AssetId'\n                nullable: true\n        call:\n          type: object\n          properties:\n            function:\n              type: string\n            args:\n              type: array\n              items:\n                required:\n                  - type\n                  - value\n                type: object\n                properties:\n                  type:\n                    type: string\n                    enum:\n                      - binary\n                      - boolean\n                      - integer\n                      - list\n                      - string\n                  value:\n                    type: object\n                    properties: {}\n                    description: \u003e-\n                      binary/boolean/integer/string value or list of { type,\n                      value } objects\n        stateChanges:\n          $ref: '#/components/schemas/StateChanges'\n    IssueTransaction:\n      type: object\n      required:\n        - assetId\n        - name\n        - quantity\n        - reissuable\n        - decimals\n        - description\n        - script\n      properties:\n        assetId:\n          allOf:\n            - $ref: '#/components/schemas/AssetId'\n          readOnly: true\n        name:\n          $ref: '#/components/schemas/AssetName'\n        quantity:\n          type: integer\n          format: int64\n        reissuable:\n          type: boolean\n        decimals:\n          $ref: '#/components/schemas/AssetDecimals'\n        description:\n          $ref: '#/components/schemas/AssetDescription'\n        script:\n          type: string\n          format: byte\n    LeaseCancelTransaction:\n      type: object\n      required:\n        - leaseId\n        - lease\n      properties:\n        leaseId:\n          $ref: '#/components/schemas/LeaseId'\n        lease:\n          $ref: '#/components/schemas/LeaseInfo'\n    LeaseTransaction:\n      type: object\n      required:\n        - amount\n        - recipient\n      properties:\n        amount:\n          $ref: '#/components/schemas/Amount'\n        recipient:\n          $ref: '#/components/schemas/AddressOrAlias'\n    MassTransferTransaction:\n      type: object\n      required:\n        - assetId\n        - attachment\n        - transfersCount\n        - totalAmount\n        - transfers\n      properties:\n        assetId:\n          type: string\n          nullable: true\n        attachment:\n          type: string\n        transferCount:\n          type: integer\n          format: int32\n          readOnly: true\n        totalAmount:\n          allOf:\n            - $ref: '#/components/schemas/Amount'\n          readOnly: true\n        transfers:\n          type: array\n          items:\n            type: object\n            properties:\n              recipient:\n                $ref: '#/components/schemas/AddressOrAlias'\n              amount:\n                $ref: '#/components/schemas/Amount'\n    ReissueTransaction:\n      type: object\n      required:\n        - assetId\n        - quantity\n        - reissuable\n      properties:\n        assetId:\n          $ref: '#/components/schemas/AssetId'\n        quantity:\n          $ref: '#/components/schemas/Amount'\n        reissuable:\n          type: boolean\n    SetAssetScriptTransaction:\n      type: object\n      required:\n        - assetId\n        - script\n      properties:\n        assetId:\n          $ref: '#/components/schemas/AssetId'\n        script:\n          type: string\n          format: byte\n    SetScriptTransaction:\n      type: object\n      required:\n        - script\n      properties:\n        script:\n          type: string\n          format: byte\n    SponsorFeeTransaction:\n      type: object\n      required:\n        - assetId\n        - minSponsoredAssetFee\n      properties:\n        assetId:\n          $ref: '#/components/schemas/AssetId'\n        minSponsoredAssetFee:\n          type: integer\n          format: int64\n          minimum: 1\n    TransferTransaction:\n      type: object\n      required:\n        - recipient\n        - assetId\n        - amount\n        - attachment\n        - feeAsset\n      properties:\n        recipient:\n          $ref: '#/components/schemas/AddressOrAlias'\n        assetId:\n          allOf:\n            - $ref: '#/components/schemas/AssetId'\n          nullable: true\n        feeAsset:\n          allOf:\n            - $ref: '#/components/schemas/AssetId'\n          nullable: true\n        amount:\n          $ref: '#/components/schemas/Amount'\n        attachment:\n          type: string\n    UpdateAssetInfoTransaction:\n      type: object\n      required:\n        - assetId\n        - name\n        - description\n      properties:\n        assetId:\n          $ref: '#/components/schemas/AssetId'\n        name:\n          $ref: '#/components/schemas/AssetName'\n        description:\n          $ref: '#/components/schemas/AssetDescription'\n    DataAction:\n      oneOf:\n        - $ref: '#/components/schemas/DataEntry'\n        - $ref: '#/components/schemas/DeleteEntry'\n    TransferAction:\n      type: object\n      required:\n        - address\n        - asset\n        - amount\n      properties:\n        address: \n          $ref: '#/components/schemas/Address'\n        asset:\n          allOf:\n            - $ref: '#/components/schemas/AssetId'\n          nullable: true\n        amount:\n          $ref: '#/components/schemas/Amount'\n    IssueAction:\n      allOf:\n        - $ref: '#/components/schemas/AssetDetailsBase'\n        - type: object\n          required:\n            - isReissuable\n            - compiledScript\n          properties:\n            isReissuable:\n              type: boolean\n            compiledScript:\n              type: string\n    ReissueAction:\n      type: object\n      required:\n        - assetId\n        - isReissuable\n        - quantity\n      properties: \n        assetId:\n          $ref: '#/components/schemas/AssetId'\n        isReissuable:\n          type: boolean\n        quantity:\n          type: integer\n          format: int64\n    BurnAction:\n      type: object\n      required:\n        - assetId\n        - quantity\n      properties: {}\n    SponsorFeeAction:\n      type: object\n      required:\n        - assetId\n        - minSponsoredAssetFee\n      properties: {}\n    LeaseAction:\n      allOf:\n        - $ref: '#/components/schemas/LeaseInfo'\n    LeaseCancelAction:\n      type: object\n      required:\n        - recipient\n      properties: {}\n    InvokeAction:\n      type: object\n      required:\n        - dApp\n        - payment\n        - call\n        - stateCahnges\n      properties:\n        error:\n          type: object\n        stateChanges:\n          $ref: '#/components/schemas/StateChanges'\n    StateChanges:\n      type: object\n      required:\n        - data\n        - transfers\n        - issues\n        - reissues\n        - burns\n        - sponsorFees\n        - leases\n        - leaseCancel\n        - invokes\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/DataAction'\n        transfers:\n          type: array\n          items:\n            $ref: '#/components/schemas/TransferAction'\n        issues:\n          type: array\n          items:\n            $ref: '#/components/schemas/IssueAction'\n        reissues:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReissueAction'\n        burns:\n          type: array\n          items:\n            $ref: '#/components/schemas/BurnAction'\n        sponsorFees:\n          type: array\n          items:\n            $ref: '#/components/schemas/SponsorFeeAction'\n        leases:\n          type: array\n          items:\n            $ref: '#/components/schemas/LeaseAction'\n        leaseCancel:\n          type: array\n          items:\n            $ref: '#/components/schemas/LeaseCancelAction'\n        invokes:\n          type: array\n          items:\n            $ref: '#/components/schemas/InvokeAction'\n  responses:\n    Height:\n      description: Block height\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [height]\n            properties:\n              height:\n                $ref: '#/components/schemas/Height'\n    ApiKeyNotValid:\n      description: Provided API key is not correct\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiError'\n          example:\n            error: 2\n            message: Provided API key is not correct\n    BadRequest:\n      description: The request cannot be fulfilled due to bad syntax\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiError'\n  parameters:\n    address:\n      name: address\n      in: path\n      description: Address base58 encoded\n      required: true\n      schema:\n        $ref: '#/components/schemas/Address'\n    assetId:\n      name: assetId\n      in: path\n      description: Asset ID base58 encoded\n      required: true\n      schema:\n        $ref: '#/components/schemas/AssetId'\n    blockId:\n      name: id\n      in: path\n      description: Block ID base58 encoded\n      required: true\n      schema:\n        $ref: '#/components/schemas/BlockId'\n    txId:\n      name: id\n      in: path\n      description: Transaction ID base58 encoded\n      required: true\n      schema:\n        $ref: '#/components/schemas/TransactionId'\n\n  securitySchemes:\n    APIKey:\n      type: apiKey\n      name: X-API-Key\n      in: header"
		}
	},
	"Error": "parse: paths: /transactions/info: get: operation \"getMultipleTxs\": parameters: parse parameter \"id\": schema: parse schema: item: parse schema: reference \"#/components/parameters/txId\": resolve reference \"#/components/parameters/txId\": invalid schema reference \"#/components/parameters/txId\""
}