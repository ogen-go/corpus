{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"path": "openapi/siemens.iotandstorage.iotfileservice/openapi.yml",
			"content": "openapi: 3.0.1\ninfo:\n  title: IoT File API\n  description: \u003e\n    This is a generated connector from [Siemens IoT File Service API](https://developer.mindsphere.io/apis/core-identitymanagement/api-identitymanagement-overview.html) OpenAPI Specification.\n    \n    The IoT File API enables storing and retrieving files for asset (entity) instances.\n  version: 3.2.4\n  x-visibility: external\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials. \n\n    Create a [Siemens MindSphere](https://siemens.mindsphere.io/en) account and\n    obtain tokens by following [this\n    guide](https://developer.mindsphere.io/concepts/concept-roles-scopes.html#iot-file-service)\n  x-ballerina-display:\n    label: Siemens IoT And Storage File Service\n    iconPath: icon.png\npaths:\n  /files/{entityId}/{filepath}:\n    get:\n      tags:\n        - File Service\n      summary: read a file\n      description: Read a file for the specified asset (entity) and path\n      operationId: getFile\n      parameters:\n        - name: entityId\n          in: path\n          description: Id to instance of asset (entity)\n          required: true\n          schema:\n            maxLength: 32\n            minLength: 32\n            pattern: '[a-f0-9]{32}'\n            type: string\n        - name: filepath\n          in: path\n          description: path of the file along with filename\n          required: true\n          schema:\n            type: string\n        - name: If-None-Match\n          in: header\n          description: etag of the latest version (not supported in this release)\n          schema:\n            type: integer\n        - name: range\n          in: header\n          description: Part of a file to return in Bytes, eg bytes=200-600\n          schema:\n            maxLength: 32\n            minLength: 1\n            type: string\n      responses:\n        '200':\n          description: file content\n          headers:\n            description:\n              description: description of the file\n              schema:\n                type: string\n            etag:\n              description: etag of the file\n              schema:\n                type: integer\n            timestamp:\n              schema:\n                type: string\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n            application/json:\n              schema:\n                type: string\n                format: binary\n        '206':\n          description: Partial Content of the file\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n            application/json:\n              schema:\n                type: string\n                format: binary\n        '304':\n          description: not modfied\n          content:\n            application/octet-stream:\n              schema:\n                $ref: '#/components/schemas/notmodified'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/notmodified'\n        '401':\n          description: unauthorized\n          content:\n            application/octet-stream:\n              schema:\n                $ref: '#/components/schemas/unauthorized'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/unauthorized'\n        '404':\n          description: not found\n          content:\n            application/octet-stream:\n              schema:\n                $ref: '#/components/schemas/notfound'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/notfound'\n        '416':\n          description: Range Not Satisfiable\n          content:\n            application/octet-stream:\n              schema:\n                $ref: '#/components/schemas/rangenotsatisfiable'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/rangenotsatisfiable'\n        default:\n          description: unexpected error\n          content:\n            application/octet-stream:\n              schema:\n                $ref: '#/components/schemas/error'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      security:\n        - fileservice:\n            - iot.fil.r\n    # put:\n    #   tags:\n    #     - File Service\n    #   summary: write a file\n    #   description: \u003e\n    #     Create or update a file for the specified asset (entity) and path, with\n    #     the provided content.\n    #   operationId: putFile\n    #   parameters:\n    #     - name: entityId\n    #       in: path\n    #       description: unique identifier of the asset (entity)\n    #       required: true\n    #       schema:\n    #         maxLength: 32\n    #         minLength: 32\n    #         pattern: '[a-f0-9]{32}'\n    #         type: string\n    #     - name: filepath\n    #       in: path\n    #       description: url path of the file along with filename\n    #       required: true\n    #       schema:\n    #         type: string\n    #     - name: part\n    #       in: query\n    #       description: Part number to upload\n    #       schema:\n    #         maximum: 1000\n    #         minimum: 1\n    #         type: integer\n    #     - name: upload\n    #       in: query\n    #       description: upload status to start, complete, and abort multi-part uploads\n    #       schema:\n    #         type: string\n    #         enum:\n    #           - start\n    #           - complete\n    #           - abort\n    #     - name: If-Match\n    #       in: header\n    #       description: etag of the latest version for optimistic locking\n    #       schema:\n    #         type: integer\n    #     - name: timestamp\n    #       in: header\n    #       description: file timestamp\n    #       schema:\n    #         type: string\n    #         format: date-time\n    #     - name: description\n    #       in: header\n    #       description: description of the file\n    #       schema:\n    #         maxLength: 100\n    #         minLength: 1\n    #         type: string\n    #     - name: type\n    #       in: header\n    #       description: type of the file\n    #       schema:\n    #         maxLength: 191\n    #         minLength: 1\n    #         type: string\n    #   requestBody:\n    #     description: the file attached content\n    #     content:\n    #       application/octet-stream:\n    #         schema:\n    #           type: string\n    #           format: binary\n    #     required: true\n    #   responses:\n    #     '201':\n    #       description: created\n    #       headers:\n    #         etag:\n    #           description: etag of the file\n    #           schema:\n    #             type: integer\n    #         Location:\n    #           description: URL of the file\n    #           schema:\n    #             type: string\n    #       content: {}\n    #     '204':\n    #       description: updated\n    #       headers:\n    #         etag:\n    #           description: etag of the file\n    #           schema:\n    #             type: integer\n    #         Location:\n    #           description: URL of the file\n    #           schema:\n    #             type: string\n    #       content: {}\n    #     '400':\n    #       description: bad request\n    #       content:\n    #         '*/*':\n    #           schema:\n    #             $ref: '#/components/schemas/badrequest'\n    #     '401':\n    #       description: unauthorized\n    #       content:\n    #         '*/*':\n    #           schema:\n    #             $ref: '#/components/schemas/unauthorized'\n    #     '404':\n    #       description: not found\n    #       content:\n    #         '*/*':\n    #           schema:\n    #             $ref: '#/components/schemas/notfound'\n    #     '409':\n    #       description: conflict\n    #       content:\n    #         '*/*':\n    #           schema:\n    #             $ref: '#/components/schemas/conflict'\n    #     default:\n    #       description: Unexpected error\n    #       content:\n    #         '*/*':\n    #           schema:\n    #             $ref: '#/components/schemas/error'\n    #   security:\n    #     - fileservice:\n    #         - iot.fil.w\n    #   x-codegen-request-body-name: file\n    delete:\n      tags:\n        - File Service\n      summary: delete a file\n      description: Delete a file for the specified asset (entity) and path.\n      operationId: deleteFile\n      parameters:\n        - name: entityId\n          in: path\n          description: unique identifier of the asset (entity)\n          required: true\n          schema:\n            maxLength: 32\n            minLength: 32\n            pattern: '[a-f0-9]{32}'\n            type: string\n        - name: filepath\n          in: path\n          description: unique identifier of the file\n          required: true\n          schema:\n            maxLength: 100\n            minLength: 1\n            type: string\n      responses:\n        '204':\n          description: deleted\n          content: {}\n        '401':\n          description: unauthorized\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/unauthorized'\n        '404':\n          description: not found\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/notfound'\n        default:\n          description: unexpected error\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/error'\n      security:\n        - fileservice:\n            - iot.fil.d\n  /files/{entityId}:\n    get:\n      tags:\n        - File Service\n      summary: search files\n      description: Search files for the specified asset (entity).\n      operationId: searchFiles\n      parameters:\n        - name: entityId\n          in: path\n          description: asset (entity) instance id\n          required: true\n          schema:\n            maxLength: 32\n            minLength: 32\n            pattern: '[a-f0-9]{32}'\n            type: string\n        - name: offset\n          in: query\n          description: number of files to skip\n          schema:\n            minimum: 0\n            type: number\n            format: integer\n        - name: limit\n          in: query\n          description: maximum number of files to return (max 200)\n          schema:\n            maximum: 200\n            minimum: 1\n            type: integer\n        - name: count\n          in: query\n          description: return total number of matching files\n          schema:\n            type: boolean\n        - name: order\n          in: query\n          description: \u003e-\n            sort based on supported fields - see order syntax for more details\n            (name, path, type, size, timestamp, created, updated)\n          schema:\n            type: string\n        - name: filter\n          in: query\n          description: \u003e-\n            filter based on supported fields - see filter syntax for more\n            details (name, path, type, size, timestamp, created, updated)\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          headers:\n            X-Total-Count:\n              description: number of files matching the filter criteria\n              schema:\n                type: integer\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/file'\n        '400':\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/badrequest'\n        '401':\n          description: unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/unauthorized'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      security:\n        - fileservice:\n            - iot.fil.r\n  /fileslist/{entityId}/{filepath}:\n    get:\n      tags:\n        - File Service\n      summary: list multi part uploads\n      description: List multi part uploads\n      operationId: getFileList\n      parameters:\n        - name: entityId\n          in: path\n          description: Id to instance of asset (entity)\n          required: true\n          schema:\n            maxLength: 32\n            minLength: 32\n            pattern: '[a-f0-9]{32}'\n            type: string\n        - name: filepath\n          in: path\n          description: path of the file\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: multi part list\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/fileslist'\n        '400':\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/badrequest'\n        '401':\n          description: unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/unauthorized'\n        '404':\n          description: not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/notfound'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      security:\n        - fileservice:\n            - iot.fil.r\n  /files/deleteJobs:\n    get:\n      tags:\n        - File Bulk Delete Jobs\n      summary: get all bulk delete jobs\n      description: get all bulk delete jobs submitted by tenant\n      operationId: getDeleteJobs\n      responses:\n        '200':\n          description: \u003e\n            return all bulk delete jobs submitted by the tenant\n\n            1. \u003cb\u003eid\u003c/b\u003e: Job Id created when bulk delete job is accepted\n\n            2. \u003cb\u003etimestamp\u003c/b\u003e: Timestamp when the job was created\n\n            3. \u003cb\u003estatus\u003c/b\u003e: current status of the job. Possible values can be\n            \u003cbr\u003e\u003cb\u003e[IN_PROGRESS, COMPLETED_WITH_ERRORS, COMPLETED, FAILED]\u003c/b\u003e\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/deleteJobsResponse'\n        '401':\n          description: |\n            \u003cb\u003eunauthorized\u003c/b\u003e: Not Authorized to perform this action\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/iotFileError'\n        '429':\n          description: |\n            \u003cb\u003eTooManyRequests\u003c/b\u003e: Too Many Requests\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/iotFileError'\n      security:\n        - fileservice:\n            - iot.fil.d\n    post:\n      tags:\n        - File Bulk Delete Jobs\n      summary: initiate job to delete all files for the given asset identifier\n      description: \u003e\n        1. Delete all the files for a given asset identifier\n\n        2. Files created or updated before the job submission are considered for\n        delete operation.\n\n        3. Supports single asset\n\n        4. There can be only one job with status \"IN_PROGRESS\" for a given\n        asset. HTTP Error 409 (duplicate request) will be thrown if more jobs\n        are submitted for the same asset with IN_PROGRESS status.\n\n        5. \u003ci\u003etimeFrom\u003c/i\u003e and \u003ci\u003etimeTo\u003c/i\u003e window should not exceed 90 days.\n\n        6. If time range is provided, files are deleted whose updated time falls\n        in between \u003ci\u003etimeFrom\u003c/i\u003e and \u003ci\u003etimeTo\u003c/i\u003e range. Time range is\n        granular to second with format \"yyyy-MM-dd'T'HH:mm:ss.SSS\" =\u003e Time\n        fields i.e. \u003ci\u003etimeFrom\u003c/i\u003e \u0026 \u003ci\u003etimeTo\u003c/i\u003e supports second level\n        granularity with format \"yyyy-MM-dd'T'HH:mm:ss.SSS\"\n\n        7. If time range is not provided, all the files created before 90 days\n        of submission of delete job for given asset will be deleted.\n\n        \u003cbr/\u003e\n\n        \u003cb\u003e**Using \u003ci\u003etimeFrom\u003c/i\u003e and \u003ci\u003etimeTo\u003c/i\u003e fields\u003c/b\u003e\n\n        - \u003ci\u003etimeFrom\u003c/i\u003e values should be less than (\u003c) \u003ci\u003etimeTo\u003c/i\u003e values\n        and \u003ci\u003etimeTo\u003c/i\u003e values should be less than equal to (\u003c=) deleteJob\n        submission time\n\n        - If only \u003ci\u003etimeFrom\u003c/i\u003e is provided, files created within 90 days\n        after that time are considered in delete job.\n\n        - If only \u003ci\u003etimeTo\u003c/i\u003e is provided, all the files created on or before\n        90 days of that time are considered for deletion.\n\n        - If \u003ci\u003etimeFrom\u003c/i\u003e and \u003ci\u003etimeTo\u003c/i\u003e is provided, then files created\n        between the two are considered for deletion.\n\n        - \u003ci\u003etimeFrom\u003c/i\u003e and \u003ci\u003etimeTo\u003c/i\u003e are inclusive\n      operationId: submitDeleteJob\n      requestBody:\n        description: bulk delete request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/bulkDeleteRequest'\n        required: true\n      responses:\n        '202':\n          description: bulk delete request has been accepted for processing\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bulkDeleteResponse'\n        '400':\n          description: |\n            Bad request. Possible errors:\n            \u003cbr\u003e\n            \u003ctable\u003e\n              \u003ccolgroup\u003e\n                \u003ccol span=\"1\" style=\"width: 30%;\"\u003e\n                \u003ccol span=\"1\" style=\"width: 70%;\"\u003e\n              \u003c/colgroup\u003e\n              \u003ctr\u003e\n                \u003cth align=\"left\"\u003eCode Suffix\u003c/th\u003e\n                \u003cth align=\"left\"\u003eMessage (parametrized)\u003c/th\u003e\n              \u003c/tr\u003e\n              \u003ctr\u003e\n                \u003ctd\u003eassetIdNullOrEmpty\u003c/td\u003e\n                \u003ctd\u003eAsset id cannot be null or empty.\u003c/td\u003e\n              \u003c/tr\u003e\n              \u003ctr\u003e\n                \u003ctd\u003einvalidTimeRange\u003c/td\u003e\n                \u003ctd\u003etimeFrom cannot be graeter than timeTo parameter\u003c/td\u003e\n              \u003c/tr\u003e\n              \u003ctr\u003e\n                \u003ctd\u003etimeRangeExceeded\u003c/td\u003e\n                \u003ctd\u003eTime range greater than 90 days is not allowed\u003c/td\u003e\n              \u003c/tr\u003e\n              \u003ctr\u003e\n                \u003ctd\u003efutureDateNowAllowed\u003c/td\u003e\n                \u003ctd\u003etimeFrom and timeTo parameter cannot be greater than current time.\u003c/td\u003e\n              \u003c/tr\u003e\n            \u003c/table\u003e\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/iotFileError'\n        '401':\n          description: |\n            \u003cb\u003eunauthorized\u003c/b\u003e: Not Authorized to perform this action\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/iotFileError'\n        '409':\n          description: |\n            \u003cb\u003eduplicate request\u003c/b\u003e: Request is already submitted for asset id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/iotFileError'\n        '429':\n          description: |\n            \u003cb\u003eTooManyRequests\u003c/b\u003e: Too Many Requests\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/iotFileError'\n      security:\n        - fileservice:\n            - iot.fil.d\n      x-codegen-request-body-name: bulk delete request\n  /files/deleteJobs/{id}:\n    get:\n      tags:\n        - File Bulk Delete Jobs\n      summary: get the job status of bulk delete operation\n      description: \u003e\n        1. Fetch the status of bulk delete jobs\n\n        2. timeFrom and timeTo will be part of response if provided in request\n        body while submitting the job.\n\n        3. Status is provide for each asset\n\n        4. Total files to be deleted is mapped against filesToBeDeleted\n\n        5. Total files deleted successfully is mapped against filesDeleted\n\n        6. Files in progress and failed are mapped against filesRemaining.\n\n        7. Files in progress and failed can be differentiated by status.i.e, if\n        status is IN_PROGRESS and filesRemaining is not zero then deletion is in\n        progress for those files and if status is FAILED and filesRemaining in\n        not zero that deletion if failed for those files.\n\n        8. error field will be part of response only if there is some error\n        while deleting the files.\n\n        9. If path is not provided in delete jobs request then path value is\n        considered as root by default and return value is going to be '/'.\n      operationId: getDeleteJobStatus\n      parameters:\n        - name: id\n          in: path\n          description: Job Id of bulk delete operation\n          required: true\n          schema:\n            maxLength: 32\n            minLength: 32\n            pattern: '[a-f0-9]{32}'\n            type: string\n      responses:\n        '200':\n          description: \u003e\n            return bulk delete job by job id submitted by the tenant\n\n            1. \u003cb\u003eid\u003c/B\u003e: Job Id created when bulk delete job is accepted\n\n            2. \u003cb\u003etimestamp\u003c/b\u003e: Timestamp when the job was created\n\n            3. \u003cb\u003estatus\u003c/b\u003e: current status of the job. Possible values can\n            be\u003cbr\u003e\u003cb\u003e[IN_PROGRESS, COMPLETED_WITH_ERRORS, COMPLETED, FAILED]\u003c/b\u003e\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bulkDeleteJobResponse'\n        '401':\n          description: |\n            \u003cb\u003eunauthorized\u003c/b\u003e: Not Authorized to perform this action\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/iotFileError'\n        '404':\n          description: |\n            \u003cb\u003eid not found\u003c/b\u003e: specified JobId not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/iotFileError'\n        '429':\n          description: |\n            \u003cb\u003eTooManyRequests\u003c/b\u003e: Too Many Requests\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/iotFileError'\n      security:\n        - fileservice:\n            - iot.fil.d\ncomponents:\n  schemas:\n    unauthorized:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        message:\n          type: string\n          example: Not authorized to access this resource.\n    badrequest:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        message:\n          type: string\n          example: The request is not valid.\n    rangenotsatisfiable:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        message:\n          type: string\n          example: Requested range not satisfiable\n    notmodified:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        message:\n          type: string\n          example: Resource not modified.\n    notfound:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        message:\n          type: string\n          example: Resource not found.\n    conflict:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        message:\n          type: string\n          example: A newer resource version is available.\n    error:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        message:\n          type: string\n    file:\n      type: object\n      properties:\n        name:\n          type: string\n          example: filename\n        path:\n          type: string\n          example: directory1\n        type:\n          type: string\n          example: image\n        size:\n          type: integer\n          format: int64\n          example: 1048576\n        timestamp:\n          type: string\n          format: date-time\n          example: 2017-10-01T00:00:00.001Z\n        created:\n          type: string\n          format: date-time\n          example: 2017-10-01T00:00:00.001Z\n        updated:\n          type: string\n          format: date-time\n          example: 2017-10-01T00:00:00.001Z\n        createdBy:\n          type: string\n          example: user ID\n        updatedBy:\n          type: string\n          example: user ID\n        description:\n          type: string\n          example: some description\n        etag:\n          type: integer\n          example: 1\n    fileslist:\n      type: object\n      properties:\n        objectKey:\n          type: string\n          example: aznfriot/fdf4cc6a51e0411389020dcf8a9936c5/xyz1\n        partNo:\n          type: integer\n          example: 1\n        created:\n          type: string\n          format: date-time\n          example: 2017-10-01T00:00:00.001Z\n    bulkDeleteRequest:\n      type: object\n      properties:\n        assets:\n          $ref: '#/components/schemas/bulkDeleteAssetsArray'\n    bulkDeleteAssetsArray:\n      maxItems: 1\n      minItems: 1\n      type: array\n      items:\n        $ref: '#/components/schemas/bulkDeleteAsset'\n    bulkDeleteAsset:\n      required:\n        - id\n      type: object\n      properties:\n        id:\n          maxLength: 32\n          minLength: 32\n          pattern: '[0-9a-f]+'\n          type: string\n          description: Unique identifier for asset instance\n          example: 089336872ce342aba1a847f53d515dc7\n        timeFrom:\n          type: string\n          description: \u003e\n            files created after this time are considered for deletion, If not\n            provided, all the files created before submittion of job get\n            deleted.\n\n            UTC aligned date-time with ISO date format is supported.\n\n            \"2020-03-01Z\"\n\n            \"2020-03-01T09Z\"\n\n            \"2020-03-01T09:12Z\"\n\n            \"2020-03-01T09:12:28Z\"\n\n            \"2020-03-01T09:12:28.110Z\"\n          format: date-time\n          example: 2020-03-01T09:12:28.110Z\n        timeTo:\n          type: string\n          description: \u003e\n            files created before this time are considered for deletion, If not\n            provided, all the files created before submittion of job get\n            deleted. UTC aligned date-time with ISO date format is supported.\n\n            UTC aligned date-time with ISO date format is supported.\n\n            \"2020-06-01Z\"\n\n            \"2020-06-01T09Z\"\n\n            \"2020-06-01T09:12Z\"\n\n            \"2020-06-01T09:12:28Z\"\n\n            \"2020-06-01T09:12:28.110Z\"\n          format: date-time\n          example: 2020-06-01T09:12:28.110Z\n    bulkDeleteResponse:\n      required:\n        - id\n        - status\n        - timestamp\n      type: object\n      properties:\n        id:\n          type: string\n          description: unique Identifier for the delete job\n          example: a87d8d68-9d6d-42f8-9eb9-8899fa90bb3f\n        timestamp:\n          type: string\n          description: time when the delete job submitted\n          format: date-time\n          example: 2020-06-08T09:12:28.000Z\n        status:\n          type: string\n          description: overall status of delete job\n          enum:\n            - IN_PROGRESS\n            - COMPLETED_WITH_ERRORS\n            - COMPLETED\n            - FAILED\n    deleteJobsResponse:\n      type: object\n      properties:\n        deleteJobs:\n          $ref: '#/components/schemas/bulkDeleteResponseArray'\n    bulkDeleteResponseArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/bulkDeleteResponse'\n    iotFileError:\n      type: object\n      properties:\n        errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/errorBody'\n    errorBody:\n      type: object\n      properties:\n        code:\n          type: string\n          example: mdsp.iot.iotfile.error\n        logref:\n          type: string\n          example: 22f316b4-81c6-4658-aad1-96d2dae494a3\n        message:\n          type: string\n          example: error message\n    bulkDeleteJobResponse:\n      required:\n        - assets\n        - id\n        - status\n        - timestamp\n      type: object\n      properties:\n        id:\n          type: string\n          description: unique Identifier for delete job\n          example: a87d8d68-9d6d-42f8-9eb9-8899fa90bb3f\n        timestamp:\n          type: string\n          description: time when the delete job submitted\n          format: date-time\n          example: 2020-06-08T09:12:28.000Z\n        status:\n          type: string\n          description: overall status of the job\n          enum:\n            - COMPLETED_WITH_ERRORS\n            - IN_PROGRESS\n            - COMPLETED\n            - FAILED\n        assets:\n          maxItems: 1\n          minItems: 1\n          type: array\n          items:\n            $ref: '#/components/schemas/assetStatus'\n    assetStatus:\n      required:\n        - filesDeleted\n        - filesRemaining\n        - filesToBeDeleted\n        - id\n        - path\n        - status\n      type: object\n      properties:\n        id:\n          type: string\n          description: asset id\n          example: 089336872ce342aba1a847f53d515dc7\n        path:\n          type: string\n          description: \u003e-\n            path from which the files are getting deleted. Default value is '/'\n            considered as root path.\n          example: /\n          default: /\n        timeFrom:\n          type: string\n          description: files created after this time are considered for deletion\n          format: date-time\n          example: 2020-03-01T09:12:28.110Z\n        timeTo:\n          type: string\n          description: files created before this time are considered for deletion\n          format: date-time\n          example: 2020-06-01T09:12:28.110Z\n        status:\n          type: string\n          description: status of file deletion for this asset id\n          enum:\n            - FAILED\n            - COMPLETED_WITH_ERRORS\n            - COMPLETED\n            - IN_PROGRESS\n        filesToBeDeleted:\n          type: integer\n          description: total number of files to be deleted\n          example: 500\n        filesDeleted:\n          type: integer\n          description: total files delete\n          example: 400\n        filesRemaining:\n          type: integer\n          description: \u003e-\n            total files remaining for deletion due to either the job is still in\n            progress or job failed due to some error\n          example: 100\n        error:\n          type: string\n          description: \u003e-\n            error due to which file deletion failed for this asset id. if files\n            deletion is successful then this field will be null.\n          example: Something went wrong while deleting some files\n  securitySchemes:\n    fileservice:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://oauth.simple.api/authorization\n          tokenUrl: https://oauth.simple.api/token\n          scopes:\n            iot.fil.r: read files\n            iot.fil.w: write files\n            iot.fil.d: delete files\n"
		}
	},
	"Error": "make ir: path \"/files/{entityId}/{filepath}\": get: responses: 304: contents: application/octet-stream: octet stream with schema not supported"
}