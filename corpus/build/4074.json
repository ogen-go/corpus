{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/rama-cli"
		},
		"file": {
			"name": "petstore-expanded2-recursiveSchema.yaml",
			"path": "src/test/resources/OA3ParserRecursiveSchema/petstore-expanded2-recursiveSchema.yaml",
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore\n  description: A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification\n  termsOfService: http://swagger.io/terms/\n  contact:\n    name: Swagger API Team\n    email: apiteam@swagger.io\n    url: http://swagger.io\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\nservers:\n  - url: http://petstore.swagger.io/api\npaths:\n  /pets:\n    get:\n      description: |\n        Sed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.\n      operationId: findPets\n      parameters:\n        - name: tags\n          in: query\n          description: tags to filter by\n          required: false\n          style: form\n          schema:\n            type: array\n            items:\n              type: string\n        - name: limit\n          in: query\n          description: maximum number of results to return\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: pet response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/NormalObject\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ObjWithArray\"\n    post:\n      description: Creates a new pet in the store.  Duplicates are allowed\n      operationId: addPet\n      requestBody:\n        description: Pet to add to the store\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NewPet\"\n      responses:\n        \"200\":\n          description: pet response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/RecursiveObject\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ObjWithRecursiveArrayInArray\"\n  /pets/{id}:\n    get:\n      description: Returns a user based on a single ID, if the user does not have access to the pet\n      operationId: find pet by id\n      parameters:\n        - name: id\n          in: path\n          description: ID of pet to fetch\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: pet response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ArrayInArray\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    delete:\n      description: deletes a single pet based on the ID supplied\n      operationId: deletePet\n      parameters:\n        - name: id\n          in: path\n          description: ID of pet to delete\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"204\":\n          description: pet deleted\n        \"208\":\n          description: test reponse for parsing \n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RecursiveCombined\"\n        \"209\":\n          description: test reponse for parsing \n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ObjWithArrayContainingItself\"\n        \"210\":\n          description: test reponse for parsing \n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ObjWithRecursiveObjectInArray\"\n        \"211\":\n          description: test reponse for parsing \n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ObjWithObjWithArrayContainingItself\"\n        \"212\":\n          description: test reponse for parsing \n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ObjWithArrayObjWithArrayContainingItself\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/RecursiveArrayInArray\"\n  \ncomponents:\n  schemas:\n    Pet:\n      allOf:\n        - $ref: \"#/components/schemas/NewPet\"\n        - required:\n            - id\n          properties:\n            id:\n              type: integer\n              format: int64\n            objExample:\n                type: object\n                properties:\n                    objPropA:\n                        type: string\n                    objPropB:\n                        type: integer\n                        format: int32\n                    objPropC:\n                        type: object\n                        properties:\n                            nestedPropA:\n                                type: string\n                            nestedPropB:\n                                type: object\n                                properties:\n                                    nestedNestedPropA:\n                                        type: string\n                                    \n\n    NewPet:\n      required:\n        - name\n      properties:\n        name:\n          type: string\n        tag:\n          type: string\n\n    NormalObject:\n      required:\n        - name\n      properties:\n        name:\n          type: string\n        tag:\n          type: string\n          \n    RecursiveObject:\n      required:\n        - name\n      properties:\n        name:\n          type: string\n        self:\n          $ref: \"#/components/schemas/RecursiveObject\"\n          \n    ArrayInArray:\n      type: array\n      items: \n        $ref: \"#/components/schemas/NormalObject\"\n    \n    RecursiveArrayInArray:\n      type: array\n      items: \n        $ref: \"#/components/schemas/RecursiveArrayInArray\"\n        \n    ObjWithArray:\n      required:\n        - name\n      properties:\n        name:\n          type: string\n        tag:\n          type: array\n          items: \n            $ref: \"#/components/schemas/NormalObject\"\n    \n    ObjWithRecursiveArrayInArray:\n      required:\n        - name\n      properties:\n        name:\n          type: string\n        tag:\n          type: array\n          items: \n            $ref: \"#/components/schemas/RecursiveArrayInArray\"\n            \n    ObjWithRecursiveObjectInArray:\n      required:\n        - name\n      properties:\n        name:\n          type: string\n        tag:\n          type: array\n          items: \n            $ref: \"#/components/schemas/RecursiveObject\"\n            \n    ObjWithArrayObjWithArrayContainingItself:\n      required:\n        - name\n      properties:\n        name:\n          type: string\n        tag:\n          type: array\n          items: \n            $ref: \"#/components/schemas/ObjWithArrayContainingItself\"\n             \n    ObjWithObjWithArrayContainingItself:\n      required:\n        - name\n      properties:\n        name:\n          type: string\n        tag:\n          $ref: \"#/components/schemas/ObjWithArrayContainingItself\"\n            \n    ObjWithArrayContainingItself:\n      required:\n        - name\n      properties:\n        name:\n          type: string\n        tag:\n          type: array\n          items: \n            $ref: \"#/components/schemas/ObjWithArrayContainingItself\"\n        \n            \n    RecursiveCombined:\n      allOf:\n       - $ref: \"#/components/schemas/RecursiveObject\"\n       - $ref: \"#/components/schemas/NormalObject\"\n       - properties:\n          name:\n            type: object\n            allOf:\n            - $ref: \"#/components/schemas/RecursiveObject\"\n            - $ref: \"#/components/schemas/RecursiveCombined\"\n            \n    Error:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n#          type: object\n#           properties:\n#             subProp1:\n#               type: string\n          $ref: \"#/components/schemas/Pet\"\n#           allOf:\n#             - $ref: \"#/components/schemas/Error\"\n#             - properties:\n#                  subProp2:\n#                    type: string "
		}
	},
	"Error": "parse: paths: /pets/{id}: delete: deletePet: responses: 209: unknown status code: 209"
}