{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vanilla/vanilla"
		},
		"file": {
			"name": "reactions.yml",
			"path": "plugins/Reactions/openapi/reactions.yml",
			"content": "openapi: 3.0.2\ninfo:\nx-resourceEvents:\n    reaction:\n        x-addon: \"reactions\"\n        name: \"Reaction\"\n        type: \"reaction\"\npaths:\n    /reactions:\n        get:\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/ReactionType\"\n                                type: array\n                    description: Success\n            tags:\n                - Reactions\n            summary: Get a list of reaction types.\n    \"/reactions/edit/{urlCode}\":\n        get:\n            parameters:\n                - in: path\n                  name: urlCode\n                  required: true\n                  schema:\n                      type: string\n                - description: |\n                      The reaction type ID.\n                  in: query\n                  name: id\n                  required: true\n                  schema:\n                      type: integer\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                $ref: \"#/components/schemas/ReactionType\"\n                    description: Success\n            tags:\n                - Reactions\n            summary: Get a reaction type for editing.\n    \"/reactions/{urlCode}\":\n        get:\n            parameters:\n                - in: path\n                  name: urlCode\n                  required: true\n                  schema:\n                      type: string\n                - description: |\n                      The reaction type ID.\n                  in: query\n                  name: id\n                  required: true\n                  schema:\n                      type: integer\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                $ref: \"#/components/schemas/ReactionType\"\n                    description: Success\n            tags:\n                - Reactions\n            summary: Get a single reaction type.\n        patch:\n            parameters:\n                - in: path\n                  name: urlCode\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                $ref: \"#/components/schemas/ReactionType\"\n                    description: Success\n            tags:\n                - Reactions\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/ReactionType\"\n                required: true\n            summary: Update a reaction type.\n    /discussions:\n        get:\n            parameters:\n                - name: reactionType\n                  description: Get all discussions you have given a specific reaction to.\n                  in: query\n                  schema:\n                      type: string\n                  x-addon: reactions\n            x-addon: vanilla\ncomponents:\n    schemas:\n        ReactionType:\n            properties:\n                active:\n                    description: Is this type available for use?\n                    type: boolean\n                attributes:\n                    description: Metadata.\n                    nullable: true\n                    type: object\n                class:\n                    description: The classification of the type. Directly maps to permissions.\n                    minLength: 1\n                    nullable: true\n                    type: string\n                custom:\n                    description: Is this a non-standard type?\n                    type: boolean\n                description:\n                    description: A user-friendly description.\n                    minLength: 1\n                    type: string\n                hidden:\n                    description: Should this type be hidden from the UI?\n                    type: boolean\n                name:\n                    description: A user-friendly name.\n                    minLength: 1\n                    type: string\n                points:\n                    description: Reputation points to be applied along with this reaction.\n                    type: integer\n                sort:\n                    description: Display order when listing types.\n                    nullable: true\n                    type: integer\n                tagID:\n                    description: The numeric ID of the tag associated with the type.\n                    type: integer\n                urlCode:\n                    description: A URL-safe identifier.\n                    minLength: 1\n                    type: string\n                reactionValue:\n                    description: The reaction's value.\n                    type: integer\n                photoUrl:\n                    description: The URL of the reaction icon.\n                    type: string\n                    format: uri\n            required:\n                - urlCode\n                - name\n                - description\n                - points\n                - class\n                - tagID\n                - attributes\n                - sort\n                - active\n                - custom\n                - hidden\n                - photoUrl\n            type: object\n"
		}
	},
	"Error": "parse: paths: /discussions: get: : responses: no responses"
}