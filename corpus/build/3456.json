{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/zchee/spinctl"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "api/gate/api/openapi.yaml",
			"content": "openapi: 3.0.1\ninfo:\n  contact: {}\n  title: Spinnaker API\n  version: 1.18.2\nservers:\n- url: //localhost/\ntags:\n- description: Amazon Infrastructure Controller\n  name: amazon-infrastructure-controller\n- description: Application Controller\n  name: application-controller\n- description: Artifact Controller\n  name: artifact-controller\n- description: Auth Controller\n  name: auth-controller\n- description: Bake Controller\n  name: bake-controller\n- description: Build Controller\n  name: build-controller\n- description: Cluster Controller\n  name: cluster-controller\n- description: Concourse Controller\n  name: concourse-controller\n- description: Credentials Controller\n  name: credentials-controller\n- description: Ecs Server Group Events Controller\n  name: ecs-server-group-events-controller\n- description: Executions Controller\n  name: executions-controller\n- description: Firewall Controller\n  name: firewall-controller\n- description: Image Controller\n  name: image-controller\n- description: Instance Controller\n  name: instance-controller\n- description: Job Controller\n  name: job-controller\n- description: Load Balancer Controller\n  name: load-balancer-controller\n- description: Network Controller\n  name: network-controller\n- description: Pipeline Config Controller\n  name: pipeline-config-controller\n- description: Pipeline Controller\n  name: pipeline-controller\n- description: Pipeline Templates Controller\n  name: pipeline-templates-controller\n- description: Project Controller\n  name: project-controller\n- description: Pubsub Subscription Controller\n  name: pubsub-subscription-controller\n- description: Reorder Pipelines Controller\n  name: reorder-pipelines-controller\n- description: Search Controller\n  name: search-controller\n- description: Security Group Controller\n  name: security-group-controller\n- description: Server Group Controller\n  name: server-group-controller\n- description: Server Group Manager Controller\n  name: server-group-manager-controller\n- description: Snapshot Controller\n  name: snapshot-controller\n- description: Subnet Controller\n  name: subnet-controller\n- description: Task Controller\n  name: task-controller\n- description: V 2 Canary Config Controller\n  name: v-2-canary-config-controller\n- description: V 2 Canary Controller\n  name: v-2-canary-controller\n- description: V 2 Pipeline Templates Controller\n  name: v-2-pipeline-templates-controller\n- description: Version Controller\n  name: version-controller\n- description: Webhook Controller\n  name: webhook-controller\npaths:\n  /actions/pipelines/reorder:\n    post:\n      deprecated: false\n      operationId: reorderPipelinesUsingPOST\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReorderPipelinesCommand'\n        description: reorderPipelinesCommand\n        required: true\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                type: object\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Re-order pipelines\n      tags:\n      - reorder-pipelines-controller\n      x-codegen-request-body-name: reorderPipelinesCommand\n  /applications:\n    get:\n      deprecated: false\n      operationId: getAllApplicationsUsingGET\n      parameters:\n      - allowEmptyValue: false\n        description: filters results to only include applications deployed in the\n          specified account\n        in: query\n        name: account\n        schema:\n          type: string\n      - allowEmptyValue: false\n        description: filteres results to only include applications owned by the specified\n          email\n        in: query\n        name: owner\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of applications\n      tags:\n      - application-controller\n  /applications/{applicationName}/jobs/{account}/{region}/{name}:\n    get:\n      deprecated: false\n      operationId: getJobUsingGET\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: account\n        in: path\n        name: account\n        required: true\n        schema:\n          type: string\n      - description: applicationName\n        in: path\n        name: applicationName\n        required: true\n        schema:\n          type: string\n      - description: expand\n        in: query\n        name: expand\n        schema:\n          default: \"false\"\n          type: string\n      - description: name\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      - description: region\n        in: path\n        name: region\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get job\n      tags:\n      - job-controller\n  /applications/{applicationName}/serverGroups:\n    get:\n      deprecated: false\n      operationId: getServerGroupsForApplicationUsingGET\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: applicationName\n        in: path\n        name: applicationName\n        required: true\n        schema:\n          type: string\n      - description: cloudProvider\n        in: query\n        name: cloudProvider\n        schema:\n          type: string\n      - description: clusters\n        in: query\n        name: clusters\n        schema:\n          type: string\n      - description: expand\n        in: query\n        name: expand\n        schema:\n          default: \"false\"\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of server groups for a given application\n      tags:\n      - server-group-controller\n  /applications/{applicationName}/serverGroups/{account}/{region}/{serverGroupName}:\n    get:\n      deprecated: false\n      operationId: getServerGroupDetailsUsingGET\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: account\n        in: path\n        name: account\n        required: true\n        schema:\n          type: string\n      - description: applicationName\n        in: path\n        name: applicationName\n        required: true\n        schema:\n          type: string\n      - description: includeDetails\n        in: query\n        name: includeDetails\n        schema:\n          default: \"true\"\n          type: string\n      - description: region\n        in: path\n        name: region\n        required: true\n        schema:\n          type: string\n      - description: serverGroupName\n        in: path\n        name: serverGroupName\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a server group's details\n      tags:\n      - server-group-controller\n  /applications/{application}:\n    get:\n      deprecated: false\n      operationId: getApplicationUsingGET\n      parameters:\n      - description: application\n        in: path\n        name: application\n        required: true\n        schema:\n          type: string\n      - description: expand\n        in: query\n        name: expand\n        schema:\n          default: true\n          type: boolean\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve an application's details\n      tags:\n      - application-controller\n  /applications/{application}/clusters:\n    get:\n      deprecated: false\n      operationId: getClustersUsingGET_2\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: application\n        in: path\n        name: application\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of cluster names for an application, grouped by account\n      tags:\n      - cluster-controller\n  /applications/{application}/clusters/{account}:\n    get:\n      deprecated: false\n      operationId: getClustersUsingGET_1\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: account\n        in: path\n        name: account\n        required: true\n        schema:\n          type: string\n      - description: application\n        in: path\n        name: application\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of clusters for an account\n      tags:\n      - cluster-controller\n  /applications/{application}/clusters/{account}/{clusterName}:\n    get:\n      deprecated: false\n      operationId: getClustersUsingGET\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: account\n        in: path\n        name: account\n        required: true\n        schema:\n          type: string\n      - description: application\n        in: path\n        name: application\n        required: true\n        schema:\n          type: string\n      - description: clusterName\n        in: path\n        name: clusterName\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a cluster's details\n      tags:\n      - cluster-controller\n  /applications/{application}/clusters/{account}/{clusterName}/serverGroups:\n    get:\n      deprecated: false\n      operationId: getServerGroupsUsingGET_1\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: account\n        in: path\n        name: account\n        required: true\n        schema:\n          type: string\n      - description: application\n        in: path\n        name: application\n        required: true\n        schema:\n          type: string\n      - description: clusterName\n        in: path\n        name: clusterName\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of server groups for a cluster\n      tags:\n      - cluster-controller\n  /applications/{application}/clusters/{account}/{clusterName}/serverGroups/{serverGroupName}:\n    get:\n      deprecated: false\n      operationId: getServerGroupsUsingGET\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: account\n        in: path\n        name: account\n        required: true\n        schema:\n          type: string\n      - description: application\n        in: path\n        name: application\n        required: true\n        schema:\n          type: string\n      - description: clusterName\n        in: path\n        name: clusterName\n        required: true\n        schema:\n          type: string\n      - description: serverGroupName\n        in: path\n        name: serverGroupName\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a server group's details\n      tags:\n      - cluster-controller\n  /applications/{application}/clusters/{account}/{clusterName}/serverGroups/{serverGroupName}/scalingActivities:\n    get:\n      deprecated: false\n      operationId: getScalingActivitiesUsingGET\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: account\n        in: path\n        name: account\n        required: true\n        schema:\n          type: string\n      - description: application\n        in: path\n        name: application\n        required: true\n        schema:\n          type: string\n      - description: clusterName\n        in: path\n        name: clusterName\n        required: true\n        schema:\n          type: string\n      - description: provider\n        in: query\n        name: provider\n        schema:\n          default: aws\n          type: string\n      - description: region\n        in: query\n        name: region\n        schema:\n          type: string\n      - description: serverGroupName\n        in: path\n        name: serverGroupName\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of scaling activities for a server group\n      tags:\n      - cluster-controller\n  /applications/{application}/clusters/{account}/{clusterName}/{cloudProvider}/{scope}/serverGroups/target/{target}:\n    get:\n      deprecated: false\n      description: '`scope` is either a zone or a region'\n      operationId: getTargetServerGroupUsingGET\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: account\n        in: path\n        name: account\n        required: true\n        schema:\n          type: string\n      - description: application\n        in: path\n        name: application\n        required: true\n        schema:\n          type: string\n      - description: cloudProvider\n        in: path\n        name: cloudProvider\n        required: true\n        schema:\n          type: string\n      - description: clusterName\n        in: path\n        name: clusterName\n        required: true\n        schema:\n          type: string\n      - description: onlyEnabled\n        in: query\n        name: onlyEnabled\n        schema:\n          type: boolean\n      - description: scope\n        in: path\n        name: scope\n        required: true\n        schema:\n          type: string\n      - description: target\n        in: path\n        name: target\n        required: true\n        schema:\n          type: string\n      - description: validateOldest\n        in: query\n        name: validateOldest\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a server group that matches a target coordinate (e.g., newest,\n        ancestor) relative to a cluster\n      tags:\n      - cluster-controller\n  /applications/{application}/clusters/{account}/{clusterName}/{type}/loadBalancers:\n    get:\n      deprecated: false\n      operationId: getClusterLoadBalancersUsingGET\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: account\n        in: path\n        name: account\n        required: true\n        schema:\n          type: string\n      - description: applicationName\n        in: path\n        name: applicationName\n        required: true\n        schema:\n          type: string\n      - description: clusterName\n        in: path\n        name: clusterName\n        required: true\n        schema:\n          type: string\n      - description: type\n        in: path\n        name: type\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a cluster's loadbalancers\n      tags:\n      - cluster-controller\n  /applications/{application}/executions/search:\n    get:\n      deprecated: false\n      operationId: searchForPipelineExecutionsByTriggerUsingGET\n      parameters:\n      - description: Only includes executions that are part of this application. If\n          this value is \"*\", results will include executions of all applications.\n        in: path\n        name: application\n        required: true\n        schema:\n          type: string\n      - allowEmptyValue: false\n        description: Only includes executions that were triggered by a trigger with\n          this eventId.\n        in: query\n        name: eventId\n        schema:\n          type: string\n      - allowEmptyValue: false\n        description: Expands each execution object in the resulting list. If this\n          value is missing, it is defaulted to false.\n        example: false\n        in: query\n        name: expand\n        schema:\n          default: false\n          type: boolean\n      - allowEmptyValue: false\n        description: Only includes executions that with this pipeline name.\n        in: query\n        name: pipelineName\n        schema:\n          type: string\n      - allowEmptyValue: false\n        description: Reverses the resulting list before it is paginated. If this value\n          is missing, it is defaulted to false.\n        example: false\n        in: query\n        name: reverse\n        schema:\n          default: false\n          type: boolean\n      - allowEmptyValue: false\n        description: Sets the size of the resulting list for pagination. This value\n          must be \u003e 0. If this value is missing, it is defaulted to 10.\n        in: query\n        name: size\n        schema:\n          default: 10\n          format: int32\n          type: integer\n      - allowEmptyValue: false\n        description: Sets the first item of the resulting list for pagination. The\n          list is 0-indexed. This value must be \u003e= 0. If this value is missing, it\n          is defaulted to 0.\n        in: query\n        name: startIndex\n        schema:\n          default: 0\n          format: int32\n          type: integer\n      - allowEmptyValue: false\n        description: 'Only includes executions with a status that is equal to a status\n          provided in this field. The list of statuses should be given as a comma-delimited\n          string. If this value is missing, includes executions of all statuses. Allowed\n          statuses are: NOT_STARTED, RUNNING, PAUSED, SUSPENDED, SUCCEEDED, FAILED_CONTINUE,\n          TERMINAL, CANCELED, REDIRECT, STOPPED, SKIPPED, BUFFERED.'\n        in: query\n        name: statuses\n        schema:\n          type: string\n      - allowEmptyValue: false\n        description: |-\n          Only includes executions that were triggered by a trigger that matches the subset of fields provided by this value. This value should be a base64-encoded string of a JSON representation of a trigger object. The comparison succeeds if the execution trigger contains all the fields of the input trigger, the fields are of the same type, and each value of the field \"matches\". The term \"matches\" is specific for each field's type:\n          - For Strings: A String value in the execution's trigger matches the input trigger's String value if the former equals the latter (case-insensitive) OR if the former matches the latter as a regular expression.\n          - For Maps: A Map value in the execution's trigger matches the input trigger's Map value if the former contains all keys of the latter and their values match.\n          - For Collections: A Collection value in the execution's trigger matches the input trigger's Collection value if the former has a unique element that matches each element of the latter.\n          - Every other value is compared using the Java \"equals\" method (Groovy \"==\" operator)\n        in: query\n        name: trigger\n        schema:\n          type: string\n      - allowEmptyValue: false\n        description: Only includes executions that were built at or before the given\n          time, represented as a Unix timestamp in ms (UTC). This value must be \u003c=\n          9223372036854775807 (Long.MAX_VALUE) and \u003e= the value of [triggerTimeStartBoundary],\n          if provided. If this value is missing, it is defaulted to 9223372036854775807.\n        in: query\n        name: triggerTimeEndBoundary\n        schema:\n          default: 9223372036854775807\n          format: int64\n          type: integer\n      - allowEmptyValue: false\n        description: Only includes executions that were built at or after the given\n          time, represented as a Unix timestamp in ms (UTC). This value must be \u003e=\n          0 and \u003c= the value of [triggerTimeEndBoundary], if provided. If this value\n          is missing, it is defaulted to 0.\n        in: query\n        name: triggerTimeStartBoundary\n        schema:\n          default: 0\n          format: int64\n          type: integer\n      - allowEmptyValue: false\n        description: Only includes executions that were triggered by a trigger with\n          a type that is equal to a type provided in this field. The list of trigger\n          types should be a comma-delimited string. If this value is missing, results\n          will includes executions of all trigger types.\n        in: query\n        name: triggerTypes\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Search for pipeline executions using a combination of criteria. The\n        returned list is sorted by buildTime (trigger time) in reverse order so that\n        newer executions are first in the list.\n      tags:\n      - executions-controller\n  /applications/{application}/functions:\n    get:\n      deprecated: false\n      operationId: applicationFunctionsUsingGET\n      parameters:\n      - description: application\n        in: path\n        name: application\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get application functions\n      tags:\n      - amazon-infrastructure-controller\n  /applications/{application}/history:\n    get:\n      deprecated: false\n      operationId: getApplicationHistoryUsingGET\n      parameters:\n      - description: application\n        in: path\n        name: application\n        required: true\n        schema:\n          type: string\n      - description: limit\n        in: query\n        name: limit\n        schema:\n          default: 20\n          format: int32\n          type: integer\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of an application's configuration revision history\n      tags:\n      - application-controller\n  /applications/{application}/loadBalancers:\n    get:\n      deprecated: false\n      operationId: getApplicationLoadBalancersUsingGET\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: application\n        in: path\n        name: application\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of load balancers for a given application\n      tags:\n      - load-balancer-controller\n  /applications/{application}/pipelineConfigs:\n    get:\n      deprecated: false\n      operationId: getPipelineConfigsForApplicationUsingGET\n      parameters:\n      - description: application\n        in: path\n        name: application\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of an application's pipeline configurations\n      tags:\n      - application-controller\n  /applications/{application}/pipelineConfigs/{pipelineName}:\n    get:\n      deprecated: false\n      operationId: getPipelineConfigUsingGET\n      parameters:\n      - description: application\n        in: path\n        name: application\n        required: true\n        schema:\n          type: string\n      - description: pipelineName\n        in: path\n        name: pipelineName\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a pipeline configuration\n      tags:\n      - application-controller\n    post:\n      deprecated: true\n      operationId: invokePipelineConfigUsingPOST\n      parameters:\n      - description: application\n        in: path\n        name: application\n        required: true\n        schema:\n          type: string\n      - description: pipelineName\n        in: path\n        name: pipelineName\n        required: true\n        schema:\n          type: string\n      - description: user\n        in: query\n        name: user\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: trigger\n        required: false\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpEntity'\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Invoke pipeline config\n      tags:\n      - application-controller\n      x-codegen-request-body-name: trigger\n  /applications/{application}/pipelines:\n    get:\n      deprecated: false\n      operationId: getPipelinesUsingGET\n      parameters:\n      - description: application\n        in: path\n        name: application\n        required: true\n        schema:\n          type: string\n      - description: expand\n        in: query\n        name: expand\n        schema:\n          type: boolean\n      - description: limit\n        in: query\n        name: limit\n        schema:\n          format: int32\n          type: integer\n      - description: statuses\n        in: query\n        name: statuses\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of an application's pipeline executions\n      tags:\n      - application-controller\n  /applications/{application}/pipelines/{id}/cancel:\n    put:\n      deprecated: true\n      operationId: cancelPipelineUsingPUT\n      parameters:\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: reason\n        in: query\n        name: reason\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Cancel pipeline\n      tags:\n      - application-controller\n  /applications/{application}/serverGroupManagers:\n    get:\n      deprecated: false\n      operationId: getServerGroupManagersForApplicationUsingGET\n      parameters:\n      - description: application\n        in: path\n        name: application\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of server group managers for an application\n      tags:\n      - server-group-manager-controller\n  /applications/{application}/serverGroups/{account}/{serverGroupName}/events:\n    get:\n      deprecated: false\n      operationId: getEventsUsingGET\n      parameters:\n      - description: account\n        in: path\n        name: account\n        required: true\n        schema:\n          type: string\n      - description: application\n        in: path\n        name: application\n        required: true\n        schema:\n          type: string\n      - description: provider\n        in: query\n        name: provider\n        required: true\n        schema:\n          type: string\n      - description: region\n        in: query\n        name: region\n        required: true\n        schema:\n          type: string\n      - description: serverGroupName\n        in: path\n        name: serverGroupName\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieves a list of events for a server group\n      tags:\n      - ecs-server-group-events-controller\n  /applications/{application}/snapshots/{account}:\n    get:\n      deprecated: false\n      operationId: getCurrentSnapshotUsingGET\n      parameters:\n      - description: account\n        in: path\n        name: account\n        required: true\n        schema:\n          type: string\n      - description: application\n        in: path\n        name: application\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get current snapshot\n      tags:\n      - snapshot-controller\n  /applications/{application}/snapshots/{account}/history:\n    get:\n      deprecated: false\n      operationId: getSnapshotHistoryUsingGET\n      parameters:\n      - description: account\n        in: path\n        name: account\n        required: true\n        schema:\n          type: string\n      - description: application\n        in: path\n        name: application\n        required: true\n        schema:\n          type: string\n      - description: limit\n        in: query\n        name: limit\n        schema:\n          default: 20\n          format: int32\n          type: integer\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get snapshot history\n      tags:\n      - snapshot-controller\n  /applications/{application}/strategyConfigs:\n    get:\n      deprecated: false\n      operationId: getStrategyConfigsForApplicationUsingGET\n      parameters:\n      - description: application\n        in: path\n        name: application\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of an application's pipeline strategy configurations\n      tags:\n      - application-controller\n  /applications/{application}/strategyConfigs/{strategyName}:\n    get:\n      deprecated: false\n      operationId: getStrategyConfigUsingGET\n      parameters:\n      - description: application\n        in: path\n        name: application\n        required: true\n        schema:\n          type: string\n      - description: strategyName\n        in: path\n        name: strategyName\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a pipeline strategy configuration\n      tags:\n      - application-controller\n  /applications/{application}/tasks:\n    get:\n      deprecated: false\n      operationId: getTasksUsingGET\n      parameters:\n      - description: application\n        in: path\n        name: application\n        required: true\n        schema:\n          type: string\n      - description: limit\n        in: query\n        name: limit\n        schema:\n          format: int32\n          type: integer\n      - description: page\n        in: query\n        name: page\n        schema:\n          format: int32\n          type: integer\n      - description: statuses\n        in: query\n        name: statuses\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of an application's tasks\n      tags:\n      - application-controller\n    post:\n      deprecated: true\n      operationId: taskUsingPOST\n      parameters:\n      - description: application\n        in: path\n        name: application\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: map\n        required: true\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Create task\n      tags:\n      - application-controller\n      x-codegen-request-body-name: map\n  /applications/{application}/tasks/{id}:\n    get:\n      deprecated: true\n      operationId: getTaskUsingGET\n      parameters:\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get task\n      tags:\n      - application-controller\n  /applications/{application}/tasks/{id}/cancel:\n    put:\n      deprecated: true\n      operationId: cancelTaskUsingPUT\n      parameters:\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Cancel task\n      tags:\n      - application-controller\n  /applications/{application}/tasks/{id}/details/{taskDetailsId}:\n    get:\n      deprecated: true\n      operationId: getTaskDetailsUsingGET\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: taskDetailsId\n        in: path\n        name: taskDetailsId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get task details\n      tags:\n      - application-controller\n  /artifacts/account/{accountName}/versions:\n    get:\n      deprecated: false\n      operationId: artifactVersionsUsingGET\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: accountName\n        in: path\n        name: accountName\n        required: true\n        schema:\n          type: string\n      - description: artifactName\n        in: query\n        name: artifactName\n        required: true\n        schema:\n          type: string\n      - description: type\n        in: query\n        name: type\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  type: string\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve the list of artifact versions by account and artifact names\n      tags:\n      - artifact-controller\n  /artifacts/credentials:\n    get:\n      deprecated: false\n      operationId: allUsingGET\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve the list of artifact accounts configured in Clouddriver.\n      tags:\n      - artifact-controller\n  /artifacts/{provider}/{packageName}/{version}:\n    get:\n      deprecated: false\n      operationId: getArtifactUsingGET\n      parameters:\n      - description: packageName\n        in: path\n        name: packageName\n        required: true\n        schema:\n          type: string\n      - description: provider\n        in: path\n        name: provider\n        required: true\n        schema:\n          type: string\n      - description: version\n        in: path\n        name: version\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve the specified artifact version for an artifact provider and\n        package name\n      tags:\n      - artifact-controller\n  /auth/loggedOut:\n    get:\n      deprecated: false\n      operationId: loggedOutUsingGET\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                type: string\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get logged out message\n      tags:\n      - auth-controller\n  /auth/redirect:\n    get:\n      deprecated: false\n      operationId: redirectUsingGET\n      parameters:\n      - description: to\n        in: query\n        name: to\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content: {}\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Redirect to Deck\n      tags:\n      - auth-controller\n  /auth/roles/sync:\n    post:\n      deprecated: false\n      operationId: syncUsingPOST\n      responses:\n        \"200\":\n          content: {}\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Sync user roles\n      tags:\n      - auth-controller\n  /auth/user:\n    get:\n      deprecated: false\n      operationId: userUsingGET\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/User'\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get user\n      tags:\n      - auth-controller\n  /auth/user/serviceAccounts:\n    get:\n      deprecated: false\n      operationId: getServiceAccountsUsingGET\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get service accounts\n      tags:\n      - auth-controller\n  /bakery/logs/{region}/{statusId}:\n    get:\n      deprecated: false\n      operationId: lookupLogsUsingGET\n      parameters:\n      - description: region\n        in: path\n        name: region\n        required: true\n        schema:\n          type: string\n      - description: statusId\n        in: path\n        name: statusId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve the logs for a given bake\n      tags:\n      - bake-controller\n  /bakery/options:\n    get:\n      deprecated: false\n      operationId: bakeOptionsUsingGET_1\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of available bakery base images, grouped by cloud provider\n      tags:\n      - bake-controller\n  /bakery/options/{cloudProvider}:\n    get:\n      deprecated: false\n      operationId: bakeOptionsUsingGET\n      parameters:\n      - description: cloudProvider\n        in: path\n        name: cloudProvider\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of available bakery base images for a given cloud provider\n      tags:\n      - bake-controller\n  /concourse/{buildMaster}/teams/{team}/pipelines:\n    get:\n      deprecated: false\n      operationId: pipelinesUsingGET\n      parameters:\n      - description: buildMaster\n        in: path\n        name: buildMaster\n        required: true\n        schema:\n          type: string\n      - description: team\n        in: path\n        name: team\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve the list of pipeline names for a given team available to triggers\n      tags:\n      - concourse-controller\n  /concourse/{buildMaster}/teams/{team}/pipelines/{pipeline}/jobs:\n    get:\n      deprecated: false\n      operationId: jobsUsingGET\n      parameters:\n      - description: buildMaster\n        in: path\n        name: buildMaster\n        required: true\n        schema:\n          type: string\n      - description: pipeline\n        in: path\n        name: pipeline\n        required: true\n        schema:\n          type: string\n      - description: team\n        in: path\n        name: team\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve the list of job names for a given pipeline available to triggers\n      tags:\n      - concourse-controller\n  /concourse/{buildMaster}/teams/{team}/pipelines/{pipeline}/resources:\n    get:\n      deprecated: false\n      operationId: resourcesUsingGET\n      parameters:\n      - description: buildMaster\n        in: path\n        name: buildMaster\n        required: true\n        schema:\n          type: string\n      - description: pipeline\n        in: path\n        name: pipeline\n        required: true\n        schema:\n          type: string\n      - description: team\n        in: path\n        name: team\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve the list of resource names for a given pipeline available\n        to the Concourse stage\n      tags:\n      - concourse-controller\n  /credentials:\n    get:\n      deprecated: false\n      operationId: getAccountsUsingGET\n      parameters:\n      - in: query\n        name: accountNonExpired\n        schema:\n          type: boolean\n      - in: query\n        name: accountNonLocked\n        schema:\n          type: boolean\n      - explode: true\n        in: query\n        name: allowedAccounts\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - in: query\n        name: authorities[0].authority\n        schema:\n          type: string\n      - in: query\n        name: credentialsNonExpired\n        schema:\n          type: boolean\n      - in: query\n        name: email\n        schema:\n          type: string\n      - in: query\n        name: enabled\n        schema:\n          type: boolean\n      - description: expand\n        in: query\n        name: expand\n        schema:\n          type: boolean\n      - in: query\n        name: firstName\n        schema:\n          type: string\n      - in: query\n        name: lastName\n        schema:\n          type: string\n      - in: query\n        name: password\n        schema:\n          type: string\n      - explode: true\n        in: query\n        name: roles\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - in: query\n        name: username\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  $ref: '#/components/schemas/Account'\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of accounts\n      tags:\n      - credentials-controller\n  /credentials/{account}:\n    get:\n      deprecated: false\n      operationId: getAccountUsingGET\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: account\n        in: path\n        name: account\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: accountNonExpired\n        schema:\n          type: boolean\n      - in: query\n        name: accountNonLocked\n        schema:\n          type: boolean\n      - explode: true\n        in: query\n        name: allowedAccounts\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - in: query\n        name: authorities[0].authority\n        schema:\n          type: string\n      - in: query\n        name: credentialsNonExpired\n        schema:\n          type: boolean\n      - in: query\n        name: email\n        schema:\n          type: string\n      - in: query\n        name: enabled\n        schema:\n          type: boolean\n      - in: query\n        name: firstName\n        schema:\n          type: string\n      - in: query\n        name: lastName\n        schema:\n          type: string\n      - in: query\n        name: password\n        schema:\n          type: string\n      - explode: true\n        in: query\n        name: roles\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - in: query\n        name: username\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AccountDetails'\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve an account's details\n      tags:\n      - credentials-controller\n  /executions:\n    get:\n      deprecated: false\n      operationId: getLatestExecutionsByConfigIdsUsingGET\n      parameters:\n      - allowEmptyValue: false\n        description: A comma-separated list of executions to retrieve. Either this\n          OR pipelineConfigIds must be supplied, but not both.\n        in: query\n        name: executionIds\n        schema:\n          type: string\n      - allowEmptyValue: false\n        description: Expands each execution object in the resulting list. If this\n          value is missing, it is defaulted to true.\n        in: query\n        name: expand\n        schema:\n          default: true\n          type: boolean\n      - allowEmptyValue: false\n        description: The number of executions to return per pipeline configuration.\n          Ignored if executionIds parameter is supplied. If this value is missing,\n          it is defaulted to 1.\n        in: query\n        name: limit\n        schema:\n          format: int32\n          type: integer\n      - allowEmptyValue: false\n        description: A comma-separated list of pipeline configuration IDs to retrieve\n          recent executions for. Either this OR pipelineConfigIds must be supplied,\n          but not both.\n        in: query\n        name: pipelineConfigIds\n        schema:\n          type: string\n      - allowEmptyValue: false\n        description: A comma-separated list of execution statuses to filter by. Ignored\n          if executionIds parameter is supplied. If this value is missing, it is defaulted\n          to all statuses.\n        in: query\n        name: statuses\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieves an ad-hoc collection of executions based on a number of user-supplied\n        parameters. Either executionIds or pipelineConfigIds must be supplied in order\n        to return any results. If both are supplied, an exception will be thrown.\n      tags:\n      - executions-controller\n  /firewalls:\n    get:\n      deprecated: false\n      operationId: allUsingGET_1\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: id\n        in: query\n        name: id\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of firewalls, grouped by account, cloud provider, and\n        region\n      tags:\n      - firewall-controller\n  /firewalls/{account}:\n    get:\n      deprecated: false\n      operationId: allByAccountUsingGET\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: account\n        in: path\n        name: account\n        required: true\n        schema:\n          type: string\n      - description: provider\n        in: query\n        name: provider\n        schema:\n          default: aws\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of firewalls for a given account, grouped by region\n      tags:\n      - firewall-controller\n  /firewalls/{account}/{region}:\n    get:\n      deprecated: false\n      operationId: allByAccountAndRegionUsingGET\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: account\n        in: path\n        name: account\n        required: true\n        schema:\n          type: string\n      - description: provider\n        in: query\n        name: provider\n        schema:\n          default: aws\n          type: string\n      - description: region\n        in: path\n        name: region\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of firewalls for a given account and region\n      tags:\n      - firewall-controller\n  /firewalls/{account}/{region}/{name}:\n    get:\n      deprecated: false\n      operationId: getSecurityGroupUsingGET\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: account\n        in: path\n        name: account\n        required: true\n        schema:\n          type: string\n      - description: name\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      - description: provider\n        in: query\n        name: provider\n        schema:\n          default: aws\n          type: string\n      - description: region\n        in: path\n        name: region\n        required: true\n        schema:\n          type: string\n      - description: vpcId\n        in: query\n        name: vpcId\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a firewall's details\n      tags:\n      - firewall-controller\n  /functions:\n    get:\n      deprecated: false\n      operationId: functionsUsingGET\n      parameters:\n      - description: account\n        in: query\n        name: account\n        schema:\n          type: string\n      - description: functionName\n        in: query\n        name: functionName\n        schema:\n          type: string\n      - description: region\n        in: query\n        name: region\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get functions\n      tags:\n      - amazon-infrastructure-controller\n  /images/find:\n    get:\n      deprecated: false\n      description: The query parameter `q` filters the list of images by image name\n      operationId: findImagesUsingGET\n      parameters:\n      - description: account\n        in: query\n        name: account\n        schema:\n          type: string\n      - description: count\n        in: query\n        name: count\n        schema:\n          format: int32\n          type: integer\n      - description: provider\n        in: query\n        name: provider\n        schema:\n          default: aws\n          type: string\n      - description: q\n        in: query\n        name: q\n        schema:\n          type: string\n      - description: region\n        in: query\n        name: region\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of images, filtered by cloud provider, region, and\n        account\n      tags:\n      - image-controller\n  /images/tags:\n    get:\n      deprecated: false\n      operationId: findTagsUsingGET\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: account\n        in: query\n        name: account\n        required: true\n        schema:\n          type: string\n      - description: provider\n        in: query\n        name: provider\n        schema:\n          default: aws\n          type: string\n      - description: repository\n        in: query\n        name: repository\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Find tags\n      tags:\n      - image-controller\n  /images/{account}/{region}/{imageId}:\n    get:\n      deprecated: false\n      operationId: getImageDetailsUsingGET\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: account\n        in: path\n        name: account\n        required: true\n        schema:\n          type: string\n      - description: imageId\n        in: path\n        name: imageId\n        required: true\n        schema:\n          type: string\n      - description: provider\n        in: query\n        name: provider\n        schema:\n          default: aws\n          type: string\n      - description: region\n        in: path\n        name: region\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get image details\n      tags:\n      - image-controller\n  /instanceTypes:\n    get:\n      deprecated: false\n      operationId: instanceTypesUsingGET\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get instance types\n      tags:\n      - amazon-infrastructure-controller\n  /instances/{account}/{region}/{instanceId}:\n    get:\n      deprecated: false\n      operationId: getInstanceDetailsUsingGET\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: account\n        in: path\n        name: account\n        required: true\n        schema:\n          type: string\n      - description: instanceId\n        in: path\n        name: instanceId\n        required: true\n        schema:\n          type: string\n      - description: region\n        in: path\n        name: region\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve an instance's details\n      tags:\n      - instance-controller\n  /instances/{account}/{region}/{instanceId}/console:\n    get:\n      deprecated: false\n      operationId: getConsoleOutputUsingGET\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: account\n        in: path\n        name: account\n        required: true\n        schema:\n          type: string\n      - description: instanceId\n        in: path\n        name: instanceId\n        required: true\n        schema:\n          type: string\n      - description: provider\n        in: query\n        name: provider\n        schema:\n          default: aws\n          type: string\n      - description: region\n        in: path\n        name: region\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve an instance's console output\n      tags:\n      - instance-controller\n  /loadBalancers:\n    get:\n      deprecated: false\n      operationId: getAllUsingGET\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: provider\n        in: query\n        name: provider\n        schema:\n          default: aws\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of load balancers for a given cloud provider\n      tags:\n      - load-balancer-controller\n  /loadBalancers/{account}/{region}/{name}:\n    get:\n      deprecated: false\n      operationId: getLoadBalancerDetailsUsingGET\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: account\n        in: path\n        name: account\n        required: true\n        schema:\n          type: string\n      - description: name\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      - description: provider\n        in: query\n        name: provider\n        schema:\n          default: aws\n          type: string\n      - description: region\n        in: path\n        name: region\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a load balancer's details as a single element list for a given\n        account, region, cloud provider and load balancer name\n      tags:\n      - load-balancer-controller\n  /loadBalancers/{name}:\n    get:\n      deprecated: false\n      operationId: getLoadBalancerUsingGET\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: name\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      - description: provider\n        in: query\n        name: provider\n        schema:\n          default: aws\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a load balancer for a given cloud provider\n      tags:\n      - load-balancer-controller\n  /networks:\n    get:\n      deprecated: false\n      operationId: allUsingGET_2\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of networks, grouped by cloud provider\n      tags:\n      - network-controller\n  /networks/{cloudProvider}:\n    get:\n      deprecated: false\n      operationId: allByCloudProviderUsingGET\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: cloudProvider\n        in: path\n        name: cloudProvider\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of networks for a given cloud provider\n      tags:\n      - network-controller\n  /pipelineConfigs:\n    get:\n      deprecated: false\n      operationId: getAllPipelineConfigsUsingGET\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get all pipeline configs.\n      tags:\n      - pipeline-config-controller\n  /pipelineConfigs/{pipelineConfigId}/convertToTemplate:\n    get:\n      deprecated: false\n      operationId: convertPipelineConfigToPipelineTemplateUsingGET\n      parameters:\n      - description: pipelineConfigId\n        in: path\n        name: pipelineConfigId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                type: string\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Convert a pipeline config to a pipeline template.\n      tags:\n      - pipeline-config-controller\n  /pipelineConfigs/{pipelineConfigId}/history:\n    get:\n      deprecated: false\n      operationId: getPipelineConfigHistoryUsingGET\n      parameters:\n      - description: limit\n        in: query\n        name: limit\n        schema:\n          default: 20\n          format: int32\n          type: integer\n      - description: pipelineConfigId\n        in: path\n        name: pipelineConfigId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get pipeline config history.\n      tags:\n      - pipeline-config-controller\n  /pipelineTemplates:\n    get:\n      deprecated: false\n      operationId: listUsingGET\n      parameters:\n      - description: scopes\n        explode: true\n        in: query\n        name: scopes\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: List pipeline templates.\n      tags:\n      - pipeline-templates-controller\n    post:\n      deprecated: false\n      operationId: createUsingPOST\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: pipelineTemplate\n        required: true\n      responses:\n        \"201\":\n          content: {}\n          description: Created\n        \"202\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: Accepted\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Create a pipeline template.\n      tags:\n      - pipeline-templates-controller\n      x-codegen-request-body-name: pipelineTemplate\n  /pipelineTemplates/resolve:\n    get:\n      deprecated: false\n      operationId: resolveTemplatesUsingGET\n      parameters:\n      - description: executionId\n        in: query\n        name: executionId\n        schema:\n          type: string\n      - description: pipelineConfigId\n        in: query\n        name: pipelineConfigId\n        schema:\n          type: string\n      - description: source\n        in: query\n        name: source\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Resolve a pipeline template.\n      tags:\n      - pipeline-templates-controller\n  /pipelineTemplates/{id}:\n    delete:\n      deprecated: false\n      operationId: deleteUsingDELETE\n      parameters:\n      - description: application\n        in: query\n        name: application\n        schema:\n          type: string\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"202\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: Accepted\n        \"204\":\n          content: {}\n          description: No Content\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n      summary: Delete a pipeline template.\n      tags:\n      - pipeline-templates-controller\n    get:\n      deprecated: false\n      operationId: getUsingGET\n      parameters:\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get a pipeline template.\n      tags:\n      - pipeline-templates-controller\n    post:\n      deprecated: false\n      operationId: updateUsingPOST\n      parameters:\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: skipPlanDependents\n        in: query\n        name: skipPlanDependents\n        schema:\n          default: false\n          type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: pipelineTemplate\n        required: true\n      responses:\n        \"201\":\n          content: {}\n          description: Created\n        \"202\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: Accepted\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Update a pipeline template.\n      tags:\n      - pipeline-templates-controller\n      x-codegen-request-body-name: pipelineTemplate\n  /pipelineTemplates/{id}/dependents:\n    get:\n      deprecated: false\n      operationId: listPipelineTemplateDependentsUsingGET\n      parameters:\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: recursive\n        in: query\n        name: recursive\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: List all pipelines that implement a pipeline template\n      tags:\n      - pipeline-templates-controller\n  /pipelines:\n    post:\n      deprecated: false\n      operationId: savePipelineUsingPOST\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: pipeline\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Save a pipeline definition\n      tags:\n      - pipeline-controller\n      x-codegen-request-body-name: pipeline\n  /pipelines/move:\n    post:\n      deprecated: false\n      operationId: renamePipelineUsingPOST\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: renameCommand\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Rename a pipeline definition\n      tags:\n      - pipeline-controller\n      x-codegen-request-body-name: renameCommand\n  /pipelines/start:\n    post:\n      deprecated: false\n      operationId: startUsingPOST\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: map\n        required: true\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ResponseEntity'\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Initiate a pipeline execution\n      tags:\n      - pipeline-controller\n      x-codegen-request-body-name: map\n  /pipelines/v2/{application}/{pipelineNameOrId}:\n    post:\n      deprecated: false\n      operationId: invokePipelineConfigViaEchoUsingPOST\n      parameters:\n      - description: application\n        in: path\n        name: application\n        required: true\n        schema:\n          type: string\n      - description: pipelineNameOrId\n        in: path\n        name: pipelineNameOrId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: trigger\n        required: false\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpEntity'\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Trigger a pipeline execution\n      tags:\n      - pipeline-controller\n      x-codegen-request-body-name: trigger\n  /pipelines/{application}/{pipelineNameOrId}:\n    post:\n      deprecated: false\n      operationId: invokePipelineConfigUsingPOST_1\n      parameters:\n      - description: application\n        in: path\n        name: application\n        required: true\n        schema:\n          type: string\n      - description: pipelineNameOrId\n        in: path\n        name: pipelineNameOrId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: trigger\n        required: false\n      responses:\n        \"201\":\n          content: {}\n          description: Created\n        \"202\":\n          content:\n            '*/*':\n              schema:\n                type: object\n          description: Accepted\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Trigger a pipeline execution\n      tags:\n      - pipeline-controller\n      x-codegen-request-body-name: trigger\n  /pipelines/{application}/{pipelineName}:\n    delete:\n      deprecated: false\n      operationId: deletePipelineUsingDELETE\n      parameters:\n      - description: application\n        in: path\n        name: application\n        required: true\n        schema:\n          type: string\n      - description: pipelineName\n        in: path\n        name: pipelineName\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content: {}\n          description: OK\n        \"204\":\n          content: {}\n          description: No Content\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n      summary: Delete a pipeline definition\n      tags:\n      - pipeline-controller\n  /pipelines/{id}:\n    delete:\n      deprecated: false\n      operationId: deletePipelineUsingDELETE_1\n      parameters:\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"204\":\n          content: {}\n          description: No Content\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n      summary: Delete a pipeline execution\n      tags:\n      - pipeline-controller\n    get:\n      deprecated: false\n      operationId: getPipelineUsingGET\n      parameters:\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a pipeline execution\n      tags:\n      - pipeline-controller\n    put:\n      deprecated: false\n      operationId: updatePipelineUsingPUT\n      parameters:\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: pipeline\n        required: true\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Update a pipeline definition\n      tags:\n      - pipeline-controller\n      x-codegen-request-body-name: pipeline\n  /pipelines/{id}/cancel:\n    put:\n      deprecated: false\n      operationId: cancelPipelineUsingPUT_1\n      parameters:\n      - description: force\n        in: query\n        name: force\n        schema:\n          default: false\n          type: boolean\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: reason\n        in: query\n        name: reason\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content: {}\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Cancel a pipeline execution\n      tags:\n      - pipeline-controller\n  /pipelines/{id}/evaluateExpression:\n    get:\n      deprecated: false\n      operationId: evaluateExpressionForExecutionUsingGET\n      parameters:\n      - description: expression\n        in: query\n        name: expression\n        required: true\n        schema:\n          type: string\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Evaluate a pipeline expression using the provided execution as context\n      tags:\n      - pipeline-controller\n    post:\n      deprecated: false\n      operationId: evaluateExpressionForExecutionViaPOSTUsingPOST_1\n      parameters:\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: pipelineExpression\n        required: true\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Evaluate a pipeline expression using the provided execution as context\n      tags:\n      - pipeline-controller\n      x-codegen-request-body-name: pipelineExpression\n  /pipelines/{id}/evaluateVariables:\n    post:\n      deprecated: false\n      operationId: evaluateVariablesUsingPOST\n      parameters:\n      - allowEmptyValue: false\n        description: Execution id to run against\n        in: query\n        name: executionId\n        required: true\n        schema:\n          type: string\n      - allowEmptyValue: false\n        description: Comma separated list of requisite stage IDs for the evaluation\n          stage\n        in: query\n        name: requisiteStageRefIds\n        schema:\n          type: string\n      - allowEmptyValue: false\n        description: Version of SpEL evaluation logic to use (v3 or v4)\n        in: query\n        name: spelVersion\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/MapStringString'\n              type: array\n        description: List of variables/expressions to evaluate\n        required: true\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Evaluate variables same as Evaluate Variables stage using the provided\n        execution as context\n      tags:\n      - pipeline-controller\n      x-codegen-request-body-name: expressions\n  /pipelines/{id}/pause:\n    put:\n      deprecated: false\n      operationId: pausePipelineUsingPUT\n      parameters:\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content: {}\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Pause a pipeline execution\n      tags:\n      - pipeline-controller\n  /pipelines/{id}/resume:\n    put:\n      deprecated: false\n      operationId: resumePipelineUsingPUT\n      parameters:\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Resume a pipeline execution\n      tags:\n      - pipeline-controller\n  /pipelines/{id}/stages/{stageId}:\n    patch:\n      deprecated: false\n      operationId: updateStageUsingPATCH\n      parameters:\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: stageId\n        in: path\n        name: stageId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: context\n        required: true\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"204\":\n          content: {}\n          description: No Content\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n      summary: Update a stage execution\n      tags:\n      - pipeline-controller\n      x-codegen-request-body-name: context\n  /pipelines/{id}/stages/{stageId}/restart:\n    put:\n      deprecated: false\n      operationId: restartStageUsingPUT\n      parameters:\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: stageId\n        in: path\n        name: stageId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: context\n        required: true\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Restart a stage execution\n      tags:\n      - pipeline-controller\n      x-codegen-request-body-name: context\n  /pipelines/{id}/{stageId}/evaluateExpression:\n    get:\n      deprecated: false\n      operationId: evaluateExpressionForExecutionAtStageUsingGET\n      parameters:\n      - description: expression\n        in: query\n        name: expression\n        required: true\n        schema:\n          type: string\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: stageId\n        in: path\n        name: stageId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Evaluate a pipeline expression at a specific stage using the provided\n        execution as context\n      tags:\n      - pipeline-controller\n  /projects:\n    get:\n      deprecated: false\n      operationId: allUsingGET_3\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get all projects\n      tags:\n      - project-controller\n  /projects/{id}:\n    get:\n      deprecated: false\n      operationId: getUsingGET_1\n      parameters:\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get a project\n      tags:\n      - project-controller\n  /projects/{id}/clusters:\n    get:\n      deprecated: false\n      operationId: getClustersUsingGET_3\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get a project's clusters\n      tags:\n      - project-controller\n  /projects/{id}/pipelines:\n    get:\n      deprecated: false\n      operationId: allPipelinesForProjectUsingGET\n      parameters:\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: limit\n        in: query\n        name: limit\n        schema:\n          default: 5\n          format: int32\n          type: integer\n      - description: statuses\n        in: query\n        name: statuses\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get all pipelines for project\n      tags:\n      - project-controller\n  /pubsub/subscriptions:\n    get:\n      deprecated: false\n      operationId: allUsingGET_4\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  $ref: '#/components/schemas/MapStringString'\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve the list of pub/sub subscriptions configured in Echo.\n      tags:\n      - pubsub-subscription-controller\n  /search:\n    get:\n      deprecated: false\n      operationId: searchUsingGET\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: allowShortQuery\n        in: query\n        name: allowShortQuery\n        schema:\n          default: false\n          type: boolean\n      - description: page\n        in: query\n        name: page\n        schema:\n          default: 1\n          format: int32\n          type: integer\n      - description: pageSize\n        in: query\n        name: pageSize\n        schema:\n          default: 10000\n          format: int32\n          type: integer\n      - description: platform\n        in: query\n        name: platform\n        schema:\n          type: string\n      - description: q\n        in: query\n        name: q\n        schema:\n          type: string\n      - description: type\n        in: query\n        name: type\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Search infrastructure\n      tags:\n      - search-controller\n  /securityGroups:\n    get:\n      deprecated: false\n      operationId: allUsingGET_5\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: id\n        in: query\n        name: id\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of security groups, grouped by account, cloud provider,\n        and region\n      tags:\n      - security-group-controller\n  /securityGroups/{account}:\n    get:\n      deprecated: false\n      operationId: allByAccountUsingGET_1\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: account\n        in: path\n        name: account\n        required: true\n        schema:\n          type: string\n      - description: provider\n        in: query\n        name: provider\n        schema:\n          default: aws\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of security groups for a given account, grouped by\n        region\n      tags:\n      - security-group-controller\n  /securityGroups/{account}/{region}/{name}:\n    get:\n      deprecated: false\n      operationId: getSecurityGroupUsingGET_1\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: account\n        in: path\n        name: account\n        required: true\n        schema:\n          type: string\n      - description: name\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      - description: provider\n        in: query\n        name: provider\n        schema:\n          default: aws\n          type: string\n      - description: region\n        in: path\n        name: region\n        required: true\n        schema:\n          type: string\n      - description: vpcId\n        in: query\n        name: vpcId\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a security group's details\n      tags:\n      - security-group-controller\n  /subnets:\n    get:\n      deprecated: false\n      operationId: subnetsUsingGET\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get subnets\n      tags:\n      - amazon-infrastructure-controller\n  /subnets/{cloudProvider}:\n    get:\n      deprecated: false\n      operationId: allByCloudProviderUsingGET_1\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: cloudProvider\n        in: path\n        name: cloudProvider\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of subnets for a given cloud provider\n      tags:\n      - subnet-controller\n  /tasks:\n    post:\n      deprecated: false\n      operationId: taskUsingPOST_1\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: map\n        required: true\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Create task\n      tags:\n      - task-controller\n      x-codegen-request-body-name: map\n  /tasks/cancel:\n    put:\n      deprecated: false\n      operationId: cancelTasksUsingPUT\n      parameters:\n      - description: ids\n        explode: true\n        in: query\n        name: ids\n        required: true\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Cancel tasks\n      tags:\n      - task-controller\n  /tasks/{id}:\n    delete:\n      deprecated: false\n      operationId: deleteTaskUsingDELETE\n      parameters:\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"204\":\n          content: {}\n          description: No Content\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n      summary: Delete task\n      tags:\n      - task-controller\n    get:\n      deprecated: false\n      operationId: getTaskUsingGET_1\n      parameters:\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get task\n      tags:\n      - task-controller\n  /tasks/{id}/cancel:\n    put:\n      deprecated: false\n      operationId: cancelTaskUsingPUT_1\n      parameters:\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Cancel task\n      tags:\n      - task-controller\n  /tasks/{id}/details/{taskDetailsId}:\n    get:\n      deprecated: false\n      operationId: getTaskDetailsUsingGET_1\n      parameters:\n      - description: X-RateLimit-App\n        in: header\n        name: X-RateLimit-App\n        schema:\n          type: string\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: taskDetailsId\n        in: path\n        name: taskDetailsId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get task details\n      tags:\n      - task-controller\n  /v2/builds:\n    get:\n      deprecated: false\n      description: Deprecated, use the v3 endpoint instead\n      operationId: getBuildMastersUsingGET\n      parameters:\n      - description: type\n        in: query\n        name: type\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get build masters\n      tags:\n      - build-controller\n  /v2/builds/{buildMaster}/build/{number}/**:\n    get:\n      deprecated: false\n      description: Deprecated, use the v3 endpoint instead\n      operationId: getBuildUsingGET\n      parameters:\n      - description: buildMaster\n        in: path\n        name: buildMaster\n        required: true\n        schema:\n          type: string\n      - description: number\n        in: path\n        name: number\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get build for build master\n      tags:\n      - build-controller\n  /v2/builds/{buildMaster}/builds/**:\n    get:\n      deprecated: false\n      description: Deprecated, use the v3 endpoint instead\n      operationId: getBuildsUsingGET\n      parameters:\n      - description: buildMaster\n        in: path\n        name: buildMaster\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get builds for build master\n      tags:\n      - build-controller\n  /v2/builds/{buildMaster}/jobs:\n    get:\n      deprecated: false\n      description: Deprecated, use the v3 endpoint instead\n      operationId: getJobsForBuildMasterUsingGET\n      parameters:\n      - description: buildMaster\n        in: path\n        name: buildMaster\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get jobs for build master\n      tags:\n      - build-controller\n  /v2/builds/{buildMaster}/jobs/**:\n    get:\n      deprecated: false\n      description: Deprecated, use the v3 endpoint instead\n      operationId: getJobConfigUsingGET\n      parameters:\n      - description: buildMaster\n        in: path\n        name: buildMaster\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get job config\n      tags:\n      - build-controller\n  /v2/canaries/canary:\n    post:\n      deprecated: false\n      operationId: initiateCanaryWithConfigUsingPOST\n      parameters:\n      - description: application\n        in: query\n        name: application\n        schema:\n          type: string\n      - description: metricsAccountName\n        in: query\n        name: metricsAccountName\n        schema:\n          type: string\n      - description: parentPipelineExecutionId\n        in: query\n        name: parentPipelineExecutionId\n        schema:\n          type: string\n      - description: storageAccountName\n        in: query\n        name: storageAccountName\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: adhocExecutionRequest\n        required: true\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                type: object\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Start a canary execution with the supplied canary config\n      tags:\n      - v-2-canary-controller\n      x-codegen-request-body-name: adhocExecutionRequest\n  /v2/canaries/canary/{canaryConfigId}:\n    post:\n      deprecated: false\n      operationId: initiateCanaryUsingPOST\n      parameters:\n      - description: application\n        in: query\n        name: application\n        schema:\n          type: string\n      - description: canaryConfigId\n        in: path\n        name: canaryConfigId\n        required: true\n        schema:\n          type: string\n      - description: configurationAccountName\n        in: query\n        name: configurationAccountName\n        schema:\n          type: string\n      - description: metricsAccountName\n        in: query\n        name: metricsAccountName\n        schema:\n          type: string\n      - description: parentPipelineExecutionId\n        in: query\n        name: parentPipelineExecutionId\n        schema:\n          type: string\n      - description: storageAccountName\n        in: query\n        name: storageAccountName\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: executionRequest\n        required: true\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                type: object\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Start a canary execution\n      tags:\n      - v-2-canary-controller\n      x-codegen-request-body-name: executionRequest\n  /v2/canaries/canary/{canaryConfigId}/{canaryExecutionId}:\n    get:\n      deprecated: true\n      operationId: getCanaryResultUsingGET\n      parameters:\n      - description: canaryConfigId\n        in: path\n        name: canaryConfigId\n        required: true\n        schema:\n          type: string\n      - description: canaryExecutionId\n        in: path\n        name: canaryExecutionId\n        required: true\n        schema:\n          type: string\n      - description: storageAccountName\n        in: query\n        name: storageAccountName\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: (DEPRECATED) Retrieve a canary result\n      tags:\n      - v-2-canary-controller\n  /v2/canaries/canary/{canaryExecutionId}:\n    get:\n      deprecated: false\n      operationId: getCanaryResultUsingGET_1\n      parameters:\n      - description: canaryExecutionId\n        in: path\n        name: canaryExecutionId\n        required: true\n        schema:\n          type: string\n      - description: storageAccountName\n        in: query\n        name: storageAccountName\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a canary result\n      tags:\n      - v-2-canary-controller\n  /v2/canaries/credentials:\n    get:\n      deprecated: false\n      operationId: listCredentialsUsingGET\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of configured Kayenta accounts\n      tags:\n      - v-2-canary-controller\n  /v2/canaries/judges:\n    get:\n      deprecated: false\n      operationId: listJudgesUsingGET\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of all configured canary judges\n      tags:\n      - v-2-canary-controller\n  /v2/canaries/metadata/metricsService:\n    get:\n      deprecated: false\n      operationId: listMetricsServiceMetadataUsingGET\n      parameters:\n      - description: filter\n        in: query\n        name: filter\n        schema:\n          type: string\n      - description: metricsAccountName\n        in: query\n        name: metricsAccountName\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of descriptors for use in populating the canary config\n        ui\n      tags:\n      - v-2-canary-controller\n  /v2/canaries/metricSetPairList/{metricSetPairListId}:\n    get:\n      deprecated: false\n      operationId: getMetricSetPairListUsingGET\n      parameters:\n      - description: metricSetPairListId\n        in: path\n        name: metricSetPairListId\n        required: true\n        schema:\n          type: string\n      - description: storageAccountName\n        in: query\n        name: storageAccountName\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a metric set pair list\n      tags:\n      - v-2-canary-controller\n  /v2/canaries/{application}/executions:\n    get:\n      deprecated: false\n      operationId: getCanaryResultsByApplicationUsingGET\n      parameters:\n      - description: application\n        in: path\n        name: application\n        required: true\n        schema:\n          type: string\n      - description: limit\n        in: query\n        name: limit\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - allowEmptyValue: false\n        description: 'Comma-separated list of statuses, e.g.: RUNNING, SUCCEEDED,\n          TERMINAL'\n        in: query\n        name: statuses\n        schema:\n          type: string\n      - description: storageAccountName\n        in: query\n        name: storageAccountName\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of an application's canary results\n      tags:\n      - v-2-canary-controller\n  /v2/canaryConfig:\n    get:\n      deprecated: false\n      operationId: getCanaryConfigsUsingGET\n      parameters:\n      - description: application\n        in: query\n        name: application\n        schema:\n          type: string\n      - description: configurationAccountName\n        in: query\n        name: configurationAccountName\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of canary configurations\n      tags:\n      - v-2-canary-config-controller\n    post:\n      deprecated: false\n      operationId: createCanaryConfigUsingPOST\n      parameters:\n      - description: configurationAccountName\n        in: query\n        name: configurationAccountName\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: config\n        required: true\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                type: object\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Create a canary configuration\n      tags:\n      - v-2-canary-config-controller\n      x-codegen-request-body-name: config\n  /v2/canaryConfig/{id}:\n    delete:\n      deprecated: false\n      operationId: deleteCanaryConfigUsingDELETE\n      parameters:\n      - description: configurationAccountName\n        in: query\n        name: configurationAccountName\n        schema:\n          type: string\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content: {}\n          description: OK\n        \"204\":\n          content: {}\n          description: No Content\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n      summary: Delete a canary configuration\n      tags:\n      - v-2-canary-config-controller\n    get:\n      deprecated: false\n      operationId: getCanaryConfigUsingGET\n      parameters:\n      - description: configurationAccountName\n        in: query\n        name: configurationAccountName\n        schema:\n          type: string\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a canary configuration by id\n      tags:\n      - v-2-canary-config-controller\n    put:\n      deprecated: false\n      operationId: updateCanaryConfigUsingPUT\n      parameters:\n      - description: configurationAccountName\n        in: query\n        name: configurationAccountName\n        schema:\n          type: string\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: config\n        required: true\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                type: object\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Update a canary configuration\n      tags:\n      - v-2-canary-config-controller\n      x-codegen-request-body-name: config\n  /v2/pipelineTemplates:\n    get:\n      deprecated: false\n      operationId: listUsingGET_1\n      parameters:\n      - description: scopes\n        explode: true\n        in: query\n        name: scopes\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: (ALPHA) List pipeline templates.\n      tags:\n      - v-2-pipeline-templates-controller\n  /v2/pipelineTemplates/create:\n    post:\n      deprecated: false\n      operationId: createUsingPOST_1\n      parameters:\n      - description: tag\n        in: query\n        name: tag\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: pipelineTemplate\n        required: true\n      responses:\n        \"201\":\n          content: {}\n          description: Created\n        \"202\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: Accepted\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: (ALPHA) Create a pipeline template.\n      tags:\n      - v-2-pipeline-templates-controller\n      x-codegen-request-body-name: pipelineTemplate\n  /v2/pipelineTemplates/plan:\n    post:\n      deprecated: false\n      operationId: planUsingPOST\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: pipeline\n        required: true\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: (ALPHA) Plan a pipeline template configuration.\n      tags:\n      - v-2-pipeline-templates-controller\n      x-codegen-request-body-name: pipeline\n  /v2/pipelineTemplates/update/{id}:\n    post:\n      deprecated: false\n      operationId: updateUsingPOST_1\n      parameters:\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: skipPlanDependents\n        in: query\n        name: skipPlanDependents\n        schema:\n          default: false\n          type: boolean\n      - description: tag\n        in: query\n        name: tag\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: pipelineTemplate\n        required: true\n      responses:\n        \"201\":\n          content: {}\n          description: Created\n        \"202\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: Accepted\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: (ALPHA) Update a pipeline template.\n      tags:\n      - v-2-pipeline-templates-controller\n      x-codegen-request-body-name: pipelineTemplate\n  /v2/pipelineTemplates/versions:\n    get:\n      deprecated: false\n      operationId: listVersionsUsingGET\n      parameters:\n      - description: scopes\n        explode: true\n        in: query\n        name: scopes\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: List pipeline templates with versions\n      tags:\n      - v-2-pipeline-templates-controller\n  /v2/pipelineTemplates/{id}:\n    delete:\n      deprecated: false\n      operationId: deleteUsingDELETE_1\n      parameters:\n      - description: application\n        in: query\n        name: application\n        schema:\n          type: string\n      - description: digest\n        in: query\n        name: digest\n        schema:\n          type: string\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: tag\n        in: query\n        name: tag\n        schema:\n          type: string\n      responses:\n        \"202\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: Accepted\n        \"204\":\n          content: {}\n          description: No Content\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n      summary: Delete a pipeline template.\n      tags:\n      - v-2-pipeline-templates-controller\n    get:\n      deprecated: false\n      operationId: getUsingGET_2\n      parameters:\n      - description: digest\n        in: query\n        name: digest\n        schema:\n          type: string\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: tag\n        in: query\n        name: tag\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: (ALPHA) Get a pipeline template.\n      tags:\n      - v-2-pipeline-templates-controller\n  /v2/pipelineTemplates/{id}/dependents:\n    get:\n      deprecated: false\n      operationId: listPipelineTemplateDependentsUsingGET_1\n      parameters:\n      - description: id\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: (ALPHA) List all pipelines that implement a pipeline template\n      tags:\n      - v-2-pipeline-templates-controller\n  /v3/builds:\n    get:\n      deprecated: false\n      operationId: v3GetBuildMastersUsingGET\n      parameters:\n      - description: type\n        in: query\n        name: type\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get build masters\n      tags:\n      - build-controller\n  /v3/builds/{buildMaster}/build/{number}:\n    get:\n      deprecated: false\n      operationId: v3GetBuildUsingGET\n      parameters:\n      - description: buildMaster\n        in: path\n        name: buildMaster\n        required: true\n        schema:\n          type: string\n      - description: job\n        in: query\n        name: job\n        required: true\n        schema:\n          type: string\n      - description: number\n        in: path\n        name: number\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get build for build master\n      tags:\n      - build-controller\n  /v3/builds/{buildMaster}/builds:\n    get:\n      deprecated: false\n      operationId: v3GetBuildsUsingGET\n      parameters:\n      - description: buildMaster\n        in: path\n        name: buildMaster\n        required: true\n        schema:\n          type: string\n      - description: job\n        in: query\n        name: job\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get builds for build master\n      tags:\n      - build-controller\n  /v3/builds/{buildMaster}/job:\n    get:\n      deprecated: false\n      operationId: v3GetJobConfigUsingGET\n      parameters:\n      - description: buildMaster\n        in: path\n        name: buildMaster\n        required: true\n        schema:\n          type: string\n      - description: job\n        in: query\n        name: job\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                additionalProperties:\n                  properties: {}\n                  type: object\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get job config\n      tags:\n      - build-controller\n  /v3/builds/{buildMaster}/jobs:\n    get:\n      deprecated: false\n      operationId: v3GetJobsForBuildMasterUsingGET\n      parameters:\n      - description: buildMaster\n        in: path\n        name: buildMaster\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get jobs for build master\n      tags:\n      - build-controller\n  /version:\n    get:\n      deprecated: false\n      operationId: getVersionUsingGET\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Version'\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Fetch Gate's current version\n      tags:\n      - version-controller\n  /vpcs:\n    get:\n      deprecated: true\n      operationId: vpcsUsingGET\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Get VPCs\n      tags:\n      - amazon-infrastructure-controller\n  /webhooks/preconfigured:\n    get:\n      deprecated: false\n      operationId: preconfiguredWebhooksUsingGET\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                items:\n                  properties: {}\n                  type: object\n                type: array\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Retrieve a list of preconfigured webhooks in Orca\n      tags:\n      - webhook-controller\n  /webhooks/{type}/{source}:\n    post:\n      deprecated: false\n      operationId: webhooksUsingPOST\n      parameters:\n      - description: X-Event-Key\n        in: header\n        name: X-Event-Key\n        schema:\n          type: string\n      - description: X-Hub-Signature\n        in: header\n        name: X-Hub-Signature\n        schema:\n          type: string\n      - description: source\n        in: path\n        name: source\n        required: true\n        schema:\n          type: string\n      - description: type\n        in: path\n        name: type\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: event\n        required: false\n      responses:\n        \"200\":\n          content:\n            '*/*':\n              schema:\n                type: object\n          description: OK\n        \"201\":\n          content: {}\n          description: Created\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"403\":\n          content: {}\n          description: Forbidden\n        \"404\":\n          content: {}\n          description: Not Found\n      summary: Endpoint for posting webhooks to Spinnaker's webhook service\n      tags:\n      - webhook-controller\n      x-codegen-request-body-name: event\ncomponents:\n  schemas:\n    Account:\n      example:\n        accountId: accountId\n        providerVersion: providerVersion\n        permissions:\n          key:\n          - permissions\n          - permissions\n        name: name\n        skin: skin\n        type: type\n        requiredGroupMembership:\n        - requiredGroupMembership\n        - requiredGroupMembership\n      properties:\n        accountId:\n          type: string\n        name:\n          type: string\n        permissions:\n          additionalProperties:\n            items:\n              type: string\n            type: array\n          type: object\n        providerVersion:\n          type: string\n        requiredGroupMembership:\n          items:\n            type: string\n          type: array\n        skin:\n          type: string\n        type:\n          type: string\n      title: Account\n      type: object\n    AccountDetails:\n      example:\n        accountId: accountId\n        environment: environment\n        providerVersion: providerVersion\n        permissions:\n          key:\n          - permissions\n          - permissions\n        accountType: accountType\n        cloudProvider: cloudProvider\n        name: name\n        skin: skin\n        challengeDestructiveActions: true\n        type: type\n        primaryAccount: true\n        requiredGroupMembership:\n        - requiredGroupMembership\n        - requiredGroupMembership\n      properties:\n        accountId:\n          type: string\n        accountType:\n          type: string\n        challengeDestructiveActions:\n          type: boolean\n        cloudProvider:\n          type: string\n        environment:\n          type: string\n        name:\n          type: string\n        permissions:\n          additionalProperties:\n            items:\n              type: string\n            type: array\n          type: object\n        primaryAccount:\n          type: boolean\n        providerVersion:\n          type: string\n        requiredGroupMembership:\n          items:\n            type: string\n          type: array\n        skin:\n          type: string\n        type:\n          type: string\n      title: AccountDetails\n      type: object\n    GrantedAuthority:\n      example:\n        authority: authority\n      properties:\n        authority:\n          type: string\n      title: GrantedAuthority\n      type: object\n    HashMapStringObject:\n      additionalProperties:\n        properties: {}\n        type: object\n      title: HashMapStringObject\n      type: object\n    HttpEntity:\n      example:\n        body: '{}'\n      properties:\n        body:\n          properties: {}\n          type: object\n      title: HttpEntity\n      type: object\n    MapStringString:\n      additionalProperties:\n        type: string\n      title: MapStringString\n      type: object\n    PipelineTemplateDependent:\n      properties:\n        application:\n          type: string\n        pipelineConfigId:\n          type: string\n        pipelineName:\n          type: string\n      title: PipelineTemplateDependent\n      type: object\n    ReorderPipelinesCommand:\n      example:\n        idsToIndices:\n          key: 0\n        application: application\n      properties:\n        application:\n          type: string\n        idsToIndices:\n          additionalProperties:\n            format: int32\n            type: integer\n          type: object\n      title: ReorderPipelinesCommand\n      type: object\n    ResponseEntity:\n      example:\n        statusCodeValue: 0\n        body: '{}'\n        statusCode: 100 CONTINUE\n      properties:\n        body:\n          properties: {}\n          type: object\n        statusCode:\n          enum:\n          - 100 CONTINUE\n          - 101 SWITCHING_PROTOCOLS\n          - 102 PROCESSING\n          - 103 CHECKPOINT\n          - 200 OK\n          - 201 CREATED\n          - 202 ACCEPTED\n          - 203 NON_AUTHORITATIVE_INFORMATION\n          - 204 NO_CONTENT\n          - 205 RESET_CONTENT\n          - 206 PARTIAL_CONTENT\n          - 207 MULTI_STATUS\n          - 208 ALREADY_REPORTED\n          - 226 IM_USED\n          - 300 MULTIPLE_CHOICES\n          - 301 MOVED_PERMANENTLY\n          - 302 FOUND\n          - 302 MOVED_TEMPORARILY\n          - 303 SEE_OTHER\n          - 304 NOT_MODIFIED\n          - 305 USE_PROXY\n          - 307 TEMPORARY_REDIRECT\n          - 308 PERMANENT_REDIRECT\n          - 400 BAD_REQUEST\n          - 401 UNAUTHORIZED\n          - 402 PAYMENT_REQUIRED\n          - 403 FORBIDDEN\n          - 404 NOT_FOUND\n          - 405 METHOD_NOT_ALLOWED\n          - 406 NOT_ACCEPTABLE\n          - 407 PROXY_AUTHENTICATION_REQUIRED\n          - 408 REQUEST_TIMEOUT\n          - 409 CONFLICT\n          - 410 GONE\n          - 411 LENGTH_REQUIRED\n          - 412 PRECONDITION_FAILED\n          - 413 PAYLOAD_TOO_LARGE\n          - 413 REQUEST_ENTITY_TOO_LARGE\n          - 414 URI_TOO_LONG\n          - 414 REQUEST_URI_TOO_LONG\n          - 415 UNSUPPORTED_MEDIA_TYPE\n          - 416 REQUESTED_RANGE_NOT_SATISFIABLE\n          - 417 EXPECTATION_FAILED\n          - 418 I_AM_A_TEAPOT\n          - 419 INSUFFICIENT_SPACE_ON_RESOURCE\n          - 420 METHOD_FAILURE\n          - 421 DESTINATION_LOCKED\n          - 422 UNPROCESSABLE_ENTITY\n          - 423 LOCKED\n          - 424 FAILED_DEPENDENCY\n          - 426 UPGRADE_REQUIRED\n          - 428 PRECONDITION_REQUIRED\n          - 429 TOO_MANY_REQUESTS\n          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE\n          - 451 UNAVAILABLE_FOR_LEGAL_REASONS\n          - 500 INTERNAL_SERVER_ERROR\n          - 501 NOT_IMPLEMENTED\n          - 502 BAD_GATEWAY\n          - 503 SERVICE_UNAVAILABLE\n          - 504 GATEWAY_TIMEOUT\n          - 505 HTTP_VERSION_NOT_SUPPORTED\n          - 506 VARIANT_ALSO_NEGOTIATES\n          - 507 INSUFFICIENT_STORAGE\n          - 508 LOOP_DETECTED\n          - 509 BANDWIDTH_LIMIT_EXCEEDED\n          - 510 NOT_EXTENDED\n          - 511 NETWORK_AUTHENTICATION_REQUIRED\n          type: string\n        statusCodeValue:\n          format: int32\n          type: integer\n      title: ResponseEntity\n      type: object\n    User:\n      example:\n        firstName: firstName\n        lastName: lastName\n        allowedAccounts:\n        - allowedAccounts\n        - allowedAccounts\n        credentialsNonExpired: true\n        roles:\n        - roles\n        - roles\n        accountNonExpired: true\n        authorities:\n        - authority: authority\n        - authority: authority\n        email: email\n        enabled: true\n        accountNonLocked: true\n        username: username\n      properties:\n        accountNonExpired:\n          type: boolean\n        accountNonLocked:\n          type: boolean\n        allowedAccounts:\n          items:\n            type: string\n          type: array\n        authorities:\n          items:\n            $ref: '#/components/schemas/GrantedAuthority'\n          type: array\n        credentialsNonExpired:\n          type: boolean\n        email:\n          type: string\n        enabled:\n          type: boolean\n        firstName:\n          type: string\n        lastName:\n          type: string\n        roles:\n          items:\n            type: string\n          type: array\n        username:\n          type: string\n      title: User\n      type: object\n    Version:\n      example:\n        version: version\n      properties:\n        version:\n          type: string\n      title: Version\n      type: object\n"
		}
	},
	"Error": "parse: paths: /applications/{application}/tasks/{id}: get: getTaskUsingGET: parse path: path parameter not specified: \"application\""
}