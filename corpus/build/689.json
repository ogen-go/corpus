{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/w3c-ccg/vc-api"
		},
		"file": {
			"name": "workflow.yml",
			"path": "workflow.yml",
			"content": "openapi: 3.0.0\ninfo:\n  version: \"0.0.3-unstable\"\n  title: VC Workflow HTTP API\n  description: This is an Experimental Open API Specification for the [VC Data Model](https://www.w3.org/TR/vc-data-model/).\n  license:\n    name: W3C Software and Document License\n    url: http://www.w3.org/Consortium/Legal/copyright-software.\n  contact:\n    name: GitHub Source Code\n    url: https://github.com/w3c-ccg/vc-api\npaths:\n  /workflows/{name}/start:\n    post:\n      summary: Start a workflow.\n      description:\n        Starts a workflow with the given name. Optionally, additional information can be provided to the server in the request body that can help it fine tune what information to request from the client in order to continue with the workflow.\n      requestBody:\n        description: Optional and arbitrary POST data that the client might provide to the server to help it fine tune what information to request from the client in order to continue with the workflow.\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - type: object\n      responses:\n        \"201\":\n          description: A new workflow was successfully created for the client.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WorkflowStartResponse\"\n        \"400\":\n          description: The workflow request was malformed.\n        \"500\":\n          description: Internal Error\n        \"501\":\n          description: Not implemented\n  /workflows/{id}/presentations:\n    post:\n      summary: Present information to an active workflow.\n      description: \"Delivery endpoint for a client-holder to provide a presentation in compliance with the Verifiable Presentation Request provided in the Notification call. This server-holder MUST match the 'domain' and 'challenge' to a 'domain' and 'challenge' previously sent in a Notification Response, and not already received. The server-holder MUST verify the Presentation. The server MUST store the Presentation if verification passes.\"\n      requestBody:\n        description: Details the client provides to the server to help it decide if the presentation should be made.\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/VerifiablePresentation\"\n      responses:\n        \"200\":\n          description: Presentation was successful\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VerifiablePresentation\"\n        \"201\":\n          description: Presentation was received and a new workflow was successfully created for the client.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WorkflowStartResponse\"\n        \"400\":\n          description: Presentation is malformed\n        \"501\":\n          description: Not Implemented\n        \"500\":\n          description: Internal Server Error\ncomponents:\n  schemas:\n    WorkflowStartResponse:\n      $ref: \"./components/WorkflowStartResponse.yml#/components/schemas/WorkflowStartResponse\"\n    VerifiablePresentation:\n      $ref: \"./components/VerifiablePresentation.yml#/components/schemas/VerifiablePresentation\"\n"
		}
	},
	"Error": "parse: paths: /workflows/{id}/presentations: post: : parse path: path parameter not specified: \"id\""
}