{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vanilla/vanilla"
		},
		"file": {
			"name": "tags.yml",
			"path": "applications/vanilla/openapi/tags.yml",
			"content": "openapi: 3.0.2\ninfo:\npaths:\n    /tags:\n        get:\n            parameters:\n                - name: query\n                  description: The search term to find a tag.\n                  in: query\n                  schema:\n                      type: string\n                - name: type\n                  description: The type of tags to list.\n                  in: query\n                  schema:\n                      type: array\n                      items:\n                          type: string\n                  style: form\n                - name: parentID\n                  description: ID of parent to filter results.\n                  in: query\n                  schema:\n                      type: array\n                      items:\n                          type: integer\n                  style: form\n                - $ref: \"#/components/parameters/Page\"\n                - description: Desired number of tags per page.\n                  in: query\n                  name: limit\n                  schema:\n                      type: integer\n                      default: 20\n                      minimum: 1\n\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                type: array\n                                items:\n                                    $ref: \"#/components/schemas/LegacyTag\"\n                    description: Success\n            tags:\n                - Tags\n            summary: List tags.\n        post:\n            summary: Add a tag.\n            tags:\n                - Tags\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/Tag\"\n            responses:\n                \"200\":\n                    description: Success.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Tag\"\n                \"401\":\n                    $ref: \"#/components/responses/PermissionError\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\n    /tags/{id}:\n        parameters:\n            - name: id\n              description: The ID of the tag.\n              in: path\n              required: true\n              schema:\n                  type: integer\n        get:\n            summary: Get a single tag.\n            tags:\n                - Tags\n            responses:\n                \"200\":\n                    description: Success.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Tag\"\n                \"401\":\n                    $ref: \"#/components/responses/PermissionError\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\n        patch:\n            summary: Update a tag.\n            tags:\n                - Tags\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/Tag\"\n            responses:\n                \"200\":\n                    description: Success.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Tag\"\n                \"401\":\n                    $ref: \"#/components/responses/PermissionError\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\n        delete:\n            summary: Delete a tag.\n            tags:\n                - Tags\n            responses:\n                \"204\":\n                    description: Success.\n                \"401\":\n                    $ref: \"#/components/responses/PermissionError\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\n                \"409\":\n                    description: Tag isn't empty.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/BasicError\"\ncomponents:\n    schemas:\n        TagFragment:\n            description: A tag that can be applied to content.\n            type: object\n            properties:\n                tagID:\n                    type: integer\n                    description: The ID of the tag.\n                    readOnly: true\n                urlcode:\n                    type: string\n                    description: The URL slug of the tag.\n                name:\n                    type: string\n                    nullable: true\n                    description: The full name of the tag.\n            required:\n                - tagID\n                - urlcode\n                - name\n        Tag:\n            description: A full tag.\n            allOf:\n                - $ref: \"#/components/schemas/TagFragment\"\n                - type: object\n                  properties:\n                      parentTagID:\n                          type: integer\n                          description: The parent ID of the tag.\n                          nullable: true\n                      type:\n                          type: string\n                          nullable: true\n                          default: null\n                          description: The tag type.\n                - $ref: \"#/components/schemas/InsertInfo\"\n\n        LegacyTag:\n            description: A backwards compatible tag.\n            allOf:\n                - $ref: \"#/components/schemas/TagFragment\"\n                - type: object\n                  properties:\n                      id:\n                          type: integer\n                          description: The ID of the tag.\n                          deprecated: true\n                      urlCode:\n                          description: The url-code of the tag.\n                          type: string\n                          deprecated: true\n                      parentTagID:\n                          type: integer\n                          description: The parent ID of the tag.\n                          nullable: true\n                  required:\n                      - id\n                      - urlCode\n                      - parentTagID\n        TagReference:\n            description: A reference to a tag for assignment to other items.\n            type: object\n            properties:\n                tagIDs:\n                    type: array\n                    items:\n                        type: integer\n                    description: You can specify the name of the tag.\n                urlcodes:\n                    type: array\n                    items:\n                        type: string\n                    description: You can also specify the url code of the tag.\n"
		}
	},
	"Error": "parse: paths: /tags: get: : parameters: parse parameter \"\": resolve \"#/components/parameters/Page\" reference: component by reference \"#/components/parameters/Page\" not found"
}