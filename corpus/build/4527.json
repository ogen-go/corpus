{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "APIs/amazonaws.com/codedeploy/2014-10-06/openapi.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  version: '2014-10-06'\n  x-release: v4\n  title: AWS CodeDeploy\n  description: '\u003cfullname\u003eAWS CodeDeploy\u003c/fullname\u003e \u003cp\u003eAWS CodeDeploy is a deployment service that automates application deployments to Amazon EC2 instances, on-premises instances running in your own facility, serverless AWS Lambda functions, or applications in an Amazon ECS service.\u003c/p\u003e \u003cp\u003eYou can deploy a nearly unlimited variety of application content, such as an updated Lambda function, updated applications in an Amazon ECS service, code, web and configuration files, executables, packages, scripts, multimedia files, and so on. AWS CodeDeploy can deploy application content stored in Amazon S3 buckets, GitHub repositories, or Bitbucket repositories. You do not need to make changes to your existing code before you can use AWS CodeDeploy.\u003c/p\u003e \u003cp\u003eAWS CodeDeploy makes it easier for you to rapidly release new features, helps you avoid downtime during application deployment, and handles the complexity of updating your applications, without many of the risks associated with error-prone manual deployments.\u003c/p\u003e \u003cp\u003e \u003cb\u003eAWS CodeDeploy Components\u003c/b\u003e \u003c/p\u003e \u003cp\u003eUse the information in this guide to help you work with the following AWS CodeDeploy components:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eApplication\u003c/b\u003e: A name that uniquely identifies the application you want to deploy. AWS CodeDeploy uses this name, which functions as a container, to ensure the correct combination of revision, deployment configuration, and deployment group are referenced during a deployment.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eDeployment group\u003c/b\u003e: A set of individual instances, CodeDeploy Lambda deployment configuration settings, or an Amazon ECS service and network details. A Lambda deployment group specifies how to route traffic to a new version of a Lambda function. An Amazon ECS deployment group specifies the service created in Amazon ECS to deploy, a load balancer, and a listener to reroute production traffic to an updated containerized application. An EC2/On-premises deployment group contains individually tagged instances, Amazon EC2 instances in Amazon EC2 Auto Scaling groups, or both. All deployment groups can specify optional trigger, alarm, and rollback settings.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eDeployment configuration\u003c/b\u003e: A set of deployment rules and deployment success and failure conditions used by AWS CodeDeploy during a deployment.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eDeployment\u003c/b\u003e: The process and the components used when updating a Lambda function, a containerized application in an Amazon ECS service, or of installing content on one or more instances. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eApplication revisions\u003c/b\u003e: For an AWS Lambda deployment, this is an AppSpec file that specifies the Lambda function to be updated and one or more functions to validate deployment lifecycle events. For an Amazon ECS deployment, this is an AppSpec file that specifies the Amazon ECS task definition, container, and port where production traffic is rerouted. For an EC2/On-premises deployment, this is an archive file that contains source content—source code, webpages, executable files, and deployment scripts—along with an AppSpec file. Revisions are stored in Amazon S3 buckets or GitHub repositories. For Amazon S3, a revision is uniquely identified by its Amazon S3 object key and its ETag, version, or both. For GitHub, a revision is uniquely identified by its commit ID.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eThis guide also contains information to help you get details about the instances in your deployments, to make on-premises instances available for AWS CodeDeploy deployments, to get details about a Lambda function deployment, and to get details about Amazon ECS service deployments.\u003c/p\u003e \u003cp\u003e \u003cb\u003eAWS CodeDeploy Information Resources\u003c/b\u003e \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide\"\u003eAWS CodeDeploy User Guide\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"https://docs.aws.amazon.com/codedeploy/latest/APIReference/\"\u003eAWS CodeDeploy API Reference Guide\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"https://docs.aws.amazon.com/cli/latest/reference/deploy/index.html\"\u003eAWS CLI Reference for AWS CodeDeploy\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"https://forums.aws.amazon.com/forum.jspa?forumID=179\"\u003eAWS CodeDeploy Developer Forum\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: codedeploy\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/codedeploy-2014-10-06.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/codedeploy/'\nservers:\n  - url: 'http://codedeploy.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The CodeDeploy multi-region endpoint\n  - url: 'https://codedeploy.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The CodeDeploy multi-region endpoint\n  - url: 'http://codedeploy.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The CodeDeploy endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://codedeploy.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The CodeDeploy endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  /#X-Amz-Target=CodeDeploy_20141006.AddTagsToOnPremisesInstances:\n    post:\n      operationId: AddTagsToOnPremisesInstances\n      description: Adds tags to on-premises instances.\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InstanceNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstanceNameRequiredException'\n        '481':\n          description: InvalidInstanceNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInstanceNameException'\n        '482':\n          description: TagRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagRequiredException'\n        '483':\n          description: InvalidTagException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidTagException'\n        '484':\n          description: TagLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagLimitExceededException'\n        '485':\n          description: InstanceLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstanceLimitExceededException'\n        '486':\n          description: InstanceNotRegisteredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstanceNotRegisteredException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddTagsToOnPremisesInstancesInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.AddTagsToOnPremisesInstances\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.BatchGetApplicationRevisions:\n    post:\n      operationId: BatchGetApplicationRevisions\n      description: Gets information about one or more application revisions. The maximum number of application revisions that can be returned is 25.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchGetApplicationRevisionsOutput'\n        '480':\n          description: ApplicationDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationDoesNotExistException'\n        '481':\n          description: ApplicationNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationNameRequiredException'\n        '482':\n          description: InvalidApplicationNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidApplicationNameException'\n        '483':\n          description: RevisionRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RevisionRequiredException'\n        '484':\n          description: InvalidRevisionException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRevisionException'\n        '485':\n          description: BatchLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchLimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchGetApplicationRevisionsInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.BatchGetApplicationRevisions\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.BatchGetApplications:\n    post:\n      operationId: BatchGetApplications\n      description: Gets information about one or more applications. The maximum number of applications that can be returned is 100.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchGetApplicationsOutput'\n        '480':\n          description: ApplicationNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationNameRequiredException'\n        '481':\n          description: InvalidApplicationNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidApplicationNameException'\n        '482':\n          description: ApplicationDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationDoesNotExistException'\n        '483':\n          description: BatchLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchLimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchGetApplicationsInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.BatchGetApplications\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.BatchGetDeploymentGroups:\n    post:\n      operationId: BatchGetDeploymentGroups\n      description: Gets information about one or more deployment groups.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchGetDeploymentGroupsOutput'\n        '480':\n          description: ApplicationNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationNameRequiredException'\n        '481':\n          description: InvalidApplicationNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidApplicationNameException'\n        '482':\n          description: ApplicationDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationDoesNotExistException'\n        '483':\n          description: DeploymentGroupNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentGroupNameRequiredException'\n        '484':\n          description: InvalidDeploymentGroupNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentGroupNameException'\n        '485':\n          description: BatchLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchLimitExceededException'\n        '486':\n          description: DeploymentConfigDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentConfigDoesNotExistException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchGetDeploymentGroupsInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.BatchGetDeploymentGroups\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.BatchGetDeploymentInstances:\n    post:\n      deprecated: true\n      operationId: BatchGetDeploymentInstances\n      description: '\u003cnote\u003e \u003cp\u003e This method works, but is deprecated. Use \u003ccode\u003eBatchGetDeploymentTargets\u003c/code\u003e instead. \u003c/p\u003e \u003c/note\u003e \u003cp\u003e Returns an array of one or more instances associated with a deployment. This method works with EC2/On-premises and AWS Lambda compute platforms. The newer \u003ccode\u003eBatchGetDeploymentTargets\u003c/code\u003e works with all compute platforms. The maximum number of instances that can be returned is 25.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchGetDeploymentInstancesOutput'\n        '480':\n          description: DeploymentIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentIdRequiredException'\n        '481':\n          description: DeploymentDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentDoesNotExistException'\n        '482':\n          description: InstanceIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstanceIdRequiredException'\n        '483':\n          description: InvalidDeploymentIdException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentIdException'\n        '484':\n          description: InvalidInstanceNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInstanceNameException'\n        '485':\n          description: BatchLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchLimitExceededException'\n        '486':\n          description: InvalidComputePlatformException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidComputePlatformException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchGetDeploymentInstancesInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.BatchGetDeploymentInstances\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.BatchGetDeploymentTargets:\n    post:\n      operationId: BatchGetDeploymentTargets\n      description: '\u003cp\u003e Returns an array of one or more targets associated with a deployment. This method works with all compute types and should be used instead of the deprecated \u003ccode\u003eBatchGetDeploymentInstances\u003c/code\u003e. The maximum number of targets that can be returned is 25.\u003c/p\u003e \u003cp\u003e The type of targets returned depends on the deployment''s compute platform or deployment method: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eEC2/On-premises\u003c/b\u003e: Information about EC2 instance targets. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eAWS Lambda\u003c/b\u003e: Information about Lambda functions targets. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eAmazon ECS\u003c/b\u003e: Information about Amazon ECS service targets. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eCloudFormation\u003c/b\u003e: Information about targets of blue/green deployments initiated by a CloudFormation stack update.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchGetDeploymentTargetsOutput'\n        '480':\n          description: InvalidDeploymentIdException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentIdException'\n        '481':\n          description: DeploymentIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentIdRequiredException'\n        '482':\n          description: DeploymentDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentDoesNotExistException'\n        '483':\n          description: DeploymentNotStartedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentNotStartedException'\n        '484':\n          description: DeploymentTargetIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentTargetIdRequiredException'\n        '485':\n          description: InvalidDeploymentTargetIdException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentTargetIdException'\n        '486':\n          description: DeploymentTargetDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentTargetDoesNotExistException'\n        '487':\n          description: DeploymentTargetListSizeExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentTargetListSizeExceededException'\n        '488':\n          description: InstanceDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstanceDoesNotExistException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchGetDeploymentTargetsInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.BatchGetDeploymentTargets\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.BatchGetDeployments:\n    post:\n      operationId: BatchGetDeployments\n      description: Gets information about one or more deployments. The maximum number of deployments that can be returned is 25.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchGetDeploymentsOutput'\n        '480':\n          description: DeploymentIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentIdRequiredException'\n        '481':\n          description: InvalidDeploymentIdException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentIdException'\n        '482':\n          description: BatchLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchLimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchGetDeploymentsInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.BatchGetDeployments\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.BatchGetOnPremisesInstances:\n    post:\n      operationId: BatchGetOnPremisesInstances\n      description: Gets information about one or more on-premises instances. The maximum number of on-premises instances that can be returned is 25.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchGetOnPremisesInstancesOutput'\n        '480':\n          description: InstanceNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstanceNameRequiredException'\n        '481':\n          description: InvalidInstanceNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInstanceNameException'\n        '482':\n          description: BatchLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchLimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchGetOnPremisesInstancesInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.BatchGetOnPremisesInstances\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.ContinueDeployment:\n    post:\n      operationId: ContinueDeployment\n      description: 'For a blue/green deployment, starts the process of rerouting traffic from instances in the original environment to instances in the replacement environment without waiting for a specified wait time to elapse. (Traffic rerouting, which is achieved by registering instances in the replacement environment with the load balancer, can start as soon as all instances have a status of Ready.) '\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: DeploymentIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentIdRequiredException'\n        '481':\n          description: DeploymentDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentDoesNotExistException'\n        '482':\n          description: DeploymentAlreadyCompletedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentAlreadyCompletedException'\n        '483':\n          description: InvalidDeploymentIdException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentIdException'\n        '484':\n          description: DeploymentIsNotInReadyStateException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentIsNotInReadyStateException'\n        '485':\n          description: UnsupportedActionForDeploymentTypeException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedActionForDeploymentTypeException'\n        '486':\n          description: InvalidDeploymentWaitTypeException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentWaitTypeException'\n        '487':\n          description: InvalidDeploymentStatusException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentStatusException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContinueDeploymentInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.ContinueDeployment\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.CreateApplication:\n    post:\n      operationId: CreateApplication\n      description: Creates an application.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateApplicationOutput'\n        '480':\n          description: ApplicationNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationNameRequiredException'\n        '481':\n          description: InvalidApplicationNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidApplicationNameException'\n        '482':\n          description: ApplicationAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationAlreadyExistsException'\n        '483':\n          description: ApplicationLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationLimitExceededException'\n        '484':\n          description: InvalidComputePlatformException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidComputePlatformException'\n        '485':\n          description: InvalidTagsToAddException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidTagsToAddException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateApplicationInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.CreateApplication\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.CreateDeployment:\n    post:\n      operationId: CreateDeployment\n      description: Deploys an application revision through the specified deployment group.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateDeploymentOutput'\n        '480':\n          description: ApplicationNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationNameRequiredException'\n        '481':\n          description: InvalidApplicationNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidApplicationNameException'\n        '482':\n          description: ApplicationDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationDoesNotExistException'\n        '483':\n          description: DeploymentGroupNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentGroupNameRequiredException'\n        '484':\n          description: InvalidDeploymentGroupNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentGroupNameException'\n        '485':\n          description: DeploymentGroupDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentGroupDoesNotExistException'\n        '486':\n          description: RevisionRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RevisionRequiredException'\n        '487':\n          description: RevisionDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RevisionDoesNotExistException'\n        '488':\n          description: InvalidRevisionException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRevisionException'\n        '489':\n          description: InvalidDeploymentConfigNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentConfigNameException'\n        '490':\n          description: DeploymentConfigDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentConfigDoesNotExistException'\n        '491':\n          description: DescriptionTooLongException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescriptionTooLongException'\n        '492':\n          description: DeploymentLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentLimitExceededException'\n        '493':\n          description: InvalidTargetInstancesException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidTargetInstancesException'\n        '494':\n          description: InvalidAutoRollbackConfigException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidAutoRollbackConfigException'\n        '495':\n          description: InvalidLoadBalancerInfoException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidLoadBalancerInfoException'\n        '496':\n          description: InvalidFileExistsBehaviorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidFileExistsBehaviorException'\n        '497':\n          description: InvalidRoleException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRoleException'\n        '498':\n          description: InvalidAutoScalingGroupException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidAutoScalingGroupException'\n        '499':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '500':\n          description: InvalidUpdateOutdatedInstancesOnlyValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidUpdateOutdatedInstancesOnlyValueException'\n        '501':\n          description: InvalidIgnoreApplicationStopFailuresValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidIgnoreApplicationStopFailuresValueException'\n        '502':\n          description: InvalidGitHubAccountTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidGitHubAccountTokenException'\n        '503':\n          description: InvalidTrafficRoutingConfigurationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidTrafficRoutingConfigurationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateDeploymentInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.CreateDeployment\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.CreateDeploymentConfig:\n    post:\n      operationId: CreateDeploymentConfig\n      description: ' Creates a deployment configuration. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateDeploymentConfigOutput'\n        '480':\n          description: InvalidDeploymentConfigNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentConfigNameException'\n        '481':\n          description: DeploymentConfigNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentConfigNameRequiredException'\n        '482':\n          description: DeploymentConfigAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentConfigAlreadyExistsException'\n        '483':\n          description: InvalidMinimumHealthyHostValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidMinimumHealthyHostValueException'\n        '484':\n          description: DeploymentConfigLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentConfigLimitExceededException'\n        '485':\n          description: InvalidComputePlatformException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidComputePlatformException'\n        '486':\n          description: InvalidTrafficRoutingConfigurationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidTrafficRoutingConfigurationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateDeploymentConfigInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.CreateDeploymentConfig\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.CreateDeploymentGroup:\n    post:\n      operationId: CreateDeploymentGroup\n      description: Creates a deployment group to which application revisions are deployed.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateDeploymentGroupOutput'\n        '480':\n          description: ApplicationNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationNameRequiredException'\n        '481':\n          description: InvalidApplicationNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidApplicationNameException'\n        '482':\n          description: ApplicationDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationDoesNotExistException'\n        '483':\n          description: DeploymentGroupNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentGroupNameRequiredException'\n        '484':\n          description: InvalidDeploymentGroupNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentGroupNameException'\n        '485':\n          description: DeploymentGroupAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentGroupAlreadyExistsException'\n        '486':\n          description: InvalidEC2TagException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidEC2TagException'\n        '487':\n          description: InvalidTagException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidTagException'\n        '488':\n          description: InvalidAutoScalingGroupException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidAutoScalingGroupException'\n        '489':\n          description: InvalidDeploymentConfigNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentConfigNameException'\n        '490':\n          description: DeploymentConfigDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentConfigDoesNotExistException'\n        '491':\n          description: RoleRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoleRequiredException'\n        '492':\n          description: InvalidRoleException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRoleException'\n        '493':\n          description: DeploymentGroupLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentGroupLimitExceededException'\n        '494':\n          description: LifecycleHookLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LifecycleHookLimitExceededException'\n        '495':\n          description: InvalidTriggerConfigException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidTriggerConfigException'\n        '496':\n          description: TriggerTargetsLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TriggerTargetsLimitExceededException'\n        '497':\n          description: InvalidAlarmConfigException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidAlarmConfigException'\n        '498':\n          description: AlarmsLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AlarmsLimitExceededException'\n        '499':\n          description: InvalidAutoRollbackConfigException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidAutoRollbackConfigException'\n        '500':\n          description: InvalidLoadBalancerInfoException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidLoadBalancerInfoException'\n        '501':\n          description: InvalidDeploymentStyleException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentStyleException'\n        '502':\n          description: InvalidBlueGreenDeploymentConfigurationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidBlueGreenDeploymentConfigurationException'\n        '503':\n          description: InvalidEC2TagCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidEC2TagCombinationException'\n        '504':\n          description: InvalidOnPremisesTagCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidOnPremisesTagCombinationException'\n        '505':\n          description: TagSetListLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagSetListLimitExceededException'\n        '506':\n          description: InvalidInputException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInputException'\n        '507':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '508':\n          description: InvalidECSServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidECSServiceException'\n        '509':\n          description: InvalidTargetGroupPairException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidTargetGroupPairException'\n        '510':\n          description: ECSServiceMappingLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ECSServiceMappingLimitExceededException'\n        '511':\n          description: InvalidTagsToAddException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidTagsToAddException'\n        '512':\n          description: InvalidTrafficRoutingConfigurationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidTrafficRoutingConfigurationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateDeploymentGroupInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.CreateDeploymentGroup\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.DeleteApplication:\n    post:\n      operationId: DeleteApplication\n      description: Deletes an application.\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: ApplicationNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationNameRequiredException'\n        '481':\n          description: InvalidApplicationNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidApplicationNameException'\n        '482':\n          description: InvalidRoleException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRoleException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteApplicationInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.DeleteApplication\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.DeleteDeploymentConfig:\n    post:\n      operationId: DeleteDeploymentConfig\n      description: \u003cp\u003eDeletes a deployment configuration.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eA deployment configuration cannot be deleted if it is currently in use. Predefined configurations cannot be deleted.\u003c/p\u003e \u003c/note\u003e\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidDeploymentConfigNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentConfigNameException'\n        '481':\n          description: DeploymentConfigNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentConfigNameRequiredException'\n        '482':\n          description: DeploymentConfigInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentConfigInUseException'\n        '483':\n          description: InvalidOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidOperationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteDeploymentConfigInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.DeleteDeploymentConfig\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.DeleteDeploymentGroup:\n    post:\n      operationId: DeleteDeploymentGroup\n      description: Deletes a deployment group.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteDeploymentGroupOutput'\n        '480':\n          description: ApplicationNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationNameRequiredException'\n        '481':\n          description: InvalidApplicationNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidApplicationNameException'\n        '482':\n          description: DeploymentGroupNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentGroupNameRequiredException'\n        '483':\n          description: InvalidDeploymentGroupNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentGroupNameException'\n        '484':\n          description: InvalidRoleException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRoleException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteDeploymentGroupInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.DeleteDeploymentGroup\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.DeleteGitHubAccountToken:\n    post:\n      operationId: DeleteGitHubAccountToken\n      description: Deletes a GitHub account connection.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteGitHubAccountTokenOutput'\n        '480':\n          description: GitHubAccountTokenNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GitHubAccountTokenNameRequiredException'\n        '481':\n          description: GitHubAccountTokenDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GitHubAccountTokenDoesNotExistException'\n        '482':\n          description: InvalidGitHubAccountTokenNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidGitHubAccountTokenNameException'\n        '483':\n          description: ResourceValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceValidationException'\n        '484':\n          description: OperationNotSupportedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationNotSupportedException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteGitHubAccountTokenInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.DeleteGitHubAccountToken\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.DeleteResourcesByExternalId:\n    post:\n      operationId: DeleteResourcesByExternalId\n      description: Deletes resources linked to an external ID.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteResourcesByExternalIdOutput'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteResourcesByExternalIdInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.DeleteResourcesByExternalId\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.DeregisterOnPremisesInstance:\n    post:\n      operationId: DeregisterOnPremisesInstance\n      description: Deregisters an on-premises instance.\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InstanceNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstanceNameRequiredException'\n        '481':\n          description: InvalidInstanceNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInstanceNameException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeregisterOnPremisesInstanceInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.DeregisterOnPremisesInstance\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.GetApplication:\n    post:\n      operationId: GetApplication\n      description: Gets information about an application.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetApplicationOutput'\n        '480':\n          description: ApplicationNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationNameRequiredException'\n        '481':\n          description: InvalidApplicationNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidApplicationNameException'\n        '482':\n          description: ApplicationDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationDoesNotExistException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetApplicationInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.GetApplication\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.GetApplicationRevision:\n    post:\n      operationId: GetApplicationRevision\n      description: Gets information about an application revision.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetApplicationRevisionOutput'\n        '480':\n          description: ApplicationDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationDoesNotExistException'\n        '481':\n          description: ApplicationNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationNameRequiredException'\n        '482':\n          description: InvalidApplicationNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidApplicationNameException'\n        '483':\n          description: RevisionDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RevisionDoesNotExistException'\n        '484':\n          description: RevisionRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RevisionRequiredException'\n        '485':\n          description: InvalidRevisionException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRevisionException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetApplicationRevisionInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.GetApplicationRevision\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.GetDeployment:\n    post:\n      operationId: GetDeployment\n      description: \u003cp\u003eGets information about a deployment.\u003c/p\u003e \u003cnote\u003e \u003cp\u003e The \u003ccode\u003econtent\u003c/code\u003e property of the \u003ccode\u003eappSpecContent\u003c/code\u003e object in the returned revision is always null. Use \u003ccode\u003eGetApplicationRevision\u003c/code\u003e and the \u003ccode\u003esha256\u003c/code\u003e property of the returned \u003ccode\u003eappSpecContent\u003c/code\u003e object to get the content of the deployment’s AppSpec file. \u003c/p\u003e \u003c/note\u003e\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDeploymentOutput'\n        '480':\n          description: DeploymentIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentIdRequiredException'\n        '481':\n          description: InvalidDeploymentIdException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentIdException'\n        '482':\n          description: DeploymentDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentDoesNotExistException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetDeploymentInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.GetDeployment\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.GetDeploymentConfig:\n    post:\n      operationId: GetDeploymentConfig\n      description: Gets information about a deployment configuration.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDeploymentConfigOutput'\n        '480':\n          description: InvalidDeploymentConfigNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentConfigNameException'\n        '481':\n          description: DeploymentConfigNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentConfigNameRequiredException'\n        '482':\n          description: DeploymentConfigDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentConfigDoesNotExistException'\n        '483':\n          description: InvalidComputePlatformException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidComputePlatformException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetDeploymentConfigInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.GetDeploymentConfig\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.GetDeploymentGroup:\n    post:\n      operationId: GetDeploymentGroup\n      description: Gets information about a deployment group.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDeploymentGroupOutput'\n        '480':\n          description: ApplicationNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationNameRequiredException'\n        '481':\n          description: InvalidApplicationNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidApplicationNameException'\n        '482':\n          description: ApplicationDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationDoesNotExistException'\n        '483':\n          description: DeploymentGroupNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentGroupNameRequiredException'\n        '484':\n          description: InvalidDeploymentGroupNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentGroupNameException'\n        '485':\n          description: DeploymentGroupDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentGroupDoesNotExistException'\n        '486':\n          description: DeploymentConfigDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentConfigDoesNotExistException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetDeploymentGroupInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.GetDeploymentGroup\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.GetDeploymentInstance:\n    post:\n      deprecated: true\n      operationId: GetDeploymentInstance\n      description: Gets information about an instance as part of a deployment.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDeploymentInstanceOutput'\n        '480':\n          description: DeploymentIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentIdRequiredException'\n        '481':\n          description: DeploymentDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentDoesNotExistException'\n        '482':\n          description: InstanceIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstanceIdRequiredException'\n        '483':\n          description: InvalidDeploymentIdException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentIdException'\n        '484':\n          description: InstanceDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstanceDoesNotExistException'\n        '485':\n          description: InvalidInstanceNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInstanceNameException'\n        '486':\n          description: InvalidComputePlatformException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidComputePlatformException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetDeploymentInstanceInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.GetDeploymentInstance\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.GetDeploymentTarget:\n    post:\n      operationId: GetDeploymentTarget\n      description: ' Returns information about a deployment target. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDeploymentTargetOutput'\n        '480':\n          description: InvalidDeploymentIdException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentIdException'\n        '481':\n          description: DeploymentIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentIdRequiredException'\n        '482':\n          description: DeploymentDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentDoesNotExistException'\n        '483':\n          description: DeploymentNotStartedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentNotStartedException'\n        '484':\n          description: DeploymentTargetIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentTargetIdRequiredException'\n        '485':\n          description: InvalidDeploymentTargetIdException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentTargetIdException'\n        '486':\n          description: DeploymentTargetDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentTargetDoesNotExistException'\n        '487':\n          description: InvalidInstanceNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInstanceNameException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetDeploymentTargetInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.GetDeploymentTarget\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.GetOnPremisesInstance:\n    post:\n      operationId: GetOnPremisesInstance\n      description: ' Gets information about an on-premises instance. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetOnPremisesInstanceOutput'\n        '480':\n          description: InstanceNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstanceNameRequiredException'\n        '481':\n          description: InstanceNotRegisteredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstanceNotRegisteredException'\n        '482':\n          description: InvalidInstanceNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInstanceNameException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetOnPremisesInstanceInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.GetOnPremisesInstance\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.ListApplicationRevisions:\n    post:\n      operationId: ListApplicationRevisions\n      description: Lists information about revisions for an application.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListApplicationRevisionsOutput'\n        '480':\n          description: ApplicationDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationDoesNotExistException'\n        '481':\n          description: ApplicationNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationNameRequiredException'\n        '482':\n          description: InvalidApplicationNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidApplicationNameException'\n        '483':\n          description: InvalidSortByException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidSortByException'\n        '484':\n          description: InvalidSortOrderException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidSortOrderException'\n        '485':\n          description: InvalidBucketNameFilterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidBucketNameFilterException'\n        '486':\n          description: InvalidKeyPrefixFilterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidKeyPrefixFilterException'\n        '487':\n          description: BucketNameFilterRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BucketNameFilterRequiredException'\n        '488':\n          description: InvalidDeployedStateFilterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeployedStateFilterException'\n        '489':\n          description: InvalidNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidNextTokenException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListApplicationRevisionsInput'\n      parameters:\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.ListApplicationRevisions\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.ListApplications:\n    post:\n      operationId: ListApplications\n      description: Lists the applications registered with the IAM user or AWS account.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListApplicationsOutput'\n        '480':\n          description: InvalidNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidNextTokenException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListApplicationsInput'\n      parameters:\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.ListApplications\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.ListDeploymentConfigs:\n    post:\n      operationId: ListDeploymentConfigs\n      description: Lists the deployment configurations with the IAM user or AWS account.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDeploymentConfigsOutput'\n        '480':\n          description: InvalidNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidNextTokenException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListDeploymentConfigsInput'\n      parameters:\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.ListDeploymentConfigs\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.ListDeploymentGroups:\n    post:\n      operationId: ListDeploymentGroups\n      description: Lists the deployment groups for an application registered with the IAM user or AWS account.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDeploymentGroupsOutput'\n        '480':\n          description: ApplicationNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationNameRequiredException'\n        '481':\n          description: InvalidApplicationNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidApplicationNameException'\n        '482':\n          description: ApplicationDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationDoesNotExistException'\n        '483':\n          description: InvalidNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidNextTokenException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListDeploymentGroupsInput'\n      parameters:\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.ListDeploymentGroups\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.ListDeploymentInstances:\n    post:\n      deprecated: true\n      operationId: ListDeploymentInstances\n      description: \u003cnote\u003e \u003cp\u003e The newer \u003ccode\u003eBatchGetDeploymentTargets\u003c/code\u003e should be used instead because it works with all compute types. \u003ccode\u003eListDeploymentInstances\u003c/code\u003e throws an exception if it is used with a compute platform other than EC2/On-premises or AWS Lambda. \u003c/p\u003e \u003c/note\u003e \u003cp\u003e Lists the instance for a deployment associated with the IAM user or AWS account. \u003c/p\u003e\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDeploymentInstancesOutput'\n        '480':\n          description: DeploymentIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentIdRequiredException'\n        '481':\n          description: DeploymentDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentDoesNotExistException'\n        '482':\n          description: DeploymentNotStartedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentNotStartedException'\n        '483':\n          description: InvalidNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidNextTokenException'\n        '484':\n          description: InvalidDeploymentIdException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentIdException'\n        '485':\n          description: InvalidInstanceStatusException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInstanceStatusException'\n        '486':\n          description: InvalidInstanceTypeException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInstanceTypeException'\n        '487':\n          description: InvalidDeploymentInstanceTypeException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentInstanceTypeException'\n        '488':\n          description: InvalidTargetFilterNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidTargetFilterNameException'\n        '489':\n          description: InvalidComputePlatformException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidComputePlatformException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListDeploymentInstancesInput'\n      parameters:\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.ListDeploymentInstances\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.ListDeploymentTargets:\n    post:\n      operationId: ListDeploymentTargets\n      description: ' Returns an array of target IDs that are associated a deployment. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDeploymentTargetsOutput'\n        '480':\n          description: DeploymentIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentIdRequiredException'\n        '481':\n          description: DeploymentDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentDoesNotExistException'\n        '482':\n          description: DeploymentNotStartedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentNotStartedException'\n        '483':\n          description: InvalidNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidNextTokenException'\n        '484':\n          description: InvalidDeploymentIdException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentIdException'\n        '485':\n          description: InvalidInstanceStatusException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInstanceStatusException'\n        '486':\n          description: InvalidInstanceTypeException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInstanceTypeException'\n        '487':\n          description: InvalidDeploymentInstanceTypeException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentInstanceTypeException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListDeploymentTargetsInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.ListDeploymentTargets\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.ListDeployments:\n    post:\n      operationId: ListDeployments\n      description: Lists the deployments in a deployment group for an application registered with the IAM user or AWS account.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDeploymentsOutput'\n        '480':\n          description: ApplicationNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationNameRequiredException'\n        '481':\n          description: InvalidApplicationNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidApplicationNameException'\n        '482':\n          description: ApplicationDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationDoesNotExistException'\n        '483':\n          description: InvalidDeploymentGroupNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentGroupNameException'\n        '484':\n          description: DeploymentGroupDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentGroupDoesNotExistException'\n        '485':\n          description: DeploymentGroupNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentGroupNameRequiredException'\n        '486':\n          description: InvalidTimeRangeException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidTimeRangeException'\n        '487':\n          description: InvalidDeploymentStatusException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentStatusException'\n        '488':\n          description: InvalidNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidNextTokenException'\n        '489':\n          description: InvalidExternalIdException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidExternalIdException'\n        '490':\n          description: InvalidInputException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInputException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListDeploymentsInput'\n      parameters:\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.ListDeployments\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.ListGitHubAccountTokenNames:\n    post:\n      operationId: ListGitHubAccountTokenNames\n      description: Lists the names of stored connections to GitHub accounts.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListGitHubAccountTokenNamesOutput'\n        '480':\n          description: InvalidNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidNextTokenException'\n        '481':\n          description: ResourceValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceValidationException'\n        '482':\n          description: OperationNotSupportedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationNotSupportedException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListGitHubAccountTokenNamesInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.ListGitHubAccountTokenNames\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.ListOnPremisesInstances:\n    post:\n      operationId: ListOnPremisesInstances\n      description: '\u003cp\u003eGets a list of names for one or more on-premises instances.\u003c/p\u003e \u003cp\u003eUnless otherwise specified, both registered and deregistered on-premises instance names are listed. To list only registered or deregistered on-premises instance names, use the registration status parameter.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOnPremisesInstancesOutput'\n        '480':\n          description: InvalidRegistrationStatusException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRegistrationStatusException'\n        '481':\n          description: InvalidTagFilterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidTagFilterException'\n        '482':\n          description: InvalidNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidNextTokenException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListOnPremisesInstancesInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.ListOnPremisesInstances\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.ListTagsForResource:\n    post:\n      operationId: ListTagsForResource\n      description: ' Returns a list of tags for the resource identified by a specified Amazon Resource Name (ARN). Tags are used to organize and categorize your CodeDeploy resources. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsForResourceOutput'\n        '480':\n          description: ArnNotSupportedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArnNotSupportedException'\n        '481':\n          description: InvalidArnException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidArnException'\n        '482':\n          description: ResourceArnRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceArnRequiredException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListTagsForResourceInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.ListTagsForResource\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.PutLifecycleEventHookExecutionStatus:\n    post:\n      operationId: PutLifecycleEventHookExecutionStatus\n      description: ' Sets the result of a Lambda validation function. The function validates lifecycle hooks during a deployment that uses the AWS Lambda or Amazon ECS compute platform. For AWS Lambda deployments, the available lifecycle hooks are \u003ccode\u003eBeforeAllowTraffic\u003c/code\u003e and \u003ccode\u003eAfterAllowTraffic\u003c/code\u003e. For Amazon ECS deployments, the available lifecycle hooks are \u003ccode\u003eBeforeInstall\u003c/code\u003e, \u003ccode\u003eAfterInstall\u003c/code\u003e, \u003ccode\u003eAfterAllowTestTraffic\u003c/code\u003e, \u003ccode\u003eBeforeAllowTraffic\u003c/code\u003e, and \u003ccode\u003eAfterAllowTraffic\u003c/code\u003e. Lambda validation functions return \u003ccode\u003eSucceeded\u003c/code\u003e or \u003ccode\u003eFailed\u003c/code\u003e. For more information, see \u003ca href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html#appspec-hooks-lambda\"\u003eAppSpec ''hooks'' Section for an AWS Lambda Deployment \u003c/a\u003e and \u003ca href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html#appspec-hooks-ecs\"\u003eAppSpec ''hooks'' Section for an Amazon ECS Deployment\u003c/a\u003e.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutLifecycleEventHookExecutionStatusOutput'\n        '480':\n          description: InvalidLifecycleEventHookExecutionStatusException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidLifecycleEventHookExecutionStatusException'\n        '481':\n          description: InvalidLifecycleEventHookExecutionIdException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidLifecycleEventHookExecutionIdException'\n        '482':\n          description: LifecycleEventAlreadyCompletedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LifecycleEventAlreadyCompletedException'\n        '483':\n          description: DeploymentIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentIdRequiredException'\n        '484':\n          description: DeploymentDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentDoesNotExistException'\n        '485':\n          description: InvalidDeploymentIdException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentIdException'\n        '486':\n          description: UnsupportedActionForDeploymentTypeException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedActionForDeploymentTypeException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutLifecycleEventHookExecutionStatusInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.PutLifecycleEventHookExecutionStatus\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.RegisterApplicationRevision:\n    post:\n      operationId: RegisterApplicationRevision\n      description: Registers with AWS CodeDeploy a revision for the specified application.\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: ApplicationDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationDoesNotExistException'\n        '481':\n          description: ApplicationNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationNameRequiredException'\n        '482':\n          description: InvalidApplicationNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidApplicationNameException'\n        '483':\n          description: DescriptionTooLongException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescriptionTooLongException'\n        '484':\n          description: RevisionRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RevisionRequiredException'\n        '485':\n          description: InvalidRevisionException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRevisionException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterApplicationRevisionInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.RegisterApplicationRevision\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.RegisterOnPremisesInstance:\n    post:\n      operationId: RegisterOnPremisesInstance\n      description: \u003cp\u003eRegisters an on-premises instance.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eOnly one IAM ARN (an IAM session ARN or IAM user ARN) is supported in the request. You cannot use both.\u003c/p\u003e \u003c/note\u003e\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InstanceNameAlreadyRegisteredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstanceNameAlreadyRegisteredException'\n        '481':\n          description: IamArnRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IamArnRequiredException'\n        '482':\n          description: IamSessionArnAlreadyRegisteredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IamSessionArnAlreadyRegisteredException'\n        '483':\n          description: IamUserArnAlreadyRegisteredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IamUserArnAlreadyRegisteredException'\n        '484':\n          description: InstanceNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstanceNameRequiredException'\n        '485':\n          description: IamUserArnRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IamUserArnRequiredException'\n        '486':\n          description: InvalidInstanceNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInstanceNameException'\n        '487':\n          description: InvalidIamSessionArnException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidIamSessionArnException'\n        '488':\n          description: InvalidIamUserArnException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidIamUserArnException'\n        '489':\n          description: MultipleIamArnsProvidedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MultipleIamArnsProvidedException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterOnPremisesInstanceInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.RegisterOnPremisesInstance\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.RemoveTagsFromOnPremisesInstances:\n    post:\n      operationId: RemoveTagsFromOnPremisesInstances\n      description: Removes one or more tags from one or more on-premises instances.\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InstanceNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstanceNameRequiredException'\n        '481':\n          description: InvalidInstanceNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInstanceNameException'\n        '482':\n          description: TagRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagRequiredException'\n        '483':\n          description: InvalidTagException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidTagException'\n        '484':\n          description: TagLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagLimitExceededException'\n        '485':\n          description: InstanceLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstanceLimitExceededException'\n        '486':\n          description: InstanceNotRegisteredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstanceNotRegisteredException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RemoveTagsFromOnPremisesInstancesInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.RemoveTagsFromOnPremisesInstances\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.SkipWaitTimeForInstanceTermination:\n    post:\n      deprecated: true\n      operationId: SkipWaitTimeForInstanceTermination\n      description: 'In a blue/green deployment, overrides any specified wait time and starts terminating instances immediately after the traffic routing is complete.'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: DeploymentIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentIdRequiredException'\n        '481':\n          description: DeploymentDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentDoesNotExistException'\n        '482':\n          description: DeploymentAlreadyCompletedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentAlreadyCompletedException'\n        '483':\n          description: InvalidDeploymentIdException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentIdException'\n        '484':\n          description: DeploymentNotStartedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentNotStartedException'\n        '485':\n          description: UnsupportedActionForDeploymentTypeException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedActionForDeploymentTypeException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SkipWaitTimeForInstanceTerminationInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.SkipWaitTimeForInstanceTermination\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.StopDeployment:\n    post:\n      operationId: StopDeployment\n      description: Attempts to stop an ongoing deployment.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StopDeploymentOutput'\n        '480':\n          description: DeploymentIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentIdRequiredException'\n        '481':\n          description: DeploymentDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentDoesNotExistException'\n        '482':\n          description: DeploymentGroupDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentGroupDoesNotExistException'\n        '483':\n          description: DeploymentAlreadyCompletedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentAlreadyCompletedException'\n        '484':\n          description: InvalidDeploymentIdException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentIdException'\n        '485':\n          description: UnsupportedActionForDeploymentTypeException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedActionForDeploymentTypeException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StopDeploymentInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.StopDeployment\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.TagResource:\n    post:\n      operationId: TagResource\n      description: ' Associates the list of tags in the input \u003ccode\u003eTags\u003c/code\u003e parameter with the resource identified by the \u003ccode\u003eResourceArn\u003c/code\u003e input parameter. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagResourceOutput'\n        '480':\n          description: ResourceArnRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceArnRequiredException'\n        '481':\n          description: ApplicationDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationDoesNotExistException'\n        '482':\n          description: DeploymentGroupDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentGroupDoesNotExistException'\n        '483':\n          description: DeploymentConfigDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentConfigDoesNotExistException'\n        '484':\n          description: TagRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagRequiredException'\n        '485':\n          description: InvalidTagsToAddException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidTagsToAddException'\n        '486':\n          description: ArnNotSupportedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArnNotSupportedException'\n        '487':\n          description: InvalidArnException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidArnException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TagResourceInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.TagResource\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.UntagResource:\n    post:\n      operationId: UntagResource\n      description: ' Disassociates a resource from a list of tags. The resource is identified by the \u003ccode\u003eResourceArn\u003c/code\u003e input parameter. The tags are identified by the list of keys in the \u003ccode\u003eTagKeys\u003c/code\u003e input parameter. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UntagResourceOutput'\n        '480':\n          description: ResourceArnRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceArnRequiredException'\n        '481':\n          description: ApplicationDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationDoesNotExistException'\n        '482':\n          description: DeploymentGroupDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentGroupDoesNotExistException'\n        '483':\n          description: DeploymentConfigDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentConfigDoesNotExistException'\n        '484':\n          description: TagRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagRequiredException'\n        '485':\n          description: InvalidTagsToAddException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidTagsToAddException'\n        '486':\n          description: ArnNotSupportedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArnNotSupportedException'\n        '487':\n          description: InvalidArnException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidArnException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UntagResourceInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.UntagResource\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.UpdateApplication:\n    post:\n      operationId: UpdateApplication\n      description: Changes the name of an application.\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: ApplicationNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationNameRequiredException'\n        '481':\n          description: InvalidApplicationNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidApplicationNameException'\n        '482':\n          description: ApplicationAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationAlreadyExistsException'\n        '483':\n          description: ApplicationDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationDoesNotExistException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateApplicationInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.UpdateApplication\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=CodeDeploy_20141006.UpdateDeploymentGroup:\n    post:\n      operationId: UpdateDeploymentGroup\n      description: Changes information about a deployment group.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateDeploymentGroupOutput'\n        '480':\n          description: ApplicationNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationNameRequiredException'\n        '481':\n          description: InvalidApplicationNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidApplicationNameException'\n        '482':\n          description: ApplicationDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationDoesNotExistException'\n        '483':\n          description: InvalidDeploymentGroupNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentGroupNameException'\n        '484':\n          description: DeploymentGroupAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentGroupAlreadyExistsException'\n        '485':\n          description: DeploymentGroupNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentGroupNameRequiredException'\n        '486':\n          description: DeploymentGroupDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentGroupDoesNotExistException'\n        '487':\n          description: InvalidEC2TagException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidEC2TagException'\n        '488':\n          description: InvalidTagException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidTagException'\n        '489':\n          description: InvalidAutoScalingGroupException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidAutoScalingGroupException'\n        '490':\n          description: InvalidDeploymentConfigNameException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentConfigNameException'\n        '491':\n          description: DeploymentConfigDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentConfigDoesNotExistException'\n        '492':\n          description: InvalidRoleException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRoleException'\n        '493':\n          description: LifecycleHookLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LifecycleHookLimitExceededException'\n        '494':\n          description: InvalidTriggerConfigException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidTriggerConfigException'\n        '495':\n          description: TriggerTargetsLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TriggerTargetsLimitExceededException'\n        '496':\n          description: InvalidAlarmConfigException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidAlarmConfigException'\n        '497':\n          description: AlarmsLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AlarmsLimitExceededException'\n        '498':\n          description: InvalidAutoRollbackConfigException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidAutoRollbackConfigException'\n        '499':\n          description: InvalidLoadBalancerInfoException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidLoadBalancerInfoException'\n        '500':\n          description: InvalidDeploymentStyleException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidDeploymentStyleException'\n        '501':\n          description: InvalidBlueGreenDeploymentConfigurationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidBlueGreenDeploymentConfigurationException'\n        '502':\n          description: InvalidEC2TagCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidEC2TagCombinationException'\n        '503':\n          description: InvalidOnPremisesTagCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidOnPremisesTagCombinationException'\n        '504':\n          description: TagSetListLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagSetListLimitExceededException'\n        '505':\n          description: InvalidInputException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInputException'\n        '506':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '507':\n          description: InvalidECSServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidECSServiceException'\n        '508':\n          description: InvalidTargetGroupPairException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidTargetGroupPairException'\n        '509':\n          description: ECSServiceMappingLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ECSServiceMappingLimitExceededException'\n        '510':\n          description: InvalidTrafficRoutingConfigurationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidTrafficRoutingConfigurationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateDeploymentGroupInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeDeploy_20141006.UpdateDeploymentGroup\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    AddTagsToOnPremisesInstancesInput:\n      type: object\n      required:\n        - tags\n        - instanceNames\n      title: AddTagsToOnPremisesInstancesInput\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: \u003cp\u003eThe tag key-value pairs to add to the on-premises instances.\u003c/p\u003e \u003cp\u003eKeys and values are both required. Keys cannot be null or empty strings. Value-only tags are not allowed.\u003c/p\u003e\n        instanceNames:\n          allOf:\n            - $ref: '#/components/schemas/InstanceNameList'\n            - description: The names of the on-premises instances to which to add tags.\n      description: 'Represents the input of, and adds tags to, an on-premises instance operation.'\n    InstanceNameRequiredException: {}\n    InvalidInstanceNameException: {}\n    TagRequiredException: {}\n    InvalidTagException: {}\n    TagLimitExceededException: {}\n    InstanceLimitExceededException: {}\n    InstanceNotRegisteredException: {}\n    BatchGetApplicationRevisionsOutput:\n      type: object\n      properties:\n        applicationName:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationName'\n            - description: The name of the application that corresponds to the revisions.\n        errorMessage:\n          allOf:\n            - $ref: '#/components/schemas/ErrorMessage'\n            - description: Information about errors that might have occurred during the API call.\n        revisions:\n          allOf:\n            - $ref: '#/components/schemas/RevisionInfoList'\n            - description: 'Additional information about the revisions, including the type and location.'\n      description: Represents the output of a \u003ccode\u003eBatchGetApplicationRevisions\u003c/code\u003e operation.\n    BatchGetApplicationRevisionsInput:\n      type: object\n      required:\n        - applicationName\n        - revisions\n      title: BatchGetApplicationRevisionsInput\n      properties:\n        applicationName:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationName'\n            - description: The name of an AWS CodeDeploy application about which to get revision information.\n        revisions:\n          allOf:\n            - $ref: '#/components/schemas/RevisionLocationList'\n            - description: 'An array of \u003ccode\u003eRevisionLocation\u003c/code\u003e objects that specify information to get about the application revisions, including type and location. The maximum number of \u003ccode\u003eRevisionLocation\u003c/code\u003e objects you can specify is 25.'\n      description: Represents the input of a \u003ccode\u003eBatchGetApplicationRevisions\u003c/code\u003e operation.\n    ApplicationDoesNotExistException: {}\n    ApplicationNameRequiredException: {}\n    InvalidApplicationNameException: {}\n    RevisionRequiredException: {}\n    InvalidRevisionException: {}\n    BatchLimitExceededException: {}\n    BatchGetApplicationsOutput:\n      type: object\n      properties:\n        applicationsInfo:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationsInfoList'\n            - description: Information about the applications.\n      description: Represents the output of a \u003ccode\u003eBatchGetApplications\u003c/code\u003e operation.\n    BatchGetApplicationsInput:\n      type: object\n      required:\n        - applicationNames\n      title: BatchGetApplicationsInput\n      properties:\n        applicationNames:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationsList'\n            - description: A list of application names separated by spaces. The maximum number of application names you can specify is 100.\n      description: Represents the input of a \u003ccode\u003eBatchGetApplications\u003c/code\u003e operation.\n    BatchGetDeploymentGroupsOutput:\n      type: object\n      properties:\n        deploymentGroupsInfo:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentGroupInfoList'\n            - description: Information about the deployment groups.\n        errorMessage:\n          allOf:\n            - $ref: '#/components/schemas/ErrorMessage'\n            - description: Information about errors that might have occurred during the API call.\n      description: Represents the output of a \u003ccode\u003eBatchGetDeploymentGroups\u003c/code\u003e operation.\n    BatchGetDeploymentGroupsInput:\n      type: object\n      required:\n        - applicationName\n        - deploymentGroupNames\n      title: BatchGetDeploymentGroupsInput\n      properties:\n        applicationName:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationName'\n            - description: The name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account.\n        deploymentGroupNames:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentGroupsList'\n            - description: The names of the deployment groups.\n      description: Represents the input of a \u003ccode\u003eBatchGetDeploymentGroups\u003c/code\u003e operation.\n    DeploymentGroupNameRequiredException: {}\n    InvalidDeploymentGroupNameException: {}\n    DeploymentConfigDoesNotExistException: {}\n    BatchGetDeploymentInstancesOutput:\n      type: object\n      properties:\n        instancesSummary:\n          allOf:\n            - $ref: '#/components/schemas/InstanceSummaryList'\n            - description: Information about the instance.\n        errorMessage:\n          allOf:\n            - $ref: '#/components/schemas/ErrorMessage'\n            - description: Information about errors that might have occurred during the API call.\n      description: Represents the output of a \u003ccode\u003eBatchGetDeploymentInstances\u003c/code\u003e operation.\n    BatchGetDeploymentInstancesInput:\n      type: object\n      required:\n        - deploymentId\n        - instanceIds\n      title: BatchGetDeploymentInstancesInput\n      properties:\n        deploymentId:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentId'\n            - description: ' The unique ID of a deployment. '\n        instanceIds:\n          allOf:\n            - $ref: '#/components/schemas/InstancesList'\n            - description: The unique IDs of instances used in the deployment. The maximum number of instance IDs you can specify is 25.\n      description: ' Represents the input of a \u003ccode\u003eBatchGetDeploymentInstances\u003c/code\u003e operation. '\n    DeploymentIdRequiredException: {}\n    DeploymentDoesNotExistException: {}\n    InstanceIdRequiredException: {}\n    InvalidDeploymentIdException: {}\n    InvalidComputePlatformException: {}\n    BatchGetDeploymentTargetsOutput:\n      type: object\n      properties:\n        deploymentTargets:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentTargetList'\n            - description: '\u003cp\u003e A list of target objects for a deployment. Each target object contains details about the target, such as its status and lifecycle events. The type of the target objects depends on the deployment'' compute platform. \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eEC2/On-premises\u003c/b\u003e: Each target object is an EC2 or on-premises instance. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eAWS Lambda\u003c/b\u003e: The target object is a specific version of an AWS Lambda function. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eAmazon ECS\u003c/b\u003e: The target object is an Amazon ECS service. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eCloudFormation\u003c/b\u003e: The target object is an AWS CloudFormation blue/green deployment. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n    BatchGetDeploymentTargetsInput:\n      type: object\n      title: BatchGetDeploymentTargetsInput\n      properties:\n        deploymentId:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentId'\n            - description: ' The unique ID of a deployment. '\n        targetIds:\n          allOf:\n            - $ref: '#/components/schemas/TargetIdList'\n            - description: '\u003cp\u003e The unique IDs of the deployment targets. The compute platform of the deployment determines the type of the targets and their formats. The maximum number of deployment target IDs you can specify is 25.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e For deployments that use the EC2/On-premises compute platform, the target IDs are EC2 or on-premises instances IDs, and their target type is \u003ccode\u003einstanceTarget\u003c/code\u003e. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e For deployments that use the AWS Lambda compute platform, the target IDs are the names of Lambda functions, and their target type is \u003ccode\u003einstanceTarget\u003c/code\u003e. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e For deployments that use the Amazon ECS compute platform, the target IDs are pairs of Amazon ECS clusters and services specified using the format \u003ccode\u003e\u0026lt;clustername\u0026gt;:\u0026lt;servicename\u0026gt;\u003c/code\u003e. Their target type is \u003ccode\u003eecsTarget\u003c/code\u003e. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e For deployments that are deployed with AWS CloudFormation, the target IDs are CloudFormation stack IDs. Their target type is \u003ccode\u003ecloudFormationTarget\u003c/code\u003e. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n    DeploymentNotStartedException: {}\n    DeploymentTargetIdRequiredException: {}\n    InvalidDeploymentTargetIdException: {}\n    DeploymentTargetDoesNotExistException: {}\n    DeploymentTargetListSizeExceededException: {}\n    InstanceDoesNotExistException: {}\n    BatchGetDeploymentsOutput:\n      type: object\n      properties:\n        deploymentsInfo:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentsInfoList'\n            - description: ' Information about the deployments. '\n      description: ' Represents the output of a \u003ccode\u003eBatchGetDeployments\u003c/code\u003e operation. '\n    BatchGetDeploymentsInput:\n      type: object\n      required:\n        - deploymentIds\n      title: BatchGetDeploymentsInput\n      properties:\n        deploymentIds:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentsList'\n            - description: ' A list of deployment IDs, separated by spaces. The maximum number of deployment IDs you can specify is 25.'\n      description: ' Represents the input of a \u003ccode\u003eBatchGetDeployments\u003c/code\u003e operation. '\n    BatchGetOnPremisesInstancesOutput:\n      type: object\n      properties:\n        instanceInfos:\n          allOf:\n            - $ref: '#/components/schemas/InstanceInfoList'\n            - description: Information about the on-premises instances.\n      description: Represents the output of a \u003ccode\u003eBatchGetOnPremisesInstances\u003c/code\u003e operation.\n    BatchGetOnPremisesInstancesInput:\n      type: object\n      required:\n        - instanceNames\n      title: BatchGetOnPremisesInstancesInput\n      properties:\n        instanceNames:\n          allOf:\n            - $ref: '#/components/schemas/InstanceNameList'\n            - description: The names of the on-premises instances about which to get information. The maximum number of instance names you can specify is 25.\n      description: Represents the input of a \u003ccode\u003eBatchGetOnPremisesInstances\u003c/code\u003e operation.\n    ContinueDeploymentInput:\n      type: object\n      title: ContinueDeploymentInput\n      properties:\n        deploymentId:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentId'\n            - description: ' The unique ID of a blue/green deployment for which you want to start rerouting traffic to the replacement environment. '\n        deploymentWaitType:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentWaitType'\n            - description: ' The status of the deployment''s waiting period. \u003ccode\u003eREADY_WAIT\u003c/code\u003e indicates that the deployment is ready to start shifting traffic. \u003ccode\u003eTERMINATION_WAIT\u003c/code\u003e indicates that the traffic is shifted, but the original target is not terminated. '\n    DeploymentAlreadyCompletedException: {}\n    DeploymentIsNotInReadyStateException: {}\n    UnsupportedActionForDeploymentTypeException: {}\n    InvalidDeploymentWaitTypeException: {}\n    InvalidDeploymentStatusException: {}\n    CreateApplicationOutput:\n      type: object\n      properties:\n        applicationId:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationId'\n            - description: A unique application ID.\n      description: Represents the output of a \u003ccode\u003eCreateApplication\u003c/code\u003e operation.\n    CreateApplicationInput:\n      type: object\n      required:\n        - applicationName\n      title: CreateApplicationInput\n      properties:\n        applicationName:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationName'\n            - description: The name of the application. This name must be unique with the applicable IAM user or AWS account.\n        computePlatform:\n          allOf:\n            - $ref: '#/components/schemas/ComputePlatform'\n            - description: ' The destination platform type for the deployment (\u003ccode\u003eLambda\u003c/code\u003e, \u003ccode\u003eServer\u003c/code\u003e, or \u003ccode\u003eECS\u003c/code\u003e).'\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: ' The metadata that you apply to CodeDeploy applications to help you organize and categorize them. Each tag consists of a key and an optional value, both of which you define. '\n      description: Represents the input of a \u003ccode\u003eCreateApplication\u003c/code\u003e operation.\n    ApplicationAlreadyExistsException: {}\n    ApplicationLimitExceededException: {}\n    InvalidTagsToAddException: {}\n    CreateDeploymentOutput:\n      type: object\n      properties:\n        deploymentId:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentId'\n            - description: ' The unique ID of a deployment. '\n      description: ' Represents the output of a \u003ccode\u003eCreateDeployment\u003c/code\u003e operation. '\n    CreateDeploymentInput:\n      type: object\n      required:\n        - applicationName\n      title: CreateDeploymentInput\n      properties:\n        applicationName:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationName'\n            - description: The name of an AWS CodeDeploy application associated with the IAM user or AWS account.\n        deploymentGroupName:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentGroupName'\n            - description: The name of the deployment group.\n        revision:\n          allOf:\n            - $ref: '#/components/schemas/RevisionLocation'\n            - description: ' The type and location of the revision to deploy. '\n        deploymentConfigName:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentConfigName'\n            - description: '\u003cp\u003eThe name of a deployment configuration associated with the IAM user or AWS account.\u003c/p\u003e \u003cp\u003eIf not specified, the value configured in the deployment group is used as the default. If the deployment group does not have a deployment configuration associated with it, \u003ccode\u003eCodeDeployDefault\u003c/code\u003e.\u003ccode\u003eOneAtATime\u003c/code\u003e is used by default.\u003c/p\u003e'\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A comment about the deployment.\n        ignoreApplicationStopFailures:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: '\u003cp\u003e If true, then if an \u003ccode\u003eApplicationStop\u003c/code\u003e, \u003ccode\u003eBeforeBlockTraffic\u003c/code\u003e, or \u003ccode\u003eAfterBlockTraffic\u003c/code\u003e deployment lifecycle event to an instance fails, then the deployment continues to the next deployment lifecycle event. For example, if \u003ccode\u003eApplicationStop\u003c/code\u003e fails, the deployment continues with \u003ccode\u003eDownloadBundle\u003c/code\u003e. If \u003ccode\u003eBeforeBlockTraffic\u003c/code\u003e fails, the deployment continues with \u003ccode\u003eBlockTraffic\u003c/code\u003e. If \u003ccode\u003eAfterBlockTraffic\u003c/code\u003e fails, the deployment continues with \u003ccode\u003eApplicationStop\u003c/code\u003e. \u003c/p\u003e \u003cp\u003e If false or not specified, then if a lifecycle event fails during a deployment to an instance, that deployment fails. If deployment to that instance is part of an overall deployment and the number of healthy hosts is not less than the minimum number of healthy hosts, then a deployment to the next instance is attempted. \u003c/p\u003e \u003cp\u003e During a deployment, the AWS CodeDeploy agent runs the scripts specified for \u003ccode\u003eApplicationStop\u003c/code\u003e, \u003ccode\u003eBeforeBlockTraffic\u003c/code\u003e, and \u003ccode\u003eAfterBlockTraffic\u003c/code\u003e in the AppSpec file from the previous successful deployment. (All other scripts are run from the AppSpec file in the current deployment.) If one of these scripts contains an error and does not run successfully, the deployment can fail. \u003c/p\u003e \u003cp\u003e If the cause of the failure is a script from the last successful deployment that will never run successfully, create a new deployment and use \u003ccode\u003eignoreApplicationStopFailures\u003c/code\u003e to specify that the \u003ccode\u003eApplicationStop\u003c/code\u003e, \u003ccode\u003eBeforeBlockTraffic\u003c/code\u003e, and \u003ccode\u003eAfterBlockTraffic\u003c/code\u003e failures should be ignored. \u003c/p\u003e'\n        targetInstances:\n          allOf:\n            - $ref: '#/components/schemas/TargetInstances'\n            - description: ' Information about the instances that belong to the replacement environment in a blue/green deployment. '\n        autoRollbackConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/AutoRollbackConfiguration'\n            - description: Configuration information for an automatic rollback that is added when a deployment is created.\n        updateOutdatedInstancesOnly:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: ' Indicates whether to deploy to all instances or only to instances that are not running the latest application revision. '\n        fileExistsBehavior:\n          allOf:\n            - $ref: '#/components/schemas/FileExistsBehavior'\n            - description: '\u003cp\u003eInformation about how AWS CodeDeploy handles files that already exist in a deployment target location but weren''t part of the previous successful deployment.\u003c/p\u003e \u003cp\u003eThe \u003ccode\u003efileExistsBehavior\u003c/code\u003e parameter takes any of the following values:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eDISALLOW: The deployment fails. This is also the default behavior if no option is specified.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eOVERWRITE: The version of the file from the application revision currently being deployed replaces the version already on the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eRETAIN: The version of the file already on the instance is kept and used as part of the new deployment.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: Represents the input of a \u003ccode\u003eCreateDeployment\u003c/code\u003e operation.\n    DeploymentGroupDoesNotExistException: {}\n    RevisionDoesNotExistException: {}\n    InvalidDeploymentConfigNameException: {}\n    DescriptionTooLongException: {}\n    DeploymentLimitExceededException: {}\n    InvalidTargetInstancesException: {}\n    InvalidAutoRollbackConfigException: {}\n    InvalidLoadBalancerInfoException: {}\n    InvalidFileExistsBehaviorException: {}\n    InvalidRoleException: {}\n    InvalidAutoScalingGroupException: {}\n    ThrottlingException: {}\n    InvalidUpdateOutdatedInstancesOnlyValueException: {}\n    InvalidIgnoreApplicationStopFailuresValueException: {}\n    InvalidGitHubAccountTokenException: {}\n    InvalidTrafficRoutingConfigurationException: {}\n    CreateDeploymentConfigOutput:\n      type: object\n      properties:\n        deploymentConfigId:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentConfigId'\n            - description: A unique deployment configuration ID.\n      description: Represents the output of a \u003ccode\u003eCreateDeploymentConfig\u003c/code\u003e operation.\n    CreateDeploymentConfigInput:\n      type: object\n      required:\n        - deploymentConfigName\n      title: CreateDeploymentConfigInput\n      properties:\n        deploymentConfigName:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentConfigName'\n            - description: The name of the deployment configuration to create.\n        minimumHealthyHosts:\n          allOf:\n            - $ref: '#/components/schemas/MinimumHealthyHosts'\n            - description: '\u003cp\u003eThe minimum number of healthy instances that should be available at any time during the deployment. There are two parameters expected in the input: type and value.\u003c/p\u003e \u003cp\u003eThe type parameter takes either of the following values:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eHOST_COUNT: The value parameter represents the minimum number of healthy instances as an absolute value.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFLEET_PERCENT: The value parameter represents the minimum number of healthy instances as a percentage of the total number of instances in the deployment. If you specify FLEET_PERCENT, at the start of the deployment, AWS CodeDeploy converts the percentage to the equivalent number of instances and rounds up fractional instances.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eThe value parameter takes an integer.\u003c/p\u003e \u003cp\u003eFor example, to set a minimum of 95% healthy instance, specify a type of FLEET_PERCENT and a value of 95.\u003c/p\u003e'\n        trafficRoutingConfig:\n          allOf:\n            - $ref: '#/components/schemas/TrafficRoutingConfig'\n            - description: The configuration that specifies how the deployment traffic is routed.\n        computePlatform:\n          allOf:\n            - $ref: '#/components/schemas/ComputePlatform'\n            - description: 'The destination platform type for the deployment (\u003ccode\u003eLambda\u003c/code\u003e, \u003ccode\u003eServer\u003c/code\u003e, or \u003ccode\u003eECS\u003c/code\u003e).'\n      description: Represents the input of a \u003ccode\u003eCreateDeploymentConfig\u003c/code\u003e operation.\n    DeploymentConfigNameRequiredException: {}\n    DeploymentConfigAlreadyExistsException: {}\n    InvalidMinimumHealthyHostValueException: {}\n    DeploymentConfigLimitExceededException: {}\n    CreateDeploymentGroupOutput:\n      type: object\n      properties:\n        deploymentGroupId:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentGroupId'\n            - description: A unique deployment group ID.\n      description: Represents the output of a \u003ccode\u003eCreateDeploymentGroup\u003c/code\u003e operation.\n    CreateDeploymentGroupInput:\n      type: object\n      required:\n        - applicationName\n        - deploymentGroupName\n        - serviceRoleArn\n      title: CreateDeploymentGroupInput\n      properties:\n        applicationName:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationName'\n            - description: The name of an AWS CodeDeploy application associated with the IAM user or AWS account.\n        deploymentGroupName:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentGroupName'\n            - description: The name of a new deployment group for the specified application.\n        deploymentConfigName:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentConfigName'\n            - description: '\u003cp\u003eIf specified, the deployment configuration name can be either one of the predefined configurations provided with AWS CodeDeploy or a custom deployment configuration that you create by calling the create deployment configuration operation.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eCodeDeployDefault.OneAtATime\u003c/code\u003e is the default deployment configuration. It is used if a configuration isn''t specified for the deployment or deployment group.\u003c/p\u003e \u003cp\u003eFor more information about the predefined deployment configurations in AWS CodeDeploy, see \u003ca href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-configurations.html\"\u003eWorking with Deployment Configurations in CodeDeploy\u003c/a\u003e in the \u003ci\u003eAWS CodeDeploy User Guide\u003c/i\u003e.\u003c/p\u003e'\n        ec2TagFilters:\n          allOf:\n            - $ref: '#/components/schemas/EC2TagFilterList'\n            - description: The Amazon EC2 tags on which to filter. The deployment group includes EC2 instances with any of the specified tags. Cannot be used in the same call as ec2TagSet.\n        onPremisesInstanceTagFilters:\n          allOf:\n            - $ref: '#/components/schemas/TagFilterList'\n            - description: The on-premises instance tags on which to filter. The deployment group includes on-premises instances with any of the specified tags. Cannot be used in the same call as \u003ccode\u003eOnPremisesTagSet\u003c/code\u003e.\n        autoScalingGroups:\n          allOf:\n            - $ref: '#/components/schemas/AutoScalingGroupNameList'\n            - description: A list of associated Amazon EC2 Auto Scaling groups.\n        serviceRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/Role'\n            - description: A service role Amazon Resource Name (ARN) that allows AWS CodeDeploy to act on the user's behalf when interacting with AWS services.\n        triggerConfigurations:\n          allOf:\n            - $ref: '#/components/schemas/TriggerConfigList'\n            - description: 'Information about triggers to create when the deployment group is created. For examples, see \u003ca href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/how-to-notify-sns.html\"\u003eCreate a Trigger for an AWS CodeDeploy Event\u003c/a\u003e in the \u003ci\u003eAWS CodeDeploy User Guide\u003c/i\u003e.'\n        alarmConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/AlarmConfiguration'\n            - description: Information to add about Amazon CloudWatch alarms when the deployment group is created.\n        autoRollbackConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/AutoRollbackConfiguration'\n            - description: Configuration information for an automatic rollback that is added when a deployment group is created.\n        outdatedInstancesStrategy:\n          allOf:\n            - $ref: '#/components/schemas/OutdatedInstancesStrategy'\n            - description: '\u003cp\u003eIndicates what happens when new EC2 instances are launched mid-deployment and do not receive the deployed application revision.\u003c/p\u003e \u003cp\u003eIf this option is set to \u003ccode\u003eUPDATE\u003c/code\u003e or is unspecified, CodeDeploy initiates one or more ''auto-update outdated instances'' deployments to apply the deployed application revision to the new EC2 instances.\u003c/p\u003e \u003cp\u003eIf this option is set to \u003ccode\u003eIGNORE\u003c/code\u003e, CodeDeploy does not initiate a deployment to update the new EC2 instances. This may result in instances having different revisions.\u003c/p\u003e'\n        deploymentStyle:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentStyle'\n            - description: 'Information about the type of deployment, in-place or blue/green, that you want to run and whether to route deployment traffic behind a load balancer.'\n        blueGreenDeploymentConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/BlueGreenDeploymentConfiguration'\n            - description: Information about blue/green deployment options for a deployment group.\n        loadBalancerInfo:\n          allOf:\n            - $ref: '#/components/schemas/LoadBalancerInfo'\n            - description: Information about the load balancer used in a deployment.\n        ec2TagSet:\n          allOf:\n            - $ref: '#/components/schemas/EC2TagSet'\n            - description: Information about groups of tags applied to EC2 instances. The deployment group includes only EC2 instances identified by all the tag groups. Cannot be used in the same call as \u003ccode\u003eec2TagFilters\u003c/code\u003e.\n        ecsServices:\n          allOf:\n            - $ref: '#/components/schemas/ECSServiceList'\n            - description: ' The target Amazon ECS services in the deployment group. This applies only to deployment groups that use the Amazon ECS compute platform. A target Amazon ECS service is specified as an Amazon ECS cluster and service name pair using the format \u003ccode\u003e\u0026lt;clustername\u0026gt;:\u0026lt;servicename\u0026gt;\u003c/code\u003e. '\n        onPremisesTagSet:\n          allOf:\n            - $ref: '#/components/schemas/OnPremisesTagSet'\n            - description: Information about groups of tags applied to on-premises instances. The deployment group includes only on-premises instances identified by all of the tag groups. Cannot be used in the same call as \u003ccode\u003eonPremisesInstanceTagFilters\u003c/code\u003e.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: ' The metadata that you apply to CodeDeploy deployment groups to help you organize and categorize them. Each tag consists of a key and an optional value, both of which you define. '\n      description: Represents the input of a \u003ccode\u003eCreateDeploymentGroup\u003c/code\u003e operation.\n    DeploymentGroupAlreadyExistsException: {}\n    InvalidEC2TagException: {}\n    RoleRequiredException: {}\n    DeploymentGroupLimitExceededException: {}\n    LifecycleHookLimitExceededException: {}\n    InvalidTriggerConfigException: {}\n    TriggerTargetsLimitExceededException: {}\n    InvalidAlarmConfigException: {}\n    AlarmsLimitExceededException: {}\n    InvalidDeploymentStyleException: {}\n    InvalidBlueGreenDeploymentConfigurationException: {}\n    InvalidEC2TagCombinationException: {}\n    InvalidOnPremisesTagCombinationException: {}\n    TagSetListLimitExceededException: {}\n    InvalidInputException: {}\n    InvalidECSServiceException: {}\n    InvalidTargetGroupPairException: {}\n    ECSServiceMappingLimitExceededException: {}\n    DeleteApplicationInput:\n      type: object\n      required:\n        - applicationName\n      title: DeleteApplicationInput\n      properties:\n        applicationName:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationName'\n            - description: The name of an AWS CodeDeploy application associated with the IAM user or AWS account.\n      description: Represents the input of a \u003ccode\u003eDeleteApplication\u003c/code\u003e operation.\n    DeleteDeploymentConfigInput:\n      type: object\n      required:\n        - deploymentConfigName\n      title: DeleteDeploymentConfigInput\n      properties:\n        deploymentConfigName:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentConfigName'\n            - description: The name of a deployment configuration associated with the IAM user or AWS account.\n      description: Represents the input of a \u003ccode\u003eDeleteDeploymentConfig\u003c/code\u003e operation.\n    DeploymentConfigInUseException: {}\n    InvalidOperationException: {}\n    DeleteDeploymentGroupOutput:\n      type: object\n      properties:\n        hooksNotCleanedUp:\n          allOf:\n            - $ref: '#/components/schemas/AutoScalingGroupList'\n            - description: 'If the output contains no data, and the corresponding deployment group contained at least one Auto Scaling group, AWS CodeDeploy successfully removed all corresponding Auto Scaling lifecycle event hooks from the Amazon EC2 instances in the Auto Scaling group. If the output contains data, AWS CodeDeploy could not remove some Auto Scaling lifecycle event hooks from the Amazon EC2 instances in the Auto Scaling group.'\n      description: Represents the output of a \u003ccode\u003eDeleteDeploymentGroup\u003c/code\u003e operation.\n    DeleteDeploymentGroupInput:\n      type: object\n      required:\n        - applicationName\n        - deploymentGroupName\n      title: DeleteDeploymentGroupInput\n      properties:\n        applicationName:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationName'\n            - description: The name of an AWS CodeDeploy application associated with the IAM user or AWS account.\n        deploymentGroupName:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentGroupName'\n            - description: The name of a deployment group for the specified application.\n      description: Represents the input of a \u003ccode\u003eDeleteDeploymentGroup\u003c/code\u003e operation.\n    DeleteGitHubAccountTokenOutput:\n      type: object\n      properties:\n        tokenName:\n          allOf:\n            - $ref: '#/components/schemas/GitHubAccountTokenName'\n            - description: The name of the GitHub account connection that was deleted.\n      description: Represents the output of a \u003ccode\u003eDeleteGitHubAccountToken\u003c/code\u003e operation.\n    DeleteGitHubAccountTokenInput:\n      type: object\n      title: DeleteGitHubAccountTokenInput\n      properties:\n        tokenName:\n          allOf:\n            - $ref: '#/components/schemas/GitHubAccountTokenName'\n            - description: The name of the GitHub account connection to delete.\n      description: Represents the input of a \u003ccode\u003eDeleteGitHubAccount\u003c/code\u003e operation.\n    GitHubAccountTokenNameRequiredException: {}\n    GitHubAccountTokenDoesNotExistException: {}\n    InvalidGitHubAccountTokenNameException: {}\n    ResourceValidationException: {}\n    OperationNotSupportedException: {}\n    DeleteResourcesByExternalIdOutput:\n      type: object\n      properties: {}\n    DeleteResourcesByExternalIdInput:\n      type: object\n      title: DeleteResourcesByExternalIdInput\n      properties:\n        externalId:\n          allOf:\n            - $ref: '#/components/schemas/ExternalId'\n            - description: 'The unique ID of an external resource (for example, a CloudFormation stack ID) that is linked to one or more CodeDeploy resources.'\n    DeregisterOnPremisesInstanceInput:\n      type: object\n      required:\n        - instanceName\n      title: DeregisterOnPremisesInstanceInput\n      properties:\n        instanceName:\n          allOf:\n            - $ref: '#/components/schemas/InstanceName'\n            - description: The name of the on-premises instance to deregister.\n      description: Represents the input of a \u003ccode\u003eDeregisterOnPremisesInstance\u003c/code\u003e operation.\n    GetApplicationOutput:\n      type: object\n      properties:\n        application:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationInfo'\n            - description: Information about the application.\n      description: Represents the output of a \u003ccode\u003eGetApplication\u003c/code\u003e operation.\n    GetApplicationInput:\n      type: object\n      required:\n        - applicationName\n      title: GetApplicationInput\n      properties:\n        applicationName:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationName'\n            - description: The name of an AWS CodeDeploy application associated with the IAM user or AWS account.\n      description: Represents the input of a \u003ccode\u003eGetApplication\u003c/code\u003e operation.\n    GetApplicationRevisionOutput:\n      type: object\n      properties:\n        applicationName:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationName'\n            - description: The name of the application that corresponds to the revision.\n        revision:\n          allOf:\n            - $ref: '#/components/schemas/RevisionLocation'\n            - description: 'Additional information about the revision, including type and location.'\n        revisionInfo:\n          allOf:\n            - $ref: '#/components/schemas/GenericRevisionInfo'\n            - description: General information about the revision.\n      description: Represents the output of a \u003ccode\u003eGetApplicationRevision\u003c/code\u003e operation.\n    GetApplicationRevisionInput:\n      type: object\n      required:\n        - applicationName\n        - revision\n      title: GetApplicationRevisionInput\n      properties:\n        applicationName:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationName'\n            - description: The name of the application that corresponds to the revision.\n        revision:\n          allOf:\n            - $ref: '#/components/schemas/RevisionLocation'\n            - description: 'Information about the application revision to get, including type and location.'\n      description: Represents the input of a \u003ccode\u003eGetApplicationRevision\u003c/code\u003e operation.\n    GetDeploymentOutput:\n      type: object\n      properties:\n        deploymentInfo:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentInfo'\n            - description: Information about the deployment.\n      description: Represents the output of a \u003ccode\u003eGetDeployment\u003c/code\u003e operation.\n    GetDeploymentInput:\n      type: object\n      required:\n        - deploymentId\n      title: GetDeploymentInput\n      properties:\n        deploymentId:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentId'\n            - description: ' The unique ID of a deployment associated with the IAM user or AWS account. '\n      description: Represents the input of a \u003ccode\u003eGetDeployment\u003c/code\u003e operation.\n    GetDeploymentConfigOutput:\n      type: object\n      properties:\n        deploymentConfigInfo:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentConfigInfo'\n            - description: Information about the deployment configuration.\n      description: Represents the output of a \u003ccode\u003eGetDeploymentConfig\u003c/code\u003e operation.\n    GetDeploymentConfigInput:\n      type: object\n      required:\n        - deploymentConfigName\n      title: GetDeploymentConfigInput\n      properties:\n        deploymentConfigName:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentConfigName'\n            - description: The name of a deployment configuration associated with the IAM user or AWS account.\n      description: Represents the input of a \u003ccode\u003eGetDeploymentConfig\u003c/code\u003e operation.\n    GetDeploymentGroupOutput:\n      type: object\n      properties:\n        deploymentGroupInfo:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentGroupInfo'\n            - description: Information about the deployment group.\n      description: Represents the output of a \u003ccode\u003eGetDeploymentGroup\u003c/code\u003e operation.\n    GetDeploymentGroupInput:\n      type: object\n      required:\n        - applicationName\n        - deploymentGroupName\n      title: GetDeploymentGroupInput\n      properties:\n        applicationName:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationName'\n            - description: The name of an AWS CodeDeploy application associated with the IAM user or AWS account.\n        deploymentGroupName:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentGroupName'\n            - description: The name of a deployment group for the specified application.\n      description: Represents the input of a \u003ccode\u003eGetDeploymentGroup\u003c/code\u003e operation.\n    GetDeploymentInstanceOutput:\n      type: object\n      properties:\n        instanceSummary:\n          allOf:\n            - $ref: '#/components/schemas/InstanceSummary'\n            - description: ' Information about the instance. '\n      description: ' Represents the output of a \u003ccode\u003eGetDeploymentInstance\u003c/code\u003e operation. '\n    GetDeploymentInstanceInput:\n      type: object\n      required:\n        - deploymentId\n        - instanceId\n      title: GetDeploymentInstanceInput\n      properties:\n        deploymentId:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentId'\n            - description: ' The unique ID of a deployment. '\n        instanceId:\n          allOf:\n            - $ref: '#/components/schemas/InstanceId'\n            - description: ' The unique ID of an instance in the deployment group. '\n      description: ' Represents the input of a \u003ccode\u003eGetDeploymentInstance\u003c/code\u003e operation. '\n    GetDeploymentTargetOutput:\n      type: object\n      properties:\n        deploymentTarget:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentTarget'\n            - description: ' A deployment target that contains information about a deployment such as its status, lifecycle events, and when it was last updated. It also contains metadata about the deployment target. The deployment target metadata depends on the deployment target''s type (\u003ccode\u003einstanceTarget\u003c/code\u003e, \u003ccode\u003elambdaTarget\u003c/code\u003e, or \u003ccode\u003eecsTarget\u003c/code\u003e). '\n    GetDeploymentTargetInput:\n      type: object\n      title: GetDeploymentTargetInput\n      properties:\n        deploymentId:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentId'\n            - description: ' The unique ID of a deployment. '\n        targetId:\n          allOf:\n            - $ref: '#/components/schemas/TargetId'\n            - description: ' The unique ID of a deployment target. '\n    GetOnPremisesInstanceOutput:\n      type: object\n      properties:\n        instanceInfo:\n          allOf:\n            - $ref: '#/components/schemas/InstanceInfo'\n            - description: ' Information about the on-premises instance. '\n      description: ' Represents the output of a \u003ccode\u003eGetOnPremisesInstance\u003c/code\u003e operation. '\n    GetOnPremisesInstanceInput:\n      type: object\n      required:\n        - instanceName\n      title: GetOnPremisesInstanceInput\n      properties:\n        instanceName:\n          allOf:\n            - $ref: '#/components/schemas/InstanceName'\n            - description: ' The name of the on-premises instance about which to get information. '\n      description: ' Represents the input of a \u003ccode\u003eGetOnPremisesInstance\u003c/code\u003e operation. '\n    ListApplicationRevisionsOutput:\n      type: object\n      properties:\n        revisions:\n          allOf:\n            - $ref: '#/components/schemas/RevisionLocationList'\n            - description: A list of locations that contain the matching revisions.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'If a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list application revisions call to return the next set of application revisions in the list.'\n      description: Represents the output of a \u003ccode\u003eListApplicationRevisions\u003c/code\u003e operation.\n    ListApplicationRevisionsInput:\n      type: object\n      required:\n        - applicationName\n      title: ListApplicationRevisionsInput\n      properties:\n        applicationName:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationName'\n            - description: ' The name of an AWS CodeDeploy application associated with the IAM user or AWS account. '\n        sortBy:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationRevisionSortBy'\n            - description: '\u003cp\u003eThe column name to use to sort the list results:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eregisterTime\u003c/code\u003e: Sort by the time the revisions were registered with AWS CodeDeploy.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003efirstUsedTime\u003c/code\u003e: Sort by the time the revisions were first used in a deployment.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003elastUsedTime\u003c/code\u003e: Sort by the time the revisions were last used in a deployment.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e If not specified or set to null, the results are returned in an arbitrary order. \u003c/p\u003e'\n        sortOrder:\n          allOf:\n            - $ref: '#/components/schemas/SortOrder'\n            - description: '\u003cp\u003e The order in which to sort the list results: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eascending\u003c/code\u003e: ascending order.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003edescending\u003c/code\u003e: descending order.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf not specified, the results are sorted in ascending order.\u003c/p\u003e \u003cp\u003eIf set to null, the results are sorted in an arbitrary order.\u003c/p\u003e'\n        s3Bucket:\n          allOf:\n            - $ref: '#/components/schemas/S3Bucket'\n            - description: '\u003cp\u003e An Amazon S3 bucket name to limit the search for revisions. \u003c/p\u003e \u003cp\u003e If set to null, all of the user''s buckets are searched. \u003c/p\u003e'\n        s3KeyPrefix:\n          allOf:\n            - $ref: '#/components/schemas/S3Key'\n            - description: ' A key prefix for the set of Amazon S3 objects to limit the search for revisions. '\n        deployed:\n          allOf:\n            - $ref: '#/components/schemas/ListStateFilterAction'\n            - description: '\u003cp\u003e Whether to list revisions based on whether the revision is the target revision of a deployment group: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003einclude\u003c/code\u003e: List revisions that are target revisions of a deployment group.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eexclude\u003c/code\u003e: Do not list revisions that are target revisions of a deployment group.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eignore\u003c/code\u003e: List all revisions.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: An identifier returned from the previous \u003ccode\u003eListApplicationRevisions\u003c/code\u003e call. It can be used to return the next set of applications in the list.\n      description: ' Represents the input of a \u003ccode\u003eListApplicationRevisions\u003c/code\u003e operation. '\n    InvalidSortByException: {}\n    InvalidSortOrderException: {}\n    InvalidBucketNameFilterException: {}\n    InvalidKeyPrefixFilterException: {}\n    BucketNameFilterRequiredException: {}\n    InvalidDeployedStateFilterException: {}\n    InvalidNextTokenException: {}\n    ListApplicationsOutput:\n      type: object\n      properties:\n        applications:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationsList'\n            - description: A list of application names.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'If a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list applications call to return the next set of applications in the list.'\n      description: Represents the output of a ListApplications operation.\n    ListApplicationsInput:\n      type: object\n      title: ListApplicationsInput\n      properties:\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: An identifier returned from the previous list applications call. It can be used to return the next set of applications in the list.\n      description: Represents the input of a \u003ccode\u003eListApplications\u003c/code\u003e operation.\n    ListDeploymentConfigsOutput:\n      type: object\n      properties:\n        deploymentConfigsList:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentConfigsList'\n            - description: 'A list of deployment configurations, including built-in configurations such as \u003ccode\u003eCodeDeployDefault.OneAtATime\u003c/code\u003e.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'If a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list deployment configurations call to return the next set of deployment configurations in the list.'\n      description: Represents the output of a \u003ccode\u003eListDeploymentConfigs\u003c/code\u003e operation.\n    ListDeploymentConfigsInput:\n      type: object\n      title: ListDeploymentConfigsInput\n      properties:\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'An identifier returned from the previous \u003ccode\u003eListDeploymentConfigs\u003c/code\u003e call. It can be used to return the next set of deployment configurations in the list. '\n      description: Represents the input of a \u003ccode\u003eListDeploymentConfigs\u003c/code\u003e operation.\n    ListDeploymentGroupsOutput:\n      type: object\n      properties:\n        applicationName:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationName'\n            - description: The application name.\n        deploymentGroups:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentGroupsList'\n            - description: A list of deployment group names.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'If a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list deployment groups call to return the next set of deployment groups in the list.'\n      description: Represents the output of a \u003ccode\u003eListDeploymentGroups\u003c/code\u003e operation.\n    ListDeploymentGroupsInput:\n      type: object\n      required:\n        - applicationName\n      title: ListDeploymentGroupsInput\n      properties:\n        applicationName:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationName'\n            - description: The name of an AWS CodeDeploy application associated with the IAM user or AWS account.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: An identifier returned from the previous list deployment groups call. It can be used to return the next set of deployment groups in the list.\n      description: Represents the input of a \u003ccode\u003eListDeploymentGroups\u003c/code\u003e operation.\n    ListDeploymentInstancesOutput:\n      type: object\n      properties:\n        instancesList:\n          allOf:\n            - $ref: '#/components/schemas/InstancesList'\n            - description: A list of instance IDs.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'If a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list deployment instances call to return the next set of deployment instances in the list.'\n      description: Represents the output of a \u003ccode\u003eListDeploymentInstances\u003c/code\u003e operation.\n    ListDeploymentInstancesInput:\n      type: object\n      required:\n        - deploymentId\n      title: ListDeploymentInstancesInput\n      properties:\n        deploymentId:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentId'\n            - description: ' The unique ID of a deployment. '\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: An identifier returned from the previous list deployment instances call. It can be used to return the next set of deployment instances in the list.\n        instanceStatusFilter:\n          allOf:\n            - $ref: '#/components/schemas/InstanceStatusList'\n            - description: '\u003cp\u003eA subset of instances to list by status:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePending\u003c/code\u003e: Include those instances with pending deployments.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eInProgress\u003c/code\u003e: Include those instances where deployments are still in progress.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSucceeded\u003c/code\u003e: Include those instances with successful deployments.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eFailed\u003c/code\u003e: Include those instances with failed deployments.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSkipped\u003c/code\u003e: Include those instances with skipped deployments.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUnknown\u003c/code\u003e: Include those instances with deployments in an unknown state.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        instanceTypeFilter:\n          allOf:\n            - $ref: '#/components/schemas/InstanceTypeList'\n            - description: 'The set of instances in a blue/green deployment, either those in the original environment (\"BLUE\") or those in the replacement environment (\"GREEN\"), for which you want to view instance information.'\n      description: ' Represents the input of a \u003ccode\u003eListDeploymentInstances\u003c/code\u003e operation. '\n    InvalidInstanceStatusException: {}\n    InvalidInstanceTypeException: {}\n    InvalidDeploymentInstanceTypeException: {}\n    InvalidTargetFilterNameException: {}\n    ListDeploymentTargetsOutput:\n      type: object\n      properties:\n        targetIds:\n          allOf:\n            - $ref: '#/components/schemas/TargetIdList'\n            - description: ' The unique IDs of deployment targets. '\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: ' If a large amount of information is returned, a token identifier is also returned. It can be used in a subsequent \u003ccode\u003eListDeploymentTargets\u003c/code\u003e call to return the next set of deployment targets in the list. '\n    ListDeploymentTargetsInput:\n      type: object\n      title: ListDeploymentTargetsInput\n      properties:\n        deploymentId:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentId'\n            - description: ' The unique ID of a deployment. '\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: ' A token identifier returned from the previous \u003ccode\u003eListDeploymentTargets\u003c/code\u003e call. It can be used to return the next set of deployment targets in the list. '\n        targetFilters:\n          allOf:\n            - $ref: '#/components/schemas/TargetFilters'\n            - description: '\u003cp\u003e A key used to filter the returned targets. The two valid values are:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eTargetStatus\u003c/code\u003e - A \u003ccode\u003eTargetStatus\u003c/code\u003e filter string can be \u003ccode\u003eFailed\u003c/code\u003e, \u003ccode\u003eInProgress\u003c/code\u003e, \u003ccode\u003ePending\u003c/code\u003e, \u003ccode\u003eReady\u003c/code\u003e, \u003ccode\u003eSkipped\u003c/code\u003e, \u003ccode\u003eSucceeded\u003c/code\u003e, or \u003ccode\u003eUnknown\u003c/code\u003e. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eServerInstanceLabel\u003c/code\u003e - A \u003ccode\u003eServerInstanceLabel\u003c/code\u003e filter string can be \u003ccode\u003eBlue\u003c/code\u003e or \u003ccode\u003eGreen\u003c/code\u003e. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n    ListDeploymentsOutput:\n      type: object\n      properties:\n        deployments:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentsList'\n            - description: A list of deployment IDs.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'If a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list deployments call to return the next set of deployments in the list.'\n      description: Represents the output of a \u003ccode\u003eListDeployments\u003c/code\u003e operation.\n    ListDeploymentsInput:\n      type: object\n      title: ListDeploymentsInput\n      properties:\n        applicationName:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationName'\n            - description: '\u003cp\u003eThe name of an AWS CodeDeploy application associated with the IAM user or AWS account.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eIf \u003ccode\u003eapplicationName\u003c/code\u003e is specified, then \u003ccode\u003edeploymentGroupName\u003c/code\u003e must be specified. If it is not specified, then \u003ccode\u003edeploymentGroupName\u003c/code\u003e must not be specified. \u003c/p\u003e \u003c/note\u003e'\n        deploymentGroupName:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentGroupName'\n            - description: '\u003cp\u003eThe name of a deployment group for the specified application.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eIf \u003ccode\u003edeploymentGroupName\u003c/code\u003e is specified, then \u003ccode\u003eapplicationName\u003c/code\u003e must be specified. If it is not specified, then \u003ccode\u003eapplicationName\u003c/code\u003e must not be specified. \u003c/p\u003e \u003c/note\u003e'\n        externalId:\n          allOf:\n            - $ref: '#/components/schemas/ExternalId'\n            - description: The unique ID of an external resource for returning deployments linked to the external resource.\n        includeOnlyStatuses:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentStatusList'\n            - description: '\u003cp\u003eA subset of deployments to list by status:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCreated\u003c/code\u003e: Include created deployments in the resulting list.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eQueued\u003c/code\u003e: Include queued deployments in the resulting list.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIn Progress\u003c/code\u003e: Include in-progress deployments in the resulting list.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSucceeded\u003c/code\u003e: Include successful deployments in the resulting list.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eFailed\u003c/code\u003e: Include failed deployments in the resulting list.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eStopped\u003c/code\u003e: Include stopped deployments in the resulting list.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        createTimeRange:\n          allOf:\n            - $ref: '#/components/schemas/TimeRange'\n            - description: A time range (start and end) for returning a subset of the list of deployments.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: An identifier returned from the previous list deployments call. It can be used to return the next set of deployments in the list.\n      description: Represents the input of a \u003ccode\u003eListDeployments\u003c/code\u003e operation.\n    InvalidTimeRangeException: {}\n    InvalidExternalIdException: {}\n    ListGitHubAccountTokenNamesOutput:\n      type: object\n      properties:\n        tokenNameList:\n          allOf:\n            - $ref: '#/components/schemas/GitHubAccountTokenNameList'\n            - description: A list of names of connections to GitHub accounts.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'If a large amount of information is returned, an identifier is also returned. It can be used in a subsequent \u003ccode\u003eListGitHubAccountTokenNames\u003c/code\u003e call to return the next set of names in the list. '\n      description: Represents the output of a \u003ccode\u003eListGitHubAccountTokenNames\u003c/code\u003e operation.\n    ListGitHubAccountTokenNamesInput:\n      type: object\n      title: ListGitHubAccountTokenNamesInput\n      properties:\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'An identifier returned from the previous \u003ccode\u003eListGitHubAccountTokenNames\u003c/code\u003e call. It can be used to return the next set of names in the list. '\n      description: Represents the input of a \u003ccode\u003eListGitHubAccountTokenNames\u003c/code\u003e operation.\n    ListOnPremisesInstancesOutput:\n      type: object\n      properties:\n        instanceNames:\n          allOf:\n            - $ref: '#/components/schemas/InstanceNameList'\n            - description: The list of matching on-premises instance names.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'If a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list on-premises instances call to return the next set of on-premises instances in the list.'\n      description: Represents the output of the list on-premises instances operation.\n    ListOnPremisesInstancesInput:\n      type: object\n      title: ListOnPremisesInstancesInput\n      properties:\n        registrationStatus:\n          allOf:\n            - $ref: '#/components/schemas/RegistrationStatus'\n            - description: '\u003cp\u003eThe registration status of the on-premises instances:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDeregistered\u003c/code\u003e: Include deregistered on-premises instances in the resulting list.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eRegistered\u003c/code\u003e: Include registered on-premises instances in the resulting list.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        tagFilters:\n          allOf:\n            - $ref: '#/components/schemas/TagFilterList'\n            - description: The on-premises instance tags that are used to restrict the on-premises instance names returned.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: An identifier returned from the previous list on-premises instances call. It can be used to return the next set of on-premises instances in the list.\n      description: Represents the input of a \u003ccode\u003eListOnPremisesInstances\u003c/code\u003e operation.\n    InvalidRegistrationStatusException: {}\n    InvalidTagFilterException: {}\n    ListTagsForResourceOutput:\n      type: object\n      properties:\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: ' A list of tags returned by \u003ccode\u003eListTagsForResource\u003c/code\u003e. The tags are associated with the resource identified by the input \u003ccode\u003eResourceArn\u003c/code\u003e parameter. '\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'If a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list application revisions call to return the next set of application revisions in the list.'\n    ListTagsForResourceInput:\n      type: object\n      required:\n        - ResourceArn\n      title: ListTagsForResourceInput\n      properties:\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: ' The ARN of a CodeDeploy resource. \u003ccode\u003eListTagsForResource\u003c/code\u003e returns all the tags associated with the resource that is identified by the \u003ccode\u003eResourceArn\u003c/code\u003e. '\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: An identifier returned from the previous \u003ccode\u003eListTagsForResource\u003c/code\u003e call. It can be used to return the next set of applications in the list.\n    ArnNotSupportedException: {}\n    InvalidArnException: {}\n    ResourceArnRequiredException: {}\n    PutLifecycleEventHookExecutionStatusOutput:\n      type: object\n      properties:\n        lifecycleEventHookExecutionId:\n          allOf:\n            - $ref: '#/components/schemas/LifecycleEventHookExecutionId'\n            - description: The execution ID of the lifecycle event hook. A hook is specified in the \u003ccode\u003ehooks\u003c/code\u003e section of the deployment's AppSpec file.\n    PutLifecycleEventHookExecutionStatusInput:\n      type: object\n      title: PutLifecycleEventHookExecutionStatusInput\n      properties:\n        deploymentId:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentId'\n            - description: ' The unique ID of a deployment. Pass this ID to a Lambda function that validates a deployment lifecycle event. '\n        lifecycleEventHookExecutionId:\n          allOf:\n            - $ref: '#/components/schemas/LifecycleEventHookExecutionId'\n            - description: ' The execution ID of a deployment''s lifecycle hook. A deployment lifecycle hook is specified in the \u003ccode\u003ehooks\u003c/code\u003e section of the AppSpec file. '\n        status:\n          allOf:\n            - $ref: '#/components/schemas/LifecycleEventStatus'\n            - description: The result of a Lambda function that validates a deployment lifecycle event. \u003ccode\u003eSucceeded\u003c/code\u003e and \u003ccode\u003eFailed\u003c/code\u003e are the only valid values for \u003ccode\u003estatus\u003c/code\u003e.\n    InvalidLifecycleEventHookExecutionStatusException: {}\n    InvalidLifecycleEventHookExecutionIdException: {}\n    LifecycleEventAlreadyCompletedException: {}\n    RegisterApplicationRevisionInput:\n      type: object\n      required:\n        - applicationName\n        - revision\n      title: RegisterApplicationRevisionInput\n      properties:\n        applicationName:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationName'\n            - description: The name of an AWS CodeDeploy application associated with the IAM user or AWS account.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A comment about the revision.\n        revision:\n          allOf:\n            - $ref: '#/components/schemas/RevisionLocation'\n            - description: 'Information about the application revision to register, including type and location.'\n      description: Represents the input of a RegisterApplicationRevision operation.\n    RegisterOnPremisesInstanceInput:\n      type: object\n      required:\n        - instanceName\n      title: RegisterOnPremisesInstanceInput\n      properties:\n        instanceName:\n          allOf:\n            - $ref: '#/components/schemas/InstanceName'\n            - description: The name of the on-premises instance to register.\n        iamSessionArn:\n          allOf:\n            - $ref: '#/components/schemas/IamSessionArn'\n            - description: The ARN of the IAM session to associate with the on-premises instance.\n        iamUserArn:\n          allOf:\n            - $ref: '#/components/schemas/IamUserArn'\n            - description: The ARN of the IAM user to associate with the on-premises instance.\n      description: Represents the input of the register on-premises instance operation.\n    InstanceNameAlreadyRegisteredException: {}\n    IamArnRequiredException: {}\n    IamSessionArnAlreadyRegisteredException: {}\n    IamUserArnAlreadyRegisteredException: {}\n    IamUserArnRequiredException: {}\n    InvalidIamSessionArnException: {}\n    InvalidIamUserArnException: {}\n    MultipleIamArnsProvidedException: {}\n    RemoveTagsFromOnPremisesInstancesInput:\n      type: object\n      required:\n        - tags\n        - instanceNames\n      title: RemoveTagsFromOnPremisesInstancesInput\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: The tag key-value pairs to remove from the on-premises instances.\n        instanceNames:\n          allOf:\n            - $ref: '#/components/schemas/InstanceNameList'\n            - description: The names of the on-premises instances from which to remove tags.\n      description: Represents the input of a \u003ccode\u003eRemoveTagsFromOnPremisesInstances\u003c/code\u003e operation.\n    SkipWaitTimeForInstanceTerminationInput:\n      type: object\n      title: SkipWaitTimeForInstanceTerminationInput\n      properties:\n        deploymentId:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentId'\n            - description: ' The unique ID of a blue/green deployment for which you want to skip the instance termination wait time. '\n    StopDeploymentOutput:\n      type: object\n      properties:\n        status:\n          allOf:\n            - $ref: '#/components/schemas/StopStatus'\n            - description: '\u003cp\u003eThe status of the stop deployment operation:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003ePending: The stop operation is pending.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eSucceeded: The stop operation was successful.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        statusMessage:\n          allOf:\n            - $ref: '#/components/schemas/Message'\n            - description: An accompanying status message.\n      description: ' Represents the output of a \u003ccode\u003eStopDeployment\u003c/code\u003e operation. '\n    StopDeploymentInput:\n      type: object\n      required:\n        - deploymentId\n      title: StopDeploymentInput\n      properties:\n        deploymentId:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentId'\n            - description: ' The unique ID of a deployment. '\n        autoRollbackEnabled:\n          allOf:\n            - $ref: '#/components/schemas/NullableBoolean'\n            - description: ' Indicates, when a deployment is stopped, whether instances that have been updated should be rolled back to the previous version of the application revision. '\n      description: ' Represents the input of a \u003ccode\u003eStopDeployment\u003c/code\u003e operation. '\n    TagResourceOutput:\n      type: object\n      properties: {}\n    TagResourceInput:\n      type: object\n      required:\n        - ResourceArn\n        - Tags\n      title: TagResourceInput\n      properties:\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: ' The ARN of a resource, such as a CodeDeploy application or deployment group. '\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: ' A list of tags that \u003ccode\u003eTagResource\u003c/code\u003e associates with a resource. The resource is identified by the \u003ccode\u003eResourceArn\u003c/code\u003e input parameter. '\n    UntagResourceOutput:\n      type: object\n      properties: {}\n    UntagResourceInput:\n      type: object\n      required:\n        - ResourceArn\n        - TagKeys\n      title: UntagResourceInput\n      properties:\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: ' The Amazon Resource Name (ARN) that specifies from which resource to disassociate the tags with the keys in the \u003ccode\u003eTagKeys\u003c/code\u003e input parameter. '\n        TagKeys:\n          allOf:\n            - $ref: '#/components/schemas/TagKeyList'\n            - description: ' A list of keys of \u003ccode\u003eTag\u003c/code\u003e objects. The \u003ccode\u003eTag\u003c/code\u003e objects identified by the keys are disassociated from the resource specified by the \u003ccode\u003eResourceArn\u003c/code\u003e input parameter. '\n    UpdateApplicationInput:\n      type: object\n      title: UpdateApplicationInput\n      properties:\n        applicationName:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationName'\n            - description: The current name of the application you want to change.\n        newApplicationName:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationName'\n            - description: The new name to give the application.\n      description: Represents the input of an \u003ccode\u003eUpdateApplication\u003c/code\u003e operation.\n    UpdateDeploymentGroupOutput:\n      type: object\n      properties:\n        hooksNotCleanedUp:\n          allOf:\n            - $ref: '#/components/schemas/AutoScalingGroupList'\n            - description: 'If the output contains no data, and the corresponding deployment group contained at least one Auto Scaling group, AWS CodeDeploy successfully removed all corresponding Auto Scaling lifecycle event hooks from the AWS account. If the output contains data, AWS CodeDeploy could not remove some Auto Scaling lifecycle event hooks from the AWS account.'\n      description: Represents the output of an \u003ccode\u003eUpdateDeploymentGroup\u003c/code\u003e operation.\n    UpdateDeploymentGroupInput:\n      type: object\n      required:\n        - applicationName\n        - currentDeploymentGroupName\n      title: UpdateDeploymentGroupInput\n      properties:\n        applicationName:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationName'\n            - description: The application name that corresponds to the deployment group to update.\n        currentDeploymentGroupName:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentGroupName'\n            - description: The current name of the deployment group.\n        newDeploymentGroupName:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentGroupName'\n            - description: 'The new name of the deployment group, if you want to change it.'\n        deploymentConfigName:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentConfigName'\n            - description: 'The replacement deployment configuration name to use, if you want to change it.'\n        ec2TagFilters:\n          allOf:\n            - $ref: '#/components/schemas/EC2TagFilterList'\n            - description: 'The replacement set of Amazon EC2 tags on which to filter, if you want to change them. To keep the existing tags, enter their names. To remove tags, do not enter any tag names.'\n        onPremisesInstanceTagFilters:\n          allOf:\n            - $ref: '#/components/schemas/TagFilterList'\n            - description: 'The replacement set of on-premises instance tags on which to filter, if you want to change them. To keep the existing tags, enter their names. To remove tags, do not enter any tag names.'\n        autoScalingGroups:\n          allOf:\n            - $ref: '#/components/schemas/AutoScalingGroupNameList'\n            - description: 'The replacement list of Auto Scaling groups to be included in the deployment group, if you want to change them. To keep the Auto Scaling groups, enter their names. To remove Auto Scaling groups, do not enter any Auto Scaling group names.'\n        serviceRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/Role'\n            - description: 'A replacement ARN for the service role, if you want to change it.'\n        triggerConfigurations:\n          allOf:\n            - $ref: '#/components/schemas/TriggerConfigList'\n            - description: 'Information about triggers to change when the deployment group is updated. For examples, see \u003ca href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/how-to-notify-edit.html\"\u003eEdit a Trigger in a CodeDeploy Deployment Group\u003c/a\u003e in the \u003ci\u003eAWS CodeDeploy User Guide\u003c/i\u003e.'\n        alarmConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/AlarmConfiguration'\n            - description: Information to add or change about Amazon CloudWatch alarms when the deployment group is updated.\n        autoRollbackConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/AutoRollbackConfiguration'\n            - description: Information for an automatic rollback configuration that is added or changed when a deployment group is updated.\n        outdatedInstancesStrategy:\n          allOf:\n            - $ref: '#/components/schemas/OutdatedInstancesStrategy'\n            - description: '\u003cp\u003eIndicates what happens when new EC2 instances are launched mid-deployment and do not receive the deployed application revision.\u003c/p\u003e \u003cp\u003eIf this option is set to \u003ccode\u003eUPDATE\u003c/code\u003e or is unspecified, CodeDeploy initiates one or more ''auto-update outdated instances'' deployments to apply the deployed application revision to the new EC2 instances.\u003c/p\u003e \u003cp\u003eIf this option is set to \u003ccode\u003eIGNORE\u003c/code\u003e, CodeDeploy does not initiate a deployment to update the new EC2 instances. This may result in instances having different revisions.\u003c/p\u003e'\n        deploymentStyle:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentStyle'\n            - description: 'Information about the type of deployment, either in-place or blue/green, you want to run and whether to route deployment traffic behind a load balancer.'\n        blueGreenDeploymentConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/BlueGreenDeploymentConfiguration'\n            - description: Information about blue/green deployment options for a deployment group.\n        loadBalancerInfo:\n          allOf:\n            - $ref: '#/components/schemas/LoadBalancerInfo'\n            - description: Information about the load balancer used in a deployment.\n        ec2TagSet:\n          allOf:\n            - $ref: '#/components/schemas/EC2TagSet'\n            - description: Information about groups of tags applied to on-premises instances. The deployment group includes only EC2 instances identified by all the tag groups.\n        ecsServices:\n          allOf:\n            - $ref: '#/components/schemas/ECSServiceList'\n            - description: ' The target Amazon ECS services in the deployment group. This applies only to deployment groups that use the Amazon ECS compute platform. A target Amazon ECS service is specified as an Amazon ECS cluster and service name pair using the format \u003ccode\u003e\u0026lt;clustername\u0026gt;:\u0026lt;servicename\u0026gt;\u003c/code\u003e. '\n        onPremisesTagSet:\n          allOf:\n            - $ref: '#/components/schemas/OnPremisesTagSet'\n            - description: Information about an on-premises instance tag set. The deployment group includes only on-premises instances identified by all the tag groups.\n      description: Represents the input of an \u003ccode\u003eUpdateDeploymentGroup\u003c/code\u003e operation.\n    TagList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Tag'\n    InstanceNameList:\n      type: array\n      items:\n        $ref: '#/components/schemas/InstanceName'\n    AdditionalDeploymentStatusInfo:\n      type: string\n      deprecated: true\n      description: 'AdditionalDeploymentStatusInfo is deprecated, use DeploymentStatusMessageList instead.'\n    AlarmName:\n      type: string\n    Alarm:\n      type: object\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/AlarmName'\n            - description: The name of the alarm. Maximum length is 255 characters. Each alarm name can be used only once in a list of alarms.\n      description: Information about an alarm.\n    Boolean:\n      type: boolean\n    AlarmList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Alarm'\n    AlarmConfiguration:\n      type: object\n      properties:\n        enabled:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: Indicates whether the alarm configuration is enabled.\n        ignorePollAlarmFailure:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: '\u003cp\u003eIndicates whether a deployment should continue if information about the current state of alarms cannot be retrieved from Amazon CloudWatch. The default value is false.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003etrue\u003c/code\u003e: The deployment proceeds even if alarm status information can''t be retrieved from Amazon CloudWatch.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003efalse\u003c/code\u003e: The deployment stops if alarm status information can''t be retrieved from Amazon CloudWatch.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        alarms:\n          allOf:\n            - $ref: '#/components/schemas/AlarmList'\n            - description: A list of alarms configured for the deployment group. A maximum of 10 alarms can be added to a deployment group.\n      description: Information about alarms associated with the deployment group.\n    RawStringContent:\n      type: string\n    RawStringSha256:\n      type: string\n    AppSpecContent:\n      type: object\n      properties:\n        content:\n          allOf:\n            - $ref: '#/components/schemas/RawStringContent'\n            - description: '\u003cp\u003e The YAML-formatted or JSON-formatted revision string. \u003c/p\u003e \u003cp\u003e For an AWS Lambda deployment, the content includes a Lambda function name, the alias for its original version, and the alias for its replacement version. The deployment shifts traffic from the original version of the Lambda function to the replacement version. \u003c/p\u003e \u003cp\u003e For an Amazon ECS deployment, the content includes the task name, information about the load balancer that serves traffic to the container, and more. \u003c/p\u003e \u003cp\u003e For both types of deployments, the content can specify Lambda functions that run at specified hooks, such as \u003ccode\u003eBeforeInstall\u003c/code\u003e, during a deployment. \u003c/p\u003e'\n        sha256:\n          allOf:\n            - $ref: '#/components/schemas/RawStringSha256'\n            - description: ' The SHA256 hash value of the revision content. '\n      description: ' A revision for an AWS Lambda or Amazon ECS deployment that is a YAML-formatted or JSON-formatted string. For AWS Lambda and Amazon ECS deployments, the revision is the same as the AppSpec file. This method replaces the deprecated \u003ccode\u003eRawString\u003c/code\u003e data type. '\n    ApplicationId:\n      type: string\n    ApplicationName:\n      type: string\n      minLength: 1\n      maxLength: 100\n    Timestamp:\n      type: string\n      format: date-time\n    GitHubAccountTokenName:\n      type: string\n    ComputePlatform:\n      type: string\n      enum:\n        - Server\n        - Lambda\n        - ECS\n    ApplicationInfo:\n      type: object\n      properties:\n        applicationId:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationId'\n            - description: The application ID.\n        applicationName:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationName'\n            - description: The application name.\n        createTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The time at which the application was created.\n        linkedToGitHub:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: 'True if the user has authenticated with GitHub for the specified application. Otherwise, false.'\n        gitHubAccountName:\n          allOf:\n            - $ref: '#/components/schemas/GitHubAccountTokenName'\n            - description: The name for a connection to a GitHub account.\n        computePlatform:\n          allOf:\n            - $ref: '#/components/schemas/ComputePlatform'\n            - description: The destination platform type for deployment of the application (\u003ccode\u003eLambda\u003c/code\u003e or \u003ccode\u003eServer\u003c/code\u003e).\n      description: Information about an application.\n    ApplicationRevisionSortBy:\n      type: string\n      enum:\n        - registerTime\n        - firstUsedTime\n        - lastUsedTime\n    ApplicationsInfoList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ApplicationInfo'\n    ApplicationsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ApplicationName'\n    Arn:\n      type: string\n      minLength: 1\n      maxLength: 1011\n    AutoRollbackEventsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/AutoRollbackEvent'\n    AutoRollbackConfiguration:\n      type: object\n      properties:\n        enabled:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: Indicates whether a defined automatic rollback configuration is currently enabled.\n        events:\n          allOf:\n            - $ref: '#/components/schemas/AutoRollbackEventsList'\n            - description: The event type or types that trigger a rollback.\n      description: Information about a configuration for automatically rolling back to a previous version of an application revision when a deployment is not completed successfully.\n    AutoRollbackEvent:\n      type: string\n      enum:\n        - DEPLOYMENT_FAILURE\n        - DEPLOYMENT_STOP_ON_ALARM\n        - DEPLOYMENT_STOP_ON_REQUEST\n    AutoScalingGroupName:\n      type: string\n    AutoScalingGroupHook:\n      type: string\n    AutoScalingGroup:\n      type: object\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/AutoScalingGroupName'\n            - description: The Auto Scaling group name.\n        hook:\n          allOf:\n            - $ref: '#/components/schemas/AutoScalingGroupHook'\n            - description: An Auto Scaling lifecycle event hook name.\n      description: Information about an Auto Scaling group.\n    AutoScalingGroupList:\n      type: array\n      items:\n        $ref: '#/components/schemas/AutoScalingGroup'\n    AutoScalingGroupNameList:\n      type: array\n      items:\n        $ref: '#/components/schemas/AutoScalingGroupName'\n    RevisionLocationList:\n      type: array\n      items:\n        $ref: '#/components/schemas/RevisionLocation'\n    ErrorMessage:\n      type: string\n    RevisionInfoList:\n      type: array\n      items:\n        $ref: '#/components/schemas/RevisionInfo'\n    DeploymentGroupsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/DeploymentGroupName'\n    DeploymentGroupInfoList:\n      type: array\n      items:\n        $ref: '#/components/schemas/DeploymentGroupInfo'\n    DeploymentId:\n      type: string\n    InstancesList:\n      type: array\n      items:\n        $ref: '#/components/schemas/InstanceId'\n    InstanceSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/InstanceSummary'\n    TargetIdList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TargetId'\n    DeploymentTargetList:\n      type: array\n      items:\n        $ref: '#/components/schemas/DeploymentTarget'\n    DeploymentsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/DeploymentId'\n    DeploymentsInfoList:\n      type: array\n      items:\n        $ref: '#/components/schemas/DeploymentInfo'\n    InstanceInfoList:\n      type: array\n      items:\n        $ref: '#/components/schemas/InstanceInfo'\n    BlueInstanceTerminationOption:\n      type: object\n      properties:\n        action:\n          allOf:\n            - $ref: '#/components/schemas/InstanceAction'\n            - description: '\u003cp\u003eThe action to take on instances in the original environment after a successful blue/green deployment.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eTERMINATE\u003c/code\u003e: Instances are terminated after a specified wait time.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKEEP_ALIVE\u003c/code\u003e: Instances are left running after they are deregistered from the load balancer and removed from the deployment group.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        terminationWaitTimeInMinutes:\n          allOf:\n            - $ref: '#/components/schemas/Duration'\n            - description: '\u003cp\u003eFor an Amazon EC2 deployment, the number of minutes to wait after a successful blue/green deployment before terminating instances from the original environment.\u003c/p\u003e \u003cp\u003e For an Amazon ECS deployment, the number of minutes before deleting the original (blue) task set. During an Amazon ECS deployment, CodeDeploy shifts traffic from the original (blue) task set to a replacement (green) task set. \u003c/p\u003e \u003cp\u003e The maximum setting is 2880 minutes (2 days). \u003c/p\u003e'\n      description: 'Information about whether instances in the original environment are terminated when a blue/green deployment is successful. \u003ccode\u003eBlueInstanceTerminationOption\u003c/code\u003e does not apply to Lambda deployments. '\n    DeploymentReadyOption:\n      type: object\n      properties:\n        actionOnTimeout:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentReadyAction'\n            - description: '\u003cp\u003eInformation about when to reroute traffic from an original environment to a replacement environment in a blue/green deployment.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eCONTINUE_DEPLOYMENT: Register new instances with the load balancer immediately after the new application revision is installed on the instances in the replacement environment.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eSTOP_DEPLOYMENT: Do not register new instances with a load balancer unless traffic rerouting is started using \u003ca\u003eContinueDeployment\u003c/a\u003e. If traffic rerouting is not started before the end of the specified wait period, the deployment status is changed to Stopped.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        waitTimeInMinutes:\n          allOf:\n            - $ref: '#/components/schemas/Duration'\n            - description: The number of minutes to wait before the status of a blue/green deployment is changed to Stopped if rerouting is not started manually. Applies only to the \u003ccode\u003eSTOP_DEPLOYMENT\u003c/code\u003e option for \u003ccode\u003eactionOnTimeout\u003c/code\u003e.\n      description: Information about how traffic is rerouted to instances in a replacement environment in a blue/green deployment.\n    GreenFleetProvisioningOption:\n      type: object\n      properties:\n        action:\n          allOf:\n            - $ref: '#/components/schemas/GreenFleetProvisioningAction'\n            - description: '\u003cp\u003eThe method used to add instances to a replacement environment.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDISCOVER_EXISTING\u003c/code\u003e: Use instances that already exist or will be created manually.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCOPY_AUTO_SCALING_GROUP\u003c/code\u003e: Use settings from a specified Auto Scaling group to define and create instances in a new Auto Scaling group.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: Information about the instances that belong to the replacement environment in a blue/green deployment.\n    BlueGreenDeploymentConfiguration:\n      type: object\n      properties:\n        terminateBlueInstancesOnDeploymentSuccess:\n          allOf:\n            - $ref: '#/components/schemas/BlueInstanceTerminationOption'\n            - description: Information about whether to terminate instances in the original fleet during a blue/green deployment.\n        deploymentReadyOption:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentReadyOption'\n            - description: Information about the action to take when newly provisioned instances are ready to receive traffic in a blue/green deployment.\n        greenFleetProvisioningOption:\n          allOf:\n            - $ref: '#/components/schemas/GreenFleetProvisioningOption'\n            - description: Information about how instances are provisioned for a replacement environment in a blue/green deployment.\n      description: Information about blue/green deployment options for a deployment group.\n    InstanceAction:\n      type: string\n      enum:\n        - TERMINATE\n        - KEEP_ALIVE\n    Duration:\n      type: integer\n    BundleType:\n      type: string\n      enum:\n        - tar\n        - tgz\n        - zip\n        - YAML\n        - JSON\n    CloudFormationResourceType:\n      type: string\n    TargetId:\n      type: string\n    Time:\n      type: string\n      format: date-time\n    LifecycleEventList:\n      type: array\n      items:\n        $ref: '#/components/schemas/LifecycleEvent'\n    TargetStatus:\n      type: string\n      enum:\n        - Pending\n        - InProgress\n        - Succeeded\n        - Failed\n        - Skipped\n        - Unknown\n        - Ready\n    TrafficWeight:\n      type: number\n      format: double\n    CloudFormationTarget:\n      type: object\n      properties:\n        deploymentId:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentId'\n            - description: The unique ID of an AWS CloudFormation blue/green deployment.\n        targetId:\n          allOf:\n            - $ref: '#/components/schemas/TargetId'\n            - description: \" The unique ID of a deployment target that has a type of\\_\u003ccode\u003eCloudFormationTarget\u003c/code\u003e. \"\n        lastUpdatedAt:\n          allOf:\n            - $ref: '#/components/schemas/Time'\n            - description: ' The date and time when the target application was updated by an AWS CloudFormation blue/green deployment. '\n        lifecycleEvents:\n          allOf:\n            - $ref: '#/components/schemas/LifecycleEventList'\n            - description: ' The lifecycle events of the AWS CloudFormation blue/green deployment to this target application. '\n        status:\n          allOf:\n            - $ref: '#/components/schemas/TargetStatus'\n            - description: ' The status of an AWS CloudFormation blue/green deployment''s target application. '\n        resourceType:\n          allOf:\n            - $ref: '#/components/schemas/CloudFormationResourceType'\n            - description: The resource type for the AWS CloudFormation blue/green deployment.\n        targetVersionWeight:\n          allOf:\n            - $ref: '#/components/schemas/TrafficWeight'\n            - description: The percentage of production traffic that the target version of an AWS CloudFormation blue/green deployment receives.\n      description: ' Information about the target to be updated by an AWS CloudFormation blue/green deployment. This target type is used for all deployments initiated by a CloudFormation stack update.'\n    CommitId:\n      type: string\n    DeploymentWaitType:\n      type: string\n      enum:\n        - READY_WAIT\n        - TERMINATION_WAIT\n    DeploymentConfigName:\n      type: string\n      minLength: 1\n      maxLength: 100\n    MinimumHealthyHosts:\n      type: object\n      properties:\n        type:\n          allOf:\n            - $ref: '#/components/schemas/MinimumHealthyHostsType'\n            - description: '\u003cp\u003eThe minimum healthy instance type:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eHOST_COUNT\u003c/code\u003e: The minimum number of healthy instances as an absolute value.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eFLEET_PERCENT\u003c/code\u003e: The minimum number of healthy instances as a percentage of the total number of instances in the deployment.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIn an example of nine instances, if a HOST_COUNT of six is specified, deploy to up to three instances at a time. The deployment is successful if six or more instances are deployed to successfully. Otherwise, the deployment fails. If a FLEET_PERCENT of 40 is specified, deploy to up to five instances at a time. The deployment is successful if four or more instances are deployed to successfully. Otherwise, the deployment fails.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eIn a call to the \u003ccode\u003eGetDeploymentConfig\u003c/code\u003e, CodeDeployDefault.OneAtATime returns a minimum healthy instance type of MOST_CONCURRENCY and a value of 1. This means a deployment to only one instance at a time. (You cannot set the type to MOST_CONCURRENCY, only to HOST_COUNT or FLEET_PERCENT.) In addition, with CodeDeployDefault.OneAtATime, AWS CodeDeploy attempts to ensure that all instances but one are kept in a healthy state during the deployment. Although this allows one instance at a time to be taken offline for a new deployment, it also means that if the deployment to the last instance fails, the overall deployment is still successful.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/instances-health.html\"\u003eAWS CodeDeploy Instance Health\u003c/a\u003e in the \u003ci\u003eAWS CodeDeploy User Guide\u003c/i\u003e.\u003c/p\u003e'\n        value:\n          allOf:\n            - $ref: '#/components/schemas/MinimumHealthyHostsValue'\n            - description: The minimum healthy instance value.\n      description: Information about minimum healthy instance.\n    TrafficRoutingConfig:\n      type: object\n      properties:\n        type:\n          allOf:\n            - $ref: '#/components/schemas/TrafficRoutingType'\n            - description: The type of traffic shifting (\u003ccode\u003eTimeBasedCanary\u003c/code\u003e or \u003ccode\u003eTimeBasedLinear\u003c/code\u003e) used by a deployment configuration.\n        timeBasedCanary:\n          allOf:\n            - $ref: '#/components/schemas/TimeBasedCanary'\n            - description: A configuration that shifts traffic from one version of a Lambda function or ECS task set to another in two increments. The original and target Lambda function versions or ECS task sets are specified in the deployment's AppSpec file.\n        timeBasedLinear:\n          allOf:\n            - $ref: '#/components/schemas/TimeBasedLinear'\n            - description: 'A configuration that shifts traffic from one version of a Lambda function or ECS task set to another in equal increments, with an equal number of minutes between each increment. The original and target Lambda function versions or ECS task sets are specified in the deployment''s AppSpec file.'\n      description: 'The configuration that specifies how traffic is shifted from one version of a Lambda function to another version during an AWS Lambda deployment, or from one Amazon ECS task set to another during an Amazon ECS deployment.'\n    DeploymentConfigId:\n      type: string\n    DeploymentGroupName:\n      type: string\n      minLength: 1\n      maxLength: 100\n    EC2TagFilterList:\n      type: array\n      items:\n        $ref: '#/components/schemas/EC2TagFilter'\n    TagFilterList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TagFilter'\n    Role:\n      type: string\n    TriggerConfigList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TriggerConfig'\n    OutdatedInstancesStrategy:\n      type: string\n      enum:\n        - UPDATE\n        - IGNORE\n    DeploymentStyle:\n      type: object\n      properties:\n        deploymentType:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentType'\n            - description: Indicates whether to run an in-place deployment or a blue/green deployment.\n        deploymentOption:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentOption'\n            - description: Indicates whether to route deployment traffic behind a load balancer.\n      description: 'Information about the type of deployment, either in-place or blue/green, you want to run and whether to route deployment traffic behind a load balancer.'\n    LoadBalancerInfo:\n      type: object\n      properties:\n        elbInfoList:\n          allOf:\n            - $ref: '#/components/schemas/ELBInfoList'\n            - description: '\u003cp\u003eAn array that contains information about the load balancer to use for load balancing in a deployment. In Elastic Load Balancing, load balancers are used with Classic Load Balancers.\u003c/p\u003e \u003cnote\u003e \u003cp\u003e Adding more than one load balancer to the array is not supported. \u003c/p\u003e \u003c/note\u003e'\n        targetGroupInfoList:\n          allOf:\n            - $ref: '#/components/schemas/TargetGroupInfoList'\n            - description: '\u003cp\u003eAn array that contains information about the target group to use for load balancing in a deployment. In Elastic Load Balancing, target groups are used with Application Load Balancers.\u003c/p\u003e \u003cnote\u003e \u003cp\u003e Adding more than one target group to the array is not supported. \u003c/p\u003e \u003c/note\u003e'\n        targetGroupPairInfoList:\n          allOf:\n            - $ref: '#/components/schemas/TargetGroupPairInfoList'\n            - description: ' The target group pair information. This is an array of \u003ccode\u003eTargeGroupPairInfo\u003c/code\u003e objects with a maximum size of one. '\n      description: Information about the Elastic Load Balancing load balancer or target group used in a deployment.\n    EC2TagSet:\n      type: object\n      properties:\n        ec2TagSetList:\n          allOf:\n            - $ref: '#/components/schemas/EC2TagSetList'\n            - description: 'A list that contains other lists of EC2 instance tag groups. For an instance to be included in the deployment group, it must be identified by all of the tag groups in the list.'\n      description: Information about groups of EC2 instance tags.\n    ECSServiceList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ECSService'\n    OnPremisesTagSet:\n      type: object\n      properties:\n        onPremisesTagSetList:\n          allOf:\n            - $ref: '#/components/schemas/OnPremisesTagSetList'\n            - description: 'A list that contains other lists of on-premises instance tag groups. For an instance to be included in the deployment group, it must be identified by all of the tag groups in the list.'\n      description: Information about groups of on-premises instance tags.\n    DeploymentGroupId:\n      type: string\n    RevisionLocation:\n      type: object\n      properties:\n        revisionType:\n          allOf:\n            - $ref: '#/components/schemas/RevisionLocationType'\n            - description: '\u003cp\u003eThe type of application revision:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eS3: An application revision stored in Amazon S3.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eGitHub: An application revision stored in GitHub (EC2/On-premises deployments only).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eString: A YAML-formatted or JSON-formatted string (AWS Lambda deployments only).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAppSpecContent: An \u003ccode\u003eAppSpecContent\u003c/code\u003e object that contains the contents of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML stored as a RawString.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        s3Location:\n          allOf:\n            - $ref: '#/components/schemas/S3Location'\n            - description: 'Information about the location of a revision stored in Amazon S3. '\n        gitHubLocation:\n          allOf:\n            - $ref: '#/components/schemas/GitHubLocation'\n            - description: Information about the location of application artifacts stored in GitHub.\n        string:\n          allOf:\n            - $ref: '#/components/schemas/RawString'\n            - description: Information about the location of an AWS Lambda deployment revision stored as a RawString.\n        appSpecContent:\n          allOf:\n            - $ref: '#/components/schemas/AppSpecContent'\n            - description: ' The content of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML and stored as a RawString. '\n      description: Information about the location of an application revision.\n    Description:\n      type: string\n    TargetInstances:\n      type: object\n      properties:\n        tagFilters:\n          allOf:\n            - $ref: '#/components/schemas/EC2TagFilterList'\n            - description: 'The tag filter key, type, and value used to identify Amazon EC2 instances in a replacement environment for a blue/green deployment. Cannot be used in the same call as \u003ccode\u003eec2TagSet\u003c/code\u003e.'\n        autoScalingGroups:\n          allOf:\n            - $ref: '#/components/schemas/AutoScalingGroupNameList'\n            - description: The names of one or more Auto Scaling groups to identify a replacement environment for a blue/green deployment.\n        ec2TagSet:\n          allOf:\n            - $ref: '#/components/schemas/EC2TagSet'\n            - description: Information about the groups of EC2 instance tags that an instance must be identified by in order for it to be included in the replacement environment for a blue/green deployment. Cannot be used in the same call as \u003ccode\u003etagFilters\u003c/code\u003e.\n      description: Information about the instances to be used in the replacement environment in a blue/green deployment.\n    FileExistsBehavior:\n      type: string\n      enum:\n        - DISALLOW\n        - OVERWRITE\n        - RETAIN\n    ExternalId:\n      type: string\n    DeploymentConfigInfo:\n      type: object\n      properties:\n        deploymentConfigId:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentConfigId'\n            - description: The deployment configuration ID.\n        deploymentConfigName:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentConfigName'\n            - description: The deployment configuration name.\n        minimumHealthyHosts:\n          allOf:\n            - $ref: '#/components/schemas/MinimumHealthyHosts'\n            - description: Information about the number or percentage of minimum healthy instance.\n        createTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The time at which the deployment configuration was created.\n        computePlatform:\n          allOf:\n            - $ref: '#/components/schemas/ComputePlatform'\n            - description: 'The destination platform type for the deployment (\u003ccode\u003eLambda\u003c/code\u003e, \u003ccode\u003eServer\u003c/code\u003e, or \u003ccode\u003eECS\u003c/code\u003e).'\n        trafficRoutingConfig:\n          allOf:\n            - $ref: '#/components/schemas/TrafficRoutingConfig'\n            - description: The configuration that specifies how the deployment traffic is routed. Used for deployments with a Lambda or ECS compute platform only.\n      description: Information about a deployment configuration.\n    DeploymentConfigsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/DeploymentConfigName'\n    DeploymentCreator:\n      type: string\n      enum:\n        - user\n        - autoscaling\n        - codeDeployRollback\n        - CodeDeploy\n        - CodeDeployAutoUpdate\n        - CloudFormation\n        - CloudFormationRollback\n    LastDeploymentInfo:\n      type: object\n      properties:\n        deploymentId:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentId'\n            - description: ' The unique ID of a deployment. '\n        status:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentStatus'\n            - description: The status of the most recent deployment.\n        endTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp that indicates when the most recent deployment to the deployment group was complete.\n        createTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp that indicates when the most recent deployment to the deployment group started.\n      description: Information about the most recent attempted or successful deployment to a deployment group.\n    DeploymentGroupInfo:\n      type: object\n      properties:\n        applicationName:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationName'\n            - description: The application name.\n        deploymentGroupId:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentGroupId'\n            - description: The deployment group ID.\n        deploymentGroupName:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentGroupName'\n            - description: The deployment group name.\n        deploymentConfigName:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentConfigName'\n            - description: The deployment configuration name.\n        ec2TagFilters:\n          allOf:\n            - $ref: '#/components/schemas/EC2TagFilterList'\n            - description: The Amazon EC2 tags on which to filter. The deployment group includes EC2 instances with any of the specified tags.\n        onPremisesInstanceTagFilters:\n          allOf:\n            - $ref: '#/components/schemas/TagFilterList'\n            - description: The on-premises instance tags on which to filter. The deployment group includes on-premises instances with any of the specified tags.\n        autoScalingGroups:\n          allOf:\n            - $ref: '#/components/schemas/AutoScalingGroupList'\n            - description: A list of associated Auto Scaling groups.\n        serviceRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/Role'\n            - description: 'A service role Amazon Resource Name (ARN) that grants CodeDeploy permission to make calls to AWS services on your behalf. For more information, see \u003ca href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/getting-started-create-service-role.html\"\u003eCreate a Service Role for AWS CodeDeploy\u003c/a\u003e in the \u003ci\u003eAWS CodeDeploy User Guide\u003c/i\u003e.'\n        targetRevision:\n          allOf:\n            - $ref: '#/components/schemas/RevisionLocation'\n            - description: 'Information about the deployment group''s target revision, including type and location.'\n        triggerConfigurations:\n          allOf:\n            - $ref: '#/components/schemas/TriggerConfigList'\n            - description: Information about triggers associated with the deployment group.\n        alarmConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/AlarmConfiguration'\n            - description: A list of alarms associated with the deployment group.\n        autoRollbackConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/AutoRollbackConfiguration'\n            - description: Information about the automatic rollback configuration associated with the deployment group.\n        deploymentStyle:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentStyle'\n            - description: 'Information about the type of deployment, either in-place or blue/green, you want to run and whether to route deployment traffic behind a load balancer.'\n        outdatedInstancesStrategy:\n          allOf:\n            - $ref: '#/components/schemas/OutdatedInstancesStrategy'\n            - description: '\u003cp\u003eIndicates what happens when new EC2 instances are launched mid-deployment and do not receive the deployed application revision.\u003c/p\u003e \u003cp\u003eIf this option is set to \u003ccode\u003eUPDATE\u003c/code\u003e or is unspecified, CodeDeploy initiates one or more ''auto-update outdated instances'' deployments to apply the deployed application revision to the new EC2 instances.\u003c/p\u003e \u003cp\u003eIf this option is set to \u003ccode\u003eIGNORE\u003c/code\u003e, CodeDeploy does not initiate a deployment to update the new EC2 instances. This may result in instances having different revisions.\u003c/p\u003e'\n        blueGreenDeploymentConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/BlueGreenDeploymentConfiguration'\n            - description: Information about blue/green deployment options for a deployment group.\n        loadBalancerInfo:\n          allOf:\n            - $ref: '#/components/schemas/LoadBalancerInfo'\n            - description: Information about the load balancer to use in a deployment.\n        lastSuccessfulDeployment:\n          allOf:\n            - $ref: '#/components/schemas/LastDeploymentInfo'\n            - description: Information about the most recent successful deployment to the deployment group.\n        lastAttemptedDeployment:\n          allOf:\n            - $ref: '#/components/schemas/LastDeploymentInfo'\n            - description: Information about the most recent attempted deployment to the deployment group.\n        ec2TagSet:\n          allOf:\n            - $ref: '#/components/schemas/EC2TagSet'\n            - description: Information about groups of tags applied to an EC2 instance. The deployment group includes only EC2 instances identified by all of the tag groups. Cannot be used in the same call as ec2TagFilters.\n        onPremisesTagSet:\n          allOf:\n            - $ref: '#/components/schemas/OnPremisesTagSet'\n            - description: Information about groups of tags applied to an on-premises instance. The deployment group includes only on-premises instances identified by all the tag groups. Cannot be used in the same call as onPremisesInstanceTagFilters.\n        computePlatform:\n          allOf:\n            - $ref: '#/components/schemas/ComputePlatform'\n            - description: 'The destination platform type for the deployment (\u003ccode\u003eLambda\u003c/code\u003e, \u003ccode\u003eServer\u003c/code\u003e, or \u003ccode\u003eECS\u003c/code\u003e).'\n        ecsServices:\n          allOf:\n            - $ref: '#/components/schemas/ECSServiceList'\n            - description: ' The target Amazon ECS services in the deployment group. This applies only to deployment groups that use the Amazon ECS compute platform. A target Amazon ECS service is specified as an Amazon ECS cluster and service name pair using the format \u003ccode\u003e\u0026lt;clustername\u0026gt;:\u0026lt;servicename\u0026gt;\u003c/code\u003e. '\n      description: Information about a deployment group.\n    DeploymentStatus:\n      type: string\n      enum:\n        - Created\n        - Queued\n        - InProgress\n        - Baking\n        - Succeeded\n        - Failed\n        - Stopped\n        - Ready\n    ErrorInformation:\n      type: object\n      properties:\n        code:\n          allOf:\n            - $ref: '#/components/schemas/ErrorCode'\n            - description: '\u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/error-codes.html\"\u003eError Codes for AWS CodeDeploy\u003c/a\u003e in the \u003ca href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide\"\u003eAWS CodeDeploy User Guide\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eThe error code:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eAPPLICATION_MISSING: The application was missing. This error code is most likely raised if the application is deleted after the deployment is created, but before it is started.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eDEPLOYMENT_GROUP_MISSING: The deployment group was missing. This error code is most likely raised if the deployment group is deleted after the deployment is created, but before it is started.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eHEALTH_CONSTRAINTS: The deployment failed on too many instances to be successfully deployed within the instance health constraints specified.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eHEALTH_CONSTRAINTS_INVALID: The revision cannot be successfully deployed within the instance health constraints specified.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIAM_ROLE_MISSING: The service role cannot be accessed.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIAM_ROLE_PERMISSIONS: The service role does not have the correct permissions.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eINTERNAL_ERROR: There was an internal error.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eNO_EC2_SUBSCRIPTION: The calling account is not subscribed to Amazon EC2.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eNO_INSTANCES: No instances were specified, or no instances can be found.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eOVER_MAX_INSTANCES: The maximum number of instances was exceeded.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTHROTTLED: The operation was throttled because the calling account exceeded the throttling limits of one or more AWS services.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTIMEOUT: The deployment has timed out.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eREVISION_MISSING: The revision ID was missing. This error code is most likely raised if the revision is deleted after the deployment is created, but before it is started.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        message:\n          allOf:\n            - $ref: '#/components/schemas/ErrorMessage'\n            - description: An accompanying error message.\n      description: Information about a deployment error.\n    DeploymentOverview:\n      type: object\n      properties:\n        Pending:\n          allOf:\n            - $ref: '#/components/schemas/InstanceCount'\n            - description: The number of instances in the deployment in a pending state.\n        InProgress:\n          allOf:\n            - $ref: '#/components/schemas/InstanceCount'\n            - description: The number of instances in which the deployment is in progress.\n        Succeeded:\n          allOf:\n            - $ref: '#/components/schemas/InstanceCount'\n            - description: The number of instances in the deployment to which revisions have been successfully deployed.\n        Failed:\n          allOf:\n            - $ref: '#/components/schemas/InstanceCount'\n            - description: The number of instances in the deployment in a failed state.\n        Skipped:\n          allOf:\n            - $ref: '#/components/schemas/InstanceCount'\n            - description: The number of instances in the deployment in a skipped state.\n        Ready:\n          allOf:\n            - $ref: '#/components/schemas/InstanceCount'\n            - description: The number of instances in a replacement environment ready to receive traffic in a blue/green deployment.\n      description: Information about the deployment status of the instances in the deployment.\n    RollbackInfo:\n      type: object\n      properties:\n        rollbackDeploymentId:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentId'\n            - description: The ID of the deployment rollback.\n        rollbackTriggeringDeploymentId:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentId'\n            - description: The deployment ID of the deployment that was underway and triggered a rollback deployment because it failed or was stopped.\n        rollbackMessage:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: 'Information that describes the status of a deployment rollback (for example, whether the deployment can''t be rolled back, is in progress, failed, or succeeded). '\n      description: Information about a deployment rollback.\n    DeploymentStatusMessageList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ErrorMessage'\n    RelatedDeployments:\n      type: object\n      properties:\n        autoUpdateOutdatedInstancesRootDeploymentId:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentId'\n            - description: The deployment ID of the root deployment that triggered this deployment.\n        autoUpdateOutdatedInstancesDeploymentIds:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentsList'\n            - description: The deployment IDs of 'auto-update outdated instances' deployments triggered by this deployment.\n      description: Information about deployments related to the specified deployment.\n    DeploymentInfo:\n      type: object\n      properties:\n        applicationName:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationName'\n            - description: The application name.\n        deploymentGroupName:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentGroupName'\n            - description: ' The deployment group name. '\n        deploymentConfigName:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentConfigName'\n            - description: ' The deployment configuration name. '\n        deploymentId:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentId'\n            - description: ' The unique ID of a deployment. '\n        previousRevision:\n          allOf:\n            - $ref: '#/components/schemas/RevisionLocation'\n            - description: Information about the application revision that was deployed to the deployment group before the most recent successful deployment.\n        revision:\n          allOf:\n            - $ref: '#/components/schemas/RevisionLocation'\n            - description: Information about the location of stored application artifacts and the service from which to retrieve them.\n        status:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentStatus'\n            - description: The current state of the deployment as a whole.\n        errorInformation:\n          allOf:\n            - $ref: '#/components/schemas/ErrorInformation'\n            - description: Information about any error associated with this deployment.\n        createTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp that indicates when the deployment was created.\n        startTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: '\u003cp\u003eA timestamp that indicates when the deployment was deployed to the deployment group.\u003c/p\u003e \u003cp\u003eIn some cases, the reported value of the start time might be later than the complete time. This is due to differences in the clock settings of backend servers that participate in the deployment process.\u003c/p\u003e'\n        completeTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp that indicates when the deployment was complete.\n        deploymentOverview:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentOverview'\n            - description: A summary of the deployment status of the instances in the deployment.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A comment about the deployment.\n        creator:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentCreator'\n            - description: '\u003cp\u003eThe means by which the deployment was created:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003euser\u003c/code\u003e: A user created the deployment.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eautoscaling\u003c/code\u003e: Amazon EC2 Auto Scaling created the deployment.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ecodeDeployRollback\u003c/code\u003e: A rollback process created the deployment.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCodeDeployAutoUpdate\u003c/code\u003e: An auto-update process created the deployment when it detected outdated EC2 instances.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        ignoreApplicationStopFailures:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: '\u003cp\u003e If true, then if an \u003ccode\u003eApplicationStop\u003c/code\u003e, \u003ccode\u003eBeforeBlockTraffic\u003c/code\u003e, or \u003ccode\u003eAfterBlockTraffic\u003c/code\u003e deployment lifecycle event to an instance fails, then the deployment continues to the next deployment lifecycle event. For example, if \u003ccode\u003eApplicationStop\u003c/code\u003e fails, the deployment continues with DownloadBundle. If \u003ccode\u003eBeforeBlockTraffic\u003c/code\u003e fails, the deployment continues with \u003ccode\u003eBlockTraffic\u003c/code\u003e. If \u003ccode\u003eAfterBlockTraffic\u003c/code\u003e fails, the deployment continues with \u003ccode\u003eApplicationStop\u003c/code\u003e. \u003c/p\u003e \u003cp\u003e If false or not specified, then if a lifecycle event fails during a deployment to an instance, that deployment fails. If deployment to that instance is part of an overall deployment and the number of healthy hosts is not less than the minimum number of healthy hosts, then a deployment to the next instance is attempted. \u003c/p\u003e \u003cp\u003e During a deployment, the AWS CodeDeploy agent runs the scripts specified for \u003ccode\u003eApplicationStop\u003c/code\u003e, \u003ccode\u003eBeforeBlockTraffic\u003c/code\u003e, and \u003ccode\u003eAfterBlockTraffic\u003c/code\u003e in the AppSpec file from the previous successful deployment. (All other scripts are run from the AppSpec file in the current deployment.) If one of these scripts contains an error and does not run successfully, the deployment can fail. \u003c/p\u003e \u003cp\u003e If the cause of the failure is a script from the last successful deployment that will never run successfully, create a new deployment and use \u003ccode\u003eignoreApplicationStopFailures\u003c/code\u003e to specify that the \u003ccode\u003eApplicationStop\u003c/code\u003e, \u003ccode\u003eBeforeBlockTraffic\u003c/code\u003e, and \u003ccode\u003eAfterBlockTraffic\u003c/code\u003e failures should be ignored. \u003c/p\u003e'\n        autoRollbackConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/AutoRollbackConfiguration'\n            - description: Information about the automatic rollback configuration associated with the deployment.\n        updateOutdatedInstancesOnly:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: Indicates whether only instances that are not running the latest application revision are to be deployed to.\n        rollbackInfo:\n          allOf:\n            - $ref: '#/components/schemas/RollbackInfo'\n            - description: Information about a deployment rollback.\n        deploymentStyle:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentStyle'\n            - description: 'Information about the type of deployment, either in-place or blue/green, you want to run and whether to route deployment traffic behind a load balancer.'\n        targetInstances:\n          allOf:\n            - $ref: '#/components/schemas/TargetInstances'\n            - description: Information about the instances that belong to the replacement environment in a blue/green deployment.\n        instanceTerminationWaitTimeStarted:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: 'Indicates whether the wait period set for the termination of instances in the original environment has started. Status is ''false'' if the KEEP_ALIVE option is specified. Otherwise, ''true'' as soon as the termination wait period starts.'\n        blueGreenDeploymentConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/BlueGreenDeploymentConfiguration'\n            - description: Information about blue/green deployment options for this deployment.\n        loadBalancerInfo:\n          allOf:\n            - $ref: '#/components/schemas/LoadBalancerInfo'\n            - description: Information about the load balancer used in the deployment.\n        additionalDeploymentStatusInfo:\n          allOf:\n            - $ref: '#/components/schemas/AdditionalDeploymentStatusInfo'\n            - description: 'Provides information about the results of a deployment, such as whether instances in the original environment in a blue/green deployment were not terminated.'\n        fileExistsBehavior:\n          allOf:\n            - $ref: '#/components/schemas/FileExistsBehavior'\n            - description: '\u003cp\u003eInformation about how AWS CodeDeploy handles files that already exist in a deployment target location but weren''t part of the previous successful deployment.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDISALLOW\u003c/code\u003e: The deployment fails. This is also the default behavior if no option is specified.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eOVERWRITE\u003c/code\u003e: The version of the file from the application revision currently being deployed replaces the version already on the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eRETAIN\u003c/code\u003e: The version of the file already on the instance is kept and used as part of the new deployment.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        deploymentStatusMessages:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentStatusMessageList'\n            - description: Messages that contain information about the status of a deployment.\n        computePlatform:\n          allOf:\n            - $ref: '#/components/schemas/ComputePlatform'\n            - description: 'The destination platform type for the deployment (\u003ccode\u003eLambda\u003c/code\u003e, \u003ccode\u003eServer\u003c/code\u003e, or \u003ccode\u003eECS\u003c/code\u003e).'\n        externalId:\n          allOf:\n            - $ref: '#/components/schemas/ExternalId'\n            - description: 'The unique ID for an external resource (for example, a CloudFormation stack ID) that is linked to this deployment.'\n        relatedDeployments:\n          $ref: '#/components/schemas/RelatedDeployments'\n      description: Information about a deployment.\n    DeploymentOption:\n      type: string\n      enum:\n        - WITH_TRAFFIC_CONTROL\n        - WITHOUT_TRAFFIC_CONTROL\n    InstanceCount:\n      type: integer\n    DeploymentReadyAction:\n      type: string\n      enum:\n        - CONTINUE_DEPLOYMENT\n        - STOP_DEPLOYMENT\n    DeploymentStatusList:\n      type: array\n      items:\n        $ref: '#/components/schemas/DeploymentStatus'\n    DeploymentType:\n      type: string\n      enum:\n        - IN_PLACE\n        - BLUE_GREEN\n    DeploymentTargetType:\n      type: string\n      enum:\n        - InstanceTarget\n        - LambdaTarget\n        - ECSTarget\n        - CloudFormationTarget\n    InstanceTarget:\n      type: object\n      properties:\n        deploymentId:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentId'\n            - description: ' The unique ID of a deployment. '\n        targetId:\n          allOf:\n            - $ref: '#/components/schemas/TargetId'\n            - description: ' The unique ID of a deployment target that has a type of \u003ccode\u003einstanceTarget\u003c/code\u003e. '\n        targetArn:\n          allOf:\n            - $ref: '#/components/schemas/TargetArn'\n            - description: ' The Amazon Resource Name (ARN) of the target. '\n        status:\n          allOf:\n            - $ref: '#/components/schemas/TargetStatus'\n            - description: ' The status an EC2/On-premises deployment''s target instance. '\n        lastUpdatedAt:\n          allOf:\n            - $ref: '#/components/schemas/Time'\n            - description: ' The date and time when the target instance was updated by a deployment. '\n        lifecycleEvents:\n          allOf:\n            - $ref: '#/components/schemas/LifecycleEventList'\n            - description: ' The lifecycle events of the deployment to this target instance. '\n        instanceLabel:\n          allOf:\n            - $ref: '#/components/schemas/TargetLabel'\n            - description: ' A label that identifies whether the instance is an original target (\u003ccode\u003eBLUE\u003c/code\u003e) or a replacement target (\u003ccode\u003eGREEN\u003c/code\u003e). '\n      description: ' A target Amazon EC2 or on-premises instance during a deployment that uses the EC2/On-premises compute platform. '\n    LambdaTarget:\n      type: object\n      properties:\n        deploymentId:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentId'\n            - description: ' The unique ID of a deployment. '\n        targetId:\n          allOf:\n            - $ref: '#/components/schemas/TargetId'\n            - description: ' The unique ID of a deployment target that has a type of \u003ccode\u003elambdaTarget\u003c/code\u003e. '\n        targetArn:\n          allOf:\n            - $ref: '#/components/schemas/TargetArn'\n            - description: ' The Amazon Resource Name (ARN) of the target. '\n        status:\n          allOf:\n            - $ref: '#/components/schemas/TargetStatus'\n            - description: ' The status an AWS Lambda deployment''s target Lambda function. '\n        lastUpdatedAt:\n          allOf:\n            - $ref: '#/components/schemas/Time'\n            - description: ' The date and time when the target Lambda function was updated by a deployment. '\n        lifecycleEvents:\n          allOf:\n            - $ref: '#/components/schemas/LifecycleEventList'\n            - description: ' The lifecycle events of the deployment to this target Lambda function. '\n        lambdaFunctionInfo:\n          allOf:\n            - $ref: '#/components/schemas/LambdaFunctionInfo'\n            - description: ' A \u003ccode\u003eLambdaFunctionInfo\u003c/code\u003e object that describes a target Lambda function. '\n      description: ' Information about the target AWS Lambda function during an AWS Lambda deployment. '\n    ECSTarget:\n      type: object\n      properties:\n        deploymentId:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentId'\n            - description: ' The unique ID of a deployment. '\n        targetId:\n          allOf:\n            - $ref: '#/components/schemas/TargetId'\n            - description: ' The unique ID of a deployment target that has a type of \u003ccode\u003eecsTarget\u003c/code\u003e. '\n        targetArn:\n          allOf:\n            - $ref: '#/components/schemas/TargetArn'\n            - description: ' The Amazon Resource Name (ARN) of the target. '\n        lastUpdatedAt:\n          allOf:\n            - $ref: '#/components/schemas/Time'\n            - description: ' The date and time when the target Amazon ECS application was updated by a deployment. '\n        lifecycleEvents:\n          allOf:\n            - $ref: '#/components/schemas/LifecycleEventList'\n            - description: ' The lifecycle events of the deployment to this target Amazon ECS application. '\n        status:\n          allOf:\n            - $ref: '#/components/schemas/TargetStatus'\n            - description: ' The status an Amazon ECS deployment''s target ECS application. '\n        taskSetsInfo:\n          allOf:\n            - $ref: '#/components/schemas/ECSTaskSetList'\n            - description: ' The \u003ccode\u003eECSTaskSet\u003c/code\u003e objects associated with the ECS target. '\n      description: ' Information about the target of an Amazon ECS deployment. '\n    DeploymentTarget:\n      type: object\n      properties:\n        deploymentTargetType:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentTargetType'\n            - description: The deployment type that is specific to the deployment's compute platform or deployments initiated by a CloudFormation stack update.\n        instanceTarget:\n          allOf:\n            - $ref: '#/components/schemas/InstanceTarget'\n            - description: ' Information about the target for a deployment that uses the EC2/On-premises compute platform. '\n        lambdaTarget:\n          allOf:\n            - $ref: '#/components/schemas/LambdaTarget'\n            - description: ' Information about the target for a deployment that uses the AWS Lambda compute platform. '\n        ecsTarget:\n          allOf:\n            - $ref: '#/components/schemas/ECSTarget'\n            - description: ' Information about the target for a deployment that uses the Amazon ECS compute platform. '\n        cloudFormationTarget:\n          $ref: '#/components/schemas/CloudFormationTarget'\n      description: ' Information about the deployment target. '\n    InstanceName:\n      type: string\n    LifecycleErrorCode:\n      type: string\n      enum:\n        - Success\n        - ScriptMissing\n        - ScriptNotExecutable\n        - ScriptTimedOut\n        - ScriptFailed\n        - UnknownError\n    ScriptName:\n      type: string\n    LifecycleMessage:\n      type: string\n    LogTail:\n      type: string\n    Diagnostics:\n      type: object\n      properties:\n        errorCode:\n          allOf:\n            - $ref: '#/components/schemas/LifecycleErrorCode'\n            - description: '\u003cp\u003eThe associated error code:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eSuccess: The specified script ran.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eScriptMissing: The specified script was not found in the specified location.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eScriptNotExecutable: The specified script is not a recognized executable file type.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eScriptTimedOut: The specified script did not finish running in the specified time period.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eScriptFailed: The specified script failed to run as expected.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eUnknownError: The specified script did not run for an unknown reason.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        scriptName:\n          allOf:\n            - $ref: '#/components/schemas/ScriptName'\n            - description: The name of the script.\n        message:\n          allOf:\n            - $ref: '#/components/schemas/LifecycleMessage'\n            - description: The message associated with the error.\n        logTail:\n          allOf:\n            - $ref: '#/components/schemas/LogTail'\n            - description: '\u003cp\u003eThe last portion of the diagnostic log.\u003c/p\u003e \u003cp\u003eIf available, AWS CodeDeploy returns up to the last 4 KB of the diagnostic log.\u003c/p\u003e'\n      description: Diagnostic information about executable scripts that are part of a deployment.\n    Key:\n      type: string\n    Value:\n      type: string\n    EC2TagFilterType:\n      type: string\n      enum:\n        - KEY_ONLY\n        - VALUE_ONLY\n        - KEY_AND_VALUE\n    EC2TagFilter:\n      type: object\n      properties:\n        Key:\n          allOf:\n            - $ref: '#/components/schemas/Key'\n            - description: The tag filter key.\n        Value:\n          allOf:\n            - $ref: '#/components/schemas/Value'\n            - description: The tag filter value.\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/EC2TagFilterType'\n            - description: '\u003cp\u003eThe tag filter type:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKEY_ONLY\u003c/code\u003e: Key only.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eVALUE_ONLY\u003c/code\u003e: Value only.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKEY_AND_VALUE\u003c/code\u003e: Key and value.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: Information about an EC2 tag filter.\n    EC2TagSetList:\n      type: array\n      items:\n        $ref: '#/components/schemas/EC2TagFilterList'\n    ECSClusterName:\n      type: string\n    ECSServiceName:\n      type: string\n    ECSService:\n      type: object\n      properties:\n        serviceName:\n          allOf:\n            - $ref: '#/components/schemas/ECSServiceName'\n            - description: ' The name of the target Amazon ECS service. '\n        clusterName:\n          allOf:\n            - $ref: '#/components/schemas/ECSClusterName'\n            - description: ' The name of the cluster that the Amazon ECS service is associated with. '\n      description: ' Contains the service and cluster names used to identify an Amazon ECS deployment''s target. '\n    TargetArn:\n      type: string\n    ECSTaskSetList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ECSTaskSet'\n    ECSTaskSetIdentifier:\n      type: string\n    ECSTaskSetCount:\n      type: integer\n    ECSTaskSetStatus:\n      type: string\n    TargetGroupInfo:\n      type: object\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/TargetGroupName'\n            - description: 'For blue/green deployments, the name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment are registered with. For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment is complete. '\n      description: 'Information about a target group in Elastic Load Balancing to use in a deployment. Instances are registered as targets in a target group, and traffic is routed to the target group.'\n    TargetLabel:\n      type: string\n      enum:\n        - Blue\n        - Green\n    ECSTaskSet:\n      type: object\n      properties:\n        identifer:\n          allOf:\n            - $ref: '#/components/schemas/ECSTaskSetIdentifier'\n            - description: ' A unique ID of an \u003ccode\u003eECSTaskSet\u003c/code\u003e. '\n        desiredCount:\n          allOf:\n            - $ref: '#/components/schemas/ECSTaskSetCount'\n            - description: ' The number of tasks in a task set. During a deployment that uses the Amazon ECS compute type, CodeDeploy instructs Amazon ECS to create a new task set and uses this value to determine how many tasks to create. After the updated task set is created, CodeDeploy shifts traffic to the new task set. '\n        pendingCount:\n          allOf:\n            - $ref: '#/components/schemas/ECSTaskSetCount'\n            - description: ' The number of tasks in the task set that are in the \u003ccode\u003ePENDING\u003c/code\u003e status during an Amazon ECS deployment. A task in the \u003ccode\u003ePENDING\u003c/code\u003e state is preparing to enter the \u003ccode\u003eRUNNING\u003c/code\u003e state. A task set enters the \u003ccode\u003ePENDING\u003c/code\u003e status when it launches for the first time, or when it is restarted after being in the \u003ccode\u003eSTOPPED\u003c/code\u003e state. '\n        runningCount:\n          allOf:\n            - $ref: '#/components/schemas/ECSTaskSetCount'\n            - description: ' The number of tasks in the task set that are in the \u003ccode\u003eRUNNING\u003c/code\u003e status during an Amazon ECS deployment. A task in the \u003ccode\u003eRUNNING\u003c/code\u003e state is running and ready for use. '\n        status:\n          allOf:\n            - $ref: '#/components/schemas/ECSTaskSetStatus'\n            - description: '\u003cp\u003e The status of the task set. There are three valid task set statuses: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePRIMARY\u003c/code\u003e: Indicates the task set is serving production traffic. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eACTIVE\u003c/code\u003e: Indicates the task set is not serving production traffic. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDRAINING\u003c/code\u003e: Indicates the tasks in the task set are being stopped and their corresponding targets are being deregistered from their target group. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        trafficWeight:\n          allOf:\n            - $ref: '#/components/schemas/TrafficWeight'\n            - description: ' The percentage of traffic served by this task set. '\n        targetGroup:\n          allOf:\n            - $ref: '#/components/schemas/TargetGroupInfo'\n            - description: ' The target group associated with the task set. The target group is used by AWS CodeDeploy to manage traffic to a task set. '\n        taskSetLabel:\n          allOf:\n            - $ref: '#/components/schemas/TargetLabel'\n            - description: ' A label that identifies whether the ECS task set is an original target (\u003ccode\u003eBLUE\u003c/code\u003e) or a replacement target (\u003ccode\u003eGREEN\u003c/code\u003e). '\n      description: ' Information about a set of Amazon ECS tasks in an AWS CodeDeploy deployment. An Amazon ECS task set includes details such as the desired number of tasks, how many tasks are running, and whether the task set serves production traffic. An AWS CodeDeploy application that uses the Amazon ECS compute platform deploys a containerized application in an Amazon ECS service as a task set. '\n    ELBName:\n      type: string\n    ELBInfo:\n      type: object\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ELBName'\n            - description: 'For blue/green deployments, the name of the load balancer that is used to route traffic from original instances to replacement instances in a blue/green deployment. For in-place deployments, the name of the load balancer that instances are deregistered from so they are not serving traffic during a deployment, and then re-registered with after the deployment is complete.'\n      description: 'Information about a load balancer in Elastic Load Balancing to use in a deployment. Instances are registered directly with a load balancer, and traffic is routed to the load balancer.'\n    ELBInfoList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ELBInfo'\n    ETag:\n      type: string\n    ErrorCode:\n      type: string\n      enum:\n        - AGENT_ISSUE\n        - ALARM_ACTIVE\n        - APPLICATION_MISSING\n        - AUTOSCALING_VALIDATION_ERROR\n        - AUTO_SCALING_CONFIGURATION\n        - AUTO_SCALING_IAM_ROLE_PERMISSIONS\n        - CODEDEPLOY_RESOURCE_CANNOT_BE_FOUND\n        - CUSTOMER_APPLICATION_UNHEALTHY\n        - DEPLOYMENT_GROUP_MISSING\n        - ECS_UPDATE_ERROR\n        - ELASTIC_LOAD_BALANCING_INVALID\n        - ELB_INVALID_INSTANCE\n        - HEALTH_CONSTRAINTS\n        - HEALTH_CONSTRAINTS_INVALID\n        - HOOK_EXECUTION_FAILURE\n        - IAM_ROLE_MISSING\n        - IAM_ROLE_PERMISSIONS\n        - INTERNAL_ERROR\n        - INVALID_ECS_SERVICE\n        - INVALID_LAMBDA_CONFIGURATION\n        - INVALID_LAMBDA_FUNCTION\n        - INVALID_REVISION\n        - MANUAL_STOP\n        - MISSING_BLUE_GREEN_DEPLOYMENT_CONFIGURATION\n        - MISSING_ELB_INFORMATION\n        - MISSING_GITHUB_TOKEN\n        - NO_EC2_SUBSCRIPTION\n        - NO_INSTANCES\n        - OVER_MAX_INSTANCES\n        - RESOURCE_LIMIT_EXCEEDED\n        - REVISION_MISSING\n        - THROTTLED\n        - TIMEOUT\n        - CLOUDFORMATION_STACK_FAILURE\n    FilterValue:\n      type: string\n    FilterValueList:\n      type: array\n      items:\n        $ref: '#/components/schemas/FilterValue'\n    GenericRevisionInfo:\n      type: object\n      properties:\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A comment about the revision.\n        deploymentGroups:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentGroupsList'\n            - description: The deployment groups for which this is the current target revision.\n        firstUsedTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: When the revision was first used by AWS CodeDeploy.\n        lastUsedTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: When the revision was last used by AWS CodeDeploy.\n        registerTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: When the revision was registered with AWS CodeDeploy.\n      description: Information about an application revision.\n    InstanceId:\n      type: string\n    InstanceSummary:\n      type: object\n      deprecated: true\n      properties:\n        deploymentId:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentId'\n            - description: ' The unique ID of a deployment. '\n        instanceId:\n          allOf:\n            - $ref: '#/components/schemas/InstanceId'\n            - description: The instance ID.\n        status:\n          allOf:\n            - $ref: '#/components/schemas/InstanceStatus'\n            - description: '\u003cp\u003eThe deployment status for this instance:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePending\u003c/code\u003e: The deployment is pending for this instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIn Progress\u003c/code\u003e: The deployment is in progress for this instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSucceeded\u003c/code\u003e: The deployment has succeeded for this instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eFailed\u003c/code\u003e: The deployment has failed for this instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSkipped\u003c/code\u003e: The deployment has been skipped for this instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUnknown\u003c/code\u003e: The deployment status is unknown for this instance.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        lastUpdatedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp that indicates when the instance information was last updated.\n        lifecycleEvents:\n          allOf:\n            - $ref: '#/components/schemas/LifecycleEventList'\n            - description: A list of lifecycle events for this instance.\n        instanceType:\n          allOf:\n            - $ref: '#/components/schemas/InstanceType'\n            - description: '\u003cp\u003eInformation about which environment an instance belongs to in a blue/green deployment.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eBLUE: The instance is part of the original environment.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eGREEN: The instance is part of the replacement environment.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: 'Information about an instance in a deployment.InstanceSummary is deprecated, use DeploymentTarget instead.'\n    InstanceInfo:\n      type: object\n      properties:\n        instanceName:\n          allOf:\n            - $ref: '#/components/schemas/InstanceName'\n            - description: The name of the on-premises instance.\n        iamSessionArn:\n          allOf:\n            - $ref: '#/components/schemas/IamSessionArn'\n            - description: The ARN of the IAM session associated with the on-premises instance.\n        iamUserArn:\n          allOf:\n            - $ref: '#/components/schemas/IamUserArn'\n            - description: The IAM user ARN associated with the on-premises instance.\n        instanceArn:\n          allOf:\n            - $ref: '#/components/schemas/InstanceArn'\n            - description: The ARN of the on-premises instance.\n        registerTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The time at which the on-premises instance was registered.\n        deregisterTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: 'If the on-premises instance was deregistered, the time at which the on-premises instance was deregistered.'\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: The tags currently associated with the on-premises instance.\n      description: Information about an on-premises instance.\n    GitHubAccountTokenNameList:\n      type: array\n      items:\n        $ref: '#/components/schemas/GitHubAccountTokenName'\n    Repository:\n      type: string\n    GitHubLocation:\n      type: object\n      properties:\n        repository:\n          allOf:\n            - $ref: '#/components/schemas/Repository'\n            - description: \u003cp\u003eThe GitHub account and repository pair that stores a reference to the commit that represents the bundled artifacts for the application revision. \u003c/p\u003e \u003cp\u003eSpecified as account/repository.\u003c/p\u003e\n        commitId:\n          allOf:\n            - $ref: '#/components/schemas/CommitId'\n            - description: The SHA1 commit ID of the GitHub commit that represents the bundled artifacts for the application revision.\n      description: Information about the location of application artifacts stored in GitHub.\n    GreenFleetProvisioningAction:\n      type: string\n      enum:\n        - DISCOVER_EXISTING\n        - COPY_AUTO_SCALING_GROUP\n    IamSessionArn:\n      type: string\n    IamUserArn:\n      type: string\n    InstanceArn:\n      type: string\n    InstanceStatus:\n      type: string\n      deprecated: true\n      enum:\n        - Pending\n        - InProgress\n        - Succeeded\n        - Failed\n        - Skipped\n        - Unknown\n        - Ready\n      description: 'InstanceStatus is deprecated, use TargetStatus instead.'\n    InstanceStatusList:\n      type: array\n      items:\n        $ref: '#/components/schemas/InstanceStatus'\n    InstanceType:\n      type: string\n      enum:\n        - Blue\n        - Green\n    InstanceTypeList:\n      type: array\n      items:\n        $ref: '#/components/schemas/InstanceType'\n    LambdaFunctionAlias:\n      type: string\n    LambdaFunctionName:\n      type: string\n    Version:\n      type: string\n    LambdaFunctionInfo:\n      type: object\n      properties:\n        functionName:\n          allOf:\n            - $ref: '#/components/schemas/LambdaFunctionName'\n            - description: ' The name of a Lambda function. '\n        functionAlias:\n          allOf:\n            - $ref: '#/components/schemas/LambdaFunctionAlias'\n            - description: ' The alias of a Lambda function. For more information, see \u003ca href=\"https://docs.aws.amazon.com/lambda/latest/dg/aliases-intro.html\"\u003eAWS Lambda Function Aliases\u003c/a\u003e in the \u003ci\u003eAWS Lambda Developer Guide\u003c/i\u003e.'\n        currentVersion:\n          allOf:\n            - $ref: '#/components/schemas/Version'\n            - description: ' The version of a Lambda function that production traffic points to. '\n        targetVersion:\n          allOf:\n            - $ref: '#/components/schemas/Version'\n            - description: ' The version of a Lambda function that production traffic points to after the Lambda function is deployed. '\n        targetVersionWeight:\n          allOf:\n            - $ref: '#/components/schemas/TrafficWeight'\n            - description: ' The percentage of production traffic that the target version of a Lambda function receives. '\n      description: ' Information about a Lambda function specified in a deployment. '\n    LifecycleEventName:\n      type: string\n    LifecycleEventStatus:\n      type: string\n      enum:\n        - Pending\n        - InProgress\n        - Succeeded\n        - Failed\n        - Skipped\n        - Unknown\n    LifecycleEvent:\n      type: object\n      properties:\n        lifecycleEventName:\n          allOf:\n            - $ref: '#/components/schemas/LifecycleEventName'\n            - description: 'The deployment lifecycle event name, such as \u003ccode\u003eApplicationStop\u003c/code\u003e, \u003ccode\u003eBeforeInstall\u003c/code\u003e, \u003ccode\u003eAfterInstall\u003c/code\u003e, \u003ccode\u003eApplicationStart\u003c/code\u003e, or \u003ccode\u003eValidateService\u003c/code\u003e.'\n        diagnostics:\n          allOf:\n            - $ref: '#/components/schemas/Diagnostics'\n            - description: Diagnostic information about the deployment lifecycle event.\n        startTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp that indicates when the deployment lifecycle event started.\n        endTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp that indicates when the deployment lifecycle event ended.\n        status:\n          allOf:\n            - $ref: '#/components/schemas/LifecycleEventStatus'\n            - description: '\u003cp\u003eThe deployment lifecycle event status:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003ePending: The deployment lifecycle event is pending.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eInProgress: The deployment lifecycle event is in progress.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eSucceeded: The deployment lifecycle event ran successfully.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFailed: The deployment lifecycle event has failed.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eSkipped: The deployment lifecycle event has been skipped.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eUnknown: The deployment lifecycle event is unknown.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: Information about a deployment lifecycle event.\n    LifecycleEventHookExecutionId:\n      type: string\n    SortOrder:\n      type: string\n      enum:\n        - ascending\n        - descending\n    S3Bucket:\n      type: string\n    S3Key:\n      type: string\n    ListStateFilterAction:\n      type: string\n      enum:\n        - include\n        - exclude\n        - ignore\n    NextToken:\n      type: string\n    TargetFilters:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/FilterValueList'\n    TimeRange:\n      type: object\n      properties:\n        start:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: \u003cp\u003eThe start time of the time range.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eSpecify null to leave the start time open-ended.\u003c/p\u003e \u003c/note\u003e\n        end:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: \u003cp\u003eThe end time of the time range.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eSpecify null to leave the end time open-ended.\u003c/p\u003e \u003c/note\u003e\n      description: Information about a time range.\n    RegistrationStatus:\n      type: string\n      enum:\n        - Registered\n        - Deregistered\n    ListenerArn:\n      type: string\n    ListenerArnList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ListenerArn'\n    TargetGroupInfoList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TargetGroupInfo'\n    TargetGroupPairInfoList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TargetGroupPairInfo'\n    Message:\n      type: string\n    MinimumHealthyHostsType:\n      type: string\n      enum:\n        - HOST_COUNT\n        - FLEET_PERCENT\n    MinimumHealthyHostsValue:\n      type: integer\n    NullableBoolean:\n      type: boolean\n    OnPremisesTagSetList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TagFilterList'\n    Percentage:\n      type: integer\n    RawString:\n      type: object\n      deprecated: true\n      properties:\n        content:\n          allOf:\n            - $ref: '#/components/schemas/RawStringContent'\n            - description: The YAML-formatted or JSON-formatted revision string. It includes information about which Lambda function to update and optional Lambda functions that validate deployment lifecycle events.\n        sha256:\n          allOf:\n            - $ref: '#/components/schemas/RawStringSha256'\n            - description: The SHA256 hash value of the revision content.\n      description: 'A revision for an AWS Lambda deployment that is a YAML-formatted or JSON-formatted string. For AWS Lambda deployments, the revision is the same as the AppSpec file.RawString and String revision type are deprecated, use AppSpecContent type instead.'\n    RevisionInfo:\n      type: object\n      properties:\n        revisionLocation:\n          allOf:\n            - $ref: '#/components/schemas/RevisionLocation'\n            - description: Information about the location and type of an application revision.\n        genericRevisionInfo:\n          allOf:\n            - $ref: '#/components/schemas/GenericRevisionInfo'\n            - description: 'Information about an application revision, including usage details and associated deployment groups.'\n      description: Information about an application revision.\n    RevisionLocationType:\n      type: string\n      enum:\n        - S3\n        - GitHub\n        - String\n        - AppSpecContent\n    S3Location:\n      type: object\n      properties:\n        bucket:\n          allOf:\n            - $ref: '#/components/schemas/S3Bucket'\n            - description: The name of the Amazon S3 bucket where the application revision is stored.\n        key:\n          allOf:\n            - $ref: '#/components/schemas/S3Key'\n            - description: The name of the Amazon S3 object that represents the bundled artifacts for the application revision.\n        bundleType:\n          allOf:\n            - $ref: '#/components/schemas/BundleType'\n            - description: '\u003cp\u003eThe file type of the application revision. Must be one of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003etar\u003c/code\u003e: A tar archive file.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003etgz\u003c/code\u003e: A compressed tar archive file.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ezip\u003c/code\u003e: A zip archive file.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        version:\n          allOf:\n            - $ref: '#/components/schemas/VersionId'\n            - description: '\u003cp\u003eA specific version of the Amazon S3 object that represents the bundled artifacts for the application revision.\u003c/p\u003e \u003cp\u003eIf the version is not specified, the system uses the most recent version by default.\u003c/p\u003e'\n        eTag:\n          allOf:\n            - $ref: '#/components/schemas/ETag'\n            - description: '\u003cp\u003eThe ETag of the Amazon S3 object that represents the bundled artifacts for the application revision.\u003c/p\u003e \u003cp\u003eIf the ETag is not specified as an input parameter, ETag validation of the object is skipped.\u003c/p\u003e'\n      description: Information about the location of application artifacts stored in Amazon S3.\n    VersionId:\n      type: string\n    StopStatus:\n      type: string\n      enum:\n        - Pending\n        - Succeeded\n    Tag:\n      type: object\n      properties:\n        Key:\n          allOf:\n            - $ref: '#/components/schemas/Key'\n            - description: The tag's key.\n        Value:\n          allOf:\n            - $ref: '#/components/schemas/Value'\n            - description: The tag's value.\n      description: Information about a tag.\n    TagFilterType:\n      type: string\n      enum:\n        - KEY_ONLY\n        - VALUE_ONLY\n        - KEY_AND_VALUE\n    TagFilter:\n      type: object\n      properties:\n        Key:\n          allOf:\n            - $ref: '#/components/schemas/Key'\n            - description: The on-premises instance tag filter key.\n        Value:\n          allOf:\n            - $ref: '#/components/schemas/Value'\n            - description: The on-premises instance tag filter value.\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/TagFilterType'\n            - description: '\u003cp\u003eThe on-premises instance tag filter type:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eKEY_ONLY: Key only.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eVALUE_ONLY: Value only.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eKEY_AND_VALUE: Key and value.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: Information about an on-premises instance tag filter.\n    TagKeyList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Key'\n    TargetFilterName:\n      type: string\n      enum:\n        - TargetStatus\n        - ServerInstanceLabel\n    TargetGroupName:\n      type: string\n    TrafficRoute:\n      type: object\n      properties:\n        listenerArns:\n          allOf:\n            - $ref: '#/components/schemas/ListenerArnList'\n            - description: ' The Amazon Resource Name (ARN) of one listener. The listener identifies the route between a target group and a load balancer. This is an array of strings with a maximum size of one. '\n      description: ' Information about a listener. The listener contains the path used to route traffic that is received from the load balancer to a target group. '\n    TargetGroupPairInfo:\n      type: object\n      properties:\n        targetGroups:\n          allOf:\n            - $ref: '#/components/schemas/TargetGroupInfoList'\n            - description: ' One pair of target groups. One is associated with the original task set. The second is associated with the task set that serves traffic after the deployment is complete. '\n        prodTrafficRoute:\n          allOf:\n            - $ref: '#/components/schemas/TrafficRoute'\n            - description: ' The path used by a load balancer to route production traffic when an Amazon ECS deployment is complete. '\n        testTrafficRoute:\n          allOf:\n            - $ref: '#/components/schemas/TrafficRoute'\n            - description: ' An optional path used by a load balancer to route test traffic after an Amazon ECS deployment. Validation can occur while test traffic is served during a deployment. '\n      description: ' Information about two target groups and how traffic is routed during an Amazon ECS deployment. An optional test traffic route can be specified. '\n    WaitTimeInMins:\n      type: integer\n    TimeBasedCanary:\n      type: object\n      properties:\n        canaryPercentage:\n          allOf:\n            - $ref: '#/components/schemas/Percentage'\n            - description: The percentage of traffic to shift in the first increment of a \u003ccode\u003eTimeBasedCanary\u003c/code\u003e deployment.\n        canaryInterval:\n          allOf:\n            - $ref: '#/components/schemas/WaitTimeInMins'\n            - description: The number of minutes between the first and second traffic shifts of a \u003ccode\u003eTimeBasedCanary\u003c/code\u003e deployment.\n      description: A configuration that shifts traffic from one version of a Lambda function or ECS task set to another in two increments. The original and target Lambda function versions or ECS task sets are specified in the deployment's AppSpec file.\n    TimeBasedLinear:\n      type: object\n      properties:\n        linearPercentage:\n          allOf:\n            - $ref: '#/components/schemas/Percentage'\n            - description: The percentage of traffic that is shifted at the start of each increment of a \u003ccode\u003eTimeBasedLinear\u003c/code\u003e deployment.\n        linearInterval:\n          allOf:\n            - $ref: '#/components/schemas/WaitTimeInMins'\n            - description: The number of minutes between each incremental traffic shift of a \u003ccode\u003eTimeBasedLinear\u003c/code\u003e deployment.\n      description: 'A configuration that shifts traffic from one version of a Lambda function or ECS task set to another in equal increments, with an equal number of minutes between each increment. The original and target Lambda function versions or ECS task sets are specified in the deployment''s AppSpec file.'\n    TrafficRoutingType:\n      type: string\n      enum:\n        - TimeBasedCanary\n        - TimeBasedLinear\n        - AllAtOnce\n    TriggerName:\n      type: string\n    TriggerTargetArn:\n      type: string\n    TriggerEventTypeList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TriggerEventType'\n    TriggerConfig:\n      type: object\n      properties:\n        triggerName:\n          allOf:\n            - $ref: '#/components/schemas/TriggerName'\n            - description: The name of the notification trigger.\n        triggerTargetArn:\n          allOf:\n            - $ref: '#/components/schemas/TriggerTargetArn'\n            - description: The Amazon Resource Name (ARN) of the Amazon Simple Notification Service topic through which notifications about deployment or instance events are sent.\n        triggerEvents:\n          allOf:\n            - $ref: '#/components/schemas/TriggerEventTypeList'\n            - description: The event type or types for which notifications are triggered.\n      description: Information about notification triggers for the deployment group.\n    TriggerEventType:\n      type: string\n      enum:\n        - DeploymentStart\n        - DeploymentSuccess\n        - DeploymentFailure\n        - DeploymentStop\n        - DeploymentRollback\n        - DeploymentReady\n        - InstanceStart\n        - InstanceSuccess\n        - InstanceFailure\n        - InstanceReady\nsecurity:\n  - hmac: []\n"
		}
	},
	"Error": "parse: paths: /#X-Amz-Target=CodeDeploy_20141006.DeleteDeploymentConfig: post: DeleteDeploymentConfig: responses: 483: unknown status code: 483"
}