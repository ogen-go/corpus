{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OpenBanking-Brasil/areadesenvolvedor"
		},
		"file": {
			"name": "swagger_open_banking_fase3_apis.yml",
			"path": "documentation/source/versions/v1.0.0-rc8.1/swagger/swagger_open_banking_fase3_apis.yml",
			"content": "﻿openapi: 3.0.0\ninfo:\n  title: Fase 3 - APIs do Open Banking Brasil\n  description: \"### Iniciação de pagamentos\\n\\nNa fase 3 do Open Banking Brasil  será oferecida aos clientes a possibilidade de movimentação financeira a partir de aplicativos e plataformas externas ao ambiente no qual mantém sua conta.\\n\\nNa prática o que teremos é a oferta de pagamentos, transferências e outras operações executadas a partir de aplicativos de terceiros, sempre com a prévia coleta do consentimento do cliente para a iniciação destas transações.\\n\\nNo âmbito da Resolução conjunta nº 1, de 04 de maio de 2020 o Open Banking Brasil passa a contar com os atores e operações ali definidos, reproduzidos a seguir.\\n\\n#### Instituição detentora de conta\\n\\nÉ a instituição participante do Open Banking que possui a capacidade de ofertar quaisquer dos tipos de conta a seguir: conta de depósitos à vista (conta-corrente), conta de poupança, conta-salário e conta de pagamento pré-paga, guardando similaridade com o conceito de [ASPSP](https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwww.openbanking.org.uk%2Fproviders%2Faccount-providers%2F\u0026amp;data=04%7C01%7Cclara.rohrmann%40bancointer.com.br%7C213ed77ede5b4e2af08c08d93226dbf8%7C05e665c9c5024a1998a5a913a6f52be8%7C1%7C0%7C637595964801583820%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000\u0026amp;sdata=jeezEb6FpQnpx7uz2v3NAf2FYuSOps13d8VvR9kiRS8%3D\u0026amp;reserved=0\u003chttps://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwww.openbanking.org.uk%2Fproviders%2Faccount-providers%2F\u0026amp;data=04%7C01%7Cclara.rohrmann%40bancointer.com.br%7C213ed77ede5b4e2af08c08d93226dbf8%7C05e665c9c5024a1998a5a913a6f52be8%7C1%7C0%7C637595964801583820%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000\u0026amp;sdata=jeezEb6FpQnpx7uz2v3NAf2FYuSOps13d8VvR9kiRS8%3D\u0026amp;reserved=0\u003e) - Account Servicing Payment Service Provider do modelo britânico.\\n\\nNo contexto do Open Banking as instituições detentoras de conta deverão observar critérios de segurança e conformidade previamente definidos.\\n\\nConsulte neste [link](https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fopenbanking-brasil.github.io%2Fspecs-seguranca%2Faspsp-user-guide.html\u0026amp;data=04%7C01%7Cclara.rohrmann%40bancointer.com.br%7C213ed77ede5b4e2af08c08d93226dbf8%7C05e665c9c5024a1998a5a913a6f52be8%7C1%7C0%7C637595964801593818%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000\u0026amp;sdata=LYglRitKRsQgc2LUIlgmHnfs%2BuBWPuw6TEdM7ZanORE%3D\u0026amp;reserved=0\u003chttps://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fopenbanking-brasil.github.io%2Fspecs-seguranca%2Faspsp-user-guide.html\u0026amp;data=04%7C01%7Cclara.rohrmann%40bancointer.com.br%7C213ed77ede5b4e2af08c08d93226dbf8%7C05e665c9c5024a1998a5a913a6f52be8%7C1%7C0%7C637595964801593818%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000\u0026amp;sdata=LYglRitKRsQgc2LUIlgmHnfs%2BuBWPuw6TEdM7ZanORE%3D\u0026amp;reserved=0\u003e) as especificações de segurança aplicáveis.\\n\\n#### Instituição iniciadora de transação de pagamento\\n\\nÉ a instituição participante que presta serviço de iniciação de transação de pagamento sem deter em momento algum os fundos transferidos na prestação do serviço.\\n\\nDe forma análoga ao caso das detentoras de conta, as iniciadoras mantém certo grau de similaridade com o conceito de [TPP](https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwww.openbanking.org.uk%2Fproviders%2Fthird-party-providers%2F\u0026amp;data=04%7C01%7Cclara.rohrmann%40bancointer.com.br%7C213ed77ede5b4e2af08c08d93226dbf8%7C05e665c9c5024a1998a5a913a6f52be8%7C1%7C0%7C637595964801593818%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000\u0026amp;sdata=AwM0i68xyxbQVEgYe9gIzWXUdUJuHX22GsGBARFP0r8%3D\u0026amp;reserved=0\u003chttps://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwww.openbanking.org.uk%2Fproviders%2Fthird-party-providers%2F\u0026amp;data=04%7C01%7Cclara.rohrmann%40bancointer.com.br%7C213ed77ede5b4e2af08c08d93226dbf8%7C05e665c9c5024a1998a5a913a6f52be8%7C1%7C0%7C637595964801593818%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000\u0026amp;sdata=AwM0i68xyxbQVEgYe9gIzWXUdUJuHX22GsGBARFP0r8%3D\u0026amp;reserved=0\u003e) - Third Party Provider do modelo britânico, devendo também observar critérios específicos de segurança, conforme detalhado neste [link](https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fopenbanking-brasil.github.io%2Fspecs-seguranca%2Ftpp-user-guide.html\u0026amp;data=04%7C01%7Cclara.rohrmann%40bancointer.com.br%7C213ed77ede5b4e2af08c08d93226dbf8%7C05e665c9c5024a1998a5a913a6f52be8%7C1%7C0%7C637595964801593818%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000\u0026amp;sdata=jM1KEOJPgixn6XE98%2BHERACS3ZOjXcYzMbazr3KiCMs%3D\u0026amp;reserved=0\u003chttps://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fopenbanking-brasil.github.io%2Fspecs-seguranca%2Ftpp-user-guide.html\u0026amp;data=04%7C01%7Cclara.rohrmann%40bancointer.com.br%7C213ed77ede5b4e2af08c08d93226dbf8%7C05e665c9c5024a1998a5a913a6f52be8%7C1%7C0%7C637595964801593818%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000\u0026amp;sdata=jM1KEOJPgixn6XE98%2BHERACS3ZOjXcYzMbazr3KiCMs%3D\u0026amp;reserved=0\u003e).\\n\\n\\n#### Serviço de iniciação de transação de pagamento\\n\\nÉ o serviço que possibilita a iniciação da instrução de uma transação de pagamento, ordenado pelo cliente, relativamente a uma conta de depósitos à vista (conta-corrente),  conta-salário, conta de poupança ou conta de pagamento pré-paga.\\n\\nInicialmente o Open Banking estará disponibilizando a iniciação de Pix com execução na data corrente.\\n\\nFuturamente com a evolução do ecossistema novas modalidades de operações serão agregadas, assim como a possibilidade de agendamentos.\\n\\n### Idempotência\\n\\nSegundo a W3C, \\\"um método HTTP idempotente é um método HTTP que pode ser chamado muitas vezes sem resultados diferentes ou efeitos colaterais. Não importa se o método é chamado apenas uma vez ou dez vezes. O resultado deve ser o mesmo. Essencialmente, significa que o resultado de uma solicitação executada com sucesso é independente do número de vezes que ela é executada. Por exemplo, na aritmética, adicionar zero a um número é uma operação idempotente.\\\"\\n\\nOs conhecidos métodos GET, PUT e DELETE são naturalmente idempotentes, assim como HEAD, OPTIONS e TRACE também são.\\n\\nPorém, o método POST requer um tratamento especial para que se torne idempotente e, por estarmos tratando aqui de meios de pagamentos, fazer esse tratamento é algo desejável para que não ocorram acidentes.\\n\\n#### Por que é necessário tratarmos a Idempotência do POST?\\n\\nImagine que seja realizado um POST de pagamento e, depois de alguns segundos, é retornada uma mensagem de Timeout. Nesse caso, não é possível saber se o POST foi efetivo e enviar o POST novamente, sem tratar a idempotência, poderá ocasionar em duplicidade de pagamento.\\n\\n#### Como mitigarmos esse risco?\\n\\nDo lado da iniciadora do pagamento: É necessário que seja enviado o POST com um GUID de Idempotência. Caso o mesmo POST seja reenviado por acidente ou precise ser reenviado, por qualquer motivo que seja, basta reenviar o POST com o mesmo GUID de Idempotência.\\n\\nDo lado da detentora da conta: É necessário validar o GUID de Idempotência recebido. Caso tenha recebido o mesmo GUID de Idempotência, a nova mensagem de POST deverá ser descartada.\\n\\nImportante reforçar que cada nova transação com POST deverá ter um novo GUID de Idempotência.\\n\\nA iniciadora não deve usar comportamento idempotente do POST para pesquisar o status dos recursos.\\n\\n#### Conjunto inicial de regras propostas na aplicação da idempotencia:\\n\\n- A iniciadora/TPP não deve alterar o corpo da solicitação ao usar a mesma chave de idempotência. Se a iniciadora alterar o corpo da solicitação, a detentora/ASPSP não deve modificar o recurso final. A detentora pode tratar este caso como uma ação fraudulenta.  \\n- A detentora não deve criar um novo recurso para uma solicitação POST se estiver determinada como uma solicitação idempotente.  \\n- Na criação a detentora deve responder à solicitação com o status atual do recurso (ou um status que seja pelo menos tão atual quanto o que estiver disponível nos canais eletrônicos existentes) e um código de status HTTP 201 (CREATED).  \\n- A iniciadora não deve usar comportamento idempotente para pesquisar o status dos recursos.  \\n- A detentora pode usar a assinatura da mensagem, junto com a chave de idempotência, para garantir que o corpo da solicitação não seja alterado.  \\n\\n### Diagrama de Sequência\\n![Iniciacao_de_Pagamento](images/sequence-diagrams/iniciacao_de_pagamento.png)\\n\u003ca href=\\\"images/sequence-diagrams/iniciacao_de_pagamento.png\\\" target=\\\"_blank\\\"\u003eDownload do Diagrama de Sequência\u003c/a\u003e\\n\\n#### Descrição do Diagrama de Sequência – APIs Fase 3\\n\\n#### Detalhamento da iniciação de pagamento:\\n\\n1. Debtor (Usuário) inicia o processo de pagamento na iniciadora.  \\n2. Na iniciadora, o debtor seleciona a detentora e os dados de pagamentos:  \\n\u003cb\u003eObservação\u003c/b\u003e: não serão ofertados, no primeiro momento, \u003cb\u003ePix Saque e Pix troco\u003c/b\u003e. Também não será possível agendamentos para \u003cb\u003ePix QR Codes Dinâmico com vencimento\u003c/b\u003e. \\n  \u003ca href=\\\"https://www.bcb.gov.br/estabilidadefinanceira/pix?modalAberto=regulamentacao_pix\\\" target=\\\"_blank\\\"\u003eAqui referências a regulamentação relacionada ao Pix\u003c/a\u003e.  \\n     \\n    \u003col type=\\\"a\\\"\u003e\\n      \u003cli\u003eSe transação por Chave Pix ou QR Code Estático:\\n        \u003col type=\\\"i\\\"\u003e\\n          \u003cli\u003eÉ realizada consulta ao DICT (diretório de contas).\u003cbr\u003e\\n          \u003cb\u003eObservação\u003c/b\u003e: se a Iniciadora for um participante direto, detentora ou não de conta, no ecossistema do Pix, ele fará a consulta de forma direta ao DICT. Se a iniciadora for um participante indireto, será necessário consulta por meio de uma instituição com acesso direto com a qual a iniciadora possua relacionamento.  \\n          \u003c/li\u003e\\n          \u003cli\u003eA iniciadora recebe as informações consultadas:  \\n            \u003col\u003e\\n              \u003cli\u003eDados de chave\u003c/li\u003e\\n              \u003cli\u003eNome do creditor\u003c/li\u003e\\n              \u003cli\u003eInstituição detentora da conta do creditor\u003c/li\u003e\\n              \u003cli\u003eCPF / CPNJ do creditor\u003c/li\u003e\\n            \u003c/ol\u003e\\n           \u003c/li\u003e\\n        \u003c/ol\u003e\\n      \u003c/li\u003e\\n      \u003cli\u003eSe transação por QR Code Dinâmico:\\n         \u003col type=\\\"i\\\"\u003e\\n           \u003cli\u003eÉ realizada consulta dos dados do QR code do creditor:\\n             \u003col\u003e\\n               \u003cli\u003eCNPJ / CPF\u003c/li\u003e\\n               \u003cli\u003eData de vencimento\u003c/li\u003e\\n               \u003cli\u003eNome Instituição\u003c/li\u003e\\n               \u003cli\u003eEndereço (logradouro, cidade, UF e CEP)\u003c/li\u003e\\n               \u003cli\u003eIdentificador\u003c/li\u003e\\n               \u003cli\u003eChave Pix\u003c/li\u003e\\n               \u003cli\u003eValor Original\u003c/li\u003e\\n               \u003cli\u003eValor Final\u003c/li\u003e\\n               \u003cli\u003eVencimento\u003c/li\u003e\\n               \u003cli\u003eExpiração\u003c/li\u003e\\n              \u003c/ol\u003e\\n          \u003c/li\u003e\\n        \u003c/ol\u003e\\n      \u003c/li\u003e\\n      \u003cli\u003eSe transação por dados manuais (agência e conta):\\n        \u003col type=\\\"i\\\"\u003e\\n           \u003cli\u003eInsere-se dados:\\n             \u003col\u003e\\n               \u003cli\u003eInstituição financeira\u003c/li\u003e\\n               \u003cli\u003eAgência\u003c/li\u003e\\n               \u003cli\u003eConta\u003c/li\u003e\\n               \u003cli\u003eNome\u003c/li\u003e\\n               \u003cli\u003eCPF / CNPJ\u003c/li\u003e\\n             \u003c/ol\u003e\\n          \u003c/li\u003e\\n          \u003cli\u003e\u003cb\u003eObservação\u003c/b\u003e: não é realizada consulta no creditor ou no DICT.\\n          \u003c/li\u003e\\n        \u003c/ol\u003e\\n      \u003c/li\u003e\\n    \u003c/ol\u003e\\n\\n3. Após consultas, a iniciadora segue para o fluxo de autorização e consentimento.\\n\\n#### Estabelece TLS\\nToda comunicação máquina-a-máquina (m2m) usará mTLS, conforme RFC rfc8705 e detalhado na especificação de segurança: \\n  \u003ca href=\\\"https://openbanking-brasil.github.io/specs-seguranca/open-banking-brasil-financial-api-1_ID1.html\\\" target=\\\"_blank\\\"\u003eOpen Banking Brasil Financial-grade API Security Profile 1.0 Implementers Draft 1\u003c/a\u003e.\\n\\n#### POST /tokens - Pedido de access_token e scope: payments, openid\\nAntes de começar o fluxo de iniciação de pagamento, a Instituição Iniciadora deverá ter se cadastrado como *client* na Instituição Detentora da Conta, em acordo com o especificado para o Registro Dinâmico de Clientes (Dynamic Client Registration). Os detalhes dessa etapa podem ser encontrados na especificação de segurança:\\_\\n\u003ca href=\\\"https://openbanking-brasil.github.io/specs-seguranca/open-banking-brasil-dynamic-client-registration-1_ID1.html\\\" target=\\\"_blank\\\"\u003eOpen Banking Brasil Financial-grade API Dynamic Client Registration 1.0 Implementers Draft 1\u003c/a\u003e.  \\nUma vez cadastrada, a Instituição Iniciadora deverá obter o token de acesso (*access_token*) pelo fluxo de *client credentials*, conforme especificado pela RFC 6749 (rfc6749), com os escopos *payments* e *openid*.\\n\\n#### Valida certificado SSL e scopes\\nAo receber a requisição da Iniciadora, o Servidor de Autorização da Instituição Detentora da Conta deverá validar o certificado SSL e os escopos, se esses estão de acordo com a especificação: *payments* e *openid*.\\n\\n#### Gera access_token\\nEm caso de sucesso da validação, o Servidor de Autorização da Instituição Detentora da Conta deverá gerar o *access_token*, que será utilizado para a criação de consentimento.\\n\\n#### Access_token (scope: payments, openid)\\nO Servidor de Autorização da Instituição Detentora da Conta deverá responder à requisição com o *access_token* conforme padrões a serem definidos pelo GT de Segurança.\\n\\n#### POST /payments/v1/consents\\nPara a criação de consentimento, considerando o requerido para FAPI - Loding Intent (\u003ca href=\\\"https://bitbucket.org/openid/fapi/src/master/Financial_API_Lodging_Intent.md\\\" target=\\\"_blank\\\"\u003eFinancial_API_Lodging_Intent.md\u003c/a\u003e), após a obtenção do token de acesso, a Instituição Iniciadora deverá usar esse token de acesso para fazer a requisição POST de consentimento.  \\nA criação do consentimento encontra-se detalhada na seção das APIs para Pagamentos (\u003ca href=\\\"#em-revisao-criar-consentimento-para-iniciacao-de-pagamento\\\"\u003eOpen Banking Brasil\u003c/a\u003e).\\n\\n#### 201 Created\\nA API de Consentimento deverá responder o Http Status 201 e Payload contendo ***consentId***, e status inicial do consentimento em **AWAITING_AUTHORISATION** conforme especificado na documentação \u003ca href=\\\"#em-revisao-criar-consentimento-para-iniciacao-de-pagamento\\\"\u003eOpen Banking Brasil\u003c/a\u003e.\\n\\n#### Redirecionamento\\nNo caso do consentimento ter sido criado com sucesso, a Instituição Iniciadora deverá fazer o redirecionamento para a Instituição Detentora da Conta. Esse fluxo de redirecionamento deve considerar todos os requisitos definidos para o objeto de requisição OpenID Connect (Seção 4.3 da especificação de segurança -\\_\u003ca href=\\\"https://openbanking-brasil.github.io/specs-seguranca/tpp-user-guide.html\\\" target=\\\"_blank\\\"\u003eThird Party Provider End To End User Guide\u003c/a\u003e).  \\nEsse redirecionamento é o passo que permitirá o início da autenticação do usuário na Instituição Detentora da Conta.\\n\\n#### Validações de negócios (Detentora)\\n\\nAo receber o POST /pix/payments é importante observar que a Detentora deverá validar as informações passadas pela Iniciadora nos campos do payload de envio do consentimento e do pagamento (como, por exemplo, valores e dados do creditado), além de ser necessário decodificar o código para os casos de pagamentos iniciados a partir de um Pix QRCode, a fim de que a Detentora carregue as informações complementares (como, por exemplo, o TxID) na mensageria do Pix (atenção para a PACS008 e as \u003ca href=\\\"https://www.bcb.gov.br/estabilidadefinanceira/pix?modalAberto=regulamentacao_pix\\\" target=\\\"_blank\\\"\u003eregulamentações do Pix\u003c/a\u003e).\\n\\n#### Efetivação do pagamento\u0026lt;\u0026lt;Assync\u0026gt;\u0026gt;\\nA Detentora de Conta efetua a transação de pagamento entre o Debtor e Creditor através da forma de pagamento escolhida pelo Debtor. A efetivação da transação acontece de maneira assíncrona ao fluxo do Open Banking, seguindo as regras e interfaces do arranjo utilizado (apenas PIX disponível nesse momento).\\n\\n#### Loop (Polling)\\nA Iniciadora deverá consultar periodicamente a Instituição Detentora de Conta para verificar o status da transação de iniciação pagamento.  \\nOs possíveis status de uma transação de iniciação de pagamento estão detalhados na documentação\\_(\u003ca href=\\\"#tocS_EnumPaymentStatusType\\\"\u003eOpen Banking Brasil\u003c/a\u003e).  \\nComo sugestão, é indicado que a Instituição Iniciadora do pagamento implemente um retry exponencial e respeite o “rate limit” descriminado na documentação.  \\nA recomendação para uso do polling encontra-se detalhada na seção de “Recomendação uso de polling” (\u003ca href=\\\"#recomendacao-uso-de-polling\\\"\u003eOpen Banking Brasil\u003c/a\u003e)).\\n\\n#### GET pix/payments/{paymentId} \\nDurante o período de polling a Iniciadora deverá consultar\\_o status da transação através da rota “Get pix/payments/{paymentId}” informado o respectivo paymentId da transação.  \\nA consulta\\_encontra-se detalhada na seção das APIs para Pagamentos (\u003ca href=\\\"#em-revisao-pix-consultar-iniciacao-de-pagamento\\\"\u003eOpen Banking Brasil\u003c/a\u003e).\\n\\n#### Exibe comprovante de iniciação de pagamento\\nCaso a Iniciadora identifique que a transação de pagamento foi aprovada pela Detentora de Conta (status “ACCC”),\\_poderá ser exibido o comprovante da **efetivação** da Transação de Pagamento. Caso o status do pagamento seja diferente de “ACCC” e/ou “RJCT”, deverá ser apresentada a efetivação da **solicitação** de Iniciação de Pagamento, apresentando as informações (\u003ca href=\\\"#guia-do-usuario-instituicao-receptora-ou-iniciadora-de-pagamentos\\\"\u003esegundo Guia de Usuário\u003c/a\u003e – “Etapa 6: Efetivação da Solicitação):\\n\\n  - Forma de pagamento (de acordo com os arranjos de pagamento vigentes e Circular 4.015);\\n  - Valor da transação de pagamento (opcional para transações sucessivas);\\n  - Informações referentes ao Recebedor da Transação de Pagamento;\\n\\nOs possíveis status de uma transação de iniciação de pagamento estão detalhados na documentação\\_(\u003ca href=\\\"#tocS_EnumPaymentStatusType\\\"\u003eOpen Banking Brasil\u003c/a\u003e).\\n\\n### Recomendação uso de polling\\n#### A consulta via GET, para verificar o processamento da transação, pode ser efetuada a qualquer momento desde que se respeite o rate limit de:  \\n- 300 TPS global, 50 TPS por instituição e 8 TPS por endereço IP (Internet Protocol).  \\nComo sugestão, é indicado que a instituição iniciadora do pagamento implemente um retry exponencial.  \\n\\n### Controle de acesso  \\n\\nO endpoint de consulta de pagamento GET /pix/payments/{​​​paymentId}​​​ deve suportar acesso a partir de access_token emitido por meio de um grant_type do tipo `client credentials`, como opção do uso do token vinculado ao consentimento (hybrid flow).  \\nPara evitar vazamento de informação, a detentora deve validar que o pagamento consultado pertence ao ClientId que o criou e, caso haja divergências, retorne um erro HTTP 400.  \\n\"\n  version: 1.0.0-rc5.2\ntags:\n  - name: API - Pagamentos\n    description: |\n      |Versão|\n      |:-----|\n      |1.0.0-rc5.2|\n\n      #### Visão Geral\n\n      A API tem como objetivo coletar o consentimento e ralizar a iniciação de pagamento entre bancos e instituições financeiras e acessível também à estabelecimentos comerciais participantes do Open Banking Brasil.\n\n      Os recursos estão disponíveis para pagadores que possuem vínculo com uma instituição detentora de conta participante do Open Banking, independentemente de serem pessoa física ou jurídica.\n\n      #### Especificação em OAS 3.0\n\n      \u003ca href=\"swagger/swagger_payments_apis.yaml\" target=\"_blank\"\u003eDownload da Especificação (OAS 3.0)\u003c/a\u003e  \npaths:\n  /payments/v1/consents:\n    post:\n      tags:\n        - API - Pagamentos\n      summary: '[Em Revisão] Criar consentimento para iniciação de pagamento.'\n      operationId: paymentsPostConsents\n      description: |\n        Método para a criação do consentimento para iniciação de pagamento.\n\n        ### Dicionário de dados\n\n        Campos de resposta do endpoint de `/consents`\n\n        \u003ca href='dictionary/paymentsPostConsents_v1.csv' target=\"_blank\"\u003eFazer download do dicionário de dados\u003c/a\u003e\n\n        Consulte a seção **Convenções de payload** para obter mais informações sobre [Atributos Obrigatórios / Opcionais](#convencoes-de-propriedade-dos-atributos).\n      parameters:\n        - $ref: '#/components/parameters/Authorization'\n        - $ref: '#/components/parameters/xFapiAuthDate'\n        - $ref: '#/components/parameters/xFapiCustomerIpAddress'\n        - $ref: '#/components/parameters/xFapiInteractionId'\n        - $ref: '#/components/parameters/xCustomerUserAgent'\n        - $ref: '#/components/parameters/XIdempotencyKey'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreatePaymentConsent'\n        description: Payload para criação do consentimento para iniciação do pagamento Pix.\n        required: true\n      responses:\n        '201':\n          $ref: '#/components/responses/201PaymentsConsentsConsentCreated'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaType'\n        '422':\n          $ref: '#/components/responses/UnprocessableEntityConsents'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      security:\n        - OpenId:\n            - openid\n          OAuth2Security:\n            - 'consent:consentId'\n            - payments\n  '/payments/v1/consents/{consentId}':\n    get:\n      tags:\n        - API - Pagamentos\n      summary: '[Em Revisão] Consultar consentimento para iniciação de pagamento.'\n      operationId: paymentsGetConsentsConsentId\n      description: |\n        Método para consultar o consentimento para iniciação de pagamento.\n\n        ### Dicionário de dados\n\n        Campos de resposta do endpoint de `/consents`\n\n        \u003ca href='dictionary/paymentsGetConsentsConsentId_v1.csv' target=\"_blank\"\u003eFazer download do dicionário de dados\u003c/a\u003e\n\n        Consulte a seção **Convenções de payload** para obter mais informações sobre [Atributos Obrigatórios / Opcionais](#convencoes-de-propriedade-dos-atributos).\n      parameters:\n        - $ref: '#/components/parameters/consentId'\n        - $ref: '#/components/parameters/Authorization'\n        - $ref: '#/components/parameters/xFapiAuthDate'\n        - $ref: '#/components/parameters/xFapiCustomerIpAddress'\n        - $ref: '#/components/parameters/xFapiInteractionId'\n        - $ref: '#/components/parameters/xCustomerUserAgent'\n      responses:\n        '200':\n          $ref: '#/components/responses/200PaymentsConsentsConsentIdRead'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaType'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      security:\n        - OpenId:\n            - openid\n          OAuth2Security:\n            - 'consent:consentId'\n            - payments\n  /payments/v1/pix/payments:\n    post:\n      tags:\n        - API - Pagamentos\n      summary: '[Em Revisão] Pix - Criar iniciação de pagamento.'\n      operationId: paymentsPostPixPayments\n      description: |\n        Método para a criação de uma iniciação de pagamento.\n\n        ### Dicionário de dados\n\n        Campos de resposta do endpoint de `/pix/payments`\n\n        \u003ca href='dictionary/paymentsPostPixPayments_v1.csv' target=\"_blank\"\u003eFazer download do dicionário de dados\u003c/a\u003e\n\n        Consulte a seção **Convenções de payload** para obter mais informações sobre [Atributos Obrigatórios / Opcionais](#convencoes-de-propriedade-dos-atributos).\n      parameters:\n        - $ref: '#/components/parameters/Authorization'\n        - $ref: '#/components/parameters/xFapiAuthDate'\n        - $ref: '#/components/parameters/xFapiCustomerIpAddress'\n        - $ref: '#/components/parameters/xFapiInteractionId'\n        - $ref: '#/components/parameters/xCustomerUserAgent'\n        - $ref: '#/components/parameters/XIdempotencyKey'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreatePixPayment'\n        description: Payload para criação da iniciação do pagamento Pix.\n        required: true\n      responses:\n        '201':\n          $ref: '#/components/responses/201PaymentsInitiationPixPaymentCreated'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaType'\n        '422':\n          $ref: '#/components/responses/UnprocessableEntityPixPayments'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      security:\n        - OpenId:\n            - openid\n          OAuth2Security:\n            - 'consent:consentId'\n            - payments\n  '/payments/v1/pix/payments/{paymentId}':\n    get:\n      tags:\n        - API - Pagamentos\n      summary: '[Em Revisão] Pix - Consultar iniciação de pagamento.'\n      operationId: paymentsGetPixPaymentsPaymentId\n      description: |\n        Método para consultar uma iniciação de pagamento.\n\n        ### Dicionário de dados\n\n        Campos de resposta do endpoint de `/pix/payments`.  \n\n        \u003ca href='dictionary/paymentsGetPixPaymentsPaymentId_v1.csv' target=\"_blank\"\u003eFazer download do dicionário de dados\u003c/a\u003e\n\n        Consulte a seção **Convenções de payload** para obter mais informações sobre [Atributos Obrigatórios / Opcionais](#convencoes-de-propriedade-dos-atributos).\n      parameters:\n        - $ref: '#/components/parameters/paymentId'\n        - $ref: '#/components/parameters/Authorization'\n        - $ref: '#/components/parameters/xFapiAuthDate'\n        - $ref: '#/components/parameters/xFapiCustomerIpAddress'\n        - $ref: '#/components/parameters/xFapiInteractionId'\n        - $ref: '#/components/parameters/xCustomerUserAgent'\n      responses:\n        '200':\n          $ref: '#/components/responses/200PaymentsInitiationPixPaymentIdRead'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaType'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n      security:\n        - OpenId:\n            - openid\n          OAuth2Security:\n            - 'consent:consentId'\n            - payments\ncomponents:\n  schemas:\n    422ResponseErrorCreateConsent:\n      type: object\n      required:\n        - errors\n      properties:\n        errors:\n          type: array\n          minItems: 1\n          maxItems: 3\n          items:\n            type: object\n            required:\n              - code\n              - title\n              - detail\n            properties:\n              code:\n                $ref: '#/components/schemas/EnumErrorsCreateConsent'\n              title:\n                type: string\n                maxLength: 255\n                pattern: \\w*\\W*\n                example: Forma de pagamento inválida.\n                description: |\n                  Título específico do erro reportado, de acordo com o código enviado:  \n                  • FORMA_PGTO_INVALIDA: Forma de pagamento inválida.  \n                  • DATA_PGTO_INVALIDA: Data de pagamento inválida.  \n                  • NAO_INFORMADO: Não informado.    \n              detail:\n                type: string\n                maxLength: 2048\n                pattern: \\w*\\W*\n                example: Meio de pagamento inválido.\n                description: |\n                  Descrição específica do erro de acordo com o código reportado:  \n                  • FORMA_PGTO_INVALIDA – Meio de pagamento inválido.  \n                  • DATA_PGTO_INVALIDA – Data de pagamento inválida no contexto, por exemplo, data no passado. Para pagamentos únicos deve ser informada a data atual, do dia corrente.  \n                  • NAO_INFORMADO – Não reportado/identificado pela instituição detentora de conta.  \n            additionalProperties: false\n        meta:\n          $ref: '#/components/schemas/Meta'\n      additionalProperties: false\n    422ResponseErrorCreatePixPayment:\n      type: object\n      required:\n        - errors\n      properties:\n        errors:\n          type: array\n          minItems: 1\n          maxItems: 9\n          items:\n            type: object\n            required:\n              - code\n              - title\n              - detail\n            properties:\n              code:\n                $ref: '#/components/schemas/EnumErrorsCreatePayment'\n              title:\n                type: string\n                maxLength: 255\n                pattern: \\w*\\W*\n                example: Saldo insuficiente.\n                description: |\n                  Título específico do erro reportado, de acordo com o código enviado:  \n                  • SALDO_INSUFICIENTE: Saldo insuficiente.  \n                  • BENEFICIARIO_INCOMPATIVEL: Beneficiário incompatível.  \n                  • VALOR_INCOMPATIVEL: Valor da transação incompatível.  \n                  • VALOR_ACIMA_LIMITE: Acima do limite estabelecido.  \n                  • VALOR_INVALIDO: Valor inválido.  \n                  • COBRANCA_INVALIDA: Cobrança inválida.  \n                  • CONSENTIMENTO_INVALIDO: Consentimento inválido.  \n                  • JANELA_OPER_INVALIDA: Janela de operação inválida.  \n                  • NAO_INFORMADO: Não informado.  \n              detail:\n                type: string\n                maxLength: 2048\n                pattern: \\w*\\W*\n                example: A conta selecionada não possui saldo suficiente para realizar o pagamento.\n                description: |\n                  Descrição específica do erro de acordo com o código reportado:  \n                  • SALDO_INSUFICIENTE: A conta selecionada não possui saldo suficiente para realizar o pagamento.  \n                  • BENEFICIARIO_INCOMPATIVEL: O beneficiário informado no consentimento não é o mesmo do esperado pelo DICT.  \n                  • VALOR_INCOMPATIVEL: O valor informado no consentimento não é o mesmo valor do informado no payload de pagamento.  \n                  • VALOR_ACIMA_LIMITE: O valor (ou quantidade de transações) ultrapassa a faixa de limite parametrizada na detentora para permitir a realização de transações pelo cliente.  \n                  • VALOR_INVALIDO: O valor enviado não é válido para o QR Code informado.  \n                  • COBRANCA_INVALIDA: Validação de expiração, validação de vencimento ou Status Válido.  \n                  • CONSENTIMENTO_INVALIDO: Consentimento inválido (status diferente de \"AUTHORISED\" ou está expirado).  \n                  • JANELA_OPER_INVALIDA: Requisição está fora da janela de funcionamento.  \n                  • NAO_INFORMADO: Não reportado/identificado pela instituição detentora de conta.  \n            additionalProperties: false\n        meta:\n          $ref: '#/components/schemas/Meta'\n      additionalProperties: false\n    Account:\n      type: object\n      description: |\n        Objeto que contém a identificação de uma conta. \n      required:\n        - ispb\n        - number\n        - checkDigit\n        - accountType\n      properties:\n        ispb:\n          type: string\n          minLength: 8\n          maxLength: 8\n          pattern: '^[0-9]{8}$'\n          example: '12345678'\n          description: |\n            Deve ser preenchido com o ISPB (Identificador do Sistema de Pagamentos Brasileiros) do participante do SPI (Sistema de pagamentos instantâneos) somente com números.\n        issuer:\n          type: string\n          maxLength: 4\n          pattern: '^\\d{4}$'\n          example: '1774'\n          description: |\n            Código da Agência emissora da conta sem dígito.  \n            (Agência é a dependência destinada ao atendimento aos clientes, ao público em geral e aos associados de cooperativas de crédito,  \n            no exercício de atividades da instituição, não podendo ser móvel ou transitória).  \n            [Restrição] Preenchimento obrigatório para os seguintes tipos de conta: CACC (CONTA_DEPOSITO_A_VISTA), SVGS (CONTA_POUPANCA) e SLRY (CONTA_SALARIO).\n        number:\n          type: string\n          minLength: 1\n          maxLength: 20\n          pattern: '^\\d{8,20}$'\n          example: '1234567890'\n          description: Número da conta sem o dígito.\n        checkDigit:\n          type: string\n          pattern: \\w*\\W*\n          minLength: 1\n          maxLength: 1\n          example: '4'\n          description: Dígito da conta.\n        accountType:\n          $ref: '#/components/schemas/EnumAccountPaymentsType'\n      additionalProperties: false\n    BusinessEntity:\n      type: object\n      description: 'Usuário (pessoa jurídica) que encontra-se logado na instituição Iniciadora de Pagamento. [Restrição] Preenchimento obrigatório se usuário logado na instituição Iniciadora de Pagamento for um CNPJ (pessoa jurídica).'\n      additionalProperties: false\n      required:\n        - document\n      properties:\n        document:\n          type: object\n          additionalProperties: false\n          required:\n            - identification\n            - rel\n          properties:\n            identification:\n              type: string\n              maxLength: 14\n              description: Número do documento de identificação oficial do titular pessoa jurídica.\n              example: '11111111111111'\n              pattern: '^\\d{14}$'\n            rel:\n              type: string\n              maxLength: 4\n              description: Tipo do documento de identificação oficial do titular pessoa jurídica.\n              example: CNPJ\n              pattern: '^[A-Z]{4}$'\n    CreatePaymentConsent:\n      type: object\n      required:\n        - data\n      properties:\n        data:\n          type: object\n          description: Objeto contendo as informações de consentimento para a iniciação de pagamento individual.\n          required:\n            - loggedUser\n            - creditor\n            - payment\n          properties:\n            loggedUser:\n              $ref: '#/components/schemas/LoggedUser'\n            businessEntity:\n              $ref: '#/components/schemas/BusinessEntity'\n            creditor:\n              $ref: '#/components/schemas/Identification'\n            payment:\n              $ref: '#/components/schemas/PaymentConsent'\n            debtorAccount:\n              $ref: '#/components/schemas/DebtorAccount'\n          additionalProperties: false\n      additionalProperties: false\n    CreatePixPayment:\n      type: object\n      required:\n        - data\n      properties:\n        data:\n          $ref: '#/components/schemas/CreatePixPaymentData'\n      additionalProperties: false\n    CreatePixPaymentData:\n      type: object\n      description: Objeto contendo dados do pagamento e do recebedor (creditor).\n      required:\n        - localInstrument\n        - payment\n        - creditorAccount\n      properties:\n        localInstrument:\n          $ref: '#/components/schemas/EnumLocalInstrument'\n        payment:\n          $ref: '#/components/schemas/PaymentPix'\n        creditorAccount:\n          $ref: '#/components/schemas/CreditorAccount'\n        remittanceInformation:\n          type: string\n          maxLength: 140\n          pattern: '[\\w\\W\\s]*'\n          example: Pagamento da nota XPTO035-002.\n          description: |\n            Deve ser preenchido sempre que o usuário pagador inserir alguma informação adicional em um pagamento, a ser enviada ao recebedor.\n        qrCode:\n          type: string\n          maxLength: 512\n          pattern: '[\\w\\W\\s]*'\n          example: |\n            00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012  \n            BR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062  \n            530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB  \n            CD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\n          description: |\n            Obs: Campo reservado para uso futuro.  \n            Sequência de caracteres que corresponde ao QR Code disponibilizado para o pagador.  \n            É a sequência de caracteres que seria lida pelo leitor de QR Code, e deve propiciar o retorno dos dados do pagador após consulta na DICT.  \n            Essa funcionalidade é possível tanto para QR Code estático quanto para QR Code dinâmico.  \n            No arranjo do Pix esta é a mesma sequência gerada e/ou lida pela funcionalidade Pix Copia e Cola.  \n            Este campo deverá ser no formato UTF-8.  \n            [Restrição] Preenchimento obrigatório para pagamentos por QR Code, observado o tamanho máximo de 512 bytes.\n        proxy:\n          type: string\n          maxLength: 77\n          pattern: '[\\w\\W\\s]*'\n          example: '12345678901'\n          description: |\n            Chave cadastrada no DICT pertencente ao recebedor. Os tipos de chaves podem ser: telefone, e-mail, cpf/cnpj ou chave aleatória.  \n            No caso de telefone celular deve ser informado no padrão E.1641.  \n            Para e-mail deve ter o formato xxxxxxxx@xxxxxxx.xxx(.xx) e no máximo 77 caracteres.  \n            No caso de CPF deverá ser informado com 11 números, sem pontos ou traços.  \n            Para o caso de CNPJ deverá ser informado com 14 números, sem pontos ou traços.  \n            No caso de chave aleatória deve ser informado o UUID gerado pelo DICT, conforme formato especificado na RFC41223.  \n            [Restrição] Obrigatório quando o campo localInstrument for igual a DICT.\n      additionalProperties: false\n    CreditorAccount:\n      type: object\n      description: |\n        Objeto que contém a identificação da conta de destino do beneficiário/recebedor.  \n      required:\n        - ispb\n        - number\n        - accountType\n      properties:\n        ispb:\n          type: string\n          minLength: 8\n          maxLength: 8\n          pattern: '^[0-9]{8}$'\n          example: '12345678'\n          description: |\n            Deve ser preenchido com o ISPB (Identificador do Sistema de Pagamentos Brasileiros) do participante do SPI (Sistema de pagamentos instantâneos) somente com números.\n        issuer:\n          type: string\n          maxLength: 4\n          pattern: '^\\d{4}$'\n          example: '1774'\n          description: |\n            Código da Agência emissora da conta sem dígito.  \n            (Agência é a dependência destinada ao atendimento aos clientes, ao público em geral e aos associados de cooperativas de crédito,  \n            no exercício de atividades da instituição, não podendo ser móvel ou transitória).  \n            [Restrição] Preenchimento obrigatório para os seguintes tipos de conta: CACC (CONTA_DEPOSITO_A_VISTA), SVGS (CONTA_POUPANCA) e SLRY (CONTA_SALARIO).\n        number:\n          type: string\n          minLength: 3\n          maxLength: 20\n          pattern: '^\\d{3,20}$'\n          example: '1234567890'\n          description: |\n            Deve ser preenchido com o número da conta do usuário recebedor, com dígito verificador (se este existir),  \n            se houver valor alfanumérico, este deve ser convertido para 0.\n        accountType:\n          $ref: '#/components/schemas/EnumAccountPaymentsType'\n      additionalProperties: false\n    DebtorAccount:\n      type: object\n      description: |\n        Objeto que contém a identificação da conta de origem do pagador.  \n        As informações quanto à conta de origem do pagador poderão ser trazidas no consentimento para a detentora, caso a iniciadora tenha coletado essas informações do cliente. Do contrário, será coletada na detentora e trazida para a iniciadora como resposta à criação do pagamento.\n      required:\n        - ispb\n        - number\n        - accountType\n      properties:\n        ispb:\n          type: string\n          minLength: 8\n          maxLength: 8\n          pattern: '^[0-9]{8}$'\n          example: '12345678'\n          description: |\n            Deve ser preenchido com o ISPB (Identificador do Sistema de Pagamentos Brasileiros) do participante do SPI (Sistema de pagamentos instantâneos) somente com números.\n        issuer:\n          type: string\n          maxLength: 4\n          pattern: '^\\d{4}$'\n          example: '1774'\n          description: |\n            Código da Agência emissora da conta sem dígito.  \n            (Agência é a dependência destinada ao atendimento aos clientes, ao público em geral e aos associados de cooperativas de crédito,  \n            no exercício de atividades da instituição, não podendo ser móvel ou transitória).  \n            [Restrição] Preenchimento obrigatório para os seguintes tipos de conta: CACC (CONTA_DEPOSITO_A_VISTA), SVGS (CONTA_POUPANCA) e SLRY (CONTA_SALARIO).\n        number:\n          type: string\n          minLength: 3\n          maxLength: 20\n          pattern: '^\\d{3,20}$'\n          example: '1234567890'\n          description: |\n            Deve ser preenchido com o número da conta transacional do usuário pagador, com dígito verificador (se este existir),  \n            se houver valor alfanumérico, este deve ser convertido para 0.\n        accountType:\n          $ref: '#/components/schemas/EnumAccountPaymentsType'\n      additionalProperties: false\n    EndToEndId:\n      type: string\n      minLength: 32\n      maxLength: 32\n      pattern: '^([E])([0-9]{8})([0-9]{4})(0[1-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])(2[0-3]|[01][0-9])([0-5][0-9])([a-zA-Z0-9]{11})$'\n      example: E9040088820210128000800123873170\n      description: |\n        Deve ser preenchido no formato padrão ExxxxxxxxyyyyMMddHHmmkkkkkkkkkkk (32 caracteres; “case sensitive”, isso é, diferencia letras maiúsculas e minúsculas), sendo:\n        • “E” – fixo (1 caractere);  \n        • xxxxxxxx – identificação do agente que gerou o ´EndToEndId´, podendo ser: o ISPB do participante direto ou o ISPB do participante indireto (8 caracteres numéricos [0-9]);  \n        • yyyyMMddHHmm – data, hora e minuto (12 caracteres), seguindo o horário UTC, da submissão da ordem de pagamento, caso a liquidação seja prioritária, ou prevista para o envio da ordem ao sistema de liquidação, caso seja realizado um agendamento. Para ordens prioritárias e não prioritárias, aceita-se o preenchimento, pelo agente que gerou o ´EndToEndId´, com uma tolerância máxima de 12 horas, para o futuro e para o passado, em relação ao horário efetivo de processamento da ordem pelo SPI;  \n        • kkkkkkkkkkk – sequencial criado pelo agente que gerou o ´EndToEndId´ (11 caracteres alfanuméricos [a-z/A-Z/0-9]). Deve ser único dentro de cada “yyyyMMddHHmm”.  \n        Admite-se que o ´EndToEndId´ seja gerado pelo participante direto, pelo participante indireto ou pelo iniciador de pagamento.  \n        Ele deve ser único, não podendo ser repetido em qualquer outra operação enviada ao SPI.\n    EnumAccountPaymentsType:\n      type: string\n      maxLength: 4\n      enum:\n        - CACC\n        - SLRY\n        - SVGS\n        - TRAN\n      example: CACC\n      description: |\n        Tipos de contas usadas para pagamento via Pix.  \n        Modalidades tradicionais previstas pela Resolução 4.753, não contemplando contas vinculadas,  \n        conta de domiciliados no exterior, contas em moedas estrangeiras e conta correspondente moeda eletrônica.  \n        Segue descrição de cada valor do ENUM para o escopo do Pix.  \n        CACC - Current - Conta Corrente.  \n        SLRY - Salary - Conta-Salário.  \n        SVGS - Savings - Conta de Poupança.  \n        TRAN - TransactingAccount - Conta de Pagamento pré-paga.\n    EnumAuthorisationStatusType:\n      type: string\n      maxLength: 22\n      enum:\n        - AWAITING_AUTHORISATION\n        - AUTHORISED\n        - REJECTED\n        - CONSUMED\n      example: AWAITING_AUTHORISATION\n      description: |\n        Retorna o estado do consentimento, o qual no momento de sua criação será AWAITING_AUTHORISATION.\n        Este estado será alterado depois da autorização do consentimento na detentora da conta do pagador (Debtor) para AUTHORISED ou REJECTED. \n        O consentimento fica no estado CONSUMED após ocorrer a iniciação do pagamento referente ao consentimento.  \n        Em caso de consentimento expirado a detentora deverá retornar o status REJECTED.  \n        Estados possíveis:  \n        AWAITING_AUTHORISATION - Aguardando autorização  \n        AUTHORISED - Autorizado   \n        REJECTED - Rejeitado  \n        CONSUMED - Consumido \n    EnumErrorsCreateConsent:\n      type: string\n      maxLength: 19\n      enum:\n        - FORMA_PGTO_INVALIDA\n        - DATA_PGTO_INVALIDA\n        - NAO_INFORMADO\n      example: FORMA_PGTO_INVALIDA\n      description: |\n        Códigos de erros previstos na criação de consentimento para a iniciação de pagamentos:  \n        • FORMA_PGTO_INVALIDA: Forma de pagamento inválida.  \n        • DATA_PGTO_INVALIDA: Data de pagamento inválida.  \n        • NAO_INFORMADO: Não informado.  \n    EnumErrorsCreatePayment:\n      type: string\n      maxLength: 25\n      enum:\n        - SALDO_INSUFICIENTE\n        - BENEFICIARIO_INCOMPATIVEL\n        - VALOR_INCOMPATIVEL\n        - VALOR_ACIMA_LIMITE\n        - VALOR_INVALIDO\n        - COBRANCA_INVALIDA\n        - CONSENTIMENTO_INVALIDO\n        - JANELA_OPER_INVALIDA\n        - NAO_INFORMADO\n      example: SALDO_INSUFICIENTE\n      description: |\n        Códigos de erros previstos na criação da iniciação de pagamento:  \n        • SALDO_INSUFICIENTE – Esta conta não possui saldo suficiente para realizar o pagamento.  \n        • BENEFICIARIO_INCOMPATIVEL – O beneficiário informado no consentimento não é o mesmo do esperado pelo DICT.  \n        • VALOR_INCOMPATIVEL – O valor informado no consentimento não é o mesmo valor do informado no payload de pagamento.  \n        • VALOR_ACIMA_LIMITE – O valor (ou quantidade de transações) ultrapassa a faixa de limite parametrizada na detentora para permitir a realização de transações pelo cliente.  \n        • VALOR_INVALIDO – O valor enviado não é válido para o QR Code informado.  \n        • COBRANCA_INVALIDA – Validação de expiração, validação de vencimento, Status Válido.  \n        • CONSENTIMENTO_INVALIDO – Consentimento inválido (status não é \"authorised\" ou está expirado).  \n        • JANELA_OPER_INVALIDA – Requisição está fora da janela de funcionamento.  \n        • NAO_INFORMADO – Não informada pela detentora de conta.  \n    EnumLocalInstrument:\n      type: string\n      maxLength: 4\n      enum:\n        - MANU\n        - DICT\n        - QRDN\n        - QRES\n      example: DICT\n      description: |\n        Especifica a forma de iniciação do pagamento:  \n        - MANU - Inserção manual de dados da conta transacional  \n        - DICT - Inserção manual de chave Pix  \n        - QRDN - QR code dinâmico (*Domínio reservado para uso futuro*)  \n        - QRES - QR code estático (*Domínio reservado para uso futuro*)  \n    EnumPaymentPersonType:\n      type: string\n      maxLength: 15\n      enum:\n        - PESSOA_NATURAL\n        - PESSOA_JURIDICA\n      description: |\n        Titular, pessoa natural ou juridica a quem se referem os dados de recebedor (creditor).\n    EnumPaymentStatusType:\n      type: string\n      maxLength: 45\n      enum:\n        - PDNG\n        - PART\n        - ACSP\n        - ACSC\n        - ACCC\n        - RJCT\n      example: PDNG\n      description: |\n        Estado atual da iniciação de pagamento. O estado evolui na seguinte ordem:  \n        1. PDNG (PENDING) - Iniciação de pagamento ou transação de pagamento está pendente. Checagens adicionais em realização.  \n        2. PART (PARTIALLY ACCEPTED) - Aguardando autorização múltipla alçada.  \n        3. ACSP (ACCEPTED_SETTLEMENT_IN_PROCESS) - Iniciação de pagamento aceita e processamento do pagamento foi iniciado.  \n        4. ACSC (ACCEPTED_SETTLEMENT_COMPLETED_DEBITOR_ACCOUNT) - Débito realizado na conta do pagador.  \n        5. ACCC (ACCEPTED_SETTLEMENT_COMPLETED) - Crédito realizado na instituição de destino.  \n        Em caso insucesso:  \n        RJCT (REJECTED) - Instrução de pagamento rejeitada.\n    EnumPaymentType:\n      type: string\n      maxLength: 3\n      enum:\n        - PIX\n      example: PIX\n      description: |\n        Este campo define o tipo de pagamento que será iniciado após a autorização do consentimento.\n    EnumRejectionReasonType:\n      type: string\n      maxLength: 50\n      enum:\n        - ABORTED_SETTLEMENT_TIMEOUT\n        - ERROR_CREDITOR_AGENT\n        - TIMEOUT_DEBTOR_AGENT\n        - INVALID_CREDITOR_ACCOUNT_NUMBER\n        - BLOCKED_ACCOUNT\n        - CLOSED_CREDITOR_ACCOUNT_NUMBER\n        - INVALID_CREDITOR_ACCOUNTTYPE\n        - TRANSACTION_NOT_SUPPORTED\n        - NOT_ALLOWED_BOOK_TRANSFER\n        - FORBIDDEN_RETURN_PAYMENT\n        - INCORRECT_AGENT\n        - ZERO_AMOUNT\n        - NOT_ALLOWED_AMOUNT\n        - INSUFFICIENT_FUNDS\n        - WRONG_AMOUNT\n        - INVALID_AMOUNT\n        - INVALID_NUMBER_OF_TRANSACTIONS\n        - INCONSISTENT_WITH_END_CUSTOMER\n        - INVALID_IDENTIFICATION_CODE\n        - INVALID_CREDITOR_IDENTIFICATION_CODE\n        - CREDITOR_IDENTIFIER_INCORRECT\n        - ELEMENT_CONTENT_FORMALLY_INCORRECT\n        - ORDER_REJECTED\n        - NOT_ALLOWED_PAYMENT\n        - NOT_ALLOWED_ACCOUNT\n        - USER_NOT_YET_ACTIVATED\n        - INVALID_CREATION_DATE\n        - INVALID_CUT_OFF_DATE\n        - SETTLEMENT_FAILED\n        - INVALID_PURPOSE\n        - INVALID_END_TO_END_ID\n        - INVALID_DEBTOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER\n        - INVALID_CREDITOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER\n        - REGULATORY_REASON\n        - SPECIFIC_SERVICE_OFFERED_BY_CREDITOR_AGENT\n        - INVALID_BILL\n        - OPERATION_WINDOW\n        - INCOMPATIBLE_DATE\n        - MISMATCH_AMOUNT\n        - OVER_LIMIT\n        - INVALID_CONSENT\n        - DENIED_MULTIPLE_AUTHORISATIONS\n        - EXPIRED_MULTIPLE_AUTHORISATIONS\n        - EXPIRED_BILL\n      example: USER_NOT_YET_ACTIVATED\n      description: |\n        Motivo da rejeição do pagamento. Informações complementares sobre o motivo do status.  \n        ABORTED_SETTLEMENT_TIMEOUT - Liquidação da transação interrompida devido a timeout no SPI (AB03).\n        ERROR_CREDITOR_AGENT - Transação interrompida devido a erro no participante do usuário recebedor (AB09).\n        TIMEOUT_DEBTOR_AGENT - Timeout do participante emissor da ordem de pagamento (AB11).\n        INVALID_CREDITOR_ACCOUNT_NUMBER - Número da conta transacional do usuário recebedor inexistente ou inválido (AC03).\n        BLOCKED_ACCOUNT - Conta transacional do usuário recebedor encontra-se bloqueada (AC06).\n        CLOSED_CREDITOR_ACCOUNT_NUMBER - Número da conta transacional do usuário recebedor encerrada (AC07).\n        INVALID_CREDITOR_ACCOUNTTYPE - Tipo incorreto para a conta transacional do usuário recebedor (AC14).\n        TRANSACTION_NOT_SUPPORTED - Tipo de transação não é suportado/autorizado na conta transacional do usuário recebedor (AG03). Exemplo: transferência para conta salário.\n        NOT_ALLOWED_BOOK_TRANSFER - Não é permitida ordem de pagamento/devolução no SPI cujos recursos sejam transferidos de uma conta transacional para outra em uma mesma instituição participante ou entre participantes que utilizem o serviço de liquidação de um mesmo participante liquidante no SPI (booktransfer) (AG12).\n        FORBIDDEN_RETURN_PAYMENT - Não é permitido devolver a devolução de um pagamento instantâneo (AG13).\n        INCORRECT_AGENT - Participante direto não é liquidante do participante do usuário pagador / participante do usuário recebedor (AGNT).\n        ZERO_AMOUNT - Ordem de pagamento instantâneo com valor zero (AM01).\n        NOT_ALLOWED_AMOUNT - Ordem de pagamento/devolução em valor que faz superar o limite permitido para o tipo de conta transacional creditada (AM02).\n        INSUFFICIENT_FUNDS - Saldo insuficiente na conta PI do participante do usuário pagador (AM04).\n        WRONG_AMOUNT - Devolução de pagamento em valor que faz superar o valor da ordem de pagamento instantâneo correspondente (AM09).\n        INVALID_AMOUNT - Divergência entre a somatória dos valores do bloco ‘valorDoDinheiroOuCompra’ e o campo ‘valor’ (AM12).\n        INVALID_NUMBER_OF_TRANSACTIONS - Quantidade de transações inválida (AM18).\n        INCONSISTENT_WITH_END_CUSTOMER - CPF/CNPJ do usuário recebedor não é consistente com o titular da conta transacional especificada (BE01).\n        INVALID_IDENTIFICATION_CODE - Código de situação de pagamento ou de erro inválido (BE15).\n        INVALID_CREDITOR_IDENTIFICATION_CODE - QR Code rejeitado pelo participante do usuário recebedor (BE17).\n        CREDITOR_IDENTIFIER_INCORRECT - CPF/CNPJ do usuário recebedor incorreto (CH11).\n        ELEMENT_CONTENT_FORMALLY_INCORRECT - Elemento da mensagem incorreto (CH16).\n        ORDER_REJECTED - Ordem rejeitada pelo participante do usuário recebedor (DS04).\n        NOT_ALLOWED_PAYMENT - Participante que assinou a mensagem não é autorizado a realizar a operação na conta PI debitada. No caso em que o participante que assinou a mensagem não é o titular da conta PI debitada nem é o liquidante no SPI do participante do usuário pagador (DS0G).\n        NOT_ALLOWED_ACCOUNT - ISPB do participante que submeteu a resposta à ordem de pagamento/devolução diferente do ISPB do participante creditado pela ordem (DS0H).\n        USER_NOT_YET_ACTIVATED - Participante não se encontra cadastrado ou ainda não iniciou a operação no SPI (DS27).\n        INVALID_CREATION_DATE - Data e Hora do envio da mensagem inválida (DT02).\n        INVALID_CUT_OFF_DATE - Transação extrapola o prazo máximo para devolução de pagamento instantâneo regulamentado pelo Arranjo PIX (DT05).\n        SETTLEMENT_FAILED - Erro no processamento do pagamento instantâneo (ED05).\n        INVALID_PURPOSE - Inconsistência entre a finalidade da transação e o preenchimento do bloco elementos Structured (FF07).\n        INVALID_END_TO_END_ID - Identificador da operação mal formatado (FF08).\n        INVALID_DEBTOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER - ISPB do participante do usuário pagador inválido ou inexistente (RC09).\n        INVALID_CREDITOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER - ISPB do participante do usuário recebedor inválido ou inexistente (RC10).\n        REGULATORY_REASON - Ordem de pagamento em que o usuário pagador é sancionado por resolução do Conselho de Segurança das Nações Unidas (CSNU). Nos casos em que o usuário recebedor for o sancionado, a ordem de pagamento não deve ser rejeitada (RR4).\n        SPECIFIC_SERVICE_OFFERED_BY_CREDITOR_AGENT - A transação original não está relacionada ao serviço de Saque Pix (SL02).\n        INVALID_BILL - Validação de expiração, validação de vencimento, Status Válido (INDT).  \n        OPERATION_WINDOW - Requisição está fora da janela de funcionamento (IDEA).  \n        INCOMPATIBLE_DATE - Data do pagamento divergente da data consentida ou divergente da data atual do QR Code (TERM).  \n        MISMATCH_AMOUNT - O valor informado no consentimento não é o mesmo valor do informado no payload de pagamento (OB01).  \n        OVER_LIMIT - O valor (ou quantidade de transações) ultrapassa a faixa de limite parametrizada na detentora para permitir a realização de transações pelo cliente (OB02).   \n        INVALID_CONSENT - Consentimento inválido (status não é \"authorised\" ou está expirado) (OB03).  \n        DENIED_MULTIPLE_AUTHORISATIONS - Um (ou mais) aprovadores na detentora recusaram a operação (OB04).  \n        EXPIRED_MULTIPLE_AUTHORISATIONS - Um (ou mais) aprovadores na detentora não tomaram ação para aprovar a operação (OB05).  \n        EXPIRED_BILL - O QR Code não é mais válido (OB06).  \n        [Restrição] Esse motivo deverá ser enviado quando o campo /data/status for igual a RJCT (REJECTED).  \n    Identification:\n      type: object\n      description: Objeto contendo os dados do recebedor (creditor).\n      required:\n        - personType\n        - cpfCnpj\n        - name\n      properties:\n        personType:\n          $ref: '#/components/schemas/EnumPaymentPersonType'\n        cpfCnpj:\n          type: string\n          minLength: 11\n          maxLength: 14\n          pattern: '^\\d{11}$|^\\d{14}$'\n          example: '58764789000137'\n          description: |\n            Identificação da pessoa envolvida na transação.  \n            Preencher com o CPF ou CNPJ, de acordo com o valor escolhido no campo type.  \n            O CPF será utilizado com 11 números e deverá ser informado sem pontos ou traços.  \n            O CNPJ será utilizado com 14 números e deverá ser informado sem pontos ou traços.\n        name:\n          type: string\n          maxLength: 140\n          pattern: '[\\w\\W\\s]*'\n          example: Marco Antonio de Brito\n          description: |\n            Em caso de pessoa natural deve ser informado o nome completo do titular da conta do recebedor.  \n            Em caso de pessoa jurídica deve ser informada a razão social ou o nome fantasia da conta do recebedor.\n      additionalProperties: false\n    Links:\n      type: object\n      description: Referências para outros recusos da API requisitada.\n      required:\n        - self\n      properties:\n        self:\n          type: string\n          format: uri\n          maxLength: 2000\n          description: URI completo que gerou a resposta atual.\n          example: 'https://api.banco.com.br/open-banking/api/v1/resource'\n          pattern: '^(https?:\\/\\/)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?\u0026\\/\\/=]*)$'\n        first:\n          type: string\n          format: uri\n          maxLength: 2000\n          description: URI da primeira página que originou essa lista de resultados. Restrição - Obrigatório quando não for a primeira página da resposta\n          example: 'https://api.banco.com.br/open-banking/api/v1/resource'\n          pattern: '^(https?:\\/\\/)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?\u0026\\/\\/=]*)$'\n        prev:\n          type: string\n          format: uri\n          maxLength: 2000\n          description: \"URI da página anterior dessa lista de resultados. Restrição - \\tObrigatório quando não for a primeira página da resposta\"\n          example: 'https://api.banco.com.br/open-banking/api/v1/resource'\n          pattern: '^(https?:\\/\\/)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?\u0026\\/\\/=]*)$'\n        next:\n          type: string\n          format: uri\n          maxLength: 2000\n          description: URI da próxima página dessa lista de resultados. Restrição - Obrigatório quando não for a última página da resposta\n          example: 'https://api.banco.com.br/open-banking/api/v1/resource'\n          pattern: '^(https?:\\/\\/)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?\u0026\\/\\/=]*)$'\n        last:\n          type: string\n          format: uri\n          maxLength: 2000\n          description: URI da última página dessa lista de resultados. Restrição - Obrigatório quando não for a última página da resposta\n          example: 'https://api.banco.com.br/open-banking/api/v1/resource'\n          pattern: '^(https?:\\/\\/)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?\u0026\\/\\/=]*)$'\n      additionalProperties: false\n    LoggedUser:\n      type: object\n      description: Usuário (pessoa natural) que encontra-se logado na instituição Iniciadora de Pagamento.\n      additionalProperties: false\n      required:\n        - document\n      properties:\n        document:\n          type: object\n          additionalProperties: false\n          required:\n            - identification\n            - rel\n          properties:\n            identification:\n              type: string\n              maxLength: 11\n              description: Número do documento de identificação oficial do usuário.\n              example: '11111111111'\n              pattern: '^\\d{11}$'\n            rel:\n              type: string\n              maxLength: 3\n              description: Tipo do documento de identificação oficial do usuário.\n              example: CPF\n              pattern: '^[A-Z]{3}$'\n    Meta:\n      type: object\n      description: Meta informações referente a API requisitada.\n      required:\n        - totalRecords\n        - totalPages\n        - requestDateTime\n      properties:\n        totalRecords:\n          type: integer\n          format: int32\n          description: Número total de registros no resultado\n          example: 1\n        totalPages:\n          type: integer\n          format: int32\n          description: Número total de páginas no resultado\n          example: 1\n        requestDateTime:\n          description: 'Data e hora da consulta, conforme especificação RFC-3339, formato UTC.'\n          type: string\n          maxLength: 20\n          format: date-time\n          example: '2021-05-21T08:30:00Z'\n      additionalProperties: false\n    PaymentConsent:\n      type: object\n      description: Objeto contendo dados de pagamento para consentimento.\n      required:\n        - type\n        - date\n        - currency\n        - amount\n      properties:\n        type:\n          $ref: '#/components/schemas/EnumPaymentType'\n        date:\n          type: string\n          format: date\n          maxLength: 10\n          pattern: '^(\\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$'\n          example: '2021-01-01'\n          description: 'Data do pagamento, conforme especificação RFC-3339.'\n        currency:\n          type: string\n          maxLength: 3\n          pattern: '^([A-Z]{3})$'\n          example: BRL\n          description: |\n            Código da moeda nacional segundo modelo ISO-4217, ou seja, 'BRL'. \n            Todos os valores monetários informados estão representados com a moeda vigente do Brasil.\n        amount:\n          type: string\n          minLength: 4\n          maxLength: 19\n          pattern: '^((\\d{1,16}\\.\\d{2}))$'\n          example: '100000.12'\n          description: |\n            Valor da transação com 2 casas decimais.\n      additionalProperties: false\n    PaymentPix:\n      type: object\n      description: Objeto contendo dados do pagameto como moeda e valor.\n      required:\n        - amount\n        - currency\n      properties:\n        amount:\n          type: string\n          minLength: 4\n          maxLength: 19\n          pattern: '^((\\d{1,16}\\.\\d{2}))$'\n          example: '100000.12'\n          description: |\n            Valor da transação com 2 casas decimais.\n        currency:\n          type: string\n          maxLength: 3\n          pattern: '^([A-Z]{3})$'\n          example: BRL\n          description: |\n            Código da moeda nacional segundo modelo ISO-4217, ou seja, 'BRL'.  \n            Todos os valores monetários informados estão representados com a moeda vigente do Brasil.\n      additionalProperties: false\n    ResponseError:\n      type: object\n      required:\n        - errors\n      properties:\n        errors:\n          type: array\n          minItems: 1\n          maxItems: 13\n          items:\n            type: object\n            required:\n              - code\n              - title\n              - detail\n            properties:\n              code:\n                description: Código de erro específico do endpoint\n                type: string\n                pattern: '[\\w\\W\\s]*'\n                maxLength: 255\n              title:\n                description: Título legível por humanos deste erro específico\n                type: string\n                pattern: '[\\w\\W\\s]*'\n                maxLength: 255\n              detail:\n                description: Descrição legível por humanos deste erro específico\n                type: string\n                pattern: '[\\w\\W\\s]*'\n                maxLength: 2048\n            additionalProperties: false\n        meta:\n          $ref: '#/components/schemas/Meta'\n      additionalProperties: false\n    ResponsePaymentConsent:\n      type: object\n      required:\n        - data\n        - links\n        - meta\n      properties:\n        data:\n          type: object\n          description: Objeto contendo as informações de resposta do consentimento para a iniciação de pagamento individual.\n          required:\n            - consentId\n            - statusUpdateDateTime\n            - creationDateTime\n            - expirationDateTime\n            - status\n            - loggedUser\n            - creditor\n            - payment\n          properties:\n            consentId:\n              type: string\n              maxLength: 256\n              pattern: '^urn:[a-zA-Z0-9][a-zA-Z0-9-]{0,31}:[a-zA-Z0-9()+,\\-.:=@;$_!*''%\\/?#]+$'\n              example: 'urn:bancoex:C1DD33123'\n              description: |\n                Identificador único do consentimento criado para a iniciação de pagamento solicitada. Deverá ser um URN - Uniform Resource Name.  \n                Um URN, conforme definido na [RFC8141](https://tools.ietf.org/html/rfc8141) é um Uniform Resource \n                Identifier - URI - que é atribuído sob o URI scheme \"urn\" e um namespace URN específico, com a intenção de que o URN \n                seja um identificador de recurso persistente e independente da localização.  \n                Considerando a string urn:bancoex:C1DD33123 como exemplo para consentId temos:\n                - o namespace(urn)\n                - o identificador associado ao namespace da instituição transnmissora (bancoex) \n                - o identificador específico dentro do namespace (C1DD33123).  \n                Informações mais detalhadas sobre a construção de namespaces devem ser consultadas na [RFC8141](https://tools.ietf.org/html/rfc8141).\n            creationDateTime:\n              description: 'Data e hora em que o consentimento foi criado. Uma string com data e hora conforme especificação RFC-3339, sempre com a utilização de timezone UTC(UTC time format).'\n              type: string\n              format: date-time\n              example: '2021-05-21T08:30:00Z'\n              pattern: '^(\\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)Z$'\n              maxLength: 20\n            expirationDateTime:\n              description: |\n                Data e hora em que o consentimento da iniciação de pagamento expira, devendo ser sempre o creationDateTime mais 5 minutos. Uma string com data e hora conforme especificação RFC-3339, sempre com a utilização de timezone UTC (UTC time format). \n                O consentimento é criado com o status AWAITING_AUTHORISATION, e deve assumir o status AUTHORIZED, REJECTED ou CONSUMED antes do tempo de expiração - 5 minutos.  \n                Caso não assuma, o status permanece como AWAITING_AUTHORISATION e será necessária a criação de um novo consentimento.  \n                Para o cenário em que o status assumiu AUTHORISED, o tempo máximo (do token FAPI Hybrid Flow) é de 60 minutos, sem refresh, \n                e este é o tempo para consumir o consentimento autorizado, mudando seu status para CONSUMED. Não é possível prorrogar este tempo e a criação de um novo consentimento será necessária para os cenários de insucesso.\n              type: string\n              format: date-time\n              example: '2021-05-21T08:30:00Z'\n              pattern: '^(\\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)Z$'\n              maxLength: 20\n            statusUpdateDateTime:\n              type: string\n              format: date-time\n              example: '2021-05-21T08:30:00Z'\n              pattern: '^(\\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)Z$'\n              maxLength: 20\n              description: |\n                Data e hora em que o recurso foi atualizado. Uma string com data e hora conforme especificação RFC-3339, sempre com a utilização de timezone UTC(UTC time format).\n            status:\n              $ref: '#/components/schemas/EnumAuthorisationStatusType'\n            loggedUser:\n              $ref: '#/components/schemas/LoggedUser'\n            businessEntity:\n              $ref: '#/components/schemas/BusinessEntity'\n            creditor:\n              $ref: '#/components/schemas/Identification'\n            payment:\n              $ref: '#/components/schemas/PaymentConsent'\n            debtorAccount:\n              $ref: '#/components/schemas/DebtorAccount'\n          additionalProperties: false\n        links:\n          $ref: '#/components/schemas/ResponsePixPayment/properties/links'\n        meta:\n          $ref: '#/components/schemas/Meta'\n      additionalProperties: false\n    ResponsePixPayment:\n      type: object\n      required:\n        - data\n        - links\n        - meta\n      properties:\n        data:\n          $ref: '#/components/schemas/ResponsePixPaymentData'\n        links:\n          type: object\n          description: Referências para outros recusos da API requisitada.\n          required:\n            - self\n          properties:\n            self:\n              type: string\n              format: uri\n              maxLength: 2000\n              description: URI completo que gerou a resposta atual.\n              example: 'https://api.banco.com.br/open-banking/api/v1/resource'\n              pattern: '^(https?:\\/\\/)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?\u0026\\/\\/=]*)$'\n          additionalProperties: false\n        meta:\n          $ref: '#/components/schemas/Meta'\n      additionalProperties: false\n    ResponsePixPaymentData:\n      type: object\n      description: Objeto contendo dados do pagamento e da conta do recebedor (creditor).\n      required:\n        - paymentId\n        - endToEndId\n        - consentId\n        - creationDateTime\n        - statusUpdateDateTime\n        - status\n        - localInstrument\n        - payment\n        - creditorAccount\n      properties:\n        paymentId:\n          type: string\n          minLength: 1\n          maxLength: 100\n          pattern: '^[a-zA-Z0-9][a-zA-Z0-9\\-]{0,99}$'\n          example: TXpRMU9UQTROMWhZV2xSU1FUazJSMDl\n          description: |\n            Código ou identificador único informado pela instituição detentora da conta para representar  \n            a iniciação de pagamento individual. O `paymentId` deve ser diferente do `endToEndId`.  \n            Este é o identificador que deverá ser utilizado na consulta ao status da iniciação de pagamento efetuada.\n        endToEndId:\n          $ref: '#/components/schemas/EndToEndId'\n        consentId:\n          type: string\n          maxLength: 256\n          pattern: '^urn:[a-zA-Z0-9][a-zA-Z0-9-]{0,31}:[a-zA-Z0-9()+,\\-.:=@;$_!*''%\\/?#]+$'\n          example: 'urn:bancoex:C1DD33123'\n          description: |\n            Identificador único do consentimento criado para a iniciação de pagamento solicitada. Deverá ser um URN - Uniform Resource Name.  \n            Um URN, conforme definido na [RFC8141](https://tools.ietf.org/html/rfc8141) é um Uniform Resource \n            Identifier - URI - que é atribuído sob o URI scheme \"urn\" e um namespace URN específico, com a intenção de que o URN \n            seja um identificador de recurso persistente e independente da localização.  \n            Considerando a string urn:bancoex:C1DD33123 como exemplo para consentId temos:\n            - o namespace(urn)\n            - o identificador associado ao namespace da instituição transnmissora (bancoex) \n            - o identificador específico dentro do namespace (C1DD33123).  \n            Informações mais detalhadas sobre a construção de namespaces devem ser consultadas na [RFC8141](https://tools.ietf.org/html/rfc8141).\n        creationDateTime:\n          type: string\n          format: date-time\n          pattern: '^(\\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)Z$'\n          example: '2020-07-21T08:30:00Z'\n          description: |\n            Data e hora em que o recurso foi criado.  \n            Uma string com data e hora conforme especificação RFC-3339,  \n            sempre com a utilização de timezone UTC(UTC time format).\n        statusUpdateDateTime:\n          type: string\n          format: date-time\n          pattern: '^(\\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)Z$'\n          example: '2020-07-21T08:30:00Z'\n          description: |\n            Data e hora da última atualização da iniciação de pagamento.  \n            Uma string com data e hora conforme especificação RFC-3339,  \n            sempre com a utilização de timezone UTC(UTC time format).\n        proxy:\n          type: string\n          maxLength: 77\n          pattern: '[\\w\\W\\s]*'\n          example: '12345678901'\n          description: |\n            Chave cadastrada no DICT pertencente ao recebedor. Os tipos de chaves podem ser: telefone, e-mail, cpf/cnpj ou chave aleatória.  \n            No caso de telefone celular deve ser informado no padrão E.1641.  \n            Para e-mail deve ter o formato xxxxxxxx@xxxxxxx.xxx(.xx) e no máximo 77 caracteres.  \n            No caso de CPF deverá ser informado com 11 números, sem pontos ou traços.  \n            Para o caso de CNPJ deverá ser informado com 14 números, sem pontos ou traços.  \n            No caso de chave aleatória deve ser informado o UUID gerado pelo DICT, conforme formato especificado na RFC41223.  \n            [Restrição] Obrigatório quando o campo localInstrument for igual a DICT.\n        status:\n          $ref: '#/components/schemas/EnumPaymentStatusType'\n        rejectionReason:\n          $ref: '#/components/schemas/EnumRejectionReasonType'\n        localInstrument:\n          $ref: '#/components/schemas/EnumLocalInstrument'\n        payment:\n          $ref: '#/components/schemas/PaymentPix'\n        remittanceInformation:\n          type: string\n          maxLength: 140\n          pattern: '[\\w\\W\\s]*'\n          example: Pagamento da nota RSTO035-002.\n          description: |\n            Deve ser preenchido sempre que o usuário pagador inserir alguma informação adicional em um pagamento, a ser enviada ao recebedor.\n        creditorAccount:\n          $ref: '#/components/schemas/CreditorAccount'\n      additionalProperties: false\n  parameters:\n    consentId:\n      name: consentId\n      in: path\n      description: |\n        O consentId é o identificador único do consentimento e deverá ser um URN - Uniform Resource Name.  \n        Um URN, conforme definido na [RFC8141](https://tools.ietf.org/html/rfc8141) é um Uniform Resource \n        Identifier - URI - que é atribuído sob o URI scheme \"urn\" e um namespace URN específico, com a intenção de que o URN \n        seja um identificador de recurso persistente e independente da localização.  \n        Considerando a string urn:bancoex:C1DD33123 como exemplo para consentId temos:\n        - o namespace(urn)\n        - o identificador associado ao namespace da instituição transnmissora (bancoex) \n        - o identificador específico dentro do namespace (C1DD33123).  \n        Informações mais detalhadas sobre a construção de namespaces devem ser consultadas na [RFC8141](https://tools.ietf.org/html/rfc8141).\n      required: true\n      schema:\n        type: string\n        pattern: '^urn:[a-zA-Z0-9][a-zA-Z0-9-]{0,31}:[a-zA-Z0-9()+,\\-.:=@;$_!*''%\\/?#]+$'\n        maxLength: 256\n    paymentId:\n      name: paymentId\n      in: path\n      description: Identificador da operação de pagamento.\n      required: true\n      schema:\n        type: string\n        pattern: '^[a-zA-Z0-9][a-zA-Z0-9\\-]{0,99}$'\n        maxLength: 100\n    Authorization:\n      name: Authorization\n      in: header\n      description: Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado\n      required: true\n      schema:\n        type: string\n        pattern: '[\\w\\W\\s]*'\n        maxLength: 2048\n    xCustomerUserAgent:\n      name: x-customer-user-agent\n      in: header\n      description: Indica o user-agent que o usuário utiliza.\n      required: false\n      schema:\n        type: string\n        pattern: '[\\w\\W\\s]*'\n        minLength: 1\n        maxLength: 100\n    xFapiAuthDate:\n      name: x-fapi-auth-date\n      in: header\n      description: 'Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231).Exemplo: Sun, 10 Sep 2017 19:43:31 UTC'\n      required: false\n      schema:\n        type: string\n        pattern: '^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)$'\n        minLength: 29\n        maxLength: 29\n    xFapiCustomerIpAddress:\n      name: x-fapi-customer-ip-address\n      in: header\n      description: O endereço IP do usuário se estiver atualmente logado com o receptor.\n      required: false\n      schema:\n        type: string\n        pattern: '[\\w\\W\\s]*'\n        minLength: 1\n        maxLength: 100\n    xFapiInteractionId:\n      name: x-fapi-interaction-id\n      in: header\n      description: 'Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve \"reproduzir\" esse valor no cabeçalho de resposta.'\n      required: false\n      schema:\n        type: string\n        pattern: '^[a-zA-Z0-9][a-zA-Z0-9\\-]{0,99}$'\n        minLength: 1\n        maxLength: 100\n    XIdempotencyKey:\n      name: x-idempotency-key\n      in: header\n      description: Cabeçalho HTTP personalizado. Identificador de solicitação exclusivo para suportar a idempotência.\n      required: true\n      schema:\n        type: string\n        maxLength: 40\n        pattern: ^(?!\\s)(.*)(\\S)$\n  responses:\n    BadRequest:\n      description: 'A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL.'\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/ResponseError'\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/responses/200PaymentsConsentsConsentIdRead/headers/x-fapi-interaction-id/schema'\n    Forbidden:\n      description: O token tem escopo incorreto ou uma política de segurança foi violada\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/ResponseError'\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/responses/200PaymentsConsentsConsentIdRead/headers/x-fapi-interaction-id/schema'\n    InternalServerError:\n      description: Ocorreu um erro no gateway da API ou no microsserviço\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/ResponseError'\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/responses/200PaymentsConsentsConsentIdRead/headers/x-fapi-interaction-id/schema'\n    MethodNotAllowed:\n      description: O consumidor tentou acessar o recurso com um método não suportado\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/ResponseError'\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/responses/200PaymentsConsentsConsentIdRead/headers/x-fapi-interaction-id/schema'\n    NotAcceptable:\n      description: A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/ResponseError'\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/responses/200PaymentsConsentsConsentIdRead/headers/x-fapi-interaction-id/schema'\n    NotFound:\n      description: O recurso solicitado não existe ou não foi implementado\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/ResponseError'\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/responses/200PaymentsConsentsConsentIdRead/headers/x-fapi-interaction-id/schema'\n    TooManyRequests:\n      description: 'A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido'\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/ResponseError'\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/responses/200PaymentsConsentsConsentIdRead/headers/x-fapi-interaction-id/schema'\n        Retry-After:\n          description: |\n            Cabeçalho que indica o tempo (em segundos) que o cliente deverá aguardar para realizar uma nova tentativa de chamada. Este cabeçalho deverá estar presente quando o código HTTP de retorno for 429 Too many requests.\n          schema:\n            description: |\n              Cabeçalho que indica o tempo (em segundos) que o cliente deverá aguardar para realizar uma nova tentativa de chamada. Este cabeçalho deverá estar presente quando o código HTTP de retorno for 429 Too many requests.\n            type: integer\n    UnprocessableEntityConsents:\n      description: 'A solicitação foi bem formada, mas não pôde ser processada devido à lógica de negócios específica da solicitação.'\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/422ResponseErrorCreateConsent'\n          examples:\n            Forma de pagamento inválida:\n              summary: Forma de pagamento inválida\n              value:\n                errors:\n                  - code: FORMA_PGTO_INVALIDA\n                    title: Forma de pagamento inválida.\n                    detail: Meio de pagamento inválido.\n                meta:\n                  totalRecords: 1\n                  totalPages: 1\n                  requestDateTime: '2021-05-21T08:30:00Z'\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/responses/200PaymentsConsentsConsentIdRead/headers/x-fapi-interaction-id/schema'\n    UnprocessableEntityPixPayments:\n      description: 'A solicitação foi bem formada, mas não pôde ser processada devido à lógica de negócios específica da solicitação.'\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/422ResponseErrorCreatePixPayment'\n          examples:\n            Saldo insuficiente:\n              summary: Saldo insuficiente\n              value:\n                errors:\n                  - code: SALDO_INSUFICIENTE\n                    title: Saldo insuficiente.\n                    detail: A conta selecionada não possui saldo suficiente para realizar o pagamento.\n                meta:\n                  totalRecords: 1\n                  totalPages: 1\n                  requestDateTime: '2021-05-21T08:30:00Z'\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/responses/200PaymentsConsentsConsentIdRead/headers/x-fapi-interaction-id/schema'\n    Unauthorized:\n      description: Cabeçalho de autenticação ausente/inválido ou token inválido\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/ResponseError'\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/responses/200PaymentsConsentsConsentIdRead/headers/x-fapi-interaction-id/schema'\n    UnsupportedMediaType:\n      description: O formato do payload não é um formato suportado.\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/ResponseError'\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/responses/200PaymentsConsentsConsentIdRead/headers/x-fapi-interaction-id/schema'\n    201PaymentsConsentsConsentCreated:\n      description: Consentimento de pagamento criado com sucesso.\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/responses/200PaymentsConsentsConsentIdRead/headers/x-fapi-interaction-id/schema'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ResponsePaymentConsent'\n    200PaymentsConsentsConsentIdRead:\n      description: Dados do consentimento de pagamento obtidos com sucesso.\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9][a-zA-Z0-9\\-]{0,99}$'\n            maxLength: 100\n            description: 'Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve \"reproduzir\" esse valor no cabeçalho de resposta.'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ResponsePaymentConsent'\n    201PaymentsInitiationPixPaymentCreated:\n      description: Iniciação de pagamento Pix criada com sucesso.\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/responses/200PaymentsConsentsConsentIdRead/headers/x-fapi-interaction-id/schema'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ResponsePixPayment'\n    200PaymentsInitiationPixPaymentIdRead:\n      description: Dados de iniciação de pagamento Pix obtidos com sucesso.\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/responses/200PaymentsConsentsConsentIdRead/headers/x-fapi-interaction-id/schema'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ResponsePixPayment'\n"
		}
	},
	"Error": "parse: paths: /payments/v1/consents: post: operation \"paymentsPostConsents\": responses: 201: resolve \"#/components/responses/201PaymentsConsentsConsentCreated\" reference: content: \"application/json\": schema: parse schema: reference \"#/components/schemas/ResponsePaymentConsent\": parse schema: links: parse schema: reference \"#/components/schemas/ResponsePixPayment/properties/links\": resolve reference \"#/components/schemas/ResponsePixPayment/properties/links\": schema not found"
}