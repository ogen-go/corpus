{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/fawkesrobotics/fawkes"
		},
		"file": {
			"name": "api.yaml",
			"path": "src/plugins/webview/plugin-rest-api/api.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  title: Plugin\n  version: v1beta1\n  description: |\n    Fawkes Plugin REST API.\n    List, load, and unload plugins.\n  contact:\n    name:  Tim Niemueller\n    email: niemueller@kbsg.rwth-aachen.de\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n\ntags:\n  - name: public\n    description: Plugin public API.\n\npaths:\n  /plugins:\n    get:\n      tags:\n      - public\n      summary: Get list of plugins.\n      operationId: list_plugins\n      description: |\n        Get a list of plugins.\n      parameters:\n        - name: pretty\n          in: query\n          description: Request pretty printed reply.\n          allowEmptyValue: true\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: get list of interfaces\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Plugin'\n        '400':\n          description: bad input parameter\n\n  /plugins/{name}:\n    get:\n      tags:\n      - public\n      summary: Get information about specific plugin.\n      operationId: get_plugin\n      description: |\n        Get information about a specific plugin.\n      parameters:\n        - name: name\n          in: path\n          description: |\n            Name of plugin to receive.\n          required: true\n          schema:\n            type: string\n        - name: pretty\n          in: query\n          description: Request pretty printed reply.\n          allowEmptyValue: true\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: get plugin information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Plugin'\n        '400':\n          description: bad input parameter\n\n    put:\n      tags:\n      - public\n      summary: Load a plugin.\n      operationId: set_plugin_state\n      description: |\n        Set the desired plugin state.\n      parameters:\n        - name: name\n          in: path\n          description: |\n            Name of plugin to set state of.\n          required: true\n          schema:\n            type: string\n        - name: operation\n          in: body\n          description: The requested operation.\n          required: true\n          schema:\n            $ref: '#/components/schemas/PluginOpRequest'\n        - name: pretty\n          in: query\n          description: Request pretty printed reply.\n          allowEmptyValue: true\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: Outcome of the requested operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PluginOpResponse'\n        '400':\n          description: bad input parameter\n\n\ncomponents:\n  schemas:\n    Plugin:\n      type: object\n      required:\n        - kind\n        - apiVersion\n        - name\n        - description\n        - is_meta\n        - is_loaded\n      properties:\n        kind:\n          type: string\n        apiVersion:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        is_meta:\n          type: boolean\n        meta_children:\n          type: array\n          items:\n            type: string\n        is_loaded:\n          type: boolean\n\n    PluginOpRequest:\n      type: object\n      required:\n        - kind\n        - apiVersion\n        - desired_state\n      properties:\n        kind:\n          type: string\n        apiVersion:\n          type: string\n        desired_state:\n          type: string\n          enum: [\"LOADED\", \"AVAILABLE\", \"UNLOADED\"]\n\n    PluginOpResponse:\n      type: object\n      required:\n        - kind\n        - apiVersion\n        - name\n        - state\n      properties:\n        kind:\n          type: string\n        apiVersion:\n          type: string\n        name:\n          type: string\n        state:\n          type: string\n          enum: [\"LOADED\", \"AVAILABLE\", \"UNLOADED\", \"ERROR\"]\n        message:\n          type: string\n"
		}
	},
	"Error": "parse: paths: /plugins/{name}: put: set_plugin_state: parameters: parse parameter \"operation\": unsupported parameter type body"
}