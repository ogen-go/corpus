{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/CiscoSE/Smart-Licensing-Dashboard"
		},
		"file": {
			"name": "swagger.yaml",
			"path": "Smart-Licensing-Dashboard-Backend/swagger.yaml",
			"content": "openapi: \"3.0.0\"\ninfo:\n  description: This is the swagger file that goes with our server code\n  version: \"1.0.0\"\n  title: Swagger REST Article\n#consumes:\n#  - \"application/json\"\n#produces:\n#  - \"application/json\"\n\nservers:\n  - url: \"/api\"\n#basePath: \"/api\"\n\n# Paths supported by the server application\npaths:\n  /license:\n    get:\n      operationId: \"slp_backend.read\"\n      tags:\n        - \"License\"\n      summary: \"Returns licenses for all SAs and VAs to which the user has access\"\n      description: \"Returns an object containing all license information available to a given user\"\n      responses:\n        200:\n          description: \"Successful read people list operation\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/License\"\n\n  /userinfo/access-token:\n    get:\n      operationId: \"slp_backend.get_access_token\"\n      description: \"Returns a json object containing the user's CSSM Access Token\"\n      tags:\n        - \"User Info Access Token\"\n      parameters:\n        - in: query\n          name: roomId\n          description: \"Webex Teams roomId\"\n          schema:\n            type: string\n          required: true\n        - in: query\n          name: personId\n          description: \"Webex Teams personId\"\n          schema:\n            type: string\n          required: true\n        - in: header\n          name: X-SLD-BOT-Signature\n          schema:\n            type: string\n          required: true\n          description: Signature from the SLD BOT Client.  Use this to verify response.\n        - in: header\n          name: X-SLD-Date\n          schema:\n            type: string\n          required: true\n          description: Date stamp in the format of '%Y%m%dT%H%M%SZ'\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: OK. A user's access token object. Use the X-SLD-Date and X-SLD-BE-Signature and the json body to verify/validate the response.\n          headers:\n            X-SLD-Date:\n              schema:\n                type: string\n              description: Date stamp in the format of '%Y%m%dT%H%M%SZ'\n            X-SLD-BE-Signature:\n              schema:\n                type: string\n              description: Signature from the SLD Backend server.  Use this to verify response.\n            Content-Type:\n              schema:\n                type: string\n              description: application/json\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  access_token:\n                    type: string\n                    description: The access Token\n        '400':\n          description: Bad request. roomId or personId must be a properly formatted string.\n        '401':\n          description: Authorization information is missing or invalid.\n        '404':\n          description: The user referred to by the personId and roomId cannot be found.\n        '5XX':\n          description: Unexpected error.\n\ncomponents:\n  schemas:\n    License:\n      type: \"array\"\n      items:\n        type: \"object\"\n        properties:\n          accountName:\n            type: \"string\"\n          accountDomain:\n            type: \"string\"\n          accountStatus:\n            type: \"string\"\n          accountType:\n            type: \"string\"\n          roles:\n            type: \"array\"\n            items:\n              type: \"object\"\n              properties:\n                role:\n                  type: \"string\"\n                virtualAccount:\n                  type: \"string\"\n                licenses:\n                  type: \"array\"\n                  items:\n                    type: \"object\"\n                    properties:\n                      license:\n                        type: \"string\"\n                      virtualAccount:\n                        type: \"string\"\n                      quantity:\n                        type: \"integer\"\n                      inUse:\n                        type: \"integer\"\n                      available:\n                        type: \"integer\"\n                      status:\n                        type: \"string\"\n                      billingType:\n                        type: \"string\"\n                      ahaApps:\n                        type: \"boolean\"\n                      pendingQuantity:\n                        type: \"integer\"\n                      reserved:\n                        type: \"integer\"\n                      isPortable:\n                        type: \"boolean\"\n                      licenseDetails:\n                        $ref: \"#/components/schemas/licenseDetails\"\n                      licenseSubstitutions:\n                        type: \"array\"\n    licenseDetails:\n      type: \"array\"\n      items:\n        type: \"object\"\n        properties:\n          licenseType:\n            type: \"string\"\n            nullable: true\n          quantity:\n            type: \"integer\"\n          startDate:\n            type: \"string\"\n            nullable: true\n          endDate:\n            type: \"string\"\n            nullable: true\n          subscriptionId:\n            type: \"string\"\n            nullable: true\n          status:\n            type: \"string\"\n\n\n"
		}
	},
	"Error": "make ir: path \"/userinfo/access-token\": get: responses: parse response status code: strconv.Atoi: parsing \"5XX\": invalid syntax"
}