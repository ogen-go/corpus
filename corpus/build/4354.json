{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "APIs/amazonaws.com/iot1click-projects/2018-05-14/openapi.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  version: '2018-05-14'\n  x-release: v4\n  title: AWS IoT 1-Click Projects Service\n  description: The AWS IoT 1-Click Projects API Reference\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: iot1click-projects\n  x-aws-signingName: iot1click\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iot1click-projects-2018-05-14.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/iot1click/'\nservers:\n  - url: 'http://projects.iot1click.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AWS IoT 1-Click Projects multi-region endpoint\n  - url: 'https://projects.iot1click.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AWS IoT 1-Click Projects multi-region endpoint\n  - url: 'http://projects.iot1click.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS IoT 1-Click Projects endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://projects.iot1click.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS IoT 1-Click Projects endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  '/projects/{projectName}/placements/{placementName}/devices/{deviceTemplateName}':\n    put:\n      operationId: AssociateDeviceWithPlacement\n      description: Associates a physical device with a placement.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AssociateDeviceWithPlacementResponse'\n        '480':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: ResourceConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceConflictException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: projectName\n          in: path\n          required: true\n          description: The name of the project containing the placement in which to associate the device.\n          schema:\n            type: string\n            pattern: '^[0-9A-Za-z_-]+$'\n            minLength: 1\n            maxLength: 128\n        - name: placementName\n          in: path\n          required: true\n          description: The name of the placement in which to associate the device.\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9_-]+$'\n            minLength: 1\n            maxLength: 128\n        - name: deviceTemplateName\n          in: path\n          required: true\n          description: The device template name to associate with the device ID.\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9_-]+$'\n            minLength: 1\n            maxLength: 128\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - deviceId\n              properties:\n                deviceId:\n                  description: The ID of the physical device to be associated with the given placement in the project. Note that a mandatory 4 character prefix is required for all \u003ccode\u003edeviceId\u003c/code\u003e values.\n                  type: string\n                  minLength: 1\n                  maxLength: 32\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    delete:\n      operationId: DisassociateDeviceFromPlacement\n      description: Removes a physical device from a placement.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DisassociateDeviceFromPlacementResponse'\n        '480':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: projectName\n          in: path\n          required: true\n          description: The name of the project that contains the placement.\n          schema:\n            type: string\n            pattern: '^[0-9A-Za-z_-]+$'\n            minLength: 1\n            maxLength: 128\n        - name: placementName\n          in: path\n          required: true\n          description: The name of the placement that the device should be removed from.\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9_-]+$'\n            minLength: 1\n            maxLength: 128\n        - name: deviceTemplateName\n          in: path\n          required: true\n          description: The device ID that should be removed from the placement.\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9_-]+$'\n            minLength: 1\n            maxLength: 128\n  '/projects/{projectName}/placements':\n    post:\n      operationId: CreatePlacement\n      description: Creates an empty placement.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreatePlacementResponse'\n        '480':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: ResourceConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceConflictException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: projectName\n          in: path\n          required: true\n          description: The name of the project in which to create the placement.\n          schema:\n            type: string\n            pattern: '^[0-9A-Za-z_-]+$'\n            minLength: 1\n            maxLength: 128\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - placementName\n              properties:\n                placementName:\n                  description: The name of the placement to be created.\n                  type: string\n                  pattern: '^[a-zA-Z0-9_-]+$'\n                  minLength: 1\n                  maxLength: 128\n                attributes:\n                  description: Optional user-defined key/value pairs providing contextual data (such as location or function) for the placement.\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/AttributeValue'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListPlacements\n      description: Lists the placement(s) of a project.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListPlacementsResponse'\n        '480':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: projectName\n          in: path\n          required: true\n          description: The project containing the placements to be listed.\n          schema:\n            type: string\n            pattern: '^[0-9A-Za-z_-]+$'\n            minLength: 1\n            maxLength: 128\n        - name: nextToken\n          in: query\n          required: false\n          description: The token to retrieve the next set of results.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 1024\n        - name: maxResults\n          in: query\n          required: false\n          description: 'The maximum number of results to return per request. If not set, a default value of 100 is used.'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 250\n  /projects:\n    post:\n      operationId: CreateProject\n      description: Creates an empty project with a placement template. A project contains zero or more placements that adhere to the placement template defined in the project.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateProjectResponse'\n        '480':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: ResourceConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceConflictException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - projectName\n              properties:\n                projectName:\n                  description: The name of the project to create.\n                  type: string\n                  pattern: '^[0-9A-Za-z_-]+$'\n                  minLength: 1\n                  maxLength: 128\n                description:\n                  description: An optional description for the project.\n                  type: string\n                  minLength: 0\n                  maxLength: 500\n                placementTemplate:\n                  description: An object defining the template for a placement.\n                  type: object\n                  properties:\n                    defaultAttributes:\n                      allOf:\n                        - $ref: '#/components/schemas/DefaultPlacementAttributeMap'\n                        - description: The default attributes (key/value pairs) to be applied to all placements using this template.\n                    deviceTemplates:\n                      allOf:\n                        - $ref: '#/components/schemas/DeviceTemplateMap'\n                        - description: An object specifying the \u003ca\u003eDeviceTemplate\u003c/a\u003e for all placements using this (\u003ca\u003ePlacementTemplate\u003c/a\u003e) template.\n                tags:\n                  description: 'Optional tags (metadata key/value pairs) to be associated with the project. For example, \u003ccode\u003e{ {\"key1\": \"value1\", \"key2\": \"value2\"} }\u003c/code\u003e. For more information, see \u003ca href=\"https://aws.amazon.com/answers/account-management/aws-tagging-strategies/\"\u003eAWS Tagging Strategies\u003c/a\u003e.'\n                  type: object\n                  minProperties: 1\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListProjects\n      description: Lists the AWS IoT 1-Click project(s) associated with your AWS account and region.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListProjectsResponse'\n        '480':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n      parameters:\n        - name: nextToken\n          in: query\n          required: false\n          description: The token to retrieve the next set of results.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 1024\n        - name: maxResults\n          in: query\n          required: false\n          description: 'The maximum number of results to return per request. If not set, a default value of 100 is used.'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 250\n  '/projects/{projectName}/placements/{placementName}':\n    delete:\n      operationId: DeletePlacement\n      description: '\u003cp\u003eDeletes a placement. To delete a placement, it must not have any devices associated with it.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eWhen you delete a placement, all associated data becomes irretrievable.\u003c/p\u003e \u003c/note\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeletePlacementResponse'\n        '480':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: placementName\n          in: path\n          required: true\n          description: The name of the empty placement to delete.\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9_-]+$'\n            minLength: 1\n            maxLength: 128\n        - name: projectName\n          in: path\n          required: true\n          description: The project containing the empty placement to delete.\n          schema:\n            type: string\n            pattern: '^[0-9A-Za-z_-]+$'\n            minLength: 1\n            maxLength: 128\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: DescribePlacement\n      description: Describes a placement in a project.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribePlacementResponse'\n        '480':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: placementName\n          in: path\n          required: true\n          description: The name of the placement within a project.\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9_-]+$'\n            minLength: 1\n            maxLength: 128\n        - name: projectName\n          in: path\n          required: true\n          description: The project containing the placement to be described.\n          schema:\n            type: string\n            pattern: '^[0-9A-Za-z_-]+$'\n            minLength: 1\n            maxLength: 128\n    put:\n      operationId: UpdatePlacement\n      description: 'Updates a placement with the given attributes. To clear an attribute, pass an empty value (i.e., \"\").'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdatePlacementResponse'\n        '480':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: placementName\n          in: path\n          required: true\n          description: The name of the placement to update.\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9_-]+$'\n            minLength: 1\n            maxLength: 128\n        - name: projectName\n          in: path\n          required: true\n          description: The name of the project containing the placement to be updated.\n          schema:\n            type: string\n            pattern: '^[0-9A-Za-z_-]+$'\n            minLength: 1\n            maxLength: 128\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                attributes:\n                  description: The user-defined object of attributes used to update the placement. The maximum number of key/value pairs is 50.\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/AttributeValue'\n  '/projects/{projectName}':\n    delete:\n      operationId: DeleteProject\n      description: '\u003cp\u003eDeletes a project. To delete a project, it must not have any placements associated with it.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eWhen you delete a project, all associated data becomes irretrievable.\u003c/p\u003e \u003c/note\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteProjectResponse'\n        '480':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: projectName\n          in: path\n          required: true\n          description: The name of the empty project to delete.\n          schema:\n            type: string\n            pattern: '^[0-9A-Za-z_-]+$'\n            minLength: 1\n            maxLength: 128\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: DescribeProject\n      description: Returns an object describing a project.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeProjectResponse'\n        '480':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: projectName\n          in: path\n          required: true\n          description: The name of the project to be described.\n          schema:\n            type: string\n            pattern: '^[0-9A-Za-z_-]+$'\n            minLength: 1\n            maxLength: 128\n    put:\n      operationId: UpdateProject\n      description: 'Updates a project associated with your AWS account and region. With the exception of device template names, you can pass just the values that need to be updated because the update request will change only the values that are provided. To clear a value, pass the empty string (i.e., \u003ccode\u003e\"\"\u003c/code\u003e).'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateProjectResponse'\n        '480':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: projectName\n          in: path\n          required: true\n          description: The name of the project to be updated.\n          schema:\n            type: string\n            pattern: '^[0-9A-Za-z_-]+$'\n            minLength: 1\n            maxLength: 128\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                description:\n                  description: An optional user-defined description for the project.\n                  type: string\n                  minLength: 0\n                  maxLength: 500\n                placementTemplate:\n                  description: An object defining the template for a placement.\n                  type: object\n                  properties:\n                    defaultAttributes:\n                      allOf:\n                        - $ref: '#/components/schemas/DefaultPlacementAttributeMap'\n                        - description: The default attributes (key/value pairs) to be applied to all placements using this template.\n                    deviceTemplates:\n                      allOf:\n                        - $ref: '#/components/schemas/DeviceTemplateMap'\n                        - description: An object specifying the \u003ca\u003eDeviceTemplate\u003c/a\u003e for all placements using this (\u003ca\u003ePlacementTemplate\u003c/a\u003e) template.\n  '/projects/{projectName}/placements/{placementName}/devices':\n    get:\n      operationId: GetDevicesInPlacement\n      description: Returns an object enumerating the devices in a placement.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDevicesInPlacementResponse'\n        '480':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: projectName\n          in: path\n          required: true\n          description: The name of the project containing the placement.\n          schema:\n            type: string\n            pattern: '^[0-9A-Za-z_-]+$'\n            minLength: 1\n            maxLength: 128\n        - name: placementName\n          in: path\n          required: true\n          description: The name of the placement to get the devices from.\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9_-]+$'\n            minLength: 1\n            maxLength: 128\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{resourceArn}':\n    get:\n      operationId: ListTagsForResource\n      description: Lists the tags (metadata key/value pairs) which you have assigned to the resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsForResourceResponse'\n        '480':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The ARN of the resource whose tags you want to list.\n          schema:\n            type: string\n            pattern: '^arn:aws:iot1click:[A-Za-z0-9_/.-]{0,63}:\\d+:projects/[0-9A-Za-z_-]{1,128}$'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: TagResource\n      description: 'Creates or modifies tags for a resource. Tags are key/value pairs (metadata) that can be used to manage a resource. For more information, see \u003ca href=\"https://aws.amazon.com/answers/account-management/aws-tagging-strategies/\"\u003eAWS Tagging Strategies\u003c/a\u003e.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagResourceResponse'\n        '480':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The ARN of the resouce for which tag(s) should be added or modified.\n          schema:\n            type: string\n            pattern: '^arn:aws:iot1click:[A-Za-z0-9_/.-]{0,63}:\\d+:projects/[0-9A-Za-z_-]{1,128}$'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - tags\n              properties:\n                tags:\n                  description: 'The new or modifying tag(s) for the resource. See \u003ca href=\"https://docs.aws.amazon.com/iot-1-click/latest/developerguide/1click-appendix.html#1click-limits\"\u003eAWS IoT 1-Click Service Limits\u003c/a\u003e for the maximum number of tags allowed per resource.'\n                  type: object\n                  minProperties: 1\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n  '/tags/{resourceArn}#tagKeys':\n    delete:\n      operationId: UntagResource\n      description: Removes one or more tags (metadata key/value pairs) from a resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UntagResourceResponse'\n        '480':\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalFailureException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The ARN of the resource whose tag you want to remove.\n          schema:\n            type: string\n            pattern: '^arn:aws:iot1click:[A-Za-z0-9_/.-]{0,63}:\\d+:projects/[0-9A-Za-z_-]{1,128}$'\n        - name: tagKeys\n          in: query\n          required: true\n          description: The keys of those tags which you want to remove.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/TagKey'\n            minItems: 1\n            maxItems: 50\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    AssociateDeviceWithPlacementResponse:\n      type: object\n      properties: {}\n    InternalFailureException: {}\n    InvalidRequestException: {}\n    ResourceConflictException: {}\n    ResourceNotFoundException: {}\n    CreatePlacementResponse:\n      type: object\n      properties: {}\n    AttributeValue:\n      type: string\n      maxLength: 800\n    CreateProjectResponse:\n      type: object\n      properties: {}\n    DefaultPlacementAttributeMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/AttributeDefaultValue'\n    DeviceTemplateMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/DeviceTemplate'\n    TagValue:\n      type: string\n      maxLength: 256\n    DeletePlacementResponse:\n      type: object\n      properties: {}\n    TooManyRequestsException: {}\n    DeleteProjectResponse:\n      type: object\n      properties: {}\n    DescribePlacementResponse:\n      type: object\n      required:\n        - placement\n      properties:\n        placement:\n          allOf:\n            - $ref: '#/components/schemas/PlacementDescription'\n            - description: An object describing the placement.\n    DescribeProjectResponse:\n      type: object\n      required:\n        - project\n      properties:\n        project:\n          allOf:\n            - $ref: '#/components/schemas/ProjectDescription'\n            - description: An object describing the project.\n    DisassociateDeviceFromPlacementResponse:\n      type: object\n      properties: {}\n    GetDevicesInPlacementResponse:\n      type: object\n      required:\n        - devices\n      properties:\n        devices:\n          allOf:\n            - $ref: '#/components/schemas/DeviceMap'\n            - description: An object containing the devices (zero or more) within the placement.\n    ListPlacementsResponse:\n      type: object\n      required:\n        - placements\n      properties:\n        placements:\n          allOf:\n            - $ref: '#/components/schemas/PlacementSummaryList'\n            - description: An object listing the requested placements.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: The token used to retrieve the next set of results - will be effectively empty if there are no further results.\n    ListProjectsResponse:\n      type: object\n      required:\n        - projects\n      properties:\n        projects:\n          allOf:\n            - $ref: '#/components/schemas/ProjectSummaryList'\n            - description: An object containing the list of projects.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: The token used to retrieve the next set of results - will be effectively empty if there are no further results.\n    ListTagsForResourceResponse:\n      type: object\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags (metadata key/value pairs) which you have assigned to the resource.\n    TagResourceResponse:\n      type: object\n      properties: {}\n    UntagResourceResponse:\n      type: object\n      properties: {}\n    TagKey:\n      type: string\n      pattern: '^(?!aws:)[a-zA-Z+-=._:/]+$'\n      minLength: 1\n      maxLength: 128\n    UpdatePlacementResponse:\n      type: object\n      properties: {}\n    UpdateProjectResponse:\n      type: object\n      properties: {}\n    ProjectName:\n      type: string\n      pattern: '^[0-9A-Za-z_-]+$'\n      minLength: 1\n      maxLength: 128\n    PlacementName:\n      type: string\n      pattern: '^[a-zA-Z0-9_-]+$'\n      minLength: 1\n      maxLength: 128\n    DeviceId:\n      type: string\n      minLength: 1\n      maxLength: 32\n    DeviceTemplateName:\n      type: string\n      pattern: '^[a-zA-Z0-9_-]+$'\n      minLength: 1\n      maxLength: 128\n    AssociateDeviceWithPlacementRequest:\n      type: object\n      required:\n        - deviceId\n      title: AssociateDeviceWithPlacementRequest\n      properties:\n        deviceId:\n          allOf:\n            - $ref: '#/components/schemas/DeviceId'\n            - description: The ID of the physical device to be associated with the given placement in the project. Note that a mandatory 4 character prefix is required for all \u003ccode\u003edeviceId\u003c/code\u003e values.\n    AttributeDefaultValue:\n      type: string\n      maxLength: 800\n    AttributeName:\n      type: string\n      minLength: 1\n      maxLength: 128\n    PlacementAttributeMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/AttributeValue'\n    CreatePlacementRequest:\n      type: object\n      required:\n        - placementName\n      title: CreatePlacementRequest\n      properties:\n        placementName:\n          allOf:\n            - $ref: '#/components/schemas/PlacementName'\n            - description: The name of the placement to be created.\n        attributes:\n          allOf:\n            - $ref: '#/components/schemas/PlacementAttributeMap'\n            - description: Optional user-defined key/value pairs providing contextual data (such as location or function) for the placement.\n    Description:\n      type: string\n      minLength: 0\n      maxLength: 500\n    PlacementTemplate:\n      type: object\n      properties:\n        defaultAttributes:\n          allOf:\n            - $ref: '#/components/schemas/DefaultPlacementAttributeMap'\n            - description: The default attributes (key/value pairs) to be applied to all placements using this template.\n        deviceTemplates:\n          allOf:\n            - $ref: '#/components/schemas/DeviceTemplateMap'\n            - description: An object specifying the \u003ca\u003eDeviceTemplate\u003c/a\u003e for all placements using this (\u003ca\u003ePlacementTemplate\u003c/a\u003e) template.\n      description: An object defining the template for a placement.\n    TagMap:\n      type: object\n      minProperties: 1\n      maxProperties: 50\n      additionalProperties:\n        $ref: '#/components/schemas/TagValue'\n    CreateProjectRequest:\n      type: object\n      required:\n        - projectName\n      title: CreateProjectRequest\n      properties:\n        projectName:\n          allOf:\n            - $ref: '#/components/schemas/ProjectName'\n            - description: The name of the project to create.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: An optional description for the project.\n        placementTemplate:\n          allOf:\n            - $ref: '#/components/schemas/PlacementTemplate'\n            - description: 'The schema defining the placement to be created. A placement template defines placement default attributes and device templates. You cannot add or remove device templates after the project has been created. However, you can update \u003ccode\u003ecallbackOverrides\u003c/code\u003e for the device templates using the \u003ccode\u003eUpdateProject\u003c/code\u003e API.'\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: 'Optional tags (metadata key/value pairs) to be associated with the project. For example, \u003ccode\u003e{ {\"key1\": \"value1\", \"key2\": \"value2\"} }\u003c/code\u003e. For more information, see \u003ca href=\"https://aws.amazon.com/answers/account-management/aws-tagging-strategies/\"\u003eAWS Tagging Strategies\u003c/a\u003e.'\n    DeletePlacementRequest:\n      type: object\n      title: DeletePlacementRequest\n      properties: {}\n    DeleteProjectRequest:\n      type: object\n      title: DeleteProjectRequest\n      properties: {}\n    DescribePlacementRequest:\n      type: object\n      title: DescribePlacementRequest\n      properties: {}\n    PlacementDescription:\n      type: object\n      required:\n        - projectName\n        - placementName\n        - attributes\n        - createdDate\n        - updatedDate\n      properties:\n        projectName:\n          allOf:\n            - $ref: '#/components/schemas/ProjectName'\n            - description: The name of the project containing the placement.\n        placementName:\n          allOf:\n            - $ref: '#/components/schemas/PlacementName'\n            - description: The name of the placement.\n        attributes:\n          allOf:\n            - $ref: '#/components/schemas/PlacementAttributeMap'\n            - description: The user-defined attributes associated with the placement.\n        createdDate:\n          allOf:\n            - $ref: '#/components/schemas/Time'\n            - description: 'The date when the placement was initially created, in UNIX epoch time format.'\n        updatedDate:\n          allOf:\n            - $ref: '#/components/schemas/Time'\n            - description: 'The date when the placement was last updated, in UNIX epoch time format. If the placement was not updated, then \u003ccode\u003ecreatedDate\u003c/code\u003e and \u003ccode\u003eupdatedDate\u003c/code\u003e are the same.'\n      description: An object describing a project's placement.\n    DescribeProjectRequest:\n      type: object\n      title: DescribeProjectRequest\n      properties: {}\n    ProjectDescription:\n      type: object\n      required:\n        - projectName\n        - createdDate\n        - updatedDate\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/ProjectArn'\n            - description: The ARN of the project.\n        projectName:\n          allOf:\n            - $ref: '#/components/schemas/ProjectName'\n            - description: The name of the project for which to obtain information from.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the project.\n        createdDate:\n          allOf:\n            - $ref: '#/components/schemas/Time'\n            - description: 'The date when the project was originally created, in UNIX epoch time format.'\n        updatedDate:\n          allOf:\n            - $ref: '#/components/schemas/Time'\n            - description: 'The date when the project was last updated, in UNIX epoch time format. If the project was not updated, then \u003ccode\u003ecreatedDate\u003c/code\u003e and \u003ccode\u003eupdatedDate\u003c/code\u003e are the same.'\n        placementTemplate:\n          allOf:\n            - $ref: '#/components/schemas/PlacementTemplate'\n            - description: An object describing the project's placement specifications.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags (metadata key/value pairs) associated with the project.\n      description: An object providing detailed information for a particular project associated with an AWS account and region.\n    DeviceCallbackKey:\n      type: string\n      minLength: 1\n      maxLength: 128\n    DeviceCallbackValue:\n      type: string\n      maxLength: 200\n    DeviceCallbackOverrideMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/DeviceCallbackValue'\n    DeviceMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/DeviceId'\n    DeviceType:\n      type: string\n      maxLength: 128\n    DeviceTemplate:\n      type: object\n      properties:\n        deviceType:\n          allOf:\n            - $ref: '#/components/schemas/DeviceType'\n            - description: 'The device type, which currently must be \u003ccode\u003e\"button\"\u003c/code\u003e.'\n        callbackOverrides:\n          allOf:\n            - $ref: '#/components/schemas/DeviceCallbackOverrideMap'\n            - description: An optional Lambda function to invoke instead of the default Lambda function provided by the placement template.\n      description: An object representing a device for a placement template (see \u003ca\u003ePlacementTemplate\u003c/a\u003e).\n    DisassociateDeviceFromPlacementRequest:\n      type: object\n      title: DisassociateDeviceFromPlacementRequest\n      properties: {}\n    GetDevicesInPlacementRequest:\n      type: object\n      title: GetDevicesInPlacementRequest\n      properties: {}\n    NextToken:\n      type: string\n      minLength: 1\n      maxLength: 1024\n    MaxResults:\n      type: integer\n      minimum: 1\n      maximum: 250\n    ListPlacementsRequest:\n      type: object\n      title: ListPlacementsRequest\n      properties: {}\n    PlacementSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/PlacementSummary'\n    ListProjectsRequest:\n      type: object\n      title: ListProjectsRequest\n      properties: {}\n    ProjectSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ProjectSummary'\n    ProjectArn:\n      type: string\n      pattern: '^arn:aws:iot1click:[A-Za-z0-9_/.-]{0,63}:\\d+:projects/[0-9A-Za-z_-]{1,128}$'\n    ListTagsForResourceRequest:\n      type: object\n      title: ListTagsForResourceRequest\n      properties: {}\n    Time:\n      type: string\n      format: date-time\n    PlacementSummary:\n      type: object\n      required:\n        - projectName\n        - placementName\n        - createdDate\n        - updatedDate\n      properties:\n        projectName:\n          allOf:\n            - $ref: '#/components/schemas/ProjectName'\n            - description: The name of the project containing the placement.\n        placementName:\n          allOf:\n            - $ref: '#/components/schemas/PlacementName'\n            - description: The name of the placement being summarized.\n        createdDate:\n          allOf:\n            - $ref: '#/components/schemas/Time'\n            - description: 'The date when the placement was originally created, in UNIX epoch time format.'\n        updatedDate:\n          allOf:\n            - $ref: '#/components/schemas/Time'\n            - description: 'The date when the placement was last updated, in UNIX epoch time format. If the placement was not updated, then \u003ccode\u003ecreatedDate\u003c/code\u003e and \u003ccode\u003eupdatedDate\u003c/code\u003e are the same.'\n      description: An object providing summary information for a particular placement.\n    ProjectSummary:\n      type: object\n      required:\n        - projectName\n        - createdDate\n        - updatedDate\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/ProjectArn'\n            - description: The ARN of the project.\n        projectName:\n          allOf:\n            - $ref: '#/components/schemas/ProjectName'\n            - description: The name of the project being summarized.\n        createdDate:\n          allOf:\n            - $ref: '#/components/schemas/Time'\n            - description: 'The date when the project was originally created, in UNIX epoch time format.'\n        updatedDate:\n          allOf:\n            - $ref: '#/components/schemas/Time'\n            - description: 'The date when the project was last updated, in UNIX epoch time format. If the project was not updated, then \u003ccode\u003ecreatedDate\u003c/code\u003e and \u003ccode\u003eupdatedDate\u003c/code\u003e are the same.'\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags (metadata key/value pairs) associated with the project.\n      description: An object providing summary information for a particular project for an associated AWS account and region.\n    TagKeyList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TagKey'\n      minItems: 1\n      maxItems: 50\n    TagResourceRequest:\n      type: object\n      required:\n        - tags\n      title: TagResourceRequest\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: 'The new or modifying tag(s) for the resource. See \u003ca href=\"https://docs.aws.amazon.com/iot-1-click/latest/developerguide/1click-appendix.html#1click-limits\"\u003eAWS IoT 1-Click Service Limits\u003c/a\u003e for the maximum number of tags allowed per resource.'\n    UntagResourceRequest:\n      type: object\n      title: UntagResourceRequest\n      properties: {}\n    UpdatePlacementRequest:\n      type: object\n      title: UpdatePlacementRequest\n      properties:\n        attributes:\n          allOf:\n            - $ref: '#/components/schemas/PlacementAttributeMap'\n            - description: The user-defined object of attributes used to update the placement. The maximum number of key/value pairs is 50.\n    UpdateProjectRequest:\n      type: object\n      title: UpdateProjectRequest\n      properties:\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: An optional user-defined description for the project.\n        placementTemplate:\n          allOf:\n            - $ref: '#/components/schemas/PlacementTemplate'\n            - description: 'An object defining the project update. Once a project has been created, you cannot add device template names to the project. However, for a given \u003ccode\u003eplacementTemplate\u003c/code\u003e, you can update the associated \u003ccode\u003ecallbackOverrides\u003c/code\u003e for the device definition using this API.'\nsecurity:\n  - hmac: []\n"
		}
	},
	"Error": "parse: paths: /tags/{resourceArn}: get: ListTagsForResource: responses: 480: unknown status code: 480"
}