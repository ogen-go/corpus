{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/DataBiosphere/terra-workspace-manager"
		},
		"file": {
			"name": "service_openapi.yaml",
			"path": "service/src/main/resources/api/service_openapi.yaml",
			"content": "# DEVELOPER NOTES\n#\n# There are three sections of the file bracketed with ## ## that are deprecated. They are the\n# data references interface that we abandoned in favor of the unified resources interface.\n#\n# CLOUD RESOURCE STRUCTURE\n# Each cloud resource has a structure named '{cloud}{resource-type}Resource';\n# for example, GcpGcsBucketResource. It has two properties: 'metadata' and 'attributes'\n#\n# The 'metadata' property is a reference to the common metadata structure for all resource types:\n#  $ref: '#/components/schemas/ResourceMetadata'\n# Metadata includes both the common data for all resources and an optional structure for\n# properties of controlled resources.\n#\n# The 'attributes' property is a reference to a unique structure named '{resource-type}Attributes';\n# for example, GcpGcsBucketAttributes. Attributes are specific to the cloud resource so may\n# be a complex structure.\n#\n# The resource structure should be used as the common form of return in the CRUD operations on\n# the object. Well, the CRU ones anyway...\n#\n# ENUMERATION STRUCTURE\n# Resource enumeration returns ResourceList - a list of ResourceDescription. Each description\n# provides the common metadata, as described above and then a union structure with an entry\n# for the metadata for each cloud resource type. It is a bit clumsy, but provides complete\n# description for a resource.\n#\n\nopenapi: 3.0.3\ninfo:\n  title: Workspace Manager API\n  description: Workspace Manager REST API to manage workspaces.\n  version: 0.0.1\n\npaths:\n  # Unauthenticated Paths\n  /status:\n    get:\n      security: []\n      summary: Returns the operational status of the service\n      operationId: serviceStatus\n      tags: [Unauthenticated]\n      responses:\n        '200':\n          description: Service can process requests\n        '500':\n          description: |\n            Service cannot process requests. That might be because dependent services are\n            unavailable, or because there is a problem with the service itself.\n  /version:\n    get:\n      security: []\n      summary: Returns the deployed version of the service\n      operationId: serviceVersion\n      tags: [Unauthenticated]\n      responses:\n        '200':\n          description: System version response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SystemVersion'\n\n  # Workspace paths\n  /api/workspaces/v1:\n    post:\n      summary: Create a new Workspace.\n      operationId: createWorkspace\n      tags: [Workspace]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateWorkspaceRequestBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/CreatedWorkspaceResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '500':\n          $ref: '#/components/responses/NotFound'\n    get:\n      parameters:\n        - $ref: '#/components/parameters/Offset'\n        - $ref: '#/components/parameters/Limit'\n      summary: List all workspaces a user can read.\n      operationId: listWorkspaces\n      tags: [ Workspace ]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkspaceDescriptionList'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n    get:\n      summary: Get an existing Workspace.\n      operationId: getWorkspace\n      tags: [Workspace]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkspaceDescription'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    patch:\n      summary: Update an existing Workspace.\n      operationId: updateWorkspace\n      tags: [Workspace]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateWorkspaceRequestBody'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkspaceDescription'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    delete:\n      summary: Delete a Workspace.\n      operationId: deleteWorkspace\n      tags: [Workspace]\n      responses:\n        '204':\n          description: Success\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/applications:\n    get:\n      parameters:\n        - $ref: '#/components/parameters/WorkspaceId'\n        - $ref: '#/components/parameters/Offset'\n        - $ref: '#/components/parameters/Limit'\n      summary: List all applications and whether they are enabled on a workspace\n      operationId: listWorkspaceApplications\n      tags: [WorkspaceApplication]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkspaceApplicationDescriptionList'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/applications/{applicationId}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/ApplicationId'\n    get:\n      summary: Get an application and its state in this workspace\n      operationId: getWorkspaceApplication\n      tags: [WorkspaceApplication]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkspaceApplicationDescription'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/applications/{applicationId}/disable:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/ApplicationId'\n    post:\n      summary: Disable an application in a workspace\n      operationId: disableWorkspaceApplication\n      tags: [WorkspaceApplication]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkspaceApplicationDescription'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/applications/{applicationId}/enable:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/ApplicationId'\n    post:\n      summary: Enable an application in a workspace\n      operationId: enableWorkspaceApplication\n      tags: [WorkspaceApplication]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkspaceApplicationDescription'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/clone:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n    post:\n      summary: Clone a workspace and its eligible resources\n      operationId: cloneWorkspace\n      tags: [Workspace]\n      requestBody:\n        description: Details of workspce clone operation\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CloneWorkspaceRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/CloneWorkspaceResponse'\n        '202':\n          $ref: '#/components/responses/CloneWorkspaceResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/clone-result/{jobId}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/JobId'\n    get:\n      summary: Retrieve information about a gcp bucket clone job.\n      operationId: getCloneWorkspaceResult\n      tags: [Workspace]\n      responses:\n        '200':\n          $ref: '#/components/responses/CloneWorkspaceResponse'\n        '202':\n          $ref: '#/components/responses/CloneWorkspaceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n\n  ## DEPRECATED PATHS ##\n  # TODO(PF-404): remove this in favor of reference-type specific objects.\n  /api/workspaces/v1/{workspaceId}/datareferences:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n    post:\n      deprecated: true\n      summary: (DEPRECATED) Create a new data reference in a workspace.\n      operationId: createDataReference\n      tags: [Workspace]\n      requestBody:\n        required: true\n        description: Stuff TBD\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateDataReferenceRequestBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/DataReferenceResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    get:\n      deprecated: true\n      summary: (DEPRECATED) Enumerate the data references in a workspace.\n      operationId: enumerateReferences\n      tags: [Workspace]\n      parameters:\n        - $ref: '#/components/parameters/Offset'\n        - $ref: '#/components/parameters/Limit'\n      responses:\n        '200':\n          $ref: '#/components/responses/ReferenceListResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  # TODO(PF-404): remove this in favor of reference-type specific objects.\n  /api/workspaces/v1/{workspaceId}/datareferences/{referenceId}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/ReferenceId'\n    get:\n      deprecated: true\n      summary: (DEPRECATED) Gets a data reference from a workspace.\n      operationId: getDataReference\n      tags: [Workspace]\n      responses:\n        '200':\n          $ref: '#/components/responses/DataReferenceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    patch:\n      deprecated: true\n      summary: (DEPRECATED) Update name or description of a data reference in a workspace.\n      operationId: updateDataReference\n      tags: [Workspace]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateDataReferenceRequestBody'\n      responses:\n        '204':\n          description: OK\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    delete:\n      deprecated: true\n      summary: (DEPRECATED) Deletes a data reference from a workspace.\n      operationId: deleteDataReference\n      tags: [Workspace]\n      responses:\n        '204':\n          description: OK\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  # TODO(PF-404): remove this in favor of reference-type specific objects.\n  /api/workspaces/v1/{workspaceId}/datareferences/{referenceType}/{name}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/ReferenceType'\n      - $ref: '#/components/parameters/Name'\n    get:\n      deprecated: true\n      summary: (DEPRECATED) Gets a data reference from a workspace by name and type.\n      operationId: getDataReferenceByName\n      tags: [Workspace]\n      responses:\n        '200':\n          $ref: '#/components/responses/DataReferenceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  ## END OF DEPRECATED PATHS ##\n\n  # TODO(zloery): This endpoint is exposed as a workaround to support the CLI's\n  # use of Nextflow. It will likely be removed in the future in favor of other\n  # cloud sync methods.\n  /api/workspaces/v1/{workspaceId}/gcp/enablepet:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n    post:\n      summary: Allow a user to impersonate their pet SA in a given workspace\n      description: |\n        This endpoint is exposed as a workaround to support calling Google\n        Pipelines API in a workspace. It will likely be removed in the future in\n        favor of other cloud sync methods.\n      operationId: enablePet\n      tags: [ Workspace ]\n      responses:\n        '204':\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/Offset'\n      - $ref: '#/components/parameters/Limit'\n      - $ref: '#/components/parameters/ResourceType'\n      - $ref: '#/components/parameters/StewardshipType'\n    get:\n      summary: |\n        Enumerate resources in a workspace. The visible resources depend on the permissions of the caller.\n        These are presented sorted by ascending resource name. The offset and limit parameters allow paging\n        through the results. You can also filter by a resource type and by a stewardship type.\n      operationId: enumerateResources\n      tags: [Resource]\n      responses:\n        '200':\n          $ref: '#/components/responses/EnumerateResourcesResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/referenced/{resourceId}/access:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/ResourceId'\n    get:\n      summary: Check a user's access to a referenced resource\n      operationId: checkReferenceAccess\n      tags: [Resource]\n      responses:\n        '200':\n          $ref: '#/components/responses/CheckReferenceAccessResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/referenced/datarepo/snapshots:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n    post:\n      summary: Create a new data repo snapshot reference in a workspace.\n      operationId: createDataRepoSnapshotReference\n      tags: [ReferencedGcpResource]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateDataRepoSnapshotReferenceRequestBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/DataRepoSnapshotReferenceResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/referenced/datarepo/snapshots/{resourceId}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/ResourceId'\n    get:\n      summary: Gets a reference to a snapshot from a workspace.\n      operationId: getDataRepoSnapshotReference\n      tags: [ReferencedGcpResource]\n      responses:\n        '200':\n          $ref: '#/components/responses/DataRepoSnapshotReferenceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    patch:\n      deprecated: true\n      summary: (DEPRECATED) Update name or description of a snapshot reference in a workspace.\n      operationId: updateDataRepoSnapshotReference\n      tags: [ReferencedGcpResource]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateDataReferenceRequestBody'\n      responses:\n        '204':\n          description: OK\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    post:\n      summary: Update name, description or referencing target of a snapshot reference in a workspace.\n      operationId: updateDataRepoSnapshotReferenceResource\n      tags: [ReferencedGcpResource]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateDataRepoSnapshotReferenceRequestBody'\n      responses:\n        '204':\n          description: OK\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    delete:\n      summary: Delete datarepo snapshot reference\n      operationId: deleteDataRepoSnapshotReference\n      tags: [ReferencedGcpResource]\n      responses:\n        '204':\n          description: OK\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /api/workspaces/v1/{workspaceId}/resources/referenced/datarepo/snapshots/{resourceId}/clone:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/ResourceId'\n    post:\n      summary: Clone a referenced Data Repo Snapshot resource\n      operationId: cloneGcpDataRepoSnapshotReference\n      tags: [ ReferencedGcpResource ]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CloneReferencedResourceRequestBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/CloneReferencedGcpDataRepoSnapshotResourceResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/referenced/datarepo/snapshots/name/{name}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/Name'\n    get:\n      summary: Gets a reference to a snapshot by name.\n      operationId: getDataRepoSnapshotReferenceByName\n      tags: [ReferencedGcpResource]\n      responses:\n        '200':\n          $ref: '#/components/responses/DataRepoSnapshotReferenceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bucket/objects:\n    parameters:\n    - $ref: '#/components/parameters/WorkspaceId'\n    post:\n      summary: Create a new GCS object reference in a workspace.\n      operationId: createGcsObjectReference\n      tags: [ReferencedGcpResource]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateGcpGcsObjectReferenceRequestBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/GcpGcsObjectReferenceResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bucket/objects/{resourceId}:\n    parameters:\n    - $ref: '#/components/parameters/WorkspaceId'\n    - $ref: '#/components/parameters/ResourceId'\n    get:\n      summary: Gets a reference to a GCS object from a workspace.\n      operationId: getGcsObjectReference\n      tags: [ReferencedGcpResource]\n      responses:\n        '200':\n          $ref: '#/components/responses/GcpGcsObjectReferenceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    patch:\n      deprecated: true\n      summary: (DEPRECATED) Update name or description of a bucket object reference in a workspace.\n      operationId: updateGcsObjectReference\n      tags: [ReferencedGcpResource]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateDataReferenceRequestBody'\n      responses:\n        '204':\n          description: OK\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    post:\n      summary: Update name, description or referencing target of a bucket object reference in a workspace.\n      operationId: updateBucketObjectReferenceResource\n      tags: [ ReferencedGcpResource ]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateGcsBucketObjectReferenceRequestBody'\n      responses:\n        '204':\n          description: OK\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    delete:\n      summary: Delete Gcp GCS object reference\n      operationId: deleteGcsObjectReference\n      tags: [ReferencedGcpResource]\n      responses:\n        '204':\n          description: OK\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bucket/objects/{resourceId}/clone:\n    parameters:\n    - $ref: '#/components/parameters/WorkspaceId'\n    - $ref: '#/components/parameters/ResourceId'\n    post:\n      summary: Clone a referenced GCS object resource\n      operationId: cloneGcpGcsObjectReference\n      tags: [ReferencedGcpResource]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CloneReferencedResourceRequestBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/CloneReferencedGcpGcsObjectResourceResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bucket/objects/name/{name}:\n    parameters:\n    - $ref: '#/components/parameters/WorkspaceId'\n    - $ref: '#/components/parameters/Name'\n    get:\n      summary: Gets a reference to a Gcp GCS object by name.\n      operationId: getGcsObjectReferenceByName\n      tags: [ReferencedGcpResource]\n      responses:\n        '200':\n          $ref: '#/components/responses/GcpGcsObjectReferenceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/buckets:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n    post:\n      summary: Create a new GCS bucket reference in a workspace.\n      operationId: createBucketReference\n      tags: [ReferencedGcpResource]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateGcpGcsBucketReferenceRequestBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/GcpGcsBucketReferenceResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/buckets/{resourceId}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/ResourceId'\n    get:\n      summary: Gets a reference to a bucket from a workspace.\n      operationId: getBucketReference\n      tags: [ReferencedGcpResource]\n      responses:\n        '200':\n          $ref: '#/components/responses/GcpGcsBucketReferenceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    patch:\n      deprecated: true\n      summary: (DEPRECATED) Update name or description of a bucket reference in a workspace.\n      operationId: updateBucketReference\n      tags: [ReferencedGcpResource]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateDataReferenceRequestBody'\n      responses:\n        '204':\n          description: OK\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    post:\n      summary: Update name, description or the referencing target of a bucket reference in a workspace\n      operationId: updateBucketReferenceResource\n      tags: [ReferencedGcpResource]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateGcsBucketReferenceRequestBody'\n      responses:\n        '204':\n          description: OK\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    delete:\n      summary: Delete Gcp bucket reference\n      operationId: deleteBucketReference\n      tags: [ReferencedGcpResource]\n      responses:\n        '204':\n          description: OK\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/buckets/{resourceId}/clone:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/ResourceId'\n    post:\n      summary: Clone a referenced GCS Bucket resource\n      operationId: cloneGcpGcsBucketReference\n      tags: [ReferencedGcpResource]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CloneReferencedResourceRequestBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/CloneReferencedGcpGcsBucketResourceResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/buckets/name/{name}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/Name'\n    get:\n      summary: Gets a reference to a Gcp bucket by name.\n      operationId: getBucketReferenceByName\n      tags: [ReferencedGcpResource]\n      responses:\n        '200':\n          $ref: '#/components/responses/GcpGcsBucketReferenceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bigquerydatatables:\n    parameters:\n    - $ref: '#/components/parameters/WorkspaceId'\n    post:\n      summary: Create a new BigQuery data table reference in a workspace.\n      operationId: createBigQueryDataTableReference\n      tags: [ ReferencedGcpResource ]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateGcpBigQueryDataTableReferenceRequestBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/GcpBigQueryDataTableReferenceResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bigquerydatatables/{resourceId}:\n    parameters:\n    - $ref: '#/components/parameters/WorkspaceId'\n    - $ref: '#/components/parameters/ResourceId'\n    get:\n      summary: Gets a reference to a BigQuery data table from a workspace.\n      operationId: getBigQueryDataTableReference\n      tags: [ ReferencedGcpResource ]\n      responses:\n        '200':\n          $ref: '#/components/responses/GcpBigQueryDataTableReferenceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    patch:\n      deprecated: true\n      summary: (DEPRECATED) Update name or description of a BigQuery data table reference in a workspace.\n      operationId: updateBigQueryDataTableReference\n      tags: [ ReferencedGcpResource ]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateDataReferenceRequestBody'\n      responses:\n        '204':\n          description: OK\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    post:\n      summary: Update name, description or referencing target of a BigQuery data table reference in a workspace.\n      operationId: updateBigQueryDataTableReferenceResource\n      tags: [ ReferencedGcpResource ]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateBigQueryDataTableReferenceRequestBody'\n      responses:\n        '204':\n          description: OK\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    delete:\n      summary: Delete BigQuery data table reference\n      operationId: deleteBigQueryDataTableReference\n      tags: [ ReferencedGcpResource ]\n      responses:\n        '204':\n          description: OK\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bigquerydatatables/{resourceId}/clone:\n    parameters:\n    - $ref: '#/components/parameters/WorkspaceId'\n    - $ref: '#/components/parameters/ResourceId'\n    post:\n      summary: Clone a BigQuery Data table\n      operationId: cloneGcpBigQueryDataTableReference\n      tags: [ ReferencedGcpResource ]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CloneReferencedResourceRequestBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/CloneReferencedGcpBigQueryDataTableResourceResponse'\n        '202':\n          $ref: '#/components/responses/CloneReferencedGcpBigQueryDataTableResourceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bigquerydatatables/name/{name}:\n    parameters:\n    - $ref: '#/components/parameters/WorkspaceId'\n    - $ref: '#/components/parameters/Name'\n    get:\n      summary: Gets a reference to a BigQuery data table by name.\n      operationId: getBigQueryDataTableReferenceByName\n      tags: [ ReferencedGcpResource ]\n      responses:\n        '200':\n          $ref: '#/components/responses/GcpBigQueryDataTableReferenceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bigquerydatasets:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n    post:\n      summary: Create a new BigQuery dataset reference in a workspace.\n      operationId: createBigQueryDatasetReference\n      tags: [ReferencedGcpResource]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateGcpBigQueryDatasetReferenceRequestBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/GcpBigQueryDatasetReferenceResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bigquerydatasets/{resourceId}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/ResourceId'\n    get:\n      summary: Gets a reference to a BigQuery dataset from a workspace.\n      operationId: getBigQueryDatasetReference\n      tags: [ReferencedGcpResource]\n      responses:\n        '200':\n          $ref: '#/components/responses/GcpBigQueryDatasetReferenceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    patch:\n      deprecated: true\n      summary: (DEPRECATED) Update name or description of a BigQuery dataset reference in a workspace.\n      operationId: updateBigQueryDatasetReference\n      tags: [ReferencedGcpResource]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateDataReferenceRequestBody'\n      responses:\n        '204':\n          description: OK\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    post:\n      summary: Update name, description or referencing target of a BigQuery dataset reference in a workspace.\n      operationId: updateBigQueryDatasetReferenceResource\n      tags: [ ReferencedGcpResource ]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateBigQueryDatasetReferenceRequestBody'\n      responses:\n        '204':\n          description: OK\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    delete:\n      summary: Delete BigQuery dataset reference\n      operationId: deleteBigQueryDatasetReference\n      tags: [ReferencedGcpResource]\n      responses:\n        '204':\n          description: OK\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bigquerydatasets/{resourceId}/clone:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/ResourceId'\n    post:\n      summary: Clone a BigQuery Dataset\n      operationId: cloneGcpBigQueryDatasetReference\n      tags: [ReferencedGcpResource]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CloneReferencedResourceRequestBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/CloneReferencedGcpBigQueryDatasetResourceResponse'\n        '202':\n          $ref: '#/components/responses/CloneReferencedGcpBigQueryDatasetResourceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bigquerydatasets/name/{name}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/Name'\n    get:\n      summary: Gets a reference to a BigQuery dataset by name.\n      operationId: getBigQueryDatasetReferenceByName\n      tags: [ReferencedGcpResource]\n      responses:\n        '200':\n          $ref: '#/components/responses/GcpBigQueryDatasetReferenceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /api/workspaces/v1/{workspaceId}/resources/referenced/gitrepos:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n    post:\n      summary: Create a new Git repository reference in a workspace.\n      operationId: createGitRepoReference\n      tags: [ ReferencedGcpResource ]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateGitRepoReferenceRequestBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/GitRepoReferenceResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /api/workspaces/v1/{workspaceId}/resources/referenced/gitrepos/{resourceId}:\n    parameters:\n    - $ref: '#/components/parameters/WorkspaceId'\n    - $ref: '#/components/parameters/ResourceId'\n    get:\n      summary: Gets a reference to a Git repository from a workspace.\n      operationId: getGitRepoReference\n      tags: [ ReferencedGcpResource ]\n      responses:\n        '200':\n          $ref: '#/components/responses/GitRepoReferenceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    patch:\n      summary: Update name, description or referencing target of a Git repository reference in a workspace.\n      operationId: updateGitRepoReference\n      tags: [ ReferencedGcpResource ]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateGitRepoReferenceRequestBody'\n      responses:\n        '204':\n          description: OK\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    delete:\n      summary: Delete Git repository reference\n      operationId: deleteGitRepoReference\n      tags: [ ReferencedGcpResource ]\n      responses:\n        '204':\n          description: OK\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /api/workspaces/v1/{workspaceId}/resources/referenced/gitrepos/{resourceId}/clone:\n    parameters:\n    - $ref: '#/components/parameters/WorkspaceId'\n    - $ref: '#/components/parameters/ResourceId'\n    post:\n      summary: Clone a Git repository\n      operationId: cloneGitRepoReference\n      tags: [ ReferencedGcpResource ]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CloneReferencedResourceRequestBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/CloneReferencedGitRepoResourceResponse'\n        '202':\n          $ref: '#/components/responses/CloneReferencedGitRepoResourceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /api/workspaces/v1/{workspaceId}/resources/referenced/gitrepos/name/{name}:\n    parameters:\n    - $ref: '#/components/parameters/WorkspaceId'\n    - $ref: '#/components/parameters/Name'\n    get:\n      summary: Gets a reference to a Git repo referenced resource by name\n      operationId: getGitRepoReferenceByName\n      tags: [ ReferencedGcpResource ]\n      responses:\n        '200':\n          $ref: '#/components/responses/GitRepoReferenceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /api/workspaces/v1/{workspaceId}/cloudcontexts:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n    post:\n      summary: Create a cloud context for the workspace.\n      operationId: createCloudContext\n      tags: [Workspace]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateCloudContextRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/CreateCloudContextResultResponse'\n        '202':\n          $ref: '#/components/responses/CreateCloudContextResultResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/cloudcontexts/result/{jobId}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/JobId'\n    get:\n      summary: Get the result of a async job to create a cloud context.\n      operationId: getCreateCloudContextResult\n      tags: [Workspace]\n      responses:\n        '200':\n          $ref: '#/components/responses/CreateCloudContextResultResponse'\n        '202':\n          $ref: '#/components/responses/CreateCloudContextResultResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '409':\n          $ref: '#/components/responses/Conflict'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/cloudcontexts/{cloudContext}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/CloudContext'\n    delete:\n      summary: Deletes a cloud context and all of its data from a workspace.\n      operationId: deleteCloudContext\n      tags: [Workspace]\n      responses:\n        '204':\n          description: OK\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/roles:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n    get:\n      summary: Read all IAM roles and their members in a workspace.\n      operationId: getRoles\n      tags: [Workspace]\n      responses:\n        '200':\n          $ref: '#/components/responses/RoleBindingListResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/roles/{role}/members:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/Role'\n    post:\n      summary: Grant an IAM role to a user or group.\n      operationId: grantRole\n      tags: [Workspace]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GrantRoleRequestBody'\n      responses:\n        '204':\n          description: Role granted successfully\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /api/workspaces/v1/{workspaceId}/roles/{role}/members/{memberEmail}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/Role'\n      - $ref: '#/components/parameters/MemberEmail'\n    delete:\n      summary: Remove an IAM role from a user or group.\n      operationId: removeRole\n      tags: [Workspace]\n      responses:\n        '204':\n          description: Role removed successfully\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n\n  /api/job/v1/jobs/{jobId}:\n    parameters:\n      - $ref: '#/components/parameters/JobId'\n    get:\n      tags:\n        - jobs\n      operationId: retrieveJob\n      responses:\n        200:\n          description: Job is complete (succeeded or failed)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobReport'\n        202:\n          description: Job is running\n          headers:\n            Retry-After:\n              description: \u003e-\n                optional - estimated seconds to wait before polling again. This allows\n                a server to offer a hint as to when the job might be complete.\n              schema:\n                type: integer\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobReport'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        403:\n          $ref: '#/components/responses/PermissionDenied'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/buckets:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n    post:\n      summary: Create a new controlled Gcp bucket\n      operationId: createBucket\n      tags: [ControlledGcpResource]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateControlledGcpGcsBucketRequestBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/CreatedControlledGcpGcsBucketResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/buckets/{resourceId}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/ResourceId'\n    get:\n      summary: Get a controlled GCS bucket resource\n      operationId: getBucket\n      tags: [ControlledGcpResource]\n      responses:\n        '200':\n          $ref: '#/components/responses/GetControlledGcpGcsBucketResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    patch:\n      summary: Update a controlled GCS Bucket resource.\n      operationId: updateGcsBucket\n      tags: [ ControlledGcpResource ]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateControlledGcpGcsBucketRequestBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/UpdateControlledGcpGcsBucketResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    post:\n      summary: |\n        Delete a controlled GCS bucket resource. This is async, because deleting the bucket and contents can\n        take a very long time. NOTE: this cannot be an HTTP DELETE, because something between generated code\n        and server behavior does not support delete operations with bodies. We require the body for the async\n        state, so this is a POST.\n      operationId: deleteBucket\n      tags: [ControlledGcpResource]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteControlledGcpGcsBucketRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteControlledGcpGcsBucketResponse'\n        '202':\n          $ref: '#/components/responses/DeleteControlledGcpGcsBucketResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/buckets/{resourceId}/clone:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/ResourceId'\n    post:\n      summary: Clone a GCS Bucket\n      operationId: cloneGcsBucket\n      tags: [ControlledGcpResource]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CloneControlledGcpGcsBucketRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/ClonedControlledGcpGcsBucketResponse'\n        '202':\n          $ref: '#/components/responses/ClonedControlledGcpGcsBucketResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/buckets/clone-result/{jobId}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/JobId'\n    get:\n      summary: Retrieve information about a gcp bucket clone job.\n      operationId: getCloneGcsBucketResult\n      tags: [ControlledGcpResource]\n      responses:\n        '200':\n          $ref: '#/components/responses/ClonedControlledGcpGcsBucketResponse'\n        '202':\n          $ref: '#/components/responses/ClonedControlledGcpGcsBucketResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/storage:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n    post:\n      summary: Create a new controlled Azure Storage Account\n      operationId: createAzureStorage\n      tags: [ControlledAzureResource]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateControlledAzureStorageRequestBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/CreateControlledAzureStorageResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/buckets/delete-result/{jobId}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/JobId'\n    get:\n      summary: Retrieve information about a gcp bucket deletion job.\n      operationId: getDeleteBucketResult\n      tags: [ControlledGcpResource]\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteControlledGcpGcsBucketResponse'\n        '202':\n          $ref: '#/components/responses/DeleteControlledGcpGcsBucketResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/ip:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n    post:\n      summary: Create a new controlled Azure IP\n      operationId: createAzureIp\n      tags: [ControlledAzureResource]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateControlledAzureIpRequestBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/CreateControlledAzureIpResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/ip/{resourceId}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/ResourceId'\n    get:\n      summary: Get a controlled Azure IP resource\n      operationId: getAzureIp\n      tags: [ControlledAzureResource]\n      responses:\n        '200':\n          $ref: '#/components/responses/GetControlledAzureIpResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    post:\n      summary: |\n        Delete an azure IP\n      operationId: deleteAzureIp\n      tags: [ControlledAzureResource]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteControlledAzureResourceRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'\n        '202':\n          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/ip/delete-result/{jobId}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/JobId'\n    get:\n      summary: Retrieve information about an azure ip deletion job.\n      operationId: getDeleteAzureIpResult\n      tags: [ControlledAzureResource]\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'\n        '202':\n          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/disks:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n    post:\n      summary: Create a new controlled Azure Disk\n      operationId: createAzureDisk\n      tags: [ ControlledAzureResource ]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateControlledAzureDiskRequestBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/CreateControlledAzureDiskResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/disks/{resourceId}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/ResourceId'\n    get:\n      summary: Get a controlled Azure Disk resource\n      operationId: getAzureDisk\n      tags: [ControlledAzureResource]\n      responses:\n        '200':\n          $ref: '#/components/responses/GetControlledAzureDiskResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    post:\n      summary: |\n        Delete an azure Disk\n      operationId: deleteAzureDisk\n      tags: [ControlledAzureResource]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteControlledAzureResourceRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'\n        '202':\n          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n\n  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/disks/delete-result/{jobId}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/JobId'\n    get:\n      summary: Retrieve information about an azure ip deletion job.\n      operationId: getDeleteAzureDiskResult\n      tags: [ControlledAzureResource]\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'\n        '202':\n          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/vm:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n    post:\n      summary: Create a new controlled Azure VM\n      operationId: createAzureVm\n      tags: [ControlledAzureResource]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateControlledAzureVmRequestBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/CreateControlledAzureVmResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/vm/create-result/{jobId}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/JobId'\n    get:\n      summary: Retrieve information about an Azure Vm create job.\n      operationId: getCreateAzureVmResult\n      tags: [ ControlledAzureResource ]\n      responses:\n        '200':\n          $ref: '#/components/responses/CreateControlledAzureVmResponse'\n        '202':\n          $ref: '#/components/responses/CreateControlledAzureVmResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/network:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n    post:\n      summary: Create a new controlled Azure Network\n      operationId: createAzureNetwork\n      tags: [ ControlledAzureResource ]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateControlledAzureNetworkRequestBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/CreateControlledAzureNetworkResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/vm/{resourceId}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/ResourceId'\n    get:\n      summary: Get a controlled Azure VM resource\n      operationId: getAzureVm\n      tags: [ ControlledAzureResource ]\n      responses:\n        '200':\n          $ref: '#/components/responses/GetControlledAzureVmResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    post:\n      summary: |\n        Delete an azure Vm\n      operationId: deleteAzureVm\n      tags: [ControlledAzureResource]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteControlledAzureResourceRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'\n        '202':\n          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/network/{resourceId}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/ResourceId'\n    get:\n      summary: Get a controlled Azure Network resource\n      operationId: getAzureNetwork\n      tags: [ ControlledAzureResource ]\n      responses:\n        '200':\n          $ref: '#/components/responses/GetControlledAzureNetworkResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    post:\n      summary: |\n        Delete an azure Network\n      operationId: deleteAzureNetwork\n      tags: [ ControlledAzureResource ]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteControlledAzureResourceRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'\n        '202':\n          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/vm/delete-result/{jobId}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/JobId'\n    get:\n      summary: Retrieve information about an azure vm deletion job.\n      operationId: getDeleteAzureVmResult\n      tags: [ ControlledAzureResource ]\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'\n        '202':\n          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/network/delete-result/{jobId}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/JobId'\n    get:\n      summary: Retrieve information about an azure network deletion job.\n      operationId: getDeleteAzureNetworkResult\n      tags: [ ControlledAzureResource ]\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'\n        '202':\n          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/bqdatasets:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n    post:\n      summary: Create a new controlled BigQuery dataset\n      operationId: createBigQueryDataset\n      tags: [ControlledGcpResource]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateControlledGcpBigQueryDatasetRequestBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/CreatedControlledGcpBigQueryDatasetResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/bqdatasets/{resourceId}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/ResourceId'\n    get:\n      summary: Get a controlled BigQuery dataset resource\n      operationId: getBigQueryDataset\n      tags: [ ControlledGcpResource ]\n      responses:\n        '200':\n          $ref: '#/components/responses/ControlledGcpBigQueryDatasetResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    patch:\n      summary: Update a controlled BigQuery dataset resource\n      operationId: updateBigQueryDataset\n      tags: [ ControlledGcpResource ]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateControlledGcpBigQueryDatasetRequestBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/ControlledGcpBigQueryDatasetResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    delete:\n      summary: Delete a controlled Bigquery dataset\n      operationId: deleteBigQueryDataset\n      tags: [ ControlledGcpResource ]\n      responses:\n        '204':\n          description: Success\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/bqdatasets/{resourceId}/clone:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/ResourceId'\n    post:\n      summary: Clone a BigQuery dataset\n      operationId: cloneBigQueryDataset\n      tags: [ControlledGcpResource]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CloneControlledGcpBigQueryDatasetRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/CloneControlledGcpBigQueryDatasetResponse'\n        '202':\n          $ref: '#/components/responses/CloneControlledGcpBigQueryDatasetResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/bqdatasets/clone-result/{jobId}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/JobId'\n    get:\n      summary: Retrieve information about a gcp BigQuery dataset clone job.\n      operationId: getCloneBigQueryDatasetResult\n      tags: [ControlledGcpResource]\n      responses:\n        '200':\n          $ref: '#/components/responses/CloneControlledGcpBigQueryDatasetResponse'\n        '202':\n          $ref: '#/components/responses/CloneControlledGcpBigQueryDatasetResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/ai-notebook-instances:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n    post:\n      summary: Create a new controlled Gcp AI Platform Notebook Instance\n      operationId: createAiNotebookInstance\n      tags: [ControlledGcpResource]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateControlledGcpAiNotebookInstanceRequestBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/CreatedControlledGcpAiNotebookInstanceResponse'\n        '202':\n          $ref: '#/components/responses/CreatedControlledGcpAiNotebookInstanceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/ai-notebook-instances/create-result/{jobId}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/JobId'\n    get:\n      summary: Retrieve information about a GCP AI Platform Notebook create instance job.\n      operationId: getCreateAiNotebookInstanceResult\n      tags: [ControlledGcpResource]\n      responses:\n        '200':\n          $ref: '#/components/responses/CreatedControlledGcpAiNotebookInstanceResponse'\n        '202':\n          $ref: '#/components/responses/CreatedControlledGcpAiNotebookInstanceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/ai-notebook-instances/{resourceId}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/ResourceId'\n    get:\n      summary: Get a controlled AI Notebook instance resource\n      operationId: getAiNotebookInstance\n      tags: [ControlledGcpResource]\n      responses:\n        '200':\n          $ref: '#/components/responses/GetControlledGcpAiNotebookInstanceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    post:\n      summary: |\n        Delete a controlled GCP AI Notebook instance resource. This is async, because deleting the\n        notebook instance can take ~5 minutes. NOTE: this cannot be an HTTP DELETE, because\n        something between generated code and server behavior does not support delete operations with\n        bodies. We require the body for the async state, so this is a POST.\n      operationId: deleteAiNotebookInstance\n      tags: [ ControlledGcpResource ]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteControlledGcpAiNotebookInstanceRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteControlledGcpAiNotebookInstanceResponse'\n        '202':\n          $ref: '#/components/responses/DeleteControlledGcpAiNotebookInstanceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/ai-notebook-instances/delete-result/{jobId}:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/JobId'\n    get:\n      summary: Retrieve information about a GCP AI Platform Notebook delete instance job.\n      operationId: getDeleteAiNotebookInstanceResult\n      tags: [ControlledGcpResource]\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteControlledGcpAiNotebookInstanceResponse'\n        '202':\n          $ref: '#/components/responses/DeleteControlledGcpAiNotebookInstanceResponse'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  ## ALPHA1 paths\n  ## These endpoints are only supported if the alpha1 feature flag is enabled.\n  ## They are no compatibility guarantees. The endpoints and related components\n  ## may change without notice.\n\n  /api/workspaces/alpha1/{workspaceId}/jobs:\n    parameters:\n      - $ref: '#/components/parameters/WorkspaceId'\n      - $ref: '#/components/parameters/Limit'\n      - $ref: '#/components/parameters/PageToken'\n      - $ref: '#/components/parameters/ResourceType'\n      - $ref: '#/components/parameters/StewardshipType'\n      - $ref: \"#/components/parameters/ResourceName\"\n      - $ref: '#/components/parameters/JobStateFilter'\n    get:\n      summary: |\n        Enumerate recent jobs run in a workspace. The enumeration includes both running\n        and completed jobs. It is ordered by start time of the job.\n      operationId: enumerateJobs\n      tags: [Alpha1]\n      responses:\n        '200':\n          $ref: '#/components/responses/EnumerateJobsResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/PermissionDenied'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\ncomponents:\n  parameters:\n    ## DEPRECATED PARAMETERS ##\n    # TODO(PF-404): remove this in favor of reference-type specific objects.\n    ReferenceId:\n      name: referenceId\n      in: path\n      description: (DEPRECATED) A UUID used to identify a data reference in a workspace.\n      required: true\n      schema:\n        type: string\n        format: uuid\n\n    # TODO(PF-404): remove this in favor of reference-type specific objects.\n    ReferenceType:\n      name: referenceType\n      in: path\n      description: (DEPRECATED) The type of a data reference in a workspace\n      required: true\n      schema:\n        $ref: '#/components/schemas/ReferenceTypeEnum'\n    ## END OF DEPRECATED PARAMETERS ##\n\n    ApplicationId:\n      name: applicationId\n      in: path\n      description: A UUID to used to identify an application in the workspace manager\n      required: true\n      schema:\n        type: string\n        format: uuid\n\n    WorkspaceId:\n      name: workspaceId\n      in: path\n      description: A UUID to used to identify a workspace in the workspace manager\n      required: true\n      schema:\n        type: string\n        format: uuid\n\n    JobId:\n      name: jobId\n      in: path\n      description: A String ID to used to identify a job\n      required: true\n      schema:\n        type: string\n\n    Offset:\n      name: offset\n      in: query\n      description: The number of items to skip before starting to collect the result set.\n      required: false\n      schema:\n        type: integer\n        minimum: 0\n        default: 0\n\n    Limit:\n      name: limit\n      in: query\n      description: The maximum number of items to return. Default 10\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n        default: 10\n\n    ResourceId:\n      name: resourceId\n      in: path\n      description: A UUID used to identify a controlled resource in a workspace.\n      required: true\n      schema:\n        type: string\n        format: uuid\n\n    ResourceType:\n      name: resource\n      in: query\n      description: Filter on a specific resource type\n      required: false\n      schema:\n        $ref: '#/components/schemas/ResourceType'\n\n    StewardshipType:\n      name: stewardship\n      in: query\n      description: Filter on a stewardship type\n      required: false\n      schema:\n        $ref: '#/components/schemas/StewardshipType'\n\n    Name:\n      name: name\n      in: path\n      description: A name used to identify an object in the workspace manager\n      required: true\n      schema:\n        $ref: '#/components/schemas/Name'\n\n    Role:\n      name: role\n      in: path\n      description: An IAM role\n      required: true\n      schema:\n        $ref: '#/components/schemas/IamRole'\n\n    MemberEmail:\n      name: memberEmail\n      in: path\n      description: A user or group's email. Used for adding or removing IAM permissions\n      required: true\n      schema:\n        type: string\n\n    CloudContext:\n      name: cloudContext\n      in: path\n      description: A cloud platform which holds context for a workspace.\n      required: true\n      schema:\n        $ref: '#/components/schemas/CloudPlatform'\n\n    ## ALPHA1 Parameters\n    ## They are no compatibility guarantees. The parameters may change without notice.\n    PageToken:\n      name: pageToken\n      in: query\n      description: A previously returned page token describing where to resume an enumeration.\n      required: false\n      schema:\n        type: string\n\n    JobStateFilter:\n      name: jobState\n      in: query\n      description: The state of jobs to return (ALL, ACTIVE, COMPLETED)\n      required: false\n      schema:\n        $ref: '#/components/schemas/JobStateFilter'\n\n    ResourceName:\n      name: name\n      in: query\n      description: A name used to identify an object in the workspace manager\n      required: false\n      schema:\n        $ref: '#/components/schemas/Name'\n\n  schemas:\n    CloneReferencedResourceRequestBody:\n      description: \u003e-\n        Cloning options for referenced resources. If optional parameters are omitted,\n        the source values will be used.\n      type: object\n      required: [destinationWorkspaceId]\n      properties:\n        cloningInstructions:\n          $ref: '#/components/schemas/CloningInstructionsEnum'\n        destinationWorkspaceId:\n          type: string\n          format: uuid\n        # Null for original name\n        name:\n          $ref: \"#/components/schemas/Name\"\n        description:\n          description: Description for the referenced resource clone, or null to use original.\n          type: string\n\n    ### DEPRECATED SCHEMAS ###\n    # TODO(PF-404): remove this in favor of reference-type specific objects.\n    CreateDataReferenceRequestBody:\n      deprecated: true\n      type: object\n      required: [name, cloningInstructions]\n      properties:\n        name:\n          $ref: \"#/components/schemas/Name\"\n        description:\n          type: string\n          default: \"\"\n        resourceId:\n          description: The ID of the resource\n          type: string\n          format: uuid\n        referenceType:\n          $ref: '#/components/schemas/ReferenceTypeEnum'\n        reference:\n          $ref: '#/components/schemas/DataRepoSnapshot'\n        cloningInstructions:\n          $ref: '#/components/schemas/CloningInstructionsEnum'\n\n    # TODO(PF-404): remove this in favor of reference-type specific objects.\n    DataReferenceRequestMetadata:\n      deprecated: true\n      type: object\n      required: [name, cloningInstructions]\n      description: (DEPRECATED) Common information shared across all types of data reference requests.\n      properties:\n        ## TODO: This is not implemented as a name. It used as if it is a snapshot identifier (UUID)\n        ##   So either this is a misnomer, or we are doing it wrong.\n        name:\n          $ref: \"#/components/schemas/Name\"\n        cloningInstructions:\n          $ref: '#/components/schemas/CloningInstructionsEnum'\n        description:\n          type: string\n          default: \"\"\n\n    # TODO(PF-404): remove this in favor of reference-type specific objects.\n    DataReferenceDescription:\n      deprecated: true\n      type: object\n      required: [referenceId, name, description, workspaceId, cloningInstructions]\n      properties:\n        referenceId:\n          description: The ID of the data reference\n          type: string\n          format: uuid\n        name:\n          description: The name of the data reference; used to refer to the reference\n          type: string\n        description:\n          type: string\n        workspaceId:\n          description: The ID of the workspace containing the reference\n          type: string\n          format: uuid\n        resourceDescription:\n          $ref: '#/components/schemas/DeprecatedResourceDescription'\n        referenceType:\n          $ref: '#/components/schemas/ReferenceTypeEnum'\n        reference:\n          $ref: '#/components/schemas/DataRepoSnapshot'\n        credentialId:\n          description: The ID of the credential to use when accessing the resource\n          type: string\n        cloningInstructions:\n          $ref: '#/components/schemas/CloningInstructionsEnum'\n\n    # TODO(PF-404): remove this in favor of reference-type specific objects.\n    ReferenceTypeEnum:\n      deprecated: true\n      type: string\n      description: (DEPRECATED) The type of a reference, if an uncontrolled resource\n      # TODO: swagger-codegen always looks for and removes a common prefix for\n      # enum values, which breaks enums that only have a single value.\n      # PLACEHOLDER_VALUE should be removed when we have an actual second value\n      # to use.\n      enum: ['DATA_REPO_SNAPSHOT', 'PLACEHOLDER_VALUE'] #eventually include GCS bucket, etc.\n\n    # TODO(PF-404): remove this in favor of reference-type specific objects.\n    DataReferenceList:\n      deprecated: true\n      type: object\n      required: [resources]\n      properties:\n        resources:\n          description: A list of controlled and/or uncontrolled data references\n          type: array\n          items:\n            $ref: '#/components/schemas/DataReferenceDescription'\n\n    # TODO(PF-404): remove this in favor of reference-type specific objects.\n    UpdateDataReferenceRequestBody:\n      deprecated: true\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/Name\"\n        description:\n          type: string\n\n    UpdateGcsBucketReferenceRequestBody:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/Name\"\n        description:\n          type: string\n        bucketName:\n          description: Name of created bucket (not the resource name).\n          type: string\n\n    UpdateGcsBucketObjectReferenceRequestBody:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/Name\"\n        description:\n          type: string\n        bucketName:\n          description: Name of created bucket (not the resource name).\n          type: string\n        objectName:\n          description: Full path to the file in the gcs bucket.\n          type: string\n\n    UpdateBigQueryDatasetReferenceRequestBody:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/Name\"\n        description:\n          type: string\n        projectId:\n          type: string\n        datasetId:\n          type: string\n\n    UpdateBigQueryDataTableReferenceRequestBody:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/Name\"\n        description:\n          type: string\n        projectId:\n          type: string\n        datasetId:\n          type: string\n        dataTableId:\n          type: string\n\n    UpdateDataRepoSnapshotReferenceRequestBody:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/Name\"\n        description:\n          type: string\n        instanceName:\n          description: The name of the Data Repo instance\n          type: string\n        snapshot:\n          description: The ID of the Data Repo snapshot\n          type: string\n\n    UpdateGitRepoReferenceRequestBody:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/Name\"\n        description:\n          type: string\n        gitRepoUrl:\n          description: the url for cloning the corresponding git repository\n          type: string\n\n    # TODO(PF-404): remove this in favor of reference-type specific objects.\n    DataReferenceMetadata:\n      deprecated: true\n      type: object\n      required: [referenceId, name, workspaceId, cloningInstructions]\n      description: (DEPRECATED) Information common across all types of references.\n      properties:\n        referenceId:\n          description: The ID of the data reference\n          type: string\n          format: uuid\n        name:\n          description: The name of the data reference; used to refer to the reference\n          type: string\n        description:\n          type: string\n        cloningInstructions:\n          $ref: '#/components/schemas/CloningInstructionsEnum'\n        workspaceId:\n          description: The ID of the workspace containing the reference\n          type: string\n          format: uuid\n\n    # TODO(PF-404): remove this in favor of reference-type specific objects.\n    DataRepoSnapshotReference:\n      deprecated: true\n      type: object\n      description: (DEPRECATED) A reference to a Data Repo snapshot.\n      required: [metadata, snapshot]\n      properties:\n        metadata:\n          $ref: '#/components/schemas/DataReferenceMetadata'\n        snapshot:\n          $ref: '#/components/schemas/DataRepoSnapshot'\n\n    # TODO(PF-404): remove this in favor of reference-type specific objects.\n    DataRepoSnapshot:\n      deprecated: true\n      description: (DEPRECATED) A reference to a snapshot in Data Repo.\n      type: object\n      required: [instanceName, snapshot]\n      properties:\n        instanceName:\n          description: The name of the Data Repo instance\n          type: string\n        snapshot:\n          description: The ID of the Data Repo snapshot\n          type: string\n\n    # TODO(PF-404): remove this in favor of reference-type specific objects.\n    DeprecatedResourceDescription:\n      deprecated: true\n      description: (DEPRECATED) Description of the workspace resource, if this is a controlled reference.\n      type: object\n      required: [resourceId, workspaceId, isVisible]\n      properties:\n        resourceId:\n          description: The ID of the resource\n          type: string\n          format: uuid\n        workspaceId:\n          description: The ID of the workspace holding the resource\n          type: string\n          format: uuid\n        applicationId:\n          description: ID of application this resource is associated with, if any\n          type: string\n        isVisible:\n          description: Whether this resource is visible or not\n          type: boolean\n        owner:\n          description: ID of owner. null for shared resources\n          type: string\n        attributes:\n          description: JSON map of user-provided attributes\n          type: string\n\n    ### END OF DEPRECATED SCHEMAS ###\n\n    ErrorReport:\n      type: object\n      required: [message, statusCode, causes]\n      properties:\n        message:\n          type: string\n        statusCode:\n          type: integer\n        causes:\n          type: array\n          items:\n            type: string\n\n    JobReport:\n      type: object\n      required: [id, status, statusCode, resultURL]\n      properties:\n        id:\n          description: caller-provided unique identifier for the job\n          type: string\n        description:\n          description: caller-provided description of the job\n          type: string\n        status:\n          description: status of the job\n          type: string\n          enum: [RUNNING, SUCCEEDED, FAILED]\n        statusCode:\n          description: HTTP code providing status of the job.\n          type: integer\n        submitted:\n          description: timestamp when the job was submitted; in ISO-8601 format\n          type: string\n        completed:\n          description: \u003e-\n            timestamp when the job completed - in ISO-8601 format. Present if\n            status is SUCCEEDED or FAILED.\n          type: string\n        resultURL:\n          description: \u003e-\n            URL where the result of the job can be retrieved. Equivalent to a\n            Location header in HTTP.\n          type: string\n\n    JobControl:\n      type: object\n      required: [id]\n      properties:\n        id:\n          description: \u003e-\n            Unique identifier for the job. Best practice is for job identifier to be a UUID,\n            a ShortUUID, or other globally unique identifier.\n          type: string\n        # TODO: In the future, notification configuration will also be part of JobControl.\n\n    # ALPHA1:\n    JobStateFilter:\n      type: string\n      enum:\n        - ALL\n        - ACTIVE\n        - COMPLETED\n\n    Name:\n      type: string\n      pattern: '^[a-zA-Z0-9][-_a-zA-Z0-9]{0,1023}$'\n\n    SystemVersion:\n      type: object\n      required: [gitTag, gitHash, github, build]\n      properties:\n        gitTag:\n          type: string\n          description: Git tag of currently deployed app.\n        gitHash:\n          type: string\n          description: Git hash of currently deployed app.\n        github:\n          type: string\n          description: Github link to currently deployed commit.\n        build:\n          type: string\n          description: Version of the currently deployed app declared in build.gradle. Client and server versions are linked.\n\n    CreateWorkspaceRequestBody:\n      type: object\n      required: [id]\n      properties:\n        id:\n          description: The ID of the workspace\n          type: string\n          format: uuid\n        displayName:\n          description: The human readable name of the workspace\n          type: string\n        description:\n          description: A description of the workspace\n          type: string\n        spendProfile:\n          description: ID of provided spend profile\n          type: string\n        policies:\n          description: Policies provided by the containing folder; NOT IMPLEMENTED\n          type: array\n          items:\n            type: string\n            format: uuid\n        stage:\n          $ref: '#/components/schemas/WorkspaceStageModel'\n        properties:\n          $ref: '#/components/schemas/Properties'\n\n    Properties:\n      description: Optional list of key-value pairs of strings\n      type: array\n      items:\n        $ref: '#/components/schemas/Property'\n\n    Property:\n      type: object\n      required: [key, value]\n      properties:\n        key:\n          description: |\n            String to identify the key. Keys must be 1-1024 characters, using letters,\n            numbers, dashes, and underscores and must not start with a dash or underscore.\n          type: string\n        value:\n          description: Arbitrary string value\n          type: string\n\n    CreatedWorkspace:\n      type: object\n      required: [id]\n      properties:\n        id:\n          description: UUID of a newly-created workspace\n          type: string\n          format: uuid\n\n    ApplicationState:\n      description: State of an application\n      type: string\n      enum:\n        - OPERATING\n        - DEPRECATED\n        - DECOMMISSIONED\n\n    WorkspaceApplicationState:\n      description: State of the application in the workspace.\n      type: string\n      enum:\n        - ENABLED\n        - DISABLED\n\n    WorkspaceApplicationDescription:\n      type: object\n      required: [ workspaceId, applicationId ]\n      properties:\n        workspaceId:\n          description: The ID of the workspace\n          type: string\n          format: uuid\n        applicationId:\n          description: The ID of the application\n          type: string\n          format: uuid\n        displayName:\n          description: The human readable name of the application\n          type: string\n        description:\n          description: A description of the application\n          type: string\n        applicationState:\n          $ref: '#/components/schemas/ApplicationState'\n        workspaceApplicationState:\n          $ref: '#/components/schemas/WorkspaceApplicationState'\n\n    WorkspaceApplicationDescriptionList:\n      type: object\n      required: [ workspaces ]\n      properties:\n        applications:\n          description: A list of known applications and their relationship to the workspace\n          type: array\n          items:\n            $ref: '#/components/schemas/WorkspaceApplicationDescription'\n\n    WorkspaceDescription:\n      type: object\n      required: [id]\n      properties:\n        id:\n          description: The ID of the workspace\n          type: string\n          format: uuid\n        displayName:\n          description: The human readable name of the workspace\n          type: string\n        description:\n          description: A description of the workspace\n          type: string\n        spendProfile:\n          description: ID of provided spend profile\n          type: string\n        stage:\n          $ref: '#/components/schemas/WorkspaceStageModel'\n        gcpContext:\n          description: GCP context, if one exists\n          $ref: '#/components/schemas/GcpContext'\n        azureContext:\n          description: Azure context, if one exists\n          $ref: '#/components/schemas/AzureContext'\n        properties:\n          $ref: '#/components/schemas/Properties'\n\n    UpdateWorkspaceRequestBody:\n      type: object\n      properties:\n        displayName:\n          description: The human readable name of the workspace\n          type: string\n        description:\n          description: A description of the workspace\n          type: string\n        properties:\n          description: If present, it will replace all properties with this list\n          $ref: '#/components/schemas/Properties'\n\n    WorkspaceDescriptionList:\n      type: object\n      required: [ workspaces ]\n      properties:\n        workspaces:\n          description: A list of workspaces\n          type: array\n          items:\n            $ref: '#/components/schemas/WorkspaceDescription'\n\n    CreateCloudContextRequest:\n      type: object\n      required: [cloudPlatform, jobControl]\n      description: |\n        Request body for asynchronously creating a cloud context for a workspace.\n        Contains the CloudPlatform for the context and the JobControl object.\n        For GCP, a project is created to contain the cloud resources of the context.\n        For Azure, a managed resource group (MRG) is created outside of WSM within a tenant\n        and a subscription. The MRG may provide the cloud context for multiple workspaces.\n        Therefore, the location of the MRG is provided as input to the context creation.\n      properties:\n        cloudPlatform:\n          $ref: '#/components/schemas/CloudPlatform'\n        jobControl:\n          $ref: '#/components/schemas/JobControl'\n        azureContext:\n          $ref: '#/components/schemas/AzureContext'\n\n    AzureContext:\n      type: object\n      description: The azure cloud context associated with a workspace.\n      properties:\n        tenantId:\n          description: The ID of Azure tenant associated with the workspace.\n          type: string\n        subscriptionId:\n          description: The ID of Azure subscription associated with the workspace.\n          type: string\n        resourceGroupId:\n          description: The ID of Azure resource group associated with the workspace.\n          type: string\n\n    GcpContext:\n      type: object\n      description: The GCP cloud context associated with a workspace.\n      required: [projectId]\n      properties:\n        projectId:\n          description: The ID of Gcp Project associated with the workspace.\n          type: string\n\n    CreateCloudContextResult:\n      type: object\n      description: |\n        The result of a call to create a cloud context for a workspace. Contains\n        a JobReport detailing the async operation and either a GcpContext\n        or an ErrorReport detailing an error.\n      required: [jobReport]\n      properties:\n        jobReport:\n          $ref: '#/components/schemas/JobReport'\n        gcpContext:\n          $ref: '#/components/schemas/GcpContext'\n        errorReport:\n          $ref: '#/components/schemas/ErrorReport'\n\n    CreateDataRepoSnapshotReferenceRequestBody:\n      type: object\n      description: A request to create a reference to a Data Repo snapshot.\n      required: [metadata, snapshot]\n      properties:\n        metadata:\n          $ref: '#/components/schemas/ReferenceResourceCommonFields'\n        snapshot:\n          $ref: '#/components/schemas/DataRepoSnapshotAttributes'\n\n    CreateGcpGcsObjectReferenceRequestBody:\n      type: object\n      description: A request to create a reference to a GCS object.\n      required: [ metadata, file ]\n      properties:\n        metadata:\n          $ref: '#/components/schemas/ReferenceResourceCommonFields'\n        file:\n          $ref: '#/components/schemas/GcpGcsObjectAttributes'\n\n    CreateGcpGcsBucketReferenceRequestBody:\n      type: object\n      description: A request to create a reference to a GCS bucket.\n      required: [metadata, bucket]\n      properties:\n        metadata:\n          $ref: '#/components/schemas/ReferenceResourceCommonFields'\n        bucket:\n          $ref: '#/components/schemas/GcpGcsBucketAttributes'\n\n    CreateGcpBigQueryDataTableReferenceRequestBody:\n      type: object\n      description: A request to create a reference to a BigQuery data table.\n      required: [ metadata, dataTable ]\n      properties:\n        metadata:\n          $ref: '#/components/schemas/ReferenceResourceCommonFields'\n        dataTable:\n          $ref: '#/components/schemas/GcpBigQueryDataTableAttributes'\n\n    CreateGcpBigQueryDatasetReferenceRequestBody:\n      type: object\n      description: A request to create a reference to a BigQuery dataset.\n      required: [metadata, dataset]\n      properties:\n        metadata:\n          $ref: '#/components/schemas/ReferenceResourceCommonFields'\n        dataset:\n          $ref: '#/components/schemas/GcpBigQueryDatasetAttributes'\n\n    CreateGitRepoReferenceRequestBody:\n      type: object\n      description: A request to create a reference to a Git repo.\n      required: [metadata, gitrepo]\n      properties:\n        metadata:\n          $ref: '#/components/schemas/ReferenceResourceCommonFields'\n        gitrepo:\n          $ref: '#/components/schemas/GitRepoAttributes'\n\n    WorkspaceStageModel:\n      description: Enum for possible stages of a workspace along the Rawls migration path\n      type: string\n      enum: ['RAWLS_WORKSPACE', 'MC_WORKSPACE']\n\n    IamRole:\n      description: Enum containing all valid IAM roles on a Workspace\n      type: string\n      enum: ['READER', 'WRITER', 'APPLICATION', 'OWNER']\n\n    ControlledResourceIamRole:\n      description: Enum containing all IAM roles on controlled resources available to users\n      type: string\n      enum: [ 'READER', 'WRITER', 'EDITOR']\n\n    RoleBinding:\n      description: A binding between an IAM role and users with that role\n      type: object\n      required: [role]\n      properties:\n        role:\n          $ref: '#/components/schemas/IamRole'\n        members:\n          description: A list of users that this role applies to\n          type: array\n          items:\n            type: string\n\n    RoleBindingList:\n      description: A list of role bindings\n      type: array\n      items:\n        $ref: '#/components/schemas/RoleBinding'\n\n    GrantRoleRequestBody:\n      description: The body for a request to grant a role to a single user.\n      type: object\n      required: [memberEmail]\n      properties:\n        memberEmail:\n          type: string\n\n    CreateControlledAzureIpRequestBody:\n      description: Payload for requesting a new controlled Azure IP resource.\n      type: object\n      properties:\n        common:\n          $ref: '#/components/schemas/ControlledResourceCommonFields'\n        azureIp:\n          $ref: '#/components/schemas/AzureIpCreationParameters'\n\n    CreateControlledAzureStorageRequestBody:\n      description: Payload for requesting a new controlled Azure storage account resource.\n      type: object\n      properties:\n        common:\n          $ref: '#/components/schemas/ControlledResourceCommonFields'\n        azureStorage:\n          $ref: '#/components/schemas/AzureStorageCreationParameters'\n\n\n    CreateControlledAzureDiskRequestBody:\n      description: Payload for requesting a new controlled Azure Disk resource.\n      type: object\n      properties:\n        common:\n          $ref: '#/components/schemas/ControlledResourceCommonFields'\n        azureDisk:\n          $ref: '#/components/schemas/AzureDiskCreationParameters'\n\n    CreateControlledAzureNetworkRequestBody:\n      description: Payload for requesting a new controlled Azure Network resource.\n      type: object\n      properties:\n        common:\n          $ref: '#/components/schemas/ControlledResourceCommonFields'\n        azureNetwork:\n          $ref: '#/components/schemas/AzureNetworkCreationParameters'\n\n    CreateControlledAzureVmRequestBody:\n      description: Payload for requesting a new controlled Azure VM resource.\n      type: object\n      properties:\n        common:\n          $ref: '#/components/schemas/ControlledResourceCommonFields'\n        azureVm:\n          $ref: '#/components/schemas/AzureVmCreationParameters'\n        jobControl:\n          $ref: '#/components/schemas/JobControl'\n\n    CreateControlledGcpGcsBucketRequestBody:\n      description: Payload for requesting a new controlled GCS bucket resource.\n      type: object\n      required: [common, gcsBucket]\n      properties:\n        common:\n          $ref: '#/components/schemas/ControlledResourceCommonFields'\n        gcsBucket:\n          $ref: '#/components/schemas/GcpGcsBucketCreationParameters'\n\n    CreateControlledGcpBigQueryDatasetRequestBody:\n      description: Payload for requesting a new controlled BigQuery dataset resource.\n      type: object\n      required: [common, dataset]\n      properties:\n        common:\n          $ref: '#/components/schemas/ControlledResourceCommonFields'\n        dataset:\n          $ref: '#/components/schemas/GcpBigQueryDatasetCreationParameters'\n\n    CreateControlledGcpAiNotebookInstanceRequestBody:\n      description: Payload for requesting a new controlled GCS Api notebook instance.\n      type: object\n      required: [common, aiNotebookInstance, jobControl]\n      properties:\n        common:\n          $ref: '#/components/schemas/ControlledResourceCommonFields'\n        aiNotebookInstance:\n          $ref: '#/components/schemas/GcpAiNotebookInstanceCreationParameters'\n        jobControl:\n          $ref: '#/components/schemas/JobControl'\n\n    ControlledResourceCommonFields:\n      type: object\n      required: [ name, cloningInstructions, accessScope, managedBy ]\n      properties:\n        name:\n          $ref: \"#/components/schemas/Name\"\n        description:\n          type: string\n        cloningInstructions:\n          $ref: '#/components/schemas/CloningInstructionsEnum'\n        accessScope:\n          $ref: '#/components/schemas/AccessScope'\n        managedBy:\n          $ref: '#/components/schemas/ManagedBy'\n        privateResourceUser:\n          $ref: '#/components/schemas/PrivateResourceUser'\n\n    PrivateResourceUser:\n      description: \u003e-\n        This text describes the target state:\n        Applications may optionally specify a workspace user to have access to the private\n        resource by providing this element. If this element is not specified, workspace\n        users will have no direct access to the associated cloud resource. If this element\n        is specified both fields are required.\n      type: object\n# TODO: PF-1218 - when CLI and UI are no longer passing this, disallow it for user-private\n#  resources, make the role List into a single role, and require both fields to be present.\n#      required: [ userName, privateResourceIamRoles ]\n      properties:\n        userName:\n          description: email of the workspace user to grant access\n          type: string\n        privateResourceIamRoles:\n          $ref: '#/components/schemas/PrivateResourceIamRoles'\n\n    PrivateResourceIamRoles:\n      description: \u003e-\n        List of role(s) granted to the user of a private resource. In the current permission model\n        EDITOR includes WRITER includes READER by definition. We only grant the maximum role listed.\n      type: array\n      items:\n        $ref: '#/components/schemas/ControlledResourceIamRole'\n\n    PrivateResourceState:\n      description: \u003e-\n        The possible states of ownership of a private resource. When a resource is abandoned, the\n        assigned user loses permission to access it.\n      type: string\n      enum:\n      - ABANDONED\n      - ACTIVE\n      - INITIALIZING\n      - NOT_APPLICABLE\n\n    ReferenceResourceCommonFields:\n      type: object\n      required: [name, cloningInstructions]\n      description: Common information used in all reference requests\n      properties:\n        name:\n          $ref: \"#/components/schemas/Name\"\n        description:\n          type: string\n        cloningInstructions:\n          $ref: '#/components/schemas/CloningInstructionsEnum'\n\n    UpdateControlledResourceRequestBody:\n      type: object\n      description: Common request body for updating a controlled resource\n      properties:\n        name:\n          description: Optional. New name to give to this resource. The resource name will not be updated if this is omitted.\n          type: string\n        description:\n          description: Optional. New description to give to this resource. The resource description will not be updated if this is omitted.\n          type: string\n    UpdateControlledGcpGcsBucketRequestBody:\n      type: object\n      description: Update a GCS bucket's metadata and lifecycle rules.\n      properties:\n        name:\n          description: Optional. New name to give to this resource. The resource name will not be updated if this is omitted.\n          type: string\n        description:\n          description: Optional. New description to give to this resource. The resource description will not be updated if this is omitted.\n          type: string\n        updateParameters:\n          $ref: '#/components/schemas/GcpGcsBucketUpdateParameters'\n    UpdateControlledGcpBigQueryDatasetRequestBody:\n      type: object\n      description: Update a BigQuery dataset's metadata and expiration times.\n      properties:\n        name:\n          description: Optional. New name to give to this resource. The resource name will not be updated if this is omitted.\n          type: string\n        description:\n          description: Optional. New description to give to this resource. The resource description will not be updated if this is omitted.\n          type: string\n        updateParameters:\n          $ref: '#/components/schemas/GcpBigQueryDatasetUpdateParameters'\n    CreatedControlledGcpGcsBucket:\n      description: Response Payload for requesting a new controlled GCS bucket.\n      type: object\n      properties:\n        resourceId:\n          description: UUID of a newly-created resource. Null if not created yet.\n          type: string\n          format: uuid\n        gcpBucket:\n          $ref: '#/components/schemas/GcpGcsBucketResource'\n    CreatedControlledGcpBigQueryDataset:\n      description: Response Payload for requesting a new controlled BigQuery dataset.\n      type: object\n      properties:\n        resourceId:\n          description: UUID of a newly-created resource. Null if not created yet.\n          type: string\n          format: uuid\n        bigQueryDataset:\n          $ref: '#/components/schemas/GcpBigQueryDatasetResource'\n\n    AzureIpCreationParameters:\n      description: \u003e-\n        IP-specific properties to be set on creation. These are a subset of the values\n        accepted by the azure resource API\n      type: object\n      required: [name, region]\n      properties:\n        name:\n          description: A valid ip name per https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-name-rules\n          type: string\n        region:\n          description: |\n            A valid region string representation per https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.management.resourcemanager.fluent.core.region.\n            It is best to look at the Region class definition for valid strings (e.g. 'eastus' == Region.US_EAST.toString())\n          type: string\n\n    AzureStorageCreationParameters:\n      description: \u003e-\n        Storage-specific properties to be set on creation. These are a subset of the values\n        accepted by the azure resource API\n      type: object\n      required: [ name, region ]\n      properties:\n        name:\n          description: A valid storage account name per https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-name-rules\n          type: string\n        region:\n          description: |\n            A valid region string representation per https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.management.resourcemanager.fluent.core.region.\n            It is best to look at the Region class definition for valid strings (e.g. 'eastus' == Region.US_EAST.toString())\n          type: string\n\n    AzureDiskCreationParameters:\n      description: \u003e-\n        Disk-specific properties to be set on creation. These are a subset of the values\n        accepted by the azure resource API\n      type: object\n      required: [ name, region, size ]\n      properties:\n        name:\n          description: A valid disk name per https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-name-rules\n          type: string\n        region:\n          description: |\n            A valid region string representation per https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.management.resourcemanager.fluent.core.region.\n            It is best to look at the Region class definition for valid strings (e.g. 'eastus' == Region.US_EAST.toString())\n          type: string\n        size:\n          description: |\n            A valid size in GB integer representation\n          type: integer\n\n    AzureNetworkCreationParameters:\n      description: \u003e-\n        Network-specific properties to be set on creation. These are a subset of the values\n        accepted by the azure resource API\n      type: object\n      required: [ name, subnetName, addressSpaceCidr, subnetAddressCidr, region ]\n      properties:\n        name:\n          description: A valid Network name per https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-name-rules\n          type: string\n        subnetName:\n          description: A valid subnet name per https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-name-rules\n          type: string\n        addressSpaceCidr:\n          description: A valid range of IP addresses the network uses\n          type: string\n        subnetAddressCidr:\n          description: A valid range of IP address the subnet uses\n          type: string\n        region:\n          description: |\n            A valid region string representation per https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.management.resourcemanager.fluent.core.region.\n            It is best to look at the Region class definition for valid strings (e.g. 'eastus' == Region.US_EAST.toString())\n          type: string\n\n    AzureVmCreationParameters:\n      description: \u003e-\n        Vm-specific properties to be set on creation. These are a subset of the values\n        accepted by the azure resource API\n      type: object\n      required: [name, region, ipId, diskId, networkId, vmSize, vmImageUri]\n      properties:\n        name:\n          description: A valid vm name per https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-name-rules\n          type: string\n        region:\n          description: |\n            A valid region string representation per https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.management.resourcemanager.fluent.core.region.\n            It is best to look at the Region class definition for valid strings (e.g. 'eastus' == Region.US_EAST.toString())\n          type: string\n        vmSize:\n          description: A valid image size as per com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes\n          type: string\n        vmImageUri:\n          description: A valid image Uri. Must be in the same region specified. E.x. /subscriptions/3efc5bdf-be0e-44e7-b1d7-c08931e3c16c/resourceGroups/mrg-qi-1-preview-20210517084351/providers/Microsoft.Compute/galleries/msdsvm/images/customized_ms_dsvm/versions/0.1.0\n          type: string\n        ipId:\n          description: A valid WSM identifier for an Azure Ip that corresponds to a valid azure resource\n          type: string\n          format: uuid\n        diskId:\n          description: A valid WSM identifier for an Azure Disk that corresponds to a valid azure resource\n          type: string\n          format: uuid\n        networkId:\n          description: A valid WSM identifier for an Azure Network that corresponds to a valid azure resource\n          type: string\n          format: uuid\n\n    CreatedControlledAzureIp:\n      description: Response payload for requesting a new Azure IP\n      type: object\n      properties:\n        resourceId:\n          description: UUID of a newly-created resource.\n          type: string\n          format: uuid\n        azureIp:\n          $ref: '#/components/schemas/AzureIpResource'\n\n    CreatedControlledAzureStorage:\n      description: Response payload for requesting a new Azure storage account\n      type: object\n      properties:\n        resourceId:\n          description: UUID of a newly-created resource.\n          type: string\n          format: uuid\n        azureStorage:\n          $ref: '#/components/schemas/AzureStorageResource'\n\n    CreatedControlledAzureDisk:\n      description: Response payload for requesting a new Azure disk\n      type: object\n      properties:\n        resourceId:\n          description: UUID of a newly-created resource.\n          type: string\n          format: uuid\n        azureDisk:\n          $ref: '#/components/schemas/AzureDiskResource'\n\n    CreatedControlledAzureNetwork:\n      description: Response payload for requesting a new azure network\n      type: object\n      properties:\n        resourceId:\n          description: UUID of a newly-created resource.\n          type: string\n          format: uuid\n        azureNetwork:\n          $ref: '#/components/schemas/AzureNetworkResource'\n\n    CreatedControlledAzureVm:\n      description: Api result class for creating A new Azure VM\n      type: object\n      properties:\n        resourceId:\n          description: UUID of a newly-created resource.\n          type: string\n          format: uuid\n        azureVm:\n          $ref: '#/components/schemas/AzureVmResource'\n\n    GcpGcsBucketCreationParameters:\n      description: \u003e-\n        Bucket-specific properties to be set on creation. These are a subset of the\n        values accepted by the Gcp Storage API.\n      type: object\n      properties:\n        name:\n          description: A valid bucket name per https://cloud.google.com/storage/docs/naming-buckets.\n          type: string\n        location:\n          description: A valid bucket location per https://cloud.google.com/storage/docs/locations.\n          type: string\n        defaultStorageClass:\n          $ref: '#/components/schemas/GcpGcsBucketDefaultStorageClass'\n        lifecycle:\n          $ref: '#/components/schemas/GcpGcsBucketLifecycle'\n\n    GcpGcsBucketUpdateParameters:\n      description: \u003e-\n        Parameters that may be changed by a user. Location and Bucket name are fixed upon create.\n      type: object\n      properties:\n        defaultStorageClass:\n          $ref: '#/components/schemas/GcpGcsBucketDefaultStorageClass'\n        lifecycle:\n          $ref: '#/components/schemas/GcpGcsBucketLifecycle'\n\n    GcpGcsBucketDefaultStorageClass:\n      description: \u003e-\n        Type and availability of objects in a bucket, described at https://cloud.google.com/storage/docs/storage-classes.\n        This list does not include legacy types that apply to some existing buckets.\n      type: string\n      enum:\n        - STANDARD\n        - NEARLINE\n        - COLDLINE\n        - ARCHIVE\n    GcpGcsBucketLifecycle:\n      description: \u003e-\n        Options to control automatic deletion or storage class change for a bucket.\n        Described at https://cloud.google.com/storage/docs/lifecycle.\n      type: object\n      required: [rules]\n      properties:\n        rules:\n          description: List of rules for this bucket\n          type: array\n          items:\n            $ref: '#/components/schemas/GcpGcsBucketLifecycleRule'\n\n    GcpGcsBucketLifecycleRule:\n      description: A lifecycle rule for a bucket.\n      type: object\n      required: [action]\n      properties:\n        action:\n          $ref: '#/components/schemas/GcpGcsBucketLifecycleRuleAction'\n        condition:\n          $ref: '#/components/schemas/GcpGcsBucketLifecycleRuleCondition'\n\n    GcpGcsBucketLifecycleRuleAction:\n      description: The lifecycle action to take. See https://cloud.google.com/storage/docs/lifecycle#actions.\n      type: object\n      required: [type]\n      properties:\n        storageClass:\n          $ref: '#/components/schemas/GcpGcsBucketDefaultStorageClass'\n        type:\n          $ref: '#/components/schemas/GcpGcsBucketLifecycleRuleActionType'\n\n    GcpGcsBucketLifecycleRuleActionType:\n      description: \u003e-\n        Type of action to perform. Formatted like our Java enums, but spelled in Camel case in Gcp API.\n      type: string\n      enum:\n        - DELETE\n        - SET_STORAGE_CLASS\n\n    GcpGcsBucketLifecycleRuleCondition:\n      description: The condition(s) under which the action will be taken.\n      type: object\n      properties:\n        age:\n          description: Age of an object (in days). This condition is satisfied when an object reaches the specified age.\n          type: integer\n        createdBefore:\n          description: This condition is satisfied when an object is created before midnight of the specified date in UTC.\n          type: string\n          format: date-time\n        customTimeBefore:\n          description: \u003e-\n            This condition is satisfied when the customTime metadata for the object is set to an\n            earlier date than the date used in this lifecycle condition.\n          type: string\n          format: date-time\n        daysSinceCustomTime:\n          description: \u003e-\n            Days since the date set in the customTime metadata for the object. This condition is\n            satisfied when the current date and time is at least the specified number of days after\n            the customTime.\n          type: integer\n        daysSinceNoncurrentTime:\n          description: \u003e-\n            Relevant only for versioned objects. This condition is satisfied when an object has\n            been noncurrent for more than the specified number of days.\n          type: integer\n        live:\n          description: \u003e-\n            Relevant only for versioned objects. If the value is true, this condition matches the\n            live version of objects; if the value is false, it matches noncurrent versions of objects.\n          type: boolean\n        matchesStorageClass:\n          description: \u003e-\n            Objects having any of the storage classes specified by this condition will be matched.\n            Values include \"STANDARD\", \"NEARLINE\", \"COLDLINE\", \"ARCHIVE\", \"MULTI_REGIONAL\",\n            \"REGIONAL\", and \"DURABLE_REDUCED_AVAILABILITY\".\n          type: array\n          items:\n            $ref: '#/components/schemas/GcpGcsBucketDefaultStorageClass'\n        noncurrentTimeBefore:\n          description: \u003e-\n            Relevant only for versioned objects. This condition is satisfied for objects that became\n            noncurrent on a date prior to the one specified in this condition.\n          type: string\n          format: date-time\n        numNewerVersions:\n          description: \u003e-\n            Relevant only for versioned objects. If the value is N, this condition is satisfied\n            when there are at least N versions (including the live version) newer than this version\n            of the object.\n          type: integer\n\n    CloneControlledGcpGcsBucketRequest:\n      description: \u003e-\n        Values to assign to the cloned bucket for a given source bucket. Leave\n        name and description null to take the source object's values.\n      type: object\n      required: [destinationWorkspaceId, jobControl]\n      properties:\n        destinationWorkspaceId:\n          description: ID of workspace to be cloned into\n          type: string\n          format: uuid\n        cloningInstructions:\n          $ref: \"#/components/schemas/CloningInstructionsEnum\"\n        name:\n          $ref: \"#/components/schemas/Name\"\n        description:\n          type: string\n        bucketName:\n          description: \u003e-\n            Name of created bucket (not the resource name). This name must\n            be globally unique, so it can't be a copy of the original bucket name.\n            It also can't be a simple formula like copy-of-bucket-name, as that would\n            fail on subsequent clone operations with bucket-name as the source bucket.\n            If null, a random bucket name will be created.\n          type: string\n        location:\n          description: \u003e-\n            A valid bucket location per https://cloud.google.com/storage/docs/locations.\n            If null, will use source bucket's location.\n          type: string\n        jobControl:\n          $ref: '#/components/schemas/JobControl'\n    ClonedControlledGcpGcsBucket:\n      description: \u003e-\n        Response object for clone of a GCS Bucket. Destination workspace and\n        resource IDs are available in the bucket's metadata object. TODO: generalize so there's a\n        single response type for all resource clones?\n      type: object\n      properties:\n        effectiveCloningInstructions:\n          $ref: '#/components/schemas/CloningInstructionsEnum'\n        sourceWorkspaceId:\n          description: ID of the workspace of the source resource for this clone\n          type: string\n          format: uuid\n        sourceResourceId:\n          description: ID of the source resource\n          type: string\n          format: uuid\n        bucket:\n          $ref: \"#/components/schemas/CreatedControlledGcpGcsBucket\"\n    CloneControlledGcpGcsBucketResult:\n      description: \u003e-\n        API result class for cloning a GCS bucket.\n      type: object\n      properties:\n        bucket:\n          $ref: '#/components/schemas/ClonedControlledGcpGcsBucket'\n        jobReport:\n          $ref: '#/components/schemas/JobReport'\n        errorReport:\n          $ref: '#/components/schemas/ErrorReport'\n    CloneReferencedGcpGcsBucketResourceResult:\n      description: \u003e-\n        API result class for cloning a referenced GCS Bucket resource. Includes source workspace\n        and resource IDs for provenance. If the effective cloning instructions are not\n        COPY_REFERENCE, then no clone is created and the resource is null.\n      type: object\n      properties:\n        effectiveCloningInstructions:\n          $ref: '#/components/schemas/CloningInstructionsEnum'\n        sourceWorkspaceId:\n          description: ID of the workspace of the source resource for this clone\n          type: string\n          format: uuid\n        sourceResourceId:\n          description: ID of the source resource\n          type: string\n          format: uuid\n        resource:\n          $ref: '#/components/schemas/GcpGcsBucketResource'\n    CloneReferencedGcpGcsObjectResourceResult:\n      description: \u003e-\n        API result class for cloning a referenced GCS object resource. Includes source workspace\n        and resource IDs for provenance. If the effective cloning instructions are not\n        COPY_REFERENCE, then no clone is created and the resource is null.\n      type: object\n      properties:\n        effectiveCloningInstructions:\n          $ref: '#/components/schemas/CloningInstructionsEnum'\n        sourceWorkspaceId:\n          description: ID of the workspace of the source resource for this clone\n          type: string\n          format: uuid\n        sourceResourceId:\n          description: ID of the source resource\n          type: string\n          format: uuid\n        resource:\n          $ref: '#/components/schemas/GcpGcsObjectResource'\n    CloneReferencedGcpBigQueryDatasetResourceResult:\n      description: \u003e-\n        API result class for cloning a referenced BigQuery dataset resource. Includes source workspace\n        and resource IDs for provenance. If the effective cloning instructions are not\n        COPY_REFERENCE, then no clone is created and the resource is null.\n      type: object\n      properties:\n        effectiveCloningInstructions:\n          $ref: '#/components/schemas/CloningInstructionsEnum'\n        sourceWorkspaceId:\n          description: ID of the workspace of the source resource for this clone\n          type: string\n          format: uuid\n        sourceResourceId:\n          description: ID of the source resource\n          type: string\n          format: uuid\n        resource:\n          $ref: '#/components/schemas/GcpBigQueryDatasetResource'\n    CloneReferencedGcpBigQueryDataTableResourceResult:\n      description: \u003e-\n        API result class for cloning a referenced BigQuery data table resource. Includes source workspace\n        and resource IDs for provenance. If the effective cloning instructions are not\n        COPY_REFERENCE, then no clone is created and the resource is null.\n      type: object\n      properties:\n        effectiveCloningInstructions:\n          $ref: '#/components/schemas/CloningInstructionsEnum'\n        sourceWorkspaceId:\n          description: ID of the workspace of the source resource for this clone\n          type: string\n          format: uuid\n        sourceResourceId:\n          description: ID of the source resource\n          type: string\n          format: uuid\n        resource:\n          $ref: '#/components/schemas/GcpBigQueryDataTableResource'\n    CloneReferencedGcpDataRepoSnapshotResourceResult:\n      description: \u003e-\n        API result class for cloning a referenced Data Repo snapshot resource. Includes source workspace\n        and resource IDs for provenance. If the effective cloning instructions are not\n        COPY_REFERENCE, then no clone is created and the resource is null.\n      type: object\n      properties:\n        effectiveCloningInstructions:\n          $ref: '#/components/schemas/CloningInstructionsEnum'\n        sourceWorkspaceId:\n          description: ID of the workspace of the source resource for this clone\n          type: string\n          format: uuid\n        sourceResourceId:\n          description: ID of the source resource\n          type: string\n          format: uuid\n        resource:\n          $ref: '#/components/schemas/DataRepoSnapshotResource'\n    CloneReferencedGitRepoResourceResult:\n      description: \u003e-\n        API result class for cloning a referenced Git repo resource. Includes source workspace\n        and resource IDs for provenance. If the effective cloning instructions are not\n        COPY_REFERENCE, then no clone is created and the resource is null.\n      type: object\n      properties:\n        effectiveCloningInstructions:\n          $ref: '#/components/schemas/CloningInstructionsEnum'\n        sourceWorkspaceId:\n          description: ID of the workspace of the source resource for this clone\n          type: string\n          format: uuid\n        sourceResourceId:\n          description: ID of the source resource\n          type: string\n          format: uuid\n        resource:\n          $ref: '#/components/schemas/GitRepoResource'\n    GcpBigQueryDatasetCreationParameters:\n      description: \u003e-\n        Dataset-specific properties to be set on creation. These are a subset of the\n        values accepted by the BigQuery API.\n      type: object\n      properties:\n        datasetId:\n          description: A valid dataset name per https://cloud.google.com/bigquery/docs/datasets#dataset-naming\n          type: string\n        location:\n          description: A valid dataset location per https://cloud.google.com/bigquery/docs/locations.\n          type: string\n        defaultTableLifetime:\n          description: Optional. Default lifetime (in seconds) for newly created tables.\n          type: integer\n        defaultPartitionLifetime:\n          description: Optional. Default lifetime (in seconds) for partitions in newly created partitioned tables.\n          type: integer\n    GcpBigQueryDatasetUpdateParameters:\n      description: \u003e-\n        Parameters that may be changed by a user. Location and dataset id are fixed upon create.\n      properties:\n        defaultTableLifetime:\n          description:  \u003e-\n            Optional. Default lifetime (in seconds) for newly created tables.\n            Specify zero (0) to unset an existing value.\n            The default table lifetime will not be updated if this is omitted.\n          type: integer\n        defaultPartitionLifetime:\n          description:  \u003e-\n            Optional. Default lifetime (in seconds) for partitions in newly created partitioned tables.\n            Specify zero (0) to unset an existing value.\n            The default partition lifetime will not be updated if this is omitted.\n          type: integer\n\n    CloneControlledGcpBigQueryDatasetRequest:\n      description: \u003e-\n        Values to assign to the cloned dataset for a given source dataset. Leave\n        name and description null to take the source object's values.\n      type: object\n      required: [destinationWorkspaceId, jobControl]\n      properties:\n        destinationWorkspaceId:\n          description: ID of workspace to be cloned into\n          type: string\n          format: uuid\n        destinationDatasetName:\n          description: Name for destination dataset. Letters, numbers and underscores only.\n          type: string\n        cloningInstructions:\n          $ref: \"#/components/schemas/CloningInstructionsEnum\"\n        name:\n          $ref: \"#/components/schemas/Name\"\n        description:\n          type: string\n        location:\n          description: \u003e-\n            A valid dataset location per https://cloud.google.com/bigquery/docs/locations.\n            If null, will use source dataset's location.\n          type: string\n        jobControl:\n          $ref: '#/components/schemas/JobControl'\n    CloneControlledGcpBigQueryDatasetResult:\n      description: Result of successful BigQuery dataset clone\n      type: object\n      properties:\n        dataset:\n          $ref: '#/components/schemas/ClonedControlledGcpBigQueryDataset'\n        jobReport:\n          $ref: '#/components/schemas/JobReport'\n        errorReport:\n          $ref: '#/components/schemas/ErrorReport'\n    ClonedControlledGcpBigQueryDataset:\n      description: \u003e-\n        Response object for clone of a BigQuery dataset. Destination workspace and\n        resource IDs are available in the bucket's metadata object.\n      type: object\n      properties:\n        effectiveCloningInstructions:\n          $ref: '#/components/schemas/CloningInstructionsEnum'\n        sourceWorkspaceId:\n          description: ID of the workspace of the source resource for this clone\n          type: string\n          format: uuid\n        sourceResourceId:\n          description: ID of the source resource\n          type: string\n          format: uuid\n        dataset:\n          $ref: \"#/components/schemas/GcpBigQueryDatasetResource\"\n    CloneWorkspaceRequest:\n      description: \u003e-\n        Request body for cloning an entire workspace. The stage is always MC. Cloning instructions\n        are taken from individual resources.\n      type: object\n      required:\n        - spendProfile\n      properties:\n        displayName:\n          description: The human readable name of the workspace\n          type: string\n        description:\n          description: A description of the cloned workspace\n          type: string\n        spendProfile:\n          description: ID of provided spend profile\n          type: string\n        location:\n          description: \u003e-\n            GCP Location to use for cloud-based resources. If omitted, the location of the source\n            resource will be used.\n          type: string\n        properties:\n          $ref: '#/components/schemas/Properties'\n\n    CloneWorkspaceResult:\n      description: \u003e-\n        Response for workspace clone, including details on each controlled or referenced resource\n        either cloned or attempted to be cloned.\n      type: object\n      properties:\n        jobReport:\n          $ref: '#/components/schemas/JobReport'\n        errorReport:\n          $ref: '#/components/schemas/ErrorReport'\n        workspace:\n          $ref: '#/components/schemas/ClonedWorkspace'\n    ClonedWorkspace:\n      description: \u003e-\n        Flight result class for workspace clone. Indicates status for each resource\n        cloned (or skipped).\n      type: object\n      properties:\n        sourceWorkspaceId:\n          type: string\n          format: uuid\n        destinationWorkspaceId:\n          type: string\n          format: uuid\n        resources:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResourceCloneDetails'\n    ResourceCloneDetails:\n      description: \u003e-\n        A structure to give provenance of a controlled or referenced resource clone\n      type: object\n      properties:\n        cloningInstructions:\n          $ref: '#/components/schemas/CloningInstructionsEnum'\n        resourceType:\n          $ref: '#/components/schemas/ResourceType'\n        stewardshipType:\n          $ref: '#/components/schemas/StewardshipType'\n        sourceResourceId:\n          description: resource ID of the original resource\n          type: string\n          format: uuid\n        destinationResourceId:\n          description: resource ID of the cloned resource, or null if failed or skipped\n          type: string\n          format: uuid\n        result:\n          $ref: '#/components/schemas/CloneResourceResult'\n        errorMessage:\n          description: If result is FAILED, a short description of the cause, if available.\n          type: string\n        name:\n          description: name of the resource (same as source)\n          type: string\n        description:\n          description:  description of the destination resource (same as source)\n          type: string\n    CloneResourceResult:\n      type: string\n      enum:\n        - SUCCEEDED\n        - FAILED\n        - SKIPPED\n    DeleteControlledGcpGcsBucketRequest:\n      type: object\n      required: [ jobControl ]\n      properties:\n        jobControl:\n          $ref: '#/components/schemas/JobControl'\n\n    DeleteControlledAzureResourceRequest:\n      type: object\n      required: [ jobControl ]\n      properties:\n        jobControl:\n          $ref: '#/components/schemas/JobControl'\n\n    DeleteControlledAzureResourceResult:\n      type: object\n      properties:\n        jobReport:\n          $ref: '#/components/schemas/JobReport'\n        errorReport:\n          $ref: '#/components/schemas/ErrorReport'\n\n    DeleteControlledGcpGcsBucketResult:\n      type: object\n      properties:\n        jobReport:\n          $ref: '#/components/schemas/JobReport'\n        errorReport:\n          $ref: '#/components/schemas/ErrorReport'\n\n    CreatedControlledGcpAiNotebookInstanceResult:\n      type: object\n      properties:\n        jobReport:\n          $ref: '#/components/schemas/JobReport'\n        errorReport:\n          $ref: '#/components/schemas/ErrorReport'\n        aiNotebookInstance:\n          $ref: '#/components/schemas/GcpAiNotebookInstanceResource'\n\n    CreatedControlledAzureVmResult:\n      description: Api result class for creating an azure vm\n      type: object\n      properties:\n        azureVm:\n          $ref: '#/components/schemas/CreatedControlledAzureVm'\n        jobReport:\n          $ref: '#/components/schemas/JobReport'\n        errorReport:\n          $ref: '#/components/schemas/ErrorReport'\n\n    GcpAiNotebookInstanceCreationParameters:\n      description: \u003e-\n        AI Platform Notebook instance specific properties to be set on creation. These are a subset of the\n        values accepted by the GCP AI Platforms API. See https://cloud.google.com/ai-platform/notebooks/docs/reference/rest/v1/projects.locations.instances/create\n      type: object\n      required: [machineType]\n      properties:\n        instanceId:\n          description: \u003e-\n            An instanceId unique to this project and location. Must be 1-63 characters, using lower\n            case letters, numbers, and dashes. The first character must be a lower case letter,\n            and the last character must not be a dash.\n          type: string\n        location:\n          description: The canonical GCP id for this location. For example, \\'us-east1\\'.\n          type: string\n        postStartupScript:\n          description: \u003e-\n            Path to a Bash script that automatically runs after a notebook instance fully boots up.\n            If path is not specified, a default startup script will run to install NextFlow and Terra CLI\n            to the notebook instance.\n            The path must be a URL or Cloud Storage path (gs://path-to-file/file-name). If the path\n            is a cloud storage path, the created VM instance's service account's credentials is used\n            to access it.\n          type: string\n        machineType:\n          description: The Compute Engine machine type of this instance, see\n            https://cloud.google.com/compute/docs/machine-types\n          type: string\n        acceleratorConfig:\n          $ref: '#/components/schemas/GcpAiNotebookInstanceAcceleratorConfig'\n        installGpuDriver:\n          description: \u003e-\n            Whether the end user authorizes Google Cloud to install GPU driver on this instance. If\n            this field is empty or set to false, the GPU driver won't be installed. Only applicable\n            to instances with GPUs.\n          type: boolean\n        customGpuDriverPath:\n          description: \u003e-\n            Specify a custom Cloud Storage path where the GPU driver is stored. If not specified,\n            we'll automatically choose from official GPU drivers.\n          type: string\n        bootDiskType:\n          description: \u003e-\n            The type of the boot disk attached to this instance, defaults to standard persistent\n            disk (PD_STANDARD). See https://cloud.google.com/ai-platform/notebooks/docs/reference/rest/v1/projects.locations.instances#DiskType\n          type: string\n        bootDiskSizeGb:\n          description: \u003e-\n            Input only. The size of the boot disk in GB attached to this instance, up to a maximum\n            of 64000 GB (64 TB). The minimum recommended value is 100 GB. If not specified, this\n            defaults to 100.\n          type: integer\n          format: int64\n        dataDiskType:\n          description: \u003e-\n            Input only. The type of the data disk attached to this instance, defaults to standard\n            persistent disk (PD_STANDARD). See https://cloud.google.com/ai-platform/notebooks/docs/reference/rest/v1/projects.locations.instances#DiskType\n          type: string\n        dataDiskSizeGb:\n          description: \u003e-\n            Input only. The size of the data disk in GB attached to this instance, up to a maximum\n            of 64000 GB (64 TB). If not specified, this defaults to 100.\n          type: integer\n          format: int64\n        metadata:\n          description: \u003e-\n            Custom metadata to apply to this instance. Some metadata keys are reserved by Terra and\n            will throw a bad request error if specified: 'proxy-mode'.\n          type: object\n          additionalProperties:\n            type: string\n        vmImage:\n          $ref: '#/components/schemas/GcpAiNotebookInstanceVmImage'\n        containerImage:\n          $ref: '#/components/schemas/GcpAiNotebookInstanceContainerImage'\n\n    GcpAiNotebookInstanceAcceleratorConfig:\n      description: \u003e-\n        The hardware accelerator used on this instance. If you use accelerators, make sure that your\n        configuration has enough vCPUs and memory to support the machineType you have selected.\n        See https://cloud.google.com/ai-platform/notebooks/docs/reference/rest/v1/projects.locations.instances#AcceleratorConfig\n      type: object\n      required: [type, coreCount]\n      properties:\n        type:\n          description: Type of this accelerator\n          type: string\n        coreCount:\n          description: Count of cores of this accelerator.\n          type: integer\n          format: int64\n\n    GcpAiNotebookInstanceVmImage:\n      description: \u003e-\n        Either this or containerImage must be specified. Definition of a custom Compute Engine\n        virtual machine image for starting a notebook instance with the environment installed\n        directly on the VM. See\n        https://cloud.google.com/ai-platform/notebooks/docs/reference/rest/v1/VmImage\n      type: object\n      required: [projectId]\n      properties:\n        projectId:\n          description: \u003e-\n            The name of the Google Cloud project that this VM image belongs to. Format:\n            'projects/{project_id}'\n          type: string\n        imageName:\n          description: \u003e-\n            Either this or imageFamily must be specified. Use VM image name to find the image.\n          type: string\n        imageFamily:\n          description: \u003e-\n            Either this or imageName must be specified. Use this VM image family to find the image;\n            the newest image in this family will be used.\n          type: string\n\n    GcpAiNotebookInstanceContainerImage:\n      description: \u003e-\n        Either this or vmImage must be specified. Definition of a container image for starting a\n        notebook instance with the environment installed in a container. See\n        https://cloud.google.com/ai-platform/notebooks/docs/reference/rest/v1/ContainerImage\n      type: object\n      required: [repository]\n      properties:\n        repository:\n          description: \u003e-\n            Required. The path to the container image repository. For example:\n            'gcr.io/{project_id}/{imageName}'\n          type: string\n        tag:\n          description: \u003e-\n            The tag of the container image. If not specified, this defaults to the latest tag.\n          type: string\n\n    DeleteControlledGcpAiNotebookInstanceRequest:\n      type: object\n      required: [ jobControl ]\n      properties:\n        jobControl:\n          $ref: '#/components/schemas/JobControl'\n\n    DeleteControlledGcpAiNotebookInstanceResult:\n      type: object\n      properties:\n        jobReport:\n          $ref: '#/components/schemas/JobReport'\n        errorReport:\n          $ref: '#/components/schemas/ErrorReport'\n\n    ## Cloud Resource, Attribute, and Enumeration structures ##\n    ## Resources and attributes are in alphabetical order\n    ## followed by enumerations in alphabetical order.\n\n    ControlledResourceMetadata:\n      type: object\n      properties:\n        accessScope:\n          $ref: '#/components/schemas/AccessScope'\n        managedBy:\n          $ref: '#/components/schemas/ManagedBy'\n        privateResourceUser:\n          $ref: '#/components/schemas/PrivateResourceUser'\n        privateResourceState:\n          $ref: '#/components/schemas/PrivateResourceState'\n\n    DataRepoSnapshotAttributes:\n      description: Attributes of a data repository snapshot\n      type: object\n      required: [instanceName, snapshot]\n      properties:\n        instanceName:\n          description: The name of the Data Repo instance\n          type: string\n        snapshot:\n          description: The ID of the Data Repo snapshot\n          type: string\n\n    DataRepoSnapshotResource:\n      deprecated: true\n      type: object\n      description: A Data Repo snapshot resource\n      required: [metadata, snapshot]\n      properties:\n        metadata:\n          description: the resource metadata common to all resources\n          $ref: '#/components/schemas/ResourceMetadata'\n        attributes:\n          $ref: '#/components/schemas/DataRepoSnapshotAttributes'\n\n    GcpBigQueryDataTableAttributes:\n      description: Attributes of a BigQuery data table\n      type: object\n      required: [ projectId, datasetId, dataTableId ]\n      properties:\n        projectId:\n          type: string\n        datasetId:\n          type: string\n        dataTableId:\n          type: string\n\n    GcpBigQueryDataTableResource:\n      type: object\n      description: A reference to a BigQuery data table.\n      required: [ metadata, dataTable ]\n      properties:\n        metadata:\n          description: the resource metadata common to all resources\n          $ref: '#/components/schemas/ResourceMetadata'\n        attributes:\n          $ref: '#/components/schemas/GcpBigQueryDataTableAttributes'\n\n    GcpBigQueryDatasetAttributes:\n      description: Attributes of a BigQuery dataset\n      type: object\n      required: [projectId, datasetId]\n      properties:\n        projectId:\n          type: string\n        datasetId:\n          type: string\n\n    GcpBigQueryDatasetResource:\n      type: object\n      description: A reference to a BigQuery dataset.\n      required: [metadata, attributes]\n      properties:\n        metadata:\n          description: the resource metadata common to all resources\n          $ref: '#/components/schemas/ResourceMetadata'\n        attributes:\n          $ref: '#/components/schemas/GcpBigQueryDatasetAttributes'\n\n    GcpGcsObjectAttributes:\n      description: \u003e-\n        GCS object properties included in post-creation, get, and update. Others must be\n        retrieved from GCS using the name.\n      type: object\n      required: [ bucketName, fileName ]\n      properties:\n        bucketName:\n          description: Name of created bucket (not the resource name).\n          type: string\n        fileName:\n          description: Full path to the file in the gcs bucket.\n          type: string\n\n    GcpGcsObjectResource:\n      type: object\n      description: Description of a GCS object.\n      required: [ metadata, attributes ]\n      properties:\n        metadata:\n          description: the resource metadata common to all resources\n          $ref: '#/components/schemas/ResourceMetadata'\n        attributes:\n          $ref: '#/components/schemas/GcpGcsObjectAttributes'\n\n    GitRepoAttributes:\n      description: Attributes of a Git repository\n      type: object\n      required: [ gitRepoUrl ]\n      properties:\n        gitRepoUrl:\n          description: URL for cloning the git repository, could be an HTTPs or SSH url.\n          type: string\n\n    GitRepoResource:\n      type: object\n      description: A git repository resource\n      required: [ metadata, attributes ]\n      properties:\n        metadata:\n          description:  the resource metadata common to all resources\n          $ref: '#/components/schemas/ResourceMetadata'\n        attributes:\n          $ref: '#/components/schemas/GitRepoAttributes'\n\n    AzureIpAttributes:\n      description: \u003e-\n        IP properties included in post-creation get. Others must be retrieved from Azure using the name.\n      type: object\n      properties:\n        ipName:\n          description: Name of created ip (not the resource name).\n          type: string\n        region:\n          description: Azure region of created ip\n          type: string\n\n    AzureStorageAttributes:\n      description: \u003e-\n        Storage properties included in post-creation get.\n      type: object\n      properties:\n        storageAccountName:\n          description: Name of the storage account.\n          type: string\n        region:\n          description: Azure region of created storage account.\n          type: string\n\n    AzureDiskAttributes:\n      description: \u003e-\n        Disk properties included in post-creation get and update. Others must be retrieved from Azure using the name.\n      type: object\n      properties:\n        diskName:\n          description: Name of created disk (not the resource name).\n          type: string\n        region:\n          description: Azure region of created disk\n          type: string\n\n    AzureNetworkAttributes:\n      description: \u003e-\n        Network properties included in post-creation get and update. Others must be retrieved from Azure using the name.\n      type: object\n      properties:\n        networkName:\n          description: Name of created network (not the resource name).\n          type: string\n        subnetName:\n          description: Name of created subnetwork (not the resource name).\n          type: string\n        addressSpaceCidr:\n          description: Name of created addressSpaceCidr (not the resource name).\n          type: string\n        subnetAddressCidr:\n          description: Name of created subnetAddressCidr (not the resource name).\n          type: string\n        region:\n          description: Azure region of created Network\n          type: string\n\n    AzureVmAttributes:\n      description: \u003e-\n        Vm properties included in post-creation get and update. Others must be retrieved from Azure using the name.\n      type: object\n      properties:\n        vmName:\n          description: Name of created vm (not the resource name).\n          type: string\n        region:\n          description: Azure region of created vm\n          type: string\n        vmSize:\n          description: A valid image size as per com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes\n          type: string\n        vmImageUri:\n          description: A valid image Uri. Must be in the same region specified. E.x. /subscriptions/3efc5bdf-be0e-44e7-b1d7-c08931e3c16c/resourceGroups/mrg-qi-1-preview-20210517084351/providers/Microsoft.Compute/galleries/msdsvm/images/customized_ms_dsvm/versions/0.0.4\n          type: string\n        ipId:\n          description: A valid WSM identifier for an Azure Ip that corresponds to a valid azure resource\n          type: string\n          format: uuid\n        diskId:\n          description: A valid WSM identifier for an Azure Disk that corresponds to a valid azure resource\n          type: string\n          format: uuid\n        networkId:\n          description: A valid WSM identifier for an Azure Network that corresponds to a valid azure resource\n          type: string\n          format: uuid\n\n    GcpGcsBucketAttributes:\n      description: \u003e-\n        Bucket properties included in post-creation, get, and update. Others must be\n        retrieved from GCS using the name.\n      type: object\n      required: [bucketName]\n      properties:\n        bucketName:\n          description: Name of created bucket (not the resource name).\n          type: string\n\n    GcpGcsBucketResource:\n      type: object\n      description: Description of a GCS bucket.\n      required: [metadata, attributes]\n      properties:\n        metadata:\n          description: the resource metadata common to all resources\n          $ref: '#/components/schemas/ResourceMetadata'\n        attributes:\n          $ref: '#/components/schemas/GcpGcsBucketAttributes'\n\n    AzureIpResource:\n      type: object\n      description: Description of an Azure Ip\n      required: [metadata, attributes]\n      properties:\n        metadata:\n          description: the resource metadata common to all resources\n          $ref: '#/components/schemas/ResourceMetadata'\n        attributes:\n          $ref: '#/components/schemas/AzureIpAttributes'\n\n    AzureStorageResource:\n      type: object\n      description: Description of an Azure storage account.\n      required: [ metadata, attributes ]\n      properties:\n        metadata:\n          description: the resource metadata common to all resources\n          $ref: '#/components/schemas/ResourceMetadata'\n        attributes:\n          $ref: '#/components/schemas/AzureStorageAttributes'\n\n    AzureDiskResource:\n      type: object\n      description: Description of an Azure disk\n      required: [metadata, attributes]\n      properties:\n        metadata:\n          description: the resource metadata common to all resources\n          $ref: '#/components/schemas/ResourceMetadata'\n        attributes:\n          $ref: '#/components/schemas/AzureDiskAttributes'\n\n    AzureNetworkResource:\n      type: object\n      description: Description of an Azure Network\n      required: [ metadata, attributes ]\n      properties:\n        metadata:\n          description: the resource metadata common to all resources\n          $ref: '#/components/schemas/ResourceMetadata'\n        attributes:\n          $ref: '#/components/schemas/AzureNetworkAttributes'\n\n    AzureVmResource:\n      type: object\n      description: Description of an Azure vm\n      required: [metadata, attributes]\n      properties:\n        metadata:\n          description: the resource metadata common to all resources\n          $ref: '#/components/schemas/ResourceMetadata'\n        attributes:\n          $ref: '#/components/schemas/AzureVmAttributes'\n\n    GcpAiNotebookInstanceAttributes:\n      description: \u003e-\n        AI Notebook instance properties included in post-creation, get, and update. Others must be\n        retrieved from GCP using the specification.\n      type: object\n      required: [projectId, location, instanceId]\n      properties:\n        projectId:\n          description: The GCP project id for the project containing the notebook instance.\n          type: string\n        location:\n          description: The GCP location containing the notebook instance, e.g. 'us-east1-b'\n          type: string\n        instanceId:\n          description: An instance id unique to this project and location.\n          type: string\n\n    GcpAiNotebookInstanceResource:\n      type: object\n      description: Description of a AI Notebook Instance resource.\n      required: [metadata, attributes]\n      properties:\n        metadata:\n          description: the resource metadata common to all resources\n          $ref: '#/components/schemas/ResourceMetadata'\n        attributes:\n          $ref: '#/components/schemas/GcpAiNotebookInstanceAttributes'\n\n    ResourceAttributesUnion:\n      type: object\n      description: |\n        This object contains a reference to an object for each resource type.\n        Exactly one will be populated based on the ResourceType in the\n        ResourceDescription. The value of the other references is undefined.\n      properties:\n        gcpBqDataset:\n          $ref: '#/components/schemas/GcpBigQueryDatasetAttributes'\n        gcpBqDataTable:\n          $ref: '#/components/schemas/GcpBigQueryDataTableAttributes'\n        gcpDataRepoSnapshot:\n          $ref: '#/components/schemas/DataRepoSnapshotAttributes'\n        gcpGcsBucket:\n          $ref: '#/components/schemas/GcpGcsBucketAttributes'\n        gcpGcsObject:\n          $ref: '#/components/schemas/GcpGcsObjectAttributes'\n        gcpAiNotebookInstance:\n          $ref: '#/components/schemas/GcpAiNotebookInstanceAttributes'\n        azureDisk:\n          $ref: '#/components/schemas/AzureDiskAttributes'\n        azureIp:\n          $ref: '#/components/schemas/AzureIpAttributes'\n        azureNetwork:\n          $ref: '#/components/schemas/AzureNetworkAttributes'\n        azureStorage:\n          $ref: '#/components/schemas/AzureStorageAttributes'\n        azureVm:\n          $ref: '#/components/schemas/AzureVmAttributes'\n        gitRepo:\n          $ref: '#/components/schemas/GitRepoAttributes'\n\n    ResourceDescription:\n      type: object\n      required: [metadata, resourceAttributes]\n      properties:\n        metadata:\n          description: the resource metadata common to all resources\n          $ref: '#/components/schemas/ResourceMetadata'\n        resourceAttributes:\n          description: Data specific to the type of resource and whether it is controlled or not\n          $ref: '#/components/schemas/ResourceAttributesUnion'\n\n    ResourceList:\n      type: object\n      required: [resources]\n      properties:\n        resources:\n          description: Enumerated list of controlled and referenced resources\n          type: array\n          items:\n            $ref: '#/components/schemas/ResourceDescription'\n\n    ResourceMetadata:\n      type: object\n      properties:\n        workspaceId:\n          type: string\n          format: uuid\n        resourceId:\n          type: string\n          format: uuid\n        name:\n          $ref: \"#/components/schemas/Name\"\n        description:\n          type: string\n        resourceType:\n          $ref: '#/components/schemas/ResourceType'\n        stewardshipType:\n          $ref: '#/components/schemas/StewardshipType'\n        cloudPlatform:\n          $ref: '#/components/schemas/CloudPlatform'\n        cloningInstructions:\n          $ref: '#/components/schemas/CloningInstructionsEnum'\n        controlledResourceMetadata:\n          description: Present if stewardship type is CONTROLLED\n          $ref: '#/components/schemas/ControlledResourceMetadata'\n\n    PetServiceAccount:\n      description: The email identifier of a pet service account\n      type: string\n\n    # Enumerations (related to resources) in alphabetical order.\n    AccessScope:\n      type: string\n      description: Specifies the resource as shared or private\n      enum: ['SHARED_ACCESS', 'PRIVATE_ACCESS']\n\n    CloudPlatform:\n      type: string\n      description: Enum representing a cloud platform type.\n      enum: ['AZURE', 'GCP']\n\n    CloningInstructionsEnum:\n      type: string\n      description: Instructions for copying this reference when cloning the workspace\n      enum: ['COPY_NOTHING', 'COPY_DEFINITION', 'COPY_RESOURCE', 'COPY_REFERENCE']\n\n    ManagedBy:\n      type: string\n      description: Specifies the controller of the resource, workspace users or an application\n      enum: [ 'USER', 'APPLICATION' ]\n\n    # The resource types are common to both stewardship types\n    ResourceType:\n      description: Enum containing valid resource types. Used for enumeration\n      type: string\n      enum:\n        - AI_NOTEBOOK\n        - BIG_QUERY_DATASET\n        - BIG_QUERY_DATA_TABLE\n        - DATA_REPO_SNAPSHOT\n        - GCS_BUCKET\n        - GCS_OBJECT\n        - AZURE_IP\n        - AZURE_DISK\n        - AZURE_NETWORK\n        - AZURE_VM\n        - AZURE_STORAGE_ACCOUNT\n        - GIT_REPO\n\n    StewardshipType:\n      description: Enum containing valid stewardship types. Used for enumeration\n      type: string\n      enum: ['REFERENCED', 'CONTROLLED']\n\n    ## ALPHA1 schemas\n    ## These schemas are only by alpha1 paths\n    ResourceUnion:\n      type: object\n      description: |\n        This object contains a reference to an object for each resource type.\n        Exactly one will be populated based on its ResourceType.\n      properties:\n        gcpBqDataset:\n          $ref: '#/components/schemas/GcpBigQueryDatasetResource'\n        gcpBqDataTable:\n          $ref: '#/components/schemas/GcpBigQueryDataTableResource'\n        gcpDataRepoSnapshot:\n          $ref: '#/components/schemas/DataRepoSnapshotResource'\n        gcpGcsBucket:\n          $ref: '#/components/schemas/GcpGcsBucketResource'\n        gcpGcsObject:\n          $ref: '#/components/schemas/GcpGcsObjectResource'\n        gcpAiNotebookInstance:\n          $ref: '#/components/schemas/GcpAiNotebookInstanceResource'\n        azureIp:\n          $ref: '#/components/schemas/AzureIpResource'\n        azureDisk:\n          $ref: '#/components/schemas/AzureDiskResource'\n        azureNetwork:\n          $ref: '#/components/schemas/AzureNetworkResource'\n        azureVm:\n          $ref: '#/components/schemas/AzureVmResource'\n        azureStorageAccount:\n          $ref: '#/components/schemas/AzureStorageResource'\n        gitRepo:\n          $ref: '#/components/schemas/GitRepoResource'\n\n    OperationType:\n      type: string\n      description: Types of job operations\n      enum: [ 'CLONE', 'CREATE', 'DELETE', 'UPDATE', 'UNKNOWN' ]\n\n    EnumeratedJob:\n      description: |\n        One job returned by the enumerate jobs request. The jobReport is always present.\n        If the job failed, the error report is present. Depending on the operation, the\n        resource information\n      type: object\n      properties:\n        jobReport:\n          $ref: '#/components/schemas/JobReport'\n        errorReport:\n          $ref: '#/components/schemas/ErrorReport'\n        jobDescription:\n          type: string\n        operationType:\n          $ref: '#/components/schemas/OperationType'\n        resourceType:\n          $ref: '#/components/schemas/ResourceType'\n        resource:\n          $ref: '#/components/schemas/ResourceUnion'\n\n    EnumerateJobsResult:\n      description: result of an enumerateJobs request\n      type: object\n      properties:\n        totalResults:\n          type: integer\n        pageToken:\n          type: string\n        results:\n          description: List of enumerated jobs\n          type: array\n          items:\n            $ref: '#/components/schemas/EnumeratedJob'\n\n  responses:\n    ### DEPRECATED RESPONSES ###\n    # TODO(PF-404): remove this in favor of reference-type specific objects.\n    DataReferenceResponse:\n      description: Response to getDataReference calls\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DataReferenceDescription'\n\n    # TODO(PF-404): remove this in favor of reference-type specific objects.\n    ReferenceListResponse:\n      description: Response to list resource calls\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DataReferenceList'\n    ### END OF DEPRECATED RESPONSES ###\n\n    EnablePetSaResponse:\n      description: Response to enablePet calls\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/PetServiceAccount'\n\n    CreatedWorkspaceResponse:\n      description: Response to createWorkspace calls\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreatedWorkspace'\n\n    DataRepoSnapshotReferenceResponse:\n      description: Response containing a reference to a Data Repo snapshot.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DataRepoSnapshotResource'\n\n    GcpGcsObjectReferenceResponse:\n      description: Response containing a reference to a Gcp GCS object.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GcpGcsObjectResource'\n\n    GcpGcsBucketReferenceResponse:\n      description: Response containing a reference to a Gcp bucket.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GcpGcsBucketResource'\n\n    GcpBigQueryDataTableReferenceResponse:\n      description: Response containing a reference to a BiqQuery data table.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GcpBigQueryDataTableResource'\n\n    GcpBigQueryDatasetReferenceResponse:\n      description: Response containing a reference to a BiqQuery dataset.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GcpBigQueryDatasetResource'\n\n    GitRepoReferenceResponse:\n      description: Response containing a reference to a git repository.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GitRepoResource'\n\n    RoleBindingListResponse:\n      description: Response to list permissions calls\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/RoleBindingList'\n\n    CreateControlledAzureStorageResponse:\n      description: Response to create controlled azure storage\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreatedControlledAzureStorage'\n\n    CreateControlledAzureIpResponse:\n      description: Response to create controlled azure ip\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreatedControlledAzureIp'\n\n    CreateControlledAzureDiskResponse:\n      description: Response to create controlled Azure disk\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreatedControlledAzureDisk'\n\n    CreateControlledAzureNetworkResponse:\n      description: Response to create controlled azure network\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreatedControlledAzureNetwork'\n\n    CreateControlledAzureVmResponse:\n      description: Response to create controlled Azure Vm\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreatedControlledAzureVmResult'\n\n    DeleteControlledAzureResourceResponse:\n      description: Response Payload for deleting an azure ip\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DeleteControlledAzureResourceResult'\n\n    GetControlledAzureIpResponse:\n      description: Response to get ip\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AzureIpResource'\n\n    GetControlledAzureNetworkResponse:\n      description: Response to get network\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AzureNetworkResource'\n\n    GetControlledAzureDiskResponse:\n      description: Response to get disk\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AzureDiskResource'\n\n    GetControlledAzureVmResponse:\n      description: Response to get vm\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AzureVmResource'\n\n    CreatedControlledGcpGcsBucketResponse:\n      description: Response to Create controlled Gcs bucket\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreatedControlledGcpGcsBucket'\n\n    ClonedControlledGcpGcsBucketResponse:\n      description: Response to GCS bucket clone operation.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CloneControlledGcpGcsBucketResult'\n\n    DeleteControlledGcpGcsBucketResponse:\n      description: Response Payload for deleting a Gcs bucket\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DeleteControlledGcpGcsBucketResult'\n\n    GetControlledGcpGcsBucketResponse:\n      description: Response to get bucket\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GcpGcsBucketResource'\n    UpdateControlledGcpGcsBucketResponse:\n      description: Reponse to GCP GCS Bucket update.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GcpGcsBucketResource' # TODO:  add other attributes\n    CreatedControlledGcpBigQueryDatasetResponse:\n      description: Response to Create controlled BigQuery dataset\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreatedControlledGcpBigQueryDataset'\n\n    ControlledGcpBigQueryDatasetResponse:\n      description: Response containing a controlled BigQuery dataset\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GcpBigQueryDatasetResource'\n\n    CreatedControlledGcpAiNotebookInstanceResponse:\n      description: Response to Create controlled resource\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreatedControlledGcpAiNotebookInstanceResult'\n\n    DeleteControlledGcpAiNotebookInstanceResponse:\n      description: Response Payload for deleting a Gcs bucket\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DeleteControlledGcpAiNotebookInstanceResult'\n\n    GetControlledGcpAiNotebookInstanceResponse:\n      description: Response to get AI Notebook instance.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GcpAiNotebookInstanceResource'\n\n    CreateCloudContextResultResponse:\n      description: Job is complete (succeeded or failed)\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateCloudContextResult'\n    CloneReferencedGcpGcsObjectResourceResponse:\n      description: Response for successful GCS object reference clone\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CloneReferencedGcpGcsObjectResourceResult'\n    CloneReferencedGcpGcsBucketResourceResponse:\n      description: Response for successful GCS Bucket reference clone\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CloneReferencedGcpGcsBucketResourceResult'\n    CloneReferencedGcpBigQueryDatasetResourceResponse:\n      description: Response for successful BigQuery dataset reference clone\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CloneReferencedGcpBigQueryDatasetResourceResult'\n    CloneReferencedGcpBigQueryDataTableResourceResponse:\n      description: Response for successful BigQuery data table reference clone\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CloneReferencedGcpBigQueryDataTableResourceResult'\n    CloneReferencedGcpDataRepoSnapshotResourceResponse:\n      description: Response for successful Data Repo Snapshot reference clone\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CloneReferencedGcpDataRepoSnapshotResourceResult'\n    CloneReferencedGitRepoResourceResponse:\n      description: Response for successful Git Repo resource reference clone\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CloneReferencedGitRepoResourceResult'\n    DisableApplicationResultResponse:\n      description: Response holding the disable application result\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DisableApplicationResult'\n\n    JobReportResponse:\n      description: A response containing a JobReport object. Returned for running jobs.\n      headers:\n        Retry-After:\n          description: \u003e-\n            optional - estimated seconds to wait before polling again. This allows\n            a server to offer a hint as to when the job might be complete.\n          schema:\n            type: integer\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/JobReport'\n\n    EnumerateResourcesResponse:\n      description: Listing of resources\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ResourceList'\n\n    CheckReferenceAccessResponse:\n      description: Whether the specified reference is accessible or not\n      content:\n        application/json:\n          schema:\n            type: boolean\n    CloneControlledGcpBigQueryDatasetResponse:\n      description: response to clone BigQuery dataset operation.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CloneControlledGcpBigQueryDatasetResult'\n    CloneWorkspaceResponse:\n      description: Response to clone workspace request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CloneWorkspaceResult'\n    # Error Responses\n    BadRequest:\n      description: Bad request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorReport'\n    PermissionDenied:\n      description: Permission denied\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorReport'\n    NotFound:\n      description: Not found (or unauthorized)\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorReport'\n    Conflict:\n      description: Request conflicts with current state\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorReport'\n    ServerError:\n      description: Server error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorReport'\n\n    ## ALPHA1 Responses\n    ## They are no compatibility guarantees. The responses may change without notice.\n    EnumerateJobsResponse:\n      description: Listing of recent jobs\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/EnumerateJobsResult'\n\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n    authorization:\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            openid: open id authorization\n            email: email authorization\n            profile: profile authorization\n    ## for AzurePoC - we do not do authn. Just accept the user email and objectId as user/pwd\n    basicAuth:\n      type: http\n      scheme: basic\n\nsecurity:\n  - bearerAuth: []\n  - authorization: [openid, email, profile]\n"
		}
	},
	"Error": "make ir: path \"/api/workspaces/v1/{workspaceId}/resources/referenced/gitrepos/{resourceId}\": get: responses: 200: contents: application/json: schema: field metadata: field name: string validator: pattern: error parsing regexp: invalid repeat count: `{0,1023}`"
}