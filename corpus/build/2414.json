{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/department-for-transport-BODS/bods"
		},
		"file": {
			"name": "swagger.yaml",
			"path": "docker/local/cavl_server/cavl_server/swagger/swagger.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  title: CAVL Config API\n  description: Used to configure feed consumers in the CAVL Service\n  contact:\n    email: greg.brown@itoworld.com\n  version: 0.1.0\nservers:\n  - url: https://cavl.api.itoworld.com/v0\n    description: CAVL Config API\npaths:\n  /feed:\n    get:\n      tags:\n        - feed\n      summary: Gets a list of feeds\n      operationId: get_feeds\n      responses:\n        \"200\":\n          description: Successful operation.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Feed\"\n                x-content-type: application/json\n        \"5XX\":\n          description: Unexpected error.\n      x-openapi-router-controller: cavl_server.controllers.feed_controller\n    post:\n      tags:\n        - feed\n      summary: Adds a new feed\n      operationId: add_feed\n      requestBody:\n        $ref: \"#/components/requestBodies/Feed\"\n      responses:\n        \"201\":\n          description: The feed was created.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/inline_response_201\"\n          links:\n            GetFeedById:\n              operationRef: getFeed\n              parameters:\n                feedId: $response.body#/id\n              description: |\n                The `id` value returned in the response can be used as the  `feedId` parameter in `GET /feed/{feedId}`\n            UpdateFeed:\n              operationRef: updateFeed\n              parameters:\n                feedId: $response.body#/id\n              description: |\n                The `id` value returned in the response can be used as the  `feedId` parameter in `POST /feed/{feedId}`\n            DeleteFeed:\n              operationRef: deleteFeed\n              parameters:\n                feedId: $response.body#/id\n              description: |\n                The `id` value returned in the response can be used as the  `feedId` parameter in `DELETE /feed/{feedId}`\n        \"409\":\n          description: A feed already exists with the specified ID.\n        \"422\":\n          description: Validation error.\n        \"5XX\":\n          description: Unexpected error.\n      x-openapi-router-controller: cavl_server.controllers.feed_controller\n  /feed/{feedId}:\n    get:\n      tags:\n        - feed\n      summary: Gets a feed by ID\n      description: Returns a single feed config\n      operationId: get_feed\n      parameters:\n        - name: feedId\n          in: path\n          description: The ID of feed to return\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Successful operation.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Feed\"\n        \"400\":\n          description: Bad request. The specified feed ID is invalid (not a number).\n        \"404\":\n          description: A feed with the specified ID was not found.\n        \"5XX\":\n          description: Unexpected error.\n      x-openapi-router-controller: cavl_server.controllers.feed_controller\n    post:\n      tags:\n        - feed\n      summary: Updates an existing feed with the specified ID with form data\n      operationId: update_feed_with_form\n      parameters:\n        - name: feedId\n          in: path\n          description: The ID of feed to update\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/body\"\n      responses:\n        \"204\":\n          description: The feed was updated.\n        \"400\":\n          description: Bad request. The specified feed ID is invalid (not a number).\n        \"404\":\n          description: A feed with the specified ID was not found.\n        \"422\":\n          description: Validation error.\n        \"5XX\":\n          description: Unexpected error.\n      x-openapi-router-controller: cavl_server.controllers.feed_controller\n    delete:\n      tags:\n        - feed\n      summary: Deletes the feed with the specified ID\n      operationId: delete_feed\n      parameters:\n        - name: feedId\n          in: path\n          description: The ID of the feed to delete\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: The feed was deleted.\n        \"400\":\n          description: Bad request. The specified feed ID is invalid (not a number).\n        \"404\":\n          description: A feed with the specified ID was not found.\n        \"5XX\":\n          description: Unexpected error.\n      x-openapi-router-controller: cavl_server.controllers.feed_controller\n  /validate:\n    post:\n      tags:\n        - validate\n      summary: Creates a validation task to validate a feed\n      operationId: validate_feed\n      requestBody:\n        $ref: \"#/components/requestBodies/ValidationTaskResult\"\n      responses:\n        \"200\":\n          description: Successful operation.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ValidationTaskResult\"\n        \"400\":\n          description: Bad request. The specified task ID is invalid (not a number).\n        \"404\":\n          description: A task with the specified ID was not found.\n        \"422\":\n          description: Validation error.\n        \"5XX\":\n          description: Unexpected error.\n      x-openapi-router-controller: cavl_server.controllers.validate_controller\ncomponents:\n  schemas:\n    Feed:\n      type: object\n      properties:\n        id:\n          type: integer\n        publisherId:\n          type: integer\n        url:\n          type: string\n          format: uri\n        username:\n          type: string\n        password:\n          type: string\n          format: password\n          writeOnly: true\n        status:\n          type: string\n          description: Feed Consumer Status\n          readOnly: true\n          default: DEPLOYING\n          enum:\n            - DEPLOYING\n            - SYSTEM_ERROR\n            - FEED_UP\n            - FEED_DOWN\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        modified:\n          type: string\n          format: date-time\n          readOnly: true\n      example:\n        publisherId: 6\n        password: \"\"\n        created: 2000-01-23T04:56:07.000+00:00\n        modified: 2000-01-23T04:56:07.000+00:00\n        id: 0\n        url: http://example.com/aeiou\n        username: username\n        status: DEPLOYING\n    ValidationTaskResult:\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n        username:\n          type: string\n          format: string\n        password:\n          type: string\n          format: password\n          writeOnly: true\n        status:\n          type: string\n          readOnly: true\n          default: DEPLOYING\n          enum:\n            - DEPLOYING\n            - SYSTEM_ERROR\n            - FEED_VALID\n            - FEED_INVALID\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n      example:\n        password: \"\"\n        created: 2000-01-23T04:56:07.000+00:00\n        url: http://example.com/aeiou\n        username: username\n        status: DEPLOYING\n    inline_response_201:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: ID of the created feed.\n      example:\n        id: 0\n    body:\n      type: object\n      properties:\n        url:\n          type: string\n          description: Updated url of the feed\n        username:\n          type: string\n          description: Updated username used to authenticate access to the SIRI feed\n        password:\n          type: string\n          description: Updated password used to authenticate access to the SIRI feed\n  requestBodies:\n    Feed:\n      description: Feed object that needs to be added to the consumer config\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Feed\"\n      required: true\n    ValidationTaskResult:\n      description:\n        ValidationTaskResult object that indicates the validity of the\n        feed\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ValidationTaskResult\"\n      required: true\n"
		}
	},
	"Error": "make ir: path \"/feed/{feedId}\": get: responses: parse response status code: strconv.Atoi: parsing \"5XX\": invalid syntax"
}