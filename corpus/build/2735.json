{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/knowgoio/knowgo-vehicle-simulator"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "docs/openapi.yaml",
			"content": "openapi: 3.0.0\nservers:\n  - description: Local Simulation Environment\n    url: http://localhost:8086\n  - description: SwaggerHub API Auto Mocking\n    url: https://virtserver.swaggerhub.com/KnowGo/knowgo-vehicle-simulator-api/1.2.0\ninfo:\n  description: |\n    This is a simple API for interacting with the KnowGo Vehicle Simulator. It\n    provides mechanisms for starting/stopping the simulated vehicle, sending\n    notifications to the vehicle, registering webhooks, and for obtaining\n    detailed information and generated telemetry from the vehicle.\n\n    It further offers the ability to submit external events in order to allow\n    the vehicle simulation state to be synchronized with external vehicle data,\n    allowing the simulated vehicle to act as a digital twin upon which\n    additional applications and services can be modelled.\n\n    Fine-grained access to vehicle data is provided through ISO 20078\n    Extended Vehicle (ExVe)-compatible API endpoints.\n  version: 1.2.0\n  title: KnowGo Vehicle Simulator API\n  contact:\n    email: labs@adaptant.io\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\nsecurity:\n  - bearerAuth: []\ntags:\n  - name: simulator\n    description: Vehicle Simulator APIs\n  - name: exve\n    description: ISO 20078 Extended Vehicle (ExVe) APIs\n  - name: fleet\n    description: Fleet APIs\npaths:\n  '/simulator/start':\n    post:\n      tags:\n        - simulator\n      summary: start the simulated vehicle\n      operationId: vehicleStart\n      description: Starts the running of the vehicle within the simulator\n      responses:\n        '200':\n          description: OK\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/simulator/stop':\n    post:\n      tags:\n        - simulator\n      summary: stop the simulated vehicle\n      operationId: vehicleStop\n      description: Stops the running of the vehicle within the simulator\n      responses:\n        '200':\n          description: OK\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/simulator/notification':\n    post:\n      tags:\n        - simulator\n      summary: send a notification to the simulated vehicle\n      operationId: vehicleNotify\n      description: Sends a notification to the simulated vehicle\n      requestBody:\n        description: Notification text to display\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/models.VehicleNotification'\n      responses:\n        '200':\n          description: OK\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/simulator/info':\n    get:\n      tags:\n        - simulator\n      summary: information about the simulated vehicle\n      operationId: getVehicleInfo\n      description: Obtain detailed information about the simulated vehicle.\n      responses:\n        '200':\n          description: vehicle details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/models.VehicleDetail'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/simulator/events':\n    get:\n      tags:\n        - simulator\n      summary: get simulated vehicle events\n      operationId: getVehicleEvents\n      description: |\n        Obtain detailed events from the simulated vehicle in its running state.\n      responses:\n        '200':\n          description: vehicle events\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/models.VehicleEvent'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n    post:\n      tags:\n        - simulator\n      summary: apply events to the simulated vehicle\n      operationId: addVehicleEvents\n      description: |\n        Submit a list of vehicle events to apply to the simulated vehicle. This\n        can be used for digital twinning, where the simulation model state can\n        be synchronized with external data sources.\n      requestBody:\n        description: Vehicle events to apply to the simulated vehicle\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/models.VehicleEvent'\n      responses:\n        '201':\n          description: Events successfully added\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/simulator/webhooks':\n    get:\n      tags:\n        - simulator\n      summary: get a list of available event triggers\n      operationId: getAvailableEventTriggers\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/webhooks'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n    post:\n      tags:\n        - simulator\n      summary: register a new event-triggered webhook\n      operationId: registerWebhook\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - webhooks\n                - notificationUrl\n              properties:\n                webhooks:\n                  $ref: '#/components/schemas/webhooks'\n                notificationUrl:\n                  type: string\n                  format: uri\n                  example: https://myserver/endpoint\n      callbacks:\n        automation_level_changed:\n          '{$request.body#/notificationUrl}':\n            post:\n              requestBody:\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      type: object\n                      required:\n                        - automation_level_changed\n                      properties:\n                        automation_level_changed:\n                          $ref: '#/components/schemas/webhooks.AutomationLevelChange'\n              responses:\n                '200':\n                  description: Notification accepted\n        driver_changed:\n          '{$request.body#/notificationUrl}':\n            post:\n              requestBody:\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      type: object\n                      required:\n                        - driver_changed\n                      properties:\n                        driver_changed:\n                          $ref: '#/components/schemas/webhooks.DriverChange'\n              responses:\n                '200':\n                  description: Notification accepted\n        journey_begin:\n          '{$request.body#/notificationUrl}':\n            post:\n              requestBody:\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      type: object\n                      required:\n                        - journey_begin\n                      properties:\n                        journey_begin:\n                          $ref: '#/components/schemas/webhooks.JourneyChange'\n              responses:\n                '200':\n                  description: Notification accepted\n        journey_end:\n          '{$request.body#/notificationUrl}':\n            post:\n              requestBody:\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      type: object\n                      required:\n                        - journey_end\n                      properties:\n                        journey_end:\n                          $ref: '#/components/schemas/webhooks.JourneyChange'\n              responses:\n                '200':\n                  description: Notification accepted\n        location_changed:\n          '{$request.body#/notificationUrl}':\n            post:\n              requestBody:\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      type: object\n                      required:\n                        - location_changed\n                      properties:\n                        location_changed:\n                          $ref: '#/components/schemas/webhooks.LocationChange'\n              responses:\n                '200':\n                  description: Notification accepted\n        ignition_changed:\n          '{$request.body#/notificationUrl}':\n            post:\n              requestBody:\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      type: object\n                      required:\n                        - ignition_changed\n                      properties:\n                        ignition_changed:\n                          $ref: '#/components/schemas/webhooks.IgnitionChange'\n              responses:\n                '200':\n                  description: Notification accepted\n        harsh_acceleration:\n          '{$request.body#/notificationUrl}':\n            post:\n              requestBody:\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      type: object\n                      required:\n                        - harsh_acceleration\n                      properties:\n                        harsh_acceleration:\n                          $ref: '#/components/schemas/webhooks.HarshPedalEvent'\n              responses:\n                '200':\n                  description: Notification accepted\n        harsh_braking:\n          '{$request.body#/notificationUrl}':\n            post:\n              requestBody:\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      type: object\n                      required:\n                        - harsh_braking\n                      properties:\n                        harsh_braking:\n                          $ref: '#/components/schemas/webhooks.HarshPedalEvent'\n              responses:\n                '200':\n                  description: Notification accepted\n      responses:\n        '201':\n          description: Webhook registered\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/webhooks.Subscription'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/simulator/webhooks/{subscriptionId}':\n    get:\n      tags:\n        - simulator\n      summary: get information about a registered webhook\n      operationId: getWebhookById\n      parameters:\n        - in: path\n          name: subscriptionId\n          schema:\n            type: string\n          required: true\n          description: Subscription ID of the webhook to get\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/webhooks'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n    put:\n      tags:\n        - simulator\n      summary: update a registered webhook\n      operationId: updateWebhookById\n      parameters:\n        - in: path\n          name: subscriptionId\n          schema:\n            type: string\n          required: true\n          description: Subscription ID of the webhook to update\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - webhooks\n                - notificationUrl\n              properties:\n                webhooks:\n                  $ref: '#/components/schemas/webhooks'\n                notificationUrl:\n                  type: string\n                  format: uri\n                  example: https://myserver/endpoint\n      responses:\n        '200':\n          description: Webhook updated\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          description: Webhook subscription not found\n    delete:\n      tags:\n        - simulator\n      summary: unregister a webhook\n      operationId: unregisterWebhook\n      parameters:\n        - in: path\n          name: subscriptionId\n          schema:\n            type: string\n          required: true\n          description: Subscription ID of the webhook to unregister\n      responses:\n        '200':\n          description: Webhook unregistered\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/exve/fleets':\n    get:\n      tags:\n        - fleet\n      summary: get list of fleets available\n      operationId: getFleets\n      description: Obtain a list of fleets available to the accessing party\n      responses:\n        '200':\n          description: list of available fleets\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/types.FleetID'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n    post:\n      tags:\n        - fleet\n      summary: create a new vehicle fleet\n      operationId: createFleet\n      description: Organize a number of vehicles into a fleet\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/types.VehicleID'\n      responses:\n        '201':\n          description: Fleet successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/types.FleetID'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/exve/fleets/{fleetId}':\n    get:\n      tags:\n        - fleet\n      summary: get information about a specific vehicle fleet\n      parameters:\n        - in: path\n          name: fleetId\n          schema:\n            type: integer\n          required: true\n          description: Numeric ID of the vehicle fleet to get\n      operationId: getFleetInfoById\n      description: Obtain detailed information about a specific vehicle fleet\n      responses:\n        '200':\n          description: fleet details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/models.FleetDetail'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n    post:\n      tags:\n        - fleet\n      summary: add vehicles to an existing fleet\n      parameters:\n        - in: path\n          name: fleetId\n          schema:\n            type: integer\n          required: true\n          description: Numeric ID of the vehicle fleet to update\n      operationId: addVehiclesToFleet\n      description: Add one or more vehicles to an existing fleet\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/types.VehicleID'\n      responses:\n        '200':\n          description: Vehicles successfully added to fleet\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n    delete:\n      tags:\n        - fleet\n      summary: delete a vehicle fleet\n      parameters:\n        - in: path\n          name: fleetId\n          schema:\n            type: integer\n          required: true\n          description: Numeric ID of the vehicle fleet\n      operationId: deleteFleet\n      description: Remove a vehicle fleet\n      responses:\n        '200':\n          description: Fleet successfully deleted\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/exve/fleets/{fleetId}/vehicles':\n    get:\n      tags:\n        - fleet\n      summary: get list of vehicles contained in the fleet\n      parameters:\n        - in: path\n          name: fleetId\n          schema:\n            type: integer\n          required: true\n          description: Numeric ID of the vehicle fleet\n      operationId: listFleetVehicles\n      description: Obtain a list of vehicles contained within the fleet\n      responses:\n        '200':\n          description: fleet vehicles\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/types.VehicleID'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/exve/fleets/{fleetId}/vehicles/{vehicleId}':\n    get:\n      tags:\n        - fleet\n      summary: get information about a specific vehicle within a fleet\n      parameters:\n        - in: path\n          name: fleetId\n          schema:\n            type: integer\n          required: true\n          description: Numeric ID of the fleet the vehicle belongs to\n        - in: path\n          name: vehicleId\n          schema:\n            type: integer\n          required: true\n          description: Numeric ID of the vehicle to get\n      operationId: getFleetVehicleInfoById\n      description: Obtain detailed information about a specific vehicle within a fleet\n      responses:\n        '200':\n          description: vehicle details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/models.VehicleDetail'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          description: Vehicle not found in fleet\n    delete:\n      tags:\n        - fleet\n      summary: remove a specific vehicle from a fleet\n      parameters:\n        - in: path\n          name: fleetId\n          schema:\n            type: integer\n          required: true\n          description: Numeric ID of the fleet the vehicle belongs to\n        - in: path\n          name: vehicleId\n          schema:\n            type: integer\n          required: true\n          description: Numeric ID of the vehicle to remove\n      operationId: removeVehicleFromFleet\n      description: Remove a specific vehicle from a fleet\n      responses:\n        '200':\n          description: Vehicle successfully removed from fleet\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          description: Vehicle not found in fleet\n  '/exve/vehicles':\n    get:\n      tags:\n        - exve\n      summary: get list of vehicles available\n      operationId: getVehicles\n      description: Obtain a list of vehicles available to the accessing party\n      responses:\n        '200':\n          description: list of available vehicles\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/types.VehicleID'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/exve/vehicles/{vehicleId}':\n    get:\n      tags:\n        - exve\n      summary: get information about a specific vehicle\n      parameters:\n        - in: path\n          name: vehicleId\n          schema:\n            type: integer\n          required: true\n          description: Numeric ID of the vehicle to get\n      operationId: getVehicleInfoById\n      description: Obtain detailed information about a specific vehicle\n      responses:\n        '200':\n          description: vehicle details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/models.VehicleDetail'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/exve/vehicles/{vehicleId}/capabilities':\n    get:\n      tags:\n        - exve\n      summary: get the capabilities of a specific vehicle\n      parameters:\n        - in: path\n          name: vehicleId\n          schema:\n            type: integer\n          required: true\n          description: Numeric ID of the vehicle to get\n      operationId: getVehicleCapabilitiesById\n      description: |\n        Obtain a list of capabilities of a specific vehicle\n      responses:\n        '200':\n          description: vehicle capabilities\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exve.resources'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/exve/vehicles/{vehicleId}/resources':\n    get:\n      tags:\n        - exve\n      summary: get the available resources a specific vehicle\n      parameters:\n        - in: path\n          name: vehicleId\n          schema:\n            type: integer\n          required: true\n          description: Numeric ID of the vehicle to get\n      operationId: getVehicleResourcesById\n      description: |\n        Obtain a list of available resources for a specific vehicle\n      responses:\n        '200':\n          description: available resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exve.resources'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/exve/vehicles/{vehicleId}/notification':\n    post:\n      tags:\n        - exve\n      summary: send a notification to a specific vehicle\n      parameters:\n        - in: path\n          name: vehicleId\n          schema:\n            type: integer\n          required: true\n          description: Numeric ID of the vehicle\n      operationId: vehicleNotifyById\n      description: Sends a notification to a specific vehicle\n      requestBody:\n        description: Notification text to display\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/models.VehicleNotification'\n      responses:\n        '200':\n          description: OK\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/exve/vehicles/{vehicleId}/acceleratorPedalPositions':\n    get:\n      tags:\n        - exve\n      summary: get the accelerator pedal positions for a specific vehicle\n      parameters:\n        - in: path\n          name: vehicleId\n          schema:\n            type: integer\n          required: true\n          description: Numeric ID of the vehicle to get\n      operationId: getAcceleratorPedalPositionsById\n      description: |\n        Obtain a list of changes in accelerator pedal positions for a specific\n        vehicle.\n      responses:\n        '200':\n          description: accelerator pedal positions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exve.resources.AcceleratorPedalPositions'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/exve/vehicles/{vehicleId}/automationLevels':\n    get:\n      tags:\n        - exve\n      summary: get the automation levels for a specific vehicle\n      parameters:\n        - in: path\n          name: vehicleId\n          schema:\n            type: integer\n          required: true\n          description: Numeric ID of the vehicle to get\n      operationId: getAutomationLevelsById\n      description: |\n        Obtain a list of changes in SAE J3016 automation levels for a specific\n        vehicle.\n      responses:\n        '200':\n          description: automation levels\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exve.resources.AutomationLevels'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/exve/vehicles/{vehicleId}/brakePedalPositions':\n    get:\n      tags:\n        - exve\n      summary: get the brake pedal positions for a specific vehicle\n      parameters:\n        - in: path\n          name: vehicleId\n          schema:\n            type: integer\n          required: true\n          description: Numeric ID of the vehicle to get\n      operationId: getBrakePedalPositionsById\n      description: |\n        Obtain a list of changes in brake pedal positions for a specific\n        vehicle.\n      responses:\n        '200':\n          description: brake pedal positions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exve.resources.BrakePedalPositions'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/exve/vehicles/{vehicleId}/doorStatuses':\n    get:\n      tags:\n        - exve\n      summary: get the changes in door status for a specific vehicle\n      parameters:\n        - in: path\n          name: vehicleId\n          schema:\n            type: integer\n          required: true\n          description: Numeric ID of the vehicle to get\n      operationId: getDoorStatusesById\n      description: |\n        Obtain a list of changes in door status for a specific vehicle.\n      responses:\n        '200':\n          description: door statuses\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exve.resources.DoorStatuses'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/exve/vehicles/{vehicleId}/fuelLevels':\n    get:\n      tags:\n        - exve\n      summary: get the changes in fuel levels for a specific vehicle\n      parameters:\n        - in: path\n          name: vehicleId\n          schema:\n            type: integer\n          required: true\n          description: Numeric ID of the vehicle to get\n      operationId: getFuelLevelsById\n      description: |\n        Obtain a list of changes in fuel levels for a specific vehicle.\n      responses:\n        '200':\n          description: fuel levels\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exve.resources.FuelLevels'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/exve/vehicles/{vehicleId}/headlampStatuses':\n    get:\n      tags:\n        - exve\n      summary: get the changes in headlamp status for a specific vehicle\n      parameters:\n        - in: path\n          name: vehicleId\n          schema:\n            type: integer\n          required: true\n          description: Numeric ID of the vehicle to get\n      operationId: getHeadlampStatusesById\n      description: |\n        Obtain a list of changes in headlamp status for a specific vehicle.\n      responses:\n        '200':\n          description: headlamp statuses\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exve.resources.HeadlampStatuses'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/exve/vehicles/{vehicleId}/highBeamStatuses':\n    get:\n      tags:\n        - exve\n      summary: get the changes in high beam status for a specific vehicle\n      parameters:\n        - in: path\n          name: vehicleId\n          schema:\n            type: integer\n          required: true\n          description: Numeric ID of the vehicle to get\n      operationId: getHighBeamStatusesById\n      description: |\n        Obtain a list of changes in high beam status for a specific vehicle.\n      responses:\n        '200':\n          description: high beam statuses\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exve.resources.HighBeamStatuses'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/exve/vehicles/{vehicleId}/ignitionStatuses':\n    get:\n      tags:\n        - exve\n      summary: get the changes in ignition status for a specific vehicle\n      parameters:\n        - in: path\n          name: vehicleId\n          schema:\n            type: integer\n          required: true\n          description: Numeric ID of the vehicle to get\n      operationId: getIgnitionStatusesById\n      description: |\n        Obtain a list of changes in ignition status for a specific vehicle.\n      responses:\n        '200':\n          description: ignition statuses\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exve.resources.IgnitionStatuses'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/exve/vehicles/{vehicleId}/locations':\n    get:\n      tags:\n        - exve\n      summary: get the locations for a specific vehicle\n      parameters:\n        - in: path\n          name: vehicleId\n          schema:\n            type: integer\n          required: true\n          description: Numeric ID of the vehicle to get\n      operationId: getLocationsById\n      description: |\n        Obtain a list of changes in geolocation for a specific vehicle.\n      responses:\n        '200':\n          description: vehicle locations\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exve.resources.Locations'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/exve/vehicles/{vehicleId}/odometers':\n    get:\n      tags:\n        - exve\n      summary: get the odometer values for a specific vehicle\n      parameters:\n        - in: path\n          name: vehicleId\n          schema:\n            type: integer\n          required: true\n          description: Numeric ID of the vehicle to get\n      operationId: getOdometersById\n      description: |\n        Obtain a list of changes in odometer readings for a specific vehicle.\n      responses:\n        '200':\n          description: odometer readings\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exve.resources.Odometers'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/exve/vehicles/{vehicleId}/parkingBrakeStatuses':\n    get:\n      tags:\n        - exve\n      summary: get the changes in parking brake status for a specific vehicle\n      parameters:\n        - in: path\n          name: vehicleId\n          schema:\n            type: integer\n          required: true\n          description: Numeric ID of the vehicle to get\n      operationId: getParkingBrakeStatusesById\n      description: |\n        Obtain a list of changes in parking brake status for a specific vehicle.\n      responses:\n        '200':\n          description: parking brake statuses\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exve.resources.ParkingBrakeStatuses'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/exve/vehicles/{vehicleId}/windshieldWiperStatuses':\n    get:\n      tags:\n        - exve\n      summary: get the changes in windshield wiper status for a specific vehicle\n      parameters:\n        - in: path\n          name: vehicleId\n          schema:\n            type: integer\n          required: true\n          description: Numeric ID of the vehicle to get\n      operationId: getWindsheildWiperStatusesById\n      description: |\n        Obtain a list of changes in windshield wiper status for a specific\n        vehicle.\n      responses:\n        '200':\n          description: windshield wiper statuses\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exve.resources.WindshieldWiperStatuses'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\ncomponents:\n  responses:\n    UnauthorizedError:\n      description: Access token is missing or invalid\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  schemas:\n    exve.resources:\n      type: object\n      required:\n        - resources\n      properties:\n        resources:\n          type: array\n          uniqueItems: true\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n                example: 'odometers'\n              version:\n                type: string\n                example: '1.0'\n              href:\n                type: string\n                example: '/exve/vehicles/{vehicleId}/odometers'\n    exve.resources.AcceleratorPedalPositions:\n      type: object\n      required:\n        - acceleratorPedalPositions\n      properties:\n        acceleratorPedalPositions:\n          type: array\n          uniqueItems: true\n          items:\n            type: object\n            properties:\n              value:\n                type: integer\n                example: 40\n              units:\n                type: string\n                example: 'percent'\n              timestamp:\n                type: string\n                format: date-time\n    exve.resources.AutomationLevels:\n      type: object\n      required:\n        - automationLevels\n      properties:\n        automationLevels:\n          type: array\n          uniqueItems: true\n          items:\n            type: object\n            properties:\n              level:\n                type: integer\n                minimum: 0\n                maximum: 5\n                description: SAE J3016 automation level.\n              timestamp:\n                type: string\n                format: date-time\n    exve.resources.BrakePedalPositions:\n      type: object\n      required:\n        - brakePedalPositions\n      properties:\n        brakePedalPositions:\n          type: array\n          uniqueItems: true\n          items:\n            type: object\n            properties:\n              value:\n                type: integer\n                example: 40\n              units:\n                type: string\n                example: 'percent'\n              timestamp:\n                type: string\n                format: date-time\n    exve.resources.FuelLevels:\n      type: object\n      required:\n        - fuelLevels\n      properties:\n        fuelLevels:\n          type: array\n          uniqueItems: true\n          items:\n            type: object\n            properties:\n              value:\n                type: integer\n                example: 40\n              units:\n                type: string\n                example: 'percent'\n              timestamp:\n                type: string\n                format: date-time\n    exve.resources.DoorStatuses:\n      type: object\n      required:\n        - doorStatuses\n      properties:\n        doorStatuses:\n          type: array\n          uniqueItems: true\n          items:\n            type: object\n            properties:\n              value:\n                type: string\n                enum:\n                  - all_locked\n                  - all_unlocked\n                  - driver\n                  - passenger\n                  - rear_left\n                  - rear_right\n              timestamp:\n                type: string\n                format: date-time\n    exve.resources.HeadlampStatuses:\n      type: object\n      required:\n        - headlampStatuses\n      properties:\n        headlampStatuses:\n          type: array\n          uniqueItems: true\n          items:\n            type: object\n            properties:\n              value:\n                type: boolean\n                example: true\n              timestamp:\n                type: string\n                format: date-time\n    exve.resources.HighBeamStatuses:\n      type: object\n      required:\n        - highBeamStatuses\n      properties:\n        highBeamStatuses:\n          type: array\n          uniqueItems: true\n          items:\n            type: object\n            properties:\n              value:\n                type: boolean\n                example: true\n              timestamp:\n                type: string\n                format: date-time\n    exve.resources.IgnitionStatuses:\n      type: object\n      required:\n        - ignitionStatuses\n      properties:\n        ignitionStatuses:\n          type: array\n          uniqueItems: true\n          items:\n            type: object\n            properties:\n              value:\n                type: string\n                enum:\n                  - off\n                  - accessory\n                  - run\n                  - start\n                example: 'off'\n              timestamp:\n                type: string\n                format: date-time\n    exve.resources.Locations:\n      type: object\n      required:\n        - locations\n      properties:\n        locations:\n          type: array\n          uniqueItems: true\n          items:\n            type: object\n            required:\n              - latitude\n              - longitude\n              - bearing\n              - timestamp\n            properties:\n              latitude:\n                type: number\n                example: 48.0202599980004\n              longitude:\n                type: number\n                example: 11.58485\n              bearing:\n                type: integer\n                example: 45\n                description: Bearing in degrees.\n              timestamp:\n                type: string\n                format: date-time\n    exve.resources.Odometers:\n      type: object\n      required:\n        - odometers\n      properties:\n        odometers:\n          type: array\n          uniqueItems: true\n          items:\n            type: object\n            properties:\n              value:\n                type: number\n                example: 1000.25\n              units:\n                type: string\n                example: 'km'\n              timestamp:\n                type: string\n                format: date-time\n    exve.resources.ParkingBrakeStatuses:\n      type: object\n      required:\n        - parkingBrakeStatuses\n      properties:\n        parkingBrakeStatuses:\n          type: array\n          uniqueItems: true\n          items:\n            type: object\n            properties:\n              value:\n                type: boolean\n                example: true\n              timestamp:\n                type: string\n                format: date-time\n    exve.resources.WindshieldWiperStatuses:\n      type: object\n      required:\n        - windshieldWiperStatuses\n      properties:\n        windshieldWiperStatuses:\n          type: array\n          uniqueItems: true\n          items:\n            type: object\n            properties:\n              value:\n                type: boolean\n                example: true\n              timestamp:\n                type: string\n                format: date-time\n    models.FleetDetail:\n      type: object\n      properties:\n        fleetId:\n          type: integer\n          format: int64\n          example: 234\n        vehicles:\n          type: array\n          items:\n            $ref: '#/components/schemas/types.VehicleID'\n    models.VehicleDetail:\n      type: object\n      required:\n        - AutoID\n      properties:\n        AutoID:\n          type: integer\n          format: int64\n        DriverID:\n          type: integer\n          format: int64\n        FleetID:\n          type: integer\n          format: int64\n        OwnerID:\n          type: integer\n          format: int64\n        Name:\n          type: string\n          example: 'My Car'\n        Make:\n          type: string\n          example: 'Opel'\n        Model:\n          type: string\n          example: 'Astra'\n        Year:\n          type: integer\n        VIN:\n          type: string\n          description: 'Vehicle identification number in accordance with ISO 3779:2009'\n          minLength: 0\n          maxLength: 17\n          example: 'WP0ZZZ99ZTS392124'\n        LicensePlate:\n          type: string\n        RegistrationExpiry:\n          type: string\n          format: date\n        FuelCapacity:\n          type: string\n        Odometer:\n          type: number\n          format: double\n          minimum: 0\n          maximum: 16777214\n        PolicyID:\n          type: string\n        Notes:\n          type: string\n          description: 'Optional field to enter owner notes about the vehicle'\n          example: 'My work car'\n        PhotoUrls:\n          type: array\n          items:\n            type: string\n            example: 'http://www.example.com/images/mycar.png'\n        DriveTrain:\n          type: string\n        EngineType:\n          type: string\n        ExteriorColor:\n          type: string\n        InteriorColor:\n          type: string\n        Transmission:\n          type: string\n    models.VehicleEvent:\n      type: object\n      required:\n        - EventID\n      properties:\n        EventID:\n          type: integer\n          format: int64\n        JourneyID:\n          type: string\n        AutoID:\n          type: integer\n          format: int64\n        DriverID:\n          type: integer\n          format: int64\n        EventCategoryID:\n          type: integer\n          format: int32\n        automation_level:\n          type: integer\n          minimum: 0\n          maximum: 5\n          description: SAE J3016 automation level.\n        steering_wheel_angle:\n          type: number\n          format: float\n          minimum: -600\n          maximum: 600\n        torque_at_transmission:\n          type: number\n          format: float\n          minimum: -500\n          maximum: 1500\n        engine_speed:\n          type: number\n          format: float\n          minimum: 0\n          maximum: 16382\n        vehicle_speed:\n          type: number\n          format: float\n          minimum: 0\n          maximum: 655\n        accelerator_pedal_position:\n          type: number\n          format: float\n          minimum: 0\n          maximum: 100\n        parking_brake_status:\n          type: string\n          enum:\n            - 'true'\n            - 'false'\n        brake_pedal_status:\n          type: string\n          enum:\n            - 'true'\n            - 'false'\n        transmission_gear_position:\n          type: string\n          enum:\n            - first\n            - second\n            - third\n            - fourth\n            - fifth\n            - sixth\n            - seventh\n            - eighth\n            - ninth\n            - tenth\n            - reverse\n            - neutral\n        gear_lever_position:\n          type: string\n          enum:\n            - drive\n            - sport\n            - low\n            - first\n            - second\n            - third\n            - fourth\n            - fifth\n            - sixth\n            - seventh\n            - eighth\n            - ninth\n            - tenth\n            - reverse\n            - neutral\n        odometer:\n          type: number\n          format: double\n          minimum: 0\n          maximum: 16777214\n        ignition_status:\n          $ref: '#/components/schemas/types.IgnitionStatus'\n        fuel_level:\n          type: number\n          format: float\n          description: percentage fuel remaining level\n          minimum: 0\n          maximum: 150\n        fuel_consumed_since_restart:\n          type: number\n          format: double\n          description: \u003e-\n            fuel consumed in litres (this goes to 0 every time the vehicle\n            restarts, like a trip meter)\n          minimum: 0\n          maximum: 4294967295\n        door_status:\n          type: string\n          enum:\n            - all_locked\n            - all_unlocked\n            - driver\n            - passenger\n            - rear_left\n            - rear_right\n        headlamp_status:\n          type: string\n          enum:\n            - 'true'\n            - 'false'\n        high_beam_status:\n          type: string\n          enum:\n            - 'true'\n            - 'false'\n        windshield_wiper_status:\n          type: string\n          enum:\n            - 'true'\n            - 'false'\n        latitude:\n          type: number\n          format: float\n        longitude:\n          type: number\n          format: float\n        bearing:\n          type: number\n          format: float\n        accuracy:\n          type: number\n          format: float\n        timestamp:\n          type: string\n          format: date-time\n        accel_x:\n         type: number\n         format: float\n        accel_y:\n         type: number\n         format: float\n        accel_z:\n         type: number\n         format: float\n        gyro_x:\n          type: number\n          format: float\n        gyro_y:\n          type: number\n          format: float\n        gyro_z:\n          type: number\n          format: float\n    models.VehicleNotification:\n      type: object\n      required:\n        - text\n      properties:\n        text:\n          type: string\n          example: 'Harsh braking detected'\n    types.FleetID:\n      type: object\n      required:\n        - fleetId\n      properties:\n        fleetId:\n          type: integer\n          format: int64\n          example: 234\n    types.IgnitionStatus:\n      type: string\n      enum:\n        - off\n        - accessory\n        - run\n        - start\n    types.VehicleID:\n      type: object\n      required:\n        - vehicleId\n      properties:\n        vehicleId:\n          type: integer\n          format: int64\n          example: 1\n    webhooks:\n      type: array\n      items:\n        type: string\n        enum:\n          - automation_level_changed\n          - driver_changed\n          - journey_begin\n          - journey_end\n          - location_changed\n          - ignition_changed\n          - harsh_acceleration\n          - harsh_braking\n      example: [automation_level_changed, driver_changed, journey_begin, journey_end, location_changed, ignition_changed, harsh_acceleration, harsh_braking]\n      uniqueItems: true\n    webhooks.AutomationLevelChange:\n      type: object\n      properties:\n        vehicleId:\n          type: integer\n          example: 123\n        old_level:\n          type: integer\n          minimum: 0\n          maximum: 5\n          example: 2\n          description: SAE J3016 automation level\n        new_level:\n          type: integer\n          minimum: 0\n          maximum: 5\n          example: 3\n          description: SAE J3016 automation level\n        timestamp:\n          type: string\n          format: date-time\n    webhooks.DriverChange:\n      type: object\n      properties:\n        vehicleId:\n          type: integer\n          example: 123\n        old_driverId:\n          type: integer\n          example: 456\n        new_driverId:\n          type: integer\n          example: 200\n        timestamp:\n          type: string\n          format: date-time\n    webhooks.HarshPedalEvent:\n      type: object\n      properties:\n        vehicleId:\n          type: integer\n          example: 123\n        driverId:\n          type: integer\n          example: 456\n        pedal_start_position:\n          type: integer\n          description: Pedal position as a percentage\n          example: 25\n        pedal_end_position:\n          type: integer\n          description: Pedal position as a percentage\n          example: 95\n        timestamp:\n          type: string\n          format: date-time\n    webhooks.IgnitionChange:\n      type: object\n      properties:\n        vehicleId:\n          type: integer\n          example: 123\n        driverId:\n          type: integer\n          example: 456\n        ignition_start_state:\n          $ref: '#/components/schemas/types.IgnitionStatus'\n        ignition_end_state:\n          $ref: '#/components/schemas/types.IgnitionStatus'\n        timestamp:\n          type: string\n          format: date-time\n    webhooks.JourneyChange:\n      type: object\n      properties:\n        vehicleId:\n          type: integer\n          example: 123\n        driverId:\n          type: integer\n          example: 456\n        latitude:\n          type: number\n          example: 48.0202599980004\n        longitude:\n          type: number\n          example: 11.58485\n        bearing:\n          type: integer\n          example: 45\n          description: Bearing in degrees.\n        timestamp:\n          type: string\n          format: date-time\n    webhooks.LocationChange:\n      type: object\n      required:\n        - vehicleId\n        - latitude\n        - longitude\n        - bearing\n        - timestamp\n      properties:\n        vehicleId:\n          type: integer\n          example: 123\n        latitude:\n          type: number\n          example: 48.0202599980004\n        longitude:\n          type: number\n          example: 11.58485\n        bearing:\n          type: integer\n          example: 45\n        timestamp:\n          type: string\n          format: date-time\n    webhooks.Subscription:\n      type: object\n      required:\n        - subscriptionId\n      properties:\n        subscriptionId:\n          type: string\n          format: uuid\n          example: '3701fac0-391b-4ad7-8392-8cba1ae5feca'\n"
		}
	},
	"Error": "parse: paths: /simulator/events: get: operation \"getVehicleEvents\": responses: 200: content: \"application/json\": schema: parse schema: item: parse schema: reference \"#/components/schemas/models.VehicleEvent\": parse schema: ignition_status: parse schema: reference \"#/components/schemas/types.IgnitionStatus\": parse enum values: parse value \"false\": expected type \"string\", got \"bool\""
}