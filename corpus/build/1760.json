{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/swagger-api/swagger-parser"
		},
		"file": {
			"name": "issue-421.yaml",
			"path": "modules/swagger-parser-v3/src/test/resources/nested-file-references/issue-421.yaml",
			"content": "openapi: 3.0.0\nservers:\n  - url: 'https://example.com/api/v1'\ninfo:\n  title: Test API\n  version: '1'\npaths:\n  '/pet/{petId}':\n    get:\n      tags:\n        - pet\n      summary: Find pet by ID\n      description: Returns a single pet\n      operationId: getPetById\n      parameters:\n        - $ref: './common/issue-421-parms.yaml#/petIdParam'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: './common/issue-421-defns.yaml#/components/schemas/Pet'\n        '400':\n          description: Invalid ID supplied\n        '404':\n          description: Pet not found\n    post:\n      tags:\n        - pet\n      summary: Updates a pet in the store with form data\n      description: ''\n      operationId: updatePetWithForm\n      parameters:\n        - $ref: './common/issue-421-parms.yaml#/petIdParam'\n      requestBody:\n        $ref: '#/components/requestBodies/requestBody'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponse'\n        '405':\n          description: Invalid input\n  /store/order:\n    post:\n      tags:\n        - store\n      summary: Place an order for a pet\n      description: ''\n      operationId: placeOrder\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: './petstore.yaml#/components/schemas/Order'\n            application/json:\n              schema:\n                $ref: './petstore.yaml#/components/schemas/Order'\n        '400':\n          description: Invalid Order\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: './petstore.yaml#/components/schemas/Order'\n        description: order placed for purchasing the pet\n        required: true\ncomponents:\n  schemas:\n    ApiResponse:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        type:\n          type: string\n        message:\n          type: string\n  requestBodies:\n    requestBody:\n      content:\n        application/x-www-form-urlencoded:\n          schema:\n            type: object\n            properties:\n              name:\n                description: Updated name of the pet\n                type: string\n              status:\n                description: Updated status of the pet\n                type: string"
		}
	},
	"Error": "parse: paths: /store/order: post: operation \"placeOrder\": requestBody: content: \"application/json\": parse schema: parse schema: reference \"./petstore.yaml#/components/schemas/Order\": resolve reference \"./petstore.yaml#/components/schemas/Order\": invalid schema reference \"./petstore.yaml#/components/schemas/Order\""
}