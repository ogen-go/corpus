{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/heitortsergent/openapi3-ref-example"
		},
		"file": {
			"name": "pet.yaml",
			"path": "endpoints/pet.yaml",
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: An include file to define pet endpoints\n  license:\n    name: MIT\npaths:\n  /pets:\n    get:\n      summary: List all pets\n      operationId: listPets\n      tags:\n        - pets\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: A paged array of pets\n          headers:\n            x-next:\n              description: A link to the next page of responses\n              schema:\n                type: string\n          content:\n            application/json:    \n              schema:\n                $ref: '../petstore.yaml#/components/schemas/Pets'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '../petstore.yaml#/components/schemas/Error'\n    post:\n      summary: Create a pet\n      operationId: createPets\n      tags:\n        - pets\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '../petstore.yaml#/components/schemas/Error'\n  /pets/{petId}:\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '../petstore.yaml#/components/schemas/Pets'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '../petstore.yaml#/components/schemas/Error'"
		}
	},
	"Error": "parse: paths: /pets: get: listPets: responses: 200: content: application/json: schema: parse schema: reference \"../petstore.yaml#/components/schemas/Pets\": resolve reference \"../petstore.yaml#/components/schemas/Pets\": invalid schema reference \"../petstore.yaml#/components/schemas/Pets\""
}