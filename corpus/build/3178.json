{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/smart-edge-open/EMCO"
		},
		"file": {
			"name": "emco_apis.yaml",
			"path": "docs/swagger-specs-for-APIs/emco_apis.yaml",
			"content": "# SPDX-License-Identifier: Apache-2.0\n# Copyright (c) 2020 Intel Corporation\n\nopenapi: 3.0.2\ninfo:\n  version: '2.0.0'\n\n  title: EMCO\n\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n  x-logo:\n    url: 'https://redocly.github.io/openapi-template/logo.png'\n\n  description: |\n    EMCO - Edge Multi Cluster Orchestrator\n    # Introduction\n    Application Orchestration - For applications and services delivered across multiple administrative infrastructures\n\nexternalDocs:\n  description: Wiki for the API's.\n  url: 'https://wiki.onap.org/display/DW/V2+API+Specification'\n\ntags:\n  - name: v2\n    description: |\n     V2 API's\n\npaths:\n  ############################ Project API'S #################################################\n  /projects:\n    post:\n      tags:\n        - Projects\n      summary: Project\n      description: Add a new `project`\n      operationId: addProject\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/Metadata'\n        description: Project data\n        required: true\n\n    get: # documentation for GET operation for this path\n      tags:\n        - Projects\n      summary: Get all projects\n\n      description: |\n        Get all `projects`\n\n      operationId: getAllProjects\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/MetadataArray'\n        '404':\n          description: No Found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n\n  /projects/{project-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n    - $ref: '#/components/parameters/projectName'\n    get: # documentation for GET operation for this path\n      tags:\n        - Projects\n      summary: Get project by project name\n\n      description: |\n        Get `project`\n\n      operationId: getProjectByName\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '404':\n          description: Not Found\n          content: {}\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - Projects\n      summary: Update project\n      description: Update `project`\n      operationId: updateProject\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      # request body documentation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Metadata'\n        description: Update project object\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Projects\n      summary: Delete project by project name\n\n      description: |\n        Delete `project`\n\n      operationId: deleteProjectByName\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n\n  ############################ Application API'S #################################################\n  /projects/{project-name}/composite-apps:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n    post:\n      tags:\n        - Composite Application\n      summary: Add Composite Application\n      description: Add a new `composite application`\n      operationId: addCompositeApplication\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CompositeAppVersion'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CompositeAppVersion'\n        description: Composite application definition\n        required: true\n\n    get: # documentation for GET operation for this path\n      tags:\n        - Composite Application\n      summary: Get all Composite Applications\n\n      description: |\n        Get all `composite applications`\n\n      operationId: getAllCompositeApplications\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/CompositeAppVersionArray'\n        '404':\n          description: No Composite App found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n    get: # documentation for GET operation for this path\n      tags:\n        - Composite Application\n      summary: Get Composite Application\n\n      description: |\n        Get `composite application`\n\n      operationId: getCompositeApplicationByName\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/CompositeAppVersion'\n        '404':\n          description: Composite Application not found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - Composite Application\n      summary: Update a Composite Application\n      description: Update a `Composite Application`\n      operationId: updateCompositeApplication\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/CompositeAppVersion'\n          description: Success\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      # request body documentation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CompositeAppVersion'\n        description: Composite application definition\n        required: true\n\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Composite Application\n      summary: Delete Composite Application\n\n      description: |\n        Delete `Composite Application`\n\n      operationId: deleteCompositeAppByName\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/apps:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n    post:\n      tags:\n        - Composite Application\n      summary: Add app to Composite Application\n      description: Add a new  `app to composite application`\n      operationId: addAppToCompositeApplication\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      # request body documentation\n      requestBody:\n        content:\n          multipart/form-data: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/AppData'\n        required: true\n\n    get: # documentation for GET operation for this path\n      tags:\n        - Composite Application\n      summary: Get all apps in Composite Application\n\n      description: |\n        Get all `apps in composite application`\n\n      operationId: getAllAppsInCompositeApplication\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/MetadataArray'\n        '404':\n          description: No Apps found in Composite Application\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/apps/{app-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/appName'\n    get: # documentation for GET operation for this path\n      tags:\n        - Composite Application\n      summary: Get Application\n\n      description: |\n        Get `application`\n\n      operationId: getAppCompositeApplication\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n            application/octet-stream: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/File'\n            multipart/form-data: # Media type\n              schema:            # Request payload\n                $ref: '#/components/schemas/AppData'\n\n        '404':\n          description: Application not found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - Composite Application\n      summary: Update app in Composite Application\n      description: Update app in `Composite Application`\n      operationId: updateAppToCompositeApplication\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n          description: Success\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      # request body documentation\n      requestBody:\n        content:\n          multipart/form-data: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/AppData'\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Composite Application\n      summary: Delete Application\n\n      description: |\n        Delete `application`\n\n      operationId: deleteAppToCompositeApplication\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n\n############################ PROFILE API'S #################################################\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/composite-profiles:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n    post:\n      tags:\n        - Composite Profile\n      summary: Add Composite Profile\n      description: Add a new `composite profile`\n      operationId: addCompositeProfile\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Metadata'\n        description: Composite Profile definition\n        required: true\n\n    get: # documentation for GET operation for this path\n      tags:\n        - Composite Profile\n      summary: Get all Composite Profiles\n\n      description: |\n        Get all `profiles in a composite application`\n\n      operationId: getAllProfilesInCompositeApplication\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/MetadataArray'\n        '404':\n          description: No composite profile found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/composite-profiles/{composite-profile-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/compositeProfileName'\n    get: # documentation for GET operation for this path\n      tags:\n        - Composite Profile\n      summary: Get Composite Profile\n\n      description: |\n        Get `composite profile`\n\n      operationId: getCompositeProfileByName\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '404':\n          description: Composite Profile not found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - Composite Profile\n      summary: Update Composite Profile\n      description: Update `Composite Profile`\n      operationId: updateCompositeProfile\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n          description: Success\n        '400':\n          description: Invalid data\n        '404':\n          description: Composite Profile not found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      # request body documentation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Metadata'\n        description: Composite Profile definition\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Composite Profile\n      summary: Delete Composite Profile\n\n      description: |\n        Delete `Composite Profile`\n\n      operationId: deleteCompositeProfileByName\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/composite-profiles/{composite-profile-name}/profiles:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/compositeProfileName'\n    post:\n      tags:\n        - Composite Profile\n      summary: Add app profile to Composite Profile\n      description: Add a `profile for application`\n      operationId: addProfileToCompositeProfile\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ProfileAppSpec'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          multipart/form-data: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/ProfileAppData'\n    get: # documentation for GET operation for this path\n      tags:\n        - Composite Profile\n      summary: Get all app profiles in Composite Profiles\n\n      description: |\n        Get all `app profiles in a composite Profile`\n\n      operationId: getAllProfilesInCompositeProfile\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ProfileAppSpecArray'\n        '404':\n          description: No profile found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/composite-profiles/{composite-profile-name}/profiles/{profile-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/compositeProfileName'\n      - $ref: '#/components/parameters/profileName'\n    get: # documentation for GET operation for this path\n      tags:\n        - Composite Profile\n      summary: Get profile from Composite Profile\n\n      description: |\n        Get `profile from composite profile`\n\n      operationId: getProfile\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ProfileAppSpec'\n            application/octet-stream: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/File'\n            multipart/form-data: # Media type\n              schema:            # Request payload\n                $ref: '#/components/schemas/ProfileAppData'\n\n        '404':\n          description: Profile not found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - Composite Profile\n      summary: Update Composite Profile for an app\n      description: Update `Profile`\n      operationId: updateProfile\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ProfileAppSpec'\n          description: Success\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      # request body documentation\n      requestBody:\n        content:\n          multipart/form-data: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/ProfileAppData'\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Composite Profile\n      summary: Delete Profile\n\n      description: |\n        Delete `profile in Composite Profile`\n\n      operationId: deleteProfile\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n\n  # Qurey for Profile - Get profile for app-name\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/composite-profiles/{composite-profile-name}/profiles/:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/compositeProfileName'\n      - in: query\n        name: app-name\n        schema:\n          type: string\n          maxLength: 128\n        required: true\n\n    get: # documentation for GET operation for this path\n      tags:\n        - Composite Profile\n      summary: Query profile for an application\n\n      description: |\n        Query `profile for an application`\n\n      operationId: queryProfileForApp\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ProfileAppSpec'\n            application/octet-stream: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/File'\n            multipart/form-data: # Media type\n              schema:            # Request payload\n                $ref: '#/components/schemas/ProfileAppData'\n        '404':\n          description: Profile for application not found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n\n\n\n############################ Deployment Intent Group API'S #################################################\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n    post:\n      tags:\n        - Deployment Intent Group\n      summary: Add Deployment Intent Group\n      description: Add a new `deployment intent group`\n      operationId: addDeploymentIntentGroup\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentGroupIntent'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeploymentGroupIntent'\n        description: Deployment Intent Group definition\n        required: true\n    get: # documentation for GET operation for this path\n      tags:\n        - Deployment Intent Group\n      summary: Get all Deployment Intent Group\n\n      description: |\n        Get all `Deployment Intent Group`\n\n      operationId: getAllDeploymentIntentGroup\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/DeploymentGroupIntentArray'\n        '404':\n          description: No Deployment Intent Group found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n    get: # documentation for GET operation for this path\n      tags:\n        - Deployment Intent Group\n      summary: Get Deployment Intent Group\n\n      description: |\n        Get `Deployment Intent Group`\n\n      operationId: getDeploymentIntentGroupByName\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/DeploymentGroupIntent'\n        '404':\n          description: Deployment Intent Group not found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - Deployment Intent Group\n      summary: Update Deployment Intent Group\n      description: Update `Deployment Intent Group`\n      operationId: updateDeploymentIntentGroup\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/DeploymentGroupIntent'\n          description: Success\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      # request body documentation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeploymentGroupIntent'\n        description: Deployment Intent Group definition\n        required: true\n\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Deployment Intent Group\n      summary: Delete Deployment Intent Group\n\n      description: |\n        Delete `Deployment Intent Group`\n\n      operationId: deleteDeploymentIntentGroupByName\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/intents/:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n    post:\n      tags:\n        - Deployment Intent Group\n      summary: Add Intent\n      description: Add `deployment Intent`\n      operationId: addIntentToDeploymentIntentGroup\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/DeploymentIntent'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/DeploymentIntent'\n    get: # documentation for GET operation for this path\n      tags:\n        - Deployment Intent Group\n      summary: Get all intents in Deployment Intent Group\n\n      description: |\n        Get all `intents in deployment intent group`\n\n      operationId: getAllIntentsInDeploymentIntentGroup\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ListOfIntents'\n        '404':\n          description: No Deployment Intent Group found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/intents/{intent-name}:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/intentName'\n\n    get: # documentation for GET operation for this path\n      tags:\n        - Deployment Intent Group\n      summary: Get intent for an application\n\n      description: |\n        Get `Deployment Intent`\n\n      operationId: getIntentForDeploymentIntentGroup\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/DeploymentIntent'\n        '404':\n          description: Deployment Intent not found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - Deployment Intent Group\n      summary: Update intent\n      description: Update `deployment intent`\n      operationId: updateIntentToDeploymentIntentGroup\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/DeploymentIntent'\n          description: Success\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      # request body documentation\n      requestBody:\n        content:\n         application/json: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/DeploymentIntent'\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Deployment Intent Group\n      summary: Delete intent\n\n      description: |\n        Delete `intent`\n\n      operationId: deleteIntentFromDeploymentIntentGroup\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n   #Query\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/intents:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - in: query\n        name: intent\n        schema:\n          type: string\n          maxLength: 128\n        required: true\n\n    get: # documentation for GET operation for this path\n      tags:\n        - Deployment Intent Group\n      summary: Query intent\n\n      description: |\n        Query `Deployment Intent`\n\n      operationId: queryIntentForDeploymentIntentGroup\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ListOfIntents'\n        '404':\n          description: Deployment Intent not found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n\n############################ GENERIC PLACEMENT INTENT API'S #################################################\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/generic-placement-intents:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n    post:\n      tags:\n        - Generic Placement Intent\n      summary: Add Generic Placement Intent\n      description: Add a new `generic placement intent`\n      operationId: addGenericPlacementIntent\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Metadata'\n        description: Generic Placement Intent definition\n        required: true\n\n    get: # documentation for GET operation for this path\n      tags:\n        - Generic Placement Intent\n      summary: Get all Generic Placement Intents\n\n      description: |\n        Get all `Generic Placement Intents`\n\n      operationId: getAllGenericPlacementIntents\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/MetadataArray'\n        '404':\n          description: No Generic Placement Intent found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/generic-placement-intents/{generic-placement-intent-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/genericPlacementIntentName'\n    get: # documentation for GET operation for this path\n      tags:\n        - Generic Placement Intent\n      summary: Get Generic Placement Intent\n\n      description: |\n        Get `generic placement intent`\n\n      operationId: getGenericPlacementIntentByName\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '404':\n          description: Generic Placement Intent not found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - Generic Placement Intent\n      summary: Update Generic Placement Intent\n      description: Update `Generic Placement Intent`\n      operationId: updateGenericPlacementIntent\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n          description: Success\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      # request body documentation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Metadata'\n        description: Generic Placement Intent definition\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Generic Placement Intent\n      summary: Delete Generic Placement Intent\n\n      description: |\n        Delete `Generic Placement Intent`\n\n      operationId: deleteGenericPlacementIntentByName\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/generic-placement-intents/{generic-placement-intent-name}/app-intents:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/genericPlacementIntentName'\n    post:\n      tags:\n        - Generic Placement Intent\n      summary: Add intent for an application\n      description: Add a `intent for application`\n      operationId: addIntentToGenericPlacementIntent\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/GenericPlacementAppIntent'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/GenericPlacementAppIntent'\n    get: # documentation for GET operation for this path\n      tags:\n        - Generic Placement Intent\n      summary: Get all Intents in Generic Placement\n\n      description: |\n        Get all ` Intents in Generic Placement Intent`\n\n      operationId: getAllIntentsInGenericPlacementIntents\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/GenericPlacementAppIntentArray'\n        '404':\n          description: No Generic Placement Intent found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/generic-placement-intents/{generic-placement-intent-name}/app-intents/{intent-name}:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/genericPlacementIntentName'\n      - $ref: '#/components/parameters/intentName'\n\n    get: # documentation for GET operation for this path\n      tags:\n        - Generic Placement Intent\n      summary: Get intent\n\n      description: |\n        Get `generic placement intent`\n\n      operationId: getIntentfromGenericPlacementIntent\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/GenericPlacementAppIntent'\n\n        '404':\n          description: Intent  not found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - Generic Placement Intent\n      summary: Update intent for an application\n      description: Update `generic placement intent for application`\n      operationId: updateIntentToGenericPlacementIntent\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/GenericPlacementAppIntent'\n          description: Success\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      # request body documentation\n      requestBody:\n        content:\n         application/json: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/GenericPlacementAppIntent'\n        required: true\n\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Generic Placement Intent\n      summary: Delete intent\n\n      description: |\n        Delete `generic placement intent`\n\n      operationId: deleteIntentFromGenericPlacementIntent\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n\n  # Qurey for Intent - Get intent for app-name\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/generic-placement-intents/{generic-placement-intent-name}/app-intents/:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/genericPlacementIntentName'\n      - in: query\n        name: app-name\n        schema:\n          type: string\n          maxLength: 128\n        required: true\n\n    get: # documentation for GET operation for this path\n      tags:\n        - Generic Placement Intent\n      summary: Query intent for an application\n\n      description: |\n        Query `generic placement intent for application`\n\n      operationId: queryIntentfromGenericPlacementIntent\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/GenericPlacementAppIntentSpec'\n        '404':\n          description: Generic Placement Intent for application not found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n\n####################Lifecycle Management#######################################\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/approve:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n    post:\n      tags:\n        - Deployment Lifecycle\n      summary: Approve a Deployment\n      description: Approve a  Deployment\n      operationId: approveDeploymentIntentGroup\n      responses:\n        '201':\n          description: Success\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content: {}\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/instantiate:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n    post:\n      tags:\n        - Deployment Lifecycle\n      summary: Instantiate a Deployment\n      description: Instantiate a  Deployment\n      operationId: instantiateDeploymentIntentGroup\n      responses:\n        '201':\n          description: Success\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content: {}\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/terminate:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n    post:\n      tags:\n        - Deployment Lifecycle\n      summary: Terminate a Deployment\n      description: Terminate a  Deployment\n      operationId: terminateDeploymentIntentGroup\n      responses:\n        '200':\n          description: Success\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content: {}\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/migrate:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n    post:\n      tags:\n        - Deployment Lifecycle\n      summary: Migrate a Deployment\n      description: Migrate from one version of the composite app to another. Used when new apps are added or deleted in composite app or helm charts updated\n      operationId: migrateDeploymentIntentGroup\n      responses:\n        '201':\n          description: Success\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/MigrateIntent'\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/update:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n    post:\n      tags:\n        - Deployment Lifecycle\n      summary: Update a Deployment\n      description: Update a  Deployment. Any changes in the intents reflected in the end cluster(s) after update is called.\n      operationId: updateApiDeploymentIntentGroup\n      responses:\n        '201':\n          description: Success\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content: {}\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/rollback:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n    post:\n      tags:\n        - Deployment Lifecycle\n      summary: Rollback a Deployment to older revision\n      description: Revision is provided by update API. Rollback takes the deployment group to the state as in the revision.\n      operationId: rollbackDeploymentIntentGroup\n      responses:\n        '201':\n          description: Success\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/RollbackIntent'\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/status:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - in: query\n        name: type\n        description: source of status information\n        schema:\n          type: string\n          enum: [rsync, cluster]\n          default: rsync\n      - in: query\n        name: output\n        description: output format\n        schema:\n          type: string\n          enum: [summary, all, detail]\n          default: all\n      - in: query\n        name: instance\n        description: display status for given instance identifier\n        schema:\n          type: string\n          maxLength: 32\n      - in: query\n        name: app\n        description: filter status query results by given app name\n        schema:\n          type: string\n          maxLength: 64\n      - in: query\n        name: cluster\n        description: filter status query results by given cluster-provider+cluster\n        schema:\n          type: string\n          maxLength: 128\n      - in: query\n        name: resource\n        description: filter status query results by given resource name\n        schema:\n          type: string\n          maxLength: 64\n      - in: query\n        name: apps\n        description: query parameter (no value) to get list of apps\n        schema: {}\n      - in: query\n        name: clusters\n        description: query parameter (no value) to get list of clusters, optionally filtered by app\n        schema: {}\n      - in: query\n        name: resources\n        description: query parameter (no value) to get list of resources, optionally filtered by app and/or cluster (if output=cluster)\n        schema: {}\n    get:\n      tags:\n        - Deployment Lifecycle\n      summary: Status of Deployment\n      description: Status of  Deployment\n      operationId: statusDeploymentIntentGroup\n      responses:\n        '200':\n          description: Success\n          content: {}\n        '404':\n          description: No Status found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/stop:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n    post:\n      tags:\n        - Deployment Lifecycle\n      summary: Stop a Deployment\n      description: Stop a Deployment that is being instantiated/Terminated\n      operationId: stopDeploymentIntentGroup\n      responses:\n        '200':\n          description: Success\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content: {}\n############################ Controller Registration API'S #################################################\n  /controllers:\n    post:\n      tags:\n        - Controller Registration\n      summary: Controller Registration\n      description: Add a new `controller`\n      operationId: addController\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Controller'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/Controller'\n        description: Controller Info\n        required: true\n    get: # documentation for GET operation for this path\n          tags:\n            - Controller Registration\n          summary: Get all controllers\n\n          description: |\n            Get all `controllers`\n\n          operationId: getControllers\n          responses: # list of responses\n            '200':\n              description: Success\n              content:\n                application/json: # operation response mime type\n                  schema:\n                    $ref: '#/components/schemas/ControllerArray'\n            '404':\n              description: No controllers found\n            '400':\n              description: Bad Request\n            '500':\n              description: Internal Server Error\n\n  /controllers/{controller-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n    - $ref: '#/components/parameters/controllerName'\n    get: # documentation for GET operation for this path\n      tags:\n        - Controller Registration\n      summary: Get controller by name\n\n      description: |\n        Get `controller`\n\n      operationId: getController\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Controller'\n        '404':\n          description: Controller not found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - Controller Registration\n      summary: Update controller\n      description: Update `controller`\n      operationId: updateController\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Controller'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      # request body documentation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Controller'\n        description: Update controllers object\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Controller Registration\n      summary: Delete controller\n\n      description: |\n        Delete `controller`\n\n      operationId: deleteController\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n############################ Clm Controller Registration API'S #################################################\n  /clm-controllers:\n    post:\n      tags:\n        - Clm Controller Registration\n      summary: Clm Controller Registration\n      description: Add a new `ClmController`\n      operationId: addClmController\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ClmController'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/ClmController'\n        description: ClmController Info\n        required: true\n    get: # documentation for GET operation for this path\n          tags:\n            - Clm Controller Registration\n          summary: Get all controllers\n\n          description: |\n            Get all `controllers`\n\n          operationId: getClmControllers\n          responses: # list of responses\n            '200':\n              description: Success\n              content:\n                application/json: # operation response mime type\n                  schema:\n                    $ref: '#/components/schemas/ClmControllerArray'\n            '404':\n              description: No controllers found\n            '400':\n              description: Bad Request\n            '500':\n              description: Internal Server Error\n\n  /clm-controllers/{controller-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n    - $ref: '#/components/parameters/controllerName'\n    get: # documentation for GET operation for this path\n      tags:\n        - Clm Controller Registration\n      summary: Get ClmController by name\n\n      description: |\n        Get `ClmController`\n\n      operationId: getClmController\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ClmController'\n        '404':\n          description: ClmController not found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - Clm Controller Registration\n      summary: Update ClmController\n      description: Update `ClmController`\n      operationId: updateClmController\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ClmController'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '500':\n          description: Internal Server Error\n      # request body documentation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ClmController'\n        description: Update controllers object\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Clm Controller Registration\n      summary: Delete ClmController\n\n      description: |\n        Delete `ClmController`\n\n      operationId: deleteClmController\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '500':\n          description: Internal Server Error\n############################ Cluster Provider API'S #################################################\n  /cluster-providers:\n    post:\n      tags:\n        - Cluster Providers\n      summary: Cluster Providers\n      description: Add a new `cluster provider`\n      operationId: addClusterProvider\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/Metadata'\n        description: Cluster Providers Info\n        required: true\n    get: # documentation for GET operation for this path\n          tags:\n            - Cluster Providers\n          summary: Get all cluster providers\n\n          description: |\n            Get all `cluster providers`\n\n          operationId: getAllClusterProviders\n          responses: # list of responses\n            '200':\n              description: Success\n              content:\n                application/json: # operation response mime type\n                  schema:\n                    $ref: '#/components/schemas/MetadataArray'\n            '404':\n              description: No cluster provider found\n            '400':\n              description: Bad Request\n            '500':\n              description: Internal Server Error\n\n  /cluster-providers/{cluster-providers-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n    - $ref: '#/components/parameters/clusterProviderName'\n    get: # documentation for GET operation for this path\n      tags:\n        - Cluster Providers\n      summary: Get cluster provider by name\n\n      description: |\n        Get `cluster provider`\n\n      operationId: getClusterProviderByName\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '404':\n          description: Cluster Provider not found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - Cluster Providers\n      summary: Update cluster provider\n      description: Update `cluster providers`\n      operationId: updateClusterProviders\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      # request body documentation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Metadata'\n        description: Update cluster provider object\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Cluster Providers\n      summary: Delete cluster provider by name\n\n      description: |\n        Delete `cluster provider`\n\n      operationId: deleteClusterProviderByName\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n\n  /cluster-providers/{cluster-providers-name}/clusters:\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n    post:\n      tags:\n        - Clusters\n      summary: Add Cluster\n      description: Add a new `cluster`\n      operationId: addClusterToClusterProvider\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          multipart/form-data: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/AppData'\n    get: # documentation for GET operation for this path\n      tags:\n        - Clusters\n      summary: Get all clusters for cluster provider.  Option to query by label.\n      parameters:\n        - in: query\n          description: Query for clusters with label\n          name: label\n          schema:\n            type: string\n            maxLength: 128\n          required: false\n\n      description: Query clusters for a cluster provider.  When the query by label parameter is supplied, a list of cluster names is returned in the form `[ \"name1\", \"name2\" ]`, otherwise, a list of cluster objects is returned.\n\n      operationId: getAllClusterForClusterProvider\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/MetadataArray'\n        '404':\n          description: No clusters found in cluster provider\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n      - $ref: '#/components/parameters/clusterName'\n    get: # documentation for GET operation for this path\n      tags:\n        - Clusters\n      summary: Get Cluster\n\n      description: |\n        Get `cluster`\n\n      operationId: getClusterForClusterProvider\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n            application/octet-stream: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/File'\n            multipart/form-data: # Media type\n              schema:            # Request payload\n                $ref: '#/components/schemas/AppData'\n\n        '404':\n          description: Cluster not found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - Clusters\n      summary: Update Cluster (NOT SUPPORTED YET)\n      description: Update `cluster` (NOT SUPPORTED YET)\n      operationId: updateClusterToClusterProvider\n      responses:\n        '201':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n          description: Created\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '405':\n          description: Method not allowed\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      # request body documentation\n      requestBody:\n        content:\n          multipart/form-data: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/AppData'\n        required: true\n\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Clusters\n      summary: Delete cluster\n\n      description: |\n        Delete `cluster`\n\n      operationId: deleteClusterFromClusterProvider\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n\n############################ Cluster Labels API'S #################################################\n  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/labels:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n      - $ref: '#/components/parameters/clusterName'\n    post:\n      tags:\n        - Clusters\n      summary: Add label to Cluster\n      description: Add a new label to `cluster`\n      operationId: addLabelToCluster\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ClusterLabel'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/ClusterLabel'\n        description: Cluster Label\n        required: true\n    get: # documentation for GET operation for this path\n          tags:\n            - Clusters\n          summary: Get all Labels\n\n          description: |\n            Get all `labels`\n\n          operationId: getAllLabelsForCluster\n          responses: # list of responses\n            '200':\n              description: Success\n              content:\n                application/json: # operation response mime type\n                  schema:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/ClusterLabel'\n            '404':\n              description: No labels found\n            '400':\n              description: Bad Request\n            '500':\n              description: Internal Server Error\n\n  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/labels/{cluster-label-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n      - $ref: '#/components/parameters/clusterName'\n      - $ref: '#/components/parameters/clusterLabelName'\n    get: # documentation for GET operation for this path\n      tags:\n        - Clusters\n      summary: Get label\n\n      description: |\n        Get `cluster label`\n\n      operationId: getLabelForCluster\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ClusterLabel'\n        '404':\n          description: label not found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - Clusters\n      summary: Update label\n      description: Update label for `cluster`\n      operationId: updateLabelForCluster\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ClusterLabel'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/ClusterLabel'\n        description: Cluster Label\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Clusters\n      summary: Delete cluster label\n\n      description: |\n        Delete `label`\n\n      operationId: deleteLabelForCluster\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n\n############################ Cluster Key Value API'S #################################################\n  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/kv-pairs:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n      - $ref: '#/components/parameters/clusterName'\n    post:\n      tags:\n        - Clusters\n      summary: Add kv pair to Cluster\n      description: Add kv pair to `cluster`\n      operationId: addKvpairToCluster\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ClusterKv'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/ClusterKv'\n        description: Cluster KV Pair\n        required: true\n    get: # documentation for GET operation for this path\n          tags:\n            - Clusters\n          summary: Get all KV Pairs\n\n          description: |\n            Get all `KV Pairs`\n\n          operationId: getAllKvpairForCluster\n          responses: # list of responses\n            '200':\n              description: Success\n              content:\n                application/json: # operation response mime type\n                  schema:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/ClusterKv'\n            '404':\n              description: No labels found\n            '400':\n              description: Bad Request\n            '500':\n              description: Internal Server Error\n\n  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/kv-pairs/{kv-pair-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n      - $ref: '#/components/parameters/clusterName'\n      - $ref: '#/components/parameters/clusterKvpairName'\n    get: # documentation for GET operation for this path\n      parameters:\n        - in: query\n          name: key\n          description: query for value of key\n          schema:\n            type: string\n            maxLength: 128\n          required: false\n      tags:\n        - Clusters\n      summary: Query KV Pair\n      description: |\n        Get `KV pair` for cluster. If the query by key parameter is supplied, the corresponding value from the kv-pair is returned as: `{\"value\": \u003cvalue\u003e}`\n\n      operationId: getKvpairForCluster\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ClusterKv'\n        '404':\n          description: KV pair or key value not found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - Clusters\n      summary: Update KV Pair\n      description: Update KV Pair for `cluster`\n      operationId: updateKvPairForCluster\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ClusterKv'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/ClusterKv'\n        description: Cluster Label\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Clusters\n      summary: Delete cluster KV pair\n\n      description: |\n        Delete `KV pair`\n\n      operationId: deleteKvpairForCluster\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n\n############################ Cluster Virtual Networks API'S #################################################\n  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/networks:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n      - $ref: '#/components/parameters/clusterName'\n    post:\n      tags:\n        - Networks\n      summary: Add virtual network in cluster\n      description: Add a `virtual network in cluster`\n      operationId: addVirtualNetworkToCluster\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/VirtualNetwork'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/VirtualNetwork'\n        description: Add virtual network\n        required: true\n    get: # documentation for GET operation for this path\n          tags:\n            - Networks\n          summary: Get all cluster virtual networks\n\n          description: |\n            Get all `virtual networks for a cluster`\n\n          operationId: getAllVirtualNetworksForCluster\n          responses: # list of responses\n            '200':\n              description: Success\n              content:\n                application/json: # operation response mime type\n                  schema:\n                    $ref: '#/components/schemas/VirtualNetwork'\n            '404':\n              description: No virtual networks found\n            '400':\n              description: Bad Request\n            '500':\n              description: Internal Server Error\n\n  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/networks/{network-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n      - $ref: '#/components/parameters/clusterName'\n      - $ref: '#/components/parameters/clusterNetworkName'\n    get: # documentation for GET operation for this path\n      tags:\n        - Networks\n      summary: Get virtual network\n\n      description: |\n        Get `virtual network`\n\n      operationId: getVirtualNetworkForCluster\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/VirtualNetwork'\n        '404':\n          description: Network not found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Networks\n      summary: Delete virtual network\n\n      description: |\n        Delete `virtual network`\n\n      operationId: deleteVirtualNetworkForCluster\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n\n############################ Cluster Provider  Networks API'S #################################################\n  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/provider-networks:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n      - $ref: '#/components/parameters/clusterName'\n    post:\n      tags:\n        - Networks\n      summary: Add provider network in cluster\n      description: Add a `provider network in cluster`\n      operationId: addProviderNetworkToCluster\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ProviderNetwork'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/ProviderNetwork'\n        description: Add provider network\n        required: true\n    get: # documentation for GET operation for this path\n          tags:\n            - Networks\n          summary: Get all cluster provider networks\n\n          description: |\n            Get all `provider networks for a cluster`\n\n          operationId: getAllProviderNetworksForCluster\n          responses: # list of responses\n            '200':\n              description: Success\n              content:\n                application/json: # operation response mime type\n                  schema:\n                    $ref: '#/components/schemas/ProviderNetwork'\n            '404':\n              description: No provider networks found\n            '400':\n              description: Bad Request\n            '500':\n              description: Internal Server Error\n\n  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/provider-networks/{network-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n      - $ref: '#/components/parameters/clusterName'\n      - $ref: '#/components/parameters/clusterNetworkName'\n    get: # documentation for GET operation for this path\n      tags:\n        - Networks\n      summary: Get Provider Network\n\n      description: |\n        Get `provider network`\n\n      operationId: getProviderNetworkForCluster\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ProviderNetwork'\n        '404':\n          description: Provider network not found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Networks\n      summary: Delete Provider Network\n\n      description: |\n        Delete `Provider Network`\n\n      operationId: deleteProviderNetworkForCluster\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n\n  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/apply:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n      - $ref: '#/components/parameters/clusterName'\n    post:\n      tags:\n        - Networks\n      summary: Apply configuration for the cluster\n      description: Apply configuration for the cluster to create networks\n      operationId: applyNetworksForCluster\n      responses:\n        '201':\n          description: Success\n          content: {}\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content: {}\n\n  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/terminate:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n      - $ref: '#/components/parameters/clusterName'\n    post:\n      tags:\n        - Networks\n      summary: Apply configuration for the cluster\n      description: Apply configuration for the cluster to create networks\n      operationId: terminateNetworksForCluster\n      responses:\n        '201':\n          description: Success\n          content: {}\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content: {}\n\n  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/status:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n      - $ref: '#/components/parameters/clusterName'\n      - in: query\n        name: type\n        description: source of status information\n        schema:\n          type: string\n          enum: [rsync, cluster]\n          default: rsync\n      - in: query\n        name: output\n        description: output format\n        schema:\n          type: string\n          enum: [summary, all, detail]\n          default: all\n      - in: query\n        name: instance\n        description: instance identifier\n        schema:\n          type: string\n          maxLength: 32\n      - in: query\n        name: app\n        description: app name\n        schema:\n          type: string\n          maxLength: 64\n      - in: query\n        name: cluster\n        description: filter status query results by given cluster-provider+cluster\n        schema:\n          type: string\n          maxLength: 128\n      - in: query\n        name: resource\n        description: filter status query results by given resource\n        schema:\n          type: string\n          maxLength: 64\n    get:\n      tags:\n        - Networks\n      summary: Query status of cluster network intents\n      description: Query status of cluster network intents\n      operationId: statusNetworksForCluster\n      responses:\n        '200':\n          description: Success\n          content: {}\n        '404':\n          description: No Status found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n\n  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/stop:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n      - $ref: '#/components/parameters/clusterName'\n    post:\n      tags:\n        - Networks\n      summary: Stop apply/terminate\n      description: Stop apply/terminate\n      operationId: stopNetworksForCluster\n      responses:\n        '201':\n          description: Success\n          content: {}\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content: {}\n\n######################## Network Controller Intent API's##########################################\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/network-controller-intent:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n    post:\n      tags:\n        - Network Controller Intent\n      summary: Network Controller Intent API's\n      description: Add a new `network controller intent`\n      operationId: addNetworkControllerIntent\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n    get: # documentation for GET operation for this path\n      tags:\n        - Network Controller Intent\n      summary: Get all Network Controller Intent\n\n      description: |\n        Get all `network controller intent`\n\n      operationId: getAllNetworkControllerIntent\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/MetadataArray'\n        '404':\n          description: No Network Controller Intent found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/network-controller-intent/{net-control-intent}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/netControlIntent'\n    get: # documentation for GET operation for this path\n      tags:\n        - Network Controller Intent\n      summary: Get Network Controller Intent\n\n      description: |\n        Get `network controller intent`\n\n      operationId: getNetworkControllerIntent\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '404':\n          description: Network Controller Intent not found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - Network Controller Intent\n      summary: Update Network Controller Intent\n      description: Update `Network Controller Intent`\n      operationId: updateNetworkControllerIntent\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n          description: Success\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      # request body documentation\n      requestBody:\n        content:\n          application/json: # operation response mime type\n            schema:\n              $ref: '#/components/schemas/Metadata'\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Network Controller Intent\n      summary: Delete Network Controller Intent\n\n      description: |\n        Delete `Network Controller Intent`\n\n      operationId: deleteNetworkControllerIntent\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n\n################## Workload Intents##################################\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/network-controller-intent/{net-control-intent}/workload-intents:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/netControlIntent'\n    post:\n      tags:\n        - Network Controller Intent\n      summary: Network Controller Workload Intent API's\n      description: Add a new `network controller workload intent`\n      operationId: addNetworkControllerWorkloadIntent\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/NetworkWorkloadSpec'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/NetworkWorkloadSpec'\n    get: # documentation for GET operation for this path\n      tags:\n        - Network Controller Intent\n      summary: Get Network Controller Workload Intent\n\n      description: |\n        Get all `network controller workload intent`\n\n      operationId: getAllNetworkControllerWorkloadIntent\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/NetworkWorkloadSpecArray'\n        '404':\n          description: No Network Controller Workload Intent found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/network-controller-intent/{net-control-intent}/workload-intents/{workload-intent-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/netControlIntent'\n      - $ref: '#/components/parameters/netControlWorkloadIntent'\n    get: # documentation for GET operation for this path\n      tags:\n        - Network Controller Intent\n      summary: Get Network Controller Workload Intent\n\n      description: |\n        Get `network controller workload intent`\n\n      operationId: getNetworkControllerWorkloadIntent\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/NetworkWorkloadSpec'\n        '404':\n          description: Network Controller Workload Intent not found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - Network Controller Intent\n      summary: Update Network Controller Workload Intent\n      description: Update `Network Controller Workload Intent`\n      operationId: updateNetworkControllerWorkloadIntent\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/NetworkWorkloadSpec'\n          description: Success\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      # request body documentation\n      requestBody:\n        content:\n          application/json: # operation response mime type\n            schema:\n              $ref: '#/components/schemas/NetworkWorkloadSpec'\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Network Controller Intent\n      summary: Delete Network Controller Workload Intent\n\n      description: |\n        Delete `Network Controller Workload Intent`\n\n      operationId: deleteNetworkControllerWorkloadIntent\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n\n################## Workload Intents Interfaces ##################################\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/network-controller-intent/{net-control-intent}/workload-intents/{workload-intent-name}/interfaces:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/netControlIntent'\n      - $ref: '#/components/parameters/netControlWorkloadIntent'\n    post:\n      tags:\n        - Network Controller Intent\n      summary: Network Controller Workload Interface API's\n      description: Add a new `network controller workload interface`\n      operationId: addNetworkControllerWorkloadInterface\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/NetworkWorkloadInterface'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/NetworkWorkloadInterface'\n    get: # documentation for GET operation for this path\n      tags:\n        - Network Controller Intent\n      summary: Get all Network Controller Workload Interface\n\n      description: |\n        Get all `network controller workload interface`\n\n      operationId: getAllNetworkControllerWorkloadInterface\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/NetworkWorkloadInterfaceArray'\n        '404':\n          description: No Network Controller Workload Interface found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/network-controller-intent/{net-control-intent}/workload-intents/{workload-intent-name}/interfaces/{interface-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/netControlIntent'\n      - $ref: '#/components/parameters/netControlWorkloadIntent'\n      - $ref: '#/components/parameters/netControlWorkloadInterface'\n    get: # documentation for GET operation for this path\n      tags:\n        - Network Controller Intent\n      summary: Get Network Controller Workload Interface\n\n      description: |\n        Get `network controller workload interface`\n\n      operationId: getNetworkControllerWorkloadInterface\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/NetworkWorkloadInterface'\n        '404':\n          description: Network Controller Workload Interface not found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - Network Controller Intent\n      summary: Update Network Controller Workload Interface\n      description: Update `Network Controller Workload Interface`\n      operationId: updateNetworkControllerWorkloadInterface\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/NetworkWorkloadInterface'\n          description: Success\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      # request body documentation\n      requestBody:\n        content:\n          application/json: # operation response mime type\n            schema:\n              $ref: '#/components/schemas/NetworkWorkloadInterface'\n        required: true\n\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Network Controller Intent\n      summary: Delete Network Controller Workload Interface\n\n      description: |\n        Delete `Network Controller Workload Interface`\n\n      operationId: deleteNetworkControllerWorkloadInterface\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n\n############################ Network Chaining API's #################################################\n  '/projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/network-controller-intent/{net-control-intent}/network-chains':\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/netControlIntent'\n    post:\n      tags:\n        - Network Chain Intent\n      summary: Create Network Chain Intent\n      description: Add a new `network chain intent`\n      operationId: addNetworkChainIntent\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RouteBasedChain'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RouteBasedChain'\n    get:\n      tags:\n        - Network Chain Intent\n      summary: Get all Network Chain Intents\n      description: |\n        Get all `network chain intents`\n      operationId: getAllNetworkChainIntent\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RouteBasedChainArray'\n        '400':\n          description: Bad Request\n        '404':\n          description: No Network Controller Intent found\n        '500':\n          description: Internal Server Error\n  '/projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/network-controller-intent/{net-control-intent}/network-chains/{network-chain}':\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/netControlIntent'\n      - $ref: '#/components/parameters/networkChainIntent'\n    get:\n      tags:\n        - Network Chain Intent\n      summary: Get Network Chain Intent\n      description: |\n        Get `network chain intent`\n      operationId: getNetworkChainIntent\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RouteBasedChain'\n        '400':\n          description: Bad Request\n        '404':\n          description: Network Chain Intent not found\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - Network Chain Intent\n      summary: Update Network Chain Intent\n      description: Update `Network Chain Intent`\n      operationId: updateNetworkChainIntent\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RouteBasedChain'\n          description: Success\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RouteBasedChain'\n        required: true\n    delete:\n      tags:\n        - Network Chain Intent\n      summary: Delete Network Chain Intent\n      description: |\n        Delete `Network Chain Intent`\n      operationId: deleteNetworkChainIntent\n      responses:\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n  '/projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/network-controller-intent/{net-control-intent}/network-chains/{network-chain}/client-selectors':\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/netControlIntent'\n      - $ref: '#/components/parameters/networkChainIntent'\n    post:\n      tags:\n        - Network Chain Client Selector Intent\n      summary: Create Network Chain Client Selector Intent\n      description: Add a new `network chain client selector intent`\n      operationId: addNetworkChainClientSelectorIntent\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChainClientSelector'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChainClientSelector'\n    get:\n      tags:\n        - Network Chain Client Selector Intent\n      summary: Get all Network Chain Client Selector Intents\n      description: |\n        Get all `network chain client selector intents`\n      operationId: getAllNetworkChainClientSelectorIntent\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChainClientSelectorArray'\n        '400':\n          description: Bad Request\n        '404':\n          description: No Network Chain Client Selector Intent found\n        '500':\n          description: Internal Server Error\n  '/projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/network-controller-intent/{net-control-intent}/network-chains/{network-chain}/client-selectors/{network-chain-client-selector}':\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/netControlIntent'\n      - $ref: '#/components/parameters/networkChainIntent'\n      - $ref: '#/components/parameters/networkChainClientSelectorIntent'\n    get:\n      tags:\n        - Network Chain Client Selector Intent\n      summary: Get Network Chain Client Selector Intent\n      description: |\n        Get `network chain client selector intent`\n      operationId: getNetworkChainClientSelectorIntent\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChainClientSelector'\n        '400':\n          description: Bad Request\n        '404':\n          description: Network Chain Client Selector Intent not found\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - Network Chain Client Selector Intent\n      summary: Update Network Chain Client Selector Intent\n      description: Update `Network Chain Client Selector Intent`\n      operationId: updateNetworkChainClientSelectorIntent\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChainClientSelector'\n          description: Success\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChainClientSelector'\n        required: true\n    delete:\n      tags:\n        - Network Chain Client Selector Intent\n      summary: Delete Network Chain Client Selector Intent\n      description: |\n        Delete `Network Chain Client Selector Intent`\n      operationId: deleteNetworkChainClientSelectorIntent\n      responses:\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n  '/projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/network-controller-intent/{net-control-intent}/network-chains/{network-chain}/provider-networks':\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/netControlIntent'\n      - $ref: '#/components/parameters/networkChainIntent'\n    post:\n      tags:\n        - Network Chain Provider Network Intent\n      summary: Create Network Chain Provider Network Intent\n      description: Add a new `network chain provider network intent`\n      operationId: addNetworkChainProviderNetworkIntent\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChainProviderNetwork'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChainProviderNetwork'\n    get:\n      tags:\n        - Network Chain Provider Network Intent\n      summary: Get all Network Chain Provider Network Intent\n      description: |\n        Get all `network chain provider network intents`\n      operationId: getAllNetworkChainProviderNetworkIntent\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChainProviderNetworkArray'\n        '400':\n          description: Bad Request\n        '404':\n          description: No Network Chain Provider Network Intent found\n        '500':\n          description: Internal Server Error\n  '/projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/network-controller-intent/{net-control-intent}/network-chains/{network-chain}/provider-networks/{network-chain-provider-network}':\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/netControlIntent'\n      - $ref: '#/components/parameters/networkChainIntent'\n      - $ref: '#/components/parameters/networkChainProviderNetworkIntent'\n    get:\n      tags:\n        - Network Chain Provider Network Intent\n      summary: Get Network Chain Provider Network Intent\n      description: |\n        Get `network chain provider network intent`\n      operationId: getNetworkChainProviderNetworkIntent\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChainProviderNetwork'\n        '400':\n          description: Bad Request\n        '404':\n          description: Network Chain Provider Network Intent not found\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - Network Chain Provider Network Intent\n      summary: Update Network Chain Provider Network Intent\n      description: Update `Network Chain Provider Network Intent`\n      operationId: updateNetworkChainProviderNetworkIntent\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChainProviderNetwork'\n          description: Success\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChainProviderNetwork'\n        required: true\n    delete:\n      tags:\n        - Network Chain Provider Network Intent\n      summary: Delete Network Chain Provider Network Intent\n      description: |\n        Delete `Network Chain Provider Network Intent`\n      operationId: deleteNetworkChainProviderNetworkIntent\n      responses:\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n  '/projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/network-controller-intent/{net-control-intent}/sfc-clients':\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/netControlIntent'\n    post:\n      tags:\n        - Network Chain Client Intent\n      summary: Create Network Chain Client Intent\n      description: Add a new `network chain client intent`\n      operationId: addNetworkChainClientIntent\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChainClient'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChainClient'\n    get:\n      tags:\n        - Network Chain Client Intent\n      summary: Get all Network Chain Client Intent\n      description: |\n        Get all `network chain client intents`\n      operationId: getAllNetworkChainClientIntent\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChainClientArray'\n        '400':\n          description: Bad Request\n        '404':\n          description: No Network Chain Client Intent found\n        '500':\n          description: Internal Server Error\n  '/projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/network-controller-intent/{net-control-intent}/sfc-clients/{network-chain-client}':\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/netControlIntent'\n      - $ref: '#/components/parameters/networkChainClientIntent'\n    get:\n      tags:\n        - Network Chain Client Intent\n      summary: Get Network Chain Client Intent\n      description: |\n        Get `network chain client intent`\n      operationId: getNetworkChainClientIntent\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChainClient'\n        '400':\n          description: Bad Request\n        '404':\n          description: Network Chain Client Intent not found\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - Network Chain Client Intent\n      summary: Update Network Chain Client Intent\n      description: Update `Network Chain Client Intent`\n      operationId: updateNetworkChainClientIntent\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChainClient'\n          description: Success\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChainClient'\n        required: true\n    delete:\n      tags:\n        - Network Chain Client Intent\n      summary: Delete Network Chain Client Intent\n      description: |\n        Delete `Network Chain Client Intent`\n      operationId: deleteNetworkChainClientIntent\n      responses:\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n############################ Logical Cloud API's #################################################\n  /projects/{project-name}/logical-clouds:\n    parameters:\n    - $ref: '#/components/parameters/projectName'\n    post:\n      tags:\n        - Logical Clouds\n      summary: Add a new Logical Cloud\n      description: Add a new Logical Cloud\n      operationId: addLogicalCloud\n      responses:\n        '201':\n          description: Logical Clouds successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogicalCloud'\n        '400':\n          description: Empty body or missing name\n          content: {}\n        '404':\n          description: The specified project doesn't exist\n          content: {}\n        '409':\n          description: The Logical Cloud already exists\n          content: {}\n        '422':\n          description: Invalid input\n          content: {}\n        '500':\n          description: Internal error creating or returning Logical Cloud\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/LogicalCloud'\n        description: Logical Cloud info\n        required: true\n    get:\n      tags:\n        - Logical Clouds\n      summary: Get all Logical Clouds\n      description: Get all Logical Clouds\n      operationId: getAllLogicalCloud\n      responses:\n        '200':\n          description: List of Logical Clouds successfully returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogicalCloudArray'\n        '500':\n          description: Internal error while looking up Logical Clouds or encoding response\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n\n  /projects/{project-name}/logical-clouds/{logical-cloud-name}:\n    parameters:\n    - $ref: '#/components/parameters/projectName'\n    - $ref: '#/components/parameters/logicalCloudName'\n    get:\n      tags:\n        - Logical Clouds\n      summary: Get Logical Cloud\n      description: Get Logical Cloud\n      operationId: getLogicalCloudByName\n      responses:\n        '200':\n          description: Logical Cloud successfully returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogicalCloud'\n        '404':\n          description: Logical Cloud not found\n          content: {}\n        '500':\n          description: Internal error while looking up Logical Cloud or encoding response\n          content: {}\n        '400':\n          description: Bad Request\n    delete:\n      tags:\n        - Logical Clouds\n      summary: Delete Logical Cloud\n      description: Delete `Logical Cloud`\n      operationId: deleteLogicalCloudByName\n      responses:\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n  /projects/{project-name}/logical-clouds/{logical-cloud-name}/instantiate:\n    parameters:\n    - $ref: '#/components/parameters/projectName'\n    - $ref: '#/components/parameters/logicalCloudName'\n    post:\n      tags:\n        - Logical Clouds\n      summary: Instantiate Logical Cloud configuration\n      description: Instantiate Logical Cloud configuration\n      operationId: instantiateLogicalCloud\n      responses:\n        '202':\n          description: Logical Cloud accepted for instantiation over clusters\n          content: {}\n        '400':\n          description: Logical Cloud lacks the necessary resources or namespaces of clusters have different namespaces\n          content: {}\n        '404':\n          description: Logical Cloud or Cluster Reference does not exist\n          content: {}\n        '409':\n          description: Logical Cloud isn't in the correct state\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n      requestBody:\n        content: {}\n  /projects/{project-name}/logical-clouds/{logical-cloud-name}/terminate:\n    parameters:\n    - $ref: '#/components/parameters/projectName'\n    - $ref: '#/components/parameters/logicalCloudName'\n    post:\n      tags:\n        - Logical Clouds\n      summary: Terminate Logical Cloud deployment\n      description: Terminate Logical Cloud deployment\n      operationId: terminateLogicalCloud\n      responses:\n        '200':\n          description: Logical Cloud removed from clusters\n          content: {}\n        '400':\n          description: Logical Cloud lacks the necessary resources\n          content: {}\n        '404':\n          description: Logical Cloud does not exist\n          content: {}\n        '409':\n          description: Logical Cloud has not been applied or is already terminating\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n      requestBody:\n        content: {}\n\n############################ Logical Cloud Cluster Reference API's ###############################\n  /projects/{project-name}/logical-clouds/{logical-cloud-name}/cluster-references:\n    parameters:\n    - $ref: '#/components/parameters/projectName'\n    - $ref: '#/components/parameters/logicalCloudName'\n    post:\n      tags:\n        - Logical Cloud Cluster References\n      summary: Add Cluster Reference to Logical Cloud\n      description: Add Cluster Reference to Logical Cloud\n      operationId: addClusterReference\n      responses:\n        '201':\n          description: Cluster Reference successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterReference'\n        '400':\n          description: Empty body or missing name or Logical Cloud is applied\n          content: {}\n        '404':\n          description: Project or Logical Cloud doesn't exist\n          content: {}\n        '409':\n          description: Cluster Reference already exists\n          content: {}\n        '422':\n          description: Invalid input\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/ClusterReference'\n    get:\n      tags:\n        - Logical Cloud Cluster References\n      summary: Get all Cluster References for Logical Cloud\n      description: Get all Cluster References for Logical Cloud\n      operationId: getAllClusters\n      responses:\n        '200':\n          description: Cluster References successfully returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterReferenceArray'\n        '400':\n          description: No Cluster References are associated\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n        '404':\n          description: Not Found\n\n  /projects/{project-name}/logical-clouds/{logical-cloud-name}/cluster-references/{cluster-reference}:\n    parameters:\n    - $ref: '#/components/parameters/projectName'\n    - $ref: '#/components/parameters/logicalCloudName'\n    - $ref: '#/components/parameters/clusterReference'\n    get:\n      tags:\n        - Logical Cloud Cluster References\n      summary: Get Cluster Reference\n      description: Get Cluster Reference\n      operationId: getClusterReference\n      responses:\n        '200':\n          description: Cluster Reference successfully returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterReference'\n        '404':\n          description: Cluster Reference not found\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n        '400':\n          description: Bad Request\n    delete:\n      tags:\n        - Logical Cloud Cluster References\n      summary: Delete Cluster Reference\n      description: Delete Cluster Reference\n      operationId: deleteClusterReference\n      responses:\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n\n############################ Logical Cloud User Permission API's #################################\n  /projects/{project-name}/logical-clouds/{logical-cloud-name}/user-permissions:\n    parameters:\n    - $ref: '#/components/parameters/projectName'\n    - $ref: '#/components/parameters/logicalCloudName'\n    post:\n      tags:\n        - Logical Cloud User Permissions\n      summary: Add User Permission to Logical Cloud\n      description: Add User Permission to Logical Cloud\n      operationId: addUserPermission\n      responses:\n        '201':\n          description: User Permission successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserPermission'\n        '400':\n          description: Empty body or missing name\n          content: {}\n        '422':\n          description: Invalid input\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/UserPermission'\n    get:\n      tags:\n        - Logical Cloud User Permissions\n      summary: Get all User Permissions for Logical Cloud\n      description: Get all User Permissions for Logical Cloud\n      operationId: getAllUserPermissions\n      responses:\n        '200':\n          description: User Permissions successfully returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserPermissionArray'\n        '404':\n          description: Not Found\n          content: {}\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n  /projects/{project-name}/logical-clouds/{logical-cloud-name}/user-permissions/{user-permission}:\n    parameters:\n    - $ref: '#/components/parameters/projectName'\n    - $ref: '#/components/parameters/logicalCloudName'\n    - $ref: '#/components/parameters/userPermission'\n    get:\n      tags:\n        - Logical Cloud User Permissions\n      summary: Get User Permission\n      description: Get User Permission\n      operationId: getUserPermission\n      responses:\n        '200':\n          description: User Permission successfully returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserPermission'\n\n        '404':\n          description: User Permission not found\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n        '400':\n          description: Bad Request\n    delete:\n      tags:\n        - Logical Cloud User Permissions\n      summary: Delete User Permission\n      description: Delete User Permission\n      operationId: deleteUserPermission\n      responses:\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n############################ Logical Cloud Cluster Quota API's ###################################\n  /projects/{project-name}/logical-clouds/{logical-cloud-name}/cluster-quotas:\n    parameters:\n    - $ref: '#/components/parameters/projectName'\n    - $ref: '#/components/parameters/logicalCloudName'\n    post:\n      tags:\n        - Logical Cloud Cluster Quotas\n      summary: Add Cluster Quota to Logical Cloud\n      description: Add Cluster Quota to Logical Cloud\n      operationId: addClusterQuota\n      responses:\n        '201':\n          description: Cluster Quota successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterQuota'\n        '400':\n          description: Empty body or missing name\n          content: {}\n        '422':\n          description: Invalid input\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/ClusterQuota'\n    get:\n      tags:\n        - Logical Cloud Cluster Quotas\n      summary: Get allCluster Quotas for Logical Cloud\n      description: Get all Cluster Quotas for Logical Cloud\n      operationId: getAllClusterQuotas\n      responses:\n        '200':\n          description: Cluster Quotas successfully returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterQuotaArray'\n        '500':\n          description: Internal error\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n  /projects/{project-name}/logical-clouds/{logical-cloud-name}/cluster-quotas/{cluster-quota}:\n    parameters:\n    - $ref: '#/components/parameters/projectName'\n    - $ref: '#/components/parameters/logicalCloudName'\n    - $ref: '#/components/parameters/clusterQuota'\n    get:\n      tags:\n        - Logical Cloud Cluster Quotas\n      summary: Get Cluster Quota\n      description: Get Cluster Quota\n      operationId: getClusterQuota\n      responses:\n        '200':\n          description: Cluster Quota successfully returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterQuota'\n\n        '404':\n          description: Cluster Quota not found\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n        '400':\n          description: Bad Request\n    delete:\n      tags:\n        - Logical Cloud Cluster Quotas\n      summary: Delete Cluster Quota\n      description: Delete Cluster Quota\n      operationId: deleteClusterQuota\n      responses:\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n\n############################ Logical Cloud KV Pair API's #########################################\n  /projects/{project-name}/logical-clouds/{logical-cloud-name}/kv-pairs:\n    parameters:\n    - $ref: '#/components/parameters/projectName'\n    - $ref: '#/components/parameters/logicalCloudName'\n    post:\n      tags:\n        - Logical Cloud KV Pairs\n      summary: Add KV Pair to Logical Cloud\n      description: Add KV Pair to Logical Cloud\n      operationId: addKVPair\n      responses:\n        '201':\n          description: KV Pair successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '400':\n          description: Empty body or missing name\n          content: {}\n        '422':\n          description: Invalid input\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/KVPair'\n    get:\n      tags:\n        - Logical Cloud KV Pairs\n      summary: Get all KV Pairs for Logical Cloud\n      description: Get all KV Pairs for Logical Cloud\n      operationId: getAllKVPairs\n      responses:\n        '200':\n          description: KV Pairs successfully returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KVPairArray'\n        '500':\n          description: Internal error\n          content: {}\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n  /projects/{project-name}/logical-clouds/{logical-cloud-name}/kv-pairs/{kv-pair}:\n    parameters:\n    - $ref: '#/components/parameters/projectName'\n    - $ref: '#/components/parameters/logicalCloudName'\n    - $ref: '#/components/parameters/kvPair'\n    get:\n      tags:\n        - Logical Cloud KV Pairs\n      summary: Get KV Pair\n      description: Get KV Pair\n      operationId: getKVPair\n      responses:\n        '200':\n          description: KV Pair successfully returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Metadata'\n\n        '404':\n          description: KV Pair not found\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n        '400':\n          description: Bad Request\n\n    delete:\n      tags:\n        - Logical Cloud KV Pairs\n      summary: Delete KV Pair\n      description: Delete KV Pair\n      operationId: deleteKVPair\n      responses:\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n\n\n  ######################## Generic Controller Intent API's##########################################\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/generic-k8s-intents:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n    post:\n      tags:\n        - Generic Controller Intent\n      summary: Generic Controller Intent API's\n      description: Add a new `generic controller intent`\n      operationId: addGenericControllerIntent\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n    get: # documentation for GET operation for this path\n      tags:\n        - Generic Controller Intent\n      summary: Get all Generic Controller Intent\n\n      description: |\n        Get all `generic controller intent`\n      operationId: getAllGenericControllerIntent\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/MetadataArray'\n        '404':\n          description: No Generic Controller Intent found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/generic-k8s-intents/{gen-k8s-intent}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/genControlIntent'\n    get: # documentation for GET operation for this path\n      tags:\n        - Generic Controller Intent\n      summary: Get Generic Controller Intent\n\n      description: |\n        Get `generic controller intent`\n      operationId: getGenericControllerIntent\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '404':\n          description: Generic Controller Intent not found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - Generic Controller Intent\n      summary: Update Generic Controller Intent\n      description: Update `Generic Controller Intent`\n      operationId: updateGenericControllerIntent\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n          description: Success\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      # request body documentation\n      requestBody:\n        content:\n          application/json: # operation response mime type\n            schema:\n              $ref: '#/components/schemas/Metadata'\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Generic Controller Intent\n      summary: Delete Generic Controller Intent\n\n      description: |\n        Delete `Generic Controller Intent`\n      operationId: deleteGenericControllerIntent\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n\n################## Resource Intents##################################\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/generic-k8s-intents/{gen-k8s-intent}/resources:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/genControlIntent'\n    post:\n      tags:\n        - Generic Controller Intent\n      summary: Generic Controller Resource Intent API's\n      description: Add a new `generic controller resource intent`\n      operationId: addGenericControllerResourceIntent\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/GenericResourceMetaSpec'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          multipart/form-data: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/GenericResource'\n\n    get: # documentation for GET operation for this path\n      tags:\n        - Generic Controller Intent\n      summary: Get Generic Controller Resource Intent\n\n      description: |\n        Get all `generic controller resource intent`\n      operationId: getAllGenericControllerResourceIntent\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/GenericResourceArray'\n        '404':\n          description: No Generic Controller Resource Intent found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/generic-k8s-intents/{gen-k8s-intent}/resources/{resource-intent-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/genControlIntent'\n      - $ref: '#/components/parameters/genControlResourceIntent'\n    get: # documentation for GET operation for this path\n      tags:\n        - Generic Controller Intent\n      summary: Get Generic Controller Resource Intent\n\n      description: |\n        Get `generic controller resource intent`\n      operationId: getGenericControllerResourceIntent\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/GenericResourceMetaSpec'\n        '404':\n          description: Generic Controller Resource Intent not found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - Generic Controller Intent\n      summary: Update Generic Controller Resource Intent\n      description: Update `Generic Controller Resource Intent`\n      operationId: updateGenericControllerResourceIntent\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/GenericResourceMetaSpec'\n          description: Success\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      # request body documentation\n      requestBody:\n        content:\n          multipart/form-data: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/GenericResource'\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Generic Controller Intent\n      summary: Delete Generic Controller Resource Intent\n\n      description: |\n        Delete `Generic Controller Resource Intent`\n      operationId: deleteGenericControllerResourceIntent\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n\n################## Resource Intents Customizations ##################################\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/generic-k8s-intents/{gen-k8s-intent}/resources/{resource-intent-name}/customizations:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/genControlIntent'\n      - $ref: '#/components/parameters/genControlResourceIntent'\n    post:\n      tags:\n        - Generic Controller Intent\n      summary: Generic Controller Resource Customization API's\n      description: Add a new `generic controller resource customization`\n      operationId: addGenericControllerResourceCustomization\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/GenericResourceCustomizationMetaSpec'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          multipart/form-data: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/GenericResourceCustomization'\n    get: # documentation for GET operation for this path\n      tags:\n        - Generic Controller Intent\n      summary: Get all Generic Controller Resource Customization\n\n      description: |\n        Get all `generic controller resource customization`\n      operationId: getAllGenericControllerResourceCustomization\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/GenericResourceCustomizationArray'\n        '404':\n          description: No Generic Controller Resource Customization found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/generic-k8s-intents/{gen-k8s-intent}/resources/{resource-intent-name}/customizations/{customization-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/genControlIntent'\n      - $ref: '#/components/parameters/genControlResourceIntent'\n      - $ref: '#/components/parameters/genControlResourceCustomization'\n    get: # documentation for GET operation for this path\n      tags:\n        - Generic Controller Intent\n      summary: Get Generic Controller Resource Customization\n\n      description: |\n        Get `generic controller resource customization`\n      operationId: getGenericControllerResourceCustomization\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/GenericResourceCustomizationMetaSpec'\n        '404':\n          description: Generic Controller Resource Customization not found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - Generic Controller Intent\n      summary: Update Generic Controller Resource Customization\n      description: Update `Generic Controller Resource Customization`\n      operationId: updateGenericControllerResourceCustomization\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/GenericResourceCustomizationMetaSpec'\n          description: Success\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      # request body documentation\n      requestBody:\n        content:\n          multipart/form-data: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/GenericResourceCustomization'\n        required: true\n\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Generic Controller Intent\n      summary: Delete Generic Controller Resource Customization\n\n      description: |\n        Delete `Generic Controller Resource Customization`\n      operationId: deleteGenericControllerResourceCustomization\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n\n  ######################## Traffic Controller Intent API's##########################################\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/traffic-group-intents:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n    post:\n      tags:\n        - Traffic Controller Intent\n      summary: Traffic Controller Intent API's\n      description: Add a new `traffic controller intent`\n      operationId: addTrafficControllerIntent\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n    get: # documentation for GET operation for this path\n      tags:\n        - Traffic Controller Intent\n      summary: Get all Traffic Controller Intent\n\n      description: |\n        Get all `traffic controller intent`\n      operationId: getAllTrafficControllerIntent\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/MetadataArray'\n        '404':\n          description: No Traffic Controller Intent found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/traffic-group-intents/{traffic-cont-intent}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/trafficControlIntent'\n    get: # documentation for GET operation for this path\n      tags:\n        - Traffic Controller Intent\n      summary: Get Traffic Controller Intent\n\n      description: |\n        Get `traffic controller intent`\n      operationId: getTrafficControllerIntent\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '404':\n          description: Traffic Controller Intent not found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - Traffic Controller Intent\n      summary: Update Traffic Controller Intent\n      description: Update `Traffic Controller Intent`\n      operationId: updateTrafficControllerIntent\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n          description: Success\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      # request body documentation\n      requestBody:\n        content:\n          application/json: # operation response mime type\n            schema:\n              $ref: '#/components/schemas/Metadata'\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Traffic Controller Intent\n      summary: Delete Traffic Controller Intent\n\n      description: |\n        Delete `Traffic Controller Intent`\n      operationId: deleteTrafficControllerIntent\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n\n################## Inbound Server Intents ##################################\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/traffic-group-intents/{traffic-cont-intent}/inbound-intents:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/trafficControlIntent'\n    post:\n      tags:\n        - Traffic Controller Intent\n      summary: Traffic Controller Inbound Server Intent API's\n      description: Add a new `traffic controller inbound intent`\n      operationId: addTrafficControllerInboundIntent\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/InboundServerIntent'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/InboundServerIntent'\n\n    get: # documentation for GET operation for this path\n      tags:\n        - Traffic Controller Intent\n      summary: Get Traffic Controller Server Inbound Intent\n      description: |\n        Get all `traffic controller server inbound intent`\n      operationId: getAllTrafficControllerInboundIntent\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/InboundServerIntentArray'\n        '404':\n          description: No Traffic Controller Inbound Intent found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/traffic-group-intents/{traffic-cont-intent}/inbound-intents/{inbound-server-intent}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/trafficControlIntent'\n      - $ref: '#/components/parameters/trafficInboundIntent'\n    get: # documentation for GET operation for this path\n      tags:\n        - Traffic Controller Intent\n      summary: Get Traffic Controller Server Inbound Intent\n\n      description: |\n        Get `traffic controller server inbound intent`\n      operationId: getTrafficControllerInboundIntent\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/InboundServerIntent'\n        '404':\n          description: Traffic Controller Inbound Intent not found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - Traffic Controller Intent\n      summary: Update Traffic Controller Server Inbound Intent\n      description: Update `Traffic Controller Server Inbound Intent`\n      operationId: updateTrafficControllerInboundIntent\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/InboundServerIntent'\n          description: Success\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      # request body documentation\n      requestBody:\n        content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/InboundServerIntent'\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Traffic Controller Intent\n      summary: Delete Traffic Controller Server Inbound Intent\n\n      description: |\n        Delete `Traffic Controller Server Inbound Intent`\n      operationId: deleteTrafficControllerInboundIntent\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n\n################## Inbound Client Intents ##################################\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/traffic-group-intents/{traffic-cont-intent}/inbound-intents/{inbound-server-intent}/clients:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/trafficControlIntent'\n      - $ref: '#/components/parameters/trafficInboundIntent'\n    post:\n      tags:\n        - Traffic Controller Intent\n      summary: Traffic Controller Client Inbound Intent API's\n      description: Add a new `traffic controller client inbound intent`\n      operationId: addTrafficControllerInboundClientIntent\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/InboundClientIntent'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/InboundClientIntent'\n    get: # documentation for GET operation for this path\n      tags:\n        - Traffic Controller Intent\n      summary: Get all Traffic Controller Client Inbound Intent\n\n      description: |\n        Get all `traffic controller client inbound intent`\n      operationId: getAllTrafficControllerInboundClientIntent\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/InboundClientIntentArray'\n        '404':\n          description: No Traffic Controller Client Inbound Intent found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/traffic-group-intents/{traffic-cont-intent}/inbound-intents/{inbound-server-intent}/clients/{inbound-client-intent}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/trafficControlIntent'\n      - $ref: '#/components/parameters/trafficInboundIntent'\n      - $ref: '#/components/parameters/trafficInboundClientIntent'\n    get: # documentation for GET operation for this path\n      tags:\n        - Traffic Controller Intent\n      summary: Get Traffic Controller Client Inbound Intent\n\n      description: |\n        Get `traffic controller client inbound intent`\n      operationId: getTrafficControllerInboundClientIntent\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/InboundClientIntent'\n        '404':\n          description: Traffic Controller Client Inbound Intent not found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - Traffic Controller Intent\n      summary: Update Traffic Controller Client Inbound Intent\n      description: Update `Traffic Controller Client Inbound Intent`\n      operationId: updateTrafficControllerInboundClientIntent\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/InboundClientIntent'\n          description: Success\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      # request body documentation\n      requestBody:\n        content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/InboundClientIntent'\n        required: true\n\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Traffic Controller Intent\n      summary: Delete Traffic Controller Client Inbound Intent\n\n      description: |\n        Delete `Traffic Controller Client Inbound Intent`\n      operationId: deleteTrafficControllerInboundClientIntent\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n\n  # HPA INTENTS API \n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/hpa-intents/:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n    post:\n      tags:\n        - HPA Intents\n      summary: Add HpaIntent\n      description: Add `hpa Intent`\n      operationId: addHpaIntent\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/DeploymentHpaIntent'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json: # Media type\n            schema:         # Request payload\n              $ref: '#/components/schemas/DeploymentHpaIntent'\n    get: # documentation for GET operation for this path\n      tags:\n        - HPA Intents\n      summary: Get all HPA intents\n\n      description: |\n        Get all `HPA intents`\n\n      operationId: getAllHpaIntents\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/DeploymentHpaIntentArray'\n        '404':\n          description: No Found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n  \n  # HPA INTENT RUD(retrieve, update, delete) API\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/hpa-intents/{hpa-intent-name}:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/hpaIntentName'\n\n    get: # documentation for GET operation for this path\n      tags:\n        - HPA Intents\n      summary: Get hpa intent for an application\n\n      description: |\n        Get `Deployment Intent`\n\n      operationId: getHpaIntent\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/DeploymentHpaIntent'\n        '404':\n          description: No Found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - HPA Intents\n      summary: Update hpa intent\n      description: Update `deployment hpa intent`\n      operationId: updateHpaIntent\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/DeploymentHpaIntent'\n          description: Success\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      # request body documentation\n      requestBody:\n        content:\n         application/json: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/DeploymentHpaIntent'\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - HPA Intents\n      summary: Delete hpa intent\n\n      description: |\n        Delete `Deployment Hpa intent`\n\n      operationId: deleteHpaIntent\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n  #Query\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/hpa-intents:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - in: query\n        name: intent\n        schema:\n          type: string\n          maxLength: 128\n        required: true\n\n    get: # documentation for GET operation for this path\n      tags:\n        - HPA Intents\n      summary: Query hpa intent\n\n      description: |\n        Query `Deployment Hpa Intent`\n\n      operationId: queryHpaIntent\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/DeploymentHpaIntent'\n        '404':\n          description: No Found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n\n # HPA INTENT CONSUMERS API\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/hpa-intents/{hpa-intent-name}/hpa-resource-consumers/:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/hpaIntentName'\n    post:\n      tags:\n        - HpaIntent Consumers\n      summary: Add Intent\n      description: Add `hpa Intent Consumer`\n      operationId: addHpaIntentConsumer\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/HpaResourceConsumer'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json: # Media type\n            schema:         # Request payload\n              $ref: '#/components/schemas/HpaResourceConsumer'\n    get: # documentation for GET operation for this path\n      tags:\n        - HpaIntent Consumers\n      summary: Get all hpaintent Consumers\n\n      description: |\n        Get all `hpa intents Consumers`\n\n      operationId: getAllHpaIntentConsumers\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/HpaResourceConsumerArray'\n        '404':\n          description: No Found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n \n # HPA INTENT CONSUMER RUD(retrieve, update, delete) API\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/hpa-intents/{hpa-intent-name}/hpa-resource-consumers/{hpa-consumer-name}:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/hpaIntentName'\n      - $ref: '#/components/parameters/hpaConsumerName'\n\n    get: # documentation for GET operation for this path\n      tags:\n        - HpaIntent Consumers\n      summary: Get hpa intent Consumer for an application\n\n      description: |\n        Get `Deployment HpaIntent Consumer`\n\n      operationId: getHpaIntentConsumer\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/HpaResourceConsumer'\n        '404':\n          description: No Found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n    put:\n      tags:\n        - HpaIntent Consumers\n      summary: Update hpa intent consumer\n      description: Update `deployment hpa intent Consumer`\n      operationId: updateHpaIntentConsumer\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/HpaResourceConsumer'\n          description: Success\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      # request body documentation\n      requestBody:\n        content:\n         application/json: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/HpaResourceConsumer'\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - HpaIntent Consumers\n      summary: Delete Hpa intent Consumer\n\n      description: |\n        Delete `Deployment Hpa intent Consumer`\n\n      operationId: deleteHpaIntentConsumer\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n\n  #Query\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/hpa-intents/{hpa-intent-name}/hpa-resource-consumers:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/hpaIntentName'\n      - in: query\n        name: consumer\n        schema:\n          type: string\n          maxLength: 128\n        required: true\n\n    get: # documentation for GET operation for this path\n      tags:\n        - HpaIntent Consumers\n      summary: Query intent\n\n      description: |\n        Query `Deployment Hpa Intent Consumer`\n\n      operationId: queryHpaIntentConsumer\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/HpaResourceConsumer'\n        '404':\n          description: No Found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n\n  # HPA INTENT CONSUMER RESOURCES API\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/hpa-intents/{hpa-intent-name}/hpa-resource-consumers/{hpa-consumer-name}/resource-requirements/:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/hpaIntentName'\n      - $ref: '#/components/parameters/hpaConsumerName'\n    post:\n      tags:\n        - HpaIntent Consumer Resources\n      summary: Add Intent\n      description: Add `hpa Intent resource`\n      operationId: addHpaIntentConsumerResource\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/HpaResourceRequirements'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json: # Media type\n            schema:         # Request payload\n              $ref: '#/components/schemas/HpaResourceRequirements'\n    get: # documentation for GET operation for this path\n      tags:\n        - HpaIntent Consumer Resources\n      summary: Get all hpa intent resources\n\n      description: |\n        Get all `hpa intent resources`\n\n      operationId: getAllHpaIntentConsumerResources\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/HpaResourceRequirementsArray'\n        '404':\n          description: No Found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n \n  # HPA INTENT CONSUMER RESOURCE RUD(retrieve, update, delete) API\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/hpa-intents/{hpa-intent-name}/hpa-resource-consumers/{hpa-consumer-name}/resource-requirements/{hpa-resource-name}:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/hpaIntentName'\n      - $ref: '#/components/parameters/hpaConsumerName'\n      - $ref: '#/components/parameters/hpaResourceName'\n\n    get: # documentation for GET operation for this path\n      tags:\n        - HpaIntent Consumer Resources\n      summary: Get hpa intent Consumer Resource for an application\n\n      description: |\n        Get `Deployment Intent`\n\n      operationId: getHpaIntentConsumerResource\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/HpaResourceRequirements'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n          \n    put:\n      tags:\n        - HpaIntent Consumer Resources\n      summary: Update hpa intent\n      description: Update `deployment hpa intent Consumer Resource`\n      operationId: updateHpaIntentConsumerResource\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/HpaResourceRequirements'\n          description: Success\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '422':\n          description: Unprocessable Entity\n        '500':\n          description: Internal Server Error\n  \n      # request body documentation\n      requestBody:\n        content:\n         application/json: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/HpaResourceRequirements'\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - HpaIntent Consumer Resources\n      summary: Delete Hpa intent\n\n      description: |\n        Delete `Deployment Hpa Consumer Resource`\n\n      operationId: deleteHpaIntentConsumerResource\n      responses: # list of responses\n        '204':\n          description: Delete\n        '404':\n          description: Not Found\n        '409':\n          description: Conflict\n        '500':\n          description: Internal Server Error\n  \n  #Query\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/hpa-intents/{hpa-intent-name}/hpa-resource-consumers/{hpa-consumer-name}/resource-requirements:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/hpaIntentName'\n      - $ref: '#/components/parameters/hpaConsumerName'\n      - in: query\n        name: resource\n        schema:\n          type: string\n          maxLength: 128\n        required: true\n\n    get: # documentation for GET operation for this path\n      tags:\n        - HpaIntent Consumer Resources\n      summary: Query intent\n\n      description: |\n        Query `Deployment Hpa Intent Consumer Resource`\n\n      operationId: queryHpaIntentConsumerResource\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/HpaResourceRequirements'\n        '404':\n          description: No Found\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n\n\n\n#########################SCHEMAS####################################################\n# An object to hold reusable parts that can be used across the definition\ncomponents:\n  schemas:\n    MetadataBase:\n      type: object\n      properties:\n        name:\n          description: Name of the resource\n          type: string\n          maxLength: 128\n          example: \"ResName\"\n        description:\n          description: Description for the resource\n          type: string\n          maxLength: 1024\n          example: \"Resource description\"\n        userData1:\n          description: User relevant data for the resource\n          type: string\n          maxLength: 512\n          example: \"Some data\"\n        userData2:\n          description: User relevant data for the resource\n          type: string\n          maxLength: 512\n          example: \"Some more data\"\n      required:\n        - name\n    Metadata:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n    MetadataArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/Metadata'\n    VersionSpec:\n      type: object\n      properties:\n        version:\n          description: Composite Application Version\n          type: string\n          maxLength: 128\n          example: \"v1\"\n      required:\n        - version\n    CompositeAppVersion:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          $ref: '#/components/schemas/VersionSpec'\n    CompositeAppVersionArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/CompositeAppVersion'\n    File:\n      type: string\n      format: binary\n      maxLength: 1073741824\n    Files:\n      type: object\n      properties:\n        filename:\n          type: array\n          items:\n            type: string\n            format: binary\n            maxLength: 1073741824\n    AppData:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        file: # Part 2 (Helm chart in tar.gz format)\n          $ref: '#/components/schemas/File'\n    ProfileAppSpec:\n      type: object\n      properties:\n        spec:\n          type: object\n          description: AppProfileSpec contains the Spec for AppProfiles\n          properties:\n            app-name:\n              type: string\n              description: Application Name\n              maxLength: 128\n              example: \"Application1\"\n          required:\n            - app-name\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n    ProfileAppSpecArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/ProfileAppSpec'\n    ProfileAppData:\n      type: object\n      properties:\n        file: # Part 2 (Helm chart in tar.gz format)\n          $ref: '#/components/schemas/File'\n        metadata:\n            $ref: '#/components/schemas/ProfileAppSpec'\n    GenericPlacementIntent:\n      type: object\n      properties:\n        spec:\n          type: object\n          description: Spec\n          properties:\n            logical-cloud:\n              type: string\n              description: Logical Cloud to use for this intent\n              maxLength: 128\n              example: \"cloud1\"\n              required:\n              - logical-cloud\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n    GenericPlacementIntentArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/GenericPlacementIntent'\n\n    GenericPlacementAppIntentSpec:\n      type: object\n      description: ''\n      properties:\n        app-name:\n          type: string\n          maxLength: 128\n          example: \"appl\"\n        allOf:\n          items:\n            description: AllOf ProviderName, ClusterName, ClusterLabelName and AnyOfArray\n            properties:\n              anyOf:\n                items:\n                  description: AnyOf consists of Array of ProviderName \u0026 ClusterLabelNames\n                  properties:\n                    cluster-label-name:\n                      type: string\n                      maxLength: 128\n                      example: \"east\"\n                    cluster-name:\n                      type: string\n                      maxLength: 128\n                      example: \"cluster1\"\n                    provider-name:\n                      type: string\n                      maxLength: 128\n                      example: \"provider1\"\n                  type: object\n                type: array\n              cluster-label-name:\n                type: string\n                maxLength: 128\n                example: \"west\"\n              cluster-name:\n                type: string\n                maxLength: 128\n                example: \"cluster2\"\n              provider-name:\n                type: string\n                maxLength: 128\n                example: \"provider2\"\n            type: object\n          type: array\n        anyOf:\n          items:\n            description: AnyOf consists of Array of ProviderName \u0026 ClusterLabelNames\n            properties:\n              cluster-label-name:\n                type: string\n                maxLength: 128\n                example: \"east\"\n              cluster-name:\n                type: string\n                maxLength: 128\n                example: \"cluster1\"\n              provider-name:\n                type: string\n                maxLength: 128\n                example: \"provider1\"\n            type: object\n          type: array\n    GenericPlacementAppIntent:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          $ref: '#/components/schemas/GenericPlacementAppIntentSpec'\n    GenericPlacementAppIntentArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/GenericPlacementAppIntent'\n    DeploymentIntentSpec:\n      type: object\n      description: DepSpecData has profile, version, OverrideValuesObj\n      properties:\n        override-values:\n          items:\n            description: OverrideValues has appName and ValuesObj\n            properties:\n              app-name:\n                type: string\n              values:\n                additionalProperties:\n                  type: string\n                  maxLength: 128\n                type: object\n            required:\n            - app-name\n            - values\n            type: object\n          type: array\n        profile:\n          type: string\n          maxLength: 128\n        version:\n          type: string\n          maxLength: 128\n        logical-cloud:\n          type: string\n          description: Logical Cloud to use for this intent\n          maxLength: 128\n          example: \"cloud1\"\n      required:\n      - profile\n      - version\n      - logical-cloud\n    DeploymentGroupIntent:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          $ref: '#/components/schemas/DeploymentIntentSpec'\n    DeploymentGroupIntentArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/DeploymentGroupIntent'\n    DeploymentIntent:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          type: object\n          description: IntentSpecData has Intent\n          properties:\n            intent:\n              additionalProperties:\n                type: string\n                maxLength: 128\n              example:\n                generic-placement-intent: gpi-name\n              type: object\n          required:\n          - intent\n    IntentMapping:\n      type: object\n      additionalProperties:\n        type: string\n        maxLength: 128\n\n        description: Maps intent types to intent names\n    IntentMappingArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/IntentMapping'\n    ListOfIntents:\n      type: object\n      properties:\n        intent:\n          $ref: '#/components/schemas/IntentMappingArray'\n\n    DeploymentIntentArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/DeploymentIntent'\n    MigrateIntent:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          type: object\n          description: MigrateSpecData for Migrate API\n          properties:\n            target-composite-app-version:\n              type: string\n              description: Version of composite app to migrate to\n              maxLength: 128\n              example: \"v2\"\n            target-dig-name:\n              type: string\n              description: Deployment Intent Group to Migrate to\n              maxLength: 128\n              example: \"dig2\"\n          required:\n          - target-composite-app-version\n          - target-dig-name\n    RollbackIntent:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          type: object\n          description: RollbackSpecData for Rollback API\n          properties:\n            revision:\n              type: string\n              description: Revision to Rollback the deployment to.\n              maxLength: 128\n              example: \"4\"\n          required:\n          - revision\n    Controller:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          type: object\n          properties:\n            host:\n              type: string\n              description: Controller reachibility information\n              maxLength: 128\n              example: \"10.7.100.4\"\n            port:\n              type: string\n              description: Port for controller\n              maxLength: 128\n              example: \"9029\"\n            type:\n              type: string\n              description: Type of controller (placement, action are 2 types supported)\n              maxLength: 48\n              example: \"placement\"\n            priority:\n              type: string\n              description: Priority of controller to be called\n              maxLength: 128\n              example: \"4\"\n          required:\n            - host\n            - port\n            - type\n            - priority\n    ControllerArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/Controller'\n    ClmController:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          type: object\n          properties:\n            host:\n              type: string\n              description: Controller reachibility information\n              maxLength: 128\n              example: \"10.7.100.4\"\n            port:\n              type: string\n              description: Port for controller\n              maxLength: 128\n              example: \"9029\"\n            priority:\n              type: string\n              description: Priority of controller to be called\n              maxLength: 128\n              example: \"4\"\n          required:\n            - host\n            - port\n    ClmControllerArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/ClmController'\n    ClusterLabel:\n      type: object\n      properties:\n        label-name:\n          type: string\n          description: Logical Cloud to use for this intent\n          maxLength: 128\n          example: \"cluster-label-1\"\n      required:\n      - label-name\n    ClusterKv:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          properties:\n            kv:\n              items:\n                additionalProperties:\n                  type: string\n                  maxLength: 128\n                type: object\n              type: array\n          required:\n          - kv\n          type: object\n      required:\n      - metadata\n      - spec\n    Kv:\n      type: object\n      properties:\n        value:\n          type: string\n          maxLength: 128\n\n    VirtualNetwork:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          properties:\n            cniType:\n              type: string\n              maxLength: 128\n            ipv4Subnets:\n              items:\n                properties:\n                  excludeIps:\n                    type: string\n                    maxLength: 1024\n                  gateway:\n                    type: string\n                    maxLength: 128\n                  name:\n                    type: string\n                    maxLength: 128\n                  subnet:\n                    type: string\n                    maxLength: 128\n                required:\n                - name\n                - subnet\n                type: object\n              type: array\n    VirtualNetworkArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/VirtualNetwork'\n    ProviderNetwork:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          properties:\n            cniType:\n              type: string\n              maxLength: 128\n            ipv4Subnets:\n              items:\n                properties:\n                  excludeIps:\n                    type: string\n                    maxLength: 128\n                  gateway:\n                    type: string\n                    maxLength: 128\n                  name:\n                    type: string\n                    maxLength: 128\n                  subnet:\n                    type: string\n                    maxLength: 128\n                required:\n                - name\n                - subnet\n                type: object\n              type: array\n            providerNetType:\n              type: string\n              maxLength: 128\n            vlan:\n              properties:\n                logicalInterfaceName:\n                  type: string\n                  maxLength: 128\n                nodeLabelList:\n                  items:\n                    type: string\n                    maxLength: 128\n                  type: array\n                providerInterfaceName:\n                  type: string\n                  maxLength: 128\n                vlanID:\n                  type: string\n                  maxLength: 128\n                vlanNodeSelector:\n                  type: string\n                  maxLength: 128\n              required:\n              - logicalInterfaceName\n              - nodeLabelList\n              - providerInterfaceName\n              - vlanID\n              - vlanNodeSelector\n              type: object\n          required:\n          - cniType\n          - ipv4Subnets\n          - providerNetType\n          - vlan\n          type: object\n    ProviderNetworkArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/ProviderNetwork'\n    RouteBasedChain:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          type: object\n          properties:\n            chainType:\n              type: string\n              default: Routing\n              enum:\n                - Routing\n            namespace:\n              type: string\n              maxLength: 63\n              pattern: '^[a-z0-9-]+$'\n              default: default\n            networkChain:\n              type: string\n              maxLength: 1024\n              pattern: '^net=([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9](,app=([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9],net=([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])*$'\n          required:\n            - networkChain\n    ChainEndpoint:\n      type: string\n      enum:\n        - left\n        - right\n    RouteBasedChainArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/RouteBasedChain'\n    ChainClientSelector:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          type: object\n          properties:\n            chainEnd:\n              $ref: '#/components/schemas/ChainEndpoint'\n            podSelector:\n              type: object\n              required:\n                - matchLabels\n              properties:\n                matchLabels:\n                  type: object\n                  additionalProperties:\n                    type: string\n            namespaceSelector:\n              type: object\n              required:\n                - matchLabels\n              properties:\n                matchLabels:\n                  type: object\n                  additionalProperties:\n                    type: string\n          required:\n            - chainEnd\n            - podSelector\n            - namespaceSelector\n    ChainClientSelectorArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/ChainClientSelector'\n    ChainProviderNetwork:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          type: object\n          properties:\n            chainEnd:\n              $ref: '#/components/schemas/ChainEndpoint'\n            networkName:\n              type: string\n              maxLength: 128\n              pattern: '^([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$'\n            gatewayIp:\n              type: string\n              format: ipv4\n            subnet:\n              type: string\n              pattern: '^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$'\n          required:\n            - chainEnd\n            - networkName\n            - gatewayIp\n    ChainProviderNetworkArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/ChainProviderNetwork'\n    ChainClient:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          type: object\n          properties:\n            chainEnd:\n              $ref: '#/components/schemas/ChainEndpoint'\n            chainName:\n              type: string\n              maxLength: 128\n              pattern: '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$'\n            chainCompositeApp:\n              type: string\n              maxLength: 128\n              pattern: '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$'\n            chainCompositeAppVersion:\n              type: string\n              maxLength: 128\n              pattern: '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$'\n            chainDeploymentIntentGroup:\n              type: string\n              maxLength: 128\n              pattern: '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$'\n            chainNetControlIntent:\n              type: string\n              maxLength: 128\n              pattern: '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$'\n            appName:\n              type: string\n              maxLength: 128\n              pattern: '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$'\n            workloadResource:\n              type: string\n              maxLength: 128\n              pattern: '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$'\n            resourceType:\n              type: string\n              maxLength: 128\n              pattern: '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$'\n          required:\n            - chainEnd\n            - chainName\n            - chainCompositeApp\n            - chainCompositeAppVersion\n            - chainDeploymentIntentGroup\n            - chainNetControlIntent\n            - appName\n            - workloadResource\n            - resourceType\n    ChainClientArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/ChainClient'\n    NetworkWorkloadSpec:\n      type: object\n      properties:\n        spec:\n          type: object\n          description: Newtwork Workload Intent\n          properties:\n            metadata:\n              $ref: '#/components/schemas/MetadataBase'\n            spec:\n              type: object\n              properties:\n                application-name:\n                  type: string\n                  description: Application Name\n                  maxLength: 128\n                  example: \"Application1\"\n                workload-resource:\n                  type: string\n                  description: Name of the workload\n                  maxLength: 254\n                  example: \"firewall\"\n                type:\n                  type: string\n                  description: Type of the workload\n                  maxLength: 128\n                  example: \"deployment\"\n              required:\n              - application-name\n              - workload-resource\n              - type\n    NetworkWorkloadSpecArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/NetworkWorkloadSpec'\n    NetworkWorkloadInterface:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          type: object\n          properties:\n            interface:\n              type: string\n              description: interface Name\n              maxLength: 128\n              example: \"eth0\"\n            name:\n              type: string\n              description: Name of the network\n              maxLength: 128\n              example: \"provider-1\"\n            defaultGateway:\n              type: \"string\"\n              description: Is this interface default gateway\n              maxLength: 128\n              example: \"false\"\n            ipAddress:\n              type: string\n              description: Name of the network\n              maxLength: 128\n              example: \"0.0.0.0\"\n            macAddress:\n              type: string\n              description: Name of the network\n              maxLength: 128\n              example: \"x.x.x.x\"\n          required:\n            - interface\n            - name\n    NetworkWorkloadInterfaceArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/NetworkWorkloadInterface'\n    LogicalCloud:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          type: object\n          properties:\n            level:\n              type: string\n              description: level (admin or custom)\n              maxLength: 2\n              example: \"1\"\n            namespace:\n              type: string\n              description: namespace name\n              maxLength: 128\n              example: \"ns1\"\n            user:\n              properties:\n                user-name:\n                  type: string\n                  description: user name for auth\n                  maxLength: 20\n                type:\n                  type: string\n                  description: authentication type\n                  maxLength: 128\n                  example: \"certificate\"\n    ClusterReference:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          type: object\n          properties:\n            cluster-provider:\n              type: string\n              description: cluster provider name\n              maxLength: 128\n              example: \"cp-1\"\n            cluster-name:\n              type: string\n              description: cluster name\n              maxLength: 128\n              example: \"c1\"\n            loadbalancer-ip:\n              type: string\n              description: IP address of load balancer\n              maxLength: 16\n              example: \"0.0.0.0\"\n    UserPermission:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          type: object\n          properties:\n            namespace:\n              type: string\n              description: Name of the namespace targeted by this user permission\n            apiGroups:\n              type: array\n              items:\n                type: string\n                description: K8s API groups (for namespace specified)\n            resources:\n              type: array\n              description: K8s resource list (for namespace specified)\n              items:\n                type: string\n                description: K8s resource\n            verbs:\n              type: array\n              description: K8s verb list (for namespace specified)\n              items:\n                type: string\n                description: K8s verb\n    ClusterQuota:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          type: object\n          properties:\n            limits.cpu:\n              type: string\n            limits.memory:\n              type: string\n            requests.cpu:\n              type: string\n            requests.memory:\n              type: string\n            requests.storage:\n              type: string\n            requests.ephemeral-storage:\n              type: string\n            limits.ephemeral-storage:\n              type: string\n            persistentvolumeclaims:\n              type: string\n            pods:\n              type: string\n            configmaps:\n              type: string\n            replicationcontrollers:\n              type: string\n            resourcequotas:\n              type: string\n            services:\n              type: string\n            services.loadbalancers:\n              type: string\n            services.nodeports:\n              type: string\n            secrets:\n              type: string\n            count/replicationcontrollers:\n              type: string\n            count/deployments.apps:\n              type: string\n            count/replicasets.apps:\n              type: string\n            count/statefulsets.apps:\n              type: string\n            count/jobs.batch:\n              type: string\n            count/cronjobs.batch:\n              type: string\n            count/deployments.extensions:\n              type: string\n    KVPair:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          type: object\n          properties:\n            kv:\n              type: array\n              description: list of key-value pairs\n              items:\n                type: object\n                properties:\n                  key:\n                    type: string\n                  value:\n                    type: string\n    LogicalCloudArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/LogicalCloud'\n    ClusterReferenceArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/ClusterReference'\n    UserPermissionArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/UserPermission'\n    ClusterQuotaArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/ClusterQuota'\n    KVPairArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/KVPair'\n\n    GenericResourceSpec:\n      type: object\n      properties:\n        appName:\n          description: Application name\n          type: string\n          maxLength: 128\n          example: \"vfw\"\n        newObject:\n          description: New resource to be created. If true then template file is valid\n          type: boolean\n        resourceGVK:\n            type: object\n            properties:\n              apiVersion:\n                description: API Version\n                type: string\n                maxLength: 128\n                example: \"v1\"\n              kind:\n                description: Kubernetes kind\n                type: string\n                maxLength: 128\n                example: \"configMap\"\n              name:\n                description: Name of the resource\n                type: string\n                maxLength: 128\n                example: \"map1\"\n      required:\n        - appName\n        - newObject\n    GenericResourceMetaSpec:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          $ref: '#/components/schemas/GenericResourceSpec'\n    GenericResource:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          $ref: '#/components/schemas/GenericResourceSpec'\n        file: # Base File\n          $ref: '#/components/schemas/File'\n    GenericResourceArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/GenericResourceMetaSpec'\n    GenericResourceCustomizationSpec:\n      type: object\n      properties:\n        clusterSpecific:\n          description: apply customization to a specific cluster\n          type: boolean\n        clusterInfo: # Only required if clusterSpecific is true\n            type: object\n            properties:\n              scope:\n                description: Scope of the cluster (label/name)\n                type: string\n                maxLength: 128\n                example: \"label\"\n              clusterProvider:\n                description: cluster Provider Name\n                type: string\n                maxLength: 128\n                example: \"provider1\"\n              clusterName:\n                description: cluster Name\n                type: string\n                maxLength: 128\n                example: \"cluster1\"\n              clusterLabel:\n                description: cluster Label\n                type: string\n                maxLength: 128\n                example: \"edge01\"\n              mode:\n                description: Allow if allowing the cluster, deny if others than specified\n                type: string\n                maxLength: 128\n                example: \"allow\"\n            required:\n             - scope\n             - clusterProvider\n             - mode\n        patchType:\n          description: Patching type used. \"json\" is the only supported patch type\n          type: string\n          maxLength: 128\n          example: \"json\"\n        patchJson:\n          items:\n            description: descibe the json patching\n            properties:\n              op:\n                description: operation - add, remove, replace, move, copy\n                type: string\n                maxLength: 128\n                example: \"replace\"\n              path:\n                description: path for the operation\n                type: string\n                maxLength: 128\n                example: \"/name\"\n              value:\n                type: string\n                maxLength: 128\n                example: \"test\"\n            type: object\n          type: array\n      required:\n        - clusterSpecific\n    GenericResourceCustomization:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          $ref: '#/components/schemas/GenericResourceCustomizationSpec'\n        files: # Array of files\n          $ref: '#/components/schemas/Files'\n    GenericResourceCustomizationMetaSpec:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          $ref: '#/components/schemas/GenericResourceCustomizationSpec'\n    GenericResourceCustomizationArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/GenericResourceCustomizationMetaSpec'\n\n    InbondServerIntentSpec:\n      type: object\n      properties:\n        appName:\n          description: Application name\n          type: string\n          maxLength: 128\n          example: \"vfw\"\n        appLabel:\n          description: Application label\n          type: string\n          maxLength: 128\n          example: \"app=vfw\"\n        serviceName:\n          description: Service name\n          type: string\n          maxLength: 128\n          example: \"sink\"\n        externalName:\n          description: External name\n          type: string\n          maxLength: 128\n          example: \"sink.global\"\n        port:\n          description: Port\n          type: integer\n          example: 8008\n        protocol:\n          description: Protocol (tcp/udp)\n          type: string\n          maxLength: 5\n          example: \"tcp\"\n        externalSupport:\n          description: External Support\n          type: boolean\n      required:\n        - appName\n        - serviceName\n        - port\n        - protocol\n        - appLabel\n    InboundServerIntent:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          $ref: '#/components/schemas/InbondServerIntentSpec'\n    InboundServerIntentArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/InboundServerIntent'\n\n    InbondClientIntentSpec:\n      type: object\n      properties:\n        appName:\n          description: Application name\n          type: string\n          maxLength: 128\n          example: \"vfw\"\n        appLabel:\n          description: Application label\n          type: string\n          maxLength: 128\n          example: \"app=vfw\"\n        serviceName:\n          description: Service name\n          type: string\n          maxLength: 128\n          example: \"sink\"\n        namespaces:\n          description: namespaces for the\n          type: array\n          items:\n            type: string\n            maxLength: 128\n        cidrs:\n          description: Ip Range list\n          type: array\n          items:\n            type: string\n            maxLength: 128\n      required:\n        - appName\n        - serviceName\n        - namespaces\n        - cidrs\n        - appLabel\n    InboundClientIntent:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          $ref: '#/components/schemas/InbondClientIntentSpec'\n    InboundClientIntentArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/InboundClientIntent'\n    DeploymentHpaIntent:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          type: object\n          description: Hpa Intent Spec\n          properties:\n            app-name:\n              type: string\n              description: Target Application Name of the Hpa intent (e.g. Prometheus)\n              \"minLength\": 1\n              \"pattern\": \"^([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\"\n          required:\n            - app-name\n    DeploymentHpaIntentArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/DeploymentHpaIntent'\n\n    # Deployment HPA Intent Consumer Schema\n    HpaResourceConsumer:\n      type: object\n      description: Intent mapping to K8s\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          type: object\n          description: HpaIntent ResourceConsumer spec\n          properties:\n            api-version:\n              type: string\n              description: K8s version (e.g apps/v1)\n              \"minLength\": 1\n            kind:\n              type: string\n              description: Type of object (e.g. Deployment)\n              \"minLength\": 1\n            replicas:\n              type: integer\n              format: int64\n              minimum: 1\n              description: Replicas of the consumer object(e.g. Deployment)\n            name:\n              type: string\n              description: From metadata/name field of the consumer object(e.g. Deployment)\n              \"minLength\": 1\n            container-name:\n              type: string\n              description: Container name of the consumer object(e.g. Deployment). This field is required for allocatable resources only\n              \"minLength\": 1\n          required:\n            - name\n    HpaResourceConsumerArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/HpaResourceConsumer'\n\n    # Deployment HPA Intent Consumer Resource Schema\n    HpaResourceRequirements:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          type: object\n          description: Hpa resource\n          properties:\n            allocatable:\n              type: boolean\n              description: Whether resource is allocatble\n            mandatory:\n              type: boolean\n              description: Whether requested resource type is mandatory or optional\n            weight:\n              type: integer\n              minimum: 1\n              default: 1\n              description: Whether requested resource type is mandatory or optional\n            resource:\n              $ref: '#/components/schemas/HpaResourceRequirementsDetails'\n          required:\n            - allocatable\n            - resource\n    HpaResourceRequirementsDetails:\n        oneOf:\n          - $ref: '#/components/schemas/allocatable-resources'\n          - $ref: '#/components/schemas/non-allocatable-resources'\n    allocatable-resources:\n      type: object\n      properties:\n        name:\n          type: string\n          description: The requested resource type  (e.g. nvidia.com/gpu)\n          \"minLength\": 1\n        requests:\n          type: integer\n          format: int64\n          minimum: 1\n          description: The requested number of resource instances. (e.g memory is expressed as bytes by default)\n        limits:\n          type: integer\n          format: int64\n          minimum: 1\n          description: The limit of resource instances. (e.g memory is expressed as bytes by default)\n        units:\n          type: string\n          description: resource units.(e.g MB for memory resource represents Mega Bytes)\n          \"pattern\": \"^([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$\"\n      required:\n          - name\n          - requests\n    non-allocatable-resources:\n      type: object\n      properties:\n        key:\n          type: string\n          description: kubernetes label key\n        value:\n          type: string\n          description: kubernetes label value\n      required:\n        - key\n        - value\n    HpaResourceRequirementsArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/HpaResourceRequirements'\n\n\n\n  parameters:\n    projectName:\n      name: project-name\n      in: path\n      description: Name of the project\n      required: true\n      schema:\n        type: string\n    compositeAppName:\n      name: composite-app-name\n      in: path\n      description: Name of the Composite Application\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    compositeAppVersion:\n      name: composite-app-version\n      in: path\n      description: Version of the Composite Application\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    appName:\n      name: app-name\n      in: path\n      description: Name of the Application\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    compositeProfileName:\n      name: composite-profile-name\n      in: path\n      description: Name of the Composite Profile\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    profileName:\n      name: profile-name\n      in: path\n      description: Name of the Profile\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    genericPlacementIntentName:\n      name: generic-placement-intent-name\n      in: path\n      description: Name of Generic Placement Intent\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    intentName:\n      name: intent-name\n      in: path\n      description: Name of Generic Placement Intent for application\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    deploymentIntentGroupName:\n      name: deployment-intent-group-name\n      in: path\n      description: Name of Deployment Intent Group\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    clusterProviderName:\n      name: cluster-providers-name\n      in: path\n      description: Name of the cluster provider\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    clusterName:\n      name: cluster-name\n      in: path\n      description: Name of the cluster\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    clusterLabelName:\n      name: cluster-label-name\n      in: path\n      description: Name of the cluster label name\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    clusterKvpairName:\n      name: kv-pair-name\n      in: path\n      description: Name of the cluster kv-pair\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    clusterNetworkName:\n      name: network-name\n      in: path\n      description: Name of the network\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    netControlIntent:\n      name: net-control-intent\n      in: path\n      description: Name of the network control intent\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    netControlWorkloadIntent:\n      name: workload-intent-name\n      in: path\n      description: Name of the network workload intent\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    netControlWorkloadInterface:\n      name: interface-name\n      in: path\n      description: Name of the network workload interface intent\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    networkChainIntent:\n      name: network-chain\n      in: path\n      description: Name of the network chain intent\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    networkChainClientSelectorIntent:\n      name: network-chain-client-selector\n      in: path\n      description: Name of the network chain client selector intent\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    networkChainProviderNetworkIntent:\n      name: network-chain-provider-network\n      in: path\n      description: Name of the network chain provider network intent\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    networkChainClientIntent:\n      name: network-chain-client\n      in: path\n      description: Name of the network chain client intent\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    controllerName:\n      name: controller-name\n      in: path\n      description: Controller name\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    logicalCloudName:\n      name: logical-cloud-name\n      in: path\n      description: Logical Cloud name\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    clusterReference:\n      name: cluster-reference\n      in: path\n      description: Cluster Reference name\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    userPermission:\n      name: user-permission\n      in: path\n      description: User Permission name\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    clusterQuota:\n      name: cluster-quota\n      in: path\n      description: Cluster Quota name\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    kvPair:\n      name: kv-pair\n      in: path\n      description: KV Pair name\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    genControlIntent:\n      name: gen-k8s-intent\n      in: path\n      description: Generic Controller Intent\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    genControlResourceIntent:\n      name: resource-intent-name\n      in: path\n      description: Generic Controller Resource Intent\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    genControlResourceCustomization:\n      name: customization-name\n      in: path\n      description: Generic Controller Customization Intent\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    trafficControlIntent:\n      name: traffic-cont-intent\n      in: path\n      description: Traffic Controller Intent\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    trafficInboundIntent:\n      name: inbound-server-intent\n      in: path\n      description: Traffic Controller Server Inbound Intent\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    trafficInboundClientIntent:\n      name: inbound-client-intent\n      in: path\n      description: Traffic Controller Client Inbound Intent\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    ############################ HPA PLACEMENT INTENT PARAMETERS #################################################\n    hpaIntentName:\n      name: hpa-intent-name\n      in: path\n      description: Name of Hpa Placement Intent for application\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    hpaConsumerName:\n      name: hpa-consumer-name\n      in: path\n      description: Name of Hpa Placement consumer\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    hpaResourceName:\n      name: hpa-resource-name\n      in: path\n      description: Name of Hpa Placement Consumer's resource \n      required: true\n      schema:\n        type: string\n        maxLength: 128"
		}
	},
	"Error": "parse: paths: /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/apply: post: applyNetworksForCluster: requestBody: content must have at least on entry"
}