{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vanilla/vanilla"
		},
		"file": {
			"name": "authenticators.yml",
			"path": "applications/dashboard/openapi/authenticators.yml",
			"content": "openapi: 3.0.2\ninfo:\n    description: API access to your community.\n    title: Vanilla API\n    version: \"2.0\"\nservers:\n    - url: /api/v2\npaths:\n    /authenticators:\n        get:\n            summary: List the authenticators.\n            tags:\n                - Authenticators\n            parameters:\n                - name: type\n                  description: Filter by one or more authenticator types.\n                  in: query\n                  schema:\n                      type: array\n                      items:\n                          type: string\n                      format: form\n                - $ref: \"#/components/parameters/Page\"\n                - name: limit\n                  in: query\n                  description: \u003e\n                      Maximum number of items to be included in the response. See [Pagination](https://docs.vanillaforums.com/apiv2/#pagination).\n                  schema:\n                      type: integer\n                      default: 10\n                      minimum: 1\n            responses:\n                \"200\":\n                    description: Success\n                    content:\n                        application/json:\n                            schema:\n                                type: array\n                                items:\n                                    $ref: \"#/components/schemas/AuthenticatorFragment\"\n    \"/authenticators/{id}\":\n        parameters:\n            - name: id\n              in: path\n              description: The ID of the authenticator to look up.\n              required: true\n              schema:\n                  type: integer\n        delete:\n            summary: Delete an authenticator.\n            tags:\n                - Authenticators\n            responses:\n                \"204\":\n                    description: Success\n        get:\n            summary: Get a single authenticator.\n            tags:\n                - Authenticators\n            responses:\n                \"200\":\n                    description: Success\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/AuthenticatorFragment\"\n        patch:\n            summary: Update an authenticator.\n            tags:\n                - Authenticators\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                default:\n                                    type: boolean\n                                active:\n                                    type: boolean\n                                visible:\n                                    type: boolean\n            responses:\n                \"200\":\n                    description: Success\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/AuthenticatorFragment\"\ncomponents:\n    schemas:\n        AuthenticatorFragment:\n            type: object\n            properties:\n                authenticatorID:\n                    type: integer\n                    description: The authenticator's ID.\n                name:\n                    type: string\n                    description: A human readible name for the authenticator.\n                type:\n                    type: string\n                    description: The type of authenticator\n                    example: oauth2\n                clientID:\n                    type: string\n                default:\n                    type: boolean\n                active:\n                    type: boolean\n                    example: true\n                visible:\n                    type: boolean\n                urls:\n                    type: object\n                    properties:\n                        signInUrl:\n                            nullable: true\n                            format: uri\n                            type: string\n                        signOutUrl:\n                            nullable: true\n                            format: uri\n                            type: string\n                        authenticateUrl:\n                            nullable: true\n                            format: uri\n                            type: string\n                        registerUrl:\n                            nullable: true\n                            format: uri\n                            type: string\n                        passwordUrl:\n                            nullable: true\n                            format: uri\n                            type: string\n                        profileUrl:\n                            nullable: true\n                            format: uri\n                            type: string\n            required:\n                - authenticatorID\n                - name\n                - type\n                - clientID\n                - default\n                - active\n                - visible\n# AuthenticationKey           varchar(64)  - clientID\n# AuthenticationSchemeAlias   varchar(32)  - type\n# Name                        varchar(50)  - name\n# URL                         varchar(255)\n# AssociationSecret           text\n# AssociationHashMethod       varchar(20)\n# AuthenticateUrl             varchar(255) - urls.authenticateUrl\n# RegisterUrl                 varchar(255) - urls.registerUrl\n# SignInUrl                   varchar(255) - urls.signInUrl\n# SignOutUrl                  varchar(255) - urls.signOutUrl\n# PasswordUrl                 varchar(255) - urls.passwordUrl\n# ProfileUrl                  varchar(255) - urls.profileUrl\n# Attributes                  text\n# Active                      tinyint(4)   - active\n# IsDefault                   tinyint(4)   - default\n"
		}
	},
	"Error": "parse: paths: /authenticators: get: operation \"\": parameters: parse parameter \"\": resolve \"#/components/parameters/Page\" reference: component by reference \"#/components/parameters/Page\" not found"
}