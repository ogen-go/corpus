{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/RedElastic/reactive-stock-trader"
		},
		"file": {
			"name": "api.yaml",
			"path": "bff/src/main/resources/api.yaml",
			"content": "openapi: 3.0.2\r\ninfo:\r\n  title: Stock Trader BFF\r\n  version: 1.0.0\r\ntags:\r\n  - name: portfolio\r\n    description: Portfolio activities\r\n  - name: transfer\r\n    description: Wire transfer activities\r\n  - name: broker\r\n    description: Broker activities\r\nservers:\r\n  - url: http://localhost:9000\r\npaths:\r\n  /api/portfolio:\r\n    post:\r\n      operationId: openPortfolio\r\n      summary: Create a portfolio\r\n      tags:\r\n        - portfolio\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application/x-www-form-urlencoded:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                name:\r\n                  type: string\r\n                  description: Human readable name of the portfolio for searching (not unique)\r\n      responses:\r\n        '201':\r\n          description: Portfolio created successfully\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                required:\r\n                  - portfolioId\r\n                properties:\r\n                  portfolioId:\r\n                    type: string\r\n                    example: \u003cportfolio ID\u003e\r\n\r\n        '400':\r\n          description: Bad request\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                required:\r\n                  - error\r\n                properties:\r\n                  error:\r\n                    type: string\r\n                    example: \"Missing property 'name' is required.\"\r\n\r\n\r\n\r\n  /api/portfolio/{portfolioId}:\r\n    get:\r\n      operationId: getPortfolio\r\n      summary: Get portfolio contents with current market values\r\n      tags:\r\n        - portfolio\r\n      parameters:\r\n        - in: path\r\n          name: portfolioId\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: Current state of the portfolio\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                required:\r\n                  - portfolioId\r\n                  - name\r\n                  - funds\r\n                  - holdings\r\n                properties:\r\n                  portfolioId:\r\n                    type: string\r\n                  name:\r\n                    type: string\r\n                  funds:\r\n                    type: number\r\n                    minimum: 0\r\n                  holdings:\r\n                    type: array\r\n                    items:\r\n                      type: object\r\n                      required:\r\n                        - symbol\r\n                        - shareCount\r\n                      properties:\r\n                        symbol:\r\n                          type: string\r\n                          description: The stock ticker symbol\r\n                        shareCount:\r\n                          type: integer\r\n                        marketValue:\r\n                          type: number\r\n                          description: Current market value of the shares held (share price * share count)\r\n                example:\r\n                  portfolioId: \u003cportfolio id\u003e\r\n                  name: retirement savings\r\n                  funds: 123.95\r\n                  holdings:\r\n                    - symbol: IBM\r\n                      shareCount: 12\r\n                      marketValue: 1524.34\r\n                    - symbol: RHT\r\n                      shareCount: 10\r\n                      marketValue: 1212.78\r\n        '404':\r\n          description: No such portfolio ID\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                required:\r\n                  - error\r\n                properties:\r\n                  error:\r\n                    type: string\r\n                    example: Invalid portfolio ID.\r\n\r\n  /api/portfolio/{portfolioId}/summary:\r\n    get:\r\n      operationId: getPortfolioSummary\r\n      summary: Get portfolio contents\r\n      tags:\r\n        - portfolio\r\n      parameters:\r\n        - in: path\r\n          name: portfolioId\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: Current state of the portfolio\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                required:\r\n                  - portfolioId\r\n                  - name\r\n                  - funds\r\n                  - holdings\r\n                properties:\r\n                  portfolioId:\r\n                    type: string\r\n                  name:\r\n                    type: string\r\n                  funds:\r\n                    type: number\r\n                    minimum: 0\r\n                  equities:\r\n                    type: array\r\n                    items:\r\n                      type: object\r\n                      required:\r\n                        - symbol\r\n                        - shareCount\r\n                      properties:\r\n                        symbol:\r\n                          type: string\r\n                          description: The stock ticker symbol\r\n                        shareCount:\r\n                          type: integer\r\n                example:\r\n                  portfolioId: \u003cportfolio id\u003e\r\n                  name: retirement savings\r\n                  funds: 123.95\r\n                  holdings:\r\n                    - symbol: IBM\r\n                      shareCount: 12\r\n                    - symbol: RHT\r\n                      shareCount: 10\r\n        '404':\r\n          description: No such portfolio ID\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                required:\r\n                  - error\r\n                properties:\r\n                  error:\r\n                    type: string\r\n                    example: Invalid portfolio ID.\r\n\r\n  /api/portfolio/{portfolioId}/order:\r\n    post:\r\n      operationId: placeOrder\r\n      summary: Place an order\r\n      tags:\r\n        - portfolio\r\n      parameters:\r\n        - in: path\r\n          name: portfolioId\r\n          required: true\r\n          schema:\r\n            type: string\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application/x-www-form-urlencoded:\r\n            schema:\r\n              $ref: '#/components/schemas/OrderDetails'\r\n            example:\r\n              symbol: IBM\r\n              shares: 150\r\n              order: buy\r\n              orderType: limit\r\n              limitPrice: 135.00\r\n\r\n\r\n      responses:\r\n        '202':\r\n          description: Order accepted\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                required:\r\n                  - orderId\r\n                properties:\r\n                  orderId:\r\n                    type: string\r\n                    example: \u003corder id\u003e\r\n        '404':\r\n          description: Portfolio not found.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                required:\r\n                  - error\r\n                properties:\r\n                  error:\r\n                    type: string\r\n                    example: Portfolio ID not found\r\n\r\n  /api/portfolio/{portfolioId}/completedOrders:\r\n    get:\r\n      operationId: getCompletedOrders\r\n      summary: Get completed orders\r\n      tags:\r\n        - portfolio\r\n      responses:\r\n        '200':\r\n          description: Order IDs\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                required:\r\n                  - orderIds\r\n                properties:\r\n                  orderIds:\r\n                    type: array\r\n                    items:\r\n                      type: string\r\n\r\n\r\n  /api/transfer:\r\n    post:\r\n      operationId: transferFunds\r\n      summary: Transfer funds\r\n      tags:\r\n        - transfer\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application/x-www-form-urlencoded:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - amount\r\n                - sourceType\r\n                - sourceId\r\n                - destinationType\r\n                - destinationId\r\n              properties:\r\n                amount:\r\n                  type: number\r\n                sourceType:\r\n                  $ref: '#/components/schemas/AccountType'\r\n                sourceId:\r\n                  type: string\r\n                destinationType:\r\n                  $ref: '#/components/schemas/AccountType'\r\n                destinationId:\r\n                  type: string\r\n      responses:\r\n        '202':\r\n          description: Transfer initiated.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                required:\r\n                  - transferId\r\n                properties:\r\n                  transferId:\r\n                    type: string\r\n                    example: \u003ctransfer id\u003e\r\n\r\n  /api/order/{orderId}:\r\n    get:\r\n      operationId: getOrder\r\n      summary: Get current order status\r\n      tags:\r\n        - broker\r\n      parameters:\r\n        - in: path\r\n          name: orderId\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: Current order status\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/OrderDetails'\r\n              example:\r\n                symbol: IBM\r\n                shares: 100\r\n                order: buy\r\n                orderType: limit\r\n                limitPrice: 153.50\r\n\r\ncomponents:\r\n  schemas:\r\n    AccountType:\r\n      type: string\r\n      enum:\r\n        - portfolio\r\n        - savings\r\n\r\n    OrderDetails:\r\n      allOf:\r\n        - $ref: '#/components/schemas/OrderBasics'\r\n        - oneOf:\r\n            - $ref: '#/components/schemas/MarketOrder'\r\n            - $ref: '#/components/schemas/LimitOrder'\r\n            - $ref: '#/components/schemas/StopOrder'\r\n            - $ref: '#/components/schemas/StopLimitOrder'\r\n          discriminator:\r\n            propertyName: orderType\r\n            mapping:\r\n              market: '#/components/schemas/MarketOrder'\r\n              limit: '#/components/schemas/LimitOrder'\r\n              stop: '#/components/schemas/StopOrder'\r\n              stopLimit: '#/components/schemas/StopLimitOrder'\r\n\r\n    OrderBasics:\r\n      type: object\r\n      required:\r\n        - symbol\r\n        - shares\r\n        - order\r\n        - orderType\r\n      properties:\r\n        symbol:\r\n          type: string\r\n          description: The stock ticker symbol to trade\r\n          example: IBM\r\n        shares:\r\n          type: integer\r\n          minimum: 1\r\n          description: Shares to trade\r\n          example: 50\r\n        order:\r\n          type: string\r\n          description: buy or sell\r\n          enum:\r\n            - buy\r\n            - sell\r\n        orderType:\r\n          type: string\r\n          description: Market, limit, stop or stop-limit\r\n          enum:\r\n            - market\r\n            - limit\r\n            - stop\r\n            - stopLimit\r\n\r\n    MarketOrder:\r\n      type: object\r\n\r\n    LimitOrder:\r\n      type: object\r\n      required:\r\n        - limitPrice\r\n      properties:\r\n        limitPrice:\r\n          type: number\r\n          minimum: 0\r\n\r\n    StopOrder:\r\n      type: object\r\n      required:\r\n        - stopPrice\r\n      properties:\r\n        stopPrice:\r\n          type: number\r\n          minimum: 0\r\n\r\n    StopLimitOrder:\r\n      allOf:\r\n        - $ref: '#/components/schemas/StopOrder'\r\n        - $ref: '#/components/schemas/LimitOrder'"
		}
	},
	"Error": "parse: paths: /api/portfolio/{portfolioId}/completedOrders: get: getCompletedOrders: parse path: path parameter not specified: \"portfolioId\""
}