{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/parkingdata/spec"
		},
		"file": {
			"name": "APDS_API.yaml",
			"path": "api/reference/APDS_API.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  title: APDS\n  version: '1.0'\n  description: |-\n    Allows the standard CRUD operations, as well as listing/search of:\n\n    * `Places` (and their `Occupancy`)\n    * `Rates`\n    * `RightSpecifications`\n    * `AssignedRights`\n    * `Sessions`\n    * `Observations`\n\n    **IMPORTANT**: This specification is a working **DRAFT**. Please **do not use it as the basis for APDS implementations at this stage**.\n  contact: {}\ntags:\n  - name: create\n    description: Create a resource\n  - name: read\n    description: Read a resource\n  - name: update\n    description: Update a resource\n  - name: delete\n    description: Delete a resource\n  - name: list\n    description: Search and list resources\n  - name: example\n    description: An example endpoint that data consumers should implement\nservers:\n  - url: ''\npaths:\n  /rights/assigned:\n    parameters: []\n    post:\n      summary: Create a new AssignedRight\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                created:\n                  value:\n                    status: ok\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                missing-data:\n                  value:\n                    status: error\n                    code: 400\n                    message: Missing required attributes\n      operationId: create-assigned_right\n      description: Create a new `AssignedRight` based on a given object or referencing a `Quote`\n      requestBody:\n        description: This method allows an issuer to assign a parking right to a holder\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: ../models/right/AssignedRight.yaml\n                - $ref: ../models/right/ReferenceToQuote.yaml\n      tags:\n        - create\n    get:\n      summary: List and Search for AssignedRights\n      operationId: list-assigned_rights\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: ../models/api/PaginatedListMeta.yaml\n                  - type: object\n                    description: 'the actual data'\n                    properties:\n                      data:\n                        type: array\n                        description: Result set with `AssignedRights` and requested expanded attributes\n                        items:\n                          $ref: ../models/right/AssignedRight.yaml\n      description: |-\n        Lists `AssignedRights` and allows searching/filtering by:\n\n        * one or more `HolderCredentials` and `RightSpecifications`, to check if given credentials have any of the given rights to park\n        * latitude, longitude, radius: to check for `AssignedRights` within a geographic area\n        * a list of `Places`, to retrieve all assigned rights within a set of parking locations\n        * start_before: to get sessions starting before a given instant\n        * end_before: to get sessions ending before a given instant\n        * start_after: to get sessions starting after a given instant\n        * end_after: to get sessions ending after a given instant\n        * a modification instant: to only display changed resources from that point onwards\n\n        Additionally, supports providing a comma-separated list of optional object attributes associated to an `AssignedRight` that should be included in the result set. If unused or left blank, `none` will be assumed.\n      tags:\n        - list\n      parameters:\n        - $ref: '#/components/parameters/right_specs_list'\n        - $ref: '#/components/parameters/cred_type'\n        - $ref: '#/components/parameters/cred_class_list'\n        - $ref: '#/components/parameters/cred_id_list'\n        - $ref: '#/components/parameters/place_list'\n        - $ref: '#/components/parameters/assigned_expand'\n        - $ref: '#/components/parameters/lat'\n        - $ref: '#/components/parameters/long'\n        - $ref: '#/components/parameters/radius'\n        - $ref: '#/components/parameters/mod'\n        - $ref: '#/components/parameters/start_before'\n        - $ref: '#/components/parameters/end_before'\n        - $ref: '#/components/parameters/start_after'\n        - $ref: '#/components/parameters/end_after'\n  '/rights/assigned/{id}':\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        description: Identifier for the `AssignedRight`\n        required: true\n    delete:\n      summary: Delete AssignedRight\n      operationId: delete-assigned_right\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                bad-request:\n                  value:\n                    status: error\n                    code: 400\n                    message: Did not provide version number\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                not-found:\n                  value:\n                    status: error\n                    code: 404\n                    message: Not found\n        '409':\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                conflict:\n                  value:\n                    status: error\n                    code: 409\n                    message: Outdated version number provided\n      tags:\n        - delete\n      description: Delete an existing `Assigned Right`\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ../models/common/VersionedReference.yaml\n        description: 'The final version of the `AssignedRight` should be sent, to confirm the client is acting based on updated information'\n    put:\n      summary: Update AssignedRight\n      operationId: update-assigned_right\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                missing-data:\n                  value:\n                    status: error\n                    code: 400\n                    message: Missing required attributes\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                not-found:\n                  value:\n                    status: error\n                    code: 404\n                    message: Not found\n        '409':\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                conflict:\n                  value:\n                    status: error\n                    code: 409\n                    message: Outdated version number provided\n      description: 'Update an existing `AssignedRight` based on its object or with reference to a `Quote`. If the Quote refers to a Session Extension, this request shall also update the referenced Session'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: ../models/right/AssignedRight.yaml\n                - $ref: ../models/right/ReferenceToQuote.yaml\n        description: 'The new version of the `AssignedRight`, including only its changed attributes'\n      tags:\n        - update\n    get:\n      summary: Get an AssignedRight\n      operationId: read-assigned_right\n      description: Get latest version of a given `AssignedRight` by its identifier (or a particular previous version when provided as a query parameter)\n      tags:\n        - read\n      parameters:\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/assigned_expand'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/right/AssignedRight.yaml\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n  /rights/specs:\n    get:\n      summary: List and search for RightSpecifications\n      tags:\n        - list\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: ../models/api/PaginatedListMeta.yaml\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        description: Result set with `RightSpecifications` and requested expanded attributes\n                        items:\n                          $ref: ../models/right/RightSpecification.yaml\n      operationId: list-rights-specs\n      description: |-\n        Lists `RightSpecifications` and allows filtering by:\n\n        * latitude, longitude, radius: to check for `RightSpecifications` within a geographic area\n        * a `Place`, to retrieve all assigned rights within a parking location\n        * a modification instant: to only display changed resources from that point onwards\n\n        Additionally, supports providing a comma-separated list of optional object attributes associated to an `RightSpecification` that should be included in the result set. If unused or left blank, `none` will be assumed.\n      parameters:\n        - $ref: '#/components/parameters/lat'\n        - $ref: '#/components/parameters/long'\n        - $ref: '#/components/parameters/radius'\n        - $ref: '#/components/parameters/specs_expand'\n        - $ref: '#/components/parameters/mod'\n        - $ref: '#/components/parameters/cred_type'\n        - $ref: '#/components/parameters/place_list'\n    post:\n      summary: Create a new RightSpecification\n      operationId: post-rights-specs\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n      tags:\n        - create\n      description: Create a new `RightSpecification`\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ../models/right/RightSpecification.yaml\n        description: The new RightSpec\n  '/rights/specs/{id}':\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n        description: Identifier for the `RightSpecification`\n    get:\n      summary: Get a RightSpecification\n      tags:\n        - read\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/right/RightSpecification.yaml\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n      operationId: get-rights-specs-id\n      description: Get latest version of a given `RightSpecification` by its identifier (or a particular previous version when provided as a query parameter)\n      parameters:\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/specs_expand'\n    put:\n      summary: Update a RightSpecification\n      operationId: put-rights-specs-id\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                missing-data:\n                  value:\n                    status: error\n                    code: 400\n                    message: Missing required attributes\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                not-found:\n                  value:\n                    status: error\n                    code: 404\n                    message: Not found\n        '409':\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                conflict:\n                  value:\n                    status: error\n                    code: 409\n                    message: Outdated version number provided\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ../models/right/RightSpecification.yaml\n        description: 'The new version of the `RightSpecification`, including only its changed attributes'\n      description: Update an existing `RightSpecification`\n      tags:\n        - update\n    delete:\n      summary: Delete RightSpecification\n      operationId: delete-rights-specs-id\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                bad-request:\n                  value:\n                    status: error\n                    code: 400\n                    message: Did not provide version number\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                not-found:\n                  value:\n                    status: error\n                    code: 404\n                    message: Not found\n        '409':\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                conflict:\n                  value:\n                    status: error\n                    code: 409\n                    message: Outdated version number provided\n      tags:\n        - delete\n      description: Delete a `RightSpecification`\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ../models/common/VersionedReference.yaml\n        description: 'The final version of the `RightSpecification` should be sent, to confirm the client is acting based on updated information'\n  /rates:\n    get:\n      summary: List and Search for RateTables\n      tags:\n        - list\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: ../models/api/PaginatedListMeta.yaml\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: ../models/rate/RateTable.yaml\n      operationId: get-rates\n      description: |-\n        Lists `RateTables` and allows searching/filtering by:\n\n        * latitude, longitude, radius: to check for `AssignedRights` within a geographic area\n        * a list of `Places`, to retrieve all rates connected to `AssignedRights` that belong to any of the given places\n        * a list of `RightSpecifications`, to retrieve all the connected \n        * a modification instant: to only display changed resources from that point onwards\n\n        Additionally, supports providing a comma-separated list of optional object attributes associated to a `RateTable` that should be included in the result set. If unused or left blank, `none` will be assumed.\n      parameters:\n        - $ref: '#/components/parameters/lat'\n        - $ref: '#/components/parameters/long'\n        - $ref: '#/components/parameters/radius'\n        - $ref: '#/components/parameters/rates_expand'\n        - $ref: '#/components/parameters/mod'\n        - $ref: '#/components/parameters/place_list'\n        - $ref: '#/components/parameters/right_specs_list'\n    post:\n      summary: Create a new RateTable\n      operationId: post-rates\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n      description: Create a `RateTable`\n      tags:\n        - create\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ../models/rate/RateTable.yaml\n        description: The new RateTable\n  '/rates/{id}':\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n        description: Identifier for the `RateTable`\n    get:\n      summary: Get a RateTable\n      tags:\n        - read\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/rate/RateTable.yaml\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n      operationId: get-rates-id\n      description: Get latest version of a given `RateTable` by its identifier\n      parameters:\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/rates_expand'\n    put:\n      summary: Update a RateTable\n      operationId: put-rates-id\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                missing-data:\n                  value:\n                    status: error\n                    code: 400\n                    message: Missing required attributes\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                not-found:\n                  value:\n                    status: error\n                    code: 404\n                    message: Not found\n        '409':\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                conflict:\n                  value:\n                    status: error\n                    code: 409\n                    message: Outdated version number provided\n      tags:\n        - update\n      description: Update an existing `RateTable`\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ../models/rate/RateTable.yaml\n        description: 'The new version of the `RateTable`, including only its changed attributes'\n    delete:\n      summary: Delete RateTable\n      operationId: delete-rates-id\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                bad-request:\n                  value:\n                    status: error\n                    code: 400\n                    message: Did not provide version number\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                not-found:\n                  value:\n                    status: error\n                    code: 404\n                    message: Not found\n        '409':\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                conflict:\n                  value:\n                    status: error\n                    code: 409\n                    message: Outdated version number provided\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ../models/common/VersionedReference.yaml\n        description: 'The final version of the `RateTable` should be sent, to confirm the client is acting based on updated information'\n      tags:\n        - delete\n      description: Delete an existing `RateTable`\n  '/places/{id}':\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n        description: Unique identifier for place hierarchy element\n    get:\n      summary: Read an element in the Place hierarchy\n      tags:\n        - read\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/HierarchyElementData.yaml\n      operationId: get-places-id\n      description: Get latest version of a given place hierarchy element by its identifier (or a particular previous version when provided as a query parameter)\n      parameters:\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/places_expand'\n    put:\n      summary: Update Place hierarchy element\n      operationId: put-places-id\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n        '409':\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n      description: Update an element in the `Place` hierarchy (or one of its associated attributes like `Occupancy`)\n      tags:\n        - update\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ../models/api/HierarchyElementData.yaml\n        description: 'The new version of the `Place` hierarchy element, including only its changed attributes. In the case of Occupancy updates, the Place version does not need to change.'\n    delete:\n      summary: Delete Place hierarchy element\n      operationId: delete-places-id\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n        '409':\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n      description: Delete Place hierarchy element\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ../models/common/VersionedIdentity.yaml\n        description: 'The final version of the `Place` hierarchy element should be sent, to confirm the client is acting based on updated information'\n      tags:\n        - delete\n  /places:\n    get:\n      summary: List and search for elements in the Place hierarchy\n      tags:\n        - list\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: ../models/api/PaginatedListMeta.yaml\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        description: Hierarchy elements matching filters\n                        items:\n                          $ref: ../models/api/HierarchyElementData.yaml\n                    description: Data response\n      operationId: get-places\n      description: |-\n        Lists `Places` and allows searching/filtering by:\n\n        * `latitude`, `longitude`, `radius`: to check for elements in the `Place` hierarchy within a geographic area\n        * a modification instant (`modified_since`): to only display changed resources from that point onwards\n        * `layer`: maximum hierarchy element layer desired\n        * `type`: types of hierarchy elements\n        * `right_type`: types of `RightSpecifications` associated with Place hierarchy elements\n        * `structure_type`: types of structure\n        * `structure_grade`: grades of structures\n        * `name`: name of facilities\n\n        Additionally, supports providing a comma-separated list of optional object attributes associated to a `Place` hierarchy element that should be included in the result set. (see `expand` attribute). If unused or left blank, `none` will be assumed.\n      parameters:\n        - $ref: '#/components/parameters/lat'\n        - $ref: '#/components/parameters/long'\n        - $ref: '#/components/parameters/radius'\n        - $ref: '#/components/parameters/places_expand'\n        - schema:\n            type: integer\n          in: query\n          name: layer\n          description: 'Most detailed (lower-level) layer of data desired. 0 (zero) being the first level (and higher numbers correspond to lower-levels of information). If left empty, the entire Place hierarchy that matches the remaining parameters will be returned'\n        - $ref: '#/components/parameters/place_type'\n        - $ref: '#/components/parameters/right_type'\n        - $ref: '#/components/parameters/structure_type'\n        - $ref: '#/components/parameters/structure_grade'\n        - schema:\n            type: string\n          in: query\n          name: name\n          description: Name of place hierarchy element (in any of its supported languages)\n        - $ref: '#/components/parameters/mod'\n    post:\n      summary: Create a new Place hierarchy element\n      operationId: post-places\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n      tags:\n        - create\n      description: Create a new element in the `Place` hierarchy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ../models/api/HierarchyElementData.yaml\n        description: The new Place\n  /sessions:\n    get:\n      summary: List and Search for Sessions\n      tags:\n        - list\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: ../models/api/PaginatedListMeta.yaml\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: ../models/session/Session.yaml\n      operationId: get-sessions\n      description: |-\n        Lists `Sessions` and allows searching/filtering by a combination of:\n\n        * latitude, longitude, radius: to check for `Sessions` ocurring in a geographic area (via the associated Place hierarchy element)\n        * a list of `Places`, to retrieve all sessions connected to the given elements in the place hierarchy\n        * a list of `RightSpecifications`, to retrieve all sessions with segments using any of the given rights\n        * one or more `HolderCredentials` to get sessions linked to the given credentials\n        * startBefore: to get sessions starting before a given instant\n        * endBefore: to get sessions ending before a given instant\n        * startAfter: to get sessions starting after a given instant\n        * endAfter: to get sessions ending after a given instant\n        * a modification instant: to only display changed resources from that point onwards\n\n        Additionally, supports providing a comma-separated list of optional object attributes associated to a `Session` or `Segment` that should be included in the result set. If unused or left blank, `none` will be assumed.\n      parameters:\n        - $ref: '#/components/parameters/right_specs_list'\n        - $ref: '#/components/parameters/cred_type'\n        - $ref: '#/components/parameters/cred_class_list'\n        - $ref: '#/components/parameters/cred_id_list'\n        - $ref: '#/components/parameters/place_list'\n        - $ref: '#/components/parameters/sessions_expand'\n        - $ref: '#/components/parameters/lat'\n        - $ref: '#/components/parameters/long'\n        - $ref: '#/components/parameters/radius'\n        - $ref: '#/components/parameters/mod'\n        - $ref: '#/components/parameters/start_before'\n        - $ref: '#/components/parameters/end_before'\n        - $ref: '#/components/parameters/start_after'\n        - $ref: '#/components/parameters/end_after'\n    post:\n      summary: Create a new Session\n      operationId: post-sessions\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n      description: 'Allows the creation of a new Session, along with one or more Segments. It also allows the creation of an AssignedRight, for scenarios in which the Session and the AssignedRight are created simultaneously (e.g. off-street and on-street short stays)'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ../models/session/Session.yaml\n        description: 'The Session, Segments (and potentially AssignedRight) to create'\n      tags:\n        - create\n  '/sessions/{id}':\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n        description: Identifier for the `Session`\n    get:\n      summary: Get a Session\n      tags:\n        - read\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/session/Session.yaml\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n      operationId: get-sessions-id\n      description: Get latest version of a given `Session` by its identifier (or a particular previous version when provided as a query parameter)\n      parameters:\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/sessions_expand'\n    put:\n      summary: Update an existing Session\n      operationId: put-sessions-id\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                missing-data:\n                  value:\n                    status: error\n                    code: 400\n                    message: Missing required attributes\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                not-found:\n                  value:\n                    status: error\n                    code: 404\n                    message: Not found\n        '409':\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                conflict:\n                  value:\n                    status: error\n                    code: 409\n                    message: Outdated version number provided\n      description: 'Update an existing Session (or Segment). Segments may also be deleted using this method, by removing them from the list of segments under the Session. Session may also be updated by referencing a `Quote` through a `ReferenceQuoteExtension`'\n      tags:\n        - update\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: ../models/session/Session.yaml\n                - $ref: ../models/right/ReferenceQuoteExtension.yaml\n        description: 'The `Session` (and `Segments`) to update, including only their changed attributes'\n    delete:\n      summary: Delete a Session\n      operationId: delete-sessions-id\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                missing-data:\n                  value:\n                    status: error\n                    code: 400\n                    message: Missing required attributes\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                not-found:\n                  value:\n                    status: error\n                    code: 404\n                    message: Not found\n        '409':\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                conflict:\n                  value:\n                    status: error\n                    code: 409\n                    message: Outdated version number provided\n      tags:\n        - delete\n      description: 'Delete an existing `Session`. `Segments` should be deleted by using the `PUT` operation, and removing them from the list of segments under the session'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ../models/common/VersionedReference.yaml\n        description: 'The final version of the `Session` should be sent, to confirm the client is acting based on updated information'\n  /observations:\n    get:\n      summary: List and search Observations\n      tags:\n        - list\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: ../models/api/PaginatedListMeta.yaml\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: ../models/observation/ObservationElement.yaml\n      operationId: get-observations\n      description: |-\n        Lists `Observations` and allows searching/filtering by:\n\n        * latitude, longitude, radius: to check for `Observations` within a geographic area\n        * a list of `Places`, to retrieve all Observations within a set of parking locations\n        * start_before: to get observations starting before a given instant\n        * end_before: to get observations ending before a given instant\n        * start_after: to get observations starting after a given instant\n        * end_after: to get observations ending after a given instant\n        * a modification instant: to only display changed resources from that point onwards\n\n        Additionally, supports providing a comma-separated list of optional object attributes associated to an `Observation` that should be included in the result set. If unused or left blank, `none` will be assumed.\n      parameters:\n        - $ref: '#/components/parameters/place_list'\n        - $ref: '#/components/parameters/observations_expand'\n        - $ref: '#/components/parameters/lat'\n        - $ref: '#/components/parameters/long'\n        - $ref: '#/components/parameters/radius'\n        - $ref: '#/components/parameters/mod'\n        - $ref: '#/components/parameters/start_before'\n        - $ref: '#/components/parameters/end_before'\n        - $ref: '#/components/parameters/start_after'\n        - $ref: '#/components/parameters/end_after'\n    post:\n      summary: Create an Observation or Observation Set\n      operationId: post-observations\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n      description: Create a singular `Observation` or an `Observation Set`\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: ../models/observation/ObservationElement.yaml\n                - $ref: ../models/observation/ObservationSet.yaml\n        description: The ObservationElement or ObservationSet to create\n      tags:\n        - create\n  '/observations/{id}':\n    get:\n      summary: Get an Observation\n      tags:\n        - read\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/observation/ObservationElement.yaml\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n      operationId: get-observations-id\n      description: Get latest version of a given `Observation` by its identifier (or a particular previous version when provided as a query parameter)\n      parameters:\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/observations_expand'\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n        description: Unique identifier for `Observation`\n    put:\n      summary: Update an existing Observation\n      operationId: put-observations-id\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                missing-data:\n                  value:\n                    status: error\n                    code: 400\n                    message: Missing required attributes\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                not-found:\n                  value:\n                    status: error\n                    code: 404\n                    message: Not found\n        '409':\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                conflict:\n                  value:\n                    status: error\n                    code: 409\n                    message: Outdated version number provided\n      description: Update an existing `Observation`\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ../models/observation/ObservationElement.yaml\n        description: 'The new version of the `Observation`, including only its changed attributes'\n      tags:\n        - update\n    delete:\n      summary: Delete an `Observation`\n      operationId: delete-observations-id\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                missing-data:\n                  value:\n                    status: error\n                    code: 400\n                    message: Missing required attributes\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                not-found:\n                  value:\n                    status: error\n                    code: 404\n                    message: Not found\n        '409':\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n              examples:\n                conflict:\n                  value:\n                    status: error\n                    code: 409\n                    message: Outdated version number provided\n      description: Delete an existing `Observation`\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ../models/common/VersionedReference.yaml\n        description: 'The final version of the `Observation` should be sent, to confirm the client is acting based on updated information'\n      tags:\n        - delete\n  /webhooks:\n    post:\n      summary: Subscribe to event topics\n      operationId: post-webhooks\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      id:\n                        type: string\n                        description: Unique identifier for the event subscription\n                    required:\n                      - id\n                  - $ref: ../models/api/ResponseStatus.yaml\n      description: Allows an entity with an accessible API endpoint to subscribe to a set of event topics\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ../models/api/EventSubscription.yaml\n        description: The event subscription configuration\n      callbacks:\n        placeEvent:\n          '{$request.body#/endpoint}':\n            post:\n              summary: The endpoint for webhook subscribers\n              responses:\n                '200':\n                  description: OK\n              description: |-\n                This endpoint describes the payloads that webhook subscribers should expect to receive\n\n                **IMPORTANT**: This specification is a working **DRAFT**. Please **do not use it as the basis for APDS implementations at this stage**.\n              requestBody:\n                content:\n                  application/json:\n                    schema:\n                      $ref: ../models/api/EventData.yaml\n                description: The event payload\n      tags:\n        - create\n  '/webhooks/{id}':\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n        description: The unique identifier for the event subscription\n    get:\n      summary: Get an event subscription\n      tags:\n        - read\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      id:\n                        type: string\n                        description: Unique identifier for the event\n                      lastModified:\n                        type: string\n                        description: Last modified timestamp\n                        format: date-time\n                    required:\n                      - id\n                      - lastModified\n                  - $ref: ../models/api/EventSubscription.yaml\n      operationId: get-webhooks-id\n      description: Get current configuration for an event subscription\n    put:\n      summary: Update an event subscription\n      operationId: put-webhooks-id\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n      description: Update an existing event subscription to a different set of settings\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ../models/api/EventSubscription.yaml\n        description: The new settings for the event subscription\n      tags:\n        - update\n    delete:\n      summary: Delete an event subscription\n      operationId: delete-webhooks-id\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/api/ResponseStatus.yaml\n      description: Delete an event subscription\n      tags:\n        - delete\n  /quotes:\n    get:\n      summary: List QuoteRequests or QuoteResponses\n      tags:\n        - list\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: ../models/api/PaginatedListMeta.yaml\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          anyOf:\n                            - $ref: ../models/quote/QuoteRightResponse.yaml\n                            - $ref: ../models/quote/QuoteSessionExtensionResponse.yaml\n                            - $ref: ../models/quote/QuoteRightRequest.yaml\n                            - $ref: ../models/quote/QuoteSessionExtensionRequest.yaml\n      operationId: get-quotes\n      description: Lists recorded quote requests and/or responses\n      parameters:\n        - $ref: '#/components/parameters/lat'\n        - $ref: '#/components/parameters/long'\n        - $ref: '#/components/parameters/radius'\n        - $ref: '#/components/parameters/quotes_expand'\n        - $ref: '#/components/parameters/mod'\n        - $ref: '#/components/parameters/place_list'\n        - $ref: '#/components/parameters/right_specs_list'\n        - $ref: '#/components/parameters/quote_type'\n    post:\n      summary: Create a Quote Request\n      operationId: post-quotes\n      tags:\n        - create\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: ../models/api/PaginatedListMeta.yaml\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          oneOf:\n                            - $ref: ../models/quote/QuoteSessionExtensionResponse.yaml\n                            - $ref: ../models/quote/QuoteRightResponse.yaml\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: ../models/quote/QuoteRightRequest.yaml\n                - $ref: ../models/quote/QuoteSessionExtensionRequest.yaml\n      description: Creates a Quote Request for any eligible RightSpecifications (via `QuoteRightRequest`) or to extend an existing session (via `QuoteSessionExtensionRequest`)\n  '/quotes/{id}':\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n        description: the unique id of the quote\n    get:\n      summary: Your GET endpoint\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                anyOf:\n                  - {}\n                type: object\n      operationId: get-quotes-id\n      description: Retrieves a specific QuoteRequest or QuoteResponse. The `type` element is mandatory\n      parameters:\n        - $ref: '#/components/parameters/quotes_expand'\n        - $ref: '#/components/parameters/quote_filter'\ncomponents:\n  schemas: {}\n  parameters:\n    lat:\n      schema:\n        type: number\n        format: float\n      in: query\n      name: latitude\n      description: Location latitude to use as filter (mandatory if longitude or radius are defined)\n    long:\n      schema:\n        type: number\n        format: float\n      in: query\n      name: longitude\n      description: Location longitude to use as filter (mandatory if longitude or radius are defined)\n    radius:\n      schema:\n        type: integer\n        minimum: 0\n      in: query\n      name: radius\n      description: Number of metres to use as search filter from given latitude and longitude (mandatory if latitude or longitude are defined)\n    mod:\n      schema:\n        type: integer\n        minimum: 0\n      in: query\n      name: modified_since\n      description: |-\n        Reference timestamp to only display resources that have changed after that instant (represented as seconds, in UTC, since epoch).\n\n        * If `expand` attributes are requested, then this timestamp will also applyto those objects’ modifications \n        * When this attribute is used, the result-set will also include a list of deleted resources’ IDs, so that the client can use this method to avoid storing stale data\n    assigned_expand:\n      schema:\n        type: array\n        items:\n          type: string\n          enum:\n            - all\n            - none\n            - plannedUses\n            - assignedRightIssuer\n      description: Comma-separated list of optional object attributes associated to an `AssignedRight` that should be included in the result set\n      name: expand\n      in: query\n      style: form\n      explode: false\n    version:\n      schema:\n        type: integer\n        minimum: 1\n      in: query\n      name: version\n      description: 'Previous version number. Useful when a reference to a resource version is found in another dataset, and that version is no longer the latest one. Latest version is assumed when this parameter is not used.'\n    specs_expand:\n      schema:\n        type: array\n        items:\n          type: string\n          enum:\n            - all\n            - none\n            - rateEligibility\n            - validity\n            - credentials\n            - rightPools\n      description: Comma-separated list of optional object attributes associated to an `RightSpecification` that should be included in the result set\n      name: expand\n      in: query\n      style: form\n      explode: false\n    cred_type:\n      schema:\n        type: array\n        items:\n          $ref: ../models/enums/CredentialTypeEnum.yaml\n      name: credential_type\n      in: query\n      description: Type of credential\n      style: form\n      explode: false\n    places_expand:\n      schema:\n        type: array\n        items:\n          type: string\n          enum:\n            - all\n            - none\n            - rightSpecifications\n            - occupancy\n            - areaLocation\n            - pointLocation\n            - contacts\n            - operatingRestrictions\n            - characteristics\n            - paymentMethods\n            - openingTimes\n            - streetAddress\n      description: Comma-separated list of optional object attributes associated to a `Place` hierarchy element that should be included in the result set\n      name: expand\n      in: query\n      style: form\n      explode: false\n    right_type:\n      schema:\n        type: array\n        items:\n          $ref: ../models/enums/RightTypeEnum.yaml\n      name: right_type\n      in: query\n      description: Comma-separated list of type of `RightSpecifications` associated with place hierarchy elements (all will be assumed if parameter is not used or left blank)\n      style: form\n      explode: false\n    place_type:\n      schema:\n        type: array\n        items:\n          $ref: ../models/enums/HierarchyElementTypeEnum.yaml\n      name: type\n      in: query\n      description: Comma-separated list of type of `Place` hierarchy elements to consider (all will be assumed if parameter is not used or left blank)\n      style: form\n      explode: false\n    structure_type:\n      schema:\n        type: array\n        items:\n          $ref: ../models/enums/StructureTypeEnum.yaml\n      name: structure_type\n      in: query\n      description: Comma-separated list of types of Structure in the hierarchy to consider (all will be assumed if parameter is not used or left blank)\n      style: form\n      explode: false\n    structure_grade:\n      schema:\n        type: array\n        items:\n          $ref: ../models/enums/StructureGradeEnum.yaml\n      name: structure_grade\n      in: query\n      description: Comma-separated list of Structure grades in the hierarchy to consider (all will be assumed if parameter is not used or left blank)\n      style: form\n      explode: false\n    rates_expand:\n      schema:\n        type: array\n        items:\n          type: string\n          enum:\n            - all\n            - none\n            - rateLineCollections\n            - rateLineCollections.rateLines\n      style: form\n      explode: false\n      description: Comma-separated list of optional object attributes associated to a `RateTable` that should be included in the result set\n      name: expand\n      in: query\n    place_list:\n      schema:\n        type: array\n        items:\n          type: string\n      description: Comma-separated list of unique identifiers for elements in the `Place` hierarchy\n      name: place\n      in: query\n      explode: false\n      style: form\n    right_specs_list:\n      schema:\n        type: array\n        items:\n          type: string\n      description: Comma-separated list of unique identifiers for `RightSpecifications`\n      name: right_spec\n      in: query\n      explode: false\n      style: form\n    cred_id_list:\n      schema:\n        type: array\n        items:\n          type: string\n      in: query\n      name: credential_id\n      description: Comma-separated list of unique identifiers for credentials in given classes\n      style: form\n      explode: false\n    cred_class_list:\n      schema:\n        type: array\n        items:\n          type: string\n      in: query\n      name: credential_class\n      description: Comma-separated list of specific class names for credentials (a more generic option is to use `credential_type`)\n      style: form\n      explode: false\n    end_after:\n      schema:\n        type: integer\n        minimum: 0\n      in: query\n      name: end_after\n      description: 'Unix epoch instant in UTC, to filter results ending after the given instant'\n    start_after:\n      schema:\n        type: integer\n        minimum: 0\n      in: query\n      name: start_after\n      description: 'Unix epoch instant in UTC, to filter results starting after the given instant'\n    end_before:\n      schema:\n        type: integer\n        minimum: 0\n      in: query\n      name: end_before\n      description: 'Unix epoch instant in UTC, to filter results ending before the given instant'\n    start_before:\n      schema:\n        type: integer\n        minimum: 0\n      in: query\n      name: start_before\n      description: 'Unix epoch instant in UTC, to filter results starting before the given instant'\n    sessions_expand:\n      schema:\n        type: array\n        items:\n          type: string\n          enum:\n            - all\n            - none\n            - credentials\n            - segments\n            - segments.financialTransactions\n            - segments.space\n            - segments.assignedRight\n            - vehicleAncilliaryIdentification\n      description: Comma-separated list of optional object attributes associated to an `Session` (or `Segment`) that should be included in the result set\n      name: expand\n      in: query\n      style: form\n      explode: false\n    observations_expand:\n      schema:\n        type: array\n        items:\n          type: string\n          enum:\n            - all\n            - none\n            - images\n            - hierarchyElement\n            - vehicleAncilliaryIdentification\n      description: Comma-separated list of optional object attributes associated to an `Observation` that should be included in the result set\n      name: expand\n      in: query\n      style: form\n      explode: false\n    quotes_expand:\n      schema:\n        type: array\n        items:\n          type: string\n          enum:\n            - all\n            - none\n            - options\n      description: Comma-separated list of optional object attributes associated to a `QuoteRequest` or `QuoteResponse` that should be included in the result set\n      name: expand\n      in: query\n      style: form\n      explode: false\n    quote_type:\n      schema:\n        type: array\n        items:\n          type: string\n          enum:\n            - all\n            - QuoteRightRequest\n            - QuoteRightResponse\n            - QuoteSessionExtensionRequest\n            - QuoteSessionExtensionResponse\n      name: type\n      in: query\n      description: Comma-separated list of type of `Quote` type elements to consider (all will be assumed if parameter is not used or left blank)\n      style: form\n      explode: false\n    quote_filter:\n      schema:\n        type: string\n        enum:\n          - QuoteRightRequest\n          - QuoteRightResponse\n          - QuoteSessionExtensionRequest\n          - QuoteSessionExtensionResponse\n      name: type\n      in: query\n      description: Type of `Quote` type element to consider\n      style: form\n      explode: false\n"
		}
	},
	"Error": "parse: paths: /sessions/{id}: get: get-sessions-id: responses: 200: content: application/json: schema: parse schema: reference \"../models/session/Session.yaml\": resolve reference \"../models/session/Session.yaml\": invalid schema reference \"../models/session/Session.yaml\""
}