{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/CVEProject/CVE-Services"
		},
		"file": {
			"name": "openapi.yml",
			"path": "docs/openapi.yml",
			"content": "openapi: 3.0.2\ninfo:\n  title: CVE Services API\n  description: The CVE services API which supports automation tooling for the CVE Project.\n  termsOfService: https://placeholder.cve.mitre.org/api/terms\n  contact:\n    name: CVE Services API\n    url: https://github.com/CVEProject/cve-services\n    email: cve-board-auto-list@mitre.org\n  license:\n    name: Creative Commons Zero v1.0 Universal\n    url: https://creativecommons.org/publicdomain/zero/1.0/legalcode\n  version: 1.0.0\nservers:\n  - url: https://cveawg.mitre.org/api\n    description: Production server\ncomponents:\n  parameters:\n    api-entity-header:\n      in: header\n      name: CVE-API-ORG\n      description: The shortname for the entity (e.g., CNA, ADP) that is authenticated or requesting authentication.\n      required: true\n      schema:\n        type: string\n    api-user-header:\n      in: header\n      name: CVE-API-USER\n      description: The username for the account that is making the request.\n      required: true\n      schema:\n        type: string\n    api-secret-header:\n      in: header\n      name: CVE-API-KEY\n      description: The user's API key.\n      required: true\n      schema:\n        type: string\n    cve-id-path:\n      in: path\n      name: cve-id\n      description: The CVE ID for which the record is being submitted.\n      required: true\n      schema:\n        type: string\n        pattern: '^CVE-[0-9]{4}-[0-9]{4,}$'\n    shortname-path:\n      in: path\n      name: shortname\n      description: The short name of the organization.\n      required: true\n      schema:\n        type: string\n    username-path:\n      in: path\n      name: username\n      description: The user name of the user.\n      required: true\n      schema:\n        type: string\n    page-query:\n      in: query\n      name: page\n      description: The current page in the paginator.\n      required: false\n      schema:\n        type: integer\n        format: int32\n        minimum: 1\n  schemas:\n    cve-id:\n      type: object\n      properties:\n        cve_id:\n          type: string\n          pattern: ^CVE-[0-9]{4}-[0-9]{4,}$\n        cve_year:\n          type: string\n          pattern: ^[0-9]{4}$\n        owning_cna:\n          type: string\n          description: The shortname for the organization that owns the CVE-ID.\n        state:\n          type: string\n          enum: [RESERVED, PUBLISHED, REJECTED]\n        requested_by:\n          type: object\n          properties:\n            cna:\n              type: string\n              description: The shortname for the organization of the user that requested the ID.\n            user:\n              type: string\n              description: The username for the account that requested the ID.\n        reserved:\n          type: string\n          format: date-time\n          description: The time the ID was reserved.\n        time:\n          type: object\n          properties:\n            created:\n              type: string\n              format: date-time\n              description: The time the ID was created.\n            modified:\n              type: string\n              format: date-time\n              description: The last time the ID was modified.\n    cve-id-no-time:\n      type: object\n      properties:\n        cve_id:\n          type: string\n          pattern: ^CVE-[0-9]{4}-[0-9]{4,}$\n        cve_year:\n          type: string\n          pattern: ^[0-9]{4}$\n        owning_cna:\n          type: string\n          description: The shortname for the organization that owns the CVE-ID.\n        state:\n          type: string\n          enum: [RESERVED, PUBLISHED, REJECTED]\n        requested_by:\n          type: object\n          properties:\n            cna:\n              type: string\n              description: The shortname for the organization of the user that requested the ID.\n            user:\n              type: string\n              description: The username for the account that requested the ID.\n        reserved:\n          type: string\n          format: date-time\n          description: The time the ID was reserved.\n    org:\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the organization.\n        short_name:\n          type: string\n          description: The short name of the organization.\n        UUID:\n          type: string\n          description: The identifier of the organization.\n        policies:\n          type: object\n          properties:\n            id_quota:\n              type: integer\n              format: int32\n              description: The number of CVE IDs the organization is allowed to have in the RESERVED state at one time.\n              minimum: 0\n              maximum: 100000\n        authority:\n          type: object\n          properties:\n            active_roles:\n              type: array\n              items:\n                type: string\n                description: The active roles of the organization.\n                enum: ['CNA','SECRETARIAT','ROOT_CNA','ADP']\n        time:\n          type: object\n          properties:\n            created:\n              type: string\n              format: date-time\n              description: The time the organization was created.\n            modified:\n              type: string\n              format: date-time\n              description: The last time the organization was modified.\n    org-no-time:\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the organization.\n        short_name:\n          type: string\n          description: The short name of the organization.\n        UUID:\n          type: string\n          description: The identifier of the organization.\n        policies:\n          type: object\n          properties:\n            id_quota:\n              type: integer\n              format: int32\n              description: The number of CVE IDs the organization is allowed to have in the RESERVED state at one time.\n        authority:\n          type: object\n          properties:\n            active_roles:\n              type: array\n              items:\n                type: string\n                description: The active roles of the organization.\n                enum: ['CNA','SECRETARIAT','ROOT_CNA','ADP']\n    user-no-time-secret:\n      type: object\n      properties:\n        username:\n          type: string\n          description: The user name of the user.\n        org_UUID:\n          type: string\n          description: The identifier of the organization the user belongs to.\n        UUID:\n          type: string\n          description: The identifier of the user.\n        active:\n          type: boolean\n          description: The user is an active user of the organization.\n        name:\n          type: object\n          properties:\n            first:\n              type: string\n              description: The first name of the user.\n            last:\n              type: string\n              description: The last name of the user.\n            middle:\n              type: string\n              description: The middle name of the user, if any.\n            suffix:\n              type: string\n              description: The suffix of the user, if any.\n        authority:\n          type: object\n          properties:\n            active_roles:\n              type: array\n              items:\n                type: string\n                description: The active roles of the user.\n                enum: ['ADMIN']\n    user:\n      type: object\n      properties:\n        username:\n          type: string\n          description: The user name of the user.\n        org_UUID:\n          type: string\n          description: The identifier of the organization the user belongs to.\n        UUID:\n          type: string\n          description: The identifier of the user.\n        active:\n          type: boolean\n          description: The user is an active user of the organization.\n        name:\n          type: object\n          properties:\n            first:\n              type: string\n              description: The first name of the user.\n            last:\n              type: string\n              description: The last name of the user.\n            middle:\n              type: string\n              description: The middle name of the user, if any.\n            suffix:\n              type: string\n              description: The suffix of the user, if any.\n        secret:\n          type: string\n          description: The API key of the user.\n        authority:\n          type: object\n          properties:\n            active_roles:\n              type: array\n              items:\n                type: string\n                description: The active roles of the user.\n                enum: ['ADMIN']\n        time:\n          type: object\n          properties:\n            created:\n              type: string\n              format: date-time\n              description: The time the user was created.\n            modified:\n              type: string\n              format: date-time\n              description: The last time the user was modified.\n    user-no-secret:\n      type: object\n      properties:\n        username:\n          type: string\n          description: The user name of the user.\n        org_UUID:\n          type: string\n          description: The identifier of the organization the user belongs to.\n        UUID:\n          type: string\n          description: The identifier of the user.\n        active:\n          type: boolean\n          description: The user is an active user of the organization.\n        name:\n          type: object\n          properties:\n            first:\n              type: string\n              description: The first name of the user.\n            last:\n              type: string\n              description: The last name of the user.\n            middle:\n              type: string\n              description: The middle name of the user, if any.\n            suffix:\n              type: string\n              description: The suffix of the user, if any.\n        authority:\n          type: object\n          properties:\n            active_roles:\n              type: array\n              items:\n                type: string\n                description: The active roles of the user.\n                enum: ['ADMIN']\n        time:\n          type: object\n          properties:\n            created:\n              type: string\n              format: date-time\n              description: The time the user was created.\n            modified:\n              type: string\n              format: date-time\n              description: The last time the user was modified.\n    arrayOfCveIds:\n      type: array\n      items:\n        $ref: '#/components/schemas/cve-id'\n    arrayOfCveIdsNoTime:\n      type: array\n      items:\n        $ref: '#/components/schemas/cve-id-no-time'\n    arrayOfCveRecords:\n      type: array\n      items:\n        anyOf:\n          - $ref: 'https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema'\n          - $ref: 'https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_reject.schema'\n    arrayOfOrgs:\n      type: array\n      items:\n        $ref: '#/components/schemas/org'\n    arrayOfOrgsNoTime:\n      type: array\n      items:\n        $ref: '#/components/schemas/org-no-time'\n    arrayOfUsersNoSecret:\n      type: array\n      items:\n        $ref: '#/components/schemas/user-no-secret'\n    errorCveIds:\n      type: object\n      properties:\n        error:\n          type: string\n          description: Error name\n        message:\n          type: string\n          description: Error description\n        details:\n          type: object\n          properties:\n            amount_reserved:\n              type: integer\n              format: int32\n              description: The amount of IDs that were reserved in the system.\n        cve_ids:\n          type: array\n          items:\n            $ref: '#/components/schemas/cve-id-no-time'\n    errorValidator:\n      type: object\n      properties:\n        error:\n          type: string\n          description: Error name\n        message:\n          type: string\n          description: Error description\n        details:\n          type: object\n          properties:\n            errors:\n              type: array\n              items:\n                type: string\n                description: The errors encountered by the JSON validator.\n    errorIdQuota:\n      type: object\n      properties:\n        error:\n          type: string\n          description: Error name\n        message:\n          type: string\n          description: Error description\n        details:\n          type: object\n          properties:\n            id_quota:\n              type: integer\n              format: int32\n              description: The number of CVE IDs the organization is allowed to have in the RESERVED state at one time.\n            total_reserved:\n              type: integer\n              format: int32\n              description: The total number of CVE IDs across all years that the organization has in the RESERVED state.\n            available:\n              type: integer\n              format: int32\n              description: The number of CVE IDs that can be reserved by the organization (e.g., id_quota - total_reserved).\n    errorBadInput:\n      type: object\n      properties:\n        error:\n          type: string\n          description: Error name\n        message:\n          type: string\n          description: Error description\n        details:\n          type: array\n          items:\n            type: object\n            properties:\n              msg:\n                type: string\n                description: Invalid value\n              param:\n                type: string\n                description: The name of the parameter with the error\n              location:\n                type: string\n                enum: ['body', 'param', 'query']\n                description: The location of the parameter\n    errorGeneric:\n      type: object\n      properties:\n        error:\n          type: string\n          description: Error name\n        message:\n          type: string\n          description: Error description\npaths:\n  /cve-id-range/{year}:\n    parameters:\n      - $ref: '#/components/parameters/api-entity-header'\n      - $ref: '#/components/parameters/api-secret-header'\n      - $ref: '#/components/parameters/api-user-header'\n      - in: path\n        name: year\n        description: The year of the CVE-ID-Range record.\n        required: true\n        schema:\n          type: integer\n          format: int32\n    post:\n      summary: Creates a CVE-ID-Range record for the specified year\n      description: |\n        \u003ch2\u003eAccess Control\u003c/h2\u003e\n        \u003cp\u003eAt least one of the following roles are needed to access the endpoint:\u003c/p\u003e\n        \u003cp\u003e- \u003cb\u003eSECRETARIAT:\u003c/b\u003e The user must belong to an Organization with the “SECRETARIAT” role\u003c/p\u003e\n        \u003ch2\u003eExpected Behavior\u003c/h2\u003e\n        \u003cp\u003e\u003cb\u003eSecretariat:\u003c/b\u003e Can create a CVE-ID-Range record for the specified year\u003c/p\u003e\n      operationId: cveIdRangeCreate\n      x-org-roles:\n        type: String\n        enum: ['SECRETARIAT']\n        description: The user must belong to an Organization with the “SECRETARIAT” role to access the endpoint\n      x-user-roles:\n        type: String\n        enum: ['']\n        description: No user roles needed to access the endpoint\n      responses:\n        200:\n          description: The CVE-ID-Range entity was created.\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorBadInput'\n        401:\n          description: Not Authenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        500:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n  /cve-id:\n    parameters:\n      - $ref: '#/components/parameters/api-entity-header'\n      - $ref: '#/components/parameters/api-secret-header'\n      - $ref: '#/components/parameters/api-user-header'\n    get:\n      summary: Retrieves all CVE IDs entity owns after applying the query params\n      description: |\n        \u003ch2\u003eAccess Control\u003c/h2\u003e\n        \u003cp\u003eNo roles needed to access the endpoint\u003c/p\u003e\n        \u003ch2\u003eExpected Behavior\u003c/h2\u003e\n        \u003cp\u003e\u003cb\u003eSecretariat:\u003c/b\u003e Can see CVE-IDs owned by any Organization\u003c/p\u003e\n        \u003cp\u003e\u003cb\u003eAdmin User:\u003c/b\u003e Can only see CVE-IDs owned by the Organization it belongs to\u003c/p\u003e\n        \u003cp\u003e\u003cb\u003eRegular User:\u003c/b\u003e Can only see CVE-IDs owned by the Organization it belongs to\u003c/p\u003e\n      operationId: cveIdGetFiltered\n      x-org-roles:\n        type: String\n        enum: ['']\n        description: No Organization roles needed to access the endpoint\n      x-user-roles:\n        type: String\n        enum: ['']\n        description: No user roles needed to access the endpoint\n      parameters:\n        - in: query\n          name: state\n          description: Filter by CVE state [RESERVED, PUBLISHED, REJECTED].\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: cve_id_year\n          description: Filter by the year in the CVE ID (YYYY).\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - in: query\n          name: time_reserved.lt\n          description: Get all CVE-ID records reserved before timestamp.\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - in: query\n          name: time_reserved.gt\n          description: Get all CVE-ID records reserved after timestamp.\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - in: query\n          name: time_modified.lt\n          description: Get all CVE-ID records modified before timestamp.\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - in: query\n          name: time_modified.gt\n          description: Get all CVE-ID records modified after timestamp.\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - $ref: '#/components/parameters/page-query'\n      responses:\n        200:\n          description: A filtered list of CVE-ID records the organization owns given the query parameters.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  totalCount:\n                    type: integer\n                    format: int32\n                    description: Total CVE records found\n                  itemsPerPage:\n                    type: integer\n                    format: int32\n                    description: Number of CVE records in a page\n                  pageCount:\n                    type: integer\n                    format: int32\n                    description: Total number of pages\n                  currentPage:\n                    type: integer\n                    format: int32\n                    description: Current page\n                  prevPage:\n                    type: integer\n                    format: int32\n                    description: Previous page\n                  nextPage:\n                    type: integer\n                    format: int32\n                    description: Next page\n                  cve_ids:\n                    $ref: '#/components/schemas/arrayOfCveIds'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorBadInput'\n        401:\n          description: Not Authenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        500:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n    post:\n      summary: Reserves CVE-ID records for the organization provided in the short_name query parameter\n      description: |\n        \u003ch2\u003eAccess Control\u003c/h2\u003e\n        \u003cp\u003eAt least one of the following roles are needed to access the endpoint:\u003c/p\u003e\n        \u003cp\u003e- \u003cb\u003eCNA:\u003c/b\u003e The user must belong to an Organization with the “CNA” role\u003c/p\u003e\n        \u003ch2\u003eExpected Behavior\u003c/h2\u003e\n        \u003cp\u003e\u003cb\u003eSecretariat:\u003c/b\u003e Can reserve CVE-IDs for any Organization\u003c/p\u003e\n        \u003cp\u003e\u003cb\u003eCNA:\u003c/b\u003e Can only reserve CVE-IDs for its Organization\u003c/p\u003e\n      operationId: cveIdReserve\n      x-org-roles:\n        type: String\n        enum: ['CNA']\n        description: The user must belong to an Organization with the “CNA” role to access the endpoint\n      x-user-roles:\n        type: String\n        enum: ['']\n        description: No user roles needed to access the endpoint\n      parameters:\n        - in: query\n          name: batch_type\n          description: When the amount is greater than one, it indicates whether the CVE IDs should be sequential or non-sequential.\n          required: false\n          schema:\n            type: string\n            enum: [sequential, nonsequential, non-sequential]\n        - in: query\n          name: amount\n          description: Amount of CVE IDs to reserve.\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - in: query\n          name: cve_year\n          description: The year the CVE IDs will be reserved for. (i.e., 1999, ..., currentYear + 1)\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - in: query\n          name: short_name\n          description: The CNA that will own the CVE IDs reserved.\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: A list of the newly reserved CVE-IDs.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  cve_ids:\n                    $ref: '#/components/schemas/arrayOfCveIdsNoTime'\n        206:\n          description: A partial list of the CVE-IDs the IDR service managed to reserve before encountering a case where no more CVE IDs could be reserved.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorCveIds'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorBadInput'\n        401:\n          description: Not Authenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        500:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n  /cve-id/{cve-id}:\n    parameters:\n      - $ref: '#/components/parameters/api-entity-header'\n      - $ref: '#/components/parameters/api-secret-header'\n      - $ref: '#/components/parameters/api-user-header'\n      - $ref: '#/components/parameters/cve-id-path'\n    get:\n      summary: Retrieves a CVE-ID record by ID, can be a cve id the entity doesn't own if in a PUBLISHED or REJECTED state\n      description: |\n        \u003ch2\u003eAccess Control\u003c/h2\u003e\n        \u003cp\u003eNo roles needed to access the endpoint\u003c/p\u003e\n        \u003ch2\u003eExpected Behavior\u003c/h2\u003e\n        \u003cp\u003e\u003cb\u003eSecretariat:\u003c/b\u003e Can see the full information of a CVE-ID owned by any Organization\u003c/p\u003e\n        \u003cp\u003e\u003cb\u003eAdmin User:\u003c/b\u003e Can see full information of a CVE-ID owned by the Organization it belongs to, and can only see partial information of a CVE-ID in the “PUBLISHED” or “REJECTED” state that is owned by another Organization\u003c/p\u003e\n        \u003cp\u003e\u003cb\u003eRegular User:\u003c/b\u003e Can see full information of a CVE-ID owned by the Organization it belongs to, and can only see partial information of a CVE-ID in the “PUBLISHED” or “REJECTED” state that is owned by another Organization\u003c/p\u003e\n      operationId: cveIdGetSingle\n      x-org-roles:\n        type: String\n        enum: ['']\n        description: No Organization roles needed to access the endpoint\n      x-user-roles:\n        type: String\n        enum: ['']\n        description: No user roles needed to access the endpoint\n      responses:\n        200:\n          description: The requested CVE-ID record is returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/cve-id'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorBadInput'\n        401:\n          description: Not Authenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        500:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n    put:\n      summary: Updates a CVE-ID record by ID\n      description: |\n        \u003ch2\u003eAccess Control\u003c/h2\u003e\n        \u003cp\u003eAt least one of the following roles are needed to access the endpoint:\u003c/p\u003e\n        \u003cp\u003e- \u003cb\u003eSECRETARIAT:\u003c/b\u003e The user must belong to an Organization with the “SECRETARIAT” role\u003c/p\u003e\n        \u003ch2\u003eExpected Behavior\u003c/h2\u003e\n        \u003cp\u003e\u003cb\u003eSecretariat:\u003c/b\u003e Can update a CVE-ID owned by any Organization\u003c/p\u003e\n      operationId: cveIdUpdateSingle\n      x-org-roles:\n        type: String\n        enum: ['SECRETARIAT']\n        description: The user must belong to an Organization with the “SECRETARIAT” role to access the endpoint\n      x-user-roles:\n        type: String\n        enum: ['']\n        description: No user roles needed to access the endpoint\n      parameters:\n        - in: query\n          name: state\n          description: Update the state of a CVE-ID record.\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: org\n          description: Update the owning_cna of a CVE-ID record.\n          required: false\n          schema:\n            type: string\n      responses:\n        200:\n          description: The updated CVE-ID record is returned.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:      \n                  message:\n                    type: string\n                    description: Success description\n                  updated:\n                    $ref: '#/components/schemas/cve-id'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorBadInput'\n        401:\n          description: Not Authenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        500:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n  /cve:\n    parameters:\n      - $ref: '#/components/parameters/api-entity-header'\n      - $ref: '#/components/parameters/api-secret-header'\n      - $ref: '#/components/parameters/api-user-header'\n    get:\n      summary: Retrieves all CVE records\n      description: |\n        \u003ch2\u003eAccess Control\u003c/h2\u003e\n        \u003cp\u003eAt least one of the following roles are needed to access the endpoint:\u003c/p\u003e\n        \u003cp\u003e- \u003cb\u003eSECRETARIAT:\u003c/b\u003e The user must belong to an Organization with the “SECRETARIAT” role\u003c/p\u003e\n        \u003ch2\u003eExpected Behavior\u003c/h2\u003e\n        \u003cp\u003e\u003cb\u003eSecretariat:\u003c/b\u003e Can see all CVE records owned by any Organization\u003c/p\u003e\n      operationId: cveGetFiltered\n      x-org-roles:\n        type: String\n        enum: ['SECRETARIAT']\n        description: The user must belong to an Organization with the “SECRETARIAT” role to access the endpoint\n      x-user-roles:\n        type: String\n        enum: ['']\n        description: No user roles needed to access the endpoint\n      parameters:\n        - in: query\n          name: time_modified.lt\n          description: Get all CVE records modified before timestamp.\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - in: query\n          name: time_modified.gt\n          description: Get all CVE records modified after timestamp.\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - in: query\n          name: state\n          description: 'Filter by CVE state. Accepted values: [PUBLISHED, REJECTED].'\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: count_only\n          description: Get count of records that match query. Accepted values are 0 and 1, representing False and True, respectively.\n          required: false\n          schema:\n            type: boolean\n        - in: query\n          name: assignerShortName\n          description: Get the short name for the org to which the cve id was assigned.\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: assigner\n          description: Get the UUID for the org to which the cve id was assigned.\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: A list of CVE records and pagination fields, only allowed by the Secretariat.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  totalCount:\n                    type: integer\n                    format: int32\n                    description: Total CVE records found\n                  itemsPerPage:\n                    type: integer\n                    format: int32\n                    description: Number of CVE records in a page\n                  pageCount:\n                    type: integer\n                    format: int32\n                    description: Total number of pages\n                  currentPage:\n                    type: integer\n                    format: int32\n                    description: Current page\n                  prevPage:\n                    type: integer\n                    format: int32\n                    description: Previous page\n                  nextPage:\n                    type: integer\n                    format: int32\n                    description: Next page\n                  cveRecords:\n                    $ref: '#/components/schemas/arrayOfCveRecords'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorBadInput'\n        401:\n          description: Not Authenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        500:\n          description: Internal Server\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n  /cve/{cve-id}:\n    parameters:\n      - $ref: '#/components/parameters/api-entity-header'\n      - $ref: '#/components/parameters/api-secret-header'\n      - $ref: '#/components/parameters/api-user-header'\n      - $ref: '#/components/parameters/cve-id-path'\n    get:\n      summary: Returns a CVE record by CVE ID\n      description: |\n        \u003ch2\u003eAccess Control\u003c/h2\u003e\n        \u003cp\u003eAt least one of the following roles are needed to access the endpoint:\u003c/p\u003e\n        \u003cp\u003e- \u003cb\u003eSECRETARIAT:\u003c/b\u003e The user must belong to an Organization with the “SECRETARIAT” role\u003c/p\u003e\n        \u003ch2\u003eExpected Behavior\u003c/h2\u003e\n        \u003cp\u003e\u003cb\u003eSecretariat:\u003c/b\u003e Can see a CVE record owned by any Organization\u003c/p\u003e\n      operationId: cveGetSingle\n      x-org-roles:\n        type: String\n        enum: ['SECRETARIAT']\n        description: The user must belong to an Organization with the “SECRETARIAT” role to access the endpoint\n      x-user-roles:\n        type: String\n        enum: ['']\n        description: No user roles needed to access the endpoint\n      responses:\n        200:\n          description: The requested CVE record is returned.\n          content:\n            application/json:\n              schema:\n                type: object\n                anyOf:\n                  - $ref: 'https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema'\n                  - $ref: 'https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_reject.schema'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorBadInput'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        500:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n    post:\n      summary: Creates a CVE Record by ID\n      description: |\n        \u003ch2\u003eAccess Control\u003c/h2\u003e\n        \u003cp\u003eAt least one of the following roles are needed to access the endpoint:\u003c/p\u003e\n        \u003cp\u003e- \u003cb\u003eSECRETARIAT:\u003c/b\u003e The user must belong to an Organization with the “SECRETARIAT” role\u003c/p\u003e\n        \u003ch2\u003eExpected Behavior\u003c/h2\u003e\n        \u003cp\u003e\u003cb\u003eSecretariat:\u003c/b\u003e Can create a CVE record owned by any Organization\u003c/p\u003e\n      operationId: cveSubmit\n      x-org-roles:\n        type: String\n        enum: ['SECRETARIAT']\n        description: The user must belong to an Organization with the “SECRETARIAT” role to access the endpoint\n      x-user-roles:\n        type: String\n        enum: ['']\n        description: No user roles needed to access the endpoint\n      responses:\n        200:\n          description: Returns the CVE record created.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    description: Success description\n                  created:\n                    type: object\n                    anyOf:\n                      - $ref: 'https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema'\n                      - $ref: 'https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_reject.schema'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorBadInput'\n        401:\n          description: Not Authenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        500:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n    put:\n      summary: Updates a CVE Record by ID\n      description: |\n        \u003ch2\u003eAccess Control\u003c/h2\u003e\n        \u003cp\u003eAt least one of the following roles are needed to access the endpoint:\u003c/p\u003e\n        \u003cp\u003e- \u003cb\u003eSECRETARIAT:\u003c/b\u003e The user must belong to an Organization with the “SECRETARIAT” role\u003c/p\u003e\n        \u003ch2\u003eExpected Behavior\u003c/h2\u003e\n        \u003cp\u003e\u003cb\u003eSecretariat:\u003c/b\u003e Can update a CVE record owned by any Organization\u003c/p\u003e\n      operationId: cveUpdateSingle\n      x-org-roles:\n        type: String\n        enum: ['SECRETARIAT']\n        description: The user must belong to an Organization with the “SECRETARIAT” role to access the endpoint\n      x-user-roles:\n        type: String\n        enum: ['']\n        description: No user roles needed to access the endpoint\n      responses:\n        200:\n          description: Returns the CVE record updated.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    description: Success description\n                  updated:\n                    type: object\n                    anyOf:\n                      - $ref: 'https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema'\n                      - $ref: 'https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_reject.schema'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorBadInput'\n        401:\n          description: Not Authenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        500:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n  /org:\n    parameters:\n      - $ref: '#/components/parameters/api-entity-header'\n      - $ref: '#/components/parameters/api-secret-header'\n      - $ref: '#/components/parameters/api-user-header'\n    get:\n      summary: Retrieves all organization records\n      description: |\n        \u003ch2\u003eAccess Control\u003c/h2\u003e\n        \u003cp\u003eAt least one of the following roles are needed to access the endpoint:\u003c/p\u003e\n        \u003cp\u003e- \u003cb\u003eSECRETARIAT:\u003c/b\u003e The user must belong to an Organization with the “SECRETARIAT” role\u003c/p\u003e\n        \u003ch2\u003eExpected Behavior\u003c/h2\u003e\n        \u003cp\u003e\u003cb\u003eSecretariat:\u003c/b\u003e Can see the information of all Organizations\u003c/p\u003e\n      operationId: orgAll\n      x-org-roles:\n        type: String\n        enum: ['SECRETARIAT']\n        description: The user must belong to an Organization with the “SECRETARIAT” role to access the endpoint\n      x-user-roles:\n        type: String\n        enum: ['']\n        description: No user roles needed to access the endpoint\n      parameters:\n        - $ref: '#/components/parameters/page-query'\n      responses:\n        200:\n          description: Returns all organization records.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  totalCount:\n                    type: integer\n                    format: int32\n                    description: Total CVE records found\n                  itemsPerPage:\n                    type: integer\n                    format: int32\n                    description: Number of CVE records in a page\n                  pageCount:\n                    type: integer\n                    format: int32\n                    description: Total number of pages\n                  currentPage:\n                    type: integer\n                    format: int32\n                    description: Current page\n                  prevPage:\n                    type: integer\n                    format: int32\n                    description: Previous page\n                  nextPage:\n                    type: integer\n                    format: int32\n                    description: Next page\n                  organizations:\n                    $ref: '#/components/schemas/arrayOfOrgs'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorBadInput'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        500:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n    post:\n      summary: Creates an organization record\n      description: |\n        \u003ch2\u003eAccess Control\u003c/h2\u003e\n        \u003cp\u003eAt least one of the following roles are needed to access the endpoint:\u003c/p\u003e\n        \u003cp\u003e- \u003cb\u003eSECRETARIAT:\u003c/b\u003e The user must belong to an Organization with the “SECRETARIAT” role\u003c/p\u003e\n        \u003ch2\u003eExpected Behavior\u003c/h2\u003e\n        \u003cp\u003e\u003cb\u003eSecretariat:\u003c/b\u003e Can create any Organization record\u003c/p\u003e\n      operationId: orgCreateSingle\n      x-org-roles:\n        type: String\n        enum: ['SECRETARIAT']\n        description: The user must belong to an Organization with the “SECRETARIAT” role to access the endpoint\n      x-user-roles:\n        type: String\n        enum: ['']\n        description: No user roles needed to access the endpoint\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                short_name:\n                  type: string\n                  description: The short name of the organization.\n                name:\n                  type: string\n                  description: The name of the organization.\n                uuid:\n                  type: string\n                  description: The organization identifier.\n                authority:\n                  type: object\n                  properties:\n                    active_roles:\n                      type: array\n                      items:\n                        type: string\n                        description: The active roles of the organization.\n                        enum: ['CNA','SECRETARIAT','ROOT_CNA','ADP']\n                policies:\n                  type: object\n                  properties:\n                    id_quota:\n                      type: integer\n                      format: int32\n                      description: The CVE ID quota of the organization.\n                      minimum: 0\n                      maximum: 100000\n              required:\n                - short_name\n                - name\n      responses:\n        200:\n          description: Returns the organization record created.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:      \n                  message:\n                    type: string\n                    description: Success description\n                  created:\n                    $ref: '#/components/schemas/org'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorBadInput'\n        401:\n          description: Not Authenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        500:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n  /org/{identifier}:\n    parameters:\n      - $ref: '#/components/parameters/api-entity-header'\n      - $ref: '#/components/parameters/api-secret-header'\n      - $ref: '#/components/parameters/api-user-header'\n      - $ref: '#/components/parameters/shortname-path'\n    get:\n      summary: Retrieve an organization's data given the identifier, which can be their short name or that organization's uuid.\n      description: |\n        \u003ch2\u003eAccess Control\u003c/h2\u003e\n        \u003cp\u003eNo roles needed to access the endpoint\u003c/p\u003e\n        \u003ch2\u003eExpected Behavior\u003c/h2\u003e\n        \u003cp\u003e\u003cb\u003eSecretariat:\u003c/b\u003e Can see the information of any Organization\u003c/p\u003e\n        \u003cp\u003e\u003cb\u003eAdmin User:\u003c/b\u003e Can only see the information of the Organization it belongs to\u003c/p\u003e\n        \u003cp\u003e\u003cb\u003eRegular User:\u003c/b\u003e Can only see the information of the Organization it belongs to\u003c/p\u003e\n      operationId: orgSingle\n      x-org-roles:\n        type: String\n        enum: ['']\n        description: No Organization roles needed to access the endpoint\n      x-user-roles:\n        type: String\n        enum: ['']\n        description: No user roles needed to access the endpoint\n      responses:\n        200:\n          description: Returns the organization record.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/org'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorBadInput'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        500:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n  /org/{shortname}:\n    parameters:\n      - $ref: '#/components/parameters/api-entity-header'\n      - $ref: '#/components/parameters/api-secret-header'\n      - $ref: '#/components/parameters/api-user-header'\n      - $ref: '#/components/parameters/shortname-path'\n    put:\n      summary: Update an organization record\n      description: |\n        \u003ch2\u003eAccess Control\u003c/h2\u003e\n        \u003cp\u003eAt least one of the following roles are needed to access the endpoint:\u003c/p\u003e\n        \u003cp\u003e- \u003cb\u003eSECRETARIAT:\u003c/b\u003e The user must belong to an Organization with the “SECRETARIAT” role to access the endpoint\u003c/p\u003e\n        \u003ch2\u003eExpected Behavior\u003c/h2\u003e\n        \u003cp\u003e\u003cb\u003eSecretariat:\u003c/b\u003e Can update the information of any Organization\u003c/p\u003e\n      operationId: orgUpdateSingle\n      x-org-roles:\n        type: String\n        enum: ['SECRETARIAT']\n        description: The user must belong to an Organization with the “SECRETARIAT” role to access the endpoint\n      x-user-roles:\n        type: String\n        enum: ['']\n        description: No user roles needed to access the endpoint\n      parameters:\n        - in: query\n          name: shortname\n          description: Update the short name of the organization.\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: id_quota\n          description: Update the number of CVE IDs the organization is allowed to have in the RESERVED state at one time.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n            maximum: 100000\n        - in: query\n          name: name\n          description: Update the name of the organization.\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: active_roles.add\n          description: Add an active role to the organization.\n          required: false\n          schema:\n            type: string\n            enum: ['CNA','SECRETARIAT','ROOT_CNA','ADP']\n        - in: query\n          name: active_roles.remove\n          description: Remove an active role from the organization.\n          required: false\n          schema:\n            type: string\n            enum: ['CNA','SECRETARIAT','ROOT_CNA','ADP']\n      responses:\n        200:\n          description: Returns the organization record updated.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:      \n                  message:\n                    type: string\n                    description: Success description\n                  updated:\n                    $ref: '#/components/schemas/org'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorBadInput'\n        401:\n          description: Not Authenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        500:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n  /org/{shortname}/users:\n    parameters:\n      - $ref: '#/components/parameters/api-entity-header'\n      - $ref: '#/components/parameters/api-secret-header'\n      - $ref: '#/components/parameters/api-user-header'\n      - $ref: '#/components/parameters/shortname-path'\n    get:\n      summary: Retrieve all user records specified by the short name of the organization\n      description: |\n        \u003ch2\u003eAccess Control\u003c/h2\u003e\n        \u003cp\u003eNo roles needed to access the endpoint\u003c/p\u003e\n        \u003ch2\u003eExpected Behavior\u003c/h2\u003e\n        \u003cp\u003e\u003cb\u003eSecretariat:\u003c/b\u003e Can see the information of all users of any Organization\u003c/p\u003e\n        \u003cp\u003e\u003cb\u003eAdmin User:\u003c/b\u003e Can only see the information of users that belongs to the same Organization\u003c/p\u003e\n        \u003cp\u003e\u003cb\u003eRegular User:\u003c/b\u003e Can only see the information of users that belongs to the same Organization\u003c/p\u003e\n      operationId: userOrgAll\n      x-org-roles:\n        type: String\n        enum: ['']\n        description: No Organization roles needed to access the endpoint\n      x-user-roles:\n        type: String\n        enum: ['']\n        description: No user roles needed to access the endpoint\n      parameters:\n        - $ref: '#/components/parameters/page-query'\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  totalCount:\n                    type: integer\n                    format: int32\n                    description: Total user records found\n                  itemsPerPage:\n                    type: integer\n                    format: int32\n                    description: Number of user records in a page\n                  pageCount:\n                    type: integer\n                    format: int32\n                    description: Total number of pages\n                  currentPage:\n                    type: integer\n                    format: int32\n                    description: Current page\n                  prevPage:\n                    type: integer\n                    format: int32\n                    description: Previous page\n                  nextPage:\n                    type: integer\n                    format: int32\n                    description: Next page\n                  users:\n                    $ref: '#/components/schemas/arrayOfUsersNoSecret'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorBadInput'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        500:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n  /org/{shortname}/user:\n    parameters:\n      - $ref: '#/components/parameters/api-entity-header'\n      - $ref: '#/components/parameters/api-secret-header'\n      - $ref: '#/components/parameters/api-user-header'\n      - $ref: '#/components/parameters/shortname-path'\n    post:\n      summary: Create a user record with the provided short name as the owning organization\n      description: |\n        \u003ch2\u003eAccess Control\u003c/h2\u003e\n        \u003cp\u003eAt least one of the following roles are needed to access the endpoint:\u003c/p\u003e\n        \u003cp\u003e- \u003cb\u003eSECRETARIAT:\u003c/b\u003e The user must belong to an Organization with the “SECRETARIAT” role\u003c/p\u003e\n        \u003cp\u003e- \u003cb\u003eADMIN:\u003c/b\u003e The user must have the “ADMIN” role and must belong to the same Organization as the new user\u003c/p\u003e\n        \u003ch2\u003eExpected Behavior\u003c/h2\u003e\n        \u003cp\u003e\u003cb\u003eSecretariat:\u003c/b\u003e Can create a user record for any Organization\u003c/p\u003e\n        \u003cp\u003e\u003cb\u003eAdmin User:\u003c/b\u003e Can only create a user record for users that belongs to the same Organization\u003c/p\u003e\n      operationId: userCreateSingle\n      x-org-roles:\n        type: String\n        enum: ['SECRETARIAT']\n        description: The user must belong to an Organization with the “SECRETARIAT” role to access the endpoint\n      x-user-roles:\n        type: String\n        enum: ['ADMIN']\n        description: The user must have the “ADMIN” role and must belong to the same Organization as the new user to access the endpoint\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                username:\n                  type: string\n                  description: The user name of the user.\n                org_uuid:\n                  type: string\n                  description: The identifier of the organization the user belongs to.\n                uuid:\n                  type: string\n                  description: The identifier of the user.\n                name:\n                  type: object\n                  properties:\n                    first:\n                      type: string\n                      description: The first name of the user.\n                    last:\n                      type: string\n                      description: The last name of the user.\n                    middle:\n                      type: string\n                      description: The middle name of the user, if any.\n                    suffix:\n                      type: string\n                      description: The suffix of the user, if any.\n                authority:\n                  type: object\n                  properties:\n                    active_roles:\n                      type: array\n                      items:\n                        type: string\n                        description: The active roles of the user.\n                        enum: ['ADMIN']\n              required:\n                - username\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:      \n                  message:\n                    type: string\n                    description: Success description\n                  created:\n                    $ref: '#/components/schemas/user'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorBadInput'\n        401:\n          description: Not Authenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        500:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n  /org/{shortname}/user/{username}:\n    parameters:\n      - $ref: '#/components/parameters/api-entity-header'\n      - $ref: '#/components/parameters/api-secret-header'\n      - $ref: '#/components/parameters/api-user-header'\n      - $ref: '#/components/parameters/shortname-path'\n      - $ref: '#/components/parameters/username-path'\n    get:\n      summary: Retrieve a user record\n      description: |\n        \u003ch2\u003eAccess Control\u003c/h2\u003e\n        \u003cp\u003eNo roles needed to access the endpoint\u003c/p\u003e\n        \u003ch2\u003eExpected Behavior\u003c/h2\u003e\n        \u003cp\u003e\u003cb\u003eSecretariat:\u003c/b\u003e Can see the information of a user of any Organization\u003c/p\u003e\n        \u003cp\u003e\u003cb\u003eAdmin User:\u003c/b\u003e Can only see the information of a user that belongs to the same Organization\u003c/p\u003e\n        \u003cp\u003e\u003cb\u003eRegular User:\u003c/b\u003e Can only see the information of a user that belongs to the same Organization\u003c/p\u003e\n      operationId: userSingle\n      x-org-roles:\n        type: String\n        enum: ['']\n        description: No Organization roles needed to access the endpoint\n      x-user-roles:\n        type: String\n        enum: ['']\n        description: No user roles needed to access the endpoint\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/user-no-secret'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorBadInput'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        500:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n    put:\n      summary: Update a user record\n      operationId: userUpdateSingle\n      description: |\n        \u003ch2\u003eAccess Control\u003c/h2\u003e\n        \u003cp\u003eNo roles needed to access the endpoint\u003c/p\u003e\n        \u003ch2\u003eExpected Behavior\u003c/h2\u003e\n        \u003cp\u003e\u003cb\u003eSecretariat:\u003c/b\u003e Can update a user record for any Organization\u003c/p\u003e\n        \u003cp\u003e\u003cb\u003eAdmin User:\u003c/b\u003e Can only update a user record for users that belongs to the same Organization\u003c/p\u003e\n        \u003cp\u003e\u003cb\u003eRegular User:\u003c/b\u003e Can only update its own user record\u003c/p\u003e\n      x-org-roles:\n        type: String\n        enum: ['']\n        description: The organization can have the 'SECRETARIAT' role but it is not required to access the endpoint.\n      x-user-roles:\n        type: String\n        enum: ['']\n        description: The user can have the 'ADMIN' role but it is not required to access the endpoint.\n      parameters:\n        - in: query\n          name: active\n          description: Update the active state of the user record.\n          required: false\n          schema:\n            type: boolean\n        - in: query\n          name: new_username\n          description: Update the user name of the user record.\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: org_shortname\n          description: Update the organization the user belongs to.\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: name.first\n          description: Update the first name of the user record.\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: name.last\n          description: Update the last name of the user record.\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: name.middle\n          description: Update the middle name of the user record.\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: name.suffix\n          description: Update suffix of the user record.\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: active_roles.add\n          description: Add an active role to the user.\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: active_roles.remove\n          description: Remove an active role from the user.\n          required: false\n          schema:\n            type: string\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:      \n                  message:\n                    type: string\n                    description: Success description\n                  updated:\n                    $ref: '#/components/schemas/user-no-secret'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorBadInput'\n        401:\n          description: Not Authenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        500:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n  /org/{shortname}/user/{username}/reset_secret:\n    parameters:\n      - $ref: '#/components/parameters/api-entity-header'\n      - $ref: '#/components/parameters/api-secret-header'\n      - $ref: '#/components/parameters/api-user-header'\n      - $ref: '#/components/parameters/shortname-path'\n      - $ref: '#/components/parameters/username-path'\n    put:\n      summary: Reset the API key of the user\n      description: |\n        \u003ch2\u003eAccess Control\u003c/h2\u003e\n        \u003cp\u003eNo roles needed to access the endpoint\u003c/p\u003e\n        \u003ch2\u003eExpected Behavior\u003c/h2\u003e\n        \u003cp\u003e\u003cb\u003eSecretariat:\u003c/b\u003e Can reset the API secret of any user\u003c/p\u003e\n        \u003cp\u003e\u003cb\u003eAdmin User:\u003c/b\u003e Can only reset the API secret of users that belong to the same Organization\u003c/p\u003e\n        \u003cp\u003e\u003cb\u003eRegular User:\u003c/b\u003e Can only reset its own API secret\u003c/p\u003e\n      operationId: userResetSecret\n      x-org-roles:\n        type: String\n        enum: ['']\n        description: No Organization roles needed to access the endpoint\n      x-user-roles:\n        type: String\n        enum: ['']\n        description: No user roles needed to access the endpoint\n      responses:\n        200:\n          description: Returns the new API key.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  API-secret:\n                    type: string\n                    description: The new API key of the user.\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorBadInput'\n        401:\n          description: Not Authenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        500:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n  /org/{shortname}/id_quota:\n    parameters:\n      - $ref: '#/components/parameters/api-entity-header'\n      - $ref: '#/components/parameters/api-secret-header'\n      - $ref: '#/components/parameters/api-user-header'\n      - $ref: '#/components/parameters/shortname-path'\n    get:\n      summary: Retrieves the details about the CVE ID quota information of an organization\n      description: |\n        \u003ch2\u003eAccess Control\u003c/h2\u003e\n        \u003cp\u003eNo roles needed to access the endpoint\u003c/p\u003e\n        \u003ch2\u003eExpected Behavior\u003c/h2\u003e\n        \u003cp\u003e\u003cb\u003eSecretariat:\u003c/b\u003e Can see the CVE ID quota information of any Organization\u003c/p\u003e\n        \u003cp\u003e\u003cb\u003eAdmin User:\u003c/b\u003e Can only see the CVE ID quota information of the Organization it belongs to\u003c/p\u003e\n        \u003cp\u003e\u003cb\u003eRegular User:\u003c/b\u003e Can only see the CVE ID quota information of the Organization it belongs to\u003c/p\u003e\n      operationId: orgIdQuota\n      x-org-roles:\n        type: String\n        enum: ['']\n        description: No Organization roles needed to access the endpoint\n      x-user-roles:\n        type: String\n        enum: ['']\n        description: No user roles needed to access the endpoint\n      responses:\n        200:\n          description: Returns CVE ID quota details of an organization.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id_quota:\n                    type: integer\n                    description: The number of CVE IDs the organization is allowed to have in the RESERVED state at one time.\n                  total_reserved:\n                    type: integer\n                    description: The total number of CVE IDs across all years that the organization has in the RESERVED state.\n                  available:\n                    type: integer\n                    format: int32\n                    description: The number of CVE IDs that can be reserved by the organization (e.g., id_quota - total_reserved)\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorBadInput'\n        401:\n          description: Not Authenticated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        500:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n  /users:\n    parameters:\n      - $ref: '#/components/parameters/api-secret-header'\n    get:\n      summary: Retrieve all users\n      description: |\n        \u003ch2\u003eAccess Control\u003c/h2\u003e\n        \u003cp\u003e Only secretariat users can accesss the endpoint\u003c/p\u003e\n        \u003ch2\u003eExpected Behavior\u003c/h2\u003e\n        \u003cp\u003e\u003cb\u003eSecretariat:\u003c/b\u003e Can see the information of all users of any Organization\u003c/p\u003e\n      operationId: userAll\n      x-org-roles:\n        type: String\n        enum: ['']\n        description: No Organization roles needed to access the endpoint\n      x-user-roles:\n        type: String\n        enum: ['']\n        description: Secretariat user role needed to access the endpoint\n      parameters:\n        - $ref: '#/components/parameters/page-query'\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  totalCount:\n                    type: integer\n                    format: int32\n                    description: Total user records found\n                  itemsPerPage:\n                    type: integer\n                    format: int32\n                    description: Number of user records in a page\n                  pageCount:\n                    type: integer\n                    format: int32\n                    description: Total number of pages\n                  currentPage:\n                    type: integer\n                    format: int32\n                    description: Current page\n                  prevPage:\n                    type: integer\n                    format: int32\n                    description: Previous page\n                  nextPage:\n                    type: integer\n                    format: int32\n                    description: Next page\n                  users:\n                    $ref: '#/components/schemas/arrayOfUsersNoSecret'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorBadInput'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n        500:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorGeneric'\n"
		}
	},
	"Error": "parse: paths: /cve: get: cveGetFiltered: responses: 200: content: application/json: schema: parse schema: cveRecords: parse schema: reference \"#/components/schemas/arrayOfCveRecords\": parse schema: item: parse schema: anyOf: [0]: parse schema: reference \"https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema\": resolve reference \"https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema\": invalid schema reference \"https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema\""
}