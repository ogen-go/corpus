{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/fabric8-launcher/launcher-application"
		},
		"file": {
			"name": "openapi.yml",
			"path": "web/src/main/resources/META-INF/openapi.yml",
			"content": "openapi: 3.0.0\nservers:\n  - url: https://forge.api.prod-preview.openshift.io/api\n    description: Staging server (uses live data)\n  - url: https://forge.api.openshift.io/api\n    description: Production server (uses live data)\n  - url: http://localhost:8080/api\n    description: Local development\ninfo:\n  version: \"2.0.0\"\n  title: Launcher Backend API\n  description: \u003e-\n    This document defines the REST endpoints exposed by the launcher-backend\n    component\nsecurity:\n  - application:\n      - read\n      - write\npaths:\n  /booster-catalog:\n    get:\n      summary: Returns the booster catalog information\n      security: []\n      parameters:\n        - name: X-App\n          in: header\n          description: \u003e-\n            The Application where this request originated from (launcher).\n            This is necessary to determine how the Authorization header is\n            handled.\n          schema:\n            type: string\n            enum:\n              - launcher\n            default: launcher\n      description: \u003e-\n        This endpoint returns the entire booster catalog\n      tags:\n        - Booster Catalog\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Catalog'\n        '404':\n          description: Not Found\n  /booster-catalog/reindex:\n    post:\n      summary: Reindexes the booster catalog repository\n      description: This endpoint reindexes the booster catalog data\n      security: []\n      tags:\n        - Booster Catalog\n      responses:\n        '200':\n          description: OK\n        '401':\n          description: Token does not match\n      parameters:\n        - name: token\n          in: query\n          description: The token to be used\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n  /booster-documentation/reload:\n      post:\n        summary: Reload the booster documentation repository\n        description: This endpoint reload the booster documentation data\n        security: []\n        tags:\n          - Booster Documentation\n        responses:\n          '200':\n            description: OK\n          '401':\n            description: Token does not match\n        parameters:\n          - name: token\n            in: query\n            description: The token to be used\n            schema:\n              type: string\n        requestBody:\n          content:\n            application/json:\n              schema:\n                type: object\n  /services/openshift/clusters:\n    get:\n      summary: Returns the clusters that this user has access\n      description: \u003e-\n        This endpoint returns the available clusters that the authenticated user\n        has access\n      tags:\n        - OpenShift\n        - Services\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ClusterVerified'\n  /services/openshift/clusters/all:\n    get:\n      summary: Returns all clusters\n      description: This endpoint returns all the configured clusters\n      security: []\n      tags:\n        - OpenShift\n        - Services\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Cluster'\n  '/services/openshift/projects/{projectName}':\n    head:\n      summary: Validates if the openshift project exists\n      tags:\n        - Services\n        - OpenShift\n        - Validation\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: X-App\n          in: header\n          description: \u003e-\n            The Application where this request originated from (launcher).\n            This is necessary to determine how the Authorization\n            header is handled. If this header is not provided, the backend will\n            attempt to resolve this information from the Host header\n          required: true\n          schema:\n            type: string\n            enum:\n              - launcher\n            default: launcher\n        - name: X-OpenShift-Cluster\n          in: header\n          description: The OpenShift cluster to use\n          required: true\n          schema:\n            type: string\n        - name: X-OpenShift-Authorization\n          in: header\n          description: \u003e-\n            The OpenShift authorization information (in the format Bearer: token), otherwise\n            it will be resolved from the existing environment variables and from the identity\n            provider configured (in this order)\n          schema:\n            type: string\n        - name: projectName\n          in: path\n          required: true\n          description: The repository name\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Project exists\n        '404':\n          description: Project does not exist\n  /services/openshift/user:\n    get:\n      summary: Returns the current authenticated user information\n      tags:\n        - OpenShift\n        - Services\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  name:\n                    type: string\n                    description: The logged user name\n                    example: my-user-name\n\n  /services/git/user:\n    get:\n      summary: Returns the current authenticated user information\n      tags:\n        - Git\n        - Services\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: X-App\n          in: header\n          description: \u003e-\n            The Application where this request originated from (launcher).\n            This is necessary to determine how the Authorization header is\n            handled. If this header is not provided, the backend will attempt to\n            resolve this information from the Host header\n          required: true\n          schema:\n            type: string\n            enum:\n              - launcher\n            default: launcher\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  login:\n                    type: string\n                    description: The logged user\n                    example: my-awesome-git-account\n                  avatar_url:\n                    type: string\n                    description: The avatar URL for this Git user\n                    example: 'https://avatars1.githubusercontent.com/u/54133?v=4'\n                  organizations:\n                    type: array\n                    description: The organizations for the current user and given Git provider\n                    items:\n                      type: string\n                  repositories:\n                    type: array\n                    description: The repositories for the current user and given Git provider\n                    items:\n                      type: string\n  /services/git/providers:\n    get:\n      summary: Returns the supported Git providers\n      tags:\n        - Git\n        - Services\n      security: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                minItems: 1\n                items:\n                  $ref: '#/components/schemas/GitServiceConfig'\n  /services/git/organizations:\n    get:\n      summary: Returns the organizations for the current user and given Git provider\n      tags:\n        - Git\n        - Services\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: X-App\n          in: header\n          description: \u003e-\n            The Application where this request originated from (launcher).\n            This is necessary to determine how the Authorization\n            header is handled. If this header is not provided, the backend will\n            attempt to resolve this information from the Host header\n          required: true\n          schema:\n            type: string\n            enum:\n              - launcher\n            default: launcher\n        - name: X-Git-Provider\n          in: header\n          description: 'The Git provider to use. (GitHub, GitLab)'\n          schema:\n            type: string\n            default: GitHub\n        - name: X-Git-Authorization\n          in: header\n          description: \u003e-\n            The Git authorization information (in the format Bearer: token), otherwise\n            it will be resolved from the existing environment variables and from the identity\n            provider configured (in this order)\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ValidationError'\n  /services/git/repositories:\n    get:\n      summary: Returns the repositories for the current organization\n      tags:\n        - Git\n        - Services\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: X-App\n          in: header\n          description: \u003e-\n            The Application where this request originated from (launcher).\n            This is necessary to determine how the Authorization header is\n            handled. If this header is not provided, the backend will attempt to\n            resolve this information from the Host header\n          required: true\n          schema:\n            type: string\n            enum:\n              - launcher\n            default: launcher\n        - name: X-Git-Provider\n          in: header\n          description: 'The Git provider to use. (GitHub, GitLab)'\n          schema:\n            type: string\n            default: GitHub\n        - name: X-Git-Authorization\n          in: header\n          description: \u003e-\n            The Git authorization information (in the format Bearer: token), otherwise\n            it will be resolved from the existing environment variables and from the identity\n            provider configured (in this order)\n          schema:\n            type: string\n        - name: organization\n          in: query\n          description: \u003e-\n            The Git organization. If not specified it will use the  return the\n            repositories from the current user\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n  '/services/git/repositories/{repositoryName}':\n    head:\n      summary: Validates if the git repository exists\n      tags:\n        - Services\n        - Git\n        - Validation\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: X-App\n          in: header\n          description: \u003e-\n            The Application where this request originated from (launcher).\n            This is necessary to determine how the Authorization\n            header is handled. If this header is not provided, the backend will\n            attempt to resolve this information from the Host header\n          required: true\n          schema:\n            type: string\n            enum:\n              - launcher\n            default: launcher\n        - name: X-Git-Provider\n          in: header\n          description: 'The Git provider to use. (GitHub, GitLab). Default is GitHub'\n          schema:\n            type: string\n            default: GitHub\n        - name: X-Git-Authorization\n          in: header\n          description: \u003e-\n            The Git authorization information (in the format Bearer: token), otherwise\n            it will be resolved from the existing environment variables and from the identity\n            provider configured (in this order)\n          schema:\n            type: string\n        - name: repositoryName\n          in: path\n          required: true\n          description: The repository name\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Repository exists\n        '404':\n          description: Repository does not exist\n  /launcher/zip:\n    get:\n      summary: Downloads Booster as a zip\n      tags:\n        - Launcher\n      security: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/zip: {}\n        '400':\n          description: Validation Failed\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ValidationError'\n      parameters:\n        - name: mission\n          description: The mission ID to be used\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: runtime\n          description: The runtime ID to be used\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: runtimeVersion\n          description: The runtime version to be used\n          in: query\n          schema:\n            type: string\n        - name: projectName\n          description: The ZIP file name\n          in: query\n          schema:\n            type: string\n        - name: groupId\n          description: The Maven group ID to be used (for Maven projects only)\n          in: query\n          schema:\n            type: string\n        - name: artifactId\n          description: The Maven artifact ID to be used (for Maven projects only)\n          in: query\n          schema:\n            type: string\n        - name: projectVersion\n          description: The project version to use\n          in: query\n          schema:\n            type: string\n            default: 1.0.0\n        - name: ide\n          description: Generate descriptor for which IDEs (vscode)\n          in: query\n          schema:\n            type: array\n            items:\n              type: string\n  /launcher/launch:\n    post:\n      tags:\n        - Launcher\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: X-App\n          in: header\n          description: \u003e-\n            The Application where this request originated from (launcher).\n            This is necessary to determine how the Authorization\n            header is handled. If this header is not provided, the backend will\n            attempt to resolve this information from the Host header\n          required: true\n          schema:\n            type: string\n            enum:\n              - launcher\n            default: launcher\n        - name: X-Git-Provider\n          in: header\n          description: 'The Git provider to use. (GitHub, GitLab). Default is GitHub'\n          schema:\n            type: string\n            default: GitHub\n        - name: X-Git-Authorization\n          in: header\n          description: \u003e-\n            The Git authorization information (in the format Bearer: token), otherwise\n            it will be resolved from the existing environment variables and from the identity\n            provider configured (in this order)\n          schema:\n            type: string\n        - name: X-OpenShift-Cluster\n          in: header\n          description: The OpenShift cluster to use\n          schema:\n            type: string\n        - name: X-OpenShift-Authorization\n          in: header\n          description: \u003e-\n            The OpenShift authorization information (in the format Bearer: token), otherwise\n            it will be resolved from the existing environment variables and from the identity\n            provider configured (in this order)\n          schema:\n            type: string\n        - name: X-Execution-Step-Index\n          in: header\n          description: \u003e-\n            The step index where the execution flow has stopped. Necessary when\n            requests must be retried\n          required: true\n          schema:\n            type: string\n            default: 0\n      summary: Launches the chosen booster\n      description: \u003e-\n        Launches the selected booster (creates the github project, openshift\n        project and registers webhooks)\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Boom'\n        '400':\n          description: Validation Failed\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ValidationError'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/LaunchRequest'\n  /launcher/upload:\n    post:\n      tags:\n      - Launcher\n      security:\n      - bearerAuth: []\n      parameters:\n      - name: X-App\n        in: header\n        description: \u003e-\n          The Application where this request originated from (launcher).\n          This is necessary to determine how the Authorization\n          header is handled. If this header is not provided, the backend will\n          attempt to resolve this information from the Host header\n        required: true\n        schema:\n          type: string\n          enum:\n          - launcher\n          default: launcher\n      - name: X-Git-Provider\n        in: header\n        description: 'The Git provider to use. (GitHub, GitLab). Default is GitHub'\n        schema:\n          type: string\n          default: GitHub\n      - name: X-Git-Authorization\n        in: header\n        description: \u003e-\n          The Git authorization information (in the format Bearer: token), otherwise\n          it will be resolved from the existing environment variables and from the identity\n          provider configured (in this order)\n        schema:\n          type: string\n      - name: X-OpenShift-Cluster\n        in: header\n        description: The OpenShift cluster to use\n        schema:\n          type: string\n      - name: X-OpenShift-Authorization\n        in: header\n        description: \u003e-\n          The OpenShift authorization information (in the format Bearer: token), otherwise\n          it will be resolved from the existing environment variables and from the identity\n          provider configured (in this order)\n        schema:\n          type: string\n      - name: X-Execution-Step-Index\n        in: header\n        description: \u003e-\n          The step index where the execution flow has stopped. Necessary when\n          requests must be retried\n        required: true\n        schema:\n          type: string\n          default: 0\n      summary: Launches the chosen booster\n      description: \u003e-\n        Launches the selected booster (creates the github project, openshift\n        project and registers webhooks)\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Boom'\n        '400':\n          description: Validation Failed\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ValidationError'\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/UploadRequest'\n  /creator/enums:\n    get:\n      summary: Returns all available enumeration definitions\n      security: []\n      description: \u003e-\n        This endpoint returns all known enumerations\n      tags:\n        - Creator catalog\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Enumerations'\n  /creator/enums/{id}:\n    get:\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      summary: Returns the selected enumeration definition\n      security: []\n      description: \u003e-\n        This endpoint returns a given enumeration\n      tags:\n        - Creator catalog\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Enumeration'\n  /creator/capabilities:\n    get:\n      summary: Returns the available Capabilities\n      security: []\n      description: \u003e-\n        This endpoint returns all known Capabilities\n      tags:\n        - Creator catalog\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Capabilities'\n  /creator/generators:\n    get:\n      summary: Returns the available Generators\n      security: []\n      description: \u003e-\n        This endpoint returns all known Generators\n      tags:\n        - Creator catalog\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Generators'\n  /creator/zip:\n    post:\n      summary: Create ZIP containing a generated project and returns and id to download it\n      security: []\n      description: \u003e-\n        This endpoint returns and id to download the ZIP containing code that was\n        generated using the specified Capabilities\n      tags:\n        - Creator project\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreatorZipRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    description: The id to download the zip\n                    type: string\n        '400':\n          description: Bad Request\n  /creator/download:\n    get:\n      summary: Returns a ZIP containing a generated project for the specified id\n      security: []\n      description: \u003e-\n        This endpoint returns a ZIP containing a generated project for the specified id\n      tags:\n        - Creator project\n      parameters:\n        - name: id\n          in: query\n          required: true\n          schema:\n            type: string\n          description: The id returned by the zip method\n      responses:\n        '200':\n          description: OK\n          content:\n            application/zip: {}\n        '404':\n          description: Not Found\n  /creator/launch:\n    post:\n      summary: Pushes a generated project to GitHub and OpenShift\n      security:\n        - bearerAuth: []\n      description: \u003e-\n        This endpoint pushes code that was generated using the specified\n        Capabilities to a user's GitHub and OpenShift accounts\n      tags:\n        - Creator project\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreatorLaunchRequest'\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n        '401':\n          description: Unauthorized\n  /creator/import/branches:\n    get:\n      summary: Lists all available branches and tags for the given Git repository\n      description: \u003e-\n        Takes a Git repositor URL and returns the names of all the branches and tags\n      tags:\n        - Creator import\n      parameters:\n        - name: gitImportUrl\n          in: query\n          required: true\n          schema:\n            type: string\n          description: The URL to the Git repository\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n  /creator/import/analyze:\n    get:\n      summary: Analyzes the given Git repository and returns what S2I builder image to use\n      description: \u003e-\n        Takes a Git repositor URL and looks at the code inside it to determine what OpenShift\n        S2I builder could be used to compile and run it\n      tags:\n        - Creator import\n      parameters:\n        - name: gitImportUrl\n          in: query\n          required: true\n          schema:\n            type: string\n          description: The URL to the Git repository to analyze\n        - name: gitImportBranch\n          in: query\n          schema:\n            type: string\n          description: The branch of the Git repository to analyze (defaults to \"master\")\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnalysisResult'\n  /creator/import/launch:\n    post:\n      tags:\n        - Creator import\n      summary: Deploys an existing codebase on OpenShift\n      security:\n        - bearerAuth: []\n      description: Deploys an existing codebase on OpenShift\n      parameters:\n        - name: applicationName\n          in: query\n          description: The name of the application to be created\n          required: true\n          schema:\n            type: string\n        - name: projectName\n          in: query\n          description: The OpenShift project name to be used\n          required: true\n          schema:\n            type: string\n        - name: gitImportUrl\n          in: query\n          description: A URL to the git repository to import\n          required: true\n          schema:\n            type: string\n        - name: gitImportBranch\n          in: query\n          schema:\n            type: string\n          description: The branch of the Git repository to analyze (defaults to \"master\")\n        - name: gitOrganization\n          in: query\n          description: The Git Organization to push the code\n          required: true\n          schema:\n            type: string\n        - name: gitRepository\n          in: query\n          description: The Git Repository to push the code\n          schema:\n            type: string\n        - name: builderImage\n          in: query\n          description: The name of the image to use for building and running the code\n          schema:\n            type: string\n        - name: builderLanguage\n          in: query\n          description: The language to use for building and running the code\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n\ncomponents:\n  schemas:\n    Catalog:\n      type: object\n      properties:\n        boosters:\n          type: array\n          description: All the catalog's boosters\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n              ignore:\n                type: boolean\n              name:\n                type: string\n              description:\n                type: string\n              source:\n                type: object\n                properties:\n                  git:\n                    type: object\n                    properties:\n                        url:\n                           type: string\n                        ref:\n                           type: string\n              metadata:\n                type: object\n                properties:\n                  app:\n                    type: object\n                    properties:\n                      launcher:\n                        type: object\n                        properties:\n                          enabled:\n                            type: boolean\n                          runsOn:\n                            type: array\n                            description: the environments this booster runs on\n                            items:\n                              type: string\n              mission:\n                type: string\n              runtime:\n                type: string\n              version:\n                type: string\n        runtimes:\n          type: array\n          description: All the catalog's runtimes\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n              title:\n                type: string\n              description:\n                type: string\n              metadata:\n                type: object\n                properties:\n                  suggested:\n                    type: boolean\n                  prerequisite:\n                    type: string\n                  pipelinePlatform:\n                    type: string\n                    description: Name of the Pipeline platform that this Runtime supports\n                    example: maven\n              icon:\n                type: string\n                description: URL of logo of runtime\n              versions:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                    name:\n                      type: string\n                    metadata:\n                      type: object\n                      properties:\n                        suggested:\n                          type: boolean\n        missions:\n          type: array\n          description: All the catalog's missions\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n              name:\n                type: string\n              description:\n                type: string\n              metadata:\n                type: object\n                properties:\n                  suggested:\n                    type: boolean\n                  prerequisite:\n                    type: string\n                  level:\n                    type: string\n                    description: the proficiency level required to run this mission\n                    enum:\n                      - foundational\n                      - advanced\n                      - expert\n\n    Cluster:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The cluster ID\n        name:\n          type: string\n          description: 'The display name for this cluster'\n        type:\n          type: string\n          description: 'The cluster type (can be starter, pro)'\n\n    ClusterVerified:\n      type: object\n      properties:\n        connected:\n          type: boolean\n          description: Is the cluster connected to the user account?\n        cluster:\n          $ref: '#/components/schemas/Cluster'\n\n    Pipeline:\n      type: object\n      properties:\n        id:\n          type: string\n          example: release\n        name:\n          type: string\n          example: Release\n        description:\n          type: string\n          example: This pipeline releases things\n        platform:\n          type: string\n          description: The runtime platform on which the pipeline is meant to operate\n          example: maven\n        suggested:\n          type: boolean\n        techPreview:\n          type: boolean\n        stages:\n          type: array\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n              description:\n                type: string\n\n    Boom:\n      type: object\n      properties:\n        uuid:\n          type: string\n          example: 2d4700c6-0224-11e8-ba89-0ed5f89f718b\n        uuid_link:\n          type: string\n          example: /status/2d4700c6-0224-11e8-ba89-0ed5f89f718b\n        events:\n          type: array\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n              message:\n                type: string\n\n    ValidationError:\n      type: object\n      properties:\n        message:\n          type: string\n          example: Project Name is required\n        source:\n          type: string\n          example: projectName\n\n    GitServiceConfig:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The Git provider ID\n        name:\n          type: string\n          description: 'The display name for this Git provider'\n        type:\n          type: string\n          description: 'The Git provider type (can be GITHUB, BITBUCKET, GITLAB or GITEA)'\n        apiUrl:\n          type: string\n          description: 'The API URL for this Git provider'\n        repositoryUrl:\n          type: string\n          description: 'The repository URL for this Git provider'\n        clientProperties:\n          type: object\n          description: 'Client properties useful to communicate with this Git provider'\n\n    Enumeration:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        icon:\n          type: string\n        metadata:\n          type: object\n\n    Enumerations:\n      type: array\n      items:\n        $ref: '#/components/schemas/Enumeration'\n\n    CatalogItem:\n      type: object\n      properties:\n        type:\n          type: string\n        module:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        metadata:\n          type: object\n        props:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n              name:\n                type: string\n              description:\n                type: string\n              type:\n                type: string\n              required:\n                type: boolean\n\n    Capabilities:\n      type: array\n      items:\n        $ref: '#/components/schemas/CatalogItem'\n\n    Generators:\n      type: array\n      items:\n        $ref: '#/components/schemas/CatalogItem'\n\n    LaunchRequest:\n      type: object\n      properties:\n        mission:\n          description: The mission ID to be used\n          type: string\n        runtime:\n          description: The runtime ID to be used\n          type: string\n        runtimeVersion:\n          description: The runtime version to be used\n          type: string\n        projectName:\n          description: The OpenShift project name to be used\n          type: string\n        projectVersion:\n          description: The project version\n          type: string\n          default: 1.0.0\n        groupId:\n          description: The Maven group ID to be used (for Maven projects only)\n          type: string\n        artifactId:\n          description: The Maven artifact ID to be used (for Maven projects only)\n          type: string\n        gitOrganization:\n          description: The Git Organization to push the code\n          type: string\n        gitRepository:\n          description: The Git Repository to push the code\n          type: string\n        ide:\n          description: Generate descriptor for which IDEs (vscode)\n          type: array\n          items:\n            type: string\n      required:\n        - mission\n        - runtime\n\n    UploadRequest:\n      type: object\n      properties:\n        file:\n          description: The ZIP file containing the project to be pushed\n          type: string\n          format: base64\n        projectName:\n          description: The OpenShift project name to be used\n          type: string\n        gitOrganization:\n          description: The Git Organization to push the code\n          type: string\n        gitRepository:\n          description: The Git Repository to push the code\n          type: string\n      required:\n        - projectName\n\n    CreatorZipRequest:\n      type: object\n      properties:\n        project:\n          $ref: '#/components/schemas/Application'\n      required:\n        - project\n\n    CreatorLaunchRequest:\n      type: object\n      properties:\n        project:\n          $ref: '#/components/schemas/Application'\n        clusterId:\n          description: The OpenShift cluster to use\n          type: string\n        projectName:\n          description: The OpenShift project name to be used\n          type: string\n        gitOrganization:\n          description: The Git Organization to push the code\n          type: string\n        gitRepository:\n          description: The Git Repository to push the code\n          type: string\n      required:\n        - project\n        - projectName\n        - gitOrganization\n        - gitRepository\n\n    Application:\n      type: object\n      properties:\n        application:\n          description: The application name to use for the project\n          type: string\n        parts:\n          description: The application parts to use for the project\n          type: array\n          items:\n            type: object\n            properties:\n              subFolderName:\n                description: The (optional) name of the subfolder to use for the capabilities\n                type: string\n              shared:\n                description: The shared properties that get applied to each selected Capability\n                type: object\n                properties:\n                  runtime:\n                    description: The runtime to use for the project\n                    type: object\n                    properties:\n                      name:\n                        description: The name of the runtime\n                        type: string\n                      version:\n                        description: The version of the runtime\n                        type: string\n                    required:\n                      - name\n              capabilities:\n                description: The capabilities to add to the project\n                type: array\n                items:\n                  type: object\n                  properties:\n                    module:\n                      description: The id of the selected Capability\n                      type: string\n                    props:\n                      description: The properties for the selected Capability\n                      type: object\n                  required:\n                    - module\n            required:\n              - capabilities\n      required:\n        - application\n        - parts\n\n    AnalysisResult:\n      type: object\n      properties:\n        folders:\n          description: An object containing the entire folder structure of the analyzed repository\n          type: object\n        image:\n          description: The id of the detected builderImage to use (deprecated)\n          type: string\n        importables:\n          type: array\n          items:\n            type: object\n            properties:\n              folder:\n                description: The path of the folder that contains a detected codebase\n                type: string\n              image:\n                description: The id of the builderImage to use for the detected codebase\n                type: string\n        builderImages:\n          type: array\n          items:\n            $ref: '#/components/schemas/Enumeration'\n\n  securitySchemes:\n    bearerAuth:            # arbitrary name for the security scheme\n      type: http\n      scheme: bearer\n      bearerFormat: JWT    # optional, arbitrary value for documentation purposes\n\n"
		}
	},
	"Error": "parse: paths: /launcher/launch: post: : parameters: parse parameter \"X-Execution-Step-Index\": schema: parse default: expected type \"string\", got \"number\""
}