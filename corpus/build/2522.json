{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/DGEXSolutions/osrd"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "api/openapi.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  title: OSRD\n  description: OSRD middleware api documentation\n  version: 2.0.0\ntags:\n  - name: infra\n    description: Infra\n  - name: rolling_stock\n    description: Rolling Stock\n  - name: timetable\n    description: Timetable\n  - name: train_schedule\n    description: Train Schedule\n  - name: pathfinding\n    description: Pathfinding\n\npaths:\n  /infra/:\n    get:\n      tags:\n        - infra\n      summary: List all available infra\n      responses:\n        200:\n          description: The infra list\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n                  next: {}\n                  previous: {}\n                  results:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Infra\"\n    post:\n      tags:\n        - infra\n      summary: Create an infra\n      requestBody:\n        description: Name of the infra to create\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n      responses:\n        201:\n          description: The infra list\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Infra\"\n  /infra/{id}/:\n    get:\n      tags:\n        - infra\n      summary: Retrieve an infra\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          description: Infra ID\n          required: true\n      responses:\n        200:\n          description: The infra information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Infra\"\n    delete:\n      tags:\n        - infra\n      summary: Delete an infra, his namespace and all entities linked to it\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          description: Timetable ID\n          required: true\n      responses:\n        204:\n          description: No content\n  /infra/railjson/:\n    post:\n      tags:\n        - infra\n      summary: Import an infra from railjson\n      requestBody:\n        description: Railjson infra\n        content:\n          application/json:\n            schema:\n              type: object\n              example:\n                version: 2.0.0\n                operational_points: []\n                routes: []\n                switch_types: []\n                switches: []\n                track_section_links: []\n                track_sections: []\n                signals: []\n                buffer_stops: []\n                detectors: []\n                tvd_sections: []\n                script_functions: []\n                aspects: []\n        required: true\n      responses:\n        201:\n          description: The imported infra id\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id: { type: string }\n  /infra/{id}/railjson/:\n    get:\n      tags:\n        - infra\n      summary: Serialize an infra to railjson\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          description: Infra ID\n          required: true\n        - in: query\n          name: include_geom\n          schema:\n            type: boolean\n            default: false\n          description: Whether the railjson should contain geometry information\n      responses:\n        200:\n          description: The infra in railjson format\n          content:\n            application/json:\n              schema:\n                type: object\n                description: Follows railjson format\n                example:\n                  version: 2.0.0\n                  operational_points: []\n                  routes: []\n                  switch_types: []\n                  switches: []\n                  track_section_links: []\n                  track_sections: []\n                  signals: []\n                  buffer_stops: []\n                  detectors: []\n                  tvd_sections: []\n                  script_functions: []\n                  aspects: []\n  /pathfinding/:\n    post:\n      tags:\n        - pathfinding\n      summary: Create a Path\n      requestBody:\n        description: Steps of the path\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PathQuery\"\n      responses:\n        201:\n          description: The path\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Path\"\n  /pathfinding/{id}/:\n    get:\n      tags:\n        - pathfinding\n      summary: Retrieve a Path\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          description: Path ID\n          required: true\n      responses:\n        200:\n          description: The path\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Path\"\n    put:\n      tags:\n        - pathfinding\n      summary: Update a path\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          description: Path ID\n          required: true\n      requestBody:\n        description: Steps of the path\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PathQuery\"\n      responses:\n        200:\n          description: The path\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Path\"\n    delete:\n      tags:\n        - pathfinding\n      summary: Delete a path\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          description: Path ID\n          required: true\n      responses:\n        204:\n          description: No content\n  /rolling_stock/:\n    get:\n      tags:\n        - rolling_stock\n      summary: List all available rolling stock\n      responses:\n        200:\n          description: The rolling stock list\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n                  next: {}\n                  previous: {}\n                  results:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/RollingStock\"\n  /rolling_stock/{id}/:\n    get:\n      tags:\n        - rolling_stock\n      summary: Retrieve a rolling stock\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          description: Rolling Stock ID\n          required: true\n      responses:\n        200:\n          description: The rolling stock information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RollingStock\"\n  /light_rolling_stock/:\n    get:\n      tags:\n        - rolling_stock\n      summary: List all available rolling stock with a lighter response\n      responses:\n        200:\n          description: The rolling stock list\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n                  next: {}\n                  previous: {}\n                  results:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/LightRollingStock\"\n  /light_rolling_stock/{id}/:\n    get:\n      tags:\n        - rolling_stock\n      summary: Retrieve a rolling stock's light representation\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          description: Rolling Stock ID\n          required: true\n      responses:\n        200:\n          description: The rolling stock without effort curves nor rolling resistance\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LightRollingStock\"\n  /timetable/:\n    get:\n      tags:\n        - timetable\n      summary: List all timetable\n      parameters:\n        - in: query\n          name: infra\n          schema:\n            type: integer\n          description: Filter timetable by infra\n      responses:\n        200:\n          description: The timetable list\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n                  next: {}\n                  previous: {}\n                  results:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        id:\n                          type: number\n                        name:\n                          type: string\n                        infra:\n                          type: number\n    post:\n      tags:\n        - timetable\n      summary: Create a timetable\n      requestBody:\n        description: Infrastructure id and waypoints\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                infra:\n                  type: number\n                name:\n                  type: string\n        required: true\n      responses:\n        201:\n          description: The timetable created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: number\n                  name:\n                    type: string\n                  infra:\n                    type: number\n  /timetable/{id}/:\n    get:\n      tags:\n        - timetable\n      summary: Retrieve a timetable and its train schedules\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          description: Timetable ID\n          required: true\n      responses:\n        200:\n          description: The timetable content\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: number\n                  name:\n                    type: string\n                  infra:\n                    type: number\n                  train_schedule:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        id:\n                          type: number\n                        train_name:\n                          type: string\n                        departure_time:\n                          type: number\n                        train_path:\n                          type: number\n    delete:\n      tags:\n        - timetable\n      summary: Delete a timetable and its train schedules\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          description: Timetable ID\n          required: true\n      responses:\n        204:\n          description: No content\n    put:\n      tags:\n        - timetable\n      summary: Update a timetable\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          description: Timetable ID\n          required: true\n      requestBody:\n        description: Infrastructure id and waypoints\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                infra:\n                  type: number\n                name:\n                  type: string\n        required: true\n      responses:\n        200:\n          description: The timetable updated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: number\n                  name:\n                    type: string\n                  infra:\n                    type: number\n  /train_schedule/standalone_simulation/:\n    post:\n      tags:\n        - train_schedule\n      summary: Create a batch of train schedule\n      requestBody:\n        description: Standalone simulation parameters\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StandaloneSimulationParameters\"\n        required: true\n      responses:\n        201:\n          description: The id of the train_schedule created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  ids:\n                    type: array\n                    minItems: 1\n                    items:\n                      type: number\n                      format: integer\n  /train_schedule/{id}/:\n    get:\n      tags:\n        - train_schedule\n      summary: Retrieve a train schedule\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          description: Train schedule ID\n          required: true\n      responses:\n        200:\n          description: The train schedule info\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TrainSchedule\"\n    delete:\n      tags:\n        - train_schedule\n      summary: Delete a train schedule and its result\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          description: Train schedule ID\n          required: true\n      responses:\n        204:\n          description: No content\n    patch:\n      tags:\n        - train_schedule\n      summary: Update a train_schedule\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          description: Train schedule ID\n          required: true\n      requestBody:\n        description: Train schedule fields\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WritableTrainSchedule\"\n        required: true\n      responses:\n        200:\n          description: The train schedule info\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TrainSchedule\"\n  /train_schedule/{id}/result/:\n    get:\n      tags:\n        - train_schedule\n      summary: Compute and format the simulation result\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          description: Train schedule ID\n          required: true\n        - in: query\n          name: path\n          schema:\n            type: integer\n          description: Path id used to project the train path\n      responses:\n        200:\n          description: The train schedule result\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TrainScheduleResult\"\n  /train_schedule/results/:\n    get:\n      tags:\n        - train_schedule\n      summary: Compute and format the simulation result of multiple train schedule\n      parameters:\n        - in: query\n          name: path\n          schema:\n            type: integer\n          description: Path id used to project the train path\n        - in: query\n          name: train_ids\n          schema:\n            type: array\n            uniqueItems: true\n            minItems: 1\n            items:\n              type: integer\n          description: List of train schedule ids\n          required: true\n      responses:\n        200:\n          description: The train schedules results\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/TrainScheduleResult\"\n  /schema/:\n    get:\n      summary: List all models and their content\n      responses:\n        200:\n          description: The description\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  entities:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        entity_name:\n                          type: string\n                        components:\n                          type: array\n                          items:\n                            type: string\n                  components:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        component_name:\n                          type: string\n                        fields:\n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              name:\n                                type: string\n                              type:\n                                type: string\ncomponents:\n  schemas:\n    Infra:\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        owner:\n          type: string\n          format: uuid\n        created:\n          type: string\n          format: date-time\n        modified:\n          type: string\n          format: date-time\n    CreateEntity:\n      properties:\n        operation:\n          type: string\n          enum: [create_entity]\n        entity_type:\n          type: string\n        components:\n          type: array\n          items:\n            type: object\n            description: List of the component field\n    DeleteEntity:\n      properties:\n        operation:\n          type: string\n          enum: [delete_entity]\n        entity_id:\n          type: integer\n    AddComponent:\n      properties:\n        operation:\n          type: string\n          enum: [add_component]\n        entity_id:\n          type: integer\n        component_type:\n          type: string\n        component:\n          type: object\n          description: List of the component field\n    UpdateComponent:\n      properties:\n        operation:\n          type: string\n          enum: [update_component]\n        component_type:\n          type: string\n        update:\n          type: object\n          description: List of the component field\n    DeleteComponent:\n      properties:\n        operation:\n          type: string\n          enum: [delete_component]\n        component_id:\n          type: integer\n        component_type:\n          type: string\n    TrainScheduleResultData:\n      properties:\n        speeds:\n          type: array\n          minItems: 1\n          items:\n            type: object\n            properties:\n              time: { type: number, format: float }\n              position: { type: number, format: float }\n              speed: { type: number, format: float }\n        head_positions:\n          type: array\n          minItems: 1\n          items:\n            type: array\n            minItems: 1\n            items:\n              type: object\n              properties:\n                time: { type: number, format: float }\n                position: { type: number, format: float }\n        tail_positions:\n          type: array\n          minItems: 1\n          items:\n            type: array\n            minItems: 1\n            items:\n              type: object\n              properties:\n                time: { type: number, format: float }\n                position: { type: number, format: float }\n        route_begin_occupancy:\n          type: array\n          minItems: 1\n          items:\n            type: array\n            minItems: 1\n            items:\n              type: object\n              properties:\n                time: { type: number, format: float }\n                position: { type: number, format: float }\n        route_end_occupancy:\n          type: array\n          minItems: 1\n          items:\n            type: array\n            minItems: 1\n            items:\n              type: object\n              properties:\n                time: { type: number, format: float }\n                position: { type: number, format: float }\n        stops:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: number\n                description: Can be null if it's not an operational point\n              name:\n                type: string\n                description: Can be 'Unknown' if it's not an operational point\n              time: { type: number, format: float }\n              position: { type: number, format: float }\n              duration: { type: number, format: float }\n        signals:\n          type: array\n          items:\n            type: object\n            properties:\n              signal_id: { type: integer }\n              aspects:\n                type: array\n                items:\n                  type: string\n              geo_position:\n                type: array\n                items: { type: number, format: float }\n                minItems: 2\n                maxItems: 2\n              schema_position:\n                type: array\n                items: { type: number, format: float }\n                minItems: 2\n                maxItems: 2\n    TrainScheduleResult:\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        labels:\n          type: array\n          items:\n            type: string\n        path:\n          type: integer\n          description: id of the path used for projection\n        vmax:\n          type: array\n          minItems: 2\n          items:\n            type: object\n            properties:\n              position: { type: number }\n              speed: { type: number }\n        slopes:\n          type: array\n          minItems: 2\n          items:\n            type: object\n            properties:\n              position: { type: number }\n              gradient: { type: number }\n        curves:\n          type: array\n          minItems: 2\n          items:\n            type: object\n            properties:\n              position: { type: number }\n              radius: { type: number }\n        base:\n          $ref: \"#/components/schemas/TrainScheduleResultData\"\n        eco:\n          oneOf:\n            - $ref: \"#/components/schemas/TrainScheduleResultData\"\n            - type: object\n              properties:\n                error: { type: string }\n    PathQuery:\n      properties:\n        infra:\n          type: integer\n        steps:\n          type: array\n          minItems: 2\n          items:\n            type: object\n            properties:\n              duration:\n                type: number\n                format: float\n              waypoints:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    track_section:\n                      type: integer\n                    geo_coordinate:\n                      type: array\n                      items: { type: number, format: float }\n                      minItems: 2\n                      maxItems: 2\n    Path:\n      properties:\n        id:\n          type: integer\n        owner:\n          type: string\n          format: uuid\n        created:\n          type: string\n          format: date-time\n        geographic:\n          type: object\n          description: GeoJson format\n        schematic:\n          type: object\n          description: GeoJson format\n        steps:\n          type: array\n          items:\n            type: object\n            properties:\n              name: { type: string }\n              suggestion: { type: boolean }\n              duration: { type: number, format: float }\n              track:\n                type: object\n                properties:\n                  id: { type: string }\n                  type: { enum: [\"TrackSection\"] }\n              position: { type: number, format: float }\n              sch:\n                type: array\n                items: { type: number, format: float }\n                minItems: 2\n                maxItems: 2\n              geo:\n                type: array\n                items: { type: number, format: float }\n                minItems: 2\n                maxItems: 2\n    RollingStock:\n      properties:\n        id:\n          type: number\n        name:\n          type: string\n        owner:\n          type: string\n        length:\n          type: number\n        mass:\n          type: number\n        inertia_coefficient:\n          type: number\n        rolling_resistance:\n          type: object\n          properties:\n            A:\n              type: number\n            B:\n              type: number\n            C:\n              type: number\n            type:\n              type: string\n        capabilities:\n          type: array\n          items:\n            type: string\n        max_speed:\n          type: number\n        startup_time:\n          type: number\n        startup_acceleration:\n          type: number\n        comfort_acceleration:\n          type: number\n        timetable_gamma:\n          type: number\n        tractive_effort_curves:\n          type: object\n          properties:\n            SC:\n              type: array\n              items:\n                type: object\n                properties:\n                  speed: {}\n                  max_effort: {}\n        traction_mode:\n          type: string\n        power_class:\n          type: number\n        image: {}\n    LightRollingStock:\n      properties:\n        id:\n          type: number\n        name:\n          type: string\n        owner:\n          type: string\n        length:\n          type: number\n        mass:\n          type: number\n        inertia_coefficient:\n          type: number\n        capabilities:\n          type: array\n          items:\n            type: string\n        max_speed:\n          type: number\n        startup_time:\n          type: number\n        startup_acceleration:\n          type: number\n        comfort_acceleration:\n          type: number\n        timetable_gamma:\n          type: number\n        traction_mode:\n          type: string\n        power_class:\n          type: number\n        image: {}\n    TrainSchedule:\n      allOf:\n        - type: object\n          properties:\n            id:\n              type: integer\n        - $ref: \"#components/schemas/WritableTrainSchedule\"\n    StandaloneSimulationParameters:\n      properties:\n        timetable:\n          type: integer\n        path:\n          type: integer\n        schedules:\n          type: array\n          minItems: 1\n          items:\n            type: object\n            properties:\n              train_name:\n                type: string\n              rolling_stock:\n                type: integer\n              departure_time:\n                type: number\n                format: float\n              initial_speed:\n                type: number\n                format: float\n              labels:\n                type: array\n                items:\n                  type: string\n              allowances:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Allowance\"\n    WritableTrainSchedule:\n      properties:\n        train_name:\n          type: string\n        timetable:\n          type: integer\n        rolling_stock:\n          type: integer\n        departure_time:\n          type: number\n          format: float\n        path:\n          type: integer\n        initial_speed:\n          type: number\n          format: float\n        labels:\n          type: array\n          items:\n            type: string\n        allowances:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Allowance\"\n    Allowance:\n      oneOf:\n        - $ref: \"#/components/schemas/ConstructionAllowance\"\n        - $ref: \"#/components/schemas/MarecoAllowance\"\n      discriminator:\n        propertyName: allowance_type\n    MarecoAllowance:\n      properties:\n        allowance_type:\n          type: string\n          enum: [\"mareco\"]\n        default_value:\n          $ref: \"#/components/schemas/AllowanceValue\"\n        ranges:\n          type: array\n          items:\n            $ref: \"#/components/schemas/RangeAllowance\"\n    ConstructionAllowance:\n      allOf:\n        - type: object\n          properties:\n            allowance_type:\n              type: string\n              enum: [\"construction\"]\n        - $ref: \"#/components/schemas/RangeAllowance\"\n    RangeAllowance:\n      properties:\n        begin_position:\n          type: number\n        end_position:\n          type: number\n          example: 1000.0\n        value:\n          $ref: \"#/components/schemas/AllowanceValue\"\n    AllowanceValue:\n      oneOf:\n        - $ref: \"#/components/schemas/AllowanceTimePerDistanceValue\"\n        - $ref: \"#/components/schemas/AllowanceTimeValue\"\n        - $ref: \"#/components/schemas/AllowancePercentValue\"\n      discriminator:\n        propertyName: value_type\n    AllowanceTimePerDistanceValue:\n      properties:\n        value_type:\n          type: string\n          enum: [\"time_per_distance\"]\n        minutes:\n          type: number\n          example: 5.0\n          description: Minutes per 100k\n    AllowanceTimeValue:\n      properties:\n        value_type:\n          type: string\n          enum: [\"time\"]\n        seconds:\n          type: number\n          example: 180.0\n    AllowancePercentValue:\n      properties:\n        value_type:\n          type: string\n          enum: [\"percentage\"]\n        percentage:\n          type: number\n          example: 15.0\n"
		}
	},
	"Error": "parse: paths: /train_schedule/{id}/: get: : responses: 200: content: application/json: schema: parse schema: reference \"#/components/schemas/TrainSchedule\": parse schema: allOf: [1]: parse schema: reference \"#components/schemas/WritableTrainSchedule\": resolve reference \"#components/schemas/WritableTrainSchedule\": invalid schema reference \"#components/schemas/WritableTrainSchedule\""
}