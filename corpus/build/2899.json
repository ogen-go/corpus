{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/HUK-COBURG/openapirouter"
		},
		"file": {
			"name": "test-api.yaml",
			"path": "testdata/test-api.yaml",
			"content": "openapi: 3.0.3\ninfo:\n  title: Test-API\n  description: Only used for testing purposes\n  version: 1.0.0\npaths:\n  /test:\n    get:\n      responses:\n        200:\n          description: \"Successful\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestData'\n    post:\n      requestBody:\n        description: \"TestData\"\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TestData'\n      responses:\n        204:\n          description: \"Successful\"\n  /test/pathParams/{param}:\n    get:\n      parameters:\n        - in: path\n          name: param\n          schema:\n            $ref: '#/components/schemas/TestEnum'\n      responses:\n        200:\n          description: \"Successful\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestData'\n  /test/query:\n    get:\n      parameters:\n        - in: query\n          name: param\n          schema:\n            $ref: '#/components/schemas/TestEnum'\n          required: true\n      responses:\n        200:\n          description: \"Successful\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestData'\n  /test/secured:\n    get:\n      security:\n        - apiKey: []\n      responses:\n        200:\n          description: \"Successful\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestData'\ncomponents:\n  schemas:\n    TestEnum:\n      type: string\n      enum:\n        - \"value1\"\n        - \"value2\"\n    TestData:\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          type: string\n          example: \"test\"\n          description: \"just a test\"\n  securitySchemes:\n    apiKey:\n      type: apiKey\n      name: x-api-key\n      in: header\n"
		}
	},
	"Error": "parse: paths: /test/pathParams/{param}: get: : parameters: parse parameter \"param\": path parameters must be required"
}