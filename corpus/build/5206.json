{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/IagooCesaar/cursos-rocketseat-ignite-rentx"
		},
		"file": {
			"name": "swagger.json",
			"path": "src/swagger.json",
			"content": "{\r\n  \"openapi\": \"3.0.0\",\r\n  \"info\": {\r\n    \"title\":\"RentX Documentation\",\r\n    \"description\": \"This is an API Rent\", \r\n    \"version\": \"1.0.0\",\r\n    \"contact\": {\r\n      \"email\": \"iagocesar.nogueira@gmail.com\"\r\n    }\r\n  },\r\n  \"paths\": {\r\n    \"/categories\": {\r\n      \"post\": {\r\n        \"tags\": [\"Category\"],\r\n        \"summary\": \"Create a category\",\r\n        \"description\": \"Create a new category\",\r\n        \"security\": [\r\n          { \"bearerAuth\": [] }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"object\", \r\n                \"properties\": {\r\n                  \"name\": {\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"description\":{\r\n                    \"type\": \"string\"\r\n                  }\r\n                },\r\n                \"example\":{\r\n                  \"name\": \"category name sample\", \r\n                  \"description\": \"Category description sample\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"Created\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal Error\"\r\n          }\r\n        }\r\n      },\r\n      \"get\": {\r\n        \"tags\": [\"Category\"],\r\n        \"summary\": \"List all categories\",\r\n        \"description\": \"List all categories\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"type\":\"object\",\r\n                    \"properties\": {\r\n                      \"name\": {\r\n                        \"type\": \"string\"\r\n                      },\r\n                      \"description\": {\r\n                        \"type\": \"string\"\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/categories/import\": {\r\n      \"post\": {\r\n        \"tags\": [\"Category\"],\r\n        \"summary\": \"Upload a new category\",\r\n        \"description\": \"Import categories from CSV file\",\r\n        \"security\": [\r\n          { \"bearerAuth\": [] }\r\n        ],\r\n        \"requestBody\":{\r\n          \"content\":{\r\n            \"multipart/form-data\":{\r\n              \"schema\":{\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"file\": {\r\n                    \"type\": \"string\",\r\n                    \"format\": \"binary\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"Created\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/specifications\": {\r\n      \"post\": {\r\n        \"tags\": [\"Specifications\"],\r\n        \"summary\": \"Create a specification\",\r\n        \"description\": \"Create a new specification\",\r\n        \"security\": [\r\n          { \"bearerAuth\": [] }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\":{\r\n              \"schema\": {\r\n                \"$ref\": \"#/definitions/specification\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"Created\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Specification already exists\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/sessions\": {\r\n      \"post\": {\r\n        \"tags\": [\"Session\"],\r\n        \"summary\": \"Authentication User\",\r\n        \"description\": \"Authentication User\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\":{\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"email\":{\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"password\":{\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Email or password incorrect\"\r\n          }\r\n        }\r\n\r\n      }\r\n    },\r\n    \"/cars\":{\r\n      \"post\": {\r\n        \"tags\": [\"Cars\"],\r\n        \"summary\": \"Create a new car\",\r\n        \"description\": \"Create a new car\",\r\n        \"security\": [\r\n          { \"bearerAuth\": [] }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/definitions/car\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"201\":{\r\n            \"description\": \"Created\"\r\n          },\r\n          \"400\":{\"description\": \"Car already exists\"}\r\n        }\r\n      }\r\n    },\r\n    \"/cars/images/{id}\":{\r\n      \"post\":{\r\n        \"tags\":[\"Cars\"],\r\n        \"summary\": \"Upload images for a car\",\r\n        \"description\": \"Upload one or mor images for a car\",\r\n        \"security\":[\r\n          { \"bearerAuth\": []}\r\n        ],\r\n        \"parameters\":[\r\n          {\r\n            \"name\":\"id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Id of a valid car\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\":\"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"multipart/form-data\": {\r\n              \"schema\": {\r\n                \"type\": \"object\",\r\n                \"properties\":{\r\n                  \"images\": {\r\n                    \"type\": \"array\",\r\n                    \"items\": {\r\n                      \"type\": \"string\",\r\n                      \"format\": \"binary\"\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"Created\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Can not upload images\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"definitions\": {\r\n    \"specification\": {\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"name\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"description\":{\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"car\": {\r\n      \"type\":\"object\",\r\n      \"properties\": {\r\n        \"name\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"description\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"daily_rate\": {\r\n          \"type\": \"number\"\r\n        },\r\n        \"license_plate\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"fine_amount\": {\r\n          \"type\": \"number\"\r\n        },\r\n        \"brand\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"category_id\": {\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"components\": {\r\n    \"securitySchemes\": {\r\n      \"bearerAuth\": {\r\n        \"type\": \"http\",\r\n        \"scheme\": \"bearer\",\r\n        \"bearerFormat\": \"JWT\"\r\n      }\r\n    }\r\n  }\r\n}"
		}
	},
	"Error": "parse: paths: /specifications: post: operation \"\": requestBody: content: \"application/json\": parse schema: parse schema: reference \"#/definitions/specification\": resolve reference \"#/definitions/specification\": invalid schema reference \"#/definitions/specification\""
}