{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/apioo/psx-api"
		},
		"file": {
			"name": "00_openapi.json",
			"path": "tests/Transformer/openapi/actual/00_openapi.json",
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"description\": \"### EOSIO Contract API\\n*Made with ♥️ by [pink.gg](https://pink.gg/)*\\n#### Current Chain: wax-mainnet\\n#### Provided by: [Zeptagram](https://zeptagram.com)\",\n    \"version\": \"1.2.12\",\n    \"title\": \"EOSIO Contract API\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://wmnft.zeptagram.com\"\n    },\n    {\n      \"url\": \"http://wmnft.zeptagram.com\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"assets\",\n      \"description\": \"Assets\"\n    },\n    {\n      \"name\": \"assets\",\n      \"description\": \"Assets\"\n    },\n    {\n      \"name\": \"collections\",\n      \"description\": \"Collections\"\n    },\n    {\n      \"name\": \"schemas\",\n      \"description\": \"Schemas\"\n    },\n    {\n      \"name\": \"templates\",\n      \"description\": \"Templates\"\n    },\n    {\n      \"name\": \"offers\",\n      \"description\": \"Offers\"\n    },\n    {\n      \"name\": \"transfers\",\n      \"description\": \"Transfers\"\n    },\n    {\n      \"name\": \"accounts\",\n      \"description\": \"Accounts\"\n    },\n    {\n      \"name\": \"burns\",\n      \"description\": \"Burns\"\n    },\n    {\n      \"name\": \"config\",\n      \"description\": \"Config\"\n    },\n    {\n      \"name\": \"sales\",\n      \"description\": \"Sales\"\n    },\n    {\n      \"name\": \"auctions\",\n      \"description\": \"Auctions\"\n    },\n    {\n      \"name\": \"buyoffers\",\n      \"description\": \"Buyoffers\"\n    },\n    {\n      \"name\": \"marketplaces\",\n      \"description\": \"Marketplaces\"\n    },\n    {\n      \"name\": \"pricing\",\n      \"description\": \"Pricing\"\n    },\n    {\n      \"name\": \"stats\",\n      \"description\": \"Stats\"\n    },\n    {\n      \"name\": \"config\",\n      \"description\": \"Config\"\n    },\n    {\n      \"name\": \"assets\",\n      \"description\": \"Assets\"\n    },\n    {\n      \"name\": \"assets\",\n      \"description\": \"Assets\"\n    },\n    {\n      \"name\": \"transfers\",\n      \"description\": \"Transfers\"\n    },\n    {\n      \"name\": \"offers\",\n      \"description\": \"Offers\"\n    },\n    {\n      \"name\": \"links\",\n      \"description\": \"Share Links\"\n    },\n    {\n      \"name\": \"config\",\n      \"description\": \"Config\"\n    }\n  ],\n  \"paths\": {\n    \"/atomicassets/v1/assets\": {\n      \"get\": {\n        \"tags\": [\n          \"assets\"\n        ],\n        \"summary\": \"Fetch assets.\",\n        \"description\": \"You can filter the result by specific asset / template data fields.You can add for example \u0026template_data.rarity=common to only receive results which have an attribute \\\"rarity\\\" with the value \\\"common\\\". You can query specific asset data by using \u0026immutable_data.rarity=common or \u0026mutable_data.rarity=common .If you want to query a non text type you need to specify it explicitly (defaults to text type) like data:bool.foil=true or data:number.id=4 or data:text.rarity=common. Integers which are defined greater than 32 bit (eg 64 bit) in the schema need to be queried as text.\",\n        \"parameters\": [\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"query\",\n            \"description\": \"Filter by collection name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"schema_name\",\n            \"in\": \"query\",\n            \"description\": \"Filter by schema name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"template_id\",\n            \"in\": \"query\",\n            \"description\": \"Filter by template id\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"is_transferable\",\n            \"in\": \"query\",\n            \"description\": \"Filter for transferable assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"is_burnable\",\n            \"in\": \"query\",\n            \"description\": \"Filter for burnable assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"burned\",\n            \"in\": \"query\",\n            \"description\": \"Filter for burned assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"owner\",\n            \"in\": \"query\",\n            \"description\": \"Filter by owner\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"burned\",\n            \"in\": \"query\",\n            \"description\": \"Filter by burned\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"match\",\n            \"in\": \"query\",\n            \"description\": \"Search for input in asset name on template data\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"match_immutable_name\",\n            \"in\": \"query\",\n            \"description\": \"Search for input in asset name on asset immutable data\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"match_mutable_name\",\n            \"in\": \"query\",\n            \"description\": \"Search for input in asset name on asset mutable data\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"is_transferable\",\n            \"in\": \"query\",\n            \"description\": \"Check if asset is transferable\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"is_burnable\",\n            \"in\": \"query\",\n            \"description\": \"Check if asset is burnable\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"collection_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Hide collections from result. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show only results from specific collections. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"only_duplicate_templates\",\n            \"in\": \"query\",\n            \"description\": \"Show only duplicate assets grouped by template\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"has_backed_tokens\",\n            \"in\": \"query\",\n            \"description\": \"Show only assets that are backed by a token\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"authorized_account\",\n            \"in\": \"query\",\n            \"description\": \"Filter for assets the provided account can edit. \",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"template_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Filter for multiple template ids split by \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"template_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Dont include specific template ids split by \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"hide_templates_by_accounts\",\n            \"in\": \"query\",\n            \"description\": \"Dont templates that are owned by an account\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"hide_offers\",\n            \"in\": \"query\",\n            \"description\": \"Hide assets which are used in an offer\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"collection_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Hide collections from result. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show only results from specific collections. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"ids\",\n            \"in\": \"query\",\n            \"description\": \"seperate multiple ids with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"lower_bound\",\n            \"in\": \"query\",\n            \"description\": \"lower bound of primary key (value included)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"upper_bound\",\n            \"in\": \"query\",\n            \"description\": \"upper bound of primary key (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"before\",\n            \"in\": \"query\",\n            \"description\": \"Only show results before this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"after\",\n            \"in\": \"query\",\n            \"description\": \"Only show results after this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Column to sort\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asset_id\",\n                \"minted\",\n                \"updated\",\n                \"transferred\",\n                \"template_mint\",\n                \"name\"\n              ],\n              \"default\": \"asset_id\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Asset\"\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicassets/v1/assets/{asset_id}\": {\n      \"get\": {\n        \"tags\": [\n          \"assets\"\n        ],\n        \"summary\": \"Fetch asset by id\",\n        \"parameters\": [\n          {\n            \"name\": \"asset_id\",\n            \"in\": \"path\",\n            \"description\": \"ID of asset\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Asset\"\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"416\": {\n            \"description\": \"Element not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicassets/v1/assets/{asset_id}/stats\": {\n      \"get\": {\n        \"tags\": [\n          \"assets\"\n        ],\n        \"summary\": \"Fetch asset stats\",\n        \"parameters\": [\n          {\n            \"name\": \"asset_id\",\n            \"in\": \"path\",\n            \"description\": \"ID of asset\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"template_mint\": {\n                          \"type\": \"integer\"\n                        }\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicassets/v1/assets/{asset_id}/logs\": {\n      \"get\": {\n        \"tags\": [\n          \"assets\"\n        ],\n        \"summary\": \"Fetch asset logs\",\n        \"parameters\": [\n          {\n            \"name\": \"asset_id\",\n            \"in\": \"path\",\n            \"description\": \"ID of asset\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          },\n          {\n            \"name\": \"action_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Action whitelist\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"action_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Action blacklist\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Log\"\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicassets/v1/collections\": {\n      \"get\": {\n        \"tags\": [\n          \"collections\"\n        ],\n        \"summary\": \"Fetch collections\",\n        \"parameters\": [\n          {\n            \"name\": \"author\",\n            \"in\": \"query\",\n            \"description\": \"Get collections by author\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"match\",\n            \"in\": \"query\",\n            \"description\": \"Search for input in collection name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"authorized_account\",\n            \"in\": \"query\",\n            \"description\": \"Filter for collections which the provided account can use to create assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"notify_account\",\n            \"in\": \"query\",\n            \"description\": \"Filter for collections where the provided account is notified\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Hide collections from result. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show only results from specific collections. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"ids\",\n            \"in\": \"query\",\n            \"description\": \"seperate multiple ids with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"lower_bound\",\n            \"in\": \"query\",\n            \"description\": \"lower bound of primary key (value included)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"upper_bound\",\n            \"in\": \"query\",\n            \"description\": \"upper bound of primary key (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"before\",\n            \"in\": \"query\",\n            \"description\": \"Only show results before this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"after\",\n            \"in\": \"query\",\n            \"description\": \"Only show results after this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Column to sort\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"created\",\n                \"collection_name\"\n              ],\n              \"default\": \"created\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Collection\"\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicassets/v1/collections/{collection_name}\": {\n      \"get\": {\n        \"tags\": [\n          \"collections\"\n        ],\n        \"summary\": \"Find collection by its name\",\n        \"parameters\": [\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"path\",\n            \"description\": \"Name of collection\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Collection\"\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"416\": {\n            \"description\": \"Element not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicassets/v1/collections/{collection_name}/stats\": {\n      \"get\": {\n        \"tags\": [\n          \"collections\"\n        ],\n        \"summary\": \"Get stats about collection\",\n        \"parameters\": [\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"path\",\n            \"description\": \"Name of collection\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"assets\": {\n                          \"type\": \"string\"\n                        },\n                        \"burned\": {\n                          \"type\": \"string\"\n                        },\n                        \"templates\": {\n                          \"type\": \"string\"\n                        },\n                        \"schemas\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicassets/v1/collections/{collection_name}/logs\": {\n      \"get\": {\n        \"tags\": [\n          \"collections\"\n        ],\n        \"summary\": \"Fetch collection logs\",\n        \"parameters\": [\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"path\",\n            \"description\": \"Name of collection\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          },\n          {\n            \"name\": \"action_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Action whitelist\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"action_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Action blacklist\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Log\"\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicassets/v1/schemas\": {\n      \"get\": {\n        \"tags\": [\n          \"schemas\"\n        ],\n        \"summary\": \"Fetch schemas\",\n        \"parameters\": [\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"query\",\n            \"description\": \"Get all schemas within the collection\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"authorized_account\",\n            \"in\": \"query\",\n            \"description\": \"Filter for schemas the provided account can edit\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"schema_name\",\n            \"in\": \"query\",\n            \"description\": \"Schema name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"match\",\n            \"in\": \"query\",\n            \"description\": \"Search for input in schema name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Hide collections from result. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show only results from specific collections. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"ids\",\n            \"in\": \"query\",\n            \"description\": \"seperate multiple ids with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"lower_bound\",\n            \"in\": \"query\",\n            \"description\": \"lower bound of primary key (value included)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"upper_bound\",\n            \"in\": \"query\",\n            \"description\": \"upper bound of primary key (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"before\",\n            \"in\": \"query\",\n            \"description\": \"Only show results before this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"after\",\n            \"in\": \"query\",\n            \"description\": \"Only show results after this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Column to sort\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"created\",\n                \"schema_name\"\n              ],\n              \"default\": \"created\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Schema\"\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicassets/v1/schemas/{collection_name}/{schema_name}\": {\n      \"get\": {\n        \"tags\": [\n          \"schemas\"\n        ],\n        \"summary\": \"Find schema by schema_name\",\n        \"parameters\": [\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"path\",\n            \"description\": \"Collection name of schema\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"schema_name\",\n            \"in\": \"path\",\n            \"description\": \"Name of schema\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Schema\"\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"416\": {\n            \"description\": \"Element not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicassets/v1/schemas/{collection_name}/{schema_name}/stats\": {\n      \"get\": {\n        \"tags\": [\n          \"schemas\"\n        ],\n        \"summary\": \"Get stats about a specific schema\",\n        \"parameters\": [\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"path\",\n            \"description\": \"Collection name of schema\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"schema_name\",\n            \"in\": \"path\",\n            \"description\": \"Name of schema\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"assets\": {\n                          \"type\": \"string\"\n                        },\n                        \"burned\": {\n                          \"type\": \"string\"\n                        },\n                        \"templates\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicassets/v1/schemas/{collection_name}/{schema_name}/logs\": {\n      \"get\": {\n        \"tags\": [\n          \"schemas\"\n        ],\n        \"summary\": \"Fetch schema logs\",\n        \"parameters\": [\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"path\",\n            \"description\": \"Collection name of schema\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"schema_name\",\n            \"in\": \"path\",\n            \"description\": \"Name of schema\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          },\n          {\n            \"name\": \"action_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Action whitelist\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"action_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Action blacklist\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Log\"\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicassets/v1/templates\": {\n      \"get\": {\n        \"tags\": [\n          \"templates\"\n        ],\n        \"summary\": \"Fetch templates.\",\n        \"description\": \"You can filter the result by specific asset / template data fields.You can add for example \u0026template_data.rarity=common to only receive results which have an attribute \\\"rarity\\\" with the value \\\"common\\\". You can query specific asset data by using \u0026immutable_data.rarity=common or \u0026mutable_data.rarity=common .If you want to query a non text type you need to specify it explicitly (defaults to text type) like data:bool.foil=true or data:number.id=4 or data:text.rarity=common. Integers which are defined greater than 32 bit (eg 64 bit) in the schema need to be queried as text.\",\n        \"parameters\": [\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"query\",\n            \"description\": \"Get all templates within the collection\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"schema_name\",\n            \"in\": \"query\",\n            \"description\": \"Get all templates which implement that schema\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"issued_supply\",\n            \"in\": \"query\",\n            \"description\": \"Filter by issued supply\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"number\"\n            }\n          },\n          {\n            \"name\": \"min_issued_supply\",\n            \"in\": \"query\",\n            \"description\": \"Filter by issued supply\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"number\"\n            }\n          },\n          {\n            \"name\": \"max_issued_supply\",\n            \"in\": \"query\",\n            \"description\": \"Filter by issued supply\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"number\"\n            }\n          },\n          {\n            \"name\": \"has_assets\",\n            \"in\": \"query\",\n            \"description\": \"Only show templates with existing supply \u003e 0\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"max_supply\",\n            \"in\": \"query\",\n            \"description\": \"Filter by max supply\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"number\"\n            }\n          },\n          {\n            \"name\": \"is_burnable\",\n            \"in\": \"query\",\n            \"description\": \"Filter by burnable\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"is_transferable\",\n            \"in\": \"query\",\n            \"description\": \"Filter by transferable\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"authorized_account\",\n            \"in\": \"query\",\n            \"description\": \"Filter for templates the provided account can use\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"match\",\n            \"in\": \"query\",\n            \"description\": \"Search for template id or\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Hide collections from result. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show only results from specific collections. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"ids\",\n            \"in\": \"query\",\n            \"description\": \"seperate multiple ids with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"lower_bound\",\n            \"in\": \"query\",\n            \"description\": \"lower bound of primary key (value included)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"upper_bound\",\n            \"in\": \"query\",\n            \"description\": \"upper bound of primary key (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"before\",\n            \"in\": \"query\",\n            \"description\": \"Only show results before this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"after\",\n            \"in\": \"query\",\n            \"description\": \"Only show results after this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Column to sort\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"name\",\n                \"created\"\n              ],\n              \"default\": \"created\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Template\"\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicassets/v1/templates/{collection_name}/{template_id}\": {\n      \"get\": {\n        \"tags\": [\n          \"templates\"\n        ],\n        \"summary\": \"Find template by id\",\n        \"parameters\": [\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"path\",\n            \"description\": \"Name of collection\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"template_id\",\n            \"in\": \"path\",\n            \"description\": \"ID of template\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Template\"\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"416\": {\n            \"description\": \"Element not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicassets/v1/templates/{collection_name}/{template_id}/stats\": {\n      \"get\": {\n        \"tags\": [\n          \"templates\"\n        ],\n        \"summary\": \"Get stats about a specific template\",\n        \"parameters\": [\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"path\",\n            \"description\": \"Name of collection\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"template_id\",\n            \"in\": \"path\",\n            \"description\": \"ID of template\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"assets\": {\n                          \"type\": \"string\"\n                        },\n                        \"burned\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicassets/v1/templates/{collection_name}/{template_id}/logs\": {\n      \"get\": {\n        \"tags\": [\n          \"templates\"\n        ],\n        \"summary\": \"Fetch template logs\",\n        \"parameters\": [\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"path\",\n            \"description\": \"Name of collection\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"template_id\",\n            \"in\": \"path\",\n            \"description\": \"ID of template\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          },\n          {\n            \"name\": \"action_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Action whitelist\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"action_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Action blacklist\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Log\"\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicassets/v1/offers\": {\n      \"get\": {\n        \"tags\": [\n          \"offers\"\n        ],\n        \"summary\": \"Fetch offers\",\n        \"parameters\": [\n          {\n            \"name\": \"account\",\n            \"in\": \"query\",\n            \"description\": \"Notified account (can be sender or recipient) - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sender\",\n            \"in\": \"query\",\n            \"description\": \"Offer sender - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"recipient\",\n            \"in\": \"query\",\n            \"description\": \"Offer recipient - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"state\",\n            \"in\": \"query\",\n            \"description\": \"Filter by Offer State (0: PENDING - Offer created and valid, 1: INVALID - Assets are missing because ownership has changed, 2: UNKNOWN - Offer is not valid anymore, 3: ACCEPTED - Offer was accepted, 4: DECLINED - Offer was declined by recipient, 5: CANCELLED - Offer was canceled by sender) - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"is_recipient_contract\",\n            \"in\": \"query\",\n            \"description\": \"Filter offers where recipient is a contract\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"asset_id\",\n            \"in\": \"query\",\n            \"description\": \"only offers which contain this asset_id - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"template_id\",\n            \"in\": \"query\",\n            \"description\": \"only offers which contain assets of this template - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"schema_name\",\n            \"in\": \"query\",\n            \"description\": \"only offers which contain assets of this schema - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"query\",\n            \"description\": \"only offers which contain assets of this collection - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"account_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Only offers which are sent by one of these accounts\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"account_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Exclude offers which are sent by one of these accounts\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sender_asset_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Only offers which contain these assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sender_asset_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Exclude offers which contain these assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"recipient_asset_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Only offers which contain these assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"recipient_asset_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Exclude offers which contain these assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"hide_contracts\",\n            \"in\": \"query\",\n            \"description\": \"dont show offers from or to accounts that have code deployed\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"ids\",\n            \"in\": \"query\",\n            \"description\": \"seperate multiple ids with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"lower_bound\",\n            \"in\": \"query\",\n            \"description\": \"lower bound of primary key (value included)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"upper_bound\",\n            \"in\": \"query\",\n            \"description\": \"upper bound of primary key (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"before\",\n            \"in\": \"query\",\n            \"description\": \"Only show results before this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"after\",\n            \"in\": \"query\",\n            \"description\": \"Only show results after this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"collection_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Hide collections from result. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show only results from specific collections. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Column to sort\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"created\",\n                \"updated\"\n              ],\n              \"default\": \"created\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Offer\"\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicassets/v1/offers/{offer_id}\": {\n      \"get\": {\n        \"tags\": [\n          \"offers\"\n        ],\n        \"summary\": \"Find offer by id\",\n        \"parameters\": [\n          {\n            \"name\": \"offer_id\",\n            \"in\": \"path\",\n            \"description\": \"ID of offer\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Offer\"\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"416\": {\n            \"description\": \"Element not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicassets/v1/offers/{offer_id}/logs\": {\n      \"get\": {\n        \"tags\": [\n          \"offers\"\n        ],\n        \"summary\": \"Fetch offer logs\",\n        \"parameters\": [\n          {\n            \"name\": \"offer_id\",\n            \"in\": \"path\",\n            \"description\": \"ID of offer\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          },\n          {\n            \"name\": \"action_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Action whitelist\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"action_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Action blacklist\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Log\"\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicassets/v1/transfers\": {\n      \"get\": {\n        \"tags\": [\n          \"transfers\"\n        ],\n        \"summary\": \"Fetch transfers\",\n        \"parameters\": [\n          {\n            \"name\": \"account\",\n            \"in\": \"query\",\n            \"description\": \"Notified account (can be sender or recipient) - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sender\",\n            \"in\": \"query\",\n            \"description\": \"Transfer sender - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"recipient\",\n            \"in\": \"query\",\n            \"description\": \"Transfer recipient - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"asset_id\",\n            \"in\": \"query\",\n            \"description\": \"only transfers which contain this asset_id - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"template_id\",\n            \"in\": \"query\",\n            \"description\": \"only transfers which contain assets of this template - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"schema_name\",\n            \"in\": \"query\",\n            \"description\": \"only transfers which contain assets of this schema - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"query\",\n            \"description\": \"only transfers which contain assets of this collection - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"hide_contracts\",\n            \"in\": \"query\",\n            \"description\": \"dont show transfers from or to accounts that have code deployed\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"ids\",\n            \"in\": \"query\",\n            \"description\": \"seperate multiple ids with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"lower_bound\",\n            \"in\": \"query\",\n            \"description\": \"lower bound of primary key (value included)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"upper_bound\",\n            \"in\": \"query\",\n            \"description\": \"upper bound of primary key (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"before\",\n            \"in\": \"query\",\n            \"description\": \"Only show results before this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"after\",\n            \"in\": \"query\",\n            \"description\": \"Only show results after this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"collection_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Hide collections from result. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show only results from specific collections. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Column to sort\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"created\"\n              ],\n              \"default\": \"created\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Transfer\"\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicassets/v1/accounts\": {\n      \"get\": {\n        \"tags\": [\n          \"accounts\"\n        ],\n        \"summary\": \"Get accounts which own atomicassets NFTs\",\n        \"parameters\": [\n          {\n            \"name\": \"match\",\n            \"in\": \"query\",\n            \"description\": \"Search for partial account name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"query\",\n            \"description\": \"Filter for specific collection\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"schema_name\",\n            \"in\": \"query\",\n            \"description\": \"Filter for specific schema\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"template_id\",\n            \"in\": \"query\",\n            \"description\": \"Filter for specific template\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"hide_offers\",\n            \"in\": \"query\",\n            \"description\": \"Hide assets which are used in an offer\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"collection_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Hide collections from result. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show only results from specific collections. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"ids\",\n            \"in\": \"query\",\n            \"description\": \"seperate multiple ids with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"lower_bound\",\n            \"in\": \"query\",\n            \"description\": \"lower bound of primary key (value included)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"upper_bound\",\n            \"in\": \"query\",\n            \"description\": \"upper bound of primary key (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"account\": {\n                            \"type\": \"string\"\n                          },\n                          \"assets\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicassets/v1/accounts/{account}\": {\n      \"get\": {\n        \"tags\": [\n          \"accounts\"\n        ],\n        \"summary\": \"Get a specific account\",\n        \"parameters\": [\n          {\n            \"name\": \"account\",\n            \"in\": \"path\",\n            \"description\": \"Account name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"hide_offers\",\n            \"in\": \"query\",\n            \"description\": \"Hide assets which are used in an offer\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"collection_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Hide collections from result. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show only results from specific collections. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"collections\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"collection\": {\n                                  \"$ref\": \"#/components/schemas/Collection\"\n                                },\n                                \"assets\": {\n                                  \"type\": \"string\"\n                                }\n                              }\n                            }\n                          },\n                          \"templates\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"template_id\": {\n                                  \"type\": \"string\"\n                                },\n                                \"assets\": {\n                                  \"type\": \"string\"\n                                }\n                              }\n                            }\n                          },\n                          \"assets\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicassets/v1/accounts/{account}/{collection_name}\": {\n      \"get\": {\n        \"tags\": [\n          \"accounts\"\n        ],\n        \"summary\": \"Get templates and schemas count by account\",\n        \"parameters\": [\n          {\n            \"name\": \"account\",\n            \"in\": \"path\",\n            \"description\": \"Account name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"path\",\n            \"description\": \"Collection Name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"templates\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"template_id\": {\n                                  \"type\": \"string\"\n                                },\n                                \"assets\": {\n                                  \"type\": \"string\"\n                                }\n                              }\n                            }\n                          },\n                          \"schemas\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"schema_name\": {\n                                  \"type\": \"string\"\n                                },\n                                \"assets\": {\n                                  \"type\": \"string\"\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicassets/v1/burns\": {\n      \"get\": {\n        \"tags\": [\n          \"burns\"\n        ],\n        \"summary\": \"Get accounts which own atomicassets NFTs\",\n        \"parameters\": [\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"query\",\n            \"description\": \"Filter for specific collection\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"schema_name\",\n            \"in\": \"query\",\n            \"description\": \"Filter for specific schema\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"template_id\",\n            \"in\": \"query\",\n            \"description\": \"Filter for specific template\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Hide collections from result. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show only results from specific collections. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"ids\",\n            \"in\": \"query\",\n            \"description\": \"seperate multiple ids with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"lower_bound\",\n            \"in\": \"query\",\n            \"description\": \"lower bound of primary key (value included)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"upper_bound\",\n            \"in\": \"query\",\n            \"description\": \"upper bound of primary key (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"account\": {\n                            \"type\": \"string\"\n                          },\n                          \"assets\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicassets/v1/burns/{account}\": {\n      \"get\": {\n        \"tags\": [\n          \"burns\"\n        ],\n        \"summary\": \"Get a specific account\",\n        \"parameters\": [\n          {\n            \"name\": \"account\",\n            \"in\": \"path\",\n            \"description\": \"Account name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"hide_offers\",\n            \"in\": \"query\",\n            \"description\": \"Hide assets which are used in an offer\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"collection_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Hide collections from result. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show only results from specific collections. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"collections\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"collection_name\": {\n                                  \"type\": \"string\"\n                                },\n                                \"assets\": {\n                                  \"type\": \"string\"\n                                }\n                              }\n                            }\n                          },\n                          \"templates\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"collection_name\": {\n                                  \"type\": \"string\"\n                                },\n                                \"template_id\": {\n                                  \"type\": \"string\"\n                                },\n                                \"assets\": {\n                                  \"type\": \"string\"\n                                }\n                              }\n                            }\n                          },\n                          \"assets\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicassets/v1/config\": {\n      \"get\": {\n        \"tags\": [\n          \"config\"\n        ],\n        \"summary\": \"Get general information about the API and the connected contract\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"contract\": {\n                          \"type\": \"string\"\n                        },\n                        \"version\": {\n                          \"type\": \"string\"\n                        },\n                        \"collection_format\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"name\": {\n                                \"type\": \"string\"\n                              },\n                              \"type\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        },\n                        \"supported_tokens\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"token_contract\": {\n                                \"type\": \"string\"\n                              },\n                              \"token_symbol\": {\n                                \"type\": \"string\"\n                              },\n                              \"token_precision\": {\n                                \"type\": \"integer\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/sales\": {\n      \"get\": {\n        \"tags\": [\n          \"sales\"\n        ],\n        \"summary\": \"Get all sales. \",\n        \"description\": \"You can filter the result by specific asset / template data fields.You can add for example \u0026template_data.rarity=common to only receive results which have an attribute \\\"rarity\\\" with the value \\\"common\\\". You can query specific asset data by using \u0026immutable_data.rarity=common or \u0026mutable_data.rarity=common .If you want to query a non text type you need to specify it explicitly (defaults to text type) like data:bool.foil=true or data:number.id=4 or data:text.rarity=common. Integers which are defined greater than 32 bit (eg 64 bit) in the schema need to be queried as text.\",\n        \"parameters\": [\n          {\n            \"name\": \"state\",\n            \"in\": \"query\",\n            \"description\": \"Filter by sale state (0: WAITING - Sale created but offer was not send yet, 1: LISTED - Assets for sale, 2: CANCELED - Sale was canceled, 3: SOLD - Sale was bought4: INVALID - Sale is still listed but offer is currently invalid (can become valid again if the user owns all assets again)) - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"max_assets\",\n            \"in\": \"query\",\n            \"description\": \"Max assets per listing\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"min_assets\",\n            \"in\": \"query\",\n            \"description\": \"Min assets per listing\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"show_seller_contracts\",\n            \"in\": \"query\",\n            \"description\": \"If false no seller contracts are shown except if they are in the contract whitelist\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"contract_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show these accounts even if they are contracts\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"seller_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Dont show listings from these sellers (Split multiple with \\\",\\\")\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"buyer_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Dont show listings from these buyers (Split multiple with \\\",\\\")\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"asset_id\",\n            \"in\": \"query\",\n            \"description\": \"Asset id in the offer\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"int\"\n            }\n          },\n          {\n            \"name\": \"marketplace\",\n            \"in\": \"query\",\n            \"description\": \"Filter by all sales where a certain marketplace is either taker or maker marketplace - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"maker_marketplace\",\n            \"in\": \"query\",\n            \"description\": \"Maker marketplace - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"taker_marketplace\",\n            \"in\": \"query\",\n            \"description\": \"Taker marketplace - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"symbol\",\n            \"in\": \"query\",\n            \"description\": \"Filter by symbol\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"account\",\n            \"in\": \"query\",\n            \"description\": \"Filter accounts that are either seller or buyer\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"seller\",\n            \"in\": \"query\",\n            \"description\": \"Filter by seller - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"buyer\",\n            \"in\": \"query\",\n            \"description\": \"Filter by buyer - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"min_price\",\n            \"in\": \"query\",\n            \"description\": \"Lower price limit\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"number\"\n            }\n          },\n          {\n            \"name\": \"max_price\",\n            \"in\": \"query\",\n            \"description\": \"Upper price limit\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"number\"\n            }\n          },\n          {\n            \"name\": \"min_template_mint\",\n            \"in\": \"query\",\n            \"description\": \"Min template mint\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"number\"\n            }\n          },\n          {\n            \"name\": \"max_template_mint\",\n            \"in\": \"query\",\n            \"description\": \"Max template mint\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"number\"\n            }\n          },\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"query\",\n            \"description\": \"Filter by collection name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"schema_name\",\n            \"in\": \"query\",\n            \"description\": \"Filter by schema name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"template_id\",\n            \"in\": \"query\",\n            \"description\": \"Filter by template id\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"is_transferable\",\n            \"in\": \"query\",\n            \"description\": \"Filter for transferable assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"is_burnable\",\n            \"in\": \"query\",\n            \"description\": \"Filter for burnable assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"burned\",\n            \"in\": \"query\",\n            \"description\": \"Filter for burned assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"owner\",\n            \"in\": \"query\",\n            \"description\": \"Filter by owner\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"burned\",\n            \"in\": \"query\",\n            \"description\": \"Filter by burned\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"match\",\n            \"in\": \"query\",\n            \"description\": \"Search for input in asset name on template data\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"match_immutable_name\",\n            \"in\": \"query\",\n            \"description\": \"Search for input in asset name on asset immutable data\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"match_mutable_name\",\n            \"in\": \"query\",\n            \"description\": \"Search for input in asset name on asset mutable data\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"is_transferable\",\n            \"in\": \"query\",\n            \"description\": \"Check if asset is transferable\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"is_burnable\",\n            \"in\": \"query\",\n            \"description\": \"Check if asset is burnable\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"collection_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Hide collections from result. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show only results from specific collections. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"ids\",\n            \"in\": \"query\",\n            \"description\": \"seperate multiple ids with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"lower_bound\",\n            \"in\": \"query\",\n            \"description\": \"lower bound of primary key (value included)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"upper_bound\",\n            \"in\": \"query\",\n            \"description\": \"upper bound of primary key (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"before\",\n            \"in\": \"query\",\n            \"description\": \"Only show results before this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"after\",\n            \"in\": \"query\",\n            \"description\": \"Only show results after this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Column to sort\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"created\",\n                \"updated\",\n                \"sale_id\",\n                \"price\",\n                \"template_mint\"\n              ],\n              \"default\": \"created\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Sale\"\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/sales/templates\": {\n      \"get\": {\n        \"tags\": [\n          \"sales\"\n        ],\n        \"summary\": \"Get the cheapest sale grouped by templates. \",\n        \"description\": \"You can filter the result by specific asset / template data fields.You can add for example \u0026template_data.rarity=common to only receive results which have an attribute \\\"rarity\\\" with the value \\\"common\\\". You can query specific asset data by using \u0026immutable_data.rarity=common or \u0026mutable_data.rarity=common .If you want to query a non text type you need to specify it explicitly (defaults to text type) like data:bool.foil=true or data:number.id=4 or data:text.rarity=common. Integers which are defined greater than 32 bit (eg 64 bit) in the schema need to be queried as text.\",\n        \"parameters\": [\n          {\n            \"name\": \"symbol\",\n            \"in\": \"query\",\n            \"description\": \"Token symbol\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"min_price\",\n            \"in\": \"query\",\n            \"description\": \"Min price\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"number\"\n            }\n          },\n          {\n            \"name\": \"max_price\",\n            \"in\": \"query\",\n            \"description\": \"Max price\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"number\"\n            }\n          },\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"query\",\n            \"description\": \"Filter by collection name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"schema_name\",\n            \"in\": \"query\",\n            \"description\": \"Filter by schema name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"template_id\",\n            \"in\": \"query\",\n            \"description\": \"Filter by template id\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"is_transferable\",\n            \"in\": \"query\",\n            \"description\": \"Filter for transferable assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"is_burnable\",\n            \"in\": \"query\",\n            \"description\": \"Filter for burnable assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"burned\",\n            \"in\": \"query\",\n            \"description\": \"Filter for burned assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"owner\",\n            \"in\": \"query\",\n            \"description\": \"Filter by owner\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"burned\",\n            \"in\": \"query\",\n            \"description\": \"Filter by burned\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"match\",\n            \"in\": \"query\",\n            \"description\": \"Search for input in asset name on template data\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"match_immutable_name\",\n            \"in\": \"query\",\n            \"description\": \"Search for input in asset name on asset immutable data\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"match_mutable_name\",\n            \"in\": \"query\",\n            \"description\": \"Search for input in asset name on asset mutable data\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"is_transferable\",\n            \"in\": \"query\",\n            \"description\": \"Check if asset is transferable\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"is_burnable\",\n            \"in\": \"query\",\n            \"description\": \"Check if asset is burnable\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"collection_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Hide collections from result. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show only results from specific collections. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"ids\",\n            \"in\": \"query\",\n            \"description\": \"seperate multiple ids with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"lower_bound\",\n            \"in\": \"query\",\n            \"description\": \"lower bound of primary key (value included)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"upper_bound\",\n            \"in\": \"query\",\n            \"description\": \"upper bound of primary key (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Column to sort\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"template_id\",\n                \"price\"\n              ],\n              \"default\": \"created\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Sale\"\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/sales/{sale_id}\": {\n      \"get\": {\n        \"tags\": [\n          \"sales\"\n        ],\n        \"summary\": \"Get a specific sale by id\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"sale_id\",\n            \"description\": \"Sale Id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Sale\"\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"416\": {\n            \"description\": \"Element not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/sales/{sale_id}/logs\": {\n      \"get\": {\n        \"tags\": [\n          \"sales\"\n        ],\n        \"summary\": \"Fetch sale logs\",\n        \"parameters\": [\n          {\n            \"name\": \"sale_id\",\n            \"in\": \"path\",\n            \"description\": \"ID of sale\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          },\n          {\n            \"name\": \"action_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Action whitelist\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"action_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Action blacklist\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Log\"\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/auctions\": {\n      \"get\": {\n        \"tags\": [\n          \"auctions\"\n        ],\n        \"summary\": \"Get all auctions.\",\n        \"description\": \"You can filter the result by specific asset / template data fields.You can add for example \u0026template_data.rarity=common to only receive results which have an attribute \\\"rarity\\\" with the value \\\"common\\\". You can query specific asset data by using \u0026immutable_data.rarity=common or \u0026mutable_data.rarity=common .If you want to query a non text type you need to specify it explicitly (defaults to text type) like data:bool.foil=true or data:number.id=4 or data:text.rarity=common. Integers which are defined greater than 32 bit (eg 64 bit) in the schema need to be queried as text.\",\n        \"parameters\": [\n          {\n            \"name\": \"state\",\n            \"in\": \"query\",\n            \"description\": \"Filter by auction state (0: WAITING: Auction created but assets were not transferred yet, 1: LISTED - Auction pending and open to bids, 2: CANCELED - Auction was canceled, 3: SOLD - Auction has been sold, 4: INVALID - Auction ended but no bid was made) - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"bidder\",\n            \"in\": \"query\",\n            \"description\": \"Filter by auctions with this bidder\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"participant\",\n            \"in\": \"query\",\n            \"description\": \"Filter by auctions where this account participated and can still claim / bid\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"max_assets\",\n            \"in\": \"query\",\n            \"description\": \"Max assets per listing\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"min_assets\",\n            \"in\": \"query\",\n            \"description\": \"Min assets per listing\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"show_seller_contracts\",\n            \"in\": \"query\",\n            \"description\": \"If false no seller contracts are shown except if they are in the contract whitelist\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"contract_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show these accounts even if they are contracts\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"seller_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Dont show listings from these sellers (Split multiple with \\\",\\\")\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"buyer_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Dont show listings from these buyers (Split multiple with \\\",\\\")\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"asset_id\",\n            \"in\": \"query\",\n            \"description\": \"Asset id in the offer\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"int\"\n            }\n          },\n          {\n            \"name\": \"marketplace\",\n            \"in\": \"query\",\n            \"description\": \"Filter by all sales where a certain marketplace is either taker or maker marketplace - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"maker_marketplace\",\n            \"in\": \"query\",\n            \"description\": \"Maker marketplace - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"taker_marketplace\",\n            \"in\": \"query\",\n            \"description\": \"Taker marketplace - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"symbol\",\n            \"in\": \"query\",\n            \"description\": \"Filter by symbol\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"account\",\n            \"in\": \"query\",\n            \"description\": \"Filter accounts that are either seller or buyer\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"seller\",\n            \"in\": \"query\",\n            \"description\": \"Filter by seller - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"buyer\",\n            \"in\": \"query\",\n            \"description\": \"Filter by buyer - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"min_price\",\n            \"in\": \"query\",\n            \"description\": \"Lower price limit\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"number\"\n            }\n          },\n          {\n            \"name\": \"max_price\",\n            \"in\": \"query\",\n            \"description\": \"Upper price limit\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"number\"\n            }\n          },\n          {\n            \"name\": \"min_template_mint\",\n            \"in\": \"query\",\n            \"description\": \"Min template mint\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"number\"\n            }\n          },\n          {\n            \"name\": \"max_template_mint\",\n            \"in\": \"query\",\n            \"description\": \"Max template mint\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"number\"\n            }\n          },\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"query\",\n            \"description\": \"Filter by collection name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"schema_name\",\n            \"in\": \"query\",\n            \"description\": \"Filter by schema name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"template_id\",\n            \"in\": \"query\",\n            \"description\": \"Filter by template id\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"is_transferable\",\n            \"in\": \"query\",\n            \"description\": \"Filter for transferable assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"is_burnable\",\n            \"in\": \"query\",\n            \"description\": \"Filter for burnable assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"burned\",\n            \"in\": \"query\",\n            \"description\": \"Filter for burned assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"owner\",\n            \"in\": \"query\",\n            \"description\": \"Filter by owner\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"burned\",\n            \"in\": \"query\",\n            \"description\": \"Filter by burned\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"match\",\n            \"in\": \"query\",\n            \"description\": \"Search for input in asset name on template data\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"match_immutable_name\",\n            \"in\": \"query\",\n            \"description\": \"Search for input in asset name on asset immutable data\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"match_mutable_name\",\n            \"in\": \"query\",\n            \"description\": \"Search for input in asset name on asset mutable data\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"is_transferable\",\n            \"in\": \"query\",\n            \"description\": \"Check if asset is transferable\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"is_burnable\",\n            \"in\": \"query\",\n            \"description\": \"Check if asset is burnable\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"collection_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Hide collections from result. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show only results from specific collections. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"ids\",\n            \"in\": \"query\",\n            \"description\": \"seperate multiple ids with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"lower_bound\",\n            \"in\": \"query\",\n            \"description\": \"lower bound of primary key (value included)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"upper_bound\",\n            \"in\": \"query\",\n            \"description\": \"upper bound of primary key (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"before\",\n            \"in\": \"query\",\n            \"description\": \"Only show results before this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"after\",\n            \"in\": \"query\",\n            \"description\": \"Only show results after this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Column to sort\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"created\",\n                \"updated\",\n                \"ending\",\n                \"auction_id\",\n                \"price\",\n                \"template_mint\"\n              ],\n              \"default\": \"created\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Auction\"\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/auctions/{auction_id}\": {\n      \"get\": {\n        \"tags\": [\n          \"auctions\"\n        ],\n        \"summary\": \"Get a specific auction by id\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"auction_id\",\n            \"description\": \"Auction Id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Auction\"\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"416\": {\n            \"description\": \"Element not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/auctions/{auction_id}/logs\": {\n      \"get\": {\n        \"tags\": [\n          \"auctions\"\n        ],\n        \"summary\": \"Fetch auction logs\",\n        \"parameters\": [\n          {\n            \"name\": \"auction_id\",\n            \"in\": \"path\",\n            \"description\": \"ID of auction\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          },\n          {\n            \"name\": \"action_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Action whitelist\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"action_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Action blacklist\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Log\"\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/buyoffers\": {\n      \"get\": {\n        \"tags\": [\n          \"buyoffers\"\n        ],\n        \"summary\": \"Get all buyoffers.\",\n        \"description\": \"You can filter the result by specific asset / template data fields.You can add for example \u0026template_data.rarity=common to only receive results which have an attribute \\\"rarity\\\" with the value \\\"common\\\". You can query specific asset data by using \u0026immutable_data.rarity=common or \u0026mutable_data.rarity=common .If you want to query a non text type you need to specify it explicitly (defaults to text type) like data:bool.foil=true or data:number.id=4 or data:text.rarity=common. Integers which are defined greater than 32 bit (eg 64 bit) in the schema need to be queried as text.\",\n        \"parameters\": [\n          {\n            \"name\": \"state\",\n            \"in\": \"query\",\n            \"description\": \"Filter by buyoffer state (0: WAITING: Buyoffer created and pending, 1: LISTED - Buyoffer was declined, 2: CANCELED - Buyoffer was canceled, 3: SOLD - Buyoffer has been sold, 4: INVALID - Buyoffer invalid because recipient does not own all assets anymore) - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"max_assets\",\n            \"in\": \"query\",\n            \"description\": \"Max assets per listing\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"min_assets\",\n            \"in\": \"query\",\n            \"description\": \"Min assets per listing\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"show_seller_contracts\",\n            \"in\": \"query\",\n            \"description\": \"If false no seller contracts are shown except if they are in the contract whitelist\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"contract_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show these accounts even if they are contracts\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"seller_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Dont show listings from these sellers (Split multiple with \\\",\\\")\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"buyer_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Dont show listings from these buyers (Split multiple with \\\",\\\")\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"asset_id\",\n            \"in\": \"query\",\n            \"description\": \"Asset id in the offer\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"int\"\n            }\n          },\n          {\n            \"name\": \"marketplace\",\n            \"in\": \"query\",\n            \"description\": \"Filter by all sales where a certain marketplace is either taker or maker marketplace - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"maker_marketplace\",\n            \"in\": \"query\",\n            \"description\": \"Maker marketplace - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"taker_marketplace\",\n            \"in\": \"query\",\n            \"description\": \"Taker marketplace - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"symbol\",\n            \"in\": \"query\",\n            \"description\": \"Filter by symbol\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"account\",\n            \"in\": \"query\",\n            \"description\": \"Filter accounts that are either seller or buyer\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"seller\",\n            \"in\": \"query\",\n            \"description\": \"Filter by seller - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"buyer\",\n            \"in\": \"query\",\n            \"description\": \"Filter by buyer - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"min_price\",\n            \"in\": \"query\",\n            \"description\": \"Lower price limit\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"number\"\n            }\n          },\n          {\n            \"name\": \"max_price\",\n            \"in\": \"query\",\n            \"description\": \"Upper price limit\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"number\"\n            }\n          },\n          {\n            \"name\": \"min_template_mint\",\n            \"in\": \"query\",\n            \"description\": \"Min template mint\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"number\"\n            }\n          },\n          {\n            \"name\": \"max_template_mint\",\n            \"in\": \"query\",\n            \"description\": \"Max template mint\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"number\"\n            }\n          },\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"query\",\n            \"description\": \"Filter by collection name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"schema_name\",\n            \"in\": \"query\",\n            \"description\": \"Filter by schema name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"template_id\",\n            \"in\": \"query\",\n            \"description\": \"Filter by template id\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"is_transferable\",\n            \"in\": \"query\",\n            \"description\": \"Filter for transferable assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"is_burnable\",\n            \"in\": \"query\",\n            \"description\": \"Filter for burnable assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"burned\",\n            \"in\": \"query\",\n            \"description\": \"Filter for burned assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"owner\",\n            \"in\": \"query\",\n            \"description\": \"Filter by owner\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"burned\",\n            \"in\": \"query\",\n            \"description\": \"Filter by burned\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"match\",\n            \"in\": \"query\",\n            \"description\": \"Search for input in asset name on template data\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"match_immutable_name\",\n            \"in\": \"query\",\n            \"description\": \"Search for input in asset name on asset immutable data\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"match_mutable_name\",\n            \"in\": \"query\",\n            \"description\": \"Search for input in asset name on asset mutable data\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"is_transferable\",\n            \"in\": \"query\",\n            \"description\": \"Check if asset is transferable\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"is_burnable\",\n            \"in\": \"query\",\n            \"description\": \"Check if asset is burnable\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"collection_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Hide collections from result. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show only results from specific collections. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"ids\",\n            \"in\": \"query\",\n            \"description\": \"seperate multiple ids with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"lower_bound\",\n            \"in\": \"query\",\n            \"description\": \"lower bound of primary key (value included)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"upper_bound\",\n            \"in\": \"query\",\n            \"description\": \"upper bound of primary key (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"before\",\n            \"in\": \"query\",\n            \"description\": \"Only show results before this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"after\",\n            \"in\": \"query\",\n            \"description\": \"Only show results after this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Column to sort\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"created\",\n                \"updated\",\n                \"buyoffer_id\",\n                \"price\",\n                \"template_mint\"\n              ],\n              \"default\": \"created\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Buyoffer\"\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/buyoffers/{buyoffer_id}\": {\n      \"get\": {\n        \"tags\": [\n          \"buyoffers\"\n        ],\n        \"summary\": \"Get a specific buyoffer by id\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"buyoffer_id\",\n            \"description\": \"Buyoffer Id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Buyoffer\"\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"416\": {\n            \"description\": \"Element not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/buyoffers/{buyoffer_id}/logs\": {\n      \"get\": {\n        \"tags\": [\n          \"buyoffers\"\n        ],\n        \"summary\": \"Fetch buyoffer logs\",\n        \"parameters\": [\n          {\n            \"name\": \"buyoffer_id\",\n            \"in\": \"path\",\n            \"description\": \"ID of buyoffer\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          },\n          {\n            \"name\": \"action_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Action whitelist\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"action_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Action blacklist\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Log\"\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/marketplaces\": {\n      \"get\": {\n        \"tags\": [\n          \"marketplaces\"\n        ],\n        \"summary\": \"Get all registered marketplaces\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Marketplace\"\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/marketplaces/{marketplace_name}\": {\n      \"get\": {\n        \"tags\": [\n          \"marketplaces\"\n        ],\n        \"summary\": \"Get atomicmarket config\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"marketplace_name\",\n            \"description\": \"Marketplace name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Marketplace\"\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"416\": {\n            \"description\": \"Element not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/assets/{asset_id}/sales\": {\n      \"get\": {\n        \"tags\": [\n          \"assets\"\n        ],\n        \"summary\": \"Gets price history for a specific asset\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"asset_id\",\n            \"description\": \"Asset Id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"buyer\",\n            \"in\": \"query\",\n            \"description\": \"Buyer\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"seller\",\n            \"in\": \"query\",\n            \"description\": \"Seller\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"symbol\",\n            \"in\": \"query\",\n            \"description\": \"Token symbol\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order by time\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"asc\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"sale_id\": {\n                            \"type\": \"string\"\n                          },\n                          \"auction_id\": {\n                            \"type\": \"string\"\n                          },\n                          \"buyoffer_id\": {\n                            \"type\": \"string\"\n                          },\n                          \"price\": {\n                            \"type\": \"string\"\n                          },\n                          \"token_symbol\": {\n                            \"type\": \"string\"\n                          },\n                          \"token_precision\": {\n                            \"type\": \"integer\"\n                          },\n                          \"token_contract\": {\n                            \"type\": \"string\"\n                          },\n                          \"seller\": {\n                            \"type\": \"string\"\n                          },\n                          \"buyer\": {\n                            \"type\": \"string\"\n                          },\n                          \"block_time\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/prices/sales\": {\n      \"get\": {\n        \"tags\": [\n          \"pricing\"\n        ],\n        \"summary\": \"Gets price history for a template or schema\",\n        \"parameters\": [\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"query\",\n            \"description\": \"Filter by collection name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"schema_name\",\n            \"in\": \"query\",\n            \"description\": \"Filter by schema name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"template_id\",\n            \"in\": \"query\",\n            \"description\": \"Filter by template id\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"is_transferable\",\n            \"in\": \"query\",\n            \"description\": \"Filter for transferable assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"is_burnable\",\n            \"in\": \"query\",\n            \"description\": \"Filter for burnable assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"burned\",\n            \"in\": \"query\",\n            \"description\": \"Filter for burned assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"symbol\",\n            \"in\": \"query\",\n            \"description\": \"Token symbol\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"sale_id\": {\n                            \"type\": \"string\"\n                          },\n                          \"auction_id\": {\n                            \"type\": \"string\"\n                          },\n                          \"buyoffer_id\": {\n                            \"type\": \"string\"\n                          },\n                          \"template_mint\": {\n                            \"type\": \"string\"\n                          },\n                          \"price\": {\n                            \"type\": \"string\"\n                          },\n                          \"token_symbol\": {\n                            \"type\": \"string\"\n                          },\n                          \"token_precision\": {\n                            \"type\": \"integer\"\n                          },\n                          \"token_contract\": {\n                            \"type\": \"string\"\n                          },\n                          \"block_time\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/prices/sales/days\": {\n      \"get\": {\n        \"tags\": [\n          \"pricing\"\n        ],\n        \"summary\": \"Gets price history for a template or schema\",\n        \"parameters\": [\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"query\",\n            \"description\": \"Filter by collection name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"schema_name\",\n            \"in\": \"query\",\n            \"description\": \"Filter by schema name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"template_id\",\n            \"in\": \"query\",\n            \"description\": \"Filter by template id\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"is_transferable\",\n            \"in\": \"query\",\n            \"description\": \"Filter for transferable assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"is_burnable\",\n            \"in\": \"query\",\n            \"description\": \"Filter for burnable assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"burned\",\n            \"in\": \"query\",\n            \"description\": \"Filter for burned assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"symbol\",\n            \"in\": \"query\",\n            \"description\": \"Token symbol\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"average\": {\n                            \"type\": \"string\"\n                          },\n                          \"median\": {\n                            \"type\": \"string\"\n                          },\n                          \"token_symbol\": {\n                            \"type\": \"string\"\n                          },\n                          \"token_precision\": {\n                            \"type\": \"integer\"\n                          },\n                          \"token_contract\": {\n                            \"type\": \"string\"\n                          },\n                          \"time\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/prices/templates\": {\n      \"get\": {\n        \"tags\": [\n          \"pricing\"\n        ],\n        \"summary\": \"Get template price stats\",\n        \"parameters\": [\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"query\",\n            \"description\": \"Filter by collection name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"schema_name\",\n            \"in\": \"query\",\n            \"description\": \"Filter by schema name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"template_id\",\n            \"in\": \"query\",\n            \"description\": \"Filter by template id\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"is_transferable\",\n            \"in\": \"query\",\n            \"description\": \"Filter for transferable assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"is_burnable\",\n            \"in\": \"query\",\n            \"description\": \"Filter for burnable assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"burned\",\n            \"in\": \"query\",\n            \"description\": \"Filter for burned assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"symbol\",\n            \"in\": \"query\",\n            \"description\": \"Token symbol\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"token_symbol\": {\n                            \"type\": \"string\"\n                          },\n                          \"token_precision\": {\n                            \"type\": \"integer\"\n                          },\n                          \"token_contract\": {\n                            \"type\": \"string\"\n                          },\n                          \"collection_name\": {\n                            \"type\": \"string\"\n                          },\n                          \"template_id\": {\n                            \"type\": \"string\"\n                          },\n                          \"average\": {\n                            \"type\": \"string\"\n                          },\n                          \"median\": {\n                            \"type\": \"string\"\n                          },\n                          \"suggested_average\": {\n                            \"type\": \"string\"\n                          },\n                          \"suggested_median\": {\n                            \"type\": \"string\"\n                          },\n                          \"min\": {\n                            \"type\": \"string\"\n                          },\n                          \"max\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/prices/assets\": {\n      \"get\": {\n        \"tags\": [\n          \"pricing\"\n        ],\n        \"summary\": \"Gets price history for a template or schema\",\n        \"parameters\": [\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"query\",\n            \"description\": \"Filter by collection name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"schema_name\",\n            \"in\": \"query\",\n            \"description\": \"Filter by schema name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"template_id\",\n            \"in\": \"query\",\n            \"description\": \"Filter by template id\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"is_transferable\",\n            \"in\": \"query\",\n            \"description\": \"Filter for transferable assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"is_burnable\",\n            \"in\": \"query\",\n            \"description\": \"Filter for burnable assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"burned\",\n            \"in\": \"query\",\n            \"description\": \"Filter for burned assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"owner\",\n            \"in\": \"query\",\n            \"description\": \"Filter by owner\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"burned\",\n            \"in\": \"query\",\n            \"description\": \"Filter by burned\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"match\",\n            \"in\": \"query\",\n            \"description\": \"Search for input in asset name on template data\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"match_immutable_name\",\n            \"in\": \"query\",\n            \"description\": \"Search for input in asset name on asset immutable data\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"match_mutable_name\",\n            \"in\": \"query\",\n            \"description\": \"Search for input in asset name on asset mutable data\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"is_transferable\",\n            \"in\": \"query\",\n            \"description\": \"Check if asset is transferable\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"is_burnable\",\n            \"in\": \"query\",\n            \"description\": \"Check if asset is burnable\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"collection_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Hide collections from result. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show only results from specific collections. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"authorized_account\",\n            \"in\": \"query\",\n            \"description\": \"Filter for assets the provided account can edit. \",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"hide_offers\",\n            \"in\": \"query\",\n            \"description\": \"Hide assets which are used in an offer\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"collection_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Hide collections from result. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show only results from specific collections. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"ids\",\n            \"in\": \"query\",\n            \"description\": \"seperate multiple ids with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"lower_bound\",\n            \"in\": \"query\",\n            \"description\": \"lower bound of primary key (value included)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"upper_bound\",\n            \"in\": \"query\",\n            \"description\": \"upper bound of primary key (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"token_symbol\": {\n                            \"type\": \"string\"\n                          },\n                          \"token_precision\": {\n                            \"type\": \"integer\"\n                          },\n                          \"token_contract\": {\n                            \"type\": \"string\"\n                          },\n                          \"median\": {\n                            \"type\": \"string\"\n                          },\n                          \"average\": {\n                            \"type\": \"string\"\n                          },\n                          \"suggested_average\": {\n                            \"type\": \"string\"\n                          },\n                          \"suggested_median\": {\n                            \"type\": \"string\"\n                          },\n                          \"min\": {\n                            \"type\": \"string\"\n                          },\n                          \"max\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/stats/collections\": {\n      \"get\": {\n        \"tags\": [\n          \"stats\"\n        ],\n        \"summary\": \"Get market collections sorted by volume or listings\",\n        \"parameters\": [\n          {\n            \"name\": \"symbol\",\n            \"in\": \"query\",\n            \"description\": \"Token Symbol\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"ids\",\n            \"in\": \"query\",\n            \"description\": \"seperate multiple ids with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"lower_bound\",\n            \"in\": \"query\",\n            \"description\": \"lower bound of primary key (value included)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"upper_bound\",\n            \"in\": \"query\",\n            \"description\": \"upper bound of primary key (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"before\",\n            \"in\": \"query\",\n            \"description\": \"Only show results before this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"after\",\n            \"in\": \"query\",\n            \"description\": \"Only show results after this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          },\n          {\n            \"name\": \"collection_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Hide collections from result. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show only results from specific collections. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Column to sort\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"volume\",\n                \"listings\"\n              ],\n              \"default\": \"volume\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"symbol\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"token_contract\": {\n                              \"type\": \"string\"\n                            },\n                            \"token_symbol\": {\n                              \"type\": \"string\"\n                            },\n                            \"token_precision\": {\n                              \"type\": \"integer\"\n                            }\n                          }\n                        },\n                        \"results\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"contract\": {\n                                \"type\": \"string\"\n                              },\n                              \"collection_name\": {\n                                \"type\": \"string\"\n                              },\n                              \"name\": {\n                                \"type\": \"string\"\n                              },\n                              \"author\": {\n                                \"type\": \"string\"\n                              },\n                              \"allow_notify\": {\n                                \"type\": \"boolean\"\n                              },\n                              \"authorized_accounts\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                  \"type\": \"string\"\n                                }\n                              },\n                              \"notify_accounts\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                  \"type\": \"string\"\n                                }\n                              },\n                              \"market_fee\": {\n                                \"type\": \"number\"\n                              },\n                              \"data\": {\n                                \"type\": \"object\"\n                              },\n                              \"created_at_block\": {\n                                \"type\": \"string\"\n                              },\n                              \"created_at_time\": {\n                                \"type\": \"string\"\n                              },\n                              \"listings\": {\n                                \"type\": \"string\"\n                              },\n                              \"volume\": {\n                                \"type\": \"string\"\n                              },\n                              \"sales\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/stats/collections/{collection_name}\": {\n      \"get\": {\n        \"tags\": [\n          \"stats\"\n        ],\n        \"summary\": \"Get market collections sorted by volume or listings\",\n        \"parameters\": [\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"path\",\n            \"description\": \"Collection Name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"symbol\",\n            \"in\": \"query\",\n            \"description\": \"Token Symbol\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"symbol\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"token_contract\": {\n                              \"type\": \"string\"\n                            },\n                            \"token_symbol\": {\n                              \"type\": \"string\"\n                            },\n                            \"token_precision\": {\n                              \"type\": \"integer\"\n                            }\n                          }\n                        },\n                        \"results\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"contract\": {\n                                \"type\": \"string\"\n                              },\n                              \"collection_name\": {\n                                \"type\": \"string\"\n                              },\n                              \"name\": {\n                                \"type\": \"string\"\n                              },\n                              \"author\": {\n                                \"type\": \"string\"\n                              },\n                              \"allow_notify\": {\n                                \"type\": \"boolean\"\n                              },\n                              \"authorized_accounts\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                  \"type\": \"string\"\n                                }\n                              },\n                              \"notify_accounts\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                  \"type\": \"string\"\n                                }\n                              },\n                              \"market_fee\": {\n                                \"type\": \"number\"\n                              },\n                              \"data\": {\n                                \"type\": \"object\"\n                              },\n                              \"created_at_block\": {\n                                \"type\": \"string\"\n                              },\n                              \"created_at_time\": {\n                                \"type\": \"string\"\n                              },\n                              \"listings\": {\n                                \"type\": \"string\"\n                              },\n                              \"volume\": {\n                                \"type\": \"string\"\n                              },\n                              \"sales\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/stats/accounts\": {\n      \"get\": {\n        \"tags\": [\n          \"stats\"\n        ],\n        \"summary\": \"Get market collections sorted by volume or listings\",\n        \"parameters\": [\n          {\n            \"name\": \"symbol\",\n            \"in\": \"query\",\n            \"description\": \"Token Symbol\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"ids\",\n            \"in\": \"query\",\n            \"description\": \"seperate multiple ids with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"lower_bound\",\n            \"in\": \"query\",\n            \"description\": \"lower bound of primary key (value included)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"upper_bound\",\n            \"in\": \"query\",\n            \"description\": \"upper bound of primary key (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"before\",\n            \"in\": \"query\",\n            \"description\": \"Only show results before this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"after\",\n            \"in\": \"query\",\n            \"description\": \"Only show results after this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"collection_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Hide collections from result. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show only results from specific collections. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Column to sort\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"buy_volume\",\n                \"sell_volume\"\n              ],\n              \"default\": \"buy_volume\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"symbol\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"token_contract\": {\n                              \"type\": \"string\"\n                            },\n                            \"token_symbol\": {\n                              \"type\": \"string\"\n                            },\n                            \"token_precision\": {\n                              \"type\": \"integer\"\n                            }\n                          }\n                        },\n                        \"results\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"account\": {\n                                \"type\": \"string\"\n                              },\n                              \"buy_volume\": {\n                                \"type\": \"string\"\n                              },\n                              \"sell_volume\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/stats/accounts/{account}\": {\n      \"get\": {\n        \"tags\": [\n          \"stats\"\n        ],\n        \"summary\": \"Get market collections sorted by volume or listings\",\n        \"parameters\": [\n          {\n            \"name\": \"account\",\n            \"in\": \"path\",\n            \"description\": \"Account Name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"symbol\",\n            \"in\": \"query\",\n            \"description\": \"Token Symbol\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Hide collections from result. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show only results from specific collections. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"symbol\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"token_contract\": {\n                              \"type\": \"string\"\n                            },\n                            \"token_symbol\": {\n                              \"type\": \"string\"\n                            },\n                            \"token_precision\": {\n                              \"type\": \"integer\"\n                            }\n                          }\n                        },\n                        \"result\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"account\": {\n                                \"type\": \"string\"\n                              },\n                              \"buy_volume\": {\n                                \"type\": \"string\"\n                              },\n                              \"sell_volume\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/stats/schemas/{collection_name}\": {\n      \"get\": {\n        \"tags\": [\n          \"stats\"\n        ],\n        \"summary\": \"Get market schemas sorted by volume or listings\",\n        \"parameters\": [\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"path\",\n            \"description\": \"Collection Name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"symbol\",\n            \"in\": \"query\",\n            \"description\": \"Token Symbol\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"ids\",\n            \"in\": \"query\",\n            \"description\": \"seperate multiple ids with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"lower_bound\",\n            \"in\": \"query\",\n            \"description\": \"lower bound of primary key (value included)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"upper_bound\",\n            \"in\": \"query\",\n            \"description\": \"upper bound of primary key (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"before\",\n            \"in\": \"query\",\n            \"description\": \"Only show results before this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"after\",\n            \"in\": \"query\",\n            \"description\": \"Only show results after this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Column to sort\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"volume\",\n                \"listings\"\n              ],\n              \"default\": \"volume\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"symbol\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"token_contract\": {\n                              \"type\": \"string\"\n                            },\n                            \"token_symbol\": {\n                              \"type\": \"string\"\n                            },\n                            \"token_precision\": {\n                              \"type\": \"integer\"\n                            }\n                          }\n                        },\n                        \"results\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"schema_name\": {\n                                \"type\": \"string\"\n                              },\n                              \"listings\": {\n                                \"type\": \"string\"\n                              },\n                              \"volume\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/stats/graph\": {\n      \"get\": {\n        \"tags\": [\n          \"stats\"\n        ],\n        \"summary\": \"Get history of volume and\",\n        \"parameters\": [\n          {\n            \"name\": \"symbol\",\n            \"in\": \"query\",\n            \"description\": \"Token Symbol\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Hide collections from result. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show only results from specific collections. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"symbol\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"token_contract\": {\n                              \"type\": \"string\"\n                            },\n                            \"token_symbol\": {\n                              \"type\": \"string\"\n                            },\n                            \"token_precision\": {\n                              \"type\": \"integer\"\n                            }\n                          }\n                        },\n                        \"results\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"time\": {\n                                \"type\": \"string\"\n                              },\n                              \"volume\": {\n                                \"type\": \"string\"\n                              },\n                              \"sales\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/stats/sales\": {\n      \"get\": {\n        \"tags\": [\n          \"stats\"\n        ],\n        \"summary\": \"Get total sales and volume\",\n        \"parameters\": [\n          {\n            \"name\": \"symbol\",\n            \"in\": \"query\",\n            \"description\": \"Token Symbol\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Hide collections from result. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show only results from specific collections. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"symbol\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"token_contract\": {\n                              \"type\": \"string\"\n                            },\n                            \"token_symbol\": {\n                              \"type\": \"string\"\n                            },\n                            \"token_precision\": {\n                              \"type\": \"integer\"\n                            }\n                          }\n                        },\n                        \"results\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"volume\": {\n                              \"type\": \"string\"\n                            },\n                            \"sales\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/config\": {\n      \"get\": {\n        \"tags\": [\n          \"config\"\n        ],\n        \"summary\": \"Get atomicmarket config\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"atomicassets_contract\": {\n                          \"type\": \"string\"\n                        },\n                        \"atomicmarket_contract\": {\n                          \"type\": \"string\"\n                        },\n                        \"delphioracle_contract\": {\n                          \"type\": \"string\"\n                        },\n                        \"version\": {\n                          \"type\": \"string\"\n                        },\n                        \"maker_market_fee\": {\n                          \"type\": \"number\"\n                        },\n                        \"taker_market_fee\": {\n                          \"type\": \"number\"\n                        },\n                        \"minimum_auction_duration\": {\n                          \"type\": \"integer\"\n                        },\n                        \"maximum_auction_duration\": {\n                          \"type\": \"integer\"\n                        },\n                        \"minimum_bid_increase\": {\n                          \"type\": \"number\"\n                        },\n                        \"auction_reset_duration\": {\n                          \"type\": \"integer\"\n                        },\n                        \"supported_tokens\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"token_contract\": {\n                                \"type\": \"string\"\n                              },\n                              \"token_symbol\": {\n                                \"type\": \"string\"\n                              },\n                              \"token_precision\": {\n                                \"type\": \"integer\"\n                              }\n                            }\n                          }\n                        },\n                        \"supported_pairs\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"listing_symbol\": {\n                                \"type\": \"string\"\n                              },\n                              \"settlement_symbol\": {\n                                \"type\": \"string\"\n                              },\n                              \"delphi_pair_name\": {\n                                \"type\": \"string\"\n                              },\n                              \"invert_delphi_pair\": {\n                                \"type\": \"boolean\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/assets\": {\n      \"get\": {\n        \"tags\": [\n          \"assets\"\n        ],\n        \"summary\": \"Fetch assets.\",\n        \"description\": \"You can filter the result by specific asset / template data fields.You can add for example \u0026template_data.rarity=common to only receive results which have an attribute \\\"rarity\\\" with the value \\\"common\\\". You can query specific asset data by using \u0026immutable_data.rarity=common or \u0026mutable_data.rarity=common .If you want to query a non text type you need to specify it explicitly (defaults to text type) like data:bool.foil=true or data:number.id=4 or data:text.rarity=common. Integers which are defined greater than 32 bit (eg 64 bit) in the schema need to be queried as text.\",\n        \"parameters\": [\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"query\",\n            \"description\": \"Filter by collection name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"schema_name\",\n            \"in\": \"query\",\n            \"description\": \"Filter by schema name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"template_id\",\n            \"in\": \"query\",\n            \"description\": \"Filter by template id\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"is_transferable\",\n            \"in\": \"query\",\n            \"description\": \"Filter for transferable assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"is_burnable\",\n            \"in\": \"query\",\n            \"description\": \"Filter for burnable assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"burned\",\n            \"in\": \"query\",\n            \"description\": \"Filter for burned assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"owner\",\n            \"in\": \"query\",\n            \"description\": \"Filter by owner\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"burned\",\n            \"in\": \"query\",\n            \"description\": \"Filter by burned\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"match\",\n            \"in\": \"query\",\n            \"description\": \"Search for input in asset name on template data\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"match_immutable_name\",\n            \"in\": \"query\",\n            \"description\": \"Search for input in asset name on asset immutable data\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"match_mutable_name\",\n            \"in\": \"query\",\n            \"description\": \"Search for input in asset name on asset mutable data\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"is_transferable\",\n            \"in\": \"query\",\n            \"description\": \"Check if asset is transferable\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"is_burnable\",\n            \"in\": \"query\",\n            \"description\": \"Check if asset is burnable\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"collection_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Hide collections from result. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show only results from specific collections. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"only_duplicate_templates\",\n            \"in\": \"query\",\n            \"description\": \"Show only duplicate assets grouped by template\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"has_backed_tokens\",\n            \"in\": \"query\",\n            \"description\": \"Show only assets that are backed by a token\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"authorized_account\",\n            \"in\": \"query\",\n            \"description\": \"Filter for assets the provided account can edit. \",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"template_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Filter for multiple template ids split by \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"template_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Dont include specific template ids split by \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"hide_templates_by_accounts\",\n            \"in\": \"query\",\n            \"description\": \"Dont templates that are owned by an account\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"hide_offers\",\n            \"in\": \"query\",\n            \"description\": \"Hide assets which are used in an offer\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"collection_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Hide collections from result. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show only results from specific collections. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"ids\",\n            \"in\": \"query\",\n            \"description\": \"seperate multiple ids with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"lower_bound\",\n            \"in\": \"query\",\n            \"description\": \"lower bound of primary key (value included)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"upper_bound\",\n            \"in\": \"query\",\n            \"description\": \"upper bound of primary key (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"before\",\n            \"in\": \"query\",\n            \"description\": \"Only show results before this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"after\",\n            \"in\": \"query\",\n            \"description\": \"Only show results after this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Column to sort\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asset_id\",\n                \"minted\",\n                \"updated\",\n                \"transferred\",\n                \"template_mint\",\n                \"name\",\n                \"suggested_median_price\",\n                \"suggested_average_price\",\n                \"median_price\",\n                \"average_price\"\n              ],\n              \"default\": \"asset_id\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/undefined\"\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/assets/{asset_id}\": {\n      \"get\": {\n        \"tags\": [\n          \"assets\"\n        ],\n        \"summary\": \"Fetch asset by id\",\n        \"parameters\": [\n          {\n            \"name\": \"asset_id\",\n            \"in\": \"path\",\n            \"description\": \"ID of asset\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/ListingAsset\"\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"416\": {\n            \"description\": \"Element not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/assets/{asset_id}/stats\": {\n      \"get\": {\n        \"tags\": [\n          \"assets\"\n        ],\n        \"summary\": \"Fetch asset stats\",\n        \"parameters\": [\n          {\n            \"name\": \"asset_id\",\n            \"in\": \"path\",\n            \"description\": \"ID of asset\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"template_mint\": {\n                          \"type\": \"integer\"\n                        }\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/assets/{asset_id}/logs\": {\n      \"get\": {\n        \"tags\": [\n          \"assets\"\n        ],\n        \"summary\": \"Fetch asset logs\",\n        \"parameters\": [\n          {\n            \"name\": \"asset_id\",\n            \"in\": \"path\",\n            \"description\": \"ID of asset\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          },\n          {\n            \"name\": \"action_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Action whitelist\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"action_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Action blacklist\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Log\"\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/transfers\": {\n      \"get\": {\n        \"tags\": [\n          \"transfers\"\n        ],\n        \"summary\": \"Fetch transfers\",\n        \"parameters\": [\n          {\n            \"name\": \"account\",\n            \"in\": \"query\",\n            \"description\": \"Notified account (can be sender or recipient) - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sender\",\n            \"in\": \"query\",\n            \"description\": \"Transfer sender - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"recipient\",\n            \"in\": \"query\",\n            \"description\": \"Transfer recipient - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"asset_id\",\n            \"in\": \"query\",\n            \"description\": \"only transfers which contain this asset_id - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"template_id\",\n            \"in\": \"query\",\n            \"description\": \"only transfers which contain assets of this template - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"schema_name\",\n            \"in\": \"query\",\n            \"description\": \"only transfers which contain assets of this schema - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"query\",\n            \"description\": \"only transfers which contain assets of this collection - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"hide_contracts\",\n            \"in\": \"query\",\n            \"description\": \"dont show transfers from or to accounts that have code deployed\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"ids\",\n            \"in\": \"query\",\n            \"description\": \"seperate multiple ids with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"lower_bound\",\n            \"in\": \"query\",\n            \"description\": \"lower bound of primary key (value included)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"upper_bound\",\n            \"in\": \"query\",\n            \"description\": \"upper bound of primary key (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"before\",\n            \"in\": \"query\",\n            \"description\": \"Only show results before this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"after\",\n            \"in\": \"query\",\n            \"description\": \"Only show results after this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"collection_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Hide collections from result. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show only results from specific collections. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Column to sort\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"created\"\n              ],\n              \"default\": \"created\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/ListingTransfer\"\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/offers\": {\n      \"get\": {\n        \"tags\": [\n          \"offers\"\n        ],\n        \"summary\": \"Fetch offers\",\n        \"parameters\": [\n          {\n            \"name\": \"account\",\n            \"in\": \"query\",\n            \"description\": \"Notified account (can be sender or recipient) - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sender\",\n            \"in\": \"query\",\n            \"description\": \"Offer sender - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"recipient\",\n            \"in\": \"query\",\n            \"description\": \"Offer recipient - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"state\",\n            \"in\": \"query\",\n            \"description\": \"Filter by Offer State (0: PENDING - Offer created and valid, 1: INVALID - Assets are missing because ownership has changed, 2: UNKNOWN - Offer is not valid anymore, 3: ACCEPTED - Offer was accepted, 4: DECLINED - Offer was declined by recipient, 5: CANCELLED - Offer was canceled by sender) - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"is_recipient_contract\",\n            \"in\": \"query\",\n            \"description\": \"Filter offers where recipient is a contract\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"asset_id\",\n            \"in\": \"query\",\n            \"description\": \"only offers which contain this asset_id - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"template_id\",\n            \"in\": \"query\",\n            \"description\": \"only offers which contain assets of this template - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"schema_name\",\n            \"in\": \"query\",\n            \"description\": \"only offers which contain assets of this schema - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_name\",\n            \"in\": \"query\",\n            \"description\": \"only offers which contain assets of this collection - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"account_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Only offers which are sent by one of these accounts\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"account_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Exclude offers which are sent by one of these accounts\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sender_asset_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Only offers which contain these assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sender_asset_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Exclude offers which contain these assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"recipient_asset_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Only offers which contain these assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"recipient_asset_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Exclude offers which contain these assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"hide_contracts\",\n            \"in\": \"query\",\n            \"description\": \"dont show offers from or to accounts that have code deployed\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"ids\",\n            \"in\": \"query\",\n            \"description\": \"seperate multiple ids with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"lower_bound\",\n            \"in\": \"query\",\n            \"description\": \"lower bound of primary key (value included)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"upper_bound\",\n            \"in\": \"query\",\n            \"description\": \"upper bound of primary key (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"before\",\n            \"in\": \"query\",\n            \"description\": \"Only show results before this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"after\",\n            \"in\": \"query\",\n            \"description\": \"Only show results after this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"collection_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Hide collections from result. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show only results from specific collections. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Column to sort\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"created\",\n                \"updated\"\n              ],\n              \"default\": \"created\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/ListingOffer\"\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/offers/{offer_id}\": {\n      \"get\": {\n        \"tags\": [\n          \"offers\"\n        ],\n        \"summary\": \"Find offer by id\",\n        \"parameters\": [\n          {\n            \"name\": \"offer_id\",\n            \"in\": \"path\",\n            \"description\": \"ID of offer\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/ListingOffer\"\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"416\": {\n            \"description\": \"Element not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomicmarket/v1/offers/{offer_id}/logs\": {\n      \"get\": {\n        \"tags\": [\n          \"offers\"\n        ],\n        \"summary\": \"Fetch offer logs\",\n        \"parameters\": [\n          {\n            \"name\": \"offer_id\",\n            \"in\": \"path\",\n            \"description\": \"ID of offer\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          },\n          {\n            \"name\": \"action_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Action whitelist\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"action_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Action blacklist\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Log\"\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomictools/v1/links\": {\n      \"get\": {\n        \"tags\": [\n          \"links\"\n        ],\n        \"summary\": \"Get all links\",\n        \"parameters\": [\n          {\n            \"name\": \"creator\",\n            \"in\": \"query\",\n            \"description\": \"Link Creator\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"claimer\",\n            \"in\": \"query\",\n            \"description\": \"Claimer of the link if it was claimed\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"public_key\",\n            \"in\": \"query\",\n            \"description\": \"Public key which is used to share the assets\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"state\",\n            \"in\": \"query\",\n            \"description\": \"Filter by link state (0: WAITING - Link created but items were not transferred yet, 1: CREATED - Link is pending, 2: CANCELED - Creator canceled link, 3: CLAIMED - Link was claimed, ) - separate multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Hide collections from result. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"collection_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Show only results from specific collections. Split multiple with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"ids\",\n            \"in\": \"query\",\n            \"description\": \"seperate multiple ids with \\\",\\\"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"lower_bound\",\n            \"in\": \"query\",\n            \"description\": \"lower bound of primary key (value included)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"upper_bound\",\n            \"in\": \"query\",\n            \"description\": \"upper bound of primary key (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"before\",\n            \"in\": \"query\",\n            \"description\": \"Only show results before this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"after\",\n            \"in\": \"query\",\n            \"description\": \"Only show results after this timestamp in milliseconds (value excluded)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Column to sort\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"created\"\n              ],\n              \"default\": \"created\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Link\"\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomictools/v1/links/{link_id}\": {\n      \"get\": {\n        \"tags\": [\n          \"links\"\n        ],\n        \"summary\": \"Get a specific link by id\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"link_id\",\n            \"description\": \"Link Id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Link\"\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"416\": {\n            \"description\": \"Element not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomictools/v1/links/{link_id}/logs\": {\n      \"get\": {\n        \"tags\": [\n          \"links\"\n        ],\n        \"summary\": \"Fetch link logs\",\n        \"parameters\": [\n          {\n            \"name\": \"link_id\",\n            \"in\": \"path\",\n            \"description\": \"ID of link\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Results per Page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 100\n            }\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"Order direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ],\n              \"default\": \"desc\"\n            }\n          },\n          {\n            \"name\": \"action_whitelist\",\n            \"in\": \"query\",\n            \"description\": \"Action whitelist\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"action_blacklist\",\n            \"in\": \"query\",\n            \"description\": \"Action blacklist\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Log\"\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": false\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/atomictools/v1/config\": {\n      \"get\": {\n        \"tags\": [\n          \"config\"\n        ],\n        \"summary\": \"Get atomictools config\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"default\": true\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"atomictools_contract\": {\n                          \"type\": \"string\"\n                        },\n                        \"atomicassets_contract\": {\n                          \"type\": \"string\"\n                        },\n                        \"version\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"query_time\": {\n                      \"type\": \"integer\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Log\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"log_id\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"data\": {\n            \"type\": \"object\"\n          },\n          \"txid\": {\n            \"type\": \"string\"\n          },\n          \"created_at_block\": {\n            \"type\": \"string\"\n          },\n          \"created_at_time\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Asset\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"contract\": {\n            \"type\": \"string\"\n          },\n          \"asset_id\": {\n            \"type\": \"string\"\n          },\n          \"owner\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"is_transferable\": {\n            \"type\": \"boolean\"\n          },\n          \"is_burnable\": {\n            \"type\": \"boolean\"\n          },\n          \"template_mint\": {\n            \"type\": \"string\"\n          },\n          \"collection\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"collection_name\": {\n                \"type\": \"string\"\n              },\n              \"name\": {\n                \"type\": \"string\"\n              },\n              \"author\": {\n                \"type\": \"string\"\n              },\n              \"allow_notify\": {\n                \"type\": \"boolean\"\n              },\n              \"authorized_accounts\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"notify_accounts\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"market_fee\": {\n                \"type\": \"number\"\n              },\n              \"created_at_block\": {\n                \"type\": \"string\"\n              },\n              \"created_at_time\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"schema\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"schema_name\": {\n                \"type\": \"string\"\n              },\n              \"format\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              },\n              \"created_at_block\": {\n                \"type\": \"string\"\n              },\n              \"created_at_time\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"template\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"template_id\": {\n                \"type\": \"string\"\n              },\n              \"max_supply\": {\n                \"type\": \"string\"\n              },\n              \"issued_supply\": {\n                \"type\": \"string\"\n              },\n              \"is_transferable\": {\n                \"type\": \"boolean\"\n              },\n              \"is_burnable\": {\n                \"type\": \"boolean\"\n              },\n              \"immutable_data\": {\n                \"type\": \"object\"\n              },\n              \"created_at_time\": {\n                \"type\": \"string\"\n              },\n              \"created_at_block\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"backed_tokens\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"token_contract\": {\n                  \"type\": \"string\"\n                },\n                \"token_symbol\": {\n                  \"type\": \"string\"\n                },\n                \"token_precision\": {\n                  \"type\": \"integer\"\n                },\n                \"amount\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"immutable_data\": {\n            \"type\": \"object\"\n          },\n          \"mutable_data\": {\n            \"type\": \"object\"\n          },\n          \"data\": {\n            \"type\": \"object\"\n          },\n          \"burned_by_account\": {\n            \"type\": \"string\"\n          },\n          \"burned_at_block\": {\n            \"type\": \"string\"\n          },\n          \"burned_at_time\": {\n            \"type\": \"string\"\n          },\n          \"updated_at_block\": {\n            \"type\": \"string\"\n          },\n          \"updated_at_time\": {\n            \"type\": \"string\"\n          },\n          \"transferred_at_block\": {\n            \"type\": \"string\"\n          },\n          \"transferred_at_time\": {\n            \"type\": \"string\"\n          },\n          \"minted_at_block\": {\n            \"type\": \"string\"\n          },\n          \"minted_at_time\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Collection\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"contract\": {\n            \"type\": \"string\"\n          },\n          \"collection_name\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"type\": \"string\"\n          },\n          \"allow_notify\": {\n            \"type\": \"boolean\"\n          },\n          \"authorized_accounts\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"notify_accounts\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"market_fee\": {\n            \"type\": \"number\"\n          },\n          \"data\": {\n            \"type\": \"object\"\n          },\n          \"created_at_block\": {\n            \"type\": \"string\"\n          },\n          \"created_at_time\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"contract\": {\n            \"type\": \"string\"\n          },\n          \"schema_name\": {\n            \"type\": \"string\"\n          },\n          \"format\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"name\": {\n                  \"type\": \"string\"\n                },\n                \"type\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"created_at_block\": {\n            \"type\": \"string\"\n          },\n          \"created_at_time\": {\n            \"type\": \"string\"\n          },\n          \"collection\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"collection_name\": {\n                \"type\": \"string\"\n              },\n              \"name\": {\n                \"type\": \"string\"\n              },\n              \"author\": {\n                \"type\": \"string\"\n              },\n              \"allow_notify\": {\n                \"type\": \"boolean\"\n              },\n              \"authorized_accounts\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"notify_accounts\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"market_fee\": {\n                \"type\": \"number\"\n              },\n              \"created_at_block\": {\n                \"type\": \"string\"\n              },\n              \"created_at_time\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        }\n      },\n      \"Template\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"contract\": {\n            \"type\": \"string\"\n          },\n          \"template_id\": {\n            \"type\": \"string\"\n          },\n          \"max_supply\": {\n            \"type\": \"string\"\n          },\n          \"issued_supply\": {\n            \"type\": \"string\"\n          },\n          \"is_transferable\": {\n            \"type\": \"boolean\"\n          },\n          \"is_burnable\": {\n            \"type\": \"boolean\"\n          },\n          \"immutable_data\": {\n            \"type\": \"object\"\n          },\n          \"created_at_time\": {\n            \"type\": \"string\"\n          },\n          \"created_at_block\": {\n            \"type\": \"string\"\n          },\n          \"scheme\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"schema_name\": {\n                \"type\": \"string\"\n              },\n              \"format\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              },\n              \"created_at_block\": {\n                \"type\": \"string\"\n              },\n              \"created_at_time\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"collection\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"collection_name\": {\n                \"type\": \"string\"\n              },\n              \"name\": {\n                \"type\": \"string\"\n              },\n              \"author\": {\n                \"type\": \"string\"\n              },\n              \"allow_notify\": {\n                \"type\": \"boolean\"\n              },\n              \"authorized_accounts\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"notify_accounts\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"market_fee\": {\n                \"type\": \"number\"\n              },\n              \"created_at_block\": {\n                \"type\": \"string\"\n              },\n              \"created_at_time\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        }\n      },\n      \"Offer\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"contract\": {\n            \"type\": \"string\"\n          },\n          \"offer_id\": {\n            \"type\": \"string\"\n          },\n          \"sender_name\": {\n            \"type\": \"string\"\n          },\n          \"recipient_name\": {\n            \"type\": \"string\"\n          },\n          \"memo\": {\n            \"type\": \"string\"\n          },\n          \"state\": {\n            \"type\": \"integer\"\n          },\n          \"is_sender_contract\": {\n            \"type\": \"boolean\"\n          },\n          \"is_recipient_contract\": {\n            \"type\": \"boolean\"\n          },\n          \"sender_assets\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Asset\"\n            }\n          },\n          \"recipient_assets\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Asset\"\n            }\n          },\n          \"updated_at_block\": {\n            \"type\": \"string\"\n          },\n          \"updated_at_time\": {\n            \"type\": \"string\"\n          },\n          \"created_at_block\": {\n            \"type\": \"string\"\n          },\n          \"created_at_time\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Transfer\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"contract\": {\n            \"type\": \"string\"\n          },\n          \"transfer_id\": {\n            \"type\": \"string\"\n          },\n          \"sender_name\": {\n            \"type\": \"string\"\n          },\n          \"recipient_name\": {\n            \"type\": \"string\"\n          },\n          \"memo\": {\n            \"type\": \"string\"\n          },\n          \"assets\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Asset\"\n            }\n          },\n          \"created_at_block\": {\n            \"type\": \"string\"\n          },\n          \"created_at_time\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ListingAsset\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"contract\": {\n            \"type\": \"string\"\n          },\n          \"asset_id\": {\n            \"type\": \"string\"\n          },\n          \"owner\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"is_transferable\": {\n            \"type\": \"boolean\"\n          },\n          \"is_burnable\": {\n            \"type\": \"boolean\"\n          },\n          \"template_mint\": {\n            \"type\": \"string\"\n          },\n          \"collection\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"collection_name\": {\n                \"type\": \"string\"\n              },\n              \"name\": {\n                \"type\": \"string\"\n              },\n              \"author\": {\n                \"type\": \"string\"\n              },\n              \"allow_notify\": {\n                \"type\": \"boolean\"\n              },\n              \"authorized_accounts\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"notify_accounts\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"market_fee\": {\n                \"type\": \"number\"\n              },\n              \"created_at_block\": {\n                \"type\": \"string\"\n              },\n              \"created_at_time\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"schema\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"schema_name\": {\n                \"type\": \"string\"\n              },\n              \"format\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              },\n              \"created_at_block\": {\n                \"type\": \"string\"\n              },\n              \"created_at_time\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"template\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"template_id\": {\n                \"type\": \"string\"\n              },\n              \"max_supply\": {\n                \"type\": \"string\"\n              },\n              \"issued_supply\": {\n                \"type\": \"string\"\n              },\n              \"is_transferable\": {\n                \"type\": \"boolean\"\n              },\n              \"is_burnable\": {\n                \"type\": \"boolean\"\n              },\n              \"immutable_data\": {\n                \"type\": \"object\"\n              },\n              \"created_at_time\": {\n                \"type\": \"string\"\n              },\n              \"created_at_block\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"backed_tokens\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"token_contract\": {\n                  \"type\": \"string\"\n                },\n                \"token_symbol\": {\n                  \"type\": \"string\"\n                },\n                \"token_precision\": {\n                  \"type\": \"integer\"\n                },\n                \"amount\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"immutable_data\": {\n            \"type\": \"object\"\n          },\n          \"mutable_data\": {\n            \"type\": \"object\"\n          },\n          \"data\": {\n            \"type\": \"object\"\n          },\n          \"burned_by_account\": {\n            \"type\": \"string\"\n          },\n          \"burned_at_block\": {\n            \"type\": \"string\"\n          },\n          \"burned_at_time\": {\n            \"type\": \"string\"\n          },\n          \"updated_at_block\": {\n            \"type\": \"string\"\n          },\n          \"updated_at_time\": {\n            \"type\": \"string\"\n          },\n          \"transferred_at_block\": {\n            \"type\": \"string\"\n          },\n          \"transferred_at_time\": {\n            \"type\": \"string\"\n          },\n          \"minted_at_block\": {\n            \"type\": \"string\"\n          },\n          \"minted_at_time\": {\n            \"type\": \"string\"\n          },\n          \"sales\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"market_contract\": {\n                  \"type\": \"string\"\n                },\n                \"sale_id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"auctions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"market_contract\": {\n                  \"type\": \"string\"\n                },\n                \"auction_id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"prices\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"average\": {\n                  \"type\": \"string\"\n                },\n                \"market_contract\": {\n                  \"type\": \"string\"\n                },\n                \"max\": {\n                  \"type\": \"string\"\n                },\n                \"median\": {\n                  \"type\": \"string\"\n                },\n                \"min\": {\n                  \"type\": \"string\"\n                },\n                \"sales\": {\n                  \"type\": \"string\"\n                },\n                \"suggested_average\": {\n                  \"type\": \"string\"\n                },\n                \"suggested_median\": {\n                  \"type\": \"string\"\n                },\n                \"token\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"token_contract\": {\n                      \"type\": \"string\"\n                    },\n                    \"token_precision\": {\n                      \"type\": \"integer\"\n                    },\n                    \"token_symbol\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"ListingOffer\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"contract\": {\n            \"type\": \"string\"\n          },\n          \"offer_id\": {\n            \"type\": \"string\"\n          },\n          \"sender_name\": {\n            \"type\": \"string\"\n          },\n          \"recipient_name\": {\n            \"type\": \"string\"\n          },\n          \"memo\": {\n            \"type\": \"string\"\n          },\n          \"state\": {\n            \"type\": \"integer\"\n          },\n          \"is_sender_contract\": {\n            \"type\": \"boolean\"\n          },\n          \"is_recipient_contract\": {\n            \"type\": \"boolean\"\n          },\n          \"sender_assets\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ListingAsset\"\n            }\n          },\n          \"recipient_assets\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ListingAsset\"\n            }\n          },\n          \"updated_at_block\": {\n            \"type\": \"string\"\n          },\n          \"updated_at_time\": {\n            \"type\": \"string\"\n          },\n          \"created_at_block\": {\n            \"type\": \"string\"\n          },\n          \"created_at_time\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ListingTransfer\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"contract\": {\n            \"type\": \"string\"\n          },\n          \"transfer_id\": {\n            \"type\": \"string\"\n          },\n          \"sender_name\": {\n            \"type\": \"string\"\n          },\n          \"recipient_name\": {\n            \"type\": \"string\"\n          },\n          \"memo\": {\n            \"type\": \"string\"\n          },\n          \"assets\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ListingAsset\"\n            }\n          },\n          \"created_at_block\": {\n            \"type\": \"string\"\n          },\n          \"created_at_time\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Sale\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"market_contract\": {\n            \"type\": \"string\"\n          },\n          \"assets_contract\": {\n            \"type\": \"string\"\n          },\n          \"sale_id\": {\n            \"type\": \"string\"\n          },\n          \"seller\": {\n            \"type\": \"string\"\n          },\n          \"buyer\": {\n            \"type\": \"string\"\n          },\n          \"offer_id\": {\n            \"type\": \"string\"\n          },\n          \"price\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"amount\": {\n                \"type\": \"string\"\n              },\n              \"token_precision\": {\n                \"type\": \"integer\"\n              },\n              \"token_contract\": {\n                \"type\": \"string\"\n              },\n              \"token_symbol\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"listing_price\": {\n            \"type\": \"number\"\n          },\n          \"listing_symbol\": {\n            \"type\": \"string\"\n          },\n          \"assets\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Asset\"\n            }\n          },\n          \"maker_marketplace\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"taker_marketplace\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"collection\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"collection_name\": {\n                \"type\": \"string\"\n              },\n              \"name\": {\n                \"type\": \"string\"\n              },\n              \"author\": {\n                \"type\": \"string\"\n              },\n              \"allow_notify\": {\n                \"type\": \"boolean\"\n              },\n              \"authorized_accounts\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"notify_accounts\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"market_fee\": {\n                \"type\": \"number\"\n              },\n              \"created_at_block\": {\n                \"type\": \"string\"\n              },\n              \"created_at_time\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"state\": {\n            \"type\": \"integer\"\n          },\n          \"updated_at_block\": {\n            \"type\": \"string\"\n          },\n          \"updated_at_time\": {\n            \"type\": \"string\"\n          },\n          \"created_at_block\": {\n            \"type\": \"string\"\n          },\n          \"created_at_time\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Auction\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"market_contract\": {\n            \"type\": \"string\"\n          },\n          \"assets_contract\": {\n            \"type\": \"string\"\n          },\n          \"auction_id\": {\n            \"type\": \"string\"\n          },\n          \"seller\": {\n            \"type\": \"string\"\n          },\n          \"buyer\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"price\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"amount\": {\n                \"type\": \"string\"\n              },\n              \"token_precision\": {\n                \"type\": \"integer\"\n              },\n              \"token_contract\": {\n                \"type\": \"string\"\n              },\n              \"token_symbol\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"assets\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Asset\"\n            }\n          },\n          \"bids\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"number\": {\n                  \"type\": \"integer\"\n                },\n                \"account\": {\n                  \"type\": \"string\"\n                },\n                \"amount\": {\n                  \"type\": \"string\"\n                },\n                \"created_at_block\": {\n                  \"type\": \"string\"\n                },\n                \"created_at_time\": {\n                  \"type\": \"string\"\n                },\n                \"txid\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"maker_marketplace\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"taker_marketplace\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"collection\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"collection_name\": {\n                \"type\": \"string\"\n              },\n              \"name\": {\n                \"type\": \"string\"\n              },\n              \"author\": {\n                \"type\": \"string\"\n              },\n              \"allow_notify\": {\n                \"type\": \"boolean\"\n              },\n              \"authorized_accounts\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"notify_accounts\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"market_fee\": {\n                \"type\": \"number\"\n              },\n              \"created_at_block\": {\n                \"type\": \"string\"\n              },\n              \"created_at_time\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"state\": {\n            \"type\": \"integer\"\n          },\n          \"end_time\": {\n            \"type\": \"string\"\n          },\n          \"updated_at_block\": {\n            \"type\": \"string\"\n          },\n          \"updated_at_time\": {\n            \"type\": \"string\"\n          },\n          \"created_at_block\": {\n            \"type\": \"string\"\n          },\n          \"created_at_time\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Buyoffer\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"market_contract\": {\n            \"type\": \"string\"\n          },\n          \"assets_contract\": {\n            \"type\": \"string\"\n          },\n          \"buyoffer_id\": {\n            \"type\": \"string\"\n          },\n          \"seller\": {\n            \"type\": \"string\"\n          },\n          \"buyer\": {\n            \"type\": \"string\"\n          },\n          \"price\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"amount\": {\n                \"type\": \"string\"\n              },\n              \"token_precision\": {\n                \"type\": \"integer\"\n              },\n              \"token_contract\": {\n                \"type\": \"string\"\n              },\n              \"token_symbol\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"assets\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Asset\"\n            }\n          },\n          \"maker_marketplace\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"taker_marketplace\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"collection\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"collection_name\": {\n                \"type\": \"string\"\n              },\n              \"name\": {\n                \"type\": \"string\"\n              },\n              \"author\": {\n                \"type\": \"string\"\n              },\n              \"allow_notify\": {\n                \"type\": \"boolean\"\n              },\n              \"authorized_accounts\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"notify_accounts\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"market_fee\": {\n                \"type\": \"number\"\n              },\n              \"created_at_block\": {\n                \"type\": \"string\"\n              },\n              \"created_at_time\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"state\": {\n            \"type\": \"integer\"\n          },\n          \"memo\": {\n            \"type\": \"string\"\n          },\n          \"decline_memo\": {\n            \"type\": \"string\"\n          },\n          \"updated_at_block\": {\n            \"type\": \"string\"\n          },\n          \"updated_at_time\": {\n            \"type\": \"string\"\n          },\n          \"created_at_block\": {\n            \"type\": \"string\"\n          },\n          \"created_at_time\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Marketplace\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"marketplace_name\": {\n            \"type\": \"string\"\n          },\n          \"creator\": {\n            \"type\": \"string\"\n          },\n          \"created_at_block\": {\n            \"type\": \"string\"\n          },\n          \"created_at_time\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Link\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"tools_contract\": {\n            \"type\": \"string\"\n          },\n          \"assets_contract\": {\n            \"type\": \"string\"\n          },\n          \"link_id\": {\n            \"type\": \"string\"\n          },\n          \"creator\": {\n            \"type\": \"string\"\n          },\n          \"claimer\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"state\": {\n            \"type\": \"integer\"\n          },\n          \"public_key\": {\n            \"type\": \"string\"\n          },\n          \"memo\": {\n            \"type\": \"string\"\n          },\n          \"txid\": {\n            \"type\": \"string\"\n          },\n          \"assets\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Asset\"\n            }\n          },\n          \"created_at_block\": {\n            \"type\": \"string\"\n          },\n          \"created_at_time\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}\n"
		}
	},
	"Error": "parse: paths: /atomicmarket/v1/sales/templates: get: operation \"\": parameters: duplicate parameter: \"burned\" in \"query\""
}