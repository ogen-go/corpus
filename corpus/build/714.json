{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/AHRQ-CDS/AHRQ-CDS-Connect-API"
		},
		"file": {
			"name": "cds_api.yaml",
			"path": "doc/cds_api.yaml",
			"content": "openapi: 3.0.1\ninfo:\n  title: CDS Connect API\n  version: '1.1'\n  description: \u003e-\n    An API to allow authenticated users to GET, POST, and PATCH artifacts to the\n    CDS Connect repository using a simplified JSON schema. Currently file attachments\n    must either be uploaded beforehand and linked to using the JSON API File module,\n    or manually added via the CDS Connect user interface (UI).\npaths:\n  /cds_api:\n    get:\n      summary: GET the JSON schema for a CDS Connect artifact.\n      responses:\n        '200':\n          description: Respond with JSON schema\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/cds_artifact_type'\n        '400':\n          description: Bad request\n        '500':\n          description: Internal server error\n    post:\n      summary: POST a new artifact to CDS Connect\n      description: \u003e-\n        Authenticated users can create new artifacts on the CDS Connect repository\n        by POSTing valid JSON per the CDS Connect native artifact schema. Users with\n        accounts on CDS Connect must first POST their user 'name' and 'pass' to\n        /user/login?_format=json to receive a login cookie.\n      parameters:\n        - name: Cookie\n          in: header\n          required: true\n          schema:\n            type: string\n        - name: X-CSRF-Token\n          in: header\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/cds_artifact_type'\n      responses:\n        '201':\n          description: Respond with created artifact.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/cds_artifact_type'\n        '400':\n          description: Bad request\n        '500':\n          description: Internal server error\n  /cds_api/{id}:\n    get:\n      summary: \u003e-\n        Authenticated users can GET the JSON representation of the CDS artifact \n        with id number {id}. Users with accounts on CDS Connect must first POST \n        their user 'name' and 'pass' to /user/login?_format=json to receive a login \n        cookie.\n      parameters:\n        - name: Cookie\n          in: header\n          required: true\n          schema:\n            type: string\n        - name: X-CSRF-Token\n          in: header\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: The id of the CDS artifact to return.\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: \u003e-\n            Respond with JSON schema representation of the CDS artifact with id \n            number {id}.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/cds_artifact_type'\n        '400':\n          description: Bad request\n        '500':\n          description: Internal server error\n    patch:\n      summary: PATCH existing artifact with id {id} on CDS Connect.\n      description: \u003e-\n        Authenticated users can create new artifacts on the CDS Connect repository\n        by POSTing valid JSON per the CDS Connect native artifact schema. Users with\n        accounts on CDS Connect must first POST their user 'name' and 'pass' to\n        /user/login?_format=json to receive a login cookie.\n      parameters:\n        - name: Cookie\n          in: header\n          required: true\n          schema:\n            type: string\n        - name: X-CSRF-Token\n          in: header\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: The id of the CDS artifact to update.\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/cds_artifact_type'\n      responses:\n        '200':\n          description: Respond with updated artifact JSON.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/cds_artifact_type'\n        '400':\n          description: Bad request\n        '500':\n          description: Internal server error\ncomponents:\n  schemas:\n    cds_artifact_type:\n      required:\n        - title\n        - version\n        - status\n        - artifact_type\n      properties:\n        meta:\n          type: object\n          description: Optional properties to describe the CDS artifact; note that it is not possible to specify this for the request portion of POST (since POST is responsible for assigning it), but it is part of the JSON response for POST, GET, and PATCH.\n          properties:\n            node_id:\n              type: integer\n              description: Read-only number that is assigned by the repository.  This is needed for referencing an artifact in the REST API.\n              readOnly: true\n            self:\n              type: string\n              description: Read-only URI that is assigned by the repository.  This is needed for referencing the artifact in the REST API.\n              readOnly: true\n        title:\n          type: string\n          default: CDS Artifact Title\n          description: The name of the artifact\n        description:\n          type: string\n          description: A narrative description of the artifact, in plain language.\n        identifier:\n          type: string\n          description: Identifier defined by CDS Connect team for this artifact.\n          readOnly: true\n        version:\n          type: string\n          default: 0.1\n          description: Semantic Version Number for the artifact (http://semver.org/).\n        status:\n          type: string\n          default: Active\n          description: The status of the artifact (see Status Taxonomy for possible values).\n          enum: [Active, Retired, Draft, Unknown]\n        experimental:\n          type: boolean\n          description: Flag indicating whether this artifact is experimental (in early draft state, not yet intended for clinical use).\n        artifact_type:\n          type: string\n          default: Reference Information\n          description: The type of the artifact (see Artifact Type Taxonomy for possible values).\n          enum: [Alert, Data Summary, Event-Condition-Action (ECA) rule, InfoButton, Order Set, Parameter Guidance, Reference Information, Reminder, Report, Risk Assessment, Smart Documentation Form, Warning]\n        creation_date:\n          type: string\n          format: date\n          description: Date on which the artifact was created.\n          example:\n            - 2018-11-01\n        creation_and_usage:\n          type: object\n          properties:\n            license:\n              type: string\n              description: The license governing the artifactâ€™s usage (see License Taxonomy for possible values).\n            copyrights:\n              type: string\n              description: Copyright statements associated with this artifact.\n            keywords:\n              type: array\n              items:\n                type: string\n                description: User-defined keywords associated with this artifact.\n            steward:\n              type: array\n              items:\n                type: string\n                description: The steward / owner of the artifact; should correspond with the name of an Organization entity on CDS Connect.\n            publisher:\n              type: array\n              items:\n                type: string\n                description: The original publisher of the artifact; should correspond with the name of an Organization entity on CDS Connect.\n            contributors:\n              type: string\n              description: List of individuals or organizations that contributed to the development of the artifact.\n            ip_attestation:\n              type: boolean\n              description: Flag indicating that the author asserts that this artifact has been developed in compliance with the IP rights attributed to the source material.\n        organization:\n          type: object\n          properties:\n            mesh_topics:\n              type: array\n              items:\n                type: string\n                description: Topic tags derived from the National Library of Medicine 2019 Medical Subject Headings (MeSH) taxonomy.\n            knowledge_level:\n              type: string\n              description: The four levels of knowledge representation of a CDS artifact by Boxwala et al (see Knowledge Level Taxonomy for possible values).\n            related_artifacts:\n              type: array\n              items:\n                type: string\n                description: Other artifacts in the CDS repository related to this artifact; should correspond to the names of Artifact entities on CDS Connect.\n        artifact_representation:\n          type: object\n          properties:\n            triggers:\n              type: string\n              description: Triggers that should activate the artifact.\n            inclusions:\n              type: string\n              description: Lists inclusion criteria to ensure that CDS interventions are applied to only appropriate scenarios evaluated in the patient record.\n            exclusions:\n              type: string\n              description: Lists exclusion criteria to ensure that CDS interventions are not applied to individuals that should be excluded or exempt from the recommendation.\n            interventions_and_actions:\n              type: string\n              description: Lists the possible interventions and actions taken by CDS to provide information when the conditions specified in a rule are met.\n            logic_files:\n              type: array\n              items:\n                type: string\n                description: Attached documents that contain definitions or instances of the logic contained in the artifact. GET returns path to uploaded file. File upload must be accomplished using JSON API File module.\n        implementation_details:\n          type: object\n          properties:\n            engineering_details:\n              type: string\n              description: Any technical details an engineer may want to know.\n            technical_files:\n              type: array\n              items:\n                type: string\n                description: Any and all technical files associated with the artifact (e.g., CQL code, JSON files, shell scripts, etc.). GET returns path to uploaded file. File upload must be accomplished using JSON API File module.\n            miscellaneous_files:\n              type: array\n              items:\n                type: string\n                description: Any and all miscellaneous files associated with the artifact (e.g., screenshots, workflow diagrams, training materials, etc.). GET returns path to uploaded file. File upload must be accomplished using JSON API File module.\n        purpose_and_usage:\n          type: object\n          properties:\n            purpose:\n              type: string\n              description: The purpose of the artifact.\n            intended_population:\n              type: string\n              description: The intended population that the artifact applies to.\n            usage:\n              type: string\n              description: The context in which the artifact is applicable or should be used.\n            cautions:\n              type: string\n              description: Any cautions or warnings to be considered regarding the artifact.\n            test_patients:\n              type: array\n              items:\n                type: string\n                description: Sample test (artificial) patients which demonstrate features of the artifact. GET returns path to uploaded file. File upload must be accomplished using JSON API File module.\n        supporting_evidence:\n          type: object\n          properties:\n            source_description:\n              type: string\n              description: Description of the relationship between this artifact and the Source.\n            source:\n              type: string\n              description: The primary source used to create the artifact.\n            references:\n              type: string\n              description: References to external publications and resources related to the artifact.\n            artifact_decision_notes:\n              type: string\n              description: Notes describing the use of the artifact in a pilot project.\n            recommendation_statement:\n              type: array\n              items:\n                type: object\n                properties:\n                  decision_notes:\n                    type: string\n                    description: Notes describing the decisions and choices that went into the recommendation statement.\n                  quality_of_evidence:\n                    type: string\n                    description: The quality of the artifactâ€™s evidence (e.g., fair, good, poor).\n                  recommendation:\n                    type: string\n                    description: A summary of clinical recommendations supporting the artifact.\n                  strength_of_recommendation:\n                    type: string\n                    description: The strength of the artifactâ€™s recommendation.\n        repository_information:\n          type: object\n          properties:\n            approval_date:\n              type: string\n              description: The date the artifact was approved for the repository.\n              format: date\n              example:\n                - 2018-11-01\n            expiration_date:\n              type: string\n              description: The date at which artifact no longer effective.\n              format: date\n              example:\n                - 2018-11-01\n            last_review_date:\n              type: string\n              description: The date of last review.\n              format: date\n              example:\n                - 2018-11-01\n            publication_date:\n              type: string\n              description: The date that the artifact was originally published.\n              format: date\n              example:\n                - 2018-11-01\n            preview_image:\n              type: string\n              description: An image to be used as a thumbnail visualization for the artifact. GET returns path to uploaded file. File upload must be accomplished using JSON API File module.\n        testing_experience:\n          type: object\n          properties:\n            pilot_experience:\n              type: string\n              description: Description of how the artifact performed when piloted in a clinical setting (e.g., use, accuracy, impact, lessons learned).\n        coverage_requirements_discovery:\n          type: object\n          description: Fields pertaining to coverage requirements discovery (CRD) for electronic prescribing (eRx) of medication or durable medical equipment (DME).\n          properties:\n            payer:\n              type: string\n              description: The name of the payer for the medication or durable medical equipment (DME). Only applicable for coverage requirement discovery (CRD) rules.\n            code_system: \n              type: string\n              description: The name of the code system used to reference medication or durable medical equipment (DME). Only applicable for coverage requirement discovery (CRD) rules.\n            erx_code:\n              type: string\n              description: The electronic prescribing (eRx) code representing a specific piece of medication or durable medical equipment (DME). Only applicable for coverage requirement discovery (CRD) rules.\n"
		}
	},
	"Error": "parse: paths: /cds_api/{id}: get: : responses: 200: content: application/json: schema: parse schema: reference \"#/components/schemas/cds_artifact_type\": parse schema: version: parse default: expected type \"string\", got \"number\""
}