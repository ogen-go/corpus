{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/making/spring-socks"
		},
		"file": {
			"name": "doc.yml",
			"path": "user-spec/openapi/doc.yml",
			"content": "servers:\n  - description: Local\n    url: 'http://localhost:5006'\n  - url: 'https://sock-user.apps.pcfone.io'\n    description: PCF One\n  - url: 'https://sock-user.apps.cf.maki.lol'\n    description: CF for K8s\ncomponents:\n  schemas:\n    CustomerResponse:\n      title: CustomerResponse\n      type: object\n      properties:\n        username:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        email:\n          type: string\n          format: email\n        addresses:\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomerAddressResponse'\n        cards:\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomerCardResponse'\n      x-tags:\n        - Customer\n    CustomerAddressResponse:\n      title: CustomerAddressResponse\n      type: object\n      properties:\n        addressId:\n          type: string\n          format: uuid\n        number:\n          type: string\n        street:\n          type: string\n        city:\n          type: string\n        postcode:\n          type: string\n        country:\n          type: string\n      x-tags:\n        - Customer\n    CustomerCardResponse:\n      title: CustomerCardResponse\n      type: object\n      properties:\n        cardId:\n          type: string\n          format: uuid\n        longNum:\n          type: string\n        expires:\n          type: string\n          format: date\n        ccv:\n          type: string\n      x-tags:\n        - Customer\n    CustomerAddressCreateRequest:\n      title: CustomerAddressCreateRequest\n      type: object\n      properties:\n        number:\n          type: string\n        street:\n          type: string\n        city:\n          type: string\n        postcode:\n          type: string\n        country:\n          type: string\n      x-tags:\n        - Customer\n    CustomerCardCreateRequest:\n      title: CustomerCardCreateRequest\n      type: object\n      properties:\n        longNum:\n          type: string\n        expires:\n          type: string\n          format: date\n        ccv:\n          type: string\n      x-tags:\n        - Customer\n    CustomerCreateRequest:\n      title: CustomerCreateRequest\n      type: object\n      x-tags:\n        - Customer\n      properties:\n        username:\n          type: string\n        password:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        email:\n          type: string\n          format: email\n        allowDuplicateEmail:\n          type: boolean\n          default: 'false'\ninfo:\n  contact: {}\n  description: User API\n  license:\n    name: Apache 2.0\n  title: 'Spring Sock Shop: User API'\n  version: 0.1.0-SNAPSHOT\nopenapi: 3.0.1\npaths:\n  /cards:\n    parameters: []\n    post:\n      summary: Create a new card\n      operationId: post-cards\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerCardResponse'\n      description: Create a new card\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CustomerCardCreateRequest'\n      tags:\n        - Customer\n  /addresses:\n    post:\n      summary: Create a new address\n      operationId: post-addresses\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerAddressResponse'\n      description: Create a new address\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CustomerAddressCreateRequest'\n      tags:\n        - Customer\n  /me:\n    get:\n      summary: Get the logged-in user information\n      tags:\n        - Customer\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerResponse'\n      operationId: get-me\n      description: Get the logged-in user information\n  /customers:\n    post:\n      summary: Register a customer\n      operationId: create-customer\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerResponse'\n          headers:\n            Location:\n              schema:\n                type: string\n                format: uri\n      description: Create a customer\n      tags:\n        - Customer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CustomerCreateRequest'\n            examples: {}\n  '/customers/{customerId}':\n    parameters:\n      - schema:\n          type: string\n          format: uuid\n        name: customerId\n        in: path\n        required: true\n    get:\n      summary: Get a customer\n      tags:\n        - Customer\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerResponse'\n      operationId: get-customer-by-customer-id\n      description: Get a customer\n"
		}
	},
	"Error": "parse: paths: /customers: post: operation \"create-customer\": requestBody: content: \"application/json\": parse schema: parse schema: reference \"#/components/schemas/CustomerCreateRequest\": parse schema: allowDuplicateEmail: parse default: expected type \"boolean\", got \"string\""
}