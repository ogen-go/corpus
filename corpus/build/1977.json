{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/microsoft/OpenAPI.NET.OData"
		},
		"file": {
			"name": "Basic.OpenApi.yaml",
			"path": "test/Microsoft.OpenAPI.OData.Reader.Tests/Resources/Basic.OpenApi.yaml",
			"content": "openapi: 3.0.1\ninfo:\n  title: OData Service for namespace DefaultNs\n  description: This OData service is located at http://localhost\n  version: 1.0.1\nservers:\n  - url: http://localhost\npaths:\n  /City:\n    description: Provides operations to manage the collection of City entities.\n    get:\n      tags:\n        - City.City\n      summary: Get entities from City\n      operationId: City.City.ListCity\n      parameters:\n        - $ref: '#/components/parameters/top'\n        - $ref: '#/components/parameters/skip'\n        - $ref: '#/components/parameters/search'\n        - $ref: '#/components/parameters/filter'\n        - $ref: '#/components/parameters/count'\n        - name: $orderby\n          in: query\n          description: Order items by property values\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - Name\n                - Name desc\n              type: string\n        - name: $select\n          in: query\n          description: Select properties to be returned\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - Name\n              type: string\n        - name: $expand\n          in: query\n          description: Expand related entities\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - '*'\n              type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/DefaultNs.CityCollectionResponse'\n        default:\n          $ref: '#/components/responses/error'\n    post:\n      tags:\n        - City.City\n      summary: Add new entity to City\n      operationId: City.City.CreateCity\n      requestBody:\n        description: New entity\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DefaultNs.City'\n        required: true\n      responses:\n        '201':\n          description: Created entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultNs.City'\n        default:\n          $ref: '#/components/responses/error'\n      x-ms-docs-operation-type: operation\n  '/City({Name})':\n    description: Provides operations to manage the collection of City entities.\n    get:\n      tags:\n        - City.City\n      summary: Get entity from City by key\n      operationId: City.City.GetCity\n      parameters:\n        - name: Name\n          in: path\n          description: 'key: Name of City'\n          required: true\n          schema:\n            type: string\n          x-ms-docs-key-type: City\n        - name: $select\n          in: query\n          description: Select properties to be returned\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - Name\n              type: string\n        - name: $expand\n          in: query\n          description: Expand related entities\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - '*'\n              type: string\n      responses:\n        '200':\n          description: Retrieved entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultNs.City'\n        default:\n          $ref: '#/components/responses/error'\n      x-ms-docs-operation-type: operation\n    patch:\n      tags:\n        - City.City\n      summary: Update entity in City\n      operationId: City.City.UpdateCity\n      parameters:\n        - name: Name\n          in: path\n          description: 'key: Name of City'\n          required: true\n          schema:\n            type: string\n          x-ms-docs-key-type: City\n      requestBody:\n        description: New property values\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DefaultNs.City'\n        required: true\n      responses:\n        '204':\n          description: Success\n        default:\n          $ref: '#/components/responses/error'\n      x-ms-docs-operation-type: operation\n    delete:\n      tags:\n        - City.City\n      summary: Delete entity from City\n      operationId: City.City.DeleteCity\n      parameters:\n        - name: Name\n          in: path\n          description: 'key: Name of City'\n          required: true\n          schema:\n            type: string\n          x-ms-docs-key-type: City\n        - name: If-Match\n          in: header\n          description: ETag\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Success\n        default:\n          $ref: '#/components/responses/error'\n      x-ms-docs-operation-type: operation\n  /City/$count:\n    description: Provides operations to count the resources in the collection.\n    get:\n      summary: Get the number of the resource\n      operationId: Get.Count.City-8728\n      responses:\n        '200':\n          $ref: '#/components/responses/ODataCountResponse'\n        default:\n          $ref: '#/components/responses/error'\n  /CountryOrRegion:\n    description: Provides operations to manage the collection of CountryOrRegion entities.\n    get:\n      tags:\n        - CountryOrRegion.CountryOrRegion\n      summary: Get entities from CountryOrRegion\n      operationId: CountryOrRegion.CountryOrRegion.ListCountryOrRegion\n      parameters:\n        - $ref: '#/components/parameters/top'\n        - $ref: '#/components/parameters/skip'\n        - $ref: '#/components/parameters/search'\n        - $ref: '#/components/parameters/filter'\n        - $ref: '#/components/parameters/count'\n        - name: $orderby\n          in: query\n          description: Order items by property values\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - Name\n                - Name desc\n              type: string\n        - name: $select\n          in: query\n          description: Select properties to be returned\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - Name\n              type: string\n        - name: $expand\n          in: query\n          description: Expand related entities\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - '*'\n              type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/DefaultNs.CountryOrRegionCollectionResponse'\n        default:\n          $ref: '#/components/responses/error'\n    post:\n      tags:\n        - CountryOrRegion.CountryOrRegion\n      summary: Add new entity to CountryOrRegion\n      operationId: CountryOrRegion.CountryOrRegion.CreateCountryOrRegion\n      requestBody:\n        description: New entity\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DefaultNs.CountryOrRegion'\n        required: true\n      responses:\n        '201':\n          description: Created entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultNs.CountryOrRegion'\n        default:\n          $ref: '#/components/responses/error'\n      x-ms-docs-operation-type: operation\n  '/CountryOrRegion({Name})':\n    description: Provides operations to manage the collection of CountryOrRegion entities.\n    get:\n      tags:\n        - CountryOrRegion.CountryOrRegion\n      summary: Get entity from CountryOrRegion by key\n      operationId: CountryOrRegion.CountryOrRegion.GetCountryOrRegion\n      parameters:\n        - name: Name\n          in: path\n          description: 'key: Name of CountryOrRegion'\n          required: true\n          schema:\n            type: string\n          x-ms-docs-key-type: CountryOrRegion\n        - name: $select\n          in: query\n          description: Select properties to be returned\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - Name\n              type: string\n        - name: $expand\n          in: query\n          description: Expand related entities\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - '*'\n              type: string\n      responses:\n        '200':\n          description: Retrieved entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultNs.CountryOrRegion'\n        default:\n          $ref: '#/components/responses/error'\n      x-ms-docs-operation-type: operation\n    patch:\n      tags:\n        - CountryOrRegion.CountryOrRegion\n      summary: Update entity in CountryOrRegion\n      operationId: CountryOrRegion.CountryOrRegion.UpdateCountryOrRegion\n      parameters:\n        - name: Name\n          in: path\n          description: 'key: Name of CountryOrRegion'\n          required: true\n          schema:\n            type: string\n          x-ms-docs-key-type: CountryOrRegion\n      requestBody:\n        description: New property values\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DefaultNs.CountryOrRegion'\n        required: true\n      responses:\n        '204':\n          description: Success\n        default:\n          $ref: '#/components/responses/error'\n      x-ms-docs-operation-type: operation\n    delete:\n      tags:\n        - CountryOrRegion.CountryOrRegion\n      summary: Delete entity from CountryOrRegion\n      operationId: CountryOrRegion.CountryOrRegion.DeleteCountryOrRegion\n      parameters:\n        - name: Name\n          in: path\n          description: 'key: Name of CountryOrRegion'\n          required: true\n          schema:\n            type: string\n          x-ms-docs-key-type: CountryOrRegion\n        - name: If-Match\n          in: header\n          description: ETag\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Success\n        default:\n          $ref: '#/components/responses/error'\n      x-ms-docs-operation-type: operation\n  /CountryOrRegion/$count:\n    description: Provides operations to count the resources in the collection.\n    get:\n      summary: Get the number of the resource\n      operationId: Get.Count.CountryOrRegion-daf5\n      responses:\n        '200':\n          $ref: '#/components/responses/ODataCountResponse'\n        default:\n          $ref: '#/components/responses/error'\n  /Me:\n    description: Provides operations to manage the Person singleton.\n    get:\n      tags:\n        - Me.Person\n      summary: Get Me\n      operationId: Me.Person.GetPerson\n      parameters:\n        - name: $select\n          in: query\n          description: Select properties to be returned\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - UserName\n                - HomeAddress\n                - WorkAddress\n                - Addresses\n              type: string\n        - name: $expand\n          in: query\n          description: Expand related entities\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - '*'\n              type: string\n      responses:\n        '200':\n          description: Retrieved entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultNs.Person'\n        default:\n          $ref: '#/components/responses/error'\n      x-ms-docs-operation-type: operation\n    patch:\n      tags:\n        - Me.Person\n      summary: Update Me\n      operationId: Me.Person.UpdatePerson\n      requestBody:\n        description: New property values\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DefaultNs.Person'\n        required: true\n      responses:\n        '204':\n          description: Success\n        default:\n          $ref: '#/components/responses/error'\n      x-ms-docs-operation-type: operation\n  /Me/Addresses:\n    get:\n      summary: Get Addresses property value\n      operationId: Addresses.Address.ListAddress\n      parameters:\n        - $ref: '#/components/parameters/top'\n        - $ref: '#/components/parameters/skip'\n        - $ref: '#/components/parameters/search'\n        - $ref: '#/components/parameters/filter'\n        - $ref: '#/components/parameters/count'\n        - name: $orderby\n          in: query\n          description: Order items by property values\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - Id\n                - Id desc\n              type: string\n        - name: $select\n          in: query\n          description: Select properties to be returned\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - Id\n                - City\n              type: string\n        - name: $expand\n          in: query\n          description: Expand related entities\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - '*'\n                - City\n              type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/DefaultNs.AddressCollectionResponse'\n        default:\n          $ref: '#/components/responses/error'\n    patch:\n      summary: Update property Addresses value.\n      operationId: Addresses.Address.UpdateAddress\n      requestBody:\n        description: New property values\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/DefaultNs.Address'\n        required: true\n      responses:\n        '204':\n          description: Success\n        default:\n          $ref: '#/components/responses/error'\n    post:\n      summary: Sets a new value for the collection of Address.\n      operationId: Addresses.Address.SetAddress\n      parameters:\n        - name: If-Match\n          in: header\n          description: ETag\n          schema:\n            type: string\n      requestBody:\n        description: New property values\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/DefaultNs.Address'\n        required: true\n      responses:\n        '204':\n          description: Success\n        default:\n          $ref: '#/components/responses/error'\n  /Me/Addresses/$count:\n    description: Provides operations to count the resources in the collection.\n    get:\n      summary: Get the number of the resource\n      operationId: Get.Count.Addresses-3180\n      responses:\n        '200':\n          $ref: '#/components/responses/ODataCountResponse'\n        default:\n          $ref: '#/components/responses/error'\n  /Me/HomeAddress:\n    get:\n      summary: Get HomeAddress property value\n      operationId: HomeAddress.Address.GetAddress\n      parameters:\n        - name: $select\n          in: query\n          description: Select properties to be returned\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - Id\n                - City\n              type: string\n        - name: $expand\n          in: query\n          description: Expand related entities\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - '*'\n                - City\n              type: string\n      responses:\n        '200':\n          description: Result entities\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultNs.Address'\n        default:\n          $ref: '#/components/responses/error'\n    patch:\n      summary: Update property HomeAddress value.\n      operationId: HomeAddress.Address.UpdateAddress\n      requestBody:\n        description: New property values\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DefaultNs.Address'\n        required: true\n      responses:\n        '204':\n          description: Success\n        default:\n          $ref: '#/components/responses/error'\n  /Me/HomeAddress/City:\n    description: Provides operations to manage the City property of the DefaultNs.Address entity.\n    get:\n      tags:\n        - Me.City\n      summary: Get City from Me\n      operationId: Me.GetCity\n      parameters:\n        - name: $select\n          in: query\n          description: Select properties to be returned\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - Name\n              type: string\n        - name: $expand\n          in: query\n          description: Expand related entities\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - '*'\n              type: string\n      responses:\n        '200':\n          description: Retrieved navigation property\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultNs.City'\n        default:\n          $ref: '#/components/responses/error'\n      x-ms-docs-operation-type: operation\n    x-ms-docs-grouped-path:\n      - /Me/WorkAddress/City\n  /Me/WorkAddress:\n    get:\n      summary: Get WorkAddress property value\n      operationId: WorkAddress.Address.GetAddress\n      parameters:\n        - name: $select\n          in: query\n          description: Select properties to be returned\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - Id\n                - City\n              type: string\n        - name: $expand\n          in: query\n          description: Expand related entities\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - '*'\n                - City\n              type: string\n      responses:\n        '200':\n          description: Result entities\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultNs.Address'\n        default:\n          $ref: '#/components/responses/error'\n    patch:\n      summary: Update property WorkAddress value.\n      operationId: WorkAddress.Address.UpdateAddress\n      requestBody:\n        description: New property values\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DefaultNs.Address'\n        required: true\n      responses:\n        '204':\n          description: Success\n        default:\n          $ref: '#/components/responses/error'\n  /Me/WorkAddress/City:\n    description: Provides operations to manage the City property of the DefaultNs.Address entity.\n    get:\n      tags:\n        - Me.City\n      summary: Get City from Me\n      operationId: Me.GetCity\n      parameters:\n        - name: $select\n          in: query\n          description: Select properties to be returned\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - Name\n              type: string\n        - name: $expand\n          in: query\n          description: Expand related entities\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - '*'\n              type: string\n      responses:\n        '200':\n          description: Retrieved navigation property\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultNs.City'\n        default:\n          $ref: '#/components/responses/error'\n      x-ms-docs-operation-type: operation\n    x-ms-docs-grouped-path:\n      - /Me/HomeAddress/City\n  /People:\n    description: Provides operations to manage the collection of Person entities.\n    get:\n      tags:\n        - People.Person\n      summary: Get entities from People\n      description: People's description.\n      operationId: People.Person.ListPerson\n      parameters:\n        - $ref: '#/components/parameters/top'\n        - $ref: '#/components/parameters/skip'\n        - $ref: '#/components/parameters/search'\n        - $ref: '#/components/parameters/filter'\n        - $ref: '#/components/parameters/count'\n        - name: $orderby\n          in: query\n          description: Order items by property values\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - UserName\n                - UserName desc\n                - HomeAddress\n                - HomeAddress desc\n                - WorkAddress\n                - WorkAddress desc\n                - Addresses\n                - Addresses desc\n              type: string\n        - name: $select\n          in: query\n          description: Select properties to be returned\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - UserName\n                - HomeAddress\n                - WorkAddress\n                - Addresses\n              type: string\n        - name: $expand\n          in: query\n          description: Expand related entities\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - '*'\n              type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/DefaultNs.PersonCollectionResponse'\n        default:\n          $ref: '#/components/responses/error'\n    post:\n      tags:\n        - People.Person\n      summary: Add new entity to People\n      description: People's description.\n      operationId: People.Person.CreatePerson\n      requestBody:\n        description: New entity\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DefaultNs.Person'\n        required: true\n      responses:\n        '201':\n          description: Created entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultNs.Person'\n        default:\n          $ref: '#/components/responses/error'\n      x-ms-docs-operation-type: operation\n  '/People({UserName})':\n    description: Provides operations to manage the collection of Person entities.\n    get:\n      tags:\n        - People.Person\n      summary: Get entity from People by key\n      operationId: People.Person.GetPerson\n      parameters:\n        - name: UserName\n          in: path\n          description: 'key: UserName of Person'\n          required: true\n          schema:\n            type: string\n          x-ms-docs-key-type: Person\n        - name: $select\n          in: query\n          description: Select properties to be returned\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - UserName\n                - HomeAddress\n                - WorkAddress\n                - Addresses\n              type: string\n        - name: $expand\n          in: query\n          description: Expand related entities\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - '*'\n              type: string\n      responses:\n        '200':\n          description: Retrieved entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultNs.Person'\n        default:\n          $ref: '#/components/responses/error'\n      x-ms-docs-operation-type: operation\n    patch:\n      tags:\n        - People.Person\n      summary: Update entity in People\n      operationId: People.Person.UpdatePerson\n      parameters:\n        - name: UserName\n          in: path\n          description: 'key: UserName of Person'\n          required: true\n          schema:\n            type: string\n          x-ms-docs-key-type: Person\n      requestBody:\n        description: New property values\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DefaultNs.Person'\n        required: true\n      responses:\n        '204':\n          description: Success\n        default:\n          $ref: '#/components/responses/error'\n      x-ms-docs-operation-type: operation\n    delete:\n      tags:\n        - People.Person\n      summary: Delete entity from People\n      operationId: People.Person.DeletePerson\n      parameters:\n        - name: UserName\n          in: path\n          description: 'key: UserName of Person'\n          required: true\n          schema:\n            type: string\n          x-ms-docs-key-type: Person\n        - name: If-Match\n          in: header\n          description: ETag\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Success\n        default:\n          $ref: '#/components/responses/error'\n      x-ms-docs-operation-type: operation\n  '/People({UserName})/Addresses':\n    get:\n      summary: Get Addresses property value\n      operationId: Addresses.Address.ListAddress\n      parameters:\n        - name: UserName\n          in: path\n          description: 'key: UserName of Person'\n          required: true\n          schema:\n            type: string\n          x-ms-docs-key-type: Person\n        - $ref: '#/components/parameters/top'\n        - $ref: '#/components/parameters/skip'\n        - $ref: '#/components/parameters/search'\n        - $ref: '#/components/parameters/filter'\n        - $ref: '#/components/parameters/count'\n        - name: $orderby\n          in: query\n          description: Order items by property values\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - Id\n                - Id desc\n              type: string\n        - name: $select\n          in: query\n          description: Select properties to be returned\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - Id\n                - City\n              type: string\n        - name: $expand\n          in: query\n          description: Expand related entities\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - '*'\n                - City\n              type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/DefaultNs.AddressCollectionResponse'\n        default:\n          $ref: '#/components/responses/error'\n    patch:\n      summary: Update property Addresses value.\n      operationId: Addresses.Address.UpdateAddress\n      parameters:\n        - name: UserName\n          in: path\n          description: 'key: UserName of Person'\n          required: true\n          schema:\n            type: string\n          x-ms-docs-key-type: Person\n      requestBody:\n        description: New property values\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/DefaultNs.Address'\n        required: true\n      responses:\n        '204':\n          description: Success\n        default:\n          $ref: '#/components/responses/error'\n    post:\n      summary: Sets a new value for the collection of Address.\n      operationId: Addresses.Address.SetAddress\n      parameters:\n        - name: UserName\n          in: path\n          description: 'key: UserName of Person'\n          required: true\n          schema:\n            type: string\n          x-ms-docs-key-type: Person\n        - name: If-Match\n          in: header\n          description: ETag\n          schema:\n            type: string\n      requestBody:\n        description: New property values\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/DefaultNs.Address'\n        required: true\n      responses:\n        '204':\n          description: Success\n        default:\n          $ref: '#/components/responses/error'\n  '/People({UserName})/Addresses/$count':\n    description: Provides operations to count the resources in the collection.\n    get:\n      summary: Get the number of the resource\n      operationId: Get.Count.Addresses-5a5d\n      parameters:\n        - name: UserName\n          in: path\n          description: 'key: UserName of Person'\n          required: true\n          schema:\n            type: string\n          x-ms-docs-key-type: Person\n      responses:\n        '200':\n          $ref: '#/components/responses/ODataCountResponse'\n        default:\n          $ref: '#/components/responses/error'\n  '/People({UserName})/HomeAddress':\n    get:\n      summary: Get HomeAddress property value\n      operationId: HomeAddress.Address.GetAddress\n      parameters:\n        - name: UserName\n          in: path\n          description: 'key: UserName of Person'\n          required: true\n          schema:\n            type: string\n          x-ms-docs-key-type: Person\n        - name: $select\n          in: query\n          description: Select properties to be returned\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - Id\n                - City\n              type: string\n        - name: $expand\n          in: query\n          description: Expand related entities\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - '*'\n                - City\n              type: string\n      responses:\n        '200':\n          description: Result entities\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultNs.Address'\n        default:\n          $ref: '#/components/responses/error'\n    patch:\n      summary: Update property HomeAddress value.\n      operationId: HomeAddress.Address.UpdateAddress\n      parameters:\n        - name: UserName\n          in: path\n          description: 'key: UserName of Person'\n          required: true\n          schema:\n            type: string\n          x-ms-docs-key-type: Person\n      requestBody:\n        description: New property values\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DefaultNs.Address'\n        required: true\n      responses:\n        '204':\n          description: Success\n        default:\n          $ref: '#/components/responses/error'\n  '/People({UserName})/HomeAddress/City':\n    description: Provides operations to manage the City property of the DefaultNs.Address entity.\n    get:\n      tags:\n        - People.City\n      summary: Get City from People\n      operationId: People.GetCity\n      parameters:\n        - name: UserName\n          in: path\n          description: 'key: UserName of Person'\n          required: true\n          schema:\n            type: string\n          x-ms-docs-key-type: Person\n        - name: $select\n          in: query\n          description: Select properties to be returned\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - Name\n              type: string\n        - name: $expand\n          in: query\n          description: Expand related entities\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - '*'\n              type: string\n      responses:\n        '200':\n          description: Retrieved navigation property\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultNs.City'\n        default:\n          $ref: '#/components/responses/error'\n      x-ms-docs-operation-type: operation\n    x-ms-docs-grouped-path:\n      - '/People({UserName})/WorkAddress/City'\n  '/People({UserName})/WorkAddress':\n    get:\n      summary: Get WorkAddress property value\n      operationId: WorkAddress.Address.GetAddress\n      parameters:\n        - name: UserName\n          in: path\n          description: 'key: UserName of Person'\n          required: true\n          schema:\n            type: string\n          x-ms-docs-key-type: Person\n        - name: $select\n          in: query\n          description: Select properties to be returned\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - Id\n                - City\n              type: string\n        - name: $expand\n          in: query\n          description: Expand related entities\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - '*'\n                - City\n              type: string\n      responses:\n        '200':\n          description: Result entities\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultNs.Address'\n        default:\n          $ref: '#/components/responses/error'\n    patch:\n      summary: Update property WorkAddress value.\n      operationId: WorkAddress.Address.UpdateAddress\n      parameters:\n        - name: UserName\n          in: path\n          description: 'key: UserName of Person'\n          required: true\n          schema:\n            type: string\n          x-ms-docs-key-type: Person\n      requestBody:\n        description: New property values\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DefaultNs.Address'\n        required: true\n      responses:\n        '204':\n          description: Success\n        default:\n          $ref: '#/components/responses/error'\n  '/People({UserName})/WorkAddress/City':\n    description: Provides operations to manage the City property of the DefaultNs.Address entity.\n    get:\n      tags:\n        - People.City\n      summary: Get City from People\n      operationId: People.GetCity\n      parameters:\n        - name: UserName\n          in: path\n          description: 'key: UserName of Person'\n          required: true\n          schema:\n            type: string\n          x-ms-docs-key-type: Person\n        - name: $select\n          in: query\n          description: Select properties to be returned\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - Name\n              type: string\n        - name: $expand\n          in: query\n          description: Expand related entities\n          style: form\n          explode: false\n          schema:\n            uniqueItems: true\n            type: array\n            items:\n              enum:\n                - '*'\n              type: string\n      responses:\n        '200':\n          description: Retrieved navigation property\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultNs.City'\n        default:\n          $ref: '#/components/responses/error'\n      x-ms-docs-operation-type: operation\n    x-ms-docs-grouped-path:\n      - '/People({UserName})/HomeAddress/City'\n  /People/$count:\n    description: Provides operations to count the resources in the collection.\n    get:\n      summary: Get the number of the resource\n      operationId: Get.Count.People-dd8d\n      responses:\n        '200':\n          $ref: '#/components/responses/ODataCountResponse'\n        default:\n          $ref: '#/components/responses/error'\ncomponents:\n  schemas:\n    DefaultNs.Color:\n      title: Color\n      enum:\n        - Blue\n        - White\n      type: string\n      description: Enum type 'Color' description.\n    DefaultNs.Person:\n      title: Person\n      type: object\n      properties:\n        UserName:\n          type: string\n        HomeAddress:\n          $ref: '#/components/schemas/DefaultNs.Address'\n        WorkAddress:\n          $ref: '#/components/schemas/DefaultNs.Address'\n        Addresses:\n          type: array\n          items:\n            $ref: '#/components/schemas/DefaultNs.Address'\n      example:\n        UserName: string (identifier)\n        HomeAddress:\n          '@odata.type': DefaultNs.Address\n        WorkAddress:\n          '@odata.type': DefaultNs.Address\n        Addresses:\n          - '@odata.type': DefaultNs.Address\n    DefaultNs.City:\n      title: City\n      type: object\n      properties:\n        Name:\n          type: string\n      example:\n        Name: string (identifier)\n    DefaultNs.CountryOrRegion:\n      title: CountryOrRegion\n      type: object\n      properties:\n        Name:\n          type: string\n      example:\n        Name: string (identifier)\n    DefaultNs.Address:\n      title: Address\n      type: object\n      properties:\n        Id:\n          maximum: 2147483647\n          minimum: -2147483648\n          type: integer\n          format: int32\n        City:\n          $ref: '#/components/schemas/DefaultNs.City'\n      example:\n        Id: integer\n        City:\n          '@odata.type': DefaultNs.City\n    DefaultNs.WorkAddress:\n      allOf:\n        - $ref: '#/components/schemas/DefaultNs.Address'\n        - title: WorkAddress\n          type: object\n          properties:\n            CountryOrRegion:\n              $ref: '#/components/schemas/DefaultNs.CountryOrRegion'\n      example:\n        Id: integer\n        City:\n          '@odata.type': DefaultNs.City\n        CountryOrRegion:\n          '@odata.type': DefaultNs.CountryOrRegion\n    DefaultNs.ODataErrors.ODataError:\n      required:\n        - error\n      type: object\n      properties:\n        error:\n          $ref: '#/components/schemas/DefaultNs.ODataErrors.MainError'\n    DefaultNs.ODataErrors.MainError:\n      required:\n        - code\n        - message\n      type: object\n      properties:\n        code:\n          type: string\n        message:\n          type: string\n        target:\n          type: string\n          nullable: true\n        details:\n          type: array\n          items:\n            $ref: '#/components/schemas/DefaultNs.ODataErrors.ErrorDetails'\n        innererror:\n          $ref: '#/components/schemas/DefaultNs.ODataErrors.InnerError'\n    DefaultNs.ODataErrors.ErrorDetails:\n      required:\n        - code\n        - message\n      type: object\n      properties:\n        code:\n          type: string\n        message:\n          type: string\n        target:\n          type: string\n          nullable: true\n    DefaultNs.ODataErrors.InnerError:\n      type: object\n      description: The structure of this object is service-specific\n    ODataCountResponse:\n      type: integer\n      format: int32\n    DefaultNs.PersonCollectionResponse:\n      title: Collection of Person\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/DefaultNs.Person'\n    DefaultNs.CityCollectionResponse:\n      title: Collection of City\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/DefaultNs.City'\n    DefaultNs.CountryOrRegionCollectionResponse:\n      title: Collection of CountryOrRegion\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/DefaultNs.CountryOrRegion'\n    DefaultNs.AddressCollectionResponse:\n      title: Collection of DefaultNs.Address\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/DefaultNs.Address'\n  responses:\n    error:\n      description: error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DefaultNs.ODataErrors.ODataError'\n    ODataCountResponse:\n      description: The count of the resource\n      content:\n        text/plain:\n          schema:\n            $ref: '#/components/schemas/ODataCountResponse'\n    DefaultNs.PersonCollectionResponse:\n      description: Retrieved collection\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DefaultNs.PersonCollectionResponse'\n    DefaultNs.CityCollectionResponse:\n      description: Retrieved collection\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DefaultNs.CityCollectionResponse'\n    DefaultNs.CountryOrRegionCollectionResponse:\n      description: Retrieved collection\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DefaultNs.CountryOrRegionCollectionResponse'\n    DefaultNs.AddressCollectionResponse:\n      description: Retrieved collection\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DefaultNs.AddressCollectionResponse'\n  parameters:\n    top:\n      name: $top\n      in: query\n      description: Show only the first n items\n      schema:\n        minimum: 0\n        type: integer\n      example: 50\n    skip:\n      name: $skip\n      in: query\n      description: Skip the first n items\n      schema:\n        minimum: 0\n        type: integer\n    count:\n      name: $count\n      in: query\n      description: Include count of items\n      schema:\n        type: boolean\n    filter:\n      name: $filter\n      in: query\n      description: Filter items by property values\n      schema:\n        type: string\n    search:\n      name: $search\n      in: query\n      description: Search items by search phrases\n      schema:\n        type: string\n  examples:\n    DefaultNs.Person:\n      value:\n        Addresses:\n          - '@odata.type': DefaultNs.Address\n        HomeAddress:\n          '@odata.type': DefaultNs.Address\n        UserName: String (identifier)\n        WorkAddress:\n          '@odata.type': DefaultNs.Address\n    DefaultNs.City:\n      value:\n        Name: String (identifier)\n    DefaultNs.CountryOrRegion:\n      value:\n        Name: String (identifier)\n    DefaultNs.Address:\n      value:\n        City:\n          '@odata.type': DefaultNs.City\n        Id: 0\n    DefaultNs.WorkAddress:\n      value:\n        CountryOrRegion:\n          '@odata.type': DefaultNs.CountryOrRegion\ntags:\n  - name: City.City\n    x-ms-docs-toc-type: page\n  - name: CountryOrRegion.CountryOrRegion\n    x-ms-docs-toc-type: page\n  - name: Me.Person\n    x-ms-docs-toc-type: page\n  - name: Me.City\n    x-ms-docs-toc-type: page\n  - name: People.Person\n    x-ms-docs-toc-type: page\n  - name: People.City\n    x-ms-docs-toc-type: page"
		}
	},
	"Error": "parse: paths: /Me/Addresses: get: duplicate operationId: \"Addresses.Address.ListAddress\""
}