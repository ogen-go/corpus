{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/teamdigitale/api-starter-kit"
		},
		"file": {
			"name": "service-provider.yaml",
			"path": "python-flask-spid/service_provider/service-provider.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: robipolli@gmail.com\n    name: Roberto Polli\n    url: https://twitter.com/ioggstream\n  description: |\n    #### Documentazione\n    Il servizio Ora esatta ritorna l'ora del server in formato RFC5424 (syslog).\n\n    `2018-12-30T12:23:32Z`\n\n    ##### Sottosezioni\n    E' possibile utilizzare - con criterio - delle sottosezioni.\n\n    #### Note\n\n    Il servizio non richiede autenticazione, ma va' usato rispettando gli\n    header di throttling esposti in conformita' alle Linee Guida del Modello di interoperabilita'.\n\n    #### Informazioni tecniche ed esempi\n\n    Esempio:\n\n    ```\n    http http://localhost:8443/datetime/v1/echo\n    {\n      'datetime': '2018-12-30T12:23:32Z'\n    }\n    ```\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  termsOfService: http://swagger.io/terms/\n  title: Ora esatta.\n  version: 1.0.0\n  x-api-id: 00000000-0000-0000-0000-000000000000\n  x-audience:\n  - public\n  x-summary: Questo servizio ritorna la data e l'ora attuali in UTC.\nservers:\n- description: Test server\n  url: https://api.example.com/\n- description: Development server\n  url: https://localhost:8443/datetime/v1\ntags:\n- description: Retrieve informations\n  externalDocs:\n    url: http://docs.my-api.com/pet-operations.htm\n  name: public\npaths:\n  /:\n    get:\n      operationId: service_provider.index\n      responses:\n        200:\n          content:\n            text/html: {}\n          description: foo\n      summary: metadata\n  /my-attributes:\n    get:\n      operationId: service_provider.get_attrs\n      responses:\n        200:\n          content:\n            application/json: {}\n          description: Show all user attributes stored in the spid session.\n      summary: Return all passed user attributes.\n  /config:\n    get:\n      operationId: spid.get_config\n      responses:\n        200:\n          content:\n            application/json: {}\n          description: foo\n      summary: metadata\n  /echo:\n    get:\n      description: |\n        Ritorna un timestamp in formato RFC5424\n        prendendola dal server attuale.\n      operationId: service_provider.get_echo\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Timestamps'\n          description: |\n            Il server ha ritornato il timestamp.\n          headers:\n            X-RateLimit-Limit:\n              $ref: '#/components/headers/X-RateLimit-Limit'\n            X-RateLimit-Remaining:\n              $ref: '#/components/headers/X-RateLimit-Remaining'\n            X-RateLimit-Reset:\n              $ref: '#/components/headers/X-RateLimit-Reset'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '429':\n          $ref: '#/components/responses/429TooManyRequests'\n        '503':\n          $ref: '#/components/responses/503ServiceUnavailable'\n        default:\n          $ref: '#/components/responses/default'\n      summary: Ritorna un timestamp in formato RFC5424.\n      tags:\n      - public\n  /aa/attributes/{attribute}:\n    get:\n      operationId: service_provider.get_attribute_simple\n      parameters:\n        - name: attribute\n          schema:\n            type: string\n          in: path\n      responses:\n        200:\n          description: Return a given attribute, taken from the AA.\n  /aa/consent-attributes/{attribute}:\n    get:\n      summary: Ritorna un attributo che richiede un consenso dell'utente.\n      operationId: service_provider.get_attribute_consent\n      parameters:\n      - name: attribute\n        schema:\n          type: string\n        in: path\n      responses:\n        200:\n          description: Return a given attribute, taken from the AA.\n  /metadata:\n    get:\n      operationId: spid.get_metadata\n      responses:\n        200:\n          description: foo\n      summary: metadata\n  /saml:\n    get:\n      operationId: spid.get_saml\n      parameters:\n      - description: Request Login to IdP\n        in: query\n        name: sso\n        schema:\n          type: string\n      - description: Request Logout to IdP\n        in: query\n        name: slo\n        schema:\n          type: string\n      - description: Receive Logout from IdP\n        in: query\n        name: sls\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            text/html: {}\n          description: foo\n      summary: Manage the following saml operations.\n    post:\n      operationId: spid.post_saml\n      parameters:\n      - description: Receive Login from IdP\n        in: query\n        name: acs\n        schema:\n          type: string\n      - description: Request Logout to IdP\n        in: query\n        name: slo\n        schema:\n          type: string\n      - description: Receive Logout from IdP\n        in: query\n        name: sls\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            text/html: {}\n          description: foo\n      summary: Manage the following saml operations.\n  /status:\n    get:\n      description: |\n        Ritorna lo stato dell'applicazione. A scopo\n        di test, su base randomica puo' ritornare\n        un errore.\n      operationId: service_provider.get_status\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Timestamps'\n          description: |\n            Il server ha ritornato lo status. In caso di problemi\n            ritorna sempre un problem+json.\n          headers:\n            X-RateLimit-Limit:\n              $ref: '#/components/headers/X-RateLimit-Limit'\n            X-RateLimit-Remaining:\n              $ref: '#/components/headers/X-RateLimit-Remaining'\n            X-RateLimit-Reset:\n              $ref: '#/components/headers/X-RateLimit-Reset'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '429':\n          $ref: '#/components/responses/429TooManyRequests'\n        '503':\n          $ref: '#/components/responses/503ServiceUnavailable'\n        default:\n          $ref: '#/components/responses/default'\n      summary: Ritorna lo stato dell'applicazione.\n      tags:\n      - public\ncomponents:\n  headers:\n    Retry-After:\n      description: |-\n        Retry contacting the endpoint *at least* after seconds.\n        See https://tools.ietf.org/html/rfc7231#section-7.1.3\n      schema:\n        format: int32\n        type: integer\n    X-RateLimit-Limit:\n      description: The number of allowed requests in the current period\n      schema:\n        format: int32\n        type: integer\n    X-RateLimit-Remaining:\n      description: The number of remaining requests in the current period\n      schema:\n        format: int32\n        type: integer\n    X-RateLimit-Reset:\n      description: The number of seconds left in the current period\n      schema:\n        format: int32\n        type: integer\n  responses:\n    400BadRequest:\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n      description: Bad Request\n    404NotFound:\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n      description: Not Found\n    429TooManyRequests:\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n      description: Too many requests\n      headers:\n        Retry-After:\n          description: |-\n            Retry contacting the endpoint *at least* after seconds.\n            See https://tools.ietf.org/html/rfc7231#section-7.1.3\n          schema:\n            format: int32\n            type: integer\n        X-RateLimit-Limit:\n          description: The number of allowed requests in the current period\n          schema:\n            format: int32\n            type: integer\n        X-RateLimit-Remaining:\n          description: The number of remaining requests in the current period\n          schema:\n            format: int32\n            type: integer\n        X-RateLimit-Reset:\n          description: The number of seconds left in the current period\n          schema:\n            format: int32\n            type: integer\n    503ServiceUnavailable:\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n      description: Service Unavailable\n      headers:\n        Retry-After:\n          description: |-\n            Retry contacting the endpoint *at least* after seconds.\n            See https://tools.ietf.org/html/rfc7231#section-7.1.3\n          schema:\n            format: int32\n            type: integer\n    default:\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n      description: Unexpected error\n  schemas:\n    Problem:\n      properties:\n        detail:\n          description: |\n            A human readable explanation specific to this occurrence of the\n            problem.\n          example: Connection to database timed out\n          type: string\n        instance:\n          description: |\n            An absolute URI that identifies the specific occurrence of the problem.\n            It may or may not yield further information if dereferenced.\n          format: uri\n          type: string\n        status:\n          description: |\n            The HTTP status code generated by the origin server for this occurrence\n            of the problem.\n          example: 503\n          exclusiveMaximum: true\n          format: int32\n          maximum: 600\n          minimum: 100\n          type: integer\n        title:\n          description: |\n            A short, summary of the problem type. Written in english and readable\n            for engineers (usually not suited for non technical stakeholders and\n            not localized); example: Service Unavailable\n          type: string\n        type:\n          default: about:blank\n          description: |\n            An absolute URI that identifies the problem type.  When dereferenced,\n            it SHOULD provide human-readable documentation for the problem type\n            (e.g., using HTML).\n          example: https://tools.ietf.org/html/rfc7231#section-6.6.4\n          format: uri\n          type: string\n      type: object\n    Timestamps:\n      description: Un Timestamp in RFC5424\n      properties:\n        timestamp:\n          example: '2018-12-30T12:23:32Z'\n          format: date-time\n          type: string\n      type: object\n"
		}
	},
	"Error": "parse: paths: /aa/consent-attributes/{attribute}: get: service_provider.get_attribute_consent: parameters: parse parameter \"attribute\": path parameters must be required"
}