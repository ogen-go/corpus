{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/jina-ai/api"
		},
		"file": {
			"name": "2.0.0rc7.json",
			"path": "rest/2.0.0rc7.json",
			"content": "{\"openapi\": \"3.0.2\", \"info\": {\"title\": \"My Jina Service\", \"description\": \"This is my awesome service. You can set `title` and `description` in your `Flow` or `Gateway` to customize this text.\", \"version\": \"2.0.0rc7\", \"x-logo\": {\"url\": \"https://api.jina.ai/logo/logo-product/jina-core/horizontal-layout/colored/Product%20logo_Core_vertical_colorful%402x-margin.png\"}}, \"paths\": {\"/status\": {\"get\": {\"tags\": [\"Debug\"], \"summary\": \"Get the status of Jina service\", \"description\": \"Get the status of this Jina service.\\n\\nThis is equivalent to running `jina -vf` from command line.\\n\\n.. # noqa: DAR201\", \"operationId\": \"_status_status_get\", \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/JinaStatusModel\"}}}}}}}, \"/post\": {\"post\": {\"tags\": [\"Debug\"], \"summary\": \"Post a data request to some endpoint\", \"description\": \"Post a data request to some endpoint.\\n\\nThis is equivalent to the following:\\n\\n    from jina import Flow\\n\\n    f = Flow().add(...)\\n\\n    with f:\\n        f.post(endpoint, ...)\\n\\n.. # noqa: DAR201\\n.. # noqa: DAR101\", \"operationId\": \"post_post_post\", \"requestBody\": {\"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/JinaRequestModel\"}}}, \"required\": true}, \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/JinaRequestModel\"}}}}, \"422\": {\"description\": \"Validation Error\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/HTTPValidationError\"}}}}}}}, \"/index\": {\"post\": {\"tags\": [\"CRUD\"], \"summary\": \"Post data requests to the Flow. Executors with `@requests(on=\\\"/index\\\")` will respond.\", \"operationId\": \"_index_index_post\", \"requestBody\": {\"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/JinaRequestModel\"}}}, \"required\": true}, \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/JinaRequestModel\"}}}}, \"422\": {\"description\": \"Validation Error\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/HTTPValidationError\"}}}}}}}, \"/search\": {\"post\": {\"tags\": [\"CRUD\"], \"summary\": \"Post data requests to the Flow. Executors with `@requests(on=\\\"/search\\\")` will respond.\", \"operationId\": \"_search_search_post\", \"requestBody\": {\"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/JinaRequestModel\"}}}, \"required\": true}, \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/JinaRequestModel\"}}}}, \"422\": {\"description\": \"Validation Error\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/HTTPValidationError\"}}}}}}}, \"/delete\": {\"delete\": {\"tags\": [\"CRUD\"], \"summary\": \"Post data requests to the Flow. Executors with `@requests(on=\\\"/delete\\\")` will respond.\", \"operationId\": \"_delete_delete_delete\", \"requestBody\": {\"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/JinaRequestModel\"}}}, \"required\": true}, \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/JinaRequestModel\"}}}}, \"422\": {\"description\": \"Validation Error\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/HTTPValidationError\"}}}}}}}, \"/update\": {\"put\": {\"tags\": [\"CRUD\"], \"summary\": \"Post data requests to the Flow. Executors with `@requests(on=\\\"/update\\\")` will respond.\", \"operationId\": \"_update_update_put\", \"requestBody\": {\"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/JinaRequestModel\"}}}, \"required\": true}, \"responses\": {\"200\": {\"description\": \"Successful Response\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/JinaRequestModel\"}}}}, \"422\": {\"description\": \"Validation Error\", \"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/HTTPValidationError\"}}}}}}}}, \"components\": {\"schemas\": {\"DataInputType\": {\"title\": \"DataInputType\", \"enum\": [0, 1, 2], \"type\": \"integer\", \"description\": \"Data input type in the request generator.\"}, \"DenseNdArrayProto\": {\"title\": \"DenseNdArrayProto\", \"type\": \"object\", \"properties\": {\"buffer\": {\"title\": \"Buffer\", \"type\": \"string\", \"format\": \"binary\", \"default\": \"\"}, \"shape\": {\"title\": \"Shape\", \"type\": \"array\", \"items\": {\"type\": \"integer\"}, \"default\": []}, \"dtype\": {\"title\": \"Dtype\", \"type\": \"string\", \"default\": \"\"}, \"quantization\": {\"allOf\": [{\"$ref\": \"#/components/schemas/QuantizationMode\"}], \"default\": 0}, \"maxVal\": {\"title\": \"Maxval\", \"type\": \"number\", \"default\": 0.0}, \"minVal\": {\"title\": \"Minval\", \"type\": \"number\", \"default\": 0.0}, \"scale\": {\"title\": \"Scale\", \"type\": \"number\", \"default\": 0.0}, \"originalDtype\": {\"title\": \"Originaldtype\", \"type\": \"string\", \"default\": \"\"}}}, \"DocumentProto\": {\"title\": \"DocumentProto\", \"type\": \"object\", \"properties\": {\"id\": {\"title\": \"Id\", \"type\": \"string\", \"default\": \"\"}, \"contentHash\": {\"title\": \"Contenthash\", \"type\": \"string\", \"default\": \"\"}, \"granularity\": {\"title\": \"Granularity\", \"type\": \"integer\", \"default\": 0}, \"adjacency\": {\"title\": \"Adjacency\", \"type\": \"integer\", \"default\": 0}, \"parentId\": {\"title\": \"Parentid\", \"type\": \"string\", \"default\": \"\"}, \"buffer\": {\"title\": \"Buffer\", \"type\": \"string\", \"format\": \"binary\", \"default\": \"\"}, \"blob\": {\"$ref\": \"#/components/schemas/NdArrayProto\"}, \"text\": {\"title\": \"Text\", \"type\": \"string\", \"default\": \"\"}, \"uri\": {\"title\": \"Uri\", \"type\": \"string\", \"default\": \"\"}, \"graph\": {\"$ref\": \"#/components/schemas/GraphProto\"}, \"chunks\": {\"title\": \"Chunks\", \"type\": \"array\", \"items\": {\"$ref\": \"#/components/schemas/DocumentProto\"}, \"default\": []}, \"weight\": {\"title\": \"Weight\", \"type\": \"number\", \"default\": 0.0}, \"matches\": {\"title\": \"Matches\", \"type\": \"array\", \"items\": {\"$ref\": \"#/components/schemas/DocumentProto\"}, \"default\": []}, \"mimeType\": {\"title\": \"Mimetype\", \"type\": \"string\", \"default\": \"\"}, \"tags\": {\"title\": \"Tags\", \"type\": \"object\", \"default\": {}}, \"location\": {\"title\": \"Location\", \"type\": \"array\", \"items\": {\"type\": \"integer\"}, \"default\": []}, \"offset\": {\"title\": \"Offset\", \"type\": \"integer\", \"default\": 0}, \"embedding\": {\"$ref\": \"#/components/schemas/NdArrayProto\"}, \"scores\": {\"$ref\": \"#/components/schemas/NamedScoreMappingProto\"}, \"modality\": {\"title\": \"Modality\", \"type\": \"string\", \"default\": \"\"}, \"evaluations\": {\"$ref\": \"#/components/schemas/NamedScoreMappingProto\"}}}, \"GraphProto\": {\"title\": \"GraphProto\", \"type\": \"object\", \"properties\": {\"adjacency\": {\"$ref\": \"#/components/schemas/SparseNdArrayProto\"}, \"edgeFeatures\": {\"title\": \"Edgefeatures\", \"type\": \"object\", \"default\": {}}, \"undirected\": {\"title\": \"Undirected\", \"type\": \"boolean\", \"default\": false}}}, \"HTTPValidationError\": {\"title\": \"HTTPValidationError\", \"type\": \"object\", \"properties\": {\"detail\": {\"title\": \"Detail\", \"type\": \"array\", \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"}}}}, \"JinaRequestModel\": {\"title\": \"JinaRequestModel\", \"type\": \"object\", \"properties\": {\"exec_endpoint\": {\"title\": \"Exec Endpoint\", \"type\": \"string\"}, \"data\": {\"title\": \"Data\", \"anyOf\": [{\"type\": \"array\", \"items\": {\"$ref\": \"#/components/schemas/DocumentProto\"}}, {\"type\": \"array\", \"items\": {\"type\": \"object\"}}, {\"type\": \"array\", \"items\": {\"type\": \"string\"}}, {\"type\": \"array\", \"items\": {\"type\": \"string\", \"format\": \"binary\"}}], \"example\": [{\"id\": \"490c4d98-d1c3-11eb-89f8-ffc0110d3c89\", \"content_hash\": \"\", \"granularity\": 0, \"adjacency\": 0, \"parent_id\": \"\", \"chunks\": [], \"weight\": 0.0, \"matches\": [], \"mime_type\": \"\", \"location\": [], \"offset\": 0, \"modality\": \"\"}]}, \"request_size\": {\"title\": \"Request Size\", \"type\": \"integer\", \"default\": 100}, \"data_type\": {\"allOf\": [{\"$ref\": \"#/components/schemas/DataInputType\"}], \"default\": 0}, \"target_peapod\": {\"title\": \"Target Peapod\", \"type\": \"string\"}, \"parameters\": {\"title\": \"Parameters\", \"type\": \"object\"}}, \"description\": \"Jina request model on some endpoint\\n\\nThe base model for Jina HTTP request.\"}, \"JinaStatusModel\": {\"title\": \"JinaStatusModel\", \"required\": [\"jina\", \"envs\", \"used_memory\"], \"type\": \"object\", \"properties\": {\"jina\": {\"title\": \"Jina\", \"type\": \"object\"}, \"envs\": {\"title\": \"Envs\", \"type\": \"object\"}, \"used_memory\": {\"title\": \"Used Memory\", \"type\": \"string\"}}, \"description\": \"Pydantic BaseModel for Jina status, used as the response model in REST app.\"}, \"NamedScoreMappingProto\": {\"title\": \"NamedScoreMappingProto\", \"type\": \"object\", \"properties\": {\"values\": {\"title\": \"Values\", \"type\": \"array\", \"items\": {\"$ref\": \"#/components/schemas/ValuesEntry\"}, \"default\": []}}}, \"NamedScoreProto\": {\"title\": \"NamedScoreProto\", \"type\": \"object\", \"properties\": {\"value\": {\"title\": \"Value\", \"type\": \"number\", \"default\": 0.0}, \"opName\": {\"title\": \"Opname\", \"type\": \"string\", \"default\": \"\"}, \"description\": {\"title\": \"Description\", \"type\": \"string\", \"default\": \"\"}, \"operands\": {\"title\": \"Operands\", \"type\": \"array\", \"items\": {\"$ref\": \"#/components/schemas/NamedScoreProto\"}, \"default\": []}, \"refId\": {\"title\": \"Refid\", \"type\": \"string\", \"default\": \"\"}}}, \"NdArrayProto\": {\"title\": \"NdArrayProto\", \"type\": \"object\", \"properties\": {\"dense\": {\"$ref\": \"#/components/schemas/DenseNdArrayProto\"}, \"sparse\": {\"$ref\": \"#/components/schemas/SparseNdArrayProto\"}}}, \"QuantizationMode\": {\"title\": \"QuantizationMode\", \"enum\": [0, 1, 2], \"description\": \"An enumeration.\"}, \"SparseNdArrayProto\": {\"title\": \"SparseNdArrayProto\", \"type\": \"object\", \"properties\": {\"indices\": {\"$ref\": \"#/components/schemas/DenseNdArrayProto\"}, \"values\": {\"$ref\": \"#/components/schemas/DenseNdArrayProto\"}, \"shape\": {\"title\": \"Shape\", \"type\": \"array\", \"items\": {\"type\": \"integer\"}, \"default\": []}}}, \"ValidationError\": {\"title\": \"ValidationError\", \"required\": [\"loc\", \"msg\", \"type\"], \"type\": \"object\", \"properties\": {\"loc\": {\"title\": \"Location\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}, \"msg\": {\"title\": \"Message\", \"type\": \"string\"}, \"type\": {\"title\": \"Error Type\", \"type\": \"string\"}}}, \"ValuesEntry\": {\"title\": \"ValuesEntry\", \"type\": \"object\", \"properties\": {\"key\": {\"title\": \"Key\", \"type\": \"string\", \"default\": \"\"}, \"value\": {\"$ref\": \"#/components/schemas/NamedScoreProto\"}}}}}, \"tags\": [{\"name\": \"Debug\", \"description\": \"Debugging interface. In production, you should hide them by setting `--no-debug-endpoints` in `Flow`/`Gateway`.\"}, {\"name\": \"CRUD\", \"description\": \"CRUD interface. If your service does not implement those interfaces, you can should hide them by setting `--no-crud-endpoints` in `Flow`/`Gateway`.\"}], \"servers\": [{\"url\": \"http://localhost:60263\", \"description\": \"Local Jina gateway\"}]}"
		}
	},
	"Error": "parse: paths: /delete: delete: _delete_delete_delete: requestBody: content: application/json: parse schema: parse schema: reference \"#/components/schemas/JinaRequestModel\": parse schema: data: parse schema: anyOf: [0]: parse schema: item: parse schema: reference \"#/components/schemas/DocumentProto\": parse schema: blob: parse schema: reference \"#/components/schemas/NdArrayProto\": parse schema: dense: parse schema: reference \"#/components/schemas/DenseNdArrayProto\": parse schema: quantization: parse default: unexpected type: \"\""
}