{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ubclaunchpad/inertia"
		},
		"file": {
			"name": "swagger.yml",
			"path": "docs/tip/api/swagger.yml",
			"content": "openapi: 3.0.0\n\ninfo:\n  version: 0.6.1\n  title: Inertia Daemon API Reference\n  description: |\n\n    This is the reference documentation for the Inertia daemon's REST API.\n\n    # About Inertia\n\n    For a more general usage guide, check out the\n    [Inertia Usage Guide](https://inertia.ubclaunchpad.com). A\n    [CLI reference](https://inertia.ubclaunchpad.com/cli) is also available.\n\n    If you find any issues, please feel free to\n    [open an issue](https://github.com/ubclaunchpad/inertia/issues/new/choose)!\n\n    # Request Authentication\n\n    Inertia issues JWTs for request authentication. Using the CLI, a persistent\n    key is generated - for general use, you should\n    [create a user and log in](https://inertia.ubclaunchpad.com/api/#tag/Authentication)\n    to receive a user-specific JWT.\n\n    \u003csecurity-definitions /\u003e \n  contact:\n    name: UBC Launch Pad\n    email: team@ubclaunchpad.com\n    url: https://github.com/ubclaunchpad/inertia\n  license:\n    name: MIT\n    url: https://github.com/ubclaunchpad/inertia/blob/master/LICENSE\n  x-logo:\n    url: 'https://github.com/ubclaunchpad/inertia/blob/master/.static/inertia.png?raw=true'\n    altText: Inertia logo\n\nx-tagGroups:\n  - name: API\n    tags: [ Deployment, Monitoring, Authentication ]\n\nservers:\n  - url: https://$DAEMON_ADDR:$DAEMON_PORT\n\npaths:\n\n  /up:\n    post:\n      summary: Start up project\n      description: Build and deploy your project\n      tags: [ Deployment ]\n      security: [ bearer_auth: [] ]\n      externalDocs:\n        description: Repository configuration\n        url: https://inertia.ubclaunchpad.com/#configuring-your-repository\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                stream:\n                  type: boolean\n                  description: Whether or not to stream log output \n                project:\n                  type: string\n                build_type:\n                  type: string\n                build_file_path:\n                  type: string\n                git_options:\n                  type: object\n                  properties:\n                    remote:\n                      type: string\n                    branch:\n                      type: string\n                webhook_secret:\n                  type: string\n      responses:\n        201:\n          description: 'Project deployment successfully started'\n          content:\n            text/plain:\n              type: string\n              example: |\n                No deployment detected\n                Setting up project...\n                Cloning branch dev from git@github.com:example/example.git...\n        4XX,5XX:\n          $ref: '#/components/responses/Error'\n\n  /down:\n    post:\n      summary: Shut down project\n      description: Shuts down project containers\n      tags: [ Deployment ]\n      security: [ bearer_auth: [] ]\n      responses:\n        200:\n          $ref: '#/components/responses/OK'\n        4XX,5XX:\n          $ref: '#/components/responses/Error'\n\n  /reset:\n    post:\n      summary: Remove project\n      description: Reset daemon and remove project from deployment\n      tags: [ Deployment ]\n      security: [ bearer_auth: [] ]\n      responses:\n        200:\n          $ref: '#/components/responses/OK'\n        4XX,5XX:\n          $ref: '#/components/responses/Error'\n\n  /env:\n    post:\n      summary: Update environment variables\n      description: Set environment variables\n      tags: [ Deployment ]\n      security: [ bearer_auth: [] ]\n      externalDocs:\n        description: Secrets management\n        url: https://inertia.ubclaunchpad.com/#secrets-management\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required: [ name, value ]\n              properties:\n                name:\n                  type: string\n                value:\n                  type: string\n                encrypt:\n                  type: boolean\n                remove:\n                  type: boolean\n      responses:\n        202:\n          $ref: '#/components/responses/OK'\n        4XX,5XX:\n          $ref: '#/components/responses/Error'\n    get:\n      summary: Retrieve environment variables\n      description: Retrieve configured environment variables\n      tags: [ Deployment ]\n      security: [ bearer_auth: [] ]\n      responses:\n        200:\n          description: Success!\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/OKResponse'\n                  - type: object\n                    required: [ data ]\n                    properties:\n                      data:\n                        type: object\n                        required: [ variables ]\n                        properties:\n                          variables:\n                            type: array\n                            items:\n                              type: string\n                            example: [ KEY1=VAL1, KEY2=VAL2 ]\n                            description: all currently set environment variables in KEY=VALUE pairs\n        4XX,5XX:\n          $ref: '#/components/responses/Error'\n\n  /webhook:\n    post:\n      summary: Webhooks\n      description: Accepts incoming payloads from Git hosts (GitHub, GitLab, and Bitbucket)\n      tags: [ Deployment ]\n      externalDocs:\n        description: Repository configuration\n        url: https://inertia.ubclaunchpad.com/#configuring-your-repository\n      responses:\n        202:\n          $ref: '#/components/responses/OK'\n        4XX,5XX:\n          $ref: '#/components/responses/Error'\n\n  # monitoring\n\n  /:\n    get:\n      summary: Daemon healthcheck\n      description: Returns OK if daemon is online and ready\n      tags: [ Monitoring ]\n      responses:\n        200:\n          description: Daemon is online\n          content:\n            text/plain:\n              type: string\n              example: Hello world!\n\n  /status:\n    get:\n      summary: Deployment status check\n      description: Check the status of your Inertia deployment\n      tags: [ Deployment, Monitoring ]\n      security: [ bearer_auth: [] ]\n      externalDocs:\n        description: Deployment monitoring\n        url: https://inertia.ubclaunchpad.com/#monitoring\n      responses:\n        200:\n          description: Success!\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/OKResponse'\n                  - type: object\n                    required: [ data ]\n                    properties:\n                      data:\n                        type: object\n                        required: [ version ]\n                        properties:\n                          version:\n                            type: string\n                            description: Inertia daemon version\n                          branch:\n                            type: string\n                            description: Currently deployed project branch\n                          commit_hash:\n                            type: string\n                          commit_message:\n                            type: string\n                          build_type:\n                            type: string\n                          containers:\n                            type: array\n                            items:\n                              type: string\n                            example: [ /docker-compose, /server ]\n                          build_active:\n                            type: boolean\n                          new_version_available:\n                            type: string\n        4XX,5XX:\n          $ref: '#/components/responses/Error'\n\n  /logs:\n    get:\n      summary: View deployment logs\n      description: View logs of the Inertia daemon or project containers\n      tags: [ Deployment, Monitoring ]\n      security: [ bearer_auth: [] ]\n      externalDocs:\n        description: Deployment monitoring\n        url: https://inertia.ubclaunchpad.com/#monitoring\n      parameters:\n        - in: query\n          name: container\n          schema:\n            type: string\n          description: Name of container to fetch logs for - leave blank for Inertia daemon logs\n          example: /docker-compose\n        - in: query\n          name: stream\n          schema:\n            type: boolean\n          description: Whether or not to upgrade connection to a websocket\n          example: true\n        - in: query\n          name: entries\n          schema:\n            type: integer\n          description: Number of lines of logs to fetch (default 500)\n          example: 500\n      responses:\n        200:\n          description: Success!\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/OKResponse'\n                  - type: object\n                    required: [ data ]\n                    properties:\n                      data:\n                        type: object\n                        required: [ token ]\n                        properties:\n                          token:\n                            type: array\n                            items:\n                              type: string\n                            description: Array of log entries\n                            example:\n                              - No deployment detected\n                              - Setting up project...\n                              - Cloning branch dev from git@github.com:example/example.git...\n        4XX,5XX:\n          $ref: '#/components/responses/Error'           \n\n  # auth\n\n  /user/validate:\n    get:\n      summary: Validate JWT\n      description: Validate your JWT\n      tags: [ Authentication ]\n      security: [ bearer_auth: [] ]\n      responses:\n        200:\n          $ref: '#/components/responses/OK'\n        4XX,5XX:\n          $ref: '#/components/responses/Error'\n\n  /user/login:\n    post:\n      summary: Log in as user\n      description: Authenticate as a user to Inertia daemon\n      tags: [ Authentication ]\n      security: [ bearer_auth: [] ]\n      externalDocs:\n        description: Team management\n        url: https://inertia.ubclaunchpad.com/#teams\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                username:\n                  type: string\n                password:\n                  type: string\n                totp:\n                  type: string\n      responses:\n        200:\n          description: Success!\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/OKResponse'\n                  - type: object\n                    required: [ data ]\n                    properties:\n                      data:\n                        type: object\n                        required: [ token ]\n                        properties:\n                          token:\n                            type: string\n                            example: abcdefg\n                            description: JWT for API access\n        4XX,5XX:\n          $ref: '#/components/responses/Error'\n\n  /user/list:\n    get:\n      summary: List users\n      description: List all currently registered users on the Inertia daemon\n      tags: [ Authentication ]\n      security: [ bearer_auth: [admin:true] ]\n      externalDocs:\n        description: Team management\n        url: https://inertia.ubclaunchpad.com/#teams\n      responses:\n        200:\n          description: Success!\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/OKResponse'\n                  - type: object\n                    required: [ data ]\n                    properties:\n                      data:\n                        type: object\n                        required: [ users ]\n                        properties:\n                          users:\n                            type: array\n                            items:\n                              type: string\n                            example: [ bobheadxi, mRabitsky, seifghazi, terryz21, theblackathena, yaoharry ]\n                            description: list of currently registered users\n        4XX,5XX:\n          $ref: '#/components/responses/Error'\n\n  /user/add:\n    post:\n      summary: Add user\n      description: Register a new user in the Inertia daemon\n      tags: [ Authentication ]\n      security: [ bearer_auth: [admin:true] ]\n      externalDocs:\n        description: Team management\n        url: https://inertia.ubclaunchpad.com/#teams\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required: [ username, password ]\n              properties:\n                username:\n                  type: string\n                password:\n                  type: string\n                admin:\n                  type: boolean\n      responses:\n        201:\n          $ref: '#/components/responses/OK'\n        4XX,5XX:\n          $ref: '#/components/responses/Error'\n\n  /user/remove:\n    post:\n      summary: Remove user\n      description: Unregister a user from the Inertia daemon\n      tags: [ Authentication ]\n      security: [ bearer_auth: [admin:true] ]\n      externalDocs:\n        description: Team management\n        url: https://inertia.ubclaunchpad.com/#teams\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required: [ username ]\n              properties:\n                username:\n                  type: string\n      responses:\n        200:\n          $ref: '#/components/responses/OK'\n        4XX,5XX:\n          $ref: '#/components/responses/Error'\n\n  /user/reset:\n    post:\n      summary: Reset all users\n      description: Remove all users from the Inertia daemon\n      tags: [ Authentication ]\n      security: [ bearer_auth: [admin:true] ]\n      externalDocs:\n        description: Team management\n        url: https://inertia.ubclaunchpad.com/#teams\n      responses:\n        200:\n          $ref: '#/components/responses/OK'\n        4XX,5XX:\n          $ref: '#/components/responses/Error'\n\n  /user/totp/enable:\n    post:\n      summary: Enable 2FA for user\n      description: Enables TOTP-based 2FA for the given user\n      tags: [ Authentication ]\n      security: [ bearer_auth: [admin:true] ]\n      externalDocs:\n        description: 2-factor authentication\n        url: https://inertia.ubclaunchpad.com/#2-factor-authentication\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required: [ username, password ]\n              properties:\n                username:\n                  type: string\n                password:\n                  type: string\n      responses:\n        200:\n          description: '2FA successfully enabled for user'\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/OKResponse'\n                  - type: object\n                    required: [ data ]\n                    properties:\n                      data:\n                        type: object\n                        required: [ secret, backup_codes ]\n                        properties:\n                          secret:\n                            type: string\n                            example: secret_key\n                            description: TOTP secret key\n                          backup_codes:\n                            type: array\n                            items:\n                              type: string\n                            example: [ code1, code2, code3 ]\n                            description: TOTP backup codes\n        4XX,5XX:\n          $ref: '#/components/responses/Error'\n\n  /user/totp/disable:\n    post:\n      summary: Disable 2FA for user\n      description: Disable TOTP-based 2FA for the given user\n      tags: [ Authentication ]\n      security: [ bearer_auth: [admin:true] ]\n      externalDocs:\n        description: 2-factor authentication\n        url: https://inertia.ubclaunchpad.com/#2-factor-authentication\n      responses:\n        200:\n          $ref: '#/components/responses/OK'\n        4XX,5XX:\n          $ref: '#/components/responses/Error'\n\ncomponents:\n  securitySchemes:\n    bearer_auth:\n      description: JWT issued by Inertia\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  responses:\n    OK:\n      description: Success!\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OKResponse'\n    Error:\n      description: Something went wrong - refer to the error code and message for more details\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrResponse'\n  schemas:\n    OKResponse:\n      required: [ code, message ]\n      properties:\n        code:\n          type: integer\n          description: HTTP status code\n        message:\n          type: string\n          example: (example) successfully did something!\n          description: summary of response\n        request_id:\n          type: string\n          example: example/2Mch7LMzhj-000023\n          description: generated request ID corresponding to request\n        data:\n          type: object\n          additionalProperties: true\n          description: response data and additional context\n    ErrResponse:\n      required: [ code, message, error ]\n      properties:\n        code:\n          type: integer\n          description: HTTP status code\n        message:\n          type: string\n          example: (example) could not do something\n          description: summary of response\n        error:\n          type: string\n          example: (example) value x is missing\n          description: detailed about error message\n        request_id:\n          type: string\n          example: example/2Mch7LMzhj-000023\n          description: generated request ID corresponding to request\n        data:\n          type: object\n          additionalProperties: true\n          description: additional context about error\n          example:\n            example: here is some additional information\n"
		}
	},
	"Error": "parse: paths: /status: get: : responses: 4XX,5XX: parse status code: strconv.Atoi: parsing \"4XX,5XX\": invalid syntax"
}