{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/coinapi/coinapi-sdk"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "oeml-sdk/go/api/openapi.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: support@coinapi.io\n    name: COINAPI LTD\n    url: https://www.coinapi.io\n  description: |\n    This section will provide necessary information about the `CoinAPI OEML REST API` protocol. \u003cbr/\u003e This API is also available in the Postman application: \u003ca href=\"https://postman.coinapi.io/\" target=\"_blank\"\u003ehttps://postman.coinapi.io/\u003c/a\u003e       \u003cbr/\u003e\u003cbr/\u003e Implemented Standards:\n\n     * [HTTP1.0](https://datatracker.ietf.org/doc/html/rfc1945)\n     * [HTTP1.1](https://datatracker.ietf.org/doc/html/rfc2616)\n     * [HTTP2.0](https://datatracker.ietf.org/doc/html/rfc7540)\n  license:\n    name: MIT\n    url: https://github.com/coinapi/coinapi-sdk/blob/master/LICENSE\n  termsOfService: https://www.coinapi.io/legal\n  title: OEML - REST API\n  version: v1\nservers:\n- url: https://13d16e9d-d8b1-4ef4-bc4a-ed8156b2b159.mock.pstmn.io\ntags:\n- description: |\n    Order statuses and the lifecycle are documented in the separate section: \u003ca href=\"#oeml-order-lifecycle\"\u003eOEML / Starter Guide / Order Lifecycle\u003c/a\u003e\n  name: Orders\n- name: Balances\n- name: Positions\npaths:\n  /v1/orders:\n    get:\n      description: Get last execution reports for open orders across all or single\n        exchange.\n      parameters:\n      - description: Filter the open orders to the specific exchange.\n        explode: true\n        in: query\n        name: exchange_id\n        required: false\n        schema:\n          example: KRAKEN\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrderExecutionReports'\n          description: Collection of order execution reports.\n        \"490\":\n          content:\n            appliction/json:\n              schema:\n                $ref: '#/components/schemas/MessageReject'\n          description: Filtered exchange is unreachable.\n      summary: Get open orders\n      tags:\n      - Orders\n    post:\n      description: This request creating new order for the specific exchange.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OrderNewSingleRequest'\n        description: OrderNewSingleRequest object.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrderExecutionReport'\n          description: Created\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationError'\n          description: Input model validation errors.\n        \"490\":\n          content:\n            appliction/json:\n              schema:\n                $ref: '#/components/schemas/MessageReject'\n          description: Exchange is unreachable.\n        \"504\":\n          content:\n            appliction/json:\n              schema:\n                $ref: '#/components/schemas/MessageReject'\n          description: Exchange didn't responded in the defined timeout.\n      summary: Send new order\n      tags:\n      - Orders\n  /v1/orders/status/{client_order_id}:\n    get:\n      description: Get the last order execution report for the specified order. The\n        requested order does not need to be active or opened.\n      parameters:\n      - description: The unique identifier of the order assigned by the client.\n        explode: false\n        in: path\n        name: client_order_id\n        required: true\n        schema:\n          example: 6ab36bc1-344d-432e-ac6d-0bf44ee64c2b\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrderExecutionReport'\n          description: The last execution report of the requested order.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MessageReject'\n          description: The requested order was not found.\n      summary: Get order execution report\n      tags:\n      - Orders\n  /v1/orders/cancel:\n    post:\n      description: Request cancel for an existing order. The order can be canceled\n        using the `client_order_id` or `exchange_order_id`.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OrderCancelSingleRequest'\n        description: OrderCancelSingleRequest object.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrderExecutionReport'\n          description: The last execution report for the order for which cancelation\n            was requested.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationError'\n          description: Input model validation errors.\n        \"490\":\n          content:\n            appliction/json:\n              schema:\n                $ref: '#/components/schemas/MessageReject'\n          description: Exchange is unreachable.\n      summary: Cancel order request\n      tags:\n      - Orders\n  /v1/orders/cancel/all:\n    post:\n      description: This request cancels all open orders on single specified exchange.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OrderCancelAllRequest'\n        description: OrderCancelAllRequest object.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MessageReject'\n          description: Result\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationError'\n          description: Input model validation errors.\n        \"490\":\n          content:\n            appliction/json:\n              schema:\n                $ref: '#/components/schemas/MessageReject'\n          description: Exchange is unreachable.\n      summary: Cancel all orders request\n      tags:\n      - Orders\n  /v1/balances:\n    get:\n      description: Get current currency balance from all or single exchange.\n      parameters:\n      - description: Filter the balances to the specific exchange.\n        explode: true\n        in: query\n        name: exchange_id\n        required: false\n        schema:\n          example: KRAKEN\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Balances'\n          description: Collection of balances.\n        \"490\":\n          content:\n            appliction/json:\n              schema:\n                $ref: '#/components/schemas/MessageReject'\n          description: Exchange is unreachable.\n      summary: Get balances\n      tags:\n      - Balances\n  /v1/positions:\n    get:\n      description: Get current open positions across all or single exchange.\n      parameters:\n      - description: Filter the balances to the specific exchange.\n        explode: true\n        in: query\n        name: exchange_id\n        required: false\n        schema:\n          example: KRAKEN\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Positions'\n          description: Collection of positons.\n        \"490\":\n          content:\n            appliction/json:\n              schema:\n                $ref: '#/components/schemas/MessageReject'\n          description: Exchange is unreachable.\n      summary: Get open positions\n      tags:\n      - Positions\ncomponents:\n  schemas:\n    OrderNewSingleRequest:\n      description: The new order message.\n      example:\n        symbol_id_coinapi: KRAKEN_SPOT_BTC_USDT\n        exchange_id: KRAKEN\n        client_order_id: 6ab36bc1-344d-432e-ac6d-0bf44ee64c2b\n        side: BUY\n        time_in_force: GOOD_TILL_CANCEL\n        symbol_id_exchange: XBT/USDT\n        price: 0.0783\n        amount_order: 0.045\n        expire_time: 2020-01-01T10:45:20.1677709Z\n        exec_inst:\n        - MAKER_OR_CANCEL\n        order_type: LIMIT\n      properties:\n        exchange_id:\n          description: Exchange identifier used to identify the routing destination.\n          example: KRAKEN\n          type: string\n        client_order_id:\n          description: The unique identifier of the order assigned by the client.\n          example: 6ab36bc1-344d-432e-ac6d-0bf44ee64c2b\n          type: string\n        symbol_id_exchange:\n          description: Exchange symbol. One of the properties (`symbol_id_exchange`,\n            `symbol_id_coinapi`) is required to identify the market for the new order.\n          example: XBT/USDT\n          type: string\n        symbol_id_coinapi:\n          description: CoinAPI symbol. One of the properties (`symbol_id_exchange`,\n            `symbol_id_coinapi`) is required to identify the market for the new order.\n          example: KRAKEN_SPOT_BTC_USDT\n          type: string\n        amount_order:\n          description: Order quantity.\n          example: 0.045\n          type: number\n        price:\n          description: Order price.\n          example: 0.0783\n          type: number\n        side:\n          $ref: '#/components/schemas/OrdSide'\n        order_type:\n          $ref: '#/components/schemas/OrdType'\n        time_in_force:\n          $ref: '#/components/schemas/TimeInForce'\n        expire_time:\n          description: Expiration time. Conditionaly required for orders with time_in_force\n            = `GOOD_TILL_TIME_EXCHANGE` or `GOOD_TILL_TIME_OEML`.\n          example: 2020-01-01T10:45:20.1677709Z\n          type: date\n        exec_inst:\n          description: |\n            Order execution instructions are documented in the separate section: \u003ca href=\"#oeml-order-params-exec\"\u003eOEML / Starter Guide / Order parameters / Execution instructions\u003c/a\u003e\n          example:\n          - MAKER_OR_CANCEL\n          items:\n            enum:\n            - MAKER_OR_CANCEL\n            - AUCTION_ONLY\n            - INDICATION_OF_INTEREST\n            type: string\n          type: array\n      required:\n      - amount_order\n      - client_order_id\n      - exchange_id\n      - order_type\n      - price\n      - side\n      - time_in_force\n      type: object\n    OrderCancelSingleRequest:\n      description: Cancel single order request object.\n      example:\n        exchange_id: KRAKEN\n        client_order_id: 6ab36bc1-344d-432e-ac6d-0bf44ee64c2b\n        exchange_order_id: \"3456456754\"\n      properties:\n        exchange_id:\n          description: Exchange identifier used to identify the routing destination.\n          example: KRAKEN\n          type: string\n        exchange_order_id:\n          description: Unique identifier of the order assigned by the exchange or\n            executing system. One of the properties (`exchange_order_id`, `client_order_id`)\n            is required to identify the new order.\n          example: \"3456456754\"\n          type: string\n        client_order_id:\n          description: The unique identifier of the order assigned by the client.\n            One of the properties (`exchange_order_id`, `client_order_id`) is required\n            to identify the new order.\n          example: 6ab36bc1-344d-432e-ac6d-0bf44ee64c2b\n          type: string\n      required:\n      - exchange_id\n      type: object\n    OrderCancelAllRequest:\n      description: Cancel all orders request object.\n      example:\n        exchange_id: KRAKEN\n      properties:\n        exchange_id:\n          description: Identifier of the exchange from which active orders should\n            be canceled.\n          example: KRAKEN\n          type: string\n      required:\n      - exchange_id\n      type: object\n    OrderExecutionReports:\n      description: Collection of order execution reports for currently opened orders.\n      items:\n        $ref: '#/components/schemas/OrderExecutionReport'\n      type: array\n    OrderExecutionReport:\n      allOf:\n      - $ref: '#/components/schemas/OrderNewSingleRequest'\n      - $ref: '#/components/schemas/OrderExecutionReport_allOf'\n      description: The order execution report object.\n    Balances:\n      description: Collection of the balances.\n      items:\n        $ref: '#/components/schemas/Balance'\n      type: array\n    Balance:\n      example:\n        exchange_id: KRAKEN\n        data:\n        - last_updated_by: EXCHANGE\n          asset_id_exchange: XBT\n          balance: 0.00134444\n          traded: 0.007\n          rate_usd: 1355.12\n          available: 0.00134444\n          asset_id_coinapi: BTC\n          locked: 0.0\n        - last_updated_by: EXCHANGE\n          asset_id_exchange: XBT\n          balance: 0.00134444\n          traded: 0.007\n          rate_usd: 1355.12\n          available: 0.00134444\n          asset_id_coinapi: BTC\n          locked: 0.0\n      properties:\n        exchange_id:\n          description: Exchange identifier used to identify the routing destination.\n          example: KRAKEN\n          type: string\n        data:\n          items:\n            $ref: '#/components/schemas/Balance_data'\n          type: array\n      type: object\n    Positions:\n      description: Collection of the positions.\n      items:\n        $ref: '#/components/schemas/Position'\n      type: array\n    Position:\n      example:\n        exchange_id: KRAKEN\n        data:\n        - symbol_id_coinapi: BITMEX_PERP_BTC_USD\n          liquidation_price: 0.072323\n          leverage: 0.0\n          side: BUY\n          quantity: 7\n          symbol_id_exchange: XBTUSD\n          cross_margin: true\n          unrealized_pnl: 0.0\n          raw_data: Other information provided by the exchange on this position.\n          avg_entry_price: 0.00134444\n        - symbol_id_coinapi: BITMEX_PERP_BTC_USD\n          liquidation_price: 0.072323\n          leverage: 0.0\n          side: BUY\n          quantity: 7\n          symbol_id_exchange: XBTUSD\n          cross_margin: true\n          unrealized_pnl: 0.0\n          raw_data: Other information provided by the exchange on this position.\n          avg_entry_price: 0.00134444\n      properties:\n        exchange_id:\n          description: Exchange identifier used to identify the routing destination.\n          example: KRAKEN\n          type: string\n        data:\n          items:\n            $ref: '#/components/schemas/Position_data'\n          type: array\n      type: object\n    OrdStatus:\n      description: |\n        Order statuses and the lifecycle are documented in the separate section: \u003ca href=\"#oeml-order-lifecycle\"\u003eOEML / Starter Guide / Order Lifecycle\u003c/a\u003e\n      enum:\n      - RECEIVED\n      - ROUTING\n      - ROUTED\n      - NEW\n      - PENDING_CANCEL\n      - PARTIALLY_FILLED\n      - FILLED\n      - CANCELED\n      - REJECTED\n      type: string\n    OrdSide:\n      description: |\n        Side of order.\n      enum:\n      - BUY\n      - SELL\n      example: BUY\n      type: string\n    OrdType:\n      description: |\n        Order types are documented in the separate section: \u003ca href=\"#oeml-order-params-type\"\u003eOEML / Starter Guide / Order parameters / Order type\u003c/a\u003e\n      enum:\n      - LIMIT\n      example: LIMIT\n      type: string\n    TimeInForce:\n      description: |\n        Order time in force options are documented in the separate section: \u003ca href=\"#oeml-order-params-tif\"\u003eOEML / Starter Guide / Order parameters / Time in force\u003c/a\u003e\n      enum:\n      - GOOD_TILL_CANCEL\n      - GOOD_TILL_TIME_EXCHANGE\n      - GOOD_TILL_TIME_OMS\n      - FILL_OR_KILL\n      - IMMEDIATE_OR_CANCEL\n      example: GOOD_TILL_CANCEL\n      type: string\n    ExecInst:\n      description: |\n        Order execution instructions are documented in the separate section: \u003ca href=\"#oeml-order-params-exec\"\u003eOEML / Starter Guide / Order parameters / Execution instructions\u003c/a\u003e\n      example:\n      - MAKER_OR_CANCEL\n      items:\n        enum:\n        - MAKER_OR_CANCEL\n        - AUCTION_ONLY\n        - INDICATION_OF_INTEREST\n        type: string\n      type: array\n    ValidationError:\n      properties:\n        type:\n          example: https://tools.ietf.org/html/rfc7231#section-6.5.1\n          type: string\n        title:\n          example: One or more validation errors occurred.\n          type: string\n        status:\n          example: 400\n          type: number\n        traceId:\n          example: d200e8b5-4271a5461ce5342f\n          type: string\n        errors:\n          type: string\n      title: JSON validation error.\n      type: object\n    MessageReject:\n      example:\n        exchange_id: BINANCE\n        rejected_message: '{\"client_order_id\":\"BINANCE-7d8a-4888\",\"exchange_id\":\"BINANCE\",\"type\":\"ORDER_CANCEL_SINGLE_REQUEST\"}'\n        reject_reason: ORDER_ID_NOT_FOUND\n        type: MESSAGE_REJECT\n        message: 'Order with ID: BINANCE-7d8a-4888 not found'\n      properties:\n        type:\n          description: Message type, constant.\n          example: MESSAGE_REJECT\n          type: string\n        reject_reason:\n          $ref: '#/components/schemas/RejectReason'\n        exchange_id:\n          description: If the message related to exchange, then the identifier of\n            the exchange will be provided.\n          example: BINANCE\n          type: string\n        message:\n          description: Message text.\n          example: 'Order with ID: BINANCE-7d8a-4888 not found'\n          type: string\n        rejected_message:\n          description: Value of rejected request, if available.\n          example: '{\"client_order_id\":\"BINANCE-7d8a-4888\",\"exchange_id\":\"BINANCE\",\"type\":\"ORDER_CANCEL_SINGLE_REQUEST\"}'\n          type: string\n      title: MessageReject object.\n      type: object\n    RejectReason:\n      description: Cause of rejection.\n      enum:\n      - OTHER\n      - EXCHANGE_UNREACHABLE\n      - EXCHANGE_RESPONSE_TIMEOUT\n      - ORDER_ID_NOT_FOUND\n      - INVALID_TYPE\n      - METHOD_NOT_SUPPORTED\n      - JSON_ERROR\n      example: ORDER_ID_NOT_FOUND\n      type: string\n    Fills:\n      properties:\n        time:\n          description: Execution time.\n          example: 2020-01-01T10:45:20.1677709Z\n          type: date\n        price:\n          description: Execution price.\n          example: 10799.2\n          type: number\n        amount:\n          description: Executed quantity.\n          example: 0.002\n          type: number\n      title: Relay fill information on working orders.\n      type: object\n    OrderExecutionReport_allOf:\n      description: The order execution report message.\n      properties:\n        client_order_id_format_exchange:\n          description: The unique identifier of the order assigned by the client converted\n            to the exchange order tag format for the purpose of tracking it.\n          example: f81211e2-27c4-b86a-8143-01088ba9222c\n          type: string\n        exchange_order_id:\n          description: Unique identifier of the order assigned by the exchange or\n            executing system.\n          example: \"3456456754\"\n          type: string\n        amount_open:\n          description: Quantity open for further execution. `amount_open` = `amount_order`\n            - `amount_filled`\n          example: 0.22\n          type: number\n        amount_filled:\n          description: Total quantity filled.\n          example: 0.0\n          type: number\n        avg_px:\n          description: Calculated average price of all fills on this order.\n          example: 0.0783\n          type: number\n        status:\n          $ref: '#/components/schemas/OrdStatus'\n        status_history:\n          description: Timestamped history of order status changes.\n          items:\n            items:\n              example: '[[\"RECEIVED\",\"2020-05-27T11:16:20.1677709Z\"],[\"REJECTED\",\"2020-05-27T11:16:20.1677710Z\"]]'\n              type: string\n            type: array\n          type: array\n        error_message:\n          description: Error message.\n          example: '{\"result\":\"error\",\"reason\":\"InsufficientFunds\",\"message\":\"Failed\n            to place buy order on symbol ''BTCUSD'' for price $7,000.00 and quantity\n            0.22 BTC due to insufficient funds\"}'\n          type: string\n        fills:\n          description: Relay fill information on working orders.\n          items:\n            $ref: '#/components/schemas/Fills'\n          type: array\n      required:\n      - amount_filled\n      - amount_open\n      - client_order_id_format_exchange\n      - status\n      - time_order\n      type: object\n    Balance_data:\n      example:\n        last_updated_by: EXCHANGE\n        asset_id_exchange: XBT\n        balance: 0.00134444\n        traded: 0.007\n        rate_usd: 1355.12\n        available: 0.00134444\n        asset_id_coinapi: BTC\n        locked: 0.0\n      properties:\n        asset_id_exchange:\n          description: Exchange currency code.\n          example: XBT\n          type: string\n        asset_id_coinapi:\n          description: CoinAPI currency code.\n          example: BTC\n          type: string\n        balance:\n          description: Value of the current total currency balance on the exchange.\n          example: 0.00134444\n          format: double\n          type: number\n        available:\n          description: Value of the current available currency balance on the exchange\n            that can be used as collateral.\n          example: 0.00134444\n          format: double\n          type: number\n        locked:\n          description: Value of the current locked currency balance by the exchange.\n          example: 0.0\n          format: double\n          type: number\n        last_updated_by:\n          description: |\n            Source of the last modification.\n          enum:\n          - INITIALIZATION\n          - BALANCE_MANAGER\n          - EXCHANGE\n          example: EXCHANGE\n          type: string\n        rate_usd:\n          description: |\n            Current exchange rate to the USD for the single unit of the currency.\n          example: 1355.12\n          format: double\n          type: number\n        traded:\n          description: Value of the current total traded.\n          example: 0.007\n          format: double\n          type: number\n      type: object\n    Position_data:\n      description: The Position object.\n      example:\n        symbol_id_coinapi: BITMEX_PERP_BTC_USD\n        liquidation_price: 0.072323\n        leverage: 0.0\n        side: BUY\n        quantity: 7\n        symbol_id_exchange: XBTUSD\n        cross_margin: true\n        unrealized_pnl: 0.0\n        raw_data: Other information provided by the exchange on this position.\n        avg_entry_price: 0.00134444\n      properties:\n        symbol_id_exchange:\n          description: Exchange symbol.\n          example: XBTUSD\n          type: string\n        symbol_id_coinapi:\n          description: CoinAPI symbol.\n          example: BITMEX_PERP_BTC_USD\n          type: string\n        avg_entry_price:\n          description: Calculated average price of all fills on this position.\n          example: 0.00134444\n          type: number\n        quantity:\n          description: The current position quantity.\n          example: 7\n          type: number\n        side:\n          $ref: '#/components/schemas/OrdSide'\n        unrealized_pnl:\n          description: Unrealised profit or loss (PNL) of this position.\n          example: 0.0\n          type: number\n        leverage:\n          description: Leverage for this position reported by the exchange.\n          example: 0.0\n          type: number\n        cross_margin:\n          description: Is cross margin mode enable for this position?\n          example: true\n          type: boolean\n        liquidation_price:\n          description: Liquidation price. If mark price will reach this value, the\n            position will be liquidated.\n          example: 0.072323\n          type: number\n        raw_data:\n          example: Other information provided by the exchange on this position.\n          type: object\n      type: object\n"
		}
	},
	"Error": "parse: paths: /v1/orders/cancel/all: post: : responses: 490: unknown status code: 490"
}