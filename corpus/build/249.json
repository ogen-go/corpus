{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/optim-corp/cios-golang-sdk"
		},
		"file": {
			"name": "geography.openapi.yml",
			"path": "openapi/openapis/geography.openapi.yml",
			"content": "openapi: \"3.0.3\"\ninfo:\n  version: 1.0.0\n  title: Cios Geography Openapi\n\npaths:\n  '/v2/geo/points':\n    get:\n      tags:\n        - geography\n      operationId: getPoints\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/name_query\"\n        - $ref: \"../components/parameters.yml#/components/parameters/label\"\n        - $ref: \"../components/parameters.yml#/components/parameters/is_public\"\n        - $ref: \"../components/parameters.yml#/components/parameters/resource_owner_id\"\n        - $ref: \"../components/parameters.yml#/components/parameters/sort\"\n        - $ref: \"../components/parameters.yml#/components/parameters/top\"\n        - $ref: \"../components/parameters.yml#/components/parameters/skip\"\n        - $ref: \"../components/parameters.yml#/components/parameters/lang\"\n        - $ref: \"../components/parameters.yml#/components/parameters/is_dev\"\n      responses:\n        200:\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: \"../components/geography-component.openapi.yml#/components/schemas/MultiplePoint\"\n      security:\n        - bearerAuth: []\n    post:\n      tags:\n        - geography\n      operationId: createPoint\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '../components/geography-component.openapi.yml#/components/schemas/PointRequest'\n        required: true\n      responses:\n        200:\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: \"../components/geography-component.openapi.yml#/components/schemas/SinglePoint\"\n      security:\n        - bearerAuth: []\n  '/v2/geo/points/{point_id}':\n    get:\n      tags:\n        - geography\n      operationId: getPoint\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/point_id_required\"\n        - $ref: \"../components/parameters.yml#/components/parameters/lang\"\n        - $ref: \"../components/parameters.yml#/components/parameters/is_dev\"\n      responses:\n        200:\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: \"../components/geography-component.openapi.yml#/components/schemas/SinglePoint\"\n      security:\n        - bearerAuth: []\n    patch:\n      tags:\n        - geography\n      operationId: updatePoint\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/point_id_required\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"../components/general.yml#/components/schemas/DisplayInfo\"\n      responses:\n        200:\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: \"../components/geography-component.openapi.yml#/components/schemas/SinglePoint\"\n      security:\n        - bearerAuth: []\n    delete:\n      tags:\n        - geography\n      operationId: deletePoint\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/point_id_required\"\n      responses:\n        200:\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: \"../components/geography-component.openapi.yml#/components/schemas/SinglePoint\"\n      security:\n        - bearerAuth: []\n  '/v2/geo/circles':\n    get:\n      tags:\n        - geography\n      operationId: getCircles\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/name_query\"\n        - $ref: \"../components/parameters.yml#/components/parameters/label\"\n        - $ref: \"../components/parameters.yml#/components/parameters/is_public\"\n        - $ref: \"../components/parameters.yml#/components/parameters/resource_owner_id\"\n        - $ref: \"../components/parameters.yml#/components/parameters/sort\"\n        - $ref: \"../components/parameters.yml#/components/parameters/top\"\n        - $ref: \"../components/parameters.yml#/components/parameters/skip\"\n        - $ref: \"../components/parameters.yml#/components/parameters/lang\"\n        - $ref: \"../components/parameters.yml#/components/parameters/is_dev\"\n      responses:\n        200:\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: \"../components/geography-component.openapi.yml#/components/schemas/MultipleCircle\"\n      security:\n        - bearerAuth: []\n    post:\n      tags:\n        - geography\n      operationId: createCircle\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '../components/geography-component.openapi.yml#/components/schemas/Circle'\n      responses:\n        200:\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: \"../components/geography-component.openapi.yml#/components/schemas/SingleCircle\"\n      security:\n        - bearerAuth: []\n  '/v2/geo/circles/{circles_id}':\n    get:\n      tags:\n        - geography\n      operationId: getCircle\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/circle_id_required\"\n        - $ref: \"../components/parameters.yml#/components/parameters/lang\"\n        - $ref: \"../components/parameters.yml#/components/parameters/is_dev\"\n      responses:\n        200:\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: \"../components/geography-component.openapi.yml#/components/schemas/SingleCircle\"\n      security:\n        - bearerAuth: []\n    patch:\n      tags:\n        - geography\n      operationId: updateCircle\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/circle_id_required\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"../components/general.yml#/components/schemas/DisplayInfo\"\n      responses:\n        200:\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: \"../components/geography-component.openapi.yml#/components/schemas/SingleCircle\"\n      security:\n        - bearerAuth: []\n    delete:\n      tags:\n        - geography\n      operationId: deleteCircle\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/circle_id_required\"\n      responses:\n        200:\n          description: ''\n      security:\n        - bearerAuth: []\n  '/v2/geo/routes':\n    get:\n      tags:\n        - geography\n      operationId: getRoutes\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/name_query\"\n        - $ref: \"../components/parameters.yml#/components/parameters/label\"\n        - $ref: \"../components/parameters.yml#/components/parameters/is_public\"\n        - $ref: \"../components/parameters.yml#/components/parameters/resource_owner_id\"\n        - $ref: \"../components/parameters.yml#/components/parameters/sort\"\n        - $ref: \"../components/parameters.yml#/components/parameters/top\"\n        - $ref: \"../components/parameters.yml#/components/parameters/skip\"\n        - $ref: \"../components/parameters.yml#/components/parameters/lang\"\n        - $ref: \"../components/parameters.yml#/components/parameters/is_dev\"\n      responses:\n        200:\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: \"../components/geography-component.openapi.yml#/components/schemas/MultipleRoute\"\n      security:\n        - bearerAuth: []\n    post:\n      tags:\n        - geography\n      operationId: createRoute\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '../components/geography-component.openapi.yml#/components/schemas/Route'\n        required: true\n      responses:\n        200:\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: \"../components/geography-component.openapi.yml#/components/schemas/SingleRoute\"\n      security:\n        - bearerAuth: []\n  '/v2/geo/routes/{routes_id}':\n    get:\n      tags:\n        - geography\n      operationId: getRoute\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/route_id_required\"\n        - $ref: \"../components/parameters.yml#/components/parameters/lang\"\n        - $ref: \"../components/parameters.yml#/components/parameters/is_dev\"\n      responses:\n        200:\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: \"../components/geography-component.openapi.yml#/components/schemas/SingleRoute\"\n      security:\n        - bearerAuth: []\n    patch:\n      tags:\n        - geography\n      operationId: updateRoute\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/route_id_required\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"../components/general.yml#/components/schemas/DisplayInfo\"\n      responses:\n        200:\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: \"../components/geography-component.openapi.yml#/components/schemas/SingleRoute\"\n      security:\n        - bearerAuth: []\n    delete:\n      tags:\n        - geography\n      operationId: deleteRoute\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/route_id_required\"\n      responses:\n        200:\n          description: ''\n      security:\n        - bearerAuth: []\n\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT"
		}
	},
	"Error": "parse: paths: /v2/geo/circles/{circles_id}: get: getCircle: parameters: parse parameter \"\": resolve \"../components/parameters.yml#/components/parameters/circle_id_required\" reference: invalid parameter reference: \"../components/parameters.yml#/components/parameters/circle_id_required\""
}