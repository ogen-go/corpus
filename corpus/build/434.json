{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/crowdin-node/crowdin-node"
		},
		"file": {
			"name": "v2.yml",
			"path": "schemata/v2.yml",
			"content": "openapi: 3.0.0\ninfo:\n  title: 'Crowdin API v2'\n  description: \"\\n# API Overview\\nThe Crowdin Enterprise API is a full-featured RESTful API that allows you to create projects in Crowdin, add and update files, download translations, and more to help you easily integrate localization into your development process.\\n\\n## Requests\\nWhen a request is successful, a response will typically be sent back in the form of a JSON object, so the Accept header should be application/json.\\n\\nFor the methods, where body is accepted (POST/ PATCH/ PUT) the body should be in JSON.  This is done by setting the Content-Type header to application/json. This ensures that your request is interpreted correctly.\\n\\nRESTful APIs enable you to call individual API endpoints to perform the following actions:\\n\\n *     GET - retrieve specific information, which may include arrays and sets of data and information.\\n *     POST - create/add a new element.\\n *     PUT - replace an existing element.\\n *     PATCH - update only specified fields of an entity.\\n *     DELETE - remove/delete an element.\\n\\n## Authentication\\nThe Crowdin API uses authentication with an account-key and login, that should be passed as an HTTP query string parameter.\\n\\nTo find your account API key you have to log in to your Crowdin account \u003e Settings \u003e API \u0026 SSO. Your login is displayed at the top of your profile settings page.\\n```\\nExample URL: \\\"https://your-organization-name.crowdin.com/api/v2/projects/123456/files?login=tomhardy\u0026account-key=007abcd6a7c98e64445192f3bb10da2d\\\"\\n```\\nTo get an identifier required for each api method - please use the corresponding methods to retrieve that data.\\n\\nFor example, to get the project id use [List Projects](#operation/api.projects.getMany) api method. Or copy the numerical is from the project’s URL.\\n## File upload\\nWith Crowdin API v2 files are first uploaded to the Storage and then uploaded to your project or organization. This approach saves time and is helpful for the methods, that take some time to be completed or might need to be resumed, as well as for the files that should be uploaded to several projects.\\n\\nFor example, to upload a Translation Memory, please run the following sequence of API methods:\\n *     [_Upload a file_](#operation/api.storages.uploadOne) (Storage)\\n *     [_Create a file_](#operation/api.projects.files.createOne) (Files)\\n\\nTo upload files, please add them to Storage first and then use the corresponding API method to upload file from the storage to your organization.\\n\\nThe same approach is used for several different file types, like source files, screenshots, project cover and logo, Glossaries, and Translation Memories. That’s why such methods would require a Storage id - the id of the file uploaded to the Storage.\\n## File download\\nFor a more reliable transfer, with Crowdin API v2 file download is completed in several steps. This is also helpful for the methods, that take some time to be completed or might need to be resumed.\\n\\nFor example, to download a Translation Memory, please run the following sequence of API methods:\\n *     [_Start TM export_](#operation/api.tms.exportOne)\\n *     [_Get TM export status_](#operation/api.tms.export.getOne) (to check the progress of the export)\\n *     [_Get a TM download link_](#operation/api.tms.downloadOne)\\n\\nThe same approach is used for several different file types, like translations, Translation Memories, Glossaries, and more.\"\n  termsOfService: 'https://support.crowdin.com/terms/'\n  contact:\n    email: support@crowdin.com\n  version: ''\n  x-logo:\n    url: 'https://support.crowdin.com/assets/logos/crowdin-TranslationManagementService-logo-onecolor.png'\nservers:\n  -\n    url: '{protocol}://{host}/api/v2'\n    variables:\n      protocol:\n        enum:\n          - https\n          - http\n        default: https\n      host:\n        default: api.crowdin.com\npaths:\n  '/projects/{projectId}/branches':\n    get:\n      tags:\n        - Branches\n      summary: 'List project branches'\n      operationId: api.projects.branches.getMany\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          name: name\n          in: query\n          description: 'Filter branch by name.'\n          schema:\n            type: string\n        -\n          $ref: '#/components/parameters/PaginationLimit'\n        -\n          $ref: '#/components/parameters/PaginationOffset'\n      responses:\n        '200':\n          description: 'List project branches'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BranchCollectionResource'\n        '400':\n          description: 'Request parameters are invalid'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    post:\n      tags:\n        - Branches\n      summary: 'Create a branch'\n      operationId: api.projects.branches.createOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BranchCreateForm'\n      responses:\n        '201':\n          description: 'Branch created successfully'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BranchResource'\n        '400':\n          description: 'Bad request parameters'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/branches/{branchId}':\n    get:\n      tags:\n        - Branches\n      summary: 'Get a branch'\n      operationId: api.projects.branches.getOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/BranchId'\n      responses:\n        '200':\n          description: 'Branch data'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BranchResource'\n        '404':\n          description: 'Branch or project with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    delete:\n      tags:\n        - Branches\n      summary: 'Delete a branch'\n      operationId: api.projects.branches.deleteOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/BranchId'\n      responses:\n        '204':\n          description: 'Branch was successfully deleted'\n        '404':\n          description: 'Branch or project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    patch:\n      tags:\n        - Branches\n      summary: 'Update a branch'\n      operationId: api.projects.branches.patchOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/BranchId'\n      requestBody:\n        description: 'A JSON Patch document as defined by \u003ca href=\"https://tools.ietf.org/html/rfc6902#section-3\" target=\"_blank\"\u003eRFC 6902\u003c/a\u003e'\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JsonPatchDocument'\n      responses:\n        '200':\n          description: 'Branch successfully updated'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BranchResource'\n        '400':\n          description: 'Invalid Request Body'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Branch or project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '500':\n          description: 'Internal Server Error'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/directories':\n    get:\n      tags:\n        - Directories\n      summary: 'List project directories'\n      operationId: api.projects.directories.getMany\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          name: branchId\n          in: query\n          description: 'Filter directories by branchId'\n          schema:\n            type: integer\n        -\n          name: directoryId\n          in: query\n          description: 'Filter directories by directoryId'\n          schema:\n            type: integer\n        -\n          $ref: '#/components/parameters/PaginationLimit'\n        -\n          $ref: '#/components/parameters/PaginationOffset'\n      responses:\n        '200':\n          description: 'List project directories'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryCollectionResource'\n        '400':\n          description: 'Request parameters are invalid'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '404':\n          description: 'Project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    post:\n      tags:\n        - Directories\n      summary: 'Create a directory'\n      operationId: api.projects.directories.createOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DirectoryCreateForm'\n      responses:\n        '201':\n          description: 'Directory created successfully'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryResource'\n        '400':\n          description: 'Bad request parameters'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '404':\n          description: 'Project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/directories/{directoryId}':\n    get:\n      tags:\n        - Directories\n      summary: 'Get a directory'\n      operationId: api.projects.directories.getOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/DirectoryId'\n      responses:\n        '200':\n          description: 'Directory data'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryResource'\n        '404':\n          description: 'Directory or project with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    delete:\n      tags:\n        - Directories\n      summary: 'Delete a directory'\n      operationId: api.projects.directories.deleteOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/DirectoryId'\n      responses:\n        '204':\n          description: 'Directory was successfully deleted'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '404':\n          description: 'Directory or project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '500':\n          description: 'Internal Server Error'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    patch:\n      tags:\n        - Directories\n      summary: 'Update a directory'\n      operationId: api.projects.directories.patchOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/DirectoryId'\n      requestBody:\n        description: 'A JSON Patch document as defined by \u003ca href=\"https://tools.ietf.org/html/rfc6902#section-3\" target=\"_blank\"\u003eRFC 6902\u003c/a\u003e'\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JsonPatchDocument'\n      responses:\n        '200':\n          description: 'Directory successfully updated'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryResource'\n        '400':\n          description: 'Invalid Request Body'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '404':\n          description: 'Directory or project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '500':\n          description: 'Internal Server Error'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/files':\n    get:\n      tags:\n        - Files\n      summary: 'List project files'\n      operationId: api.projects.files.getMany\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          name: branchId\n          in: query\n          description: \"List branch files.\\n\\n__Note!__ You can either list files for the specified branch (branchId) in the same request.\"\n          schema:\n            type: integer\n        -\n          name: directoryId\n          in: query\n          description: \"List directory files.\\n\\n__Note!__ You can either list files for the specified directory (directoryId) in the same request.\"\n          schema:\n            type: integer\n        -\n          $ref: '#/components/parameters/PaginationLimit'\n        -\n          $ref: '#/components/parameters/PaginationOffset'\n      responses:\n        '200':\n          description: 'List project files'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileCollectionResource'\n        '400':\n          description: 'Bad request parameters'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Project with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    post:\n      tags:\n        - Files\n      summary: 'Create a file'\n      operationId: api.projects.files.createOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          name: branchId\n          in: query\n          description: 'Get files of branch. You can set branchId or directoryId, not both'\n          schema:\n            type: integer\n        -\n          name: directoryId\n          in: query\n          description: 'Get files of directory. You can set branchId or directoryId, not both'\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FileCreateForm'\n      responses:\n        '200':\n          description: 'File added successful'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileResource'\n        '400':\n          description: 'Bad request parameters'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Project with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/files/{fileId}':\n    get:\n      tags:\n        - Files\n      summary: 'Get a file'\n      operationId: api.projects.files.getOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/FileId'\n      responses:\n        '200':\n          description: 'File data'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileResource'\n        '404':\n          description: 'Project or file with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    delete:\n      tags:\n        - Files\n      summary: 'Delete a file'\n      operationId: api.projects.files.deleteOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/FileId'\n      responses:\n        '204':\n          description: 'File was successfully deleted'\n        '404':\n          description: 'Project or file with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '500':\n          description: 'Internal Server Error'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    patch:\n      tags:\n        - Files\n      summary: 'Update a file'\n      operationId: api.projects.files.patchOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/FileId'\n      requestBody:\n        description: 'A JSON Patch document as defined by \u003ca href=\"https://tools.ietf.org/html/rfc6902#section-3\" target=\"_blank\"\u003eRFC 6902\u003c/a\u003e'\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JsonPatchDocument'\n      responses:\n        '200':\n          description: 'File successfully updated'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileResource'\n        '400':\n          description: 'Invalid Request Body'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Project or file with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '500':\n          description: 'Internal Server Error'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/files/{fileId}/download':\n    get:\n      tags:\n        - Files\n      summary: 'Export file raw'\n      operationId: api.projects.files.downloadLink\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/FileId'\n      responses:\n        '200':\n          description: 'File raw data'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DownloadLinkResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '404':\n          description: 'Project or file with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  /glossaries:\n    get:\n      tags:\n        - Glossaries\n      summary: 'List Glossaries'\n      operationId: api.glossaries.getMany\n      parameters:\n        -\n          name: groupId\n          in: query\n          description: 'A unique identifier for the group, this glossary is associated with.'\n          required: true\n          schema:\n            type: integer\n        -\n          $ref: '#/components/parameters/PaginationLimit'\n        -\n          $ref: '#/components/parameters/PaginationOffset'\n      responses:\n        '200':\n          description: 'List Glossaries of the specified group'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlossaryCollectionResource'\n        '400':\n          description: 'Request parameters are invalid'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '404':\n          description: 'Group with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    post:\n      tags:\n        - Glossaries\n      summary: 'Create a Glossary'\n      operationId: api.glossaries.createOne\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EnterpriseGlossaryCreateForm'\n      responses:\n        '201':\n          description: 'Glossary created successfully'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlossaryResource'\n        '400':\n          description: 'Bad request parameters'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '404':\n          description: 'Group with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/glossaries/{glossaryId}':\n    get:\n      tags:\n        - Glossaries\n      summary: 'Get a Glossary'\n      operationId: api.glossaries.getOne\n      parameters:\n        -\n          $ref: '#/components/parameters/GlossaryId'\n      responses:\n        '200':\n          description: 'Glossary data'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlossaryResource'\n        '404':\n          description: 'Glossary with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    delete:\n      tags:\n        - Glossaries\n      summary: 'Delete a Glossary'\n      operationId: api.glossaries.deleteOne\n      parameters:\n        -\n          $ref: '#/components/parameters/GlossaryId'\n      responses:\n        '204':\n          description: 'Glossary was successfully deleted'\n        '404':\n          description: 'Glossary with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    patch:\n      tags:\n        - Glossaries\n      summary: 'Update a Glossary'\n      operationId: api.glossaries.patchOne\n      parameters:\n        -\n          $ref: '#/components/parameters/GlossaryId'\n      requestBody:\n        description: 'A JSON Patch document as defined by \u003ca href=\"https://tools.ietf.org/html/rfc6902#section-3\" target=\"_blank\"\u003eRFC 6902\u003c/a\u003e'\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JsonPatchDocument'\n      responses:\n        '200':\n          description: 'Glossary successfully updated'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlossaryResource'\n        '400':\n          description: 'Invalid Request Body'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Glossary with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '500':\n          description: 'Internal Server Error'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/glossaries/{glossaryId}/exports':\n    post:\n      tags:\n        - Glossaries\n      summary: 'Start Glossary export'\n      operationId: api.glossaries.export.exportOne\n      parameters:\n        -\n          $ref: '#/components/parameters/GlossaryId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GlossaryExportForm'\n      responses:\n        '202':\n          description: 'Glossary export accepted successfully'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlossaryExportResource'\n        '400':\n          description: 'Bad request parameters'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '404':\n          description: 'Glossary with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/glossaries/{glossaryId}/exports/download':\n    get:\n      tags:\n        - Glossaries\n      summary: 'Get a Glossary download link'\n      operationId: api.glossaries.export.getDownloadLink\n      parameters:\n        -\n          $ref: '#/components/parameters/GlossaryId'\n        -\n          $ref: '#/components/parameters/GlossaryRawDownloadFormat'\n      responses:\n        '200':\n          description: 'Glossary raw data'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DownloadLinkResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '404':\n          description: 'Glossary or raw with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/glossaries/{glossaryId}/exports/{exportId}':\n    get:\n      tags:\n        - Glossaries\n      summary: 'Get Glossary export status'\n      operationId: api.glossaries.export.getExportStatus\n      parameters:\n        -\n          $ref: '#/components/parameters/GlossaryId'\n        -\n          $ref: '#/components/parameters/ExportId'\n      responses:\n        '200':\n          description: 'Glossary export data'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlossaryExportResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '404':\n          description: 'Glossary or job with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/glossaries/{glossaryId}/imports':\n    post:\n      tags:\n        - Glossaries\n      summary: 'Import a Glossary file'\n      operationId: api.glossaries.import.importOne\n      parameters:\n        -\n          $ref: '#/components/parameters/GlossaryId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GlossaryImportForm'\n      responses:\n        '202':\n          description: 'Glossary import accepted successfully'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlossaryImportResource'\n        '400':\n          description: 'Bad request parameters'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '404':\n          description: 'Glossary with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/glossaries/{glossaryId}/imports/{importId}':\n    get:\n      tags:\n        - Glossaries\n      summary: 'Get Glossary import status'\n      operationId: api.glossaries.import.getImportOne\n      parameters:\n        -\n          $ref: '#/components/parameters/GlossaryId'\n        -\n          $ref: '#/components/parameters/ImportId'\n      responses:\n        '200':\n          description: 'Glossary import job data'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlossaryImportResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '404':\n          description: 'Glossary or job with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  /groups:\n    get:\n      tags:\n        - Groups\n      summary: 'List groups'\n      operationId: api.groups.getMany\n      parameters:\n        -\n          $ref: '#/components/parameters/QueryNotRequiredParentId'\n        -\n          $ref: '#/components/parameters/PaginationLimit'\n        -\n          $ref: '#/components/parameters/PaginationOffset'\n      responses:\n        '200':\n          description: 'List groups'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupCollectionResource'\n        '400':\n          description: 'Request parameters are invalid'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    post:\n      tags:\n        - Groups\n      summary: 'Create group'\n      operationId: api.groups.createOne\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GroupCreateForm'\n      responses:\n        '201':\n          description: 'Group created successfully'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupResource'\n        '400':\n          description: 'Bad request parameters'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/groups/{groupId}':\n    get:\n      tags:\n        - Groups\n      summary: 'Get group'\n      operationId: api.groups.getOne\n      parameters:\n        -\n          $ref: '#/components/parameters/GroupId'\n      responses:\n        '200':\n          description: 'Group data'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupResource'\n        '404':\n          description: 'Group with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    delete:\n      tags:\n        - Groups\n      summary: 'Delete Group'\n      operationId: api.groups.deleteOne\n      parameters:\n        -\n          $ref: '#/components/parameters/GroupId'\n      responses:\n        '204':\n          description: 'Group was successfully deleted'\n        '404':\n          description: 'Group with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    patch:\n      tags:\n        - Groups\n      summary: 'Update group'\n      operationId: api.groups.patchOne\n      parameters:\n        -\n          $ref: '#/components/parameters/GroupId'\n      requestBody:\n        description: 'A JSON Patch document as defined by \u003ca href=\"https://tools.ietf.org/html/rfc6902#section-3\" target=\"_blank\"\u003eRFC 6902\u003c/a\u003e'\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JsonPatchDocument'\n      responses:\n        '200':\n          description: 'Group successfully updated'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupResource'\n        '400':\n          description: 'Invalid Request Body'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Group with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/background':\n    put:\n      tags:\n        - 'Projects Settings'\n      summary: 'Upload project background'\n      operationId: api.projects.images.background.uploadOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BackgroundUploadForm'\n      responses:\n        '201':\n          description: 'Background replaced successfully'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectResource'\n        '400':\n          description: 'Bad request parameters'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    delete:\n      tags:\n        - 'Projects Settings'\n      summary: 'Delete project background'\n      operationId: api.projects.images.background.deleteOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n      responses:\n        '204':\n          description: 'Background was successfully deleted'\n        '404':\n          description: 'Project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/logo':\n    put:\n      tags:\n        - 'Projects Settings'\n      summary: 'Upload project logo'\n      operationId: api.projects.images.logo.uploadOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LogoUploadForm'\n      responses:\n        '201':\n          description: 'Logo replaced successfully'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectResource'\n        '400':\n          description: 'Bad request parameters'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    delete:\n      tags:\n        - 'Projects Settings'\n      summary: 'Delete project logo'\n      operationId: api.projects.images.logo.deleteOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n      responses:\n        '204':\n          description: 'Logo was successfully deleted'\n        '404':\n          description: 'Project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/issues':\n    get:\n      tags:\n        - Issues\n      summary: 'List issues'\n      operationId: api.issues.getMany\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/PaginationLimit'\n        -\n          $ref: '#/components/parameters/PaginationOffset'\n        -\n          $ref: '#/components/parameters/IssueType'\n        -\n          $ref: '#/components/parameters/IssueStatus'\n      responses:\n        '200':\n          description: 'List supported languages'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IssueCollectionResource'\n        '404':\n          description: 'Project with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/issues/statistics':\n    get:\n      tags:\n        - Issues\n      summary: 'List issue statistics'\n      operationId: api.projects.issues.statistics.getMany\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/PaginationLimit'\n        -\n          $ref: '#/components/parameters/PaginationOffset'\n        -\n          $ref: '#/components/parameters/IssueStatisticStatus'\n        -\n          $ref: '#/components/parameters/LanguageIds'\n      responses:\n        '200':\n          description: 'List issue statistics'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IssueStatisticCollectionResource'\n        '404':\n          description: 'Project with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  /languages:\n    get:\n      tags:\n        - Languages\n      summary: 'List supported languages'\n      operationId: api.languages.getMany\n      parameters:\n        -\n          $ref: '#/components/parameters/PaginationLimit'\n        -\n          $ref: '#/components/parameters/PaginationOffset'\n      responses:\n        '200':\n          description: 'List supported languages'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LanguageCollectionResource'\n        '400':\n          description: 'Request parameters are invalid'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/languages/{languageId}':\n    get:\n      tags:\n        - Languages\n      summary: 'Get language'\n      operationId: api.languages.getOne\n      parameters:\n        -\n          $ref: '#/components/parameters/LanguageId'\n      responses:\n        '200':\n          description: 'Language data'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LanguageResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '404':\n          description: 'Language with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/pre-translations':\n    post:\n      tags:\n        - Pre-Translation\n      summary: 'Pre-translate project files'\n      operationId: api.projects.preTranslates.preTranslate\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PreTranslationForm'\n      responses:\n        '202':\n          description: 'Pre-translation accepted successfully'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreTranslationResource'\n        '400':\n          description: 'Bad request parameters'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '404':\n          description: 'Project with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/pre-translations/{preTranslationId}':\n    get:\n      tags:\n        - Pre-Translation\n      summary: 'Get status of pre-translation'\n      operationId: api.projects.preTranslates.getTranslation\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/PreTranslationId'\n      responses:\n        '200':\n          description: 'Pre-translation info'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreTranslationResource'\n        '400':\n          description: 'Bad request parameters'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '404':\n          description: 'Project or pre-translate with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/storages/{storageId}/preview':\n    get:\n      tags:\n        - Storage\n      summary: 'Get preview'\n      operationId: api.storages.preview.getOne\n      parameters:\n        -\n          parameter: StorageId\n          name: storageId\n          in: path\n          description: 'A unique identifier for the storage.'\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: 'Preview data'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreviewResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '404':\n          description: 'Storage with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '415':\n          description: 'Unsupported Media Type'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/branches/{branchId}/languages/progress':\n    get:\n      tags:\n        - Progress\n      summary: 'Get branch translation progress'\n      operationId: api.projects.branches.languages.progress.getMany\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/BranchId'\n      responses:\n        '200':\n          description: 'Language Translation progress'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProgressCollectionResource'\n        '404':\n          description: 'Project or branch with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/directories/{directoryId}/languages/progress':\n    get:\n      tags:\n        - Progress\n      summary: 'Get directory translation progress'\n      operationId: api.projects.directories.languages.progress.getMany\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/DirectoryId'\n      responses:\n        '200':\n          description: 'Language Translation progress'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProgressCollectionResource'\n        '404':\n          description: 'Project or directory with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/export-ready-progress':\n    get:\n      tags:\n        - Projects\n      summary: 'Get project translations export status'\n      operationId: api.projects.exportReadyProgress.getMany\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/LanguageIds'\n        -\n          $ref: '#/components/parameters/PaginationLimit'\n        -\n          $ref: '#/components/parameters/PaginationOffset'\n      responses:\n        '200':\n          description: 'List project translations export status'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProgressExportCollectionResource'\n        '400':\n          description: 'Request parameters are invalid'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/files/{fileId}/languages/progress':\n    get:\n      tags:\n        - Progress\n      summary: 'Get file translation progress'\n      operationId: api.projects.files.languages.progress.getMany\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/FileId'\n      responses:\n        '200':\n          description: 'Language Translation progress'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProgressCollectionResource'\n        '404':\n          description: 'Project or file with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/languages/progress':\n    get:\n      tags:\n        - Progress\n      summary: 'Get project translation progress'\n      operationId: api.projects.languages.progress.getMany\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n      responses:\n        '200':\n          description: 'Language Translation progress'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProgressCollectionResource'\n        '404':\n          description: 'Project with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  /projects:\n    get:\n      tags:\n        - Projects\n      summary: 'List projects'\n      operationId: api.projects.getMany\n      parameters:\n        -\n          $ref: '#/components/parameters/QueryNotRequiredGroupId'\n        -\n          $ref: '#/components/parameters/HasManagerAccess'\n        -\n          $ref: '#/components/parameters/PaginationLimit'\n        -\n          $ref: '#/components/parameters/PaginationOffset'\n      responses:\n        '200':\n          description: 'List projects'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectCollectionResource'\n        '400':\n          description: 'Request parameters are invalid'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    post:\n      tags:\n        - Projects\n      summary: 'Create project'\n      operationId: api.projects.createOne\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EnterpriseProjectCreateForm'\n      responses:\n        '201':\n          description: 'Project created successfully'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectResource'\n        '400':\n          description: 'Bad request parameters'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Group with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}':\n    get:\n      tags:\n        - Projects\n      summary: 'Get project'\n      operationId: api.projects.getOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n      responses:\n        '200':\n          description: 'Project data'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectResource'\n        '404':\n          description: 'Project with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    delete:\n      tags:\n        - Projects\n      summary: 'Delete project'\n      operationId: api.projects.deleteOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n      responses:\n        '204':\n          description: 'Project was successfully deleted'\n        '404':\n          description: 'Project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    patch:\n      tags:\n        - Projects\n      summary: 'Update project'\n      operationId: api.projects.patchOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n      requestBody:\n        description: 'A JSON Patch document as defined by \u003ca href=\"https://tools.ietf.org/html/rfc6902#section-3\" target=\"_blank\"\u003eRFC 6902\u003c/a\u003e'\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JsonPatchDocument'\n      responses:\n        '200':\n          description: 'Project successfully updated'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectResource'\n        '400':\n          description: 'Invalid Request Body'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/pseudo-translations/builds':\n    post:\n      tags:\n        - Pseudo-Translations\n      summary: 'Build pseudo-translation files'\n      operationId: api.projects.pseudo.builds.getOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PseudoExportForm'\n      responses:\n        '202':\n          description: 'Pseudo translation export accepted successfully'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PseudoExportResource'\n        '400':\n          description: 'Bad request parameters'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '404':\n          description: 'Project with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/pseudo-translations/builds/{pseudoTranslationBuildId}':\n    get:\n      tags:\n        - Pseudo-Translations\n      summary: 'View pseudo-translation build status'\n      operationId: api.projects.pseudo.builds.getStatus\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/PseudoTranslationBuildId'\n      responses:\n        '200':\n          description: 'Pseudo translation export info'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PseudoExportResource'\n        '400':\n          description: 'Bad request parameters'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '404':\n          description: 'Project or export in project with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/pseudo-translations/builds/download':\n    get:\n      tags:\n        - Pseudo-Translations\n      summary: 'Get pseudo-translation last build download link'\n      operationId: api.projects.pseudo.getDownloadLink\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n      responses:\n        '200':\n          description: 'Pseudo translation download link'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DownloadLinkResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '404':\n          description: 'Project or build with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/qa-check':\n    get:\n      tags:\n        - 'Translation Quality Assurance'\n      summary: 'List QA check statistics'\n      operationId: api.projects.getQACheck\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/PaginationLimit'\n        -\n          $ref: '#/components/parameters/PaginationOffset'\n        -\n          $ref: '#/components/parameters/LanguageIds'\n      responses:\n        '200':\n          description: 'List QA check statistics'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QaCheckCollectionResource'\n        '404':\n          description: 'Project with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/supported-reports':\n    get:\n      tags:\n        - Reports\n      summary: 'List supported reports'\n      operationId: api.reportTypes.getMany\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/PaginationLimit'\n        -\n          $ref: '#/components/parameters/PaginationOffset'\n      responses:\n        '200':\n          description: 'List supported reports'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReportTypeCollectionResource'\n        '400':\n          description: 'Request parameters are invalid'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/reports':\n    post:\n      tags:\n        - Reports\n      summary: 'Generate a report'\n      operationId: api.projects.reports.createOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReportCreateForm'\n      responses:\n        '201':\n          description: 'Report generated successfully'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReportResource'\n        '400':\n          description: 'Bad request parameters'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/reports/{reportId}/download':\n    get:\n      tags:\n        - Reports\n      summary: 'Export project report raw'\n      operationId: api.projects.reports.raw.exportOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/ReportId'\n      responses:\n        '200':\n          description: 'Report raw data'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DownloadLinkResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '404':\n          description: 'Project or report with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/files/{fileId}/revisions':\n    get:\n      tags:\n        - Files\n      summary: 'List file revisions'\n      operationId: api.projects.files.revisions.getMany\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/FileId'\n        -\n          $ref: '#/components/parameters/PaginationLimit'\n        -\n          $ref: '#/components/parameters/PaginationOffset'\n      responses:\n        '200':\n          description: 'List file revisions'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RevisionCollectionResource'\n        '400':\n          description: 'Request parameters are invalid'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    post:\n      tags:\n        - Files\n      summary: 'Create a file revision'\n      operationId: api.projects.files.revisions.createOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/FileId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RevisionCreateForm'\n      responses:\n        '200':\n          description: 'Revision added successful'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RevisionCollectionResource'\n        '400':\n          description: 'Bad request parameters'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Project or file with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/files/{fileId}/revisions/{revision}':\n    get:\n      tags:\n        - Files\n      summary: 'Get a file revision'\n      operationId: api.projects.files.revisions.getOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/FileId'\n        -\n          $ref: '#/components/parameters/Revision'\n      responses:\n        '200':\n          description: 'Information about revision'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RevisionResource'\n        '404':\n          description: 'Project, file or revision with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/screenshots':\n    get:\n      tags:\n        - Screenshots\n      summary: 'List screenshots'\n      operationId: api.projects.screenshots.getMany\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/PaginationLimit'\n        -\n          $ref: '#/components/parameters/PaginationOffset'\n      responses:\n        '200':\n          description: 'List screenshots'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScreenshotCollectionResource'\n        '400':\n          description: 'Request parameters are invalid'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    post:\n      tags:\n        - Screenshots\n      summary: 'Create a screenshot'\n      operationId: api.projects.screenshots.createOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScreenshotCreateForm'\n      responses:\n        '201':\n          description: 'Screenshot created successfully'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScreenshotResource'\n        '400':\n          description: 'Bad request parameters'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/screenshots/{screenshotId}':\n    get:\n      tags:\n        - Screenshots\n      summary: 'Get a screenshot'\n      operationId: api.projects.screenshots.getOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/ScreenshotId'\n      responses:\n        '200':\n          description: 'Screenshot data'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScreenshotResource'\n        '404':\n          description: 'Screenshot or project with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    put:\n      tags:\n        - Screenshots\n      summary: 'Replace a screenshot'\n      operationId: api.projects.screenshots.replaceOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/ScreenshotId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScreenshotReplaceForm'\n      responses:\n        '201':\n          description: 'Screenshot created successfully'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScreenshotResource'\n        '400':\n          description: 'Bad request parameters'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Project or screenshot with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    delete:\n      tags:\n        - Screenshots\n      summary: 'Delete a screenshot'\n      operationId: api.projects.screenshots.deleteOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/ScreenshotId'\n      responses:\n        '204':\n          description: 'Screenshot was successfully deleted'\n        '404':\n          description: 'Screenshot or project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    patch:\n      tags:\n        - Screenshots\n      summary: 'Update a screenshot'\n      operationId: api.projects.screenshots.patchOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/ScreenshotId'\n      requestBody:\n        description: 'A JSON Patch document as defined by \u003ca href=\"https://tools.ietf.org/html/rfc6902#section-3\" target=\"_blank\"\u003eRFC 6902\u003c/a\u003e'\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JsonPatchDocument'\n      responses:\n        '200':\n          description: 'Screenshot successfully updated'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScreenshotResource'\n        '400':\n          description: 'Invalid Request Body'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Screenshot or project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '500':\n          description: 'Internal Server Error'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/screenshots/{screenshotId}/tags':\n    get:\n      tags:\n        - Screenshots\n      summary: 'List screenshot tags'\n      operationId: api.projects.screenshots.tags.getMany\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/ScreenshotId'\n        -\n          $ref: '#/components/parameters/PaginationLimit'\n        -\n          $ref: '#/components/parameters/PaginationOffset'\n      responses:\n        '200':\n          description: 'List screenshot tags'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagCollectionResource'\n        '400':\n          description: 'Request parameters are invalid'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '404':\n          description: 'Screenshot or Project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    put:\n      tags:\n        - Screenshots\n      summary: 'Replace all screenshot tags'\n      operationId: api.projects.screenshots.tags.replaceAll\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/ScreenshotId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TagCollectionCreateForm'\n      responses:\n        '200':\n          description: 'Screenshots tags were successfully replaced'\n        '400':\n          description: 'Invalid Request Body'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '404':\n          description: 'Screenshot or project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    post:\n      tags:\n        - Screenshots\n      summary: 'Add a tag'\n      operationId: api.projects.screenshots.tags.createOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/ScreenshotId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TagCollectionCreateForm'\n      responses:\n        '200':\n          description: 'Screenshot tag data'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagResource'\n        '400':\n          description: 'Invalid Request Body'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '404':\n          description: 'Screenshot or project with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    delete:\n      tags:\n        - Screenshots\n      summary: 'Delete all screenshot tags'\n      operationId: api.projects.screenshots.tags.deleteAll\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/ScreenshotId'\n      responses:\n        '204':\n          description: 'Screenshots tags were successfully deleted'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '404':\n          description: 'Screenshot or project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/screenshots/{screenshotId}/tags/{tagId}':\n    get:\n      tags:\n        - Screenshots\n      summary: 'Get a tag'\n      operationId: api.projects.screenshots.tags.getOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/ScreenshotId'\n        -\n          $ref: '#/components/parameters/TagId'\n      responses:\n        '200':\n          description: 'Screenshot tag data'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagResource'\n        '404':\n          description: 'Tag or screenshot or project with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    delete:\n      tags:\n        - Screenshots\n      summary: 'Delete a tag'\n      operationId: api.projects.screenshots.tags.deleteOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/ScreenshotId'\n        -\n          $ref: '#/components/parameters/TagId'\n      responses:\n        '204':\n          description: 'Screenshots tag was successfully deleted'\n        '404':\n          description: 'Tag or screenshot or project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    patch:\n      tags:\n        - Screenshots\n      summary: 'Update a tag'\n      operationId: api.projects.screenshots.tags.patchOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/ScreenshotId'\n        -\n          $ref: '#/components/parameters/TagId'\n      requestBody:\n        description: 'A JSON Patch document as defined by \u003ca href=\"https://tools.ietf.org/html/rfc6902#section-3\" target=\"_blank\"\u003eRFC 6902\u003c/a\u003e'\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JsonPatchDocument'\n      responses:\n        '200':\n          description: 'Screenshot tag successfully updated'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScreenshotResource'\n        '400':\n          description: 'Invalid Request Body'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Tag or screenshot or project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '500':\n          description: 'Internal Server Error'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/settings':\n    get:\n      tags:\n        - 'Projects Settings'\n      summary: 'Get project settings'\n      operationId: api.projects.settings.getOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n      responses:\n        '200':\n          description: 'Settings data'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectSettingResource'\n        '404':\n          description: 'Project with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    patch:\n      tags:\n        - 'Projects Settings'\n      summary: 'Update project settings'\n      operationId: api.projects.settings.patchOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n      requestBody:\n        description: 'A JSON Patch document as defined by \u003ca href=\"https://tools.ietf.org/html/rfc6902#section-3\" target=\"_blank\"\u003eRFC 6902\u003c/a\u003e'\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JsonPatchDocument'\n      responses:\n        '200':\n          description: 'Settings successfully updated'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectSettingResource'\n        '400':\n          description: 'Invalid Request Body'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Branch or project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  /storages:\n    get:\n      tags:\n        - Storage\n      summary: 'List user storages'\n      operationId: api.storages.getAll\n      parameters:\n        -\n          parameter: StorageId\n          name: storageId\n          in: path\n          description: 'A unique identifier for the storage.'\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: 'List user storages'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StorageCollectionResource'\n        '400':\n          description: 'Request parameters are invalid'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n    post:\n      tags:\n        - Storage\n      summary: 'Upload a file'\n      operationId: api.storages.uploadOne\n      parameters:\n        -\n          $ref: '#/components/parameters/StorageContentTypeHeader'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StorageUpload'\n      responses:\n        '201':\n          description: 'File upload created successfully'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StorageResource'\n        '400':\n          description: 'Bad request parameters'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n  '/storages/{storageId}':\n    get:\n      tags:\n        - Storage\n      summary: 'Get storage'\n      operationId: api.storages.getOne\n      parameters:\n        -\n          parameter: StorageId\n          name: storageId\n          in: path\n          description: 'A unique identifier for the storage.'\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: 'Storage data'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StorageResource'\n        '404':\n          description: 'Storage with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    delete:\n      tags:\n        - Storage\n      summary: 'Delete Storage'\n      operationId: api.storages.deleteOne\n      parameters:\n        -\n          parameter: StorageId\n          name: storageId\n          in: path\n          description: 'A unique identifier for the storage.'\n          required: true\n          schema:\n            type: integer\n      responses:\n        '204':\n          description: 'Storage was successfully deleted'\n        '404':\n          description: 'Storage with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/strings':\n    get:\n      tags:\n        - Strings\n      summary: 'List project strings'\n      operationId: api.projects.pseudo.listProjectStrings\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/QueryFileId'\n        -\n          $ref: '#/components/parameters/PaginationLimit'\n        -\n          $ref: '#/components/parameters/PaginationOffset'\n      responses:\n        '200':\n          description: 'List project strings'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringCollectionResource'\n        '400':\n          description: 'Request parameters are invalid'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '404':\n          description: 'Project with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    post:\n      tags:\n        - Strings\n      summary: 'Create a project string'\n      operationId: api.projects.strings.createOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StringCreateForm'\n      responses:\n        '201':\n          description: 'String was created successfully'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResource'\n        '400':\n          description: 'Bad request parameters'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '404':\n          description: 'Project or file with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/strings/{stringId}':\n    get:\n      tags:\n        - Strings\n      summary: 'Get a project string'\n      operationId: api.projects.strings.getOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/StringId'\n      responses:\n        '200':\n          description: 'String data'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResource'\n        '404':\n          description: 'Project or string with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    delete:\n      tags:\n        - Strings\n      summary: 'Delete a project string'\n      operationId: api.projects.strings.deleteOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/StringId'\n      responses:\n        '204':\n          description: 'String was successfully deleted'\n        '404':\n          description: 'Project, file or string with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    patch:\n      tags:\n        - Strings\n      summary: 'Update a project string'\n      operationId: api.projects.strings.patchOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/StringId'\n      requestBody:\n        description: 'A JSON Patch document as defined by \u003ca href=\"https://tools.ietf.org/html/rfc6902#section-3\" target=\"_blank\"\u003eRFC 6902\u003c/a\u003e'\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JsonPatchDocument'\n      responses:\n        '200':\n          description: 'String successfully updated'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResource'\n        '400':\n          description: 'Invalid Request Body'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Project, file or string with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '500':\n          description: 'Internal Server Error'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/tasks':\n    get:\n      tags:\n        - Tasks\n      summary: 'List tasks'\n      operationId: api.projects.tasks.getMany\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/PaginationLimit'\n        -\n          $ref: '#/components/parameters/PaginationOffset'\n      responses:\n        '200':\n          description: 'List tasks'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskCollectionResource'\n        '400':\n          description: 'Request parameters are invalid'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Project with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    post:\n      tags:\n        - Tasks\n      summary: 'Create a task'\n      operationId: api.projects.tasks.createOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EnterpriseTaskCreateForm'\n      responses:\n        '201':\n          description: 'Task created successfully'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskResource'\n        '400':\n          description: 'Bad request parameters'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '404':\n          description: 'Project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/tasks/{taskId}':\n    get:\n      tags:\n        - Tasks\n      summary: 'Get a task'\n      operationId: api.projects.tasks.getOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/TaskId'\n      responses:\n        '200':\n          description: 'Task data'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskResource'\n        '404':\n          description: 'Project or task with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    delete:\n      tags:\n        - Tasks\n      summary: 'Delete a task'\n      operationId: api.projects.tasks.deleteOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/TaskId'\n      responses:\n        '204':\n          description: 'Task was successfully deleted'\n        '404':\n          description: 'Project or task with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    patch:\n      tags:\n        - Tasks\n      summary: 'Update a task'\n      operationId: api.projects.tasks.patchOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/TaskId'\n      requestBody:\n        description: 'A JSON Patch document as defined by \u003ca href=\"https://tools.ietf.org/html/rfc6902#section-3\" target=\"_blank\"\u003eRFC 6902\u003c/a\u003e'\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JsonPatchDocument'\n      responses:\n        '200':\n          description: 'Task successfully updated'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskResource'\n        '400':\n          description: 'Invalid Request Body'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Task or project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '500':\n          description: 'Internal Server Error'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/tasks/statistics':\n    get:\n      tags:\n        - Tasks\n      summary: 'List of task statistic'\n      operationId: api.projects.tasks.statistics.getMany\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/PaginationLimit'\n        -\n          $ref: '#/components/parameters/PaginationOffset'\n        -\n          $ref: '#/components/parameters/TaskStatisticStatus'\n        -\n          $ref: '#/components/parameters/LanguageIds'\n      responses:\n        '200':\n          description: 'List of task statistic'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskStatisticCollectionResource'\n        '404':\n          description: 'Project with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/glossaries/{glossaryId}/terms':\n    get:\n      tags:\n        - Glossaries\n      summary: 'List terms'\n      operationId: api.glossaries.terms.getMany\n      parameters:\n        -\n          $ref: '#/components/parameters/GlossaryId'\n        -\n          $ref: '#/components/parameters/QueryUserId'\n        -\n          $ref: '#/components/parameters/PaginationLimit'\n        -\n          $ref: '#/components/parameters/PaginationOffset'\n      responses:\n        '200':\n          description: 'List terms'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TermCollectionResource'\n        '400':\n          description: 'Request parameters are invalid'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Glossary with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    post:\n      tags:\n        - Glossaries\n      summary: 'Create a term'\n      operationId: api.glossary.terms.createOne\n      parameters:\n        -\n          $ref: '#/components/parameters/GlossaryId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TermCreateForm'\n      responses:\n        '201':\n          description: 'Term created successfully'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TermResource'\n        '400':\n          description: 'Bad request parameters'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Glossary with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/glossaries/{glossaryId}/terms/{termId}':\n    get:\n      tags:\n        - Glossaries\n      summary: 'Get a term'\n      operationId: api.glossaries.terms.getOne\n      parameters:\n        -\n          $ref: '#/components/parameters/GlossaryId'\n        -\n          $ref: '#/components/parameters/TermId'\n      responses:\n        '200':\n          description: 'Term data'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TermResource'\n        '404':\n          description: 'Glossary or term with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    delete:\n      tags:\n        - Glossaries\n      summary: 'Delete a term'\n      operationId: api.glossaries.terms.deleteOne\n      parameters:\n        -\n          $ref: '#/components/parameters/GlossaryId'\n        -\n          $ref: '#/components/parameters/TermId'\n      responses:\n        '204':\n          description: 'Term was successfully deleted'\n        '404':\n          description: 'Glossary or term with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    patch:\n      tags:\n        - Glossaries\n      summary: 'Update a term'\n      operationId: api.glossaries.terms.patchOne\n      parameters:\n        -\n          $ref: '#/components/parameters/GlossaryId'\n        -\n          $ref: '#/components/parameters/TermId'\n      requestBody:\n        description: 'A JSON Patch document as defined by \u003ca href=\"https://tools.ietf.org/html/rfc6902#section-3\" target=\"_blank\"\u003eRFC 6902\u003c/a\u003e'\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JsonPatchDocument'\n      responses:\n        '200':\n          description: 'Term successfully updated'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TermResource'\n        '400':\n          description: 'Invalid Request Body'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Glossary or term with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '500':\n          description: 'Internal Server Error'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  /tms:\n    get:\n      tags:\n        - 'Translation Memories (TMs)'\n      summary: 'List TMs'\n      operationId: api.tms.getList\n      parameters:\n        -\n          $ref: '#/components/parameters/QueryGroupId'\n        -\n          $ref: '#/components/parameters/PaginationLimit'\n        -\n          $ref: '#/components/parameters/PaginationOffset'\n      responses:\n        '200':\n          description: 'List TMs'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TmCollectionResource'\n        '400':\n          description: 'Request parameters are invalid'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Group with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResource'\n    post:\n      tags:\n        - 'Translation Memories (TMs)'\n      summary: 'Create a TM'\n      operationId: api.tms.uploadOne\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EnterpriseTmCreateForm'\n      responses:\n        '202':\n          description: 'Tm created successfully'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TmResource'\n        '400':\n          description: 'Bad request parameters'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResource'\n        '404':\n          description: 'Group with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/tms/{tmId}':\n    get:\n      tags:\n        - 'Translation Memories (TMs)'\n      summary: 'Get a TM'\n      operationId: api.tms.getOne\n      parameters:\n        -\n          $ref: '#/components/parameters/TmId'\n      responses:\n        '200':\n          description: 'Tm info'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TmResource'\n        '404':\n          description: 'Group or Tm with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResource'\n    delete:\n      tags:\n        - 'Translation Memories (TMs)'\n      summary: 'Delete a TM'\n      operationId: api.tms.deleteOne\n      parameters:\n        -\n          $ref: '#/components/parameters/TmId'\n      responses:\n        '204':\n          description: 'Tm successfully deleted'\n        '400':\n          description: 'Request parameters are invalid'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Group or Tm with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResource'\n    patch:\n      tags:\n        - 'Translation Memories (TMs)'\n      summary: 'Update a TM'\n      operationId: api.tms.patchOne\n      parameters:\n        -\n          $ref: '#/components/parameters/TmId'\n      requestBody:\n        description: 'A JSON Patch document as defined by \u003ca href=\"https://tools.ietf.org/html/rfc6902#section-3\" target=\"_blank\"\u003eRFC 6902\u003c/a\u003e'\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JsonPatchDocument'\n      responses:\n        '200':\n          description: 'Tm successfully updated'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TmResource'\n        '400':\n          description: 'Request parameters are invalid'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Group or Tm with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResource'\n  '/tms/{tmId}/exports':\n    get:\n      tags:\n        - 'Translation Memories (TMs)'\n      summary: 'Get a TM download link'\n      operationId: api.tms.downloadOne\n      parameters:\n        -\n          $ref: '#/components/parameters/TmId'\n        -\n          $ref: '#/components/parameters/SourceLanguageId'\n        -\n          $ref: '#/components/parameters/TargetLanguageId'\n        -\n          $ref: '#/components/parameters/Format'\n      responses:\n        '200':\n          description: 'Tm info'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DownloadLinkResource'\n        '404':\n          description: 'Tm with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResource'\n    post:\n      tags:\n        - 'Translation Memories (TMs)'\n      summary: 'Start TM export'\n      operationId: api.tms.exportOne\n      parameters:\n        -\n          $ref: '#/components/parameters/TmId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TmExportForm'\n      responses:\n        '200':\n          description: 'Created job info'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TmExportResource'\n        '404':\n          description: 'Tm with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResource'\n  '/tms/{tmId}/exports/{exportId}':\n    get:\n      tags:\n        - 'Translation Memories (TMs)'\n      summary: 'Get TM export status'\n      operationId: api.tms.export.getOne\n      parameters:\n        -\n          $ref: '#/components/parameters/TmId'\n        -\n          $ref: '#/components/parameters/ExportId'\n      responses:\n        '200':\n          description: 'Tm info'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TmExportResource'\n        '404':\n          description: 'Tm with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResource'\n  '/tms/{tmId}/imports':\n    post:\n      tags:\n        - 'Translation Memories (TMs)'\n      summary: 'Upload a TM'\n      operationId: api.tms.upload\n      parameters:\n        -\n          $ref: '#/components/parameters/TmId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TmUploadForm'\n      responses:\n        '202':\n          description: 'Tm file uploaded successfully, job created. You can use job identifier for checking job status'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TmImportResource'\n        '400':\n          description: 'Bad request parameters'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Group or Tm with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResource'\n  '/tms/{tmId}/imports/{importId}':\n    get:\n      tags:\n        - 'Translation Memories (TMs)'\n      summary: 'Get TM import status '\n      operationId: api.tms.upload.jobByTm\n      parameters:\n        -\n          $ref: '#/components/parameters/TmId'\n        -\n          $ref: '#/components/parameters/ImportId'\n      responses:\n        '200':\n          description: 'Progress of tm import'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TmImportResource'\n        '404':\n          description: 'Group, Tm, Import with the specified identifier was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '500':\n          description: 'Internal Server Error'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/translations/builds':\n    get:\n      tags:\n        - Translations\n      summary: 'List project builds'\n      operationId: api.projects.translations.builds.getList\n      parameters:\n        -\n          name: branchId\n          in: query\n          description: 'Filter builds by branchId'\n          schema:\n            type: integer\n        -\n          $ref: '#/components/parameters/PaginationLimit'\n        -\n          $ref: '#/components/parameters/PaginationOffset'\n      responses:\n        '200':\n          description: 'Available Project builds list'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TranslationProjectBuildCollectionResource'\n        '404':\n          description: 'Project with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '500':\n          description: 'Internal Server Error'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    post:\n      tags:\n        - Translations\n      summary: 'Build transaltions'\n      description: 'Build a zip file with the translations, so when you download them, you have the latest ones.'\n      operationId: api.projects.translations.builds.init\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TranslationCreateBuildForm'\n      responses:\n        '201':\n          description: 'Info for created project build'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TranslationProjectBuildResource'\n        '400':\n          description: 'Request parameters are invalid'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Project, branch or language with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '500':\n          description: 'Internal Server Error'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/translations/builds/{buildId}/download':\n    get:\n      tags:\n        - Translations\n      summary: 'Download translations URL'\n      description: \"Get a link to download a ZIP file with translations. You can choose a specific target language need or download all of them at once.\\n\\n__Note:__ This method creates a URL to download a ZIP file that was created during the last build. To make sure all the latest translations are included, please use  Init a translation build API method to build the project before downloading.\"\n      operationId: api.projects.translations.builds.getDownloadLink\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/BuildId'\n      responses:\n        '200':\n          description: 'Get a URL to download translations'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DownloadLinkResource'\n        '202':\n          description: 'Project build resource if one is not in finished status'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TranslationProjectBuildResource'\n        '404':\n          description: 'Project build with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '500':\n          description: 'Internal Server Error'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/translations/builds/{buildId}':\n    get:\n      tags:\n        - Translations\n      summary: 'Get project build info'\n      operationId: api.projects.translations.builds.getOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/BuildId'\n      responses:\n        '200':\n          description: 'Project build'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TranslationProjectBuildResource'\n        '404':\n          description: 'Project or Project build with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '500':\n          description: 'Internal Server Error'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    delete:\n      tags:\n        - Translations\n      summary: 'Cancel project build'\n      operationId: api.projects.translations.builds.cancel\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/BuildId'\n      responses:\n        '204':\n          description: 'Build was successfully canceled'\n        '404':\n          description: 'Project or Project build with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '500':\n          description: 'Internal Server Error'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '503':\n          description: 'Service Unavailable'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/translations/{languageId}':\n    post:\n      tags:\n        - Translations\n      summary: 'Upload translation for a specified language'\n      operationId: api.projects.translations.initByLanguage\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/LanguageId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TranslationUploadForm'\n      responses:\n        '400':\n          description: 'Request parameters are invalid'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Project with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '500':\n          description: 'Internal Server Error'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/webhooks':\n    get:\n      tags:\n        - Webhooks\n      summary: 'List webhooks'\n      operationId: api.projects.webhooks.getMany\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/PaginationLimit'\n        -\n          $ref: '#/components/parameters/PaginationOffset'\n      responses:\n        '200':\n          description: 'List webhooks'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebhookCollectionResource'\n        '400':\n          description: 'Request parameters are invalid'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    post:\n      tags:\n        - Webhooks\n      summary: 'Create a webhook'\n      operationId: api.projects.webhooks.createOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WebhookCreateForm'\n      responses:\n        '201':\n          description: 'Webhook created successfully'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebhookResource'\n        '400':\n          description: 'Bad request parameters'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n  '/projects/{projectId}/webhooks/{webhookId}':\n    get:\n      tags:\n        - Webhooks\n      summary: 'Get a webhook'\n      operationId: api.projects.webhooks.getOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/WebhookId'\n      responses:\n        '200':\n          description: 'Webhook data'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebhookResource'\n        '404':\n          description: 'Webhook or project with the specified id is not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    delete:\n      tags:\n        - Webhooks\n      summary: 'Delete a webhook'\n      operationId: api.projects.webhooks.deleteOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/WebhookId'\n      responses:\n        '204':\n          description: 'Webhook was successfully deleted'\n        '404':\n          description: 'Webhook or project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n    patch:\n      tags:\n        - Webhooks\n      summary: 'Update a webhook'\n      operationId: api.projects.webhooks.patchOne\n      parameters:\n        -\n          $ref: '#/components/parameters/ProjectId'\n        -\n          $ref: '#/components/parameters/WebhookId'\n      requestBody:\n        description: 'A JSON Patch document as defined by \u003ca href=\"https://tools.ietf.org/html/rfc6902#section-3\" target=\"_blank\"\u003eRFC 6902\u003c/a\u003e'\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JsonPatchDocument'\n      responses:\n        '200':\n          description: 'Webhook successfully updated'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebhookResource'\n        '400':\n          description: 'Invalid Request Body'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorCollectionResource'\n        '404':\n          description: 'Webhook or project with the specified id was not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\n        '500':\n          description: 'Internal Server Error'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResource'\ncomponents:\n  schemas:\n    BranchCreateForm:\n      required:\n        - name\n      properties:\n        name:\n          description: 'The name of related version branch (Versions Management).'\n          type: string\n        title:\n          description: 'Branch title to be displayed in Crowdin UI.'\n          type: string\n        exportPattern:\n          description: 'Branch export pattern. Is used to create directory name and path in resulted translations bundle.'\n          type: string\n        priority:\n          description: \"Each branch can have a different priority level. Default: normal priority.\\n *                 '0' — low priority\\n *                 '1' — normal priority\\n *                 '2' — high priority\"\n          type: integer\n          enum:\n            - 0\n            - 1\n            - 2\n      type: object\n    BranchCollectionResource:\n      description: 'Branch Collection Resource'\n      properties:\n        data:\n          description: 'Class BranchCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/BranchResource'\n        pagination:\n          description: 'Class BranchCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/Pagination'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/CollectionResource'\n    BranchResource:\n      description: 'Branch Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/Branch'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    Branch:\n      title: Branch\n      description: 'Branch Response Model'\n      properties:\n        id:\n          type: integer\n        projectId:\n          type: integer\n        name:\n          type: string\n        title:\n          type: string\n        exportPattern:\n          type: string\n        status:\n          type: integer\n        priority:\n          type: integer\n        createdAt:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time\n      type: object\n    CollectionResource:\n      description: 'Base schema of resource container. Container is a wrapper object that contains payload in required `data` property and provides space for adding any other metadata.'\n      required:\n        - data\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    DownloadLinkResource:\n      description: 'Download Link Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/DownloadLink'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    ErrorCollectionResource:\n      title: 'Error Collection Resource'\n      properties:\n        errors:\n          description: 'Class ErrorCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/ErrorResource'\n      type: object\n    ErrorResource:\n      title: 'Error Resource'\n      properties:\n        key:\n          type: string\n        errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/AttributeError'\n      type: object\n    AttributeError:\n      title: AttributeError\n      properties:\n        code:\n          type: string\n        message:\n          type: string\n      type: object\n    ExceptionResource:\n      description: 'Exception Resource'\n      properties:\n        error:\n          $ref: '#/components/schemas/Exception'\n      type: object\n    JobAttributesFieldsSchema:\n      title: 'Job Attributes Possible Fields'\n      properties:\n        columnNumber:\n          type: string\n      type: object\n    JobAttributesSchema:\n      title: Attributes\n      type: object\n      additionalProperties:\n        oneOf:\n          -\n            type: string\n          -\n            type: integer\n          -\n            type: boolean\n    Resource:\n      description: 'Base schema of resource container. Container is a wrapper object that contains payload in required `data` property and provides space for adding any other metadata.'\n      required:\n        - data\n      type: object\n    DownloadLink:\n      title: 'Download Link'\n      description: 'Download Link Response Model'\n      properties:\n        url:\n          type: string\n        expireIn:\n          type: string\n      type: object\n    Exception:\n      title: Exception\n      description: 'Exception Response Model'\n      properties:\n        message:\n          type: string\n        code:\n          type: integer\n      type: object\n    Pagination:\n      title: Pagination\n      description: 'Pagination Response Model'\n      properties:\n        offset:\n          type: integer\n        limit:\n          type: integer\n      type: object\n    DirectoryCreateForm:\n      required:\n        - name\n      properties:\n        branchId:\n          description: 'Branch identifier.'\n          type: integer\n        parentId:\n          description: 'Parent directory identifier.'\n          type: integer\n        name:\n          description: 'The name of the directory.'\n          type: string\n        title:\n          description: 'Directory title to be displayed in Crowdin UI.'\n          type: string\n        exportPattern:\n          description: 'Directory export pattern. Is used to create directory name and path in resulted translations bundle.'\n          type: string\n        priority:\n          description: \"Each directory can have a different priority level. Default: normal priority.\\n *                  '0' — low priority\\n *                  '1' — normal priority\\n *                  '2' — high priority\"\n          type: integer\n          enum:\n            - 0\n            - 1\n            - 2\n          example: '1'\n      type: object\n    DirectoryCollectionResource:\n      description: 'Directory Collection Resource'\n      properties:\n        data:\n          description: 'Class DirectoryCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/DirectoryResource'\n        pagination:\n          description: 'Class DirectoryCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/Pagination'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/CollectionResource'\n    DirectoryResource:\n      description: 'Directory Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/Directory'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    Directory:\n      title: Directory\n      description: 'Directory Response Model'\n      properties:\n        id:\n          type: integer\n        projectId:\n          type: integer\n        branchId:\n          type: integer\n        parentId:\n          type: integer\n        name:\n          type: string\n        title:\n          type: string\n        exportPattern:\n          type: string\n        status:\n          type: integer\n        priority:\n          type: integer\n        createdAt:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time\n      type: object\n    ProjectFileType:\n      description: \"\\n *          empty value or 'auto' — Try to detect file type by extension or MIME type\\n *          'android' — Android (*.xml)\\n *          'macosx' — Mac OS X / iOS (*.strings)\\n *          'resx' — .NET, Windows Phone (*.resx)\\n *          'properties' — Java (*.properties)\\n *          'gettext' — GNU GetText (*.po, *.pot)\\n *          'yaml' — Ruby On Rails (*.yaml)\\n *          'php' — Hypertext Preprocessor (*.php)\\n *          'json' — Generic JSON (*.json)\\n *          'xml' — Generic XML (*.xml)\\n *          'ini' — Generic INI (*.ini)\\n *          'rc' — Windows Resources (*.rc)\\n *          'resw' — Windows 8 Metro (*.resw)\\n *          'resjson' — Windows 8 Metro (*.resjson)\\n *          'qtts' — Nokia Qt (*.ts)\\n *          'joomla' — Joomla localizable resources (*.ini)\\n *          'chrome' — Google Chrome Extension (*.json)\\n *          'dtd' — Mozilla DTD (*.dtd)\\n *          'dklang' — Delphi DKLang (*.dklang)\\n *          'flex' — Flex (*.properties)\\n *          'nsh' — NSIS Installer Resources (*.nsh)\\n *          'wxl' — WiX Installer (*.wxl)\\n *          'xliff' — XLIFF (*.xliff)\\n *          'html' — HTML (*.html, *.htm, *.xhtml, *.xhtm)\\n *          'haml' — Haml (*.haml)\\n *          'txt' — Plain Text (*.txt)\\n *          'csv' — Comma Separated Values (*.csv)\\n *          'md' — Markdown (*.md, *.text, *.markdown...)\\n *          'flsnp' — MadCap Flare (*.flnsp, .flpgpl .fltoc)\\n *          'fm_html' — Jekyll HTML (*.html)\\n *          'fm_md' — Jekyll Markdown (*.md)\\n *          'mediawiki' — MediaWiki (*.wiki, *.wikitext, *.mediawiki)\\n *          'docx' — Microsoft Office, OpenOffice.org Documents, Adobe InDesign Adobe FrameMaker(*.docx, *.dotx, *.odt, *.ott, *.xslx, *.xltx, *.pptx, *.potx, *.ods, *.ots, *.odg, *.otg, *.odp, *.otp, *.imdl, *.mif)\\n *          'sbv' — Youtube .sbv (*.sbv)\\n *          'vtt' — Video Subtitling and WebVTT (*.vtt)\\n *          'srt' — SubRip .srt (*.srt)\"\n      type: string\n      enum:\n        - auto\n        - android\n        - macosx\n        - resx\n        - properties\n        - gettext\n        - yaml\n        - php\n        - json\n        - xml\n        - ini\n        - rc\n        - resw\n        - resjson\n        - qtts\n        - joomla\n        - chrome\n        - dtd\n        - dklang\n        - flex\n        - nsh\n        - wxl\n        - xliff\n        - html\n        - haml\n        - txt\n        - csv\n        - md\n        - flsnp\n        - fm_html\n        - fm_md\n        - mediawiki\n        - docx\n        - sbv\n        - vtt\n        - srt\n      example: csv\n    SpreadsheetLanguageCodeColumnNumber:\n      title: 'Language Code Column Number'\n      properties:\n        columnNumber:\n          description: 'Class FileCreateForm'\n          type: integer\n      type: object\n    SpreadsheetFileImportSchema:\n      title: 'Spreadsheet File Import Schema'\n      description: '{\"identifier\":0, \"sourcePhrase\":1, \"en\":2, \"de\":3}'\n      properties:\n        identifier:\n          description: 'Class FileCreateForm'\n          type: integer\n        sourcePhrase:\n          description: 'Class FileCreateForm'\n          type: integer\n      type: object\n      example:\n        identifier: 0\n        sourcePhrase: 1\n        en: 2\n        de: 3\n      additionalProperties:\n        $ref: '#/components/schemas/SpreadsheetLanguageCodeColumnNumber'\n    SpreadsheetFileImportOptions:\n      title: 'Spreadsheet File Import Options'\n      properties:\n        firstLineContainsHeader:\n          description: 'Class FileCreateForm'\n          type: boolean\n        importTranslations:\n          description: 'Class FileCreateForm'\n          type: boolean\n        scheme:\n          $ref: '#/components/schemas/SpreadsheetFileImportSchema'\n      type: object\n    XmlFileImportOptions:\n      title: 'Xml File Import Options'\n      properties:\n        translateContent:\n          description: 'Class FileCreateForm'\n          type: boolean\n        translateAttributes:\n          description: 'Class FileCreateForm'\n          type: boolean\n        contentSegmentation:\n          description: 'Class FileCreateForm'\n          type: boolean\n        translatableElements:\n          description: 'Class FileCreateForm'\n          type: array\n          items:\n            type: string\n            enum:\n              - /path/to/node\n              - '/path/to/attribute[@attr]'\n              - //node\n              - '//[@attr]'\n              - nodeone/nodetwo\n              - /nodeone//nodetwo\n              - '//node[@attr]'\n      type: object\n    GeneralFileExportOptions:\n      title: 'General File Export Options'\n      properties:\n        exportPattern:\n          description: 'Class FileCreateForm'\n          type: string\n      type: object\n    PropertyFileExportOptions:\n      title: 'Property File Export Options'\n      properties:\n        escapeQuotes:\n          description: 'Class FileCreateForm'\n          type: integer\n          enum:\n            - 0\n            - 1\n            - 2\n            - 3\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/GeneralFileExportOptions'\n    FileImportOptions:\n      title: 'File Import Options'\n      type: object\n      example:\n        firstLineContainsHeader: true\n        scheme:\n          identifier: 0\n          sourcePhrase: 1\n          en: 2\n          de: 3\n      oneOf:\n        -\n          $ref: '#/components/schemas/SpreadsheetFileImportOptions'\n        -\n          $ref: '#/components/schemas/XmlFileImportOptions'\n    FileExportOptions:\n      title: 'File Export Options'\n      type: object\n      example:\n        escapeQuotes: 3\n      oneOf:\n        -\n          $ref: '#/components/schemas/GeneralFileExportOptions'\n        -\n          $ref: '#/components/schemas/PropertyFileExportOptions'\n    FileCreateForm:\n      required:\n        - storageId\n        - name\n      properties:\n        branchId:\n          description: 'Specify the id of the branch where the file should be created.'\n          type: integer\n        directoryId:\n          description: 'Directory Identifier.'\n          type: integer\n        storageId:\n          description: 'A unique identifier for the storage. Storage is where you add files, before they can be added to your organization. [More about Storage](#tag/Storage).'\n          type: integer\n        name:\n          description: 'The name of the file.'\n          type: string\n        title:\n          description: 'Title of the file - can be different from the file name, in a more descriptive manner, as it will be displayed to translators.'\n          type: string\n        type:\n          $ref: '#/components/schemas/ProjectFileType'\n        importOptions:\n          $ref: '#/components/schemas/FileImportOptions'\n        exportOptions:\n          $ref: '#/components/schemas/FileExportOptions'\n      type: object\n    FileCollectionResource:\n      description: 'File Collection Resource'\n      properties:\n        data:\n          description: 'Class FileCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/FileResource'\n        pagination:\n          description: 'Class FileCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/Pagination'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/CollectionResource'\n    FileResource:\n      description: 'File Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/File'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    File:\n      title: 'Project File'\n      description: 'Project File Response Model'\n      properties:\n        id:\n          type: integer\n        projectId:\n          type: integer\n        branchId:\n          type: integer\n        directoryId:\n          type: integer\n        languageId:\n          type: integer\n        name:\n          type: string\n        title:\n          type: string\n        type:\n          type: string\n        revision:\n          type: integer\n        status:\n          type: integer\n        priority:\n          type: integer\n        attributes:\n          properties:\n            mimeType:\n              type: string\n              example: application/xml\n            fileSize:\n              type: integer\n          type: object\n        exportPattern:\n          type: string\n        createdAt:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time\n      type: object\n    EnterpriseGlossaryCreateForm:\n      required:\n        - name\n        - groupId\n      properties:\n        name:\n          description: 'The name of the glossary.'\n          type: string\n        groupId:\n          description: 'If you want to add this glossary to a group - specify the group id, if not - 1 and glossary will be added to your workspace and available for all projects and groups. Default: 1.'\n          type: integer\n      type: object\n    GlossaryExportForm:\n      required:\n        - storageId\n      properties:\n        format:\n          description: \"Export Glossary in one of the supported formats. Default: tbx.\\n *             'tbx'\\n *             'csv'\\n *             'xlsx'\"\n          type: string\n          enum:\n            - tbx\n            - csv\n            - xlsx\n      type: object\n    GlossaryImportForm:\n      required:\n        - storageId\n      properties:\n        storageId:\n          description: 'File in TBX, CSV or XLS/XLSX formats.'\n          type: integer\n        scheme:\n          description: \"__Note:__ Used only when uploading CSV (or XLS/XLSX) file to define data columns mapping.\\n\\nAcceptable value is the combination of the following constants (%language_code% is a placeholder for your language code):\\n * 'term_{%language_code%}' — Column with terms.\\n * description_{%language_code%}' — Column with terms description.\\n * 'partOfSpeech_{%language_code%}' — Column with terms part of speech.\"\n          type: object\n          example:\n            term_en: 0\n            description_en: 1\n        firstLineContainsHeader:\n          description: 'Used when uploading CSV (or XLS/XLSX) files via API. Defines whether first line should be imported or it contains columns headers.'\n          type: boolean\n      type: object\n    GlossaryCollectionResource:\n      description: 'Glossary Collection Resource'\n      properties:\n        data:\n          description: 'Class GlossaryCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/GlossaryResource'\n        pagination:\n          description: 'Class GlossaryCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/Pagination'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/CollectionResource'\n    GlossaryExportResource:\n      description: 'Glossary Export Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/GlossaryExport'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    GlossaryImportResource:\n      description: 'Glossary Import Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/GlossaryImport'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    GlossaryResource:\n      description: 'Glossary Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/Glossary'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    GlossaryExport:\n      description: 'Glossary Export Response Model'\n      properties:\n        identifier:\n          type: string\n        status:\n          type: string\n        progress:\n          description: 'in percentages'\n          type: integer\n        attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/JobAttributesSchema'\n        createdAt:\n          type: string\n        updatedAt:\n          type: string\n        startedAt:\n          type: string\n        finishedAt:\n          type: string\n        eta:\n          type: string\n      type: object\n    GlossaryImport:\n      description: 'Glossary Import Response Model'\n      properties:\n        identifier:\n          type: string\n        status:\n          type: string\n        progress:\n          description: 'in percentages'\n          type: integer\n        attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/JobAttributesSchema'\n        createdAt:\n          type: string\n        updatedAt:\n          type: string\n        startedAt:\n          type: string\n        finishedAt:\n          type: string\n        eta:\n          type: string\n      type: object\n    Glossary:\n      title: Glossary\n      description: 'Glossary Response Model'\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        groupId:\n          type: integer\n        userId:\n          type: integer\n        terms:\n          type: integer\n        languageIds:\n          type: array\n          items:\n            type: integer\n        projectIds:\n          type: array\n          items:\n            type: integer\n        createdAt:\n          description: 'UTC timezone'\n          type: string\n          format: date-time\n      type: object\n    GroupCreateForm:\n      required:\n        - name\n      properties:\n        name:\n          description: 'The name of the group.'\n          type: string\n        parentId:\n          description: 'Parent group Identifier.'\n          type: integer\n        description:\n          description: 'Group description.'\n          type: string\n      type: object\n    GroupCollectionResource:\n      description: 'Group Collection Resource'\n      properties:\n        data:\n          description: 'Class GroupCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/GroupResource'\n        pagination:\n          description: 'Class GroupCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/Pagination'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/CollectionResource'\n    GroupResource:\n      description: 'Group Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/Group'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    Group:\n      title: Group\n      description: 'Group Response Model'\n      properties:\n        id:\n          type: integer\n        visibility:\n          type: integer\n        name:\n          type: string\n        description:\n          type: string\n        parentId:\n          type: integer\n        organizationId:\n          type: integer\n        userId:\n          type: integer\n        subgroupsCount:\n          type: integer\n        projectsCount:\n          type: integer\n        createdAt:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time\n      type: object\n    BackgroundUploadForm:\n      required:\n        - storageId\n      properties:\n        storageId:\n          description: 'A unique identifier for the storage. Storage is where you add files, before they can be added to your organization. [More about Storage](#tag/Storage).'\n          type: integer\n      type: object\n    LogoUploadForm:\n      required:\n        - storageId\n      properties:\n        storageId:\n          description: 'A unique identifier for the storage. Storage is where you add files, before they can be added to your organization. [More about Storage](#tag/Storage).'\n          type: integer\n      type: object\n    IssueCollectionResource:\n      description: 'Issue Collection Resource'\n      properties:\n        data:\n          description: 'Class IssueCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/IssueResource'\n        pagination:\n          description: 'Class IssueCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/Pagination'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/CollectionResource'\n    IssueResource:\n      description: 'Issue Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/Issue'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    IssueStatisticCollectionResource:\n      description: 'Issue Statistic Collection Resource'\n      properties:\n        data:\n          description: 'Class IssueStatisticCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/IssueStatisticResource'\n        pagination:\n          description: 'Class IssueStatisticCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/Pagination'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    IssueStatisticResource:\n      description: 'Issue Statistic Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/IssueStatistic'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    Issue:\n      title: Issue\n      description: 'Issue Response Model'\n      properties:\n        id:\n          type: integer\n        text:\n          type: string\n        userId:\n          type: integer\n        stringId:\n          type: integer\n        languageId:\n          type: integer\n        type:\n          type: string\n        status:\n          type: string\n        createdAt:\n          type: string\n          format: date-time\n      type: object\n    IssueStatistic:\n      title: Issue\n      description: 'Issue Statistic Response Model'\n      properties:\n        total:\n          type: integer\n        languageId:\n          type: integer\n      type: object\n    LanguageCollectionResource:\n      description: 'Language Collection Resource'\n      properties:\n        data:\n          description: 'Class LanguageCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/LanguageResource'\n        pagination:\n          description: 'Class LanguageCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/Pagination'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/CollectionResource'\n    LanguageResource:\n      description: 'Language Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/Language'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    Language:\n      title: Language\n      description: 'Language Response Model'\n      properties:\n        id:\n          type: integer\n        organizationId:\n          type: integer\n        name:\n          type: string\n        dialectOf:\n          type: integer\n        textDirection:\n          type: string\n          enum:\n            - ltr\n            - rtl\n        internalCode:\n          type: string\n        editorCode:\n          description: '- alias of internal code'\n          type: string\n        crowdinCode:\n          type: string\n        code:\n          description: 'alias of crowdinCode'\n          type: string\n        pluralCategoryNames:\n          description: 'plural category names'\n          type: array\n          items:\n            type: string\n        pluralRules:\n          description: 'string with plural rules'\n          type: string\n        pluralExamples:\n          description: 'plural examples array'\n          type: array\n          items:\n            type: string\n        iso6391:\n          type: string\n        twoLettersCode:\n          description: 'alias of iso6391 code'\n          type: string\n        iso6393:\n          type: string\n        threeLettersCode:\n          description: 'alias of iso6393 code'\n          type: string\n        locale:\n          type: string\n        androidCode:\n          type: string\n        osxCode:\n          type: string\n        osxLocale:\n          type: string\n      type: object\n    PreTranslationForm:\n      required:\n        - languageIds\n        - fileIds\n      properties:\n        languageIds:\n          description: 'Set of languages to which pre-translation should be applied.'\n          type: array\n          items:\n            type: integer\n        fileIds:\n          description: 'Files array that should be translated.'\n          type: array\n          items:\n            type: integer\n        method:\n          description: \"Defines which method will be used for pre-translation.\\n\\nAcceptable values are:\\n *     'tm' — Pre-translation via Translation Memory\\n *     'mt' — Pre-translation via Machine Translation. 'mt' should be used with engineId parameter.\\n\\nTranslation Memory is used by default.\"\n          type: string\n          enum:\n            - tm\n            - mt\n          example: mt\n        engineId:\n          description: 'Defines Machine Translation engine id.'\n          type: integer\n        autoApproveOption:\n          description: \"Defines which translations added by pre-translation via TM should be auto-approved.\\n *     'all' — all;\\n *     'perfectMatchOnly' — with perfect match;\\n *     'exceptAutoSubstituted' — all (skip auto-substituted suggestions);\\n *     'none' - no auto approve;\\n\\nDefault: 'none'.\"\n          type: string\n          enum:\n            - all\n            - exceptAutoSubstituted\n            - perfectMatchOnly\n            - none\n        duplicateTranslations:\n          description: 'Adds translations even if the same translation already exists. It works only with TM pre-translation method.'\n          type: boolean\n        translateUntranslatedOnly:\n          description: 'Applies translations for untranslated strings only. It works only with TM pre-translation method.'\n          type: boolean\n        translateWithPerfectMatchOnly:\n          description: 'Pre-translate will be applied only for those strings, that have absolute match in source text and contextual information. It works only with TM pre-translation method.'\n          type: boolean\n      type: object\n    PreTranslationResource:\n      description: 'Pre Translation Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/PreTranslation'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    PreTranslation:\n      description: 'Pre Translation Response Model'\n      properties:\n        identifier:\n          type: string\n        status:\n          type: string\n        progress:\n          description: 'in percentages'\n          type: integer\n        attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/JobAttributesSchema'\n        createdAt:\n          type: string\n        updatedAt:\n          type: string\n        startedAt:\n          type: string\n        finishedAt:\n          type: string\n        eta:\n          type: string\n      type: object\n    PreviewResource:\n      description: 'Preview Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/Preview'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    Preview:\n      title: Preview\n      description: 'Preview Response Model'\n      properties:\n        dataSource:\n          type: array\n          items:\n            items:\n              type: string\n      type: object\n    ProgressExportCollectionResource:\n      description: 'Project Export Ready Collection Resource'\n      properties:\n        data:\n          description: 'Class ProgressCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/ProgressExportResource'\n        pagination:\n          description: 'Class ProgressCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/Pagination'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/CollectionResource'\n    ProgressExportResource:\n      description: 'Project Export Ready Progress Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/ProgressExportReady'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    ProgressCollectionResource:\n      description: 'Language Translation Progress Collection Resource'\n      properties:\n        data:\n          description: 'Class ProgressCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/ProgressResource'\n        pagination:\n          description: 'Class ProgressCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/Pagination'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/CollectionResource'\n    ProgressResource:\n      description: 'Language Translation Progress Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/Progress'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    ProgressExportReady:\n      title: Project\n      description: 'Project Export Ready Response Model'\n      properties:\n        languageId:\n          type: integer\n        exportReadyProgress:\n          type: integer\n      type: object\n    Progress:\n      title: 'Language Translation Progress'\n      description: 'Language Translation Progress Response Model'\n      properties:\n        languageId:\n          type: integer\n        phrasesCount:\n          type: integer\n        phrasesTranslatedCount:\n          type: integer\n        phrasesApprovedCount:\n          type: integer\n        phrasesTranslatedProgress:\n          type: number\n          format: float\n        phrasesApprovedProgress:\n          type: number\n          format: float\n      type: object\n    EnterpriseProjectCreateForm:\n      required:\n        - name\n        - sourceLanguageId\n        - groupId\n      properties:\n        name:\n          description: 'The name of the project.'\n          type: string\n        type:\n          description: 'Type ( 0 - files based, 1 - strings based ).'\n          type: integer\n          enum:\n            - 0\n            - 1\n        groupId:\n          description: 'Group id'\n          type: integer\n        targetLanguageIds:\n          description: 'Target Languages.'\n          type: array\n          items:\n            type: integer\n        templateId:\n          description: 'Workflow template id.'\n          type: integer\n        vendorId:\n          description: 'Use only when you have a vendor in your workflow template. Specify the id of the vendor organization, if the template includes a Vendor step without a specific vendor.'\n          type: integer\n        mtEngineId:\n          description: 'Use only when you have you have a vendor in your workflow template. Specify the id of the Machine Translation engine, if the template includes an MT step without a specific MT engine.'\n          type: integer\n        sourceLanguageId:\n          description: 'Source language id.'\n          type: integer\n        description:\n          description: 'Project description visible to the project members.'\n          type: string\n      type: object\n    ProjectCollectionResource:\n      description: 'Project Collection Resource'\n      properties:\n        data:\n          description: 'Class ProjectCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/ProjectResource'\n        pagination:\n          description: 'Class ProjectCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/Pagination'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/CollectionResource'\n    ProjectResource:\n      description: 'Project Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/Project'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    Project:\n      title: Project\n      description: 'Project Response Model'\n      properties:\n        id:\n          type: integer\n        groupId:\n          type: integer\n        userId:\n          type: integer\n        sourceLanguageId:\n          type: integer\n        targetLanguageIds:\n          type: array\n          items:\n            type: integer\n        joinPolicy:\n          type: string\n        languageAccessPolicy:\n          type: string\n        type:\n          description: '0 - string based, 1 - files based'\n          type: integer\n        name:\n          type: string\n        cname:\n          type: string\n        identifier:\n          type: string\n        description:\n          type: string\n        visibility:\n          type: string\n        logo:\n          type: string\n        background:\n          type: string\n        isExternal:\n          type: boolean\n        externalType:\n          description: '''proofread or ''translate'''\n          type: string\n        advancedWorkflowId:\n          type: integer\n        hasCrowdsourcing:\n          type: boolean\n        createdAt:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time\n      type: object\n    PseudoExportForm:\n      properties:\n        prefix:\n          description: 'Add special characters at the beginning of each string to show where messages have been concatenated together.'\n          type: string\n        suffix:\n          description: 'Add special characters at the end of each string to show where messages have been concatenated together.'\n          type: string\n        lengthTransformation:\n          description: 'Make string larger or shorter. Acceptable values must be from -50 to 100. Default is 0.'\n          type: integer\n        charTransformation:\n          description: 'Transforms characters to other languages. Acceptable values are: asian, european, arabic.'\n          type: string\n          enum:\n            - asian\n            - european\n            - arabic\n      type: object\n    PseudoExportResource:\n      description: 'Pseudo Export Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/PseudoExport'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    PseudoExport:\n      title: 'Pseudo Export Response Model'\n      properties:\n        identifier:\n          type: string\n        status:\n          type: string\n        progress:\n          description: 'in percentages'\n          type: integer\n        attributes:\n          items:\n            $ref: '#/components/schemas/JobAttributesSchema'\n        createdAt:\n          type: string\n        updatedAt:\n          type: string\n        startedAt:\n          type: string\n        finishedAt:\n          type: string\n        eta:\n          type: string\n      type: object\n    QaCheckCollectionResource:\n      description: 'QaCheck Statistic Collection Resource'\n      properties:\n        data:\n          description: 'Class QaCheckCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/QaCheckResource'\n        pagination:\n          description: 'Class QaCheckCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/Pagination'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/CollectionResource'\n    QaCheckResource:\n      description: 'QaCheck Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/QaCheck'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    QaCheck:\n      title: 'Translation Quality Assurance'\n      description: 'QaCheck Response Model'\n      properties:\n        total:\n          type: integer\n        languageId:\n          type: integer\n      type: object\n    ReportCreateForm:\n      required:\n        - name\n        - schema\n      properties:\n        name:\n          description: 'The name of the report.'\n          type: string\n        schema:\n          description: 'First, [get a list of supported reports](#operation/api.reportTypes.getMany). Then copy the schema for the report you need from the response into your current request.'\n          type: object\n      type: object\n    ReportResource:\n      description: 'Report Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/Report'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    ReportTypeCollectionResource:\n      description: 'Report Type Collection Resource'\n      properties:\n        data:\n          description: 'Class ReportTypeCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/ReportTypeResource'\n        pagination:\n          description: 'Class ReportTypeCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/Pagination'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/CollectionResource'\n    ReportTypeResource:\n      description: 'Report Type Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/ReportType'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    Report:\n      properties:\n        name:\n          type: string\n        reportId:\n          type: string\n        report:\n          type: object\n      type: object\n    ReportType:\n      title: 'Report Type'\n      description: 'Report Type Response Model'\n      properties:\n        name:\n          type: string\n        schema:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReportParameterFields'\n      type: object\n    ReportParameterFields:\n      title: 'List of report type parameter fields'\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n        description:\n          type: string\n      type: object\n    RevisionCreateForm:\n      required:\n        - storageId\n      properties:\n        storageId:\n          description: 'A unique identifier for the storage. Storage is where you add files, before they can be added to your organization. [More about Storage](#tag/Storage).'\n          type: integer\n        scheme:\n          description: 'File scheme.'\n          $ref: '#/components/schemas/SpreadsheetFileImportSchema'\n        firstLineContainsHeader:\n          description: 'Define whether the file includes a header in the first row, that should not be imported - true, or skipped - false.'\n          type: boolean\n        updateOption:\n          description: \"Update Option\\n *      1 - update only\\n *      2 - update as unapproved\\n *      3 - update as untranslated\"\n          type: integer\n          enum:\n            - 1\n            - 2\n            - 3\n        escapeQuotes:\n          description: \"Defines whether single quote should be escaped by another single quote or backslash in exported translations. Acceptable values are: 0, 1, 2, 3. Default is 3.\\n *     0 — Do not escape single quote;\\n *     1 — Escape single quote by another single quote;\\n *     2 — Escape single quote by backslash;\\n *     3 — Escape single quote by another single quote only in strings containing variables ( {0} )\"\n          type: integer\n          enum:\n            - 0\n            - 1\n            - 2\n            - 3\n      type: object\n    RevisionCollectionResource:\n      description: 'File Revision Collection Resource'\n      properties:\n        data:\n          description: 'Class RevisionCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/RevisionResource'\n        pagination:\n          description: 'Class RevisionCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/Pagination'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/CollectionResource'\n    RevisionResource:\n      description: 'File Revision Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/Revision'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    Revision:\n      title: Revision\n      description: 'Source Revision Response Model'\n      properties:\n        id:\n          type: integer\n        projectId:\n          type: integer\n        revision:\n          type: integer\n        revertTo:\n          type: integer\n        translationChunks:\n          type: integer\n        info:\n          type: object\n        date:\n          type: string\n          format: date-time\n      type: object\n    ScreenshotCreateForm:\n      required:\n        - storageId\n        - name\n      properties:\n        storageId:\n          description: \"Screenshot storage id. Storage file must be image with the following extensions:\\n *      'jpeg'\\n *      'jpg'\\n *      'png'\\n *      'gif'\"\n          type: integer\n        name:\n          description: 'The name of the screenshot.'\n          type: string\n      type: object\n    ScreenshotReplaceForm:\n      required:\n        - storageId\n        - name\n      properties:\n        storageId:\n          description: 'Screenshot storage id.'\n          type: integer\n        name:\n          description: 'The name of the screenshot.'\n          type: string\n      type: object\n    TagPositionScheme:\n      title: 'Tag position'\n      properties:\n        x:\n          type: integer\n        'y':\n          type: integer\n        width:\n          type: integer\n        height:\n          type: integer\n      type: object\n      example:\n        x: 0\n        'y': 0\n        width: 0\n        height: 0\n    TagCollectionCreateForm:\n      type: array\n      items:\n        $ref: '#/components/schemas/TagCreateForm'\n    TagCreateForm:\n      required:\n        - stringId\n      properties:\n        stringId:\n          description: 'String id.'\n          type: integer\n        position:\n          $ref: '#/components/schemas/TagPositionScheme'\n      type: object\n    ScreenshotCollectionResource:\n      description: 'Screenshot Collection Resource'\n      properties:\n        data:\n          description: 'Class ScreenshotCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/ScreenshotResource'\n        pagination:\n          description: 'Class ScreenshotCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/Pagination'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/CollectionResource'\n    ScreenshotResource:\n      description: 'Screenshot Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/Screenshot'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    TagCollectionResource:\n      description: 'Screenshot tag Collection Resource'\n      properties:\n        data:\n          description: 'Class TagCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/TagResource'\n        pagination:\n          description: 'Class TagCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/Pagination'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/CollectionResource'\n    TagResource:\n      description: 'Tag Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/ScreenshotTag'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    ScreenshotTagPosition:\n      title: Position\n      description: 'Position Response Model'\n      properties:\n        x:\n          type: integer\n        'y':\n          type: integer\n        width:\n          type: integer\n        height:\n          type: integer\n      type: object\n    Screenshot:\n      title: Screenshot\n      description: 'Screenshot Response Model'\n      properties:\n        id:\n          type: integer\n        userId:\n          type: integer\n        url:\n          type: string\n        name:\n          type: string\n        size:\n          properties:\n            width:\n              type: integer\n            height:\n              type: integer\n          type: object\n        tagsCount:\n          type: integer\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/ScreenshotTag'\n        createdAt:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time\n      type: object\n    ScreenshotTag:\n      title: Tag\n      description: 'Tag Response Model'\n      properties:\n        id:\n          type: integer\n        screenshotId:\n          type: integer\n        stringId:\n          type: integer\n        position:\n          $ref: '#/components/schemas/ScreenshotTagPosition'\n        createdAt:\n          type: string\n          format: date-time\n      type: object\n    ProjectSettingResource:\n      description: 'Project Setting Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/ProjectSetting'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    ProjectSetting:\n      title: 'Project Setting'\n      description: 'Project Setting Response Model'\n      properties:\n        projectId:\n          type: integer\n        translateDuplicates:\n          type: integer\n        isMtAllowed:\n          type: boolean\n        autoSubstitution:\n          type: boolean\n        exportTranslatedOnly:\n          type: boolean\n        exportApprovedOnly:\n          type: boolean\n        autoTranslateDialects:\n          type: boolean\n        publicDownloads:\n          type: boolean\n        useGlobalTm:\n          type: boolean\n        inContext:\n          type: boolean\n        pseudoLanguageId:\n          type: integer\n        qaCheckIsActive:\n          type: boolean\n        qaCheckCategories:\n          properties:\n            empty:\n              type: boolean\n            size:\n              type: boolean\n            tags:\n              type: boolean\n            spaces:\n              type: boolean\n            variables:\n              type: boolean\n            punctuation:\n              type: boolean\n            symbolRegister:\n              type: boolean\n            specialSymbols:\n              type: boolean\n            wrongTranslation:\n              type: boolean\n            spellcheck:\n              type: boolean\n            icu:\n              type: boolean\n          type: object\n      type: object\n    StorageUpload:\n      description: 'Binary file data.'\n      type: string\n      example: 'file content. Text of file or any other raw binary data.'\n    StorageCollectionResource:\n      description: 'Storage Collection Resource'\n      properties:\n        data:\n          description: 'StorageCollectionResource constructor.'\n          type: array\n          items:\n            $ref: '#/components/schemas/StorageResource'\n        pagination:\n          description: 'StorageCollectionResource constructor.'\n          type: array\n          items:\n            $ref: '#/components/schemas/Pagination'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/CollectionResource'\n    StorageResource:\n      description: 'Storage Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/Storage'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    Storage:\n      title: Storage\n      description: 'Storage Response Model'\n      properties:\n        id:\n          type: integer\n      type: object\n    StringCreateForm:\n      required:\n        - identifier\n        - text\n      properties:\n        identifier:\n          description: 'A unique identifier of this string (may be used to identify translated text in your application).'\n          type: string\n        fileId:\n          description: 'File id. __Required__ for file based projects.'\n          type: integer\n        text:\n          description: 'The text for translation.'\n          type: string\n        context:\n          description: 'Any contextual information that helps translators better understand the meaning of the source text.'\n          type: string\n        isHidden:\n          description: 'Hide this string from translators or make it visible in the Editor.'\n          type: boolean\n        type:\n          description: 'String type ( 0 - text, 1 - asset, 2 - icu ).'\n          type: integer\n          enum:\n            - 0\n            - 1\n            - 2\n        maxLength:\n          description: 'Max. length of the translated text ( 0 - unlimited ).'\n          type: integer\n      type: object\n    StringCollectionResource:\n      description: 'String Collection Resource'\n      properties:\n        data:\n          description: 'Class StringCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/StringResource'\n        pagination:\n          description: 'Class StringCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/Pagination'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/CollectionResource'\n    StringResource:\n      description: 'String Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/String'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    String:\n      title: String\n      description: 'String Response Model'\n      properties:\n        id:\n          type: integer\n        projectId:\n          type: integer\n        fileId:\n          type: integer\n        identifier:\n          type: string\n        text:\n          type: string\n        type:\n          type: integer\n        context:\n          type: string\n        maxLength:\n          type: integer\n        isHidden:\n          type: boolean\n        revision:\n          type: integer\n        hasPlurals:\n          type: boolean\n        plurals:\n          type: object\n        isIcu:\n          type: boolean\n        createdAt:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time\n      type: object\n    EnterpriseTaskAssignee:\n      title: 'Task assignee'\n      description: 'Task assignee.'\n      required:\n        - id\n      properties:\n        id:\n          description: 'User id.'\n          type: integer\n        wordsCount:\n          description: 'If the ''splitFiles'' parameter is passed, the files are split between assignees. By passing the ''wordsCount'' parameter, you can specify how many words will be assigned to each task assignee, starting from 1 word.'\n          type: integer\n      type: object\n    EnterpriseTaskCreateForm:\n      required:\n        - workflowStepId\n        - title\n        - languageId\n        - fileIds\n        - type\n      properties:\n        workflowStepId:\n          description: 'Task workflow step id.'\n          type: integer\n        status:\n          description: \"Task status:\\n * 0 - To do\\n * 1 - In progress\\n * 2 - Done\\n * 3 - Closed\\n * 4 - Archived\"\n          type: integer\n          enum:\n            - 0\n            - 1\n            - 2\n            - 3\n            - 4\n        title:\n          description: 'Task title.'\n          type: string\n        description:\n          description: 'Task description.'\n          type: string\n        languageId:\n          description: 'Task language id.'\n          type: integer\n        fileIds:\n          description: 'Task file ids.'\n          type: array\n          items:\n            type: integer\n        type:\n          description: \"\\n * 0 - translate\\n * 1 - proofread\"\n          type: integer\n          enum:\n            - 0\n            - 1\n        splitFiles:\n          description: 'Task split files.'\n          type: boolean\n        assignees:\n          type: array\n          items:\n            $ref: '#/components/schemas/EnterpriseTaskAssignee'\n        deadline:\n          description: 'Task deadline in UTC.'\n          type: string\n          format: date-time\n          example: '2100-12-31 23:59:59'\n        dateFrom:\n          description: 'Task date from in UTC.'\n          type: string\n          format: date-time\n          example: '2100-12-31 23:59:59'\n        dateTo:\n          description: 'Task date to in UTC.'\n          type: string\n          format: date-time\n          example: '2100-12-31 23:59:59'\n      type: object\n    TaskCollectionResource:\n      description: 'Task Collection Resource'\n      properties:\n        data:\n          description: 'Class TaskCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/TaskResource'\n        pagination:\n          description: 'Class TaskCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/Pagination'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/CollectionResource'\n    TaskResource:\n      description: 'Task Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/Task'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    TaskStatisticCollectionResource:\n      description: 'Task Statistic Collection Resource'\n      properties:\n        data:\n          description: 'Class TaskStatisticCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/TaskStatisticResource'\n        pagination:\n          description: 'Class TaskStatisticCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/Pagination'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/CollectionResource'\n    TaskStatisticResource:\n      description: 'Task Statistic Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/TaskStatistic'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    TaskAssignee:\n      properties:\n        id:\n          type: integer\n        wordsCount:\n          type: integer\n      type: object\n    TaskProgress:\n      properties:\n        total:\n          type: integer\n        done:\n          type: integer\n        percent:\n          type: number\n          format: float\n      type: object\n    Task:\n      title: Task\n      description: 'Task Response Model'\n      properties:\n        id:\n          type: integer\n        projectId:\n          type: integer\n        creatorId:\n          type: integer\n        type:\n          type: integer\n        status:\n          type: integer\n        title:\n          type: string\n        assignees:\n          type: array\n          items:\n            $ref: '#/components/schemas/TaskAssignee'\n        fileIds:\n          type: array\n          items:\n            type: integer\n        progress:\n          $ref: '#/components/schemas/TaskProgress'\n        sourceLanguageId:\n          type: integer\n        targetLanguageId:\n          type: integer\n        description:\n          type: string\n        hash:\n          type: string\n        translationUrl:\n          type: string\n        wordsCount:\n          type: integer\n        filesCount:\n          type: integer\n        commentsCount:\n          type: integer\n        deadline:\n          description: 'in UTC'\n          type: string\n          format: date-time\n        timeRange:\n          type: string\n        workflowStepId:\n          type: integer\n        createdAt:\n          description: 'in UTC'\n          type: string\n          format: date-time\n        updatedAt:\n          description: 'in UTC'\n          type: string\n          format: date-time\n      type: object\n    TaskStatistic:\n      title: 'Task Statistic'\n      description: 'Task Statistic Response Model'\n      properties:\n        total:\n          type: integer\n        languageId:\n          type: integer\n      type: object\n    TermCreateForm:\n      required:\n        - languageId\n        - text\n      properties:\n        languageId:\n          description: 'Term language id.'\n          type: integer\n        text:\n          description: 'The term itself.'\n          type: string\n        description:\n          description: 'Term description.'\n          type: string\n        partOfSpeech:\n          description: 'Term part of speech.'\n          type: string\n          enum:\n            - adjective\n            - adposition\n            - adverb\n            - auxiliary\n            - 'coordinating conjunction'\n            - determiner\n            - interjection\n            - noun\n            - numeral\n            - particle\n            - pronoun\n            - 'proper noun'\n            - 'subordinating conjunction'\n            - verb\n            - other\n      type: object\n    TermCollectionResource:\n      description: 'Term Collection Resource'\n      properties:\n        data:\n          description: 'Class TermCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/TermResource'\n        pagination:\n          description: 'Class TermCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/Pagination'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/CollectionResource'\n    TermResource:\n      description: 'Term Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/Term'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    Term:\n      title: Term\n      description: 'Term Response Model'\n      properties:\n        id:\n          type: integer\n        userId:\n          type: integer\n        glossaryId:\n          type: integer\n        languageId:\n          type: integer\n        text:\n          type: string\n        description:\n          type: string\n        partOfSpeech:\n          type: string\n        lemma:\n          type: string\n        createdAt:\n          description: 'UTC timezone'\n          type: string\n          format: date-time\n        updatedAt:\n          description: 'UTC timezone'\n          type: string\n          format: date-time\n      type: object\n    EnterpriseTmCreateForm:\n      required:\n        - name\n        - groupId\n      properties:\n        name:\n          description: 'The name of the Translation Memory.'\n          type: string\n        groupId:\n          description: 'Add Translation Memory to a group, by specifying the group id or add this TM on an organization level (will be available for all projects and groups) - 0.'\n          type: integer\n      type: object\n    TmExportForm:\n      properties:\n        sourceLanguageId:\n          description: 'Defines a source language in the language pair.'\n          type: integer\n        targetLanguageId:\n          description: 'Defines a target language in the language pair.'\n          type: integer\n        format:\n          description: 'Defines the format of TMs file. Default is tmx.'\n          type: string\n          enum:\n            - tmx\n            - csv\n            - xlsx\n      type: object\n    TmLanguageCodeColumnCode:\n      properties:\n        columnNumber:\n          type: integer\n      type: object\n    TmLanguageScheme:\n      title: 'Tm Schema'\n      description: \"Note: Used only when uploading CSV (or XLS/XLSX) file to define data columns mapping.\\nAcceptable value is the associative array with combination of the column code and column number ({LangCode} is a placeholder for your language crowdin code, {columnNumber} - column  number from 0).\"\n      type: object\n      example:\n        phraseEn: 0\n        phraseDe: 1\n        phrasePl: 2\n        phraseUk: 4\n      additionalProperties:\n        $ref: '#/components/schemas/TmLanguageCodeColumnCode'\n    TmUploadForm:\n      required:\n        - storageId\n      properties:\n        storageId:\n          description: 'Identifier of file storage (File in TMX, CSV or XLS/XLSX formats. See TMX 1.4b Specification).'\n          type: integer\n        firstLineContainsHeader:\n          description: 'Used when uploading CSV (or XLS/XLSX) files via API. Defines whether first line should be imported or it contains columns headers.'\n          type: boolean\n        scheme:\n          $ref: '#/components/schemas/TmLanguageScheme'\n      type: object\n    TmCollectionResource:\n      description: 'Tm Collection Resource'\n      properties:\n        data:\n          description: 'Class TmCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/TmResource'\n        pagination:\n          description: 'Class TmCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/Pagination'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/CollectionResource'\n    TmExportResource:\n      description: 'Tm Export Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/TmExport'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    TmImportResource:\n      description: 'Tm Import Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/TmImport'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    TmResource:\n      description: 'Tm Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/Tm'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    TmExport:\n      description: 'Translation Memory Export Response Model'\n      properties:\n        identifier:\n          type: string\n        status:\n          type: string\n        progress:\n          description: 'in percentages'\n          type: integer\n        attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/JobAttributesSchema'\n        createdAt:\n          type: string\n        updatedAt:\n          type: string\n        startedAt:\n          type: string\n        finishedAt:\n          type: string\n        eta:\n          type: string\n      type: object\n    TmImport:\n      description: 'Translation Memory Import Response Model'\n      properties:\n        identifier:\n          type: string\n        status:\n          type: string\n        progress:\n          description: 'in percentages'\n          type: integer\n        attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/JobAttributesSchema'\n        createdAt:\n          type: string\n        updatedAt:\n          type: string\n        startedAt:\n          type: string\n        finishedAt:\n          type: string\n        eta:\n          type: string\n      type: object\n    Tm:\n      title: Tm\n      description: 'Translation Memory Response Model'\n      properties:\n        id:\n          type: integer\n        groupId:\n          type: integer\n        name:\n          type: string\n        languageIds:\n          type: array\n          items:\n            type: integer\n        segmentsCount:\n          type: integer\n        defaultProjectId:\n          type: integer\n        projectIds:\n          type: array\n          items:\n            type: integer\n      type: object\n    TranslationCreateBuildForm:\n      properties:\n        branchId:\n          description: 'Branch Identifier.'\n          type: integer\n        targetLanguagesId:\n          description: 'Specify the target languages, that should be built. To build all the target languages - leave this field empty.'\n          type: array\n          items:\n            type: integer\n        exportTranslatedOnly:\n          description: 'Specify whether only translated files should be exported - true, if all should be exported - false.'\n          type: boolean\n        exportApprovedOnly:\n          description: 'Specify whether only approved ones should be exported - true, if all should be exported - false.'\n          type: boolean\n      type: object\n    TranslationUploadForm:\n      required:\n        - storageId\n        - fileId\n      properties:\n        storageId:\n          description: 'Storage id.'\n          type: string\n        fileId:\n          description: 'The identifier for file for import.'\n          type: integer\n        importDuplicates:\n          description: 'Defines whether to add translation if there is the same translation previously added. Default is false.'\n          type: boolean\n        importEqSuggestions:\n          description: 'Defines whether to add translation if it is equal to source string at Crowdin. Default is false.'\n          type: boolean\n        autoApproveImported:\n          description: 'Mark uploaded translations as approved. Default is false.'\n          type: boolean\n      type: object\n    TranslationProjectBuildCollectionResource:\n      description: 'Project Collection Resource'\n      properties:\n        data:\n          description: 'Class TranslationProjectBuildCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/TranslationProjectBuildResource'\n        pagination:\n          description: 'Class TranslationProjectBuildCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/Pagination'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/CollectionResource'\n    TranslationProjectBuildResource:\n      description: 'Translation Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/ProjectBuild'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    ProjectBuildProgress:\n      title: 'Project build progress'\n      properties:\n        percent:\n          type: integer\n        currentLanguageId:\n          type: string\n        currentFileId:\n          type: string\n      type: object\n    ProjectBuild:\n      properties:\n        id:\n          type: integer\n        projectId:\n          type: integer\n        branchId:\n          type: integer\n        languagesId:\n          type: array\n          items:\n            type: integer\n        status:\n          type: string\n        progress:\n          $ref: '#/components/schemas/ProjectBuildProgress'\n      type: object\n    WebhookCreateForm:\n      required:\n        - name\n        - url\n        - events\n        - requestType\n      properties:\n        name:\n          description: 'The name of the webhook.'\n          type: string\n        url:\n          description: 'Webhook url.'\n          type: string\n        isActive:\n          description: 'Webhook is active.'\n          type: boolean\n        contentType:\n          description: 'Webhook content type.'\n          type: string\n          enum:\n            - multipart/form-data\n            - application/json\n            - application/x-www-form-urlencoded\n        events:\n          description: \"You can configure webhooks for the following events:\\n *                  'file.translated' - any of your project files is fully translated.\\n *                  'file.approved' - any of your project files is fully reviewed.\\n *                  'project.translated' - all the strings in the project are translated.\\n *                  'project.approved' - all the strings in the project are reviewed.\\n *                  'translation.updated' - final translation of a string is updated (using Replace in suggestions feature).\\n *                  'suggestion.added' - a string from the project is translated.\\n *                  'suggestion.updated' - a translation for a string in the project is updated (using Replace in suggestions feature).\\n *                  'suggestion.deleted' - one of the translations is deleted.\\n *                  'suggestion.approved' - a translation for a string is approved.\\n *                  'suggestion.disapproved' - an approval for a previously added translation is removed.\"\n          type: array\n          items:\n            type: string\n            enum:\n              - file.translated\n              - file.approved\n              - project.translated\n              - project.approved\n              - translation.updated\n              - suggestion.added\n              - suggestion.updated\n              - suggestion.deleted\n              - suggestion.approved\n              - suggestion.disapproved\n        headers:\n          description: 'Webhook headers.'\n          type: object\n        requestType:\n          description: 'Webhook request type.'\n          type: string\n          enum:\n            - POST\n            - GET\n        payload:\n          description: 'Webhook payload.'\n          type: object\n      type: object\n    WebhookCollectionResource:\n      description: 'Webhook Collection Resource'\n      properties:\n        data:\n          description: 'Class WebhookCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/WebhookResource'\n        pagination:\n          description: 'Class WebhookCollectionResource'\n          type: array\n          items:\n            $ref: '#/components/schemas/Pagination'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/CollectionResource'\n    WebhookResource:\n      description: 'Webhook Resource'\n      properties:\n        data:\n          $ref: '#/components/schemas/Webhook'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/Resource'\n    Webhook:\n      title: Webhook\n      description: 'Webhook Response Model'\n      properties:\n        id:\n          type: integer\n        projectId:\n          type: integer\n        name:\n          type: string\n        url:\n          type: string\n        events:\n          type: array\n          items:\n            type: string\n        headers:\n          type: object\n        payload:\n          type: object\n        isActive:\n          type: boolean\n        requestType:\n          type: string\n        contentType:\n          type: string\n        createdAt:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time\n      type: object\n    JsonPatchDocument:\n      description: 'A JSON Patch document as defined by \u003ca href=\"https://tools.ietf.org/html/rfc6902#section-3\" target=\"_blank\"\u003eRFC 6902\u003c/a\u003e'\n      type: array\n      items:\n        $ref: '#/components/schemas/JsonPatchOperation'\n    JsonPatchOperation:\n      description: 'A JSON Patch operation as defined by [RFC 6902](https://tools.ietf.org/html/rfc6902#section-4)'\n      required:\n        - op\n        - path\n      properties:\n        op:\n          description: 'Patch operation to perform'\n          type: string\n          enum:\n            - add\n            - remove\n            - replace\n            - move\n            - copy\n            - test\n        path:\n          description: 'A JSON Pointer as defined by \u003ca href=\"https://tools.ietf.org/html/rfc6901\" target=\"_blank\"\u003eRFC 6901\u003c/a\u003e'\n          type: string\n          format: json-pointer\n      type: object\n      discriminator:\n        propertyName: op\n        mapping:\n          add: '#/components/schemas/JsonPatchAdd'\n          remove: '#/components/schemas/JsonPatchRemove'\n          replace: '#/components/schemas/JsonPatchReplace'\n          move: '#/components/schemas/JsonPatchMove'\n          copy: '#/components/schemas/JsonPatchCopy'\n          test: '#/components/schemas/JsonPatchTest'\n    JsonPatchAdd:\n      description: 'A JSON Patch `Add` operation as defined by [RFC 6902](https://tools.ietf.org/html/rfc6902#section-4.1)'\n      required:\n        - value\n      properties:\n        value:\n          $ref: '#/components/schemas/Any'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/JsonPatchOperation'\n    JsonPatchRemove:\n      description: 'A JSON Patch `Remove` operation as defined by [RFC 6902](https://tools.ietf.org/html/rfc6902#section-4.2)'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/JsonPatchOperation'\n    JsonPatchReplace:\n      description: 'A JSON Patch `Replace` operation as defined by [RFC 6902](https://tools.ietf.org/html/rfc6902#section-4.3)'\n      required:\n        - value\n      properties:\n        value:\n          $ref: '#/components/schemas/Any'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/JsonPatchOperation'\n    JsonPatchMove:\n      description: 'A JSON Patch `Move` operation as defined by [RFC 6902](https://tools.ietf.org/html/rfc6902#section-4.4)'\n      required:\n        - from\n      properties:\n        from:\n          description: 'A JSON Pointer as defined by \u003ca href=\"https://tools.ietf.org/html/rfc6901\" target=\"_blank\"\u003eRFC 6901\u003c/a\u003e'\n          type: string\n          format: json-pointer\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/JsonPatchOperation'\n    JsonPatchCopy:\n      description: 'A JSON Patch `Copy` operation as defined by [RFC 6902](https://tools.ietf.org/html/rfc6902#section-4.5)'\n      required:\n        - from\n      properties:\n        from:\n          description: 'A JSON Pointer as defined by \u003ca href=\"https://tools.ietf.org/html/rfc6901\" target=\"_blank\"\u003eRFC 6901\u003c/a\u003e'\n          type: string\n          format: json-pointer\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/JsonPatchOperation'\n    JsonPatchTest:\n      description: 'A JSON Patch `Test` operation as defined by [RFC 6902](https://tools.ietf.org/html/rfc6902#section-4.6)'\n      required:\n        - value\n      properties:\n        value:\n          $ref: '#/components/schemas/Any'\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/JsonPatchOperation'\n    Any:\n      title: Any\n      oneOf:\n        -\n          type: string\n        -\n          type: boolean\n        -\n          type: integer\n        -\n          type: array\n          items:\n            type: integer\n        -\n          type: array\n          items:\n            type: string\n  parameters:\n    PaginationLimit:\n      name: limit\n      in: query\n      description: 'Maximum number of items to retrieve.'\n      schema:\n        type: integer\n        default: 25\n        maximum: 500\n        minimum: 1\n    PaginationOffset:\n      name: offset\n      in: query\n      description: 'Starting offset in the collection.'\n      schema:\n        type: integer\n        default: 0\n        minimum: 0\n    QueryGroupId:\n      name: groupId\n      in: query\n      description: 'A unique identifier for the group.'\n      required: true\n      schema:\n        type: integer\n    QueryNotRequiredGroupId:\n      name: groupId\n      in: query\n      description: 'Group Identifier'\n      schema:\n        type: integer\n    HasManagerAccess:\n      name: hasManagerAccess\n      in: query\n      description: \"Projects with Manager Access\\n *          0 - false\\n *          1 - true\"\n      schema:\n        type: integer\n        default: 0\n        enum:\n          - 1\n          - 0\n    QueryNotRequiredParentId:\n      name: parentId\n      in: query\n      description: 'Parent group Identifier'\n      schema:\n        type: integer\n    QueryFileId:\n      name: fileId\n      in: query\n      description: 'File Identifier.'\n      schema:\n        type: integer\n    QueryUserId:\n      name: userId\n      in: query\n      description: 'User Identifier.'\n      schema:\n        type: integer\n    RevisionId:\n      name: revisionId\n      in: path\n      description: 'Revision Identifier.'\n      required: true\n      schema:\n        type: integer\n    FileId:\n      name: fileId\n      in: path\n      description: 'File Identifier.'\n      required: true\n      schema:\n        type: integer\n    BranchId:\n      name: branchId\n      in: path\n      description: 'Branch Identifier.'\n      required: true\n      schema:\n        type: integer\n    LanguageId:\n      name: languageId\n      in: path\n      description: 'Language Identifier.'\n      required: true\n      schema:\n        type: integer\n    LanguageIds:\n      name: languageIds\n      in: query\n      description: 'Language identifier for filter.'\n      schema:\n        type: string\n        pattern: '^[\\d]+(\\,[\\d]+)*$'\n    ProjectId:\n      name: projectId\n      in: path\n      description: 'Project Identifier.'\n      required: true\n      schema:\n        type: integer\n    OrganizationId:\n      name: organizationId\n      in: path\n      description: 'Organization Identifier.'\n      required: true\n      schema:\n        type: integer\n    DirectoryId:\n      name: directoryId\n      in: path\n      description: 'Directory Identifier.'\n      required: true\n      schema:\n        type: integer\n    SourceId:\n      name: sourceId\n      in: path\n      description: 'Source Identifier.'\n      required: true\n      schema:\n        type: integer\n    Revision:\n      name: revision\n      in: path\n      description: 'Revision number.'\n      required: true\n      schema:\n        type: integer\n    JobId:\n      name: jobId\n      in: path\n      description: 'Job Identifier.'\n      required: true\n      schema:\n        type: integer\n    JobIdentifier:\n      name: jobIdentifier\n      in: path\n      description: 'Job Identifier.'\n      required: true\n      schema:\n        type: string\n    StorageId:\n      name: storageId\n      in: path\n      description: 'A unique identifier for the storage. Storage is where you add files, before they can be added to your organization. [More about Storage](#tag/Storage).'\n      required: true\n      schema:\n        type: integer\n    GroupId:\n      name: groupId\n      in: path\n      description: 'A unique identifier for the group.'\n      required: true\n      schema:\n        type: integer\n    GlossaryId:\n      name: glossaryId\n      in: path\n      description: 'Glossary Identifier.'\n      required: true\n      schema:\n        type: integer\n    TaskId:\n      name: taskId\n      in: path\n      description: 'Task Identifier.'\n      required: true\n      schema:\n        type: integer\n    TmId:\n      name: tmId\n      in: path\n      description: 'TM Identifier.'\n      required: true\n      schema:\n        type: integer\n    BuildId:\n      name: buildId\n      in: path\n      description: 'Project Build Identifier.'\n      required: true\n      schema:\n        type: integer\n    PseudoTranslationBuildId:\n      name: pseudoTranslationBuildId\n      in: path\n      description: 'Pseudo Translation Build Identifier, consists of 36 characters.'\n      required: true\n      schema:\n        type: string\n    WebhookId:\n      name: webhookId\n      in: path\n      description: 'Webhook Identifier.'\n      required: true\n      schema:\n        type: integer\n    StringId:\n      name: stringId\n      in: path\n      description: 'String Identifier.'\n      required: true\n      schema:\n        type: integer\n    TermId:\n      name: termId\n      in: path\n      description: 'Term Identifier.'\n      required: true\n      schema:\n        type: integer\n    ScreenshotId:\n      name: screenshotId\n      in: path\n      description: 'Screenshot Identifier.'\n      required: true\n      schema:\n        type: integer\n    ExportId:\n      name: exportId\n      in: path\n      description: 'Export Identifier, consists of 36 characters.'\n      required: true\n      schema:\n        type: string\n    ImportId:\n      name: importId\n      in: path\n      description: 'Import Identifier, consists of 36 characters.'\n      required: true\n      schema:\n        type: string\n    PreTranslationId:\n      name: preTranslationId\n      in: path\n      description: 'Pre Translate Identifier.'\n      required: true\n      schema:\n        type: string\n    TagId:\n      name: tagId\n      in: path\n      description: 'Screenshot’s tag identifier. Use List screenshots or Get screenshots method to get the tag identifier..'\n      required: true\n      schema:\n        type: integer\n    ReportId:\n      name: reportId\n      in: path\n      description: 'Report Identifier, consists of 36 characters'\n      required: true\n      schema:\n        type: string\n    GlossaryRawDownloadFormat:\n      name: format\n      in: query\n      description: 'Defines download format. Default is tbx.'\n      schema:\n        type: string\n        enum:\n          - tbx\n          - csv\n          - xlsx\n    IssueType:\n      name: type\n      in: query\n      description: 'Defines the issue type.'\n      schema:\n        type: string\n        enum:\n          - all\n          - general_question\n          - translation_mistake\n          - context_request\n          - source_mistake\n    IssueStatus:\n      name: status\n      in: query\n      description: 'Defines the issue resolution status.'\n      schema:\n        type: string\n        enum:\n          - all\n          - resolved\n          - unresolved\n    IssueStatisticStatus:\n      name: status\n      in: query\n      description: 'Defines the issue resolution status.'\n      schema:\n        type: string\n        default: all\n        enum:\n          - resolved\n          - unresolved\n          - all\n    StorageContentTypeHeader:\n      name: Content-Type\n      in: header\n      description: 'File content type'\n      required: true\n      schema:\n        type: string\n    TaskStatisticStatus:\n      name: status\n      in: query\n      description: \"Defines the task resolution status:\\n * 0 - todo\\n * 1 - in_progress\\n * 2 - done\\n * 3 - closed\\n * 4 - archived\\n * 5 - overdue\"\n      schema:\n        type: integer\n        enum:\n          - 0\n          - 1\n          - 2\n          - 3\n          - 4\n          - 5\n    SourceLanguageId:\n      name: sourceLanguageId\n      in: query\n      description: 'Defines a source language in the language pair.'\n      schema:\n        type: integer\n    TargetLanguageId:\n      name: targetLanguageId\n      in: query\n      description: 'Defines a target language in the language pair.'\n      schema:\n        type: integer\n    Format:\n      name: format\n      in: query\n      description: 'Defines the format of TMs file. Default is tmx.'\n      schema:\n        type: string\n    TranslationExportProgressBranchId:\n      name: branchId\n      in: query\n      description: 'Defines a branch for built translation.'\n      schema:\n        type: integer\ntags:\n  -\n    name: Branches\n    description: ''\n  -\n    name: Directories\n    description: ''\n  -\n    name: Files\n    description: ''\n  -\n    name: Glossaries\n    description: \"\\nTo download a Glossary, please run the following sequence of API methods: Start Glossary export \u003e Get Glossary export status (to check the progress of the export) \u003e Get a Glossary download link.\\n\\nTo upload a Glossary, please run the following sequence of API methods:\\n *     [_Upload new file_](#operation/api.storages.uploadOne) (Storage)\\n *     _Create a Glossary_\\n *     _Import a Glossary file_\\n *     _Get Glossary import status_ (to check the progress of the import)\"\n  -\n    name: Groups\n    description: ''\n  -\n    name: 'Projects Settings'\n    description: ''\n  -\n    name: Issues\n    description: ''\n  -\n    name: Languages\n    description: ''\n  -\n    name: Pre-Translation\n    description: \"\\nPre-translate your project files with a Translation Memory or with a Machine Translation engine connected to your project. Once you run Pre-translate project files, please run Get status of pre-translation to check the progress and status.\"\n  -\n    name: Progress\n    description: ''\n  -\n    name: Projects\n    description: ''\n  -\n    name: Pseudo-Translations\n    description: \"\\nTo do a Pseudo-translation, please run the following sequence of API methods:\\n *     _Build pseudo-translation files_\\n *     _View pseudo-translation build status_\\n *     _Get pseudo-translation last build download link_\"\n  -\n    name: 'Translation Quality Assurance'\n    description: ''\n  -\n    name: Reports\n    description: ''\n  -\n    name: Screenshots\n    description: ''\n  -\n    name: Strings\n    description: ''\n  -\n    name: Storage\n    description: \"\\nStorage is a space where you upload your files, before adding them to your projects using our API.  This saves time if you have multiple files, as you can upload files once, and then just specify the Storage id in the necessary endpoint and that file will be uploaded.\\n\\n__Note:__ to upload any files to your projects, they typically should be added to the storage first.\\n\\nFiles, that should be uploaded into storage first, include screenshots, project cover and logo, source files, Glossaries, and Translation Memories. If the method requires a Storage id - that’s the id for the file uploaded to the Storage.\\n\\n__Note:__ the storage is periodically cleared. So the files uploaded to storage and not used further will be removed. The files that were uploaded/updated using the storage id would still be removed from the storage but will not be influenced in the organization.\"\n  -\n    name: Tasks\n    description: ''\n  -\n    name: 'Translation Memories (TMs)'\n    description: \"\\nTo download a Translation Memory, please run the following sequence of API methods:\\n *     _Start TM export_\\n *     _Get TM export status_ (to check the progress of the export)\\n *     _Get a TM download link_\\n\\nTo upload a Translation Memory, please run the following sequence of API methods:\\n *     [_Upload new file_](#operation/api.storages.uploadOne) (Storage)\\n *     _Create a TM_\\n *     _Upload a TM_\\n *     _Get import info_ (to check the progress of the import)\"\n  -\n    name: Translations\n    description: \"\\nTo download translations, please run the following sequence of API methods:\\n *     _Init translations build_\\n *     _Get project build info_ /_List project builds_ (to check if the build is completed)\\n *     _Download translations URL_\"\n  -\n    name: Webhooks\n    description: ''\nexternalDocs:\n  description: 'Find out more about Crowdin API'\n  url: 'https://support.crowdin.com/api/api-integration-setup/'\n"
		}
	},
	"Error": "parse: paths: /projects/{projectId}/translations/builds: get: api.projects.translations.builds.getList: parse path: path parameter not specified: \"projectId\""
}