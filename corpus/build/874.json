{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "APIs/amazonaws.com/kinesis/2013-12-02/openapi.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  version: '2013-12-02'\n  x-release: v4\n  title: Amazon Kinesis\n  description: \u003cfullname\u003eAmazon Kinesis Data Streams Service API Reference\u003c/fullname\u003e \u003cp\u003eAmazon Kinesis Data Streams is a managed service that scales elastically for real-time processing of streaming big data.\u003c/p\u003e\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: kinesis\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/kinesis-2013-12-02.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/kinesis/'\nservers:\n  - url: 'http://kinesis.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Kinesis multi-region endpoint\n  - url: 'https://kinesis.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Kinesis multi-region endpoint\n  - url: 'http://kinesis.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Kinesis endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://kinesis.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Kinesis endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  /#X-Amz-Target=Kinesis_20131202.AddTagsToStream:\n    post:\n      operationId: AddTagsToStream\n      description: '\u003cp\u003eAdds or updates tags for the specified Kinesis data stream. Each time you invoke this operation, you can specify up to 10 tags. If you want to add more than 10 tags to your stream, you can invoke this operation multiple times. In total, each stream can have up to 50 tags.\u003c/p\u003e \u003cp\u003eIf tags have already been assigned to the stream, \u003ccode\u003eAddTagsToStream\u003c/code\u003e overwrites any existing tags that correspond to the specified tag keys.\u003c/p\u003e \u003cp\u003e \u003ca\u003eAddTagsToStream\u003c/a\u003e has a limit of five transactions per second per account.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '482':\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidArgumentException'\n        '483':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddTagsToStreamInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.AddTagsToStream\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=Kinesis_20131202.CreateStream:\n    post:\n      operationId: CreateStream\n      description: '\u003cp\u003eCreates a Kinesis data stream. A stream captures and transports data records that are continuously emitted from different data sources or \u003ci\u003eproducers\u003c/i\u003e. Scale-out within a stream is explicitly supported by means of shards, which are uniquely identified groups of data records in a stream.\u003c/p\u003e \u003cp\u003eYou specify and control the number of shards that a stream is composed of. Each shard can support reads up to five transactions per second, up to a maximum data read total of 2 MiB per second. Each shard can support writes up to 1,000 records per second, up to a maximum data write total of 1 MiB per second. If the amount of data input increases or decreases, you can add or remove shards.\u003c/p\u003e \u003cp\u003eThe stream name identifies the stream. The name is scoped to the AWS account used by the application. It is also scoped by AWS Region. That is, two streams in two different accounts can have the same name, and two streams in the same account, but in two different Regions, can have the same name.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eCreateStream\u003c/code\u003e is an asynchronous operation. Upon receiving a \u003ccode\u003eCreateStream\u003c/code\u003e request, Kinesis Data Streams immediately returns and sets the stream status to \u003ccode\u003eCREATING\u003c/code\u003e. After the stream is created, Kinesis Data Streams sets the stream status to \u003ccode\u003eACTIVE\u003c/code\u003e. You should perform read and write operations only on an \u003ccode\u003eACTIVE\u003c/code\u003e stream. \u003c/p\u003e \u003cp\u003eYou receive a \u003ccode\u003eLimitExceededException\u003c/code\u003e when making a \u003ccode\u003eCreateStream\u003c/code\u003e request when you try to do one of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eHave more than five streams in the \u003ccode\u003eCREATING\u003c/code\u003e state at any point in time.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eCreate more shards than are authorized for your account.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eFor the default shard limit for an AWS account, see \u003ca href=\"https://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html\"\u003eAmazon Kinesis Data Streams Limits\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams Developer Guide\u003c/i\u003e. To increase this limit, \u003ca href=\"https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html\"\u003econtact AWS Support\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eYou can use \u003ccode\u003eDescribeStream\u003c/code\u003e to check the stream status, which is returned in \u003ccode\u003eStreamStatus\u003c/code\u003e.\u003c/p\u003e \u003cp\u003e \u003ca\u003eCreateStream\u003c/a\u003e has a limit of five transactions per second per account.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '481':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '482':\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidArgumentException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateStreamInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.CreateStream\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=Kinesis_20131202.DecreaseStreamRetentionPeriod:\n    post:\n      operationId: DecreaseStreamRetentionPeriod\n      description: '\u003cp\u003eDecreases the Kinesis data stream''s retention period, which is the length of time data records are accessible after they are added to the stream. The minimum value of a stream''s retention period is 24 hours.\u003c/p\u003e \u003cp\u003eThis operation may result in lost data. For example, if the stream''s retention period is 48 hours and is decreased to 24 hours, any data already in the stream that is older than 24 hours is inaccessible.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '483':\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidArgumentException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DecreaseStreamRetentionPeriodInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.DecreaseStreamRetentionPeriod\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=Kinesis_20131202.DeleteStream:\n    post:\n      operationId: DeleteStream\n      description: '\u003cp\u003eDeletes a Kinesis data stream and all its shards and data. You must shut down any applications that are operating on the stream before you delete the stream. If an application attempts to operate on a deleted stream, it receives the exception \u003ccode\u003eResourceNotFoundException\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIf the stream is in the \u003ccode\u003eACTIVE\u003c/code\u003e state, you can delete it. After a \u003ccode\u003eDeleteStream\u003c/code\u003e request, the specified stream is in the \u003ccode\u003eDELETING\u003c/code\u003e state until Kinesis Data Streams completes the deletion.\u003c/p\u003e \u003cp\u003e \u003cb\u003eNote:\u003c/b\u003e Kinesis Data Streams might continue to accept data read and write operations, such as \u003ca\u003ePutRecord\u003c/a\u003e, \u003ca\u003ePutRecords\u003c/a\u003e, and \u003ca\u003eGetRecords\u003c/a\u003e, on a stream in the \u003ccode\u003eDELETING\u003c/code\u003e state until the stream deletion is complete.\u003c/p\u003e \u003cp\u003eWhen you delete a stream, any shards in that stream are also deleted, and any tags are dissociated from the stream.\u003c/p\u003e \u003cp\u003eYou can use the \u003ca\u003eDescribeStream\u003c/a\u003e operation to check the state of the stream, which is returned in \u003ccode\u003eStreamStatus\u003c/code\u003e.\u003c/p\u003e \u003cp\u003e \u003ca\u003eDeleteStream\u003c/a\u003e has a limit of five transactions per second per account.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '482':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteStreamInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.DeleteStream\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=Kinesis_20131202.DeregisterStreamConsumer:\n    post:\n      operationId: DeregisterStreamConsumer\n      description: '\u003cp\u003eTo deregister a consumer, provide its ARN. Alternatively, you can provide the ARN of the data stream and the name you gave the consumer when you registered it. You may also provide all three parameters, as long as they don''t conflict with each other. If you don''t know the name or ARN of the consumer that you want to deregister, you can use the \u003ca\u003eListStreamConsumers\u003c/a\u003e operation to get a list of the descriptions of all the consumers that are currently registered with a given data stream. The description of a consumer contains its name and ARN.\u003c/p\u003e \u003cp\u003eThis operation has a limit of five transactions per second per stream.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidArgumentException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeregisterStreamConsumerInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.DeregisterStreamConsumer\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=Kinesis_20131202.DescribeLimits:\n    post:\n      operationId: DescribeLimits\n      description: '\u003cp\u003eDescribes the shard limits and usage for the account.\u003c/p\u003e \u003cp\u003eIf you update your account limits, the old limits might be returned for a few minutes.\u003c/p\u003e \u003cp\u003eThis operation has a limit of one transaction per second per account.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeLimitsOutput'\n        '480':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeLimitsInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.DescribeLimits\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=Kinesis_20131202.DescribeStream:\n    post:\n      operationId: DescribeStream\n      description: '\u003cp\u003eDescribes the specified Kinesis data stream.\u003c/p\u003e \u003cp\u003eThe information returned includes the stream name, Amazon Resource Name (ARN), creation time, enhanced metric configuration, and shard map. The shard map is an array of shard objects. For each shard object, there is the hash key and sequence number ranges that the shard spans, and the IDs of any earlier shards that played in a role in creating the shard. Every record ingested in the stream is identified by a sequence number, which is assigned when the record is put into the stream.\u003c/p\u003e \u003cp\u003eYou can limit the number of shards returned by each call. For more information, see \u003ca href=\"https://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-retrieve-shards.html\"\u003eRetrieving Shards from a Stream\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eThere are no guarantees about the chronological order shards returned. To process shards in chronological order, use the ID of the parent shard to track the lineage to the oldest shard.\u003c/p\u003e \u003cp\u003eThis operation has a limit of 10 transactions per second per account.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeStreamOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeStreamInput'\n      parameters:\n        - name: Limit\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: ExclusiveStartShardId\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.DescribeStream\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=Kinesis_20131202.DescribeStreamConsumer:\n    post:\n      operationId: DescribeStreamConsumer\n      description: '\u003cp\u003eTo get the description of a registered consumer, provide the ARN of the consumer. Alternatively, you can provide the ARN of the data stream and the name you gave the consumer when you registered it. You may also provide all three parameters, as long as they don''t conflict with each other. If you don''t know the name or ARN of the consumer that you want to describe, you can use the \u003ca\u003eListStreamConsumers\u003c/a\u003e operation to get a list of the descriptions of all the consumers that are currently registered with a given data stream.\u003c/p\u003e \u003cp\u003eThis operation has a limit of 20 transactions per second per stream.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeStreamConsumerOutput'\n        '480':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidArgumentException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeStreamConsumerInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.DescribeStreamConsumer\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=Kinesis_20131202.DescribeStreamSummary:\n    post:\n      operationId: DescribeStreamSummary\n      description: '\u003cp\u003eProvides a summarized description of the specified Kinesis data stream without the shard list.\u003c/p\u003e \u003cp\u003eThe information returned includes the stream name, Amazon Resource Name (ARN), status, record retention period, approximate creation time, monitoring, encryption details, and open shard count. \u003c/p\u003e \u003cp\u003e \u003ca\u003eDescribeStreamSummary\u003c/a\u003e has a limit of 20 transactions per second per account.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeStreamSummaryOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeStreamSummaryInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.DescribeStreamSummary\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=Kinesis_20131202.DisableEnhancedMonitoring:\n    post:\n      operationId: DisableEnhancedMonitoring\n      description: Disables enhanced monitoring.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EnhancedMonitoringOutput'\n        '480':\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidArgumentException'\n        '481':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '482':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DisableEnhancedMonitoringInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.DisableEnhancedMonitoring\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=Kinesis_20131202.EnableEnhancedMonitoring:\n    post:\n      operationId: EnableEnhancedMonitoring\n      description: Enables enhanced Kinesis data stream monitoring for shard-level metrics.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EnhancedMonitoringOutput'\n        '480':\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidArgumentException'\n        '481':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '482':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EnableEnhancedMonitoringInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.EnableEnhancedMonitoring\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=Kinesis_20131202.GetRecords:\n    post:\n      operationId: GetRecords\n      description: '\u003cp\u003eGets data records from a Kinesis data stream''s shard.\u003c/p\u003e \u003cp\u003eSpecify a shard iterator using the \u003ccode\u003eShardIterator\u003c/code\u003e parameter. The shard iterator specifies the position in the shard from which you want to start reading data records sequentially. If there are no records available in the portion of the shard that the iterator points to, \u003ca\u003eGetRecords\u003c/a\u003e returns an empty list. It might take multiple calls to get to a portion of the shard that contains records.\u003c/p\u003e \u003cp\u003eYou can scale by provisioning multiple shards per stream while considering service limits (for more information, see \u003ca href=\"https://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html\"\u003eAmazon Kinesis Data Streams Limits\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams Developer Guide\u003c/i\u003e). Your application should have one thread per shard, each reading continuously from its stream. To read from a stream continually, call \u003ca\u003eGetRecords\u003c/a\u003e in a loop. Use \u003ca\u003eGetShardIterator\u003c/a\u003e to get the shard iterator to specify in the first \u003ca\u003eGetRecords\u003c/a\u003e call. \u003ca\u003eGetRecords\u003c/a\u003e returns a new shard iterator in \u003ccode\u003eNextShardIterator\u003c/code\u003e. Specify the shard iterator returned in \u003ccode\u003eNextShardIterator\u003c/code\u003e in subsequent calls to \u003ca\u003eGetRecords\u003c/a\u003e. If the shard has been closed, the shard iterator can''t return more data and \u003ca\u003eGetRecords\u003c/a\u003e returns \u003ccode\u003enull\u003c/code\u003e in \u003ccode\u003eNextShardIterator\u003c/code\u003e. You can terminate the loop when the shard is closed, or when the shard iterator reaches the record with the sequence number or other attribute that marks it as the last record to process.\u003c/p\u003e \u003cp\u003eEach data record can be up to 1 MiB in size, and each shard can read up to 2 MiB per second. You can ensure that your calls don''t exceed the maximum supported size or throughput by using the \u003ccode\u003eLimit\u003c/code\u003e parameter to specify the maximum number of records that \u003ca\u003eGetRecords\u003c/a\u003e can return. Consider your average record size when determining this limit. The maximum number of records that can be returned per call is 10,000.\u003c/p\u003e \u003cp\u003eThe size of the data returned by \u003ca\u003eGetRecords\u003c/a\u003e varies depending on the utilization of the shard. The maximum size of data that \u003ca\u003eGetRecords\u003c/a\u003e can return is 10 MiB. If a call returns this amount of data, subsequent calls made within the next 5 seconds throw \u003ccode\u003eProvisionedThroughputExceededException\u003c/code\u003e. If there is insufficient provisioned throughput on the stream, subsequent calls made within the next 1 second throw \u003ccode\u003eProvisionedThroughputExceededException\u003c/code\u003e. \u003ca\u003eGetRecords\u003c/a\u003e doesn''t return any data when it throws an exception. For this reason, we recommend that you wait 1 second between calls to \u003ca\u003eGetRecords\u003c/a\u003e. However, it''s possible that the application will get exceptions for longer than 1 second.\u003c/p\u003e \u003cp\u003eTo detect whether the application is falling behind in processing, you can use the \u003ccode\u003eMillisBehindLatest\u003c/code\u003e response attribute. You can also monitor the stream using CloudWatch metrics and other mechanisms (see \u003ca href=\"https://docs.aws.amazon.com/kinesis/latest/dev/monitoring.html\"\u003eMonitoring\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams Developer Guide\u003c/i\u003e).\u003c/p\u003e \u003cp\u003eEach Amazon Kinesis record includes a value, \u003ccode\u003eApproximateArrivalTimestamp\u003c/code\u003e, that is set when a stream successfully receives and stores a record. This is commonly referred to as a server-side time stamp, whereas a client-side time stamp is set when a data producer creates or sends the record to a stream (a data producer is any data source putting data records into a stream, for example with \u003ca\u003ePutRecords\u003c/a\u003e). The time stamp has millisecond precision. There are no guarantees about the time stamp accuracy, or that the time stamp is always increasing. For example, records in a shard or across a stream might have time stamps that are out of order.\u003c/p\u003e \u003cp\u003eThis operation has a limit of five transactions per second per shard.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetRecordsOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidArgumentException'\n        '482':\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProvisionedThroughputExceededException'\n        '483':\n          description: ExpiredIteratorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExpiredIteratorException'\n        '484':\n          description: KMSDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KMSDisabledException'\n        '485':\n          description: KMSInvalidStateException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KMSInvalidStateException'\n        '486':\n          description: KMSAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KMSAccessDeniedException'\n        '487':\n          description: KMSNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KMSNotFoundException'\n        '488':\n          description: KMSOptInRequired\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KMSOptInRequired'\n        '489':\n          description: KMSThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KMSThrottlingException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetRecordsInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.GetRecords\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=Kinesis_20131202.GetShardIterator:\n    post:\n      operationId: GetShardIterator\n      description: '\u003cp\u003eGets an Amazon Kinesis shard iterator. A shard iterator expires 5 minutes after it is returned to the requester.\u003c/p\u003e \u003cp\u003eA shard iterator specifies the shard position from which to start reading data records sequentially. The position is specified using the sequence number of a data record in a shard. A sequence number is the identifier associated with every record ingested in the stream, and is assigned when a record is put into the stream. Each stream has one or more shards.\u003c/p\u003e \u003cp\u003eYou must specify the shard iterator type. For example, you can set the \u003ccode\u003eShardIteratorType\u003c/code\u003e parameter to read exactly from the position denoted by a specific sequence number by using the \u003ccode\u003eAT_SEQUENCE_NUMBER\u003c/code\u003e shard iterator type. Alternatively, the parameter can read right after the sequence number by using the \u003ccode\u003eAFTER_SEQUENCE_NUMBER\u003c/code\u003e shard iterator type, using sequence numbers returned by earlier calls to \u003ca\u003ePutRecord\u003c/a\u003e, \u003ca\u003ePutRecords\u003c/a\u003e, \u003ca\u003eGetRecords\u003c/a\u003e, or \u003ca\u003eDescribeStream\u003c/a\u003e. In the request, you can specify the shard iterator type \u003ccode\u003eAT_TIMESTAMP\u003c/code\u003e to read records from an arbitrary point in time, \u003ccode\u003eTRIM_HORIZON\u003c/code\u003e to cause \u003ccode\u003eShardIterator\u003c/code\u003e to point to the last untrimmed record in the shard in the system (the oldest data record in the shard), or \u003ccode\u003eLATEST\u003c/code\u003e so that you always read the most recent data in the shard. \u003c/p\u003e \u003cp\u003eWhen you read repeatedly from a stream, use a \u003ca\u003eGetShardIterator\u003c/a\u003e request to get the first shard iterator for use in your first \u003ca\u003eGetRecords\u003c/a\u003e request and for subsequent reads use the shard iterator returned by the \u003ca\u003eGetRecords\u003c/a\u003e request in \u003ccode\u003eNextShardIterator\u003c/code\u003e. A new shard iterator is returned by every \u003ca\u003eGetRecords\u003c/a\u003e request in \u003ccode\u003eNextShardIterator\u003c/code\u003e, which you use in the \u003ccode\u003eShardIterator\u003c/code\u003e parameter of the next \u003ca\u003eGetRecords\u003c/a\u003e request. \u003c/p\u003e \u003cp\u003eIf a \u003ca\u003eGetShardIterator\u003c/a\u003e request is made too often, you receive a \u003ccode\u003eProvisionedThroughputExceededException\u003c/code\u003e. For more information about throughput limits, see \u003ca\u003eGetRecords\u003c/a\u003e, and \u003ca href=\"https://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html\"\u003eStreams Limits\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eIf the shard is closed, \u003ca\u003eGetShardIterator\u003c/a\u003e returns a valid iterator for the last sequence number of the shard. A shard can be closed as a result of using \u003ca\u003eSplitShard\u003c/a\u003e or \u003ca\u003eMergeShards\u003c/a\u003e.\u003c/p\u003e \u003cp\u003e \u003ca\u003eGetShardIterator\u003c/a\u003e has a limit of five transactions per second per account per open shard.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetShardIteratorOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidArgumentException'\n        '482':\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProvisionedThroughputExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetShardIteratorInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.GetShardIterator\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=Kinesis_20131202.IncreaseStreamRetentionPeriod:\n    post:\n      operationId: IncreaseStreamRetentionPeriod\n      description: '\u003cp\u003eIncreases the Kinesis data stream''s retention period, which is the length of time data records are accessible after they are added to the stream. The maximum value of a stream''s retention period is 168 hours (7 days).\u003c/p\u003e \u003cp\u003eIf you choose a longer stream retention period, this operation increases the time period during which records that have not yet expired are accessible. However, it does not make previous, expired data (older than the stream''s previous retention period) accessible after the operation has been called. For example, if a stream''s retention period is set to 24 hours and is increased to 168 hours, any data that is older than 24 hours remains inaccessible to consumer applications.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '483':\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidArgumentException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IncreaseStreamRetentionPeriodInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.IncreaseStreamRetentionPeriod\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=Kinesis_20131202.ListShards:\n    post:\n      operationId: ListShards\n      description: '\u003cp\u003eLists the shards in a stream and provides information about each shard. This operation has a limit of 100 transactions per second per data stream.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eThis API is a new operation that is used by the Amazon Kinesis Client Library (KCL). If you have a fine-grained IAM policy that only allows specific operations, you must update your policy to allow calls to this API. For more information, see \u003ca href=\"https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html\"\u003eControlling Access to Amazon Kinesis Data Streams Resources Using IAM\u003c/a\u003e.\u003c/p\u003e \u003c/important\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListShardsOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidArgumentException'\n        '482':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '483':\n          description: ExpiredNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExpiredNextTokenException'\n        '484':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListShardsInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.ListShards\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=Kinesis_20131202.ListStreamConsumers:\n    post:\n      operationId: ListStreamConsumers\n      description: '\u003cp\u003eLists the consumers registered to receive data from a stream using enhanced fan-out, and provides information about each consumer.\u003c/p\u003e \u003cp\u003eThis operation has a limit of 5 transactions per second per stream.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListStreamConsumersOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidArgumentException'\n        '482':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '483':\n          description: ExpiredNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExpiredNextTokenException'\n        '484':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListStreamConsumersInput'\n      parameters:\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.ListStreamConsumers\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=Kinesis_20131202.ListStreams:\n    post:\n      operationId: ListStreams\n      description: '\u003cp\u003eLists your Kinesis data streams.\u003c/p\u003e \u003cp\u003eThe number of streams may be too large to return from a single call to \u003ccode\u003eListStreams\u003c/code\u003e. You can limit the number of returned streams using the \u003ccode\u003eLimit\u003c/code\u003e parameter. If you do not specify a value for the \u003ccode\u003eLimit\u003c/code\u003e parameter, Kinesis Data Streams uses the default limit, which is currently 10.\u003c/p\u003e \u003cp\u003eYou can detect if there are more streams available to list by using the \u003ccode\u003eHasMoreStreams\u003c/code\u003e flag from the returned output. If there are more streams available, you can request more streams by using the name of the last stream returned by the \u003ccode\u003eListStreams\u003c/code\u003e request in the \u003ccode\u003eExclusiveStartStreamName\u003c/code\u003e parameter in a subsequent request to \u003ccode\u003eListStreams\u003c/code\u003e. The group of stream names returned by the subsequent request is then added to the list. You can continue this process until all the stream names have been collected in the list. \u003c/p\u003e \u003cp\u003e \u003ca\u003eListStreams\u003c/a\u003e has a limit of five transactions per second per account.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListStreamsOutput'\n        '480':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListStreamsInput'\n      parameters:\n        - name: Limit\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: ExclusiveStartStreamName\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.ListStreams\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=Kinesis_20131202.ListTagsForStream:\n    post:\n      operationId: ListTagsForStream\n      description: Lists the tags for the specified Kinesis data stream. This operation has a limit of five transactions per second per account.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsForStreamOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidArgumentException'\n        '482':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListTagsForStreamInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.ListTagsForStream\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=Kinesis_20131202.MergeShards:\n    post:\n      operationId: MergeShards\n      description: '\u003cp\u003eMerges two adjacent shards in a Kinesis data stream and combines them into a single shard to reduce the stream''s capacity to ingest and transport data. Two shards are considered adjacent if the union of the hash key ranges for the two shards form a contiguous set with no gaps. For example, if you have two shards, one with a hash key range of 276...381 and the other with a hash key range of 382...454, then you could merge these two shards into a single shard that would have a hash key range of 276...454. After the merge, the single child shard receives data for all hash key values covered by the two parent shards.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eMergeShards\u003c/code\u003e is called when there is a need to reduce the overall capacity of a stream because of excess capacity that is not being used. You must specify the shard to be merged and the adjacent shard for a stream. For more information about merging shards, see \u003ca href=\"https://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-resharding-merge.html\"\u003eMerge Two Shards\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eIf the stream is in the \u003ccode\u003eACTIVE\u003c/code\u003e state, you can call \u003ccode\u003eMergeShards\u003c/code\u003e. If a stream is in the \u003ccode\u003eCREATING\u003c/code\u003e, \u003ccode\u003eUPDATING\u003c/code\u003e, or \u003ccode\u003eDELETING\u003c/code\u003e state, \u003ccode\u003eMergeShards\u003c/code\u003e returns a \u003ccode\u003eResourceInUseException\u003c/code\u003e. If the specified stream does not exist, \u003ccode\u003eMergeShards\u003c/code\u003e returns a \u003ccode\u003eResourceNotFoundException\u003c/code\u003e. \u003c/p\u003e \u003cp\u003eYou can use \u003ca\u003eDescribeStream\u003c/a\u003e to check the state of the stream, which is returned in \u003ccode\u003eStreamStatus\u003c/code\u003e.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eMergeShards\u003c/code\u003e is an asynchronous operation. Upon receiving a \u003ccode\u003eMergeShards\u003c/code\u003e request, Amazon Kinesis Data Streams immediately returns a response and sets the \u003ccode\u003eStreamStatus\u003c/code\u003e to \u003ccode\u003eUPDATING\u003c/code\u003e. After the operation is completed, Kinesis Data Streams sets the \u003ccode\u003eStreamStatus\u003c/code\u003e to \u003ccode\u003eACTIVE\u003c/code\u003e. Read and write operations continue to work while the stream is in the \u003ccode\u003eUPDATING\u003c/code\u003e state. \u003c/p\u003e \u003cp\u003eYou use \u003ca\u003eDescribeStream\u003c/a\u003e to determine the shard IDs that are specified in the \u003ccode\u003eMergeShards\u003c/code\u003e request. \u003c/p\u003e \u003cp\u003eIf you try to operate on too many streams in parallel using \u003ca\u003eCreateStream\u003c/a\u003e, \u003ca\u003eDeleteStream\u003c/a\u003e, \u003ccode\u003eMergeShards\u003c/code\u003e, or \u003ca\u003eSplitShard\u003c/a\u003e, you receive a \u003ccode\u003eLimitExceededException\u003c/code\u003e. \u003c/p\u003e \u003cp\u003e \u003ccode\u003eMergeShards\u003c/code\u003e has a limit of five transactions per second per account.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '482':\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidArgumentException'\n        '483':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MergeShardsInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.MergeShards\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=Kinesis_20131202.PutRecord:\n    post:\n      operationId: PutRecord\n      description: '\u003cp\u003eWrites a single data record into an Amazon Kinesis data stream. Call \u003ccode\u003ePutRecord\u003c/code\u003e to send data into the stream for real-time ingestion and subsequent processing, one record at a time. Each shard can support writes up to 1,000 records per second, up to a maximum data write total of 1 MiB per second.\u003c/p\u003e \u003cp\u003eYou must specify the name of the stream that captures, stores, and transports the data; a partition key; and the data blob itself.\u003c/p\u003e \u003cp\u003eThe data blob can be any type of data; for example, a segment from a log file, geographic/location data, website clickstream data, and so on.\u003c/p\u003e \u003cp\u003eThe partition key is used by Kinesis Data Streams to distribute data across shards. Kinesis Data Streams segregates the data records that belong to a stream into multiple shards, using the partition key associated with each data record to determine the shard to which a given data record belongs.\u003c/p\u003e \u003cp\u003ePartition keys are Unicode strings, with a maximum length limit of 256 characters for each key. An MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards using the hash key ranges of the shards. You can override hashing the partition key to determine the shard by explicitly specifying a hash value using the \u003ccode\u003eExplicitHashKey\u003c/code\u003e parameter. For more information, see \u003ca href=\"https://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream\"\u003eAdding Data to a Stream\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003e \u003ccode\u003ePutRecord\u003c/code\u003e returns the shard ID of where the data record was placed and the sequence number that was assigned to the data record.\u003c/p\u003e \u003cp\u003eSequence numbers increase over time and are specific to a shard within a stream, not across all shards within a stream. To guarantee strictly increasing ordering, write serially to a shard and use the \u003ccode\u003eSequenceNumberForOrdering\u003c/code\u003e parameter. For more information, see \u003ca href=\"https://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream\"\u003eAdding Data to a Stream\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eAfter you write a record to a stream, you cannot modify that record or its order within the stream.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eIf a \u003ccode\u003ePutRecord\u003c/code\u003e request cannot be processed because of insufficient provisioned throughput on the shard involved in the request, \u003ccode\u003ePutRecord\u003c/code\u003e throws \u003ccode\u003eProvisionedThroughputExceededException\u003c/code\u003e. \u003c/p\u003e \u003cp\u003eBy default, data records are accessible for 24 hours from the time that they are added to a stream. You can use \u003ca\u003eIncreaseStreamRetentionPeriod\u003c/a\u003e or \u003ca\u003eDecreaseStreamRetentionPeriod\u003c/a\u003e to modify this retention period.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutRecordOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidArgumentException'\n        '482':\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProvisionedThroughputExceededException'\n        '483':\n          description: KMSDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KMSDisabledException'\n        '484':\n          description: KMSInvalidStateException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KMSInvalidStateException'\n        '485':\n          description: KMSAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KMSAccessDeniedException'\n        '486':\n          description: KMSNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KMSNotFoundException'\n        '487':\n          description: KMSOptInRequired\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KMSOptInRequired'\n        '488':\n          description: KMSThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KMSThrottlingException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutRecordInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.PutRecord\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=Kinesis_20131202.PutRecords:\n    post:\n      operationId: PutRecords\n      description: '\u003cp\u003eWrites multiple data records into a Kinesis data stream in a single call (also referred to as a \u003ccode\u003ePutRecords\u003c/code\u003e request). Use this operation to send data into the stream for data ingestion and processing. \u003c/p\u003e \u003cp\u003eEach \u003ccode\u003ePutRecords\u003c/code\u003e request can support up to 500 records. Each record in the request can be as large as 1 MiB, up to a limit of 5 MiB for the entire request, including partition keys. Each shard can support writes up to 1,000 records per second, up to a maximum data write total of 1 MiB per second.\u003c/p\u003e \u003cp\u003eYou must specify the name of the stream that captures, stores, and transports the data; and an array of request \u003ccode\u003eRecords\u003c/code\u003e, with each record in the array requiring a partition key and data blob. The record size limit applies to the total size of the partition key and data blob.\u003c/p\u003e \u003cp\u003eThe data blob can be any type of data; for example, a segment from a log file, geographic/location data, website clickstream data, and so on.\u003c/p\u003e \u003cp\u003eThe partition key is used by Kinesis Data Streams as input to a hash function that maps the partition key and associated data to a specific shard. An MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream. For more information, see \u003ca href=\"https://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream\"\u003eAdding Data to a Stream\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eEach record in the \u003ccode\u003eRecords\u003c/code\u003e array may include an optional parameter, \u003ccode\u003eExplicitHashKey\u003c/code\u003e, which overrides the partition key to shard mapping. This parameter allows a data producer to determine explicitly the shard where the record is stored. For more information, see \u003ca href=\"https://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords\"\u003eAdding Multiple Records with PutRecords\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eThe \u003ccode\u003ePutRecords\u003c/code\u003e response includes an array of response \u003ccode\u003eRecords\u003c/code\u003e. Each record in the response array directly correlates with a record in the request array using natural ordering, from the top to the bottom of the request and response. The response \u003ccode\u003eRecords\u003c/code\u003e array always includes the same number of records as the request array.\u003c/p\u003e \u003cp\u003eThe response \u003ccode\u003eRecords\u003c/code\u003e array includes both successfully and unsuccessfully processed records. Kinesis Data Streams attempts to process all records in each \u003ccode\u003ePutRecords\u003c/code\u003e request. A single record failure does not stop the processing of subsequent records. As a result, PutRecords doesn''t guarantee the ordering of records. If you need to read records in the same order they are written to the stream, use \u003ca\u003ePutRecord\u003c/a\u003e instead of \u003ccode\u003ePutRecords\u003c/code\u003e, and write to the same shard.\u003c/p\u003e \u003cp\u003eA successfully processed record includes \u003ccode\u003eShardId\u003c/code\u003e and \u003ccode\u003eSequenceNumber\u003c/code\u003e values. The \u003ccode\u003eShardId\u003c/code\u003e parameter identifies the shard in the stream where the record is stored. The \u003ccode\u003eSequenceNumber\u003c/code\u003e parameter is an identifier assigned to the put record, unique to all records in the stream.\u003c/p\u003e \u003cp\u003eAn unsuccessfully processed record includes \u003ccode\u003eErrorCode\u003c/code\u003e and \u003ccode\u003eErrorMessage\u003c/code\u003e values. \u003ccode\u003eErrorCode\u003c/code\u003e reflects the type of error and can be one of the following values: \u003ccode\u003eProvisionedThroughputExceededException\u003c/code\u003e or \u003ccode\u003eInternalFailure\u003c/code\u003e. \u003ccode\u003eErrorMessage\u003c/code\u003e provides more detailed information about the \u003ccode\u003eProvisionedThroughputExceededException\u003c/code\u003e exception including the account ID, stream name, and shard ID of the record that was throttled. For more information about partially successful responses, see \u003ca href=\"https://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-add-data-to-stream.html#kinesis-using-sdk-java-putrecords\"\u003eAdding Multiple Records with PutRecords\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eAfter you write a record to a stream, you cannot modify that record or its order within the stream.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eBy default, data records are accessible for 24 hours from the time that they are added to a stream. You can use \u003ca\u003eIncreaseStreamRetentionPeriod\u003c/a\u003e or \u003ca\u003eDecreaseStreamRetentionPeriod\u003c/a\u003e to modify this retention period.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutRecordsOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidArgumentException'\n        '482':\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProvisionedThroughputExceededException'\n        '483':\n          description: KMSDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KMSDisabledException'\n        '484':\n          description: KMSInvalidStateException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KMSInvalidStateException'\n        '485':\n          description: KMSAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KMSAccessDeniedException'\n        '486':\n          description: KMSNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KMSNotFoundException'\n        '487':\n          description: KMSOptInRequired\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KMSOptInRequired'\n        '488':\n          description: KMSThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KMSThrottlingException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutRecordsInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.PutRecords\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=Kinesis_20131202.RegisterStreamConsumer:\n    post:\n      operationId: RegisterStreamConsumer\n      description: '\u003cp\u003eRegisters a consumer with a Kinesis data stream. When you use this operation, the consumer you register can then call \u003ca\u003eSubscribeToShard\u003c/a\u003e to receive data from the stream using enhanced fan-out, at a rate of up to 2 MiB per second for every shard you subscribe to. This rate is unaffected by the total number of consumers that read from the same stream.\u003c/p\u003e \u003cp\u003eYou can register up to 20 consumers per stream. A given consumer can only be registered with one stream at a time.\u003c/p\u003e \u003cp\u003eFor an example of how to use this operations, see \u003ca href=\"/streams/latest/dev/building-enhanced-consumers-api.html\"\u003eEnhanced Fan-Out Using the Kinesis Data Streams API\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eThe use of this operation has a limit of five transactions per second per account. Also, only 5 consumers can be created simultaneously. In other words, you cannot have more than 5 consumers in a \u003ccode\u003eCREATING\u003c/code\u003e status at the same time. Registering a 6th consumer while there are 5 in a \u003ccode\u003eCREATING\u003c/code\u003e status results in a \u003ccode\u003eLimitExceededException\u003c/code\u003e.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegisterStreamConsumerOutput'\n        '480':\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidArgumentException'\n        '481':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '482':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterStreamConsumerInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.RegisterStreamConsumer\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=Kinesis_20131202.RemoveTagsFromStream:\n    post:\n      operationId: RemoveTagsFromStream\n      description: '\u003cp\u003eRemoves tags from the specified Kinesis data stream. Removed tags are deleted and cannot be recovered after this operation successfully completes.\u003c/p\u003e \u003cp\u003eIf you specify a tag that does not exist, it is ignored.\u003c/p\u003e \u003cp\u003e \u003ca\u003eRemoveTagsFromStream\u003c/a\u003e has a limit of five transactions per second per account.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '482':\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidArgumentException'\n        '483':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RemoveTagsFromStreamInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.RemoveTagsFromStream\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=Kinesis_20131202.SplitShard:\n    post:\n      operationId: SplitShard\n      description: '\u003cp\u003eSplits a shard into two new shards in the Kinesis data stream, to increase the stream''s capacity to ingest and transport data. \u003ccode\u003eSplitShard\u003c/code\u003e is called when there is a need to increase the overall capacity of a stream because of an expected increase in the volume of data records being ingested. \u003c/p\u003e \u003cp\u003eYou can also use \u003ccode\u003eSplitShard\u003c/code\u003e when a shard appears to be approaching its maximum utilization; for example, the producers sending data into the specific shard are suddenly sending more than previously anticipated. You can also call \u003ccode\u003eSplitShard\u003c/code\u003e to increase stream capacity, so that more Kinesis Data Streams applications can simultaneously read data from the stream for real-time processing. \u003c/p\u003e \u003cp\u003eYou must specify the shard to be split and the new hash key, which is the position in the shard where the shard gets split in two. In many cases, the new hash key might be the average of the beginning and ending hash key, but it can be any hash key value in the range being mapped into the shard. For more information, see \u003ca href=\"https://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-resharding-split.html\"\u003eSplit a Shard\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eYou can use \u003ca\u003eDescribeStream\u003c/a\u003e to determine the shard ID and hash key values for the \u003ccode\u003eShardToSplit\u003c/code\u003e and \u003ccode\u003eNewStartingHashKey\u003c/code\u003e parameters that are specified in the \u003ccode\u003eSplitShard\u003c/code\u003e request.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eSplitShard\u003c/code\u003e is an asynchronous operation. Upon receiving a \u003ccode\u003eSplitShard\u003c/code\u003e request, Kinesis Data Streams immediately returns a response and sets the stream status to \u003ccode\u003eUPDATING\u003c/code\u003e. After the operation is completed, Kinesis Data Streams sets the stream status to \u003ccode\u003eACTIVE\u003c/code\u003e. Read and write operations continue to work while the stream is in the \u003ccode\u003eUPDATING\u003c/code\u003e state. \u003c/p\u003e \u003cp\u003eYou can use \u003ccode\u003eDescribeStream\u003c/code\u003e to check the status of the stream, which is returned in \u003ccode\u003eStreamStatus\u003c/code\u003e. If the stream is in the \u003ccode\u003eACTIVE\u003c/code\u003e state, you can call \u003ccode\u003eSplitShard\u003c/code\u003e. If a stream is in \u003ccode\u003eCREATING\u003c/code\u003e or \u003ccode\u003eUPDATING\u003c/code\u003e or \u003ccode\u003eDELETING\u003c/code\u003e states, \u003ccode\u003eDescribeStream\u003c/code\u003e returns a \u003ccode\u003eResourceInUseException\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIf the specified stream does not exist, \u003ccode\u003eDescribeStream\u003c/code\u003e returns a \u003ccode\u003eResourceNotFoundException\u003c/code\u003e. If you try to create more shards than are authorized for your account, you receive a \u003ccode\u003eLimitExceededException\u003c/code\u003e. \u003c/p\u003e \u003cp\u003eFor the default shard limit for an AWS account, see \u003ca href=\"https://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html\"\u003eKinesis Data Streams Limits\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams Developer Guide\u003c/i\u003e. To increase this limit, \u003ca href=\"https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html\"\u003econtact AWS Support\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eIf you try to operate on too many streams simultaneously using \u003ca\u003eCreateStream\u003c/a\u003e, \u003ca\u003eDeleteStream\u003c/a\u003e, \u003ca\u003eMergeShards\u003c/a\u003e, and/or \u003ca\u003eSplitShard\u003c/a\u003e, you receive a \u003ccode\u003eLimitExceededException\u003c/code\u003e. \u003c/p\u003e \u003cp\u003e \u003ccode\u003eSplitShard\u003c/code\u003e has a limit of five transactions per second per account.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '482':\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidArgumentException'\n        '483':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SplitShardInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.SplitShard\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=Kinesis_20131202.StartStreamEncryption:\n    post:\n      operationId: StartStreamEncryption\n      description: '\u003cp\u003eEnables or updates server-side encryption using an AWS KMS key for a specified stream. \u003c/p\u003e \u003cp\u003eStarting encryption is an asynchronous operation. Upon receiving the request, Kinesis Data Streams returns immediately and sets the status of the stream to \u003ccode\u003eUPDATING\u003c/code\u003e. After the update is complete, Kinesis Data Streams sets the status of the stream back to \u003ccode\u003eACTIVE\u003c/code\u003e. Updating or applying encryption normally takes a few seconds to complete, but it can take minutes. You can continue to read and write data to your stream while its status is \u003ccode\u003eUPDATING\u003c/code\u003e. Once the status of the stream is \u003ccode\u003eACTIVE\u003c/code\u003e, encryption begins for records written to the stream. \u003c/p\u003e \u003cp\u003eAPI Limits: You can successfully apply a new AWS KMS key for server-side encryption 25 times in a rolling 24-hour period.\u003c/p\u003e \u003cp\u003eNote: It can take up to 5 seconds after the stream is in an \u003ccode\u003eACTIVE\u003c/code\u003e status before all records written to the stream are encrypted. After you enable encryption, you can verify that encryption is applied by inspecting the API response from \u003ccode\u003ePutRecord\u003c/code\u003e or \u003ccode\u003ePutRecords\u003c/code\u003e.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidArgumentException'\n        '481':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '482':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: KMSDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KMSDisabledException'\n        '485':\n          description: KMSInvalidStateException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KMSInvalidStateException'\n        '486':\n          description: KMSAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KMSAccessDeniedException'\n        '487':\n          description: KMSNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KMSNotFoundException'\n        '488':\n          description: KMSOptInRequired\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KMSOptInRequired'\n        '489':\n          description: KMSThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KMSThrottlingException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StartStreamEncryptionInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.StartStreamEncryption\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=Kinesis_20131202.StopStreamEncryption:\n    post:\n      operationId: StopStreamEncryption\n      description: '\u003cp\u003eDisables server-side encryption for a specified stream. \u003c/p\u003e \u003cp\u003eStopping encryption is an asynchronous operation. Upon receiving the request, Kinesis Data Streams returns immediately and sets the status of the stream to \u003ccode\u003eUPDATING\u003c/code\u003e. After the update is complete, Kinesis Data Streams sets the status of the stream back to \u003ccode\u003eACTIVE\u003c/code\u003e. Stopping encryption normally takes a few seconds to complete, but it can take minutes. You can continue to read and write data to your stream while its status is \u003ccode\u003eUPDATING\u003c/code\u003e. Once the status of the stream is \u003ccode\u003eACTIVE\u003c/code\u003e, records written to the stream are no longer encrypted by Kinesis Data Streams. \u003c/p\u003e \u003cp\u003eAPI Limits: You can successfully disable server-side encryption 25 times in a rolling 24-hour period. \u003c/p\u003e \u003cp\u003eNote: It can take up to 5 seconds after the stream is in an \u003ccode\u003eACTIVE\u003c/code\u003e status before all records written to the stream are no longer subject to encryption. After you disabled encryption, you can verify that encryption is not applied by inspecting the API response from \u003ccode\u003ePutRecord\u003c/code\u003e or \u003ccode\u003ePutRecords\u003c/code\u003e.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidArgumentException'\n        '481':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '482':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StopStreamEncryptionInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.StopStreamEncryption\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=Kinesis_20131202.UpdateShardCount:\n    post:\n      operationId: UpdateShardCount\n      description: '\u003cp\u003eUpdates the shard count of the specified stream to the specified number of shards.\u003c/p\u003e \u003cp\u003eUpdating the shard count is an asynchronous operation. Upon receiving the request, Kinesis Data Streams returns immediately and sets the status of the stream to \u003ccode\u003eUPDATING\u003c/code\u003e. After the update is complete, Kinesis Data Streams sets the status of the stream back to \u003ccode\u003eACTIVE\u003c/code\u003e. Depending on the size of the stream, the scaling action could take a few minutes to complete. You can continue to read and write data to your stream while its status is \u003ccode\u003eUPDATING\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eTo update the shard count, Kinesis Data Streams performs splits or merges on individual shards. This can cause short-lived shards to be created, in addition to the final shards. These short-lived shards count towards your total shard limit for your account in the Region.\u003c/p\u003e \u003cp\u003eWhen using this operation, we recommend that you specify a target shard count that is a multiple of 25% (25%, 50%, 75%, 100%). You can specify any target value within your shard limit. However, if you specify a target that isn''t a multiple of 25%, the scaling action might take longer to complete. \u003c/p\u003e \u003cp\u003eThis operation has the following default limits. By default, you cannot do the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eScale more than ten times per rolling 24-hour period per stream\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eScale up to more than double your current shard count for a stream\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eScale down below half your current shard count for a stream\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eScale up to more than 500 shards in a stream\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eScale a stream with more than 500 shards down unless the result is less than 500 shards\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eScale up to more than the shard limit for your account\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eFor the default limits for an AWS account, see \u003ca href=\"https://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html\"\u003eStreams Limits\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams Developer Guide\u003c/i\u003e. To request an increase in the call rate limit, the shard limit for this API, or your overall shard limit, use the \u003ca href=\"https://console.aws.amazon.com/support/v1#/case/create?issueType=service-limit-increase\u0026amp;limitType=service-code-kinesis\"\u003elimits form\u003c/a\u003e.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateShardCountOutput'\n        '480':\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidArgumentException'\n        '481':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '482':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateShardCountInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.UpdateShardCount\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    AddTagsToStreamInput:\n      type: object\n      required:\n        - StreamName\n        - Tags\n      title: AddTagsToStreamInput\n      properties:\n        StreamName:\n          allOf:\n            - $ref: '#/components/schemas/StreamName'\n            - description: The name of the stream.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: A set of up to 10 key-value pairs to use to create the tags.\n      description: Represents the input for \u003ccode\u003eAddTagsToStream\u003c/code\u003e.\n    ResourceNotFoundException: {}\n    ResourceInUseException: {}\n    InvalidArgumentException: {}\n    LimitExceededException: {}\n    CreateStreamInput:\n      type: object\n      required:\n        - StreamName\n        - ShardCount\n      title: CreateStreamInput\n      properties:\n        StreamName:\n          allOf:\n            - $ref: '#/components/schemas/StreamName'\n            - description: 'A name to identify the stream. The stream name is scoped to the AWS account used by the application that creates the stream. It is also scoped by AWS Region. That is, two streams in two different AWS accounts can have the same name. Two streams in the same AWS account but in two different Regions can also have the same name.'\n        ShardCount:\n          allOf:\n            - $ref: '#/components/schemas/PositiveIntegerObject'\n            - description: The number of shards that the stream will use. The throughput of the stream is a function of the number of shards; more shards are required for greater provisioned throughput.\n      description: Represents the input for \u003ccode\u003eCreateStream\u003c/code\u003e.\n    DecreaseStreamRetentionPeriodInput:\n      type: object\n      required:\n        - StreamName\n        - RetentionPeriodHours\n      title: DecreaseStreamRetentionPeriodInput\n      properties:\n        StreamName:\n          allOf:\n            - $ref: '#/components/schemas/StreamName'\n            - description: The name of the stream to modify.\n        RetentionPeriodHours:\n          allOf:\n            - $ref: '#/components/schemas/RetentionPeriodHours'\n            - description: 'The new retention period of the stream, in hours. Must be less than the current retention period.'\n      description: Represents the input for \u003ca\u003eDecreaseStreamRetentionPeriod\u003c/a\u003e.\n    DeleteStreamInput:\n      type: object\n      required:\n        - StreamName\n      title: DeleteStreamInput\n      properties:\n        StreamName:\n          allOf:\n            - $ref: '#/components/schemas/StreamName'\n            - description: The name of the stream to delete.\n        EnforceConsumerDeletion:\n          allOf:\n            - $ref: '#/components/schemas/BooleanObject'\n            - description: 'If this parameter is unset (\u003ccode\u003enull\u003c/code\u003e) or if you set it to \u003ccode\u003efalse\u003c/code\u003e, and the stream has registered consumers, the call to \u003ccode\u003eDeleteStream\u003c/code\u003e fails with a \u003ccode\u003eResourceInUseException\u003c/code\u003e. '\n      description: Represents the input for \u003ca\u003eDeleteStream\u003c/a\u003e.\n    DeregisterStreamConsumerInput:\n      type: object\n      title: DeregisterStreamConsumerInput\n      properties:\n        StreamARN:\n          allOf:\n            - $ref: '#/components/schemas/StreamARN'\n            - description: 'The ARN of the Kinesis data stream that the consumer is registered with. For more information, see \u003ca href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kinesis-streams\"\u003eAmazon Resource Names (ARNs) and AWS Service Namespaces\u003c/a\u003e.'\n        ConsumerName:\n          allOf:\n            - $ref: '#/components/schemas/ConsumerName'\n            - description: The name that you gave to the consumer.\n        ConsumerARN:\n          allOf:\n            - $ref: '#/components/schemas/ConsumerARN'\n            - description: 'The ARN returned by Kinesis Data Streams when you registered the consumer. If you don''t know the ARN of the consumer that you want to deregister, you can use the ListStreamConsumers operation to get a list of the descriptions of all the consumers that are currently registered with a given data stream. The description of a consumer contains its ARN.'\n    DescribeLimitsOutput:\n      type: object\n      required:\n        - ShardLimit\n        - OpenShardCount\n      properties:\n        ShardLimit:\n          allOf:\n            - $ref: '#/components/schemas/ShardCountObject'\n            - description: The maximum number of shards.\n        OpenShardCount:\n          allOf:\n            - $ref: '#/components/schemas/ShardCountObject'\n            - description: The number of open shards.\n    DescribeLimitsInput:\n      type: object\n      title: DescribeLimitsInput\n      properties: {}\n    DescribeStreamOutput:\n      type: object\n      required:\n        - StreamDescription\n      properties:\n        StreamDescription:\n          allOf:\n            - $ref: '#/components/schemas/StreamDescription'\n            - description: 'The current status of the stream, the stream Amazon Resource Name (ARN), an array of shard objects that comprise the stream, and whether there are more shards available.'\n      description: Represents the output for \u003ccode\u003eDescribeStream\u003c/code\u003e.\n    DescribeStreamInput:\n      type: object\n      required:\n        - StreamName\n      title: DescribeStreamInput\n      properties:\n        StreamName:\n          allOf:\n            - $ref: '#/components/schemas/StreamName'\n            - description: The name of the stream to describe.\n        Limit:\n          allOf:\n            - $ref: '#/components/schemas/DescribeStreamInputLimit'\n            - description: 'The maximum number of shards to return in a single call. The default value is 100. If you specify a value greater than 100, at most 100 shards are returned.'\n        ExclusiveStartShardId:\n          allOf:\n            - $ref: '#/components/schemas/ShardId'\n            - description: The shard ID of the shard to start with.\n      description: Represents the input for \u003ccode\u003eDescribeStream\u003c/code\u003e.\n    DescribeStreamConsumerOutput:\n      type: object\n      required:\n        - ConsumerDescription\n      properties:\n        ConsumerDescription:\n          allOf:\n            - $ref: '#/components/schemas/ConsumerDescription'\n            - description: An object that represents the details of the consumer.\n    DescribeStreamConsumerInput:\n      type: object\n      title: DescribeStreamConsumerInput\n      properties:\n        StreamARN:\n          allOf:\n            - $ref: '#/components/schemas/StreamARN'\n            - description: 'The ARN of the Kinesis data stream that the consumer is registered with. For more information, see \u003ca href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kinesis-streams\"\u003eAmazon Resource Names (ARNs) and AWS Service Namespaces\u003c/a\u003e.'\n        ConsumerName:\n          allOf:\n            - $ref: '#/components/schemas/ConsumerName'\n            - description: The name that you gave to the consumer.\n        ConsumerARN:\n          allOf:\n            - $ref: '#/components/schemas/ConsumerARN'\n            - description: The ARN returned by Kinesis Data Streams when you registered the consumer.\n    DescribeStreamSummaryOutput:\n      type: object\n      required:\n        - StreamDescriptionSummary\n      properties:\n        StreamDescriptionSummary:\n          allOf:\n            - $ref: '#/components/schemas/StreamDescriptionSummary'\n            - description: A \u003ca\u003eStreamDescriptionSummary\u003c/a\u003e containing information about the stream.\n    DescribeStreamSummaryInput:\n      type: object\n      required:\n        - StreamName\n      title: DescribeStreamSummaryInput\n      properties:\n        StreamName:\n          allOf:\n            - $ref: '#/components/schemas/StreamName'\n            - description: The name of the stream to describe.\n    EnhancedMonitoringOutput:\n      type: object\n      properties:\n        StreamName:\n          allOf:\n            - $ref: '#/components/schemas/StreamName'\n            - description: The name of the Kinesis data stream.\n        CurrentShardLevelMetrics:\n          allOf:\n            - $ref: '#/components/schemas/MetricsNameList'\n            - description: Represents the current state of the metrics that are in the enhanced state before the operation.\n        DesiredShardLevelMetrics:\n          allOf:\n            - $ref: '#/components/schemas/MetricsNameList'\n            - description: Represents the list of all the metrics that would be in the enhanced state after the operation.\n      description: Represents the output for \u003ca\u003eEnableEnhancedMonitoring\u003c/a\u003e and \u003ca\u003eDisableEnhancedMonitoring\u003c/a\u003e.\n    DisableEnhancedMonitoringInput:\n      type: object\n      required:\n        - StreamName\n        - ShardLevelMetrics\n      title: DisableEnhancedMonitoringInput\n      properties:\n        StreamName:\n          allOf:\n            - $ref: '#/components/schemas/StreamName'\n            - description: The name of the Kinesis data stream for which to disable enhanced monitoring.\n        ShardLevelMetrics:\n          allOf:\n            - $ref: '#/components/schemas/MetricsNameList'\n            - description: '\u003cp\u003eList of shard-level metrics to disable.\u003c/p\u003e \u003cp\u003eThe following are the valid shard-level metrics. The value \"\u003ccode\u003eALL\u003c/code\u003e\" disables every metric.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIncomingBytes\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIncomingRecords\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eOutgoingBytes\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eOutgoingRecords\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eWriteProvisionedThroughputExceeded\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eReadProvisionedThroughputExceeded\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIteratorAgeMilliseconds\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eALL\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/kinesis/latest/dev/monitoring-with-cloudwatch.html\"\u003eMonitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n      description: Represents the input for \u003ca\u003eDisableEnhancedMonitoring\u003c/a\u003e.\n    EnableEnhancedMonitoringInput:\n      type: object\n      required:\n        - StreamName\n        - ShardLevelMetrics\n      title: EnableEnhancedMonitoringInput\n      properties:\n        StreamName:\n          allOf:\n            - $ref: '#/components/schemas/StreamName'\n            - description: The name of the stream for which to enable enhanced monitoring.\n        ShardLevelMetrics:\n          allOf:\n            - $ref: '#/components/schemas/MetricsNameList'\n            - description: '\u003cp\u003eList of shard-level metrics to enable.\u003c/p\u003e \u003cp\u003eThe following are the valid shard-level metrics. The value \"\u003ccode\u003eALL\u003c/code\u003e\" enables every metric.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIncomingBytes\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIncomingRecords\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eOutgoingBytes\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eOutgoingRecords\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eWriteProvisionedThroughputExceeded\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eReadProvisionedThroughputExceeded\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIteratorAgeMilliseconds\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eALL\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/kinesis/latest/dev/monitoring-with-cloudwatch.html\"\u003eMonitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n      description: Represents the input for \u003ca\u003eEnableEnhancedMonitoring\u003c/a\u003e.\n    GetRecordsOutput:\n      type: object\n      required:\n        - Records\n      properties:\n        Records:\n          allOf:\n            - $ref: '#/components/schemas/RecordList'\n            - description: The data records retrieved from the shard.\n        NextShardIterator:\n          allOf:\n            - $ref: '#/components/schemas/ShardIterator'\n            - description: 'The next position in the shard from which to start sequentially reading data records. If set to \u003ccode\u003enull\u003c/code\u003e, the shard has been closed and the requested iterator does not return any more data. '\n        MillisBehindLatest:\n          allOf:\n            - $ref: '#/components/schemas/MillisBehindLatest'\n            - description: 'The number of milliseconds the \u003ca\u003eGetRecords\u003c/a\u003e response is from the tip of the stream, indicating how far behind current time the consumer is. A value of zero indicates that record processing is caught up, and there are no new records to process at this moment.'\n        ChildShards:\n          $ref: '#/components/schemas/ChildShardList'\n      description: Represents the output for \u003ca\u003eGetRecords\u003c/a\u003e.\n    GetRecordsInput:\n      type: object\n      required:\n        - ShardIterator\n      title: GetRecordsInput\n      properties:\n        ShardIterator:\n          allOf:\n            - $ref: '#/components/schemas/ShardIterator'\n            - description: The position in the shard from which you want to start sequentially reading data records. A shard iterator specifies this position using the sequence number of a data record in the shard.\n        Limit:\n          allOf:\n            - $ref: '#/components/schemas/GetRecordsInputLimit'\n            - description: 'The maximum number of records to return. Specify a value of up to 10,000. If you specify a value that is greater than 10,000, \u003ca\u003eGetRecords\u003c/a\u003e throws \u003ccode\u003eInvalidArgumentException\u003c/code\u003e. The default value is 10,000.'\n      description: Represents the input for \u003ca\u003eGetRecords\u003c/a\u003e.\n    ProvisionedThroughputExceededException: {}\n    ExpiredIteratorException: {}\n    KMSDisabledException: {}\n    KMSInvalidStateException: {}\n    KMSAccessDeniedException: {}\n    KMSNotFoundException: {}\n    KMSOptInRequired: {}\n    KMSThrottlingException: {}\n    GetShardIteratorOutput:\n      type: object\n      properties:\n        ShardIterator:\n          allOf:\n            - $ref: '#/components/schemas/ShardIterator'\n            - description: The position in the shard from which to start reading data records sequentially. A shard iterator specifies this position using the sequence number of a data record in a shard.\n      description: Represents the output for \u003ccode\u003eGetShardIterator\u003c/code\u003e.\n    GetShardIteratorInput:\n      type: object\n      required:\n        - StreamName\n        - ShardId\n        - ShardIteratorType\n      title: GetShardIteratorInput\n      properties:\n        StreamName:\n          allOf:\n            - $ref: '#/components/schemas/StreamName'\n            - description: The name of the Amazon Kinesis data stream.\n        ShardId:\n          allOf:\n            - $ref: '#/components/schemas/ShardId'\n            - description: The shard ID of the Kinesis Data Streams shard to get the iterator for.\n        ShardIteratorType:\n          allOf:\n            - $ref: '#/components/schemas/ShardIteratorType'\n            - description: '\u003cp\u003eDetermines how the shard iterator is used to start reading data records from the shard.\u003c/p\u003e \u003cp\u003eThe following are the valid Amazon Kinesis shard iterator types:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eAT_SEQUENCE_NUMBER - Start reading from the position denoted by a specific sequence number, provided in the value \u003ccode\u003eStartingSequenceNumber\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAFTER_SEQUENCE_NUMBER - Start reading right after the position denoted by a specific sequence number, provided in the value \u003ccode\u003eStartingSequenceNumber\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAT_TIMESTAMP - Start reading from the position denoted by a specific time stamp, provided in the value \u003ccode\u003eTimestamp\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTRIM_HORIZON - Start reading at the last untrimmed record in the shard in the system, which is the oldest data record in the shard.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eLATEST - Start reading just after the most recent record in the shard, so that you always read the most recent data in the shard.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        StartingSequenceNumber:\n          allOf:\n            - $ref: '#/components/schemas/SequenceNumber'\n            - description: The sequence number of the data record in the shard from which to start reading. Used with shard iterator type AT_SEQUENCE_NUMBER and AFTER_SEQUENCE_NUMBER.\n        Timestamp:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: 'The time stamp of the data record from which to start reading. Used with shard iterator type AT_TIMESTAMP. A time stamp is the Unix epoch date with precision in milliseconds. For example, \u003ccode\u003e2016-04-04T19:58:46.480-00:00\u003c/code\u003e or \u003ccode\u003e1459799926.480\u003c/code\u003e. If a record with this exact time stamp does not exist, the iterator returned is for the next (later) record. If the time stamp is older than the current trim horizon, the iterator returned is for the oldest untrimmed data record (TRIM_HORIZON).'\n      description: Represents the input for \u003ccode\u003eGetShardIterator\u003c/code\u003e.\n    IncreaseStreamRetentionPeriodInput:\n      type: object\n      required:\n        - StreamName\n        - RetentionPeriodHours\n      title: IncreaseStreamRetentionPeriodInput\n      properties:\n        StreamName:\n          allOf:\n            - $ref: '#/components/schemas/StreamName'\n            - description: The name of the stream to modify.\n        RetentionPeriodHours:\n          allOf:\n            - $ref: '#/components/schemas/RetentionPeriodHours'\n            - description: 'The new retention period of the stream, in hours. Must be more than the current retention period.'\n      description: Represents the input for \u003ca\u003eIncreaseStreamRetentionPeriod\u003c/a\u003e.\n    ListShardsOutput:\n      type: object\n      properties:\n        Shards:\n          allOf:\n            - $ref: '#/components/schemas/ShardList'\n            - description: 'An array of JSON objects. Each object represents one shard and specifies the IDs of the shard, the shard''s parent, and the shard that''s adjacent to the shard''s parent. Each object also contains the starting and ending hash keys and the starting and ending sequence numbers for the shard.'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: '\u003cp\u003eWhen the number of shards in the data stream is greater than the default value for the \u003ccode\u003eMaxResults\u003c/code\u003e parameter, or if you explicitly specify a value for \u003ccode\u003eMaxResults\u003c/code\u003e that is less than the number of shards in the data stream, the response includes a pagination token named \u003ccode\u003eNextToken\u003c/code\u003e. You can specify this \u003ccode\u003eNextToken\u003c/code\u003e value in a subsequent call to \u003ccode\u003eListShards\u003c/code\u003e to list the next set of shards. For more information about the use of this pagination token when calling the \u003ccode\u003eListShards\u003c/code\u003e operation, see \u003ca\u003eListShardsInput$NextToken\u003c/a\u003e.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eTokens expire after 300 seconds. When you obtain a value for \u003ccode\u003eNextToken\u003c/code\u003e in the response to a call to \u003ccode\u003eListShards\u003c/code\u003e, you have 300 seconds to use that value. If you specify an expired token in a call to \u003ccode\u003eListShards\u003c/code\u003e, you get \u003ccode\u003eExpiredNextTokenException\u003c/code\u003e.\u003c/p\u003e \u003c/important\u003e'\n    ListShardsInput:\n      type: object\n      title: ListShardsInput\n      properties:\n        StreamName:\n          allOf:\n            - $ref: '#/components/schemas/StreamName'\n            - description: \u003cp\u003eThe name of the data stream whose shards you want to list. \u003c/p\u003e \u003cp\u003eYou cannot specify this parameter if you specify the \u003ccode\u003eNextToken\u003c/code\u003e parameter.\u003c/p\u003e\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: '\u003cp\u003eWhen the number of shards in the data stream is greater than the default value for the \u003ccode\u003eMaxResults\u003c/code\u003e parameter, or if you explicitly specify a value for \u003ccode\u003eMaxResults\u003c/code\u003e that is less than the number of shards in the data stream, the response includes a pagination token named \u003ccode\u003eNextToken\u003c/code\u003e. You can specify this \u003ccode\u003eNextToken\u003c/code\u003e value in a subsequent call to \u003ccode\u003eListShards\u003c/code\u003e to list the next set of shards.\u003c/p\u003e \u003cp\u003eDon''t specify \u003ccode\u003eStreamName\u003c/code\u003e or \u003ccode\u003eStreamCreationTimestamp\u003c/code\u003e if you specify \u003ccode\u003eNextToken\u003c/code\u003e because the latter unambiguously identifies the stream.\u003c/p\u003e \u003cp\u003eYou can optionally specify a value for the \u003ccode\u003eMaxResults\u003c/code\u003e parameter when you specify \u003ccode\u003eNextToken\u003c/code\u003e. If you specify a \u003ccode\u003eMaxResults\u003c/code\u003e value that is less than the number of shards that the operation returns if you don''t specify \u003ccode\u003eMaxResults\u003c/code\u003e, the response will contain a new \u003ccode\u003eNextToken\u003c/code\u003e value. You can use the new \u003ccode\u003eNextToken\u003c/code\u003e value in a subsequent call to the \u003ccode\u003eListShards\u003c/code\u003e operation.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eTokens expire after 300 seconds. When you obtain a value for \u003ccode\u003eNextToken\u003c/code\u003e in the response to a call to \u003ccode\u003eListShards\u003c/code\u003e, you have 300 seconds to use that value. If you specify an expired token in a call to \u003ccode\u003eListShards\u003c/code\u003e, you get \u003ccode\u003eExpiredNextTokenException\u003c/code\u003e.\u003c/p\u003e \u003c/important\u003e'\n        ExclusiveStartShardId:\n          allOf:\n            - $ref: '#/components/schemas/ShardId'\n            - description: '\u003cp\u003eSpecify this parameter to indicate that you want to list the shards starting with the shard whose ID immediately follows \u003ccode\u003eExclusiveStartShardId\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIf you don''t specify this parameter, the default behavior is for \u003ccode\u003eListShards\u003c/code\u003e to list the shards starting with the first one in the stream.\u003c/p\u003e \u003cp\u003eYou cannot specify this parameter if you specify \u003ccode\u003eNextToken\u003c/code\u003e.\u003c/p\u003e'\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/ListShardsInputLimit'\n            - description: '\u003cp\u003eThe maximum number of shards to return in a single call to \u003ccode\u003eListShards\u003c/code\u003e. The minimum value you can specify for this parameter is 1, and the maximum is 10,000, which is also the default.\u003c/p\u003e \u003cp\u003eWhen the number of shards to be listed is greater than the value of \u003ccode\u003eMaxResults\u003c/code\u003e, the response contains a \u003ccode\u003eNextToken\u003c/code\u003e value that you can use in a subsequent call to \u003ccode\u003eListShards\u003c/code\u003e to list the next set of shards.\u003c/p\u003e'\n        StreamCreationTimestamp:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: '\u003cp\u003eSpecify this input parameter to distinguish data streams that have the same name. For example, if you create a data stream and then delete it, and you later create another data stream with the same name, you can use this input parameter to specify which of the two streams you want to list the shards for.\u003c/p\u003e \u003cp\u003eYou cannot specify this parameter if you specify the \u003ccode\u003eNextToken\u003c/code\u003e parameter.\u003c/p\u003e'\n        ShardFilter:\n          $ref: '#/components/schemas/ShardFilter'\n    ExpiredNextTokenException: {}\n    ListStreamConsumersOutput:\n      type: object\n      properties:\n        Consumers:\n          allOf:\n            - $ref: '#/components/schemas/ConsumerList'\n            - description: An array of JSON objects. Each object represents one registered consumer.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: '\u003cp\u003eWhen the number of consumers that are registered with the data stream is greater than the default value for the \u003ccode\u003eMaxResults\u003c/code\u003e parameter, or if you explicitly specify a value for \u003ccode\u003eMaxResults\u003c/code\u003e that is less than the number of registered consumers, the response includes a pagination token named \u003ccode\u003eNextToken\u003c/code\u003e. You can specify this \u003ccode\u003eNextToken\u003c/code\u003e value in a subsequent call to \u003ccode\u003eListStreamConsumers\u003c/code\u003e to list the next set of registered consumers. For more information about the use of this pagination token when calling the \u003ccode\u003eListStreamConsumers\u003c/code\u003e operation, see \u003ca\u003eListStreamConsumersInput$NextToken\u003c/a\u003e.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eTokens expire after 300 seconds. When you obtain a value for \u003ccode\u003eNextToken\u003c/code\u003e in the response to a call to \u003ccode\u003eListStreamConsumers\u003c/code\u003e, you have 300 seconds to use that value. If you specify an expired token in a call to \u003ccode\u003eListStreamConsumers\u003c/code\u003e, you get \u003ccode\u003eExpiredNextTokenException\u003c/code\u003e.\u003c/p\u003e \u003c/important\u003e'\n    ListStreamConsumersInput:\n      type: object\n      required:\n        - StreamARN\n      title: ListStreamConsumersInput\n      properties:\n        StreamARN:\n          allOf:\n            - $ref: '#/components/schemas/StreamARN'\n            - description: 'The ARN of the Kinesis data stream for which you want to list the registered consumers. For more information, see \u003ca href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kinesis-streams\"\u003eAmazon Resource Names (ARNs) and AWS Service Namespaces\u003c/a\u003e.'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: '\u003cp\u003eWhen the number of consumers that are registered with the data stream is greater than the default value for the \u003ccode\u003eMaxResults\u003c/code\u003e parameter, or if you explicitly specify a value for \u003ccode\u003eMaxResults\u003c/code\u003e that is less than the number of consumers that are registered with the data stream, the response includes a pagination token named \u003ccode\u003eNextToken\u003c/code\u003e. You can specify this \u003ccode\u003eNextToken\u003c/code\u003e value in a subsequent call to \u003ccode\u003eListStreamConsumers\u003c/code\u003e to list the next set of registered consumers.\u003c/p\u003e \u003cp\u003eDon''t specify \u003ccode\u003eStreamName\u003c/code\u003e or \u003ccode\u003eStreamCreationTimestamp\u003c/code\u003e if you specify \u003ccode\u003eNextToken\u003c/code\u003e because the latter unambiguously identifies the stream.\u003c/p\u003e \u003cp\u003eYou can optionally specify a value for the \u003ccode\u003eMaxResults\u003c/code\u003e parameter when you specify \u003ccode\u003eNextToken\u003c/code\u003e. If you specify a \u003ccode\u003eMaxResults\u003c/code\u003e value that is less than the number of consumers that the operation returns if you don''t specify \u003ccode\u003eMaxResults\u003c/code\u003e, the response will contain a new \u003ccode\u003eNextToken\u003c/code\u003e value. You can use the new \u003ccode\u003eNextToken\u003c/code\u003e value in a subsequent call to the \u003ccode\u003eListStreamConsumers\u003c/code\u003e operation to list the next set of consumers.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eTokens expire after 300 seconds. When you obtain a value for \u003ccode\u003eNextToken\u003c/code\u003e in the response to a call to \u003ccode\u003eListStreamConsumers\u003c/code\u003e, you have 300 seconds to use that value. If you specify an expired token in a call to \u003ccode\u003eListStreamConsumers\u003c/code\u003e, you get \u003ccode\u003eExpiredNextTokenException\u003c/code\u003e.\u003c/p\u003e \u003c/important\u003e'\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/ListStreamConsumersInputLimit'\n            - description: The maximum number of consumers that you want a single call of \u003ccode\u003eListStreamConsumers\u003c/code\u003e to return.\n        StreamCreationTimestamp:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: '\u003cp\u003eSpecify this input parameter to distinguish data streams that have the same name. For example, if you create a data stream and then delete it, and you later create another data stream with the same name, you can use this input parameter to specify which of the two streams you want to list the consumers for. \u003c/p\u003e \u003cp\u003eYou can''t specify this parameter if you specify the NextToken parameter. \u003c/p\u003e'\n    ListStreamsOutput:\n      type: object\n      required:\n        - StreamNames\n        - HasMoreStreams\n      properties:\n        StreamNames:\n          allOf:\n            - $ref: '#/components/schemas/StreamNameList'\n            - description: The names of the streams that are associated with the AWS account making the \u003ccode\u003eListStreams\u003c/code\u003e request.\n        HasMoreStreams:\n          allOf:\n            - $ref: '#/components/schemas/BooleanObject'\n            - description: 'If set to \u003ccode\u003etrue\u003c/code\u003e, there are more streams available to list.'\n      description: Represents the output for \u003ccode\u003eListStreams\u003c/code\u003e.\n    ListStreamsInput:\n      type: object\n      title: ListStreamsInput\n      properties:\n        Limit:\n          allOf:\n            - $ref: '#/components/schemas/ListStreamsInputLimit'\n            - description: The maximum number of streams to list.\n        ExclusiveStartStreamName:\n          allOf:\n            - $ref: '#/components/schemas/StreamName'\n            - description: The name of the stream to start the list with.\n      description: Represents the input for \u003ccode\u003eListStreams\u003c/code\u003e.\n    ListTagsForStreamOutput:\n      type: object\n      required:\n        - Tags\n        - HasMoreTags\n      properties:\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: 'A list of tags associated with \u003ccode\u003eStreamName\u003c/code\u003e, starting with the first tag after \u003ccode\u003eExclusiveStartTagKey\u003c/code\u003e and up to the specified \u003ccode\u003eLimit\u003c/code\u003e. '\n        HasMoreTags:\n          allOf:\n            - $ref: '#/components/schemas/BooleanObject'\n            - description: 'If set to \u003ccode\u003etrue\u003c/code\u003e, more tags are available. To request additional tags, set \u003ccode\u003eExclusiveStartTagKey\u003c/code\u003e to the key of the last tag returned.'\n      description: Represents the output for \u003ccode\u003eListTagsForStream\u003c/code\u003e.\n    ListTagsForStreamInput:\n      type: object\n      required:\n        - StreamName\n      title: ListTagsForStreamInput\n      properties:\n        StreamName:\n          allOf:\n            - $ref: '#/components/schemas/StreamName'\n            - description: The name of the stream.\n        ExclusiveStartTagKey:\n          allOf:\n            - $ref: '#/components/schemas/TagKey'\n            - description: 'The key to use as the starting point for the list of tags. If this parameter is set, \u003ccode\u003eListTagsForStream\u003c/code\u003e gets all tags that occur after \u003ccode\u003eExclusiveStartTagKey\u003c/code\u003e. '\n        Limit:\n          allOf:\n            - $ref: '#/components/schemas/ListTagsForStreamInputLimit'\n            - description: 'The number of tags to return. If this number is less than the total number of tags associated with the stream, \u003ccode\u003eHasMoreTags\u003c/code\u003e is set to \u003ccode\u003etrue\u003c/code\u003e. To list additional tags, set \u003ccode\u003eExclusiveStartTagKey\u003c/code\u003e to the last key in the response.'\n      description: Represents the input for \u003ccode\u003eListTagsForStream\u003c/code\u003e.\n    MergeShardsInput:\n      type: object\n      required:\n        - StreamName\n        - ShardToMerge\n        - AdjacentShardToMerge\n      title: MergeShardsInput\n      properties:\n        StreamName:\n          allOf:\n            - $ref: '#/components/schemas/StreamName'\n            - description: The name of the stream for the merge.\n        ShardToMerge:\n          allOf:\n            - $ref: '#/components/schemas/ShardId'\n            - description: The shard ID of the shard to combine with the adjacent shard for the merge.\n        AdjacentShardToMerge:\n          allOf:\n            - $ref: '#/components/schemas/ShardId'\n            - description: The shard ID of the adjacent shard for the merge.\n      description: Represents the input for \u003ccode\u003eMergeShards\u003c/code\u003e.\n    PutRecordOutput:\n      type: object\n      required:\n        - ShardId\n        - SequenceNumber\n      properties:\n        ShardId:\n          allOf:\n            - $ref: '#/components/schemas/ShardId'\n            - description: The shard ID of the shard where the data record was placed.\n        SequenceNumber:\n          allOf:\n            - $ref: '#/components/schemas/SequenceNumber'\n            - description: The sequence number identifier that was assigned to the put data record. The sequence number for the record is unique across all records in the stream. A sequence number is the identifier associated with every record put into the stream.\n        EncryptionType:\n          allOf:\n            - $ref: '#/components/schemas/EncryptionType'\n            - description: '\u003cp\u003eThe encryption type to use on the record. This parameter can be one of the following values:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNONE\u003c/code\u003e: Do not encrypt the records in the stream.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKMS\u003c/code\u003e: Use server-side encryption on the records in the stream using a customer-managed AWS KMS key.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: Represents the output for \u003ccode\u003ePutRecord\u003c/code\u003e.\n    PutRecordInput:\n      type: object\n      required:\n        - StreamName\n        - Data\n        - PartitionKey\n      title: PutRecordInput\n      properties:\n        StreamName:\n          allOf:\n            - $ref: '#/components/schemas/StreamName'\n            - description: The name of the stream to put the data record into.\n        Data:\n          allOf:\n            - $ref: '#/components/schemas/Data'\n            - description: 'The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MiB).'\n        PartitionKey:\n          allOf:\n            - $ref: '#/components/schemas/PartitionKey'\n            - description: 'Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis Data Streams uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream.'\n        ExplicitHashKey:\n          allOf:\n            - $ref: '#/components/schemas/HashKey'\n            - description: The hash value used to explicitly determine the shard the data record is assigned to by overriding the partition key hash.\n        SequenceNumberForOrdering:\n          allOf:\n            - $ref: '#/components/schemas/SequenceNumber'\n            - description: 'Guarantees strictly increasing sequence numbers, for puts from the same client and to the same partition key. Usage: set the \u003ccode\u003eSequenceNumberForOrdering\u003c/code\u003e of record \u003ci\u003en\u003c/i\u003e to the sequence number of record \u003ci\u003en-1\u003c/i\u003e (as returned in the result when putting record \u003ci\u003en-1\u003c/i\u003e). If this parameter is not set, records are coarsely ordered based on arrival time.'\n      description: Represents the input for \u003ccode\u003ePutRecord\u003c/code\u003e.\n    PutRecordsOutput:\n      type: object\n      required:\n        - Records\n      properties:\n        FailedRecordCount:\n          allOf:\n            - $ref: '#/components/schemas/PositiveIntegerObject'\n            - description: The number of unsuccessfully processed records in a \u003ccode\u003ePutRecords\u003c/code\u003e request.\n        Records:\n          allOf:\n            - $ref: '#/components/schemas/PutRecordsResultEntryList'\n            - description: 'An array of successfully and unsuccessfully processed record results, correlated with the request by natural ordering. A record that is successfully added to a stream includes \u003ccode\u003eSequenceNumber\u003c/code\u003e and \u003ccode\u003eShardId\u003c/code\u003e in the result. A record that fails to be added to a stream includes \u003ccode\u003eErrorCode\u003c/code\u003e and \u003ccode\u003eErrorMessage\u003c/code\u003e in the result.'\n        EncryptionType:\n          allOf:\n            - $ref: '#/components/schemas/EncryptionType'\n            - description: '\u003cp\u003eThe encryption type used on the records. This parameter can be one of the following values:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNONE\u003c/code\u003e: Do not encrypt the records.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKMS\u003c/code\u003e: Use server-side encryption on the records using a customer-managed AWS KMS key.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: ' \u003ccode\u003ePutRecords\u003c/code\u003e results.'\n    PutRecordsInput:\n      type: object\n      required:\n        - Records\n        - StreamName\n      title: PutRecordsInput\n      properties:\n        Records:\n          allOf:\n            - $ref: '#/components/schemas/PutRecordsRequestEntryList'\n            - description: The records associated with the request.\n        StreamName:\n          allOf:\n            - $ref: '#/components/schemas/StreamName'\n            - description: The stream name associated with the request.\n      description: A \u003ccode\u003ePutRecords\u003c/code\u003e request.\n    RegisterStreamConsumerOutput:\n      type: object\n      required:\n        - Consumer\n      properties:\n        Consumer:\n          allOf:\n            - $ref: '#/components/schemas/Consumer'\n            - description: 'An object that represents the details of the consumer you registered. When you register a consumer, it gets an ARN that is generated by Kinesis Data Streams.'\n    RegisterStreamConsumerInput:\n      type: object\n      required:\n        - StreamARN\n        - ConsumerName\n      title: RegisterStreamConsumerInput\n      properties:\n        StreamARN:\n          allOf:\n            - $ref: '#/components/schemas/StreamARN'\n            - description: 'The ARN of the Kinesis data stream that you want to register the consumer with. For more info, see \u003ca href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kinesis-streams\"\u003eAmazon Resource Names (ARNs) and AWS Service Namespaces\u003c/a\u003e.'\n        ConsumerName:\n          allOf:\n            - $ref: '#/components/schemas/ConsumerName'\n            - description: 'For a given Kinesis data stream, each consumer must have a unique name. However, consumer names don''t have to be unique across data streams.'\n    RemoveTagsFromStreamInput:\n      type: object\n      required:\n        - StreamName\n        - TagKeys\n      title: RemoveTagsFromStreamInput\n      properties:\n        StreamName:\n          allOf:\n            - $ref: '#/components/schemas/StreamName'\n            - description: The name of the stream.\n        TagKeys:\n          allOf:\n            - $ref: '#/components/schemas/TagKeyList'\n            - description: A list of tag keys. Each corresponding tag is removed from the stream.\n      description: Represents the input for \u003ccode\u003eRemoveTagsFromStream\u003c/code\u003e.\n    SplitShardInput:\n      type: object\n      required:\n        - StreamName\n        - ShardToSplit\n        - NewStartingHashKey\n      title: SplitShardInput\n      properties:\n        StreamName:\n          allOf:\n            - $ref: '#/components/schemas/StreamName'\n            - description: The name of the stream for the shard split.\n        ShardToSplit:\n          allOf:\n            - $ref: '#/components/schemas/ShardId'\n            - description: The shard ID of the shard to split.\n        NewStartingHashKey:\n          allOf:\n            - $ref: '#/components/schemas/HashKey'\n            - description: A hash key value for the starting hash key of one of the child shards created by the split. The hash key range for a given shard constitutes a set of ordered contiguous positive integers. The value for \u003ccode\u003eNewStartingHashKey\u003c/code\u003e must be in the range of hash keys being mapped into the shard. The \u003ccode\u003eNewStartingHashKey\u003c/code\u003e hash key value and all higher hash key values in hash key range are distributed to one of the child shards. All the lower hash key values in the range are distributed to the other child shard.\n      description: Represents the input for \u003ccode\u003eSplitShard\u003c/code\u003e.\n    StartStreamEncryptionInput:\n      type: object\n      required:\n        - StreamName\n        - EncryptionType\n        - KeyId\n      title: StartStreamEncryptionInput\n      properties:\n        StreamName:\n          allOf:\n            - $ref: '#/components/schemas/StreamName'\n            - description: The name of the stream for which to start encrypting records.\n        EncryptionType:\n          allOf:\n            - $ref: '#/components/schemas/EncryptionType'\n            - description: The encryption type to use. The only valid value is \u003ccode\u003eKMS\u003c/code\u003e.\n        KeyId:\n          allOf:\n            - $ref: '#/components/schemas/KeyId'\n            - description: '\u003cp\u003eThe GUID for the customer-managed AWS KMS key to use for encryption. This value can be a globally unique identifier, a fully specified Amazon Resource Name (ARN) to either an alias or a key, or an alias name prefixed by \"alias/\".You can also use a master key owned by Kinesis Data Streams by specifying the alias \u003ccode\u003eaws/kinesis\u003c/code\u003e.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eKey ARN example: \u003ccode\u003earn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAlias ARN example: \u003ccode\u003earn:aws:kms:us-east-1:123456789012:alias/MyAliasName\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eGlobally unique key ID example: \u003ccode\u003e12345678-1234-1234-1234-123456789012\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAlias name example: \u003ccode\u003ealias/MyAliasName\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaster key owned by Kinesis Data Streams: \u003ccode\u003ealias/aws/kinesis\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n    StopStreamEncryptionInput:\n      type: object\n      required:\n        - StreamName\n        - EncryptionType\n        - KeyId\n      title: StopStreamEncryptionInput\n      properties:\n        StreamName:\n          allOf:\n            - $ref: '#/components/schemas/StreamName'\n            - description: The name of the stream on which to stop encrypting records.\n        EncryptionType:\n          allOf:\n            - $ref: '#/components/schemas/EncryptionType'\n            - description: The encryption type. The only valid value is \u003ccode\u003eKMS\u003c/code\u003e.\n        KeyId:\n          allOf:\n            - $ref: '#/components/schemas/KeyId'\n            - description: '\u003cp\u003eThe GUID for the customer-managed AWS KMS key to use for encryption. This value can be a globally unique identifier, a fully specified Amazon Resource Name (ARN) to either an alias or a key, or an alias name prefixed by \"alias/\".You can also use a master key owned by Kinesis Data Streams by specifying the alias \u003ccode\u003eaws/kinesis\u003c/code\u003e.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eKey ARN example: \u003ccode\u003earn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAlias ARN example: \u003ccode\u003earn:aws:kms:us-east-1:123456789012:alias/MyAliasName\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eGlobally unique key ID example: \u003ccode\u003e12345678-1234-1234-1234-123456789012\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAlias name example: \u003ccode\u003ealias/MyAliasName\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaster key owned by Kinesis Data Streams: \u003ccode\u003ealias/aws/kinesis\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n    UpdateShardCountOutput:\n      type: object\n      properties:\n        StreamName:\n          allOf:\n            - $ref: '#/components/schemas/StreamName'\n            - description: The name of the stream.\n        CurrentShardCount:\n          allOf:\n            - $ref: '#/components/schemas/PositiveIntegerObject'\n            - description: The current number of shards.\n        TargetShardCount:\n          allOf:\n            - $ref: '#/components/schemas/PositiveIntegerObject'\n            - description: The updated number of shards.\n    UpdateShardCountInput:\n      type: object\n      required:\n        - StreamName\n        - TargetShardCount\n        - ScalingType\n      title: UpdateShardCountInput\n      properties:\n        StreamName:\n          allOf:\n            - $ref: '#/components/schemas/StreamName'\n            - description: The name of the stream.\n        TargetShardCount:\n          allOf:\n            - $ref: '#/components/schemas/PositiveIntegerObject'\n            - description: '\u003cp\u003eThe new number of shards. This value has the following default limits. By default, you cannot do the following: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eSet this value to more than double your current shard count for a stream.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eSet this value below half your current shard count for a stream.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eSet this value to more than 500 shards in a stream (the default limit for shard count per stream is 500 per account per region), unless you request a limit increase.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eScale a stream with more than 500 shards down unless you set this value to less than 500 shards.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        ScalingType:\n          allOf:\n            - $ref: '#/components/schemas/ScalingType'\n            - description: The scaling type. Uniform scaling creates shards of equal size.\n    StreamName:\n      type: string\n      pattern: '[a-zA-Z0-9_.-]+'\n      minLength: 1\n      maxLength: 128\n    TagMap:\n      type: object\n      minProperties: 1\n      maxProperties: 200\n      additionalProperties:\n        $ref: '#/components/schemas/TagValue'\n    BooleanObject:\n      type: boolean\n    ShardId:\n      type: string\n      pattern: '[a-zA-Z0-9_.-]+'\n      minLength: 1\n      maxLength: 128\n    ShardIdList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ShardId'\n    HashKeyRange:\n      type: object\n      required:\n        - StartingHashKey\n        - EndingHashKey\n      properties:\n        StartingHashKey:\n          allOf:\n            - $ref: '#/components/schemas/HashKey'\n            - description: The starting hash key of the hash key range.\n        EndingHashKey:\n          allOf:\n            - $ref: '#/components/schemas/HashKey'\n            - description: The ending hash key of the hash key range.\n      description: 'The range of possible hash key values for the shard, which is a set of ordered contiguous positive integers.'\n    ChildShard:\n      type: object\n      required:\n        - ShardId\n        - ParentShards\n        - HashKeyRange\n      properties:\n        ShardId:\n          $ref: '#/components/schemas/ShardId'\n        ParentShards:\n          $ref: '#/components/schemas/ShardIdList'\n        HashKeyRange:\n          $ref: '#/components/schemas/HashKeyRange'\n    ChildShardList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ChildShard'\n    ConsumerName:\n      type: string\n      pattern: '[a-zA-Z0-9_.-]+'\n      minLength: 1\n      maxLength: 128\n    ConsumerARN:\n      type: string\n      pattern: '^(arn):aws.*:kinesis:.*:\\d{12}:.*stream\\/[a-zA-Z0-9_.-]+\\/consumer\\/[a-zA-Z0-9_.-]+:[0-9]+'\n      minLength: 1\n      maxLength: 2048\n    ConsumerStatus:\n      type: string\n      enum:\n        - CREATING\n        - DELETING\n        - ACTIVE\n    Timestamp:\n      type: string\n      format: date-time\n    Consumer:\n      type: object\n      required:\n        - ConsumerName\n        - ConsumerARN\n        - ConsumerStatus\n        - ConsumerCreationTimestamp\n      properties:\n        ConsumerName:\n          allOf:\n            - $ref: '#/components/schemas/ConsumerName'\n            - description: The name of the consumer is something you choose when you register the consumer.\n        ConsumerARN:\n          allOf:\n            - $ref: '#/components/schemas/ConsumerARN'\n            - description: '\u003cp\u003eWhen you register a consumer, Kinesis Data Streams generates an ARN for it. You need this ARN to be able to call \u003ca\u003eSubscribeToShard\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eIf you delete a consumer and then create a new one with the same name, it won''t have the same ARN. That''s because consumer ARNs contain the creation timestamp. This is important to keep in mind if you have IAM policies that reference consumer ARNs.\u003c/p\u003e'\n        ConsumerStatus:\n          allOf:\n            - $ref: '#/components/schemas/ConsumerStatus'\n            - description: A consumer can't read data while in the \u003ccode\u003eCREATING\u003c/code\u003e or \u003ccode\u003eDELETING\u003c/code\u003e states.\n        ConsumerCreationTimestamp:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: \u003cp/\u003e\n      description: An object that represents the details of the consumer you registered. This type of object is returned by \u003ca\u003eRegisterStreamConsumer\u003c/a\u003e.\n    ConsumerCountObject:\n      type: integer\n      minimum: 0\n      maximum: 1000000\n    StreamARN:\n      type: string\n      pattern: 'arn:aws.*:kinesis:.*:\\d{12}:stream/.+'\n      minLength: 1\n      maxLength: 2048\n    ConsumerDescription:\n      type: object\n      required:\n        - ConsumerName\n        - ConsumerARN\n        - ConsumerStatus\n        - ConsumerCreationTimestamp\n        - StreamARN\n      properties:\n        ConsumerName:\n          allOf:\n            - $ref: '#/components/schemas/ConsumerName'\n            - description: The name of the consumer is something you choose when you register the consumer.\n        ConsumerARN:\n          allOf:\n            - $ref: '#/components/schemas/ConsumerARN'\n            - description: '\u003cp\u003eWhen you register a consumer, Kinesis Data Streams generates an ARN for it. You need this ARN to be able to call \u003ca\u003eSubscribeToShard\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eIf you delete a consumer and then create a new one with the same name, it won''t have the same ARN. That''s because consumer ARNs contain the creation timestamp. This is important to keep in mind if you have IAM policies that reference consumer ARNs.\u003c/p\u003e'\n        ConsumerStatus:\n          allOf:\n            - $ref: '#/components/schemas/ConsumerStatus'\n            - description: A consumer can't read data while in the \u003ccode\u003eCREATING\u003c/code\u003e or \u003ccode\u003eDELETING\u003c/code\u003e states.\n        ConsumerCreationTimestamp:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: \u003cp/\u003e\n        StreamARN:\n          allOf:\n            - $ref: '#/components/schemas/StreamARN'\n            - description: The ARN of the stream with which you registered the consumer.\n      description: An object that represents the details of a registered consumer. This type of object is returned by \u003ca\u003eDescribeStreamConsumer\u003c/a\u003e.\n    ConsumerList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Consumer'\n    PositiveIntegerObject:\n      type: integer\n      minimum: 1\n    Data:\n      type: string\n      minLength: 0\n      maxLength: 1048576\n    RetentionPeriodHours:\n      type: integer\n    ShardCountObject:\n      type: integer\n      minimum: 0\n      maximum: 1000000\n    DescribeStreamInputLimit:\n      type: integer\n      minimum: 1\n      maximum: 10000\n    StreamDescription:\n      type: object\n      required:\n        - StreamName\n        - StreamARN\n        - StreamStatus\n        - Shards\n        - HasMoreShards\n        - RetentionPeriodHours\n        - StreamCreationTimestamp\n        - EnhancedMonitoring\n      properties:\n        StreamName:\n          allOf:\n            - $ref: '#/components/schemas/StreamName'\n            - description: The name of the stream being described.\n        StreamARN:\n          allOf:\n            - $ref: '#/components/schemas/StreamARN'\n            - description: The Amazon Resource Name (ARN) for the stream being described.\n        StreamStatus:\n          allOf:\n            - $ref: '#/components/schemas/StreamStatus'\n            - description: '\u003cp\u003eThe current status of the stream being described. The stream status is one of the following states:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCREATING\u003c/code\u003e - The stream is being created. Kinesis Data Streams immediately returns and sets \u003ccode\u003eStreamStatus\u003c/code\u003e to \u003ccode\u003eCREATING\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDELETING\u003c/code\u003e - The stream is being deleted. The specified stream is in the \u003ccode\u003eDELETING\u003c/code\u003e state until Kinesis Data Streams completes the deletion.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eACTIVE\u003c/code\u003e - The stream exists and is ready for read and write operations or deletion. You should perform read and write operations only on an \u003ccode\u003eACTIVE\u003c/code\u003e stream.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUPDATING\u003c/code\u003e - Shards in the stream are being merged or split. Read and write operations continue to work while the stream is in the \u003ccode\u003eUPDATING\u003c/code\u003e state.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        Shards:\n          allOf:\n            - $ref: '#/components/schemas/ShardList'\n            - description: The shards that comprise the stream.\n        HasMoreShards:\n          allOf:\n            - $ref: '#/components/schemas/BooleanObject'\n            - description: 'If set to \u003ccode\u003etrue\u003c/code\u003e, more shards in the stream are available to describe.'\n        RetentionPeriodHours:\n          allOf:\n            - $ref: '#/components/schemas/RetentionPeriodHours'\n            - description: 'The current retention period, in hours. Minimum value of 24. Maximum value of 168.'\n        StreamCreationTimestamp:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The approximate time that the stream was created.\n        EnhancedMonitoring:\n          allOf:\n            - $ref: '#/components/schemas/EnhancedMonitoringList'\n            - description: Represents the current enhanced monitoring settings of the stream.\n        EncryptionType:\n          allOf:\n            - $ref: '#/components/schemas/EncryptionType'\n            - description: '\u003cp\u003eThe server-side encryption type used on the stream. This parameter can be one of the following values:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNONE\u003c/code\u003e: Do not encrypt the records in the stream.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKMS\u003c/code\u003e: Use server-side encryption on the records in the stream using a customer-managed AWS KMS key.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        KeyId:\n          allOf:\n            - $ref: '#/components/schemas/KeyId'\n            - description: '\u003cp\u003eThe GUID for the customer-managed AWS KMS key to use for encryption. This value can be a globally unique identifier, a fully specified ARN to either an alias or a key, or an alias name prefixed by \"alias/\".You can also use a master key owned by Kinesis Data Streams by specifying the alias \u003ccode\u003eaws/kinesis\u003c/code\u003e.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eKey ARN example: \u003ccode\u003earn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAlias ARN example: \u003ccode\u003earn:aws:kms:us-east-1:123456789012:alias/MyAliasName\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eGlobally unique key ID example: \u003ccode\u003e12345678-1234-1234-1234-123456789012\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAlias name example: \u003ccode\u003ealias/MyAliasName\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaster key owned by Kinesis Data Streams: \u003ccode\u003ealias/aws/kinesis\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: Represents the output for \u003ca\u003eDescribeStream\u003c/a\u003e.\n    StreamDescriptionSummary:\n      type: object\n      required:\n        - StreamName\n        - StreamARN\n        - StreamStatus\n        - RetentionPeriodHours\n        - StreamCreationTimestamp\n        - EnhancedMonitoring\n        - OpenShardCount\n      properties:\n        StreamName:\n          allOf:\n            - $ref: '#/components/schemas/StreamName'\n            - description: The name of the stream being described.\n        StreamARN:\n          allOf:\n            - $ref: '#/components/schemas/StreamARN'\n            - description: The Amazon Resource Name (ARN) for the stream being described.\n        StreamStatus:\n          allOf:\n            - $ref: '#/components/schemas/StreamStatus'\n            - description: '\u003cp\u003eThe current status of the stream being described. The stream status is one of the following states:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCREATING\u003c/code\u003e - The stream is being created. Kinesis Data Streams immediately returns and sets \u003ccode\u003eStreamStatus\u003c/code\u003e to \u003ccode\u003eCREATING\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDELETING\u003c/code\u003e - The stream is being deleted. The specified stream is in the \u003ccode\u003eDELETING\u003c/code\u003e state until Kinesis Data Streams completes the deletion.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eACTIVE\u003c/code\u003e - The stream exists and is ready for read and write operations or deletion. You should perform read and write operations only on an \u003ccode\u003eACTIVE\u003c/code\u003e stream.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUPDATING\u003c/code\u003e - Shards in the stream are being merged or split. Read and write operations continue to work while the stream is in the \u003ccode\u003eUPDATING\u003c/code\u003e state.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        RetentionPeriodHours:\n          allOf:\n            - $ref: '#/components/schemas/RetentionPeriodHours'\n            - description: 'The current retention period, in hours.'\n        StreamCreationTimestamp:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The approximate time that the stream was created.\n        EnhancedMonitoring:\n          allOf:\n            - $ref: '#/components/schemas/EnhancedMonitoringList'\n            - description: Represents the current enhanced monitoring settings of the stream.\n        EncryptionType:\n          allOf:\n            - $ref: '#/components/schemas/EncryptionType'\n            - description: '\u003cp\u003eThe encryption type used. This value is one of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKMS\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNONE\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        KeyId:\n          allOf:\n            - $ref: '#/components/schemas/KeyId'\n            - description: '\u003cp\u003eThe GUID for the customer-managed AWS KMS key to use for encryption. This value can be a globally unique identifier, a fully specified ARN to either an alias or a key, or an alias name prefixed by \"alias/\".You can also use a master key owned by Kinesis Data Streams by specifying the alias \u003ccode\u003eaws/kinesis\u003c/code\u003e.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eKey ARN example: \u003ccode\u003earn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAlias ARN example: \u003ccode\u003e arn:aws:kms:us-east-1:123456789012:alias/MyAliasName\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eGlobally unique key ID example: \u003ccode\u003e12345678-1234-1234-1234-123456789012\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAlias name example: \u003ccode\u003ealias/MyAliasName\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaster key owned by Kinesis Data Streams: \u003ccode\u003ealias/aws/kinesis\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        OpenShardCount:\n          allOf:\n            - $ref: '#/components/schemas/ShardCountObject'\n            - description: The number of open shards in the stream.\n        ConsumerCount:\n          allOf:\n            - $ref: '#/components/schemas/ConsumerCountObject'\n            - description: The number of enhanced fan-out consumers registered with the stream.\n      description: 'Represents the output for \u003ca\u003eDescribeStreamSummary\u003c/a\u003e '\n    MetricsNameList:\n      type: array\n      items:\n        $ref: '#/components/schemas/MetricsName'\n      minItems: 1\n      maxItems: 7\n    EncryptionType:\n      type: string\n      enum:\n        - NONE\n        - KMS\n    EnhancedMetrics:\n      type: object\n      properties:\n        ShardLevelMetrics:\n          allOf:\n            - $ref: '#/components/schemas/MetricsNameList'\n            - description: '\u003cp\u003eList of shard-level metrics.\u003c/p\u003e \u003cp\u003eThe following are the valid shard-level metrics. The value \"\u003ccode\u003eALL\u003c/code\u003e\" enhances every metric.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIncomingBytes\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIncomingRecords\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eOutgoingBytes\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eOutgoingRecords\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eWriteProvisionedThroughputExceeded\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eReadProvisionedThroughputExceeded\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIteratorAgeMilliseconds\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eALL\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/kinesis/latest/dev/monitoring-with-cloudwatch.html\"\u003eMonitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n      description: Represents enhanced metrics types.\n    EnhancedMonitoringList:\n      type: array\n      items:\n        $ref: '#/components/schemas/EnhancedMetrics'\n    ErrorCode:\n      type: string\n    ErrorMessage:\n      type: string\n    ShardIterator:\n      type: string\n      minLength: 1\n      maxLength: 512\n    GetRecordsInputLimit:\n      type: integer\n      minimum: 1\n      maximum: 10000\n    RecordList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Record'\n    MillisBehindLatest:\n      type: integer\n      minimum: 0\n    ShardIteratorType:\n      type: string\n      enum:\n        - AT_SEQUENCE_NUMBER\n        - AFTER_SEQUENCE_NUMBER\n        - TRIM_HORIZON\n        - LATEST\n        - AT_TIMESTAMP\n    SequenceNumber:\n      type: string\n      pattern: '0|([1-9]\\d{0,128})'\n    HashKey:\n      type: string\n      pattern: '0|([1-9]\\d{0,38})'\n    KeyId:\n      type: string\n      minLength: 1\n      maxLength: 2048\n    NextToken:\n      type: string\n      minLength: 1\n      maxLength: 1048576\n    ListShardsInputLimit:\n      type: integer\n      minimum: 1\n      maximum: 10000\n    ShardFilter:\n      type: object\n      required:\n        - Type\n      properties:\n        Type:\n          $ref: '#/components/schemas/ShardFilterType'\n        ShardId:\n          $ref: '#/components/schemas/ShardId'\n        Timestamp:\n          $ref: '#/components/schemas/Timestamp'\n    ShardList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Shard'\n    ListStreamConsumersInputLimit:\n      type: integer\n      minimum: 1\n      maximum: 10000\n    ListStreamsInputLimit:\n      type: integer\n      minimum: 1\n      maximum: 10000\n    StreamNameList:\n      type: array\n      items:\n        $ref: '#/components/schemas/StreamName'\n    TagKey:\n      type: string\n      minLength: 1\n      maxLength: 128\n    ListTagsForStreamInputLimit:\n      type: integer\n      minimum: 1\n      maximum: 50\n    TagList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Tag'\n      minItems: 0\n      maxItems: 200\n    MetricsName:\n      type: string\n      enum:\n        - IncomingBytes\n        - IncomingRecords\n        - OutgoingBytes\n        - OutgoingRecords\n        - WriteProvisionedThroughputExceeded\n        - ReadProvisionedThroughputExceeded\n        - IteratorAgeMilliseconds\n        - ALL\n    PartitionKey:\n      type: string\n      minLength: 1\n      maxLength: 256\n    PutRecordsRequestEntryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/PutRecordsRequestEntry'\n      minItems: 1\n      maxItems: 500\n    PutRecordsResultEntryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/PutRecordsResultEntry'\n      minItems: 1\n      maxItems: 500\n    PutRecordsRequestEntry:\n      type: object\n      required:\n        - Data\n        - PartitionKey\n      properties:\n        Data:\n          allOf:\n            - $ref: '#/components/schemas/Data'\n            - description: 'The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MiB).'\n        ExplicitHashKey:\n          allOf:\n            - $ref: '#/components/schemas/HashKey'\n            - description: The hash value used to determine explicitly the shard that the data record is assigned to by overriding the partition key hash.\n        PartitionKey:\n          allOf:\n            - $ref: '#/components/schemas/PartitionKey'\n            - description: 'Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis Data Streams uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream.'\n      description: Represents the output for \u003ccode\u003ePutRecords\u003c/code\u003e.\n    PutRecordsResultEntry:\n      type: object\n      properties:\n        SequenceNumber:\n          allOf:\n            - $ref: '#/components/schemas/SequenceNumber'\n            - description: The sequence number for an individual record result.\n        ShardId:\n          allOf:\n            - $ref: '#/components/schemas/ShardId'\n            - description: The shard ID for an individual record result.\n        ErrorCode:\n          allOf:\n            - $ref: '#/components/schemas/ErrorCode'\n            - description: The error code for an individual record result. \u003ccode\u003eErrorCodes\u003c/code\u003e can be either \u003ccode\u003eProvisionedThroughputExceededException\u003c/code\u003e or \u003ccode\u003eInternalFailure\u003c/code\u003e.\n        ErrorMessage:\n          allOf:\n            - $ref: '#/components/schemas/ErrorMessage'\n            - description: 'The error message for an individual record result. An \u003ccode\u003eErrorCode\u003c/code\u003e value of \u003ccode\u003eProvisionedThroughputExceededException\u003c/code\u003e has an error message that includes the account ID, stream name, and shard ID. An \u003ccode\u003eErrorCode\u003c/code\u003e value of \u003ccode\u003eInternalFailure\u003c/code\u003e has the error message \u003ccode\u003e\"Internal Service Failure\"\u003c/code\u003e.'\n      description: Represents the result of an individual record from a \u003ccode\u003ePutRecords\u003c/code\u003e request. A record that is successfully added to a stream includes \u003ccode\u003eSequenceNumber\u003c/code\u003e and \u003ccode\u003eShardId\u003c/code\u003e in the result. A record that fails to be added to the stream includes \u003ccode\u003eErrorCode\u003c/code\u003e and \u003ccode\u003eErrorMessage\u003c/code\u003e in the result.\n    Record:\n      type: object\n      required:\n        - SequenceNumber\n        - Data\n        - PartitionKey\n      properties:\n        SequenceNumber:\n          allOf:\n            - $ref: '#/components/schemas/SequenceNumber'\n            - description: The unique identifier of the record within its shard.\n        ApproximateArrivalTimestamp:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The approximate time that the record was inserted into the stream.\n        Data:\n          allOf:\n            - $ref: '#/components/schemas/Data'\n            - description: 'The data blob. The data in the blob is both opaque and immutable to Kinesis Data Streams, which does not inspect, interpret, or change the data in the blob in any way. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MiB).'\n        PartitionKey:\n          allOf:\n            - $ref: '#/components/schemas/PartitionKey'\n            - description: Identifies which shard in the stream the data record is assigned to.\n        EncryptionType:\n          allOf:\n            - $ref: '#/components/schemas/EncryptionType'\n            - description: '\u003cp\u003eThe encryption type used on the record. This parameter can be one of the following values:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNONE\u003c/code\u003e: Do not encrypt the records in the stream.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKMS\u003c/code\u003e: Use server-side encryption on the records in the stream using a customer-managed AWS KMS key.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: 'The unit of data of the Kinesis data stream, which is composed of a sequence number, a partition key, and a data blob.'\n    TagKeyList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TagKey'\n      minItems: 1\n      maxItems: 50\n    ScalingType:\n      type: string\n      enum:\n        - UNIFORM_SCALING\n    SequenceNumberRange:\n      type: object\n      required:\n        - StartingSequenceNumber\n      properties:\n        StartingSequenceNumber:\n          allOf:\n            - $ref: '#/components/schemas/SequenceNumber'\n            - description: The starting sequence number for the range.\n        EndingSequenceNumber:\n          allOf:\n            - $ref: '#/components/schemas/SequenceNumber'\n            - description: The ending sequence number for the range. Shards that are in the OPEN state have an ending sequence number of \u003ccode\u003enull\u003c/code\u003e.\n      description: The range of possible sequence numbers for the shard.\n    Shard:\n      type: object\n      required:\n        - ShardId\n        - HashKeyRange\n        - SequenceNumberRange\n      properties:\n        ShardId:\n          allOf:\n            - $ref: '#/components/schemas/ShardId'\n            - description: The unique identifier of the shard within the stream.\n        ParentShardId:\n          allOf:\n            - $ref: '#/components/schemas/ShardId'\n            - description: The shard ID of the shard's parent.\n        AdjacentParentShardId:\n          allOf:\n            - $ref: '#/components/schemas/ShardId'\n            - description: The shard ID of the shard adjacent to the shard's parent.\n        HashKeyRange:\n          allOf:\n            - $ref: '#/components/schemas/HashKeyRange'\n            - description: 'The range of possible hash key values for the shard, which is a set of ordered contiguous positive integers.'\n        SequenceNumberRange:\n          allOf:\n            - $ref: '#/components/schemas/SequenceNumberRange'\n            - description: The range of possible sequence numbers for the shard.\n      description: A uniquely identified group of data records in a Kinesis data stream.\n    ShardFilterType:\n      type: string\n      enum:\n        - AFTER_SHARD_ID\n        - AT_TRIM_HORIZON\n        - FROM_TRIM_HORIZON\n        - AT_LATEST\n        - AT_TIMESTAMP\n        - FROM_TIMESTAMP\n    StreamStatus:\n      type: string\n      enum:\n        - CREATING\n        - DELETING\n        - ACTIVE\n        - UPDATING\n    TagValue:\n      type: string\n      minLength: 0\n      maxLength: 256\n    Tag:\n      type: object\n      required:\n        - Key\n      properties:\n        Key:\n          allOf:\n            - $ref: '#/components/schemas/TagKey'\n            - description: 'A unique identifier for the tag. Maximum length: 128 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @'\n        Value:\n          allOf:\n            - $ref: '#/components/schemas/TagValue'\n            - description: 'An optional string, typically used to describe or define the tag. Maximum length: 256 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @'\n      description: 'Metadata assigned to the stream, consisting of a key-value pair.'\nsecurity:\n  - hmac: []\n"
		}
	},
	"Error": "parse: paths: /#X-Amz-Target=Kinesis_20131202.CreateStream: post: CreateStream: responses: 480: unknown status code: 480"
}