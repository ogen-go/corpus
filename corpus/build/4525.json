{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "APIs/amazonaws.com/ecs/2014-11-13/openapi.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  version: '2014-11-13'\n  x-release: v4\n  title: Amazon EC2 Container Service\n  description: '\u003cfullname\u003eAmazon Elastic Container Service\u003c/fullname\u003e \u003cp\u003eAmazon Elastic Container Service (Amazon ECS) is a highly scalable, fast, container management service that makes it easy to run, stop, and manage Docker containers on a cluster. You can host your cluster on a serverless infrastructure that is managed by Amazon ECS by launching your services or tasks on Fargate. For more control, you can host your tasks on a cluster of Amazon Elastic Compute Cloud (Amazon EC2) instances that you manage.\u003c/p\u003e \u003cp\u003eAmazon ECS makes it easy to launch and stop container-based applications with simple API calls, allows you to get the state of your cluster from a centralized service, and gives you access to many familiar Amazon EC2 features.\u003c/p\u003e \u003cp\u003eYou can use Amazon ECS to schedule the placement of containers across your cluster based on your resource needs, isolation policies, and availability requirements. Amazon ECS eliminates the need for you to operate your own cluster management and configuration management systems or worry about scaling your management infrastructure.\u003c/p\u003e'\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: ecs\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ecs-2014-11-13.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/ecs/'\nservers:\n  - url: 'http://ecs.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Amazon ECS multi-region endpoint\n  - url: 'https://ecs.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Amazon ECS multi-region endpoint\n  - url: 'http://ecs.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon ECS endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://ecs.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon ECS endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.CreateCapacityProvider:\n    post:\n      operationId: CreateCapacityProvider\n      description: \u003cp\u003eCreates a new capacity provider. Capacity providers are associated with an Amazon ECS cluster and are used in capacity provider strategies to facilitate cluster auto scaling.\u003c/p\u003e \u003cp\u003eOnly capacity providers using an Auto Scaling group can be created. Amazon ECS tasks on Fargate use the \u003ccode\u003eFARGATE\u003c/code\u003e and \u003ccode\u003eFARGATE_SPOT\u003c/code\u003e capacity providers which are already created and available to all accounts in Regions supported by Fargate.\u003c/p\u003e\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateCapacityProviderResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '484':\n          description: UpdateInProgressException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateInProgressException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateCapacityProviderRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.CreateCapacityProvider\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.CreateCluster:\n    post:\n      operationId: CreateCluster\n      description: '\u003cp\u003eCreates a new Amazon ECS cluster. By default, your account receives a \u003ccode\u003edefault\u003c/code\u003e cluster when you launch your first container instance. However, you can create your own cluster with a unique name with the \u003ccode\u003eCreateCluster\u003c/code\u003e action.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eWhen you call the \u003ca\u003eCreateCluster\u003c/a\u003e API operation, Amazon ECS attempts to create the Amazon ECS service-linked role for your account so that required resources in other Amazon Web Services services can be managed on your behalf. However, if the IAM user that makes the call does not have permissions to create the service-linked role, it is not created. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using-service-linked-roles.html\"\u003eUsing Service-Linked Roles for Amazon ECS\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003c/note\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateClusterResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateClusterRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.CreateCluster\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.CreateService:\n    post:\n      operationId: CreateService\n      description: '\u003cp\u003eRuns and maintains a desired number of tasks from a specified task definition. If the number of tasks running in a service drops below the \u003ccode\u003edesiredCount\u003c/code\u003e, Amazon ECS runs another copy of the task in the specified cluster. To update an existing service, see the UpdateService action.\u003c/p\u003e \u003cp\u003eIn addition to maintaining the desired count of tasks in your service, you can optionally run your service behind one or more load balancers. The load balancers distribute traffic across the tasks that are associated with the service. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-load-balancing.html\"\u003eService Load Balancing\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eTasks for services that \u003ci\u003edo not\u003c/i\u003e use a load balancer are considered healthy if they''re in the \u003ccode\u003eRUNNING\u003c/code\u003e state. Tasks for services that \u003ci\u003edo\u003c/i\u003e use a load balancer are considered healthy if they''re in the \u003ccode\u003eRUNNING\u003c/code\u003e state and the container instance that they''re hosted on is reported as healthy by the load balancer.\u003c/p\u003e \u003cp\u003eThere are two service scheduler strategies available:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eREPLICA\u003c/code\u003e - The replica scheduling strategy places and maintains the desired number of tasks across your cluster. By default, the service scheduler spreads tasks across Availability Zones. You can use task placement strategies and constraints to customize task placement decisions. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html\"\u003eService Scheduler Concepts\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDAEMON\u003c/code\u003e - The daemon scheduling strategy deploys exactly one task on each active container instance that meets all of the task placement constraints that you specify in your cluster. The service scheduler also evaluates the task placement constraints for running tasks and will stop tasks that do not meet the placement constraints. When using this strategy, you don''t need to specify a desired number of tasks, a task placement strategy, or use Service Auto Scaling policies. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html\"\u003eService Scheduler Concepts\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eYou can optionally specify a deployment configuration for your service. The deployment is triggered by changing properties, such as the task definition or the desired count of a service, with an \u003ca\u003eUpdateService\u003c/a\u003e operation. The default value for a replica service for \u003ccode\u003eminimumHealthyPercent\u003c/code\u003e is 100%. The default value for a daemon service for \u003ccode\u003eminimumHealthyPercent\u003c/code\u003e is 0%.\u003c/p\u003e \u003cp\u003eIf a service is using the \u003ccode\u003eECS\u003c/code\u003e deployment controller, the minimum healthy percent represents a lower limit on the number of tasks in a service that must remain in the \u003ccode\u003eRUNNING\u003c/code\u003e state during a deployment, as a percentage of the desired number of tasks (rounded up to the nearest integer), and while any container instances are in the \u003ccode\u003eDRAINING\u003c/code\u003e state if the service contains tasks using the EC2 launch type. This parameter enables you to deploy without using additional cluster capacity. For example, if your service has a desired number of four tasks and a minimum healthy percent of 50%, the scheduler might stop two existing tasks to free up cluster capacity before starting two new tasks. Tasks for services that \u003ci\u003edo not\u003c/i\u003e use a load balancer are considered healthy if they''re in the \u003ccode\u003eRUNNING\u003c/code\u003e state. Tasks for services that \u003ci\u003edo\u003c/i\u003e use a load balancer are considered healthy if they''re in the \u003ccode\u003eRUNNING\u003c/code\u003e state and they''re reported as healthy by the load balancer. The default value for minimum healthy percent is 100%.\u003c/p\u003e \u003cp\u003eIf a service is using the \u003ccode\u003eECS\u003c/code\u003e deployment controller, the \u003cb\u003emaximum percent\u003c/b\u003e parameter represents an upper limit on the number of tasks in a service that are allowed in the \u003ccode\u003eRUNNING\u003c/code\u003e or \u003ccode\u003ePENDING\u003c/code\u003e state during a deployment, as a percentage of the desired number of tasks (rounded down to the nearest integer), and while any container instances are in the \u003ccode\u003eDRAINING\u003c/code\u003e state if the service contains tasks using the EC2 launch type. This parameter enables you to define the deployment batch size. For example, if your service has a desired number of four tasks and a maximum percent value of 200%, the scheduler may start four new tasks before stopping the four older tasks (provided that the cluster resources required to do this are available). The default value for maximum percent is 200%.\u003c/p\u003e \u003cp\u003eIf a service is using either the \u003ccode\u003eCODE_DEPLOY\u003c/code\u003e or \u003ccode\u003eEXTERNAL\u003c/code\u003e deployment controller types and tasks that use the EC2 launch type, the \u003cb\u003eminimum healthy percent\u003c/b\u003e and \u003cb\u003emaximum percent\u003c/b\u003e values are used only to define the lower and upper limit on the number of the tasks in the service that remain in the \u003ccode\u003eRUNNING\u003c/code\u003e state while the container instances are in the \u003ccode\u003eDRAINING\u003c/code\u003e state. If the tasks in the service use the Fargate launch type, the minimum healthy percent and maximum percent values aren''t used, although they''re currently visible when describing your service.\u003c/p\u003e \u003cp\u003eWhen creating a service that uses the \u003ccode\u003eEXTERNAL\u003c/code\u003e deployment controller, you can specify only parameters that aren''t controlled at the task set level. The only required parameter is the service name. You control your services using the \u003ca\u003eCreateTaskSet\u003c/a\u003e operation. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html\"\u003eAmazon ECS Deployment Types\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eWhen the service scheduler launches new tasks, it determines task placement in your cluster using the following logic:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eDetermine which of the container instances in your cluster can support your service''s task definition (for example, they have the required CPU, memory, ports, and container instance attributes).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eBy default, the service scheduler attempts to balance tasks across Availability Zones in this manner (although you can choose a different placement strategy) with the \u003ccode\u003eplacementStrategy\u003c/code\u003e parameter):\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eSort the valid container instances, giving priority to instances that have the fewest number of running tasks for this service in their respective Availability Zone. For example, if zone A has one running service task and zones B and C each have zero, valid container instances in either zone B or C are considered optimal for placement.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003ePlace the new service task on a valid container instance in an optimal Availability Zone (based on the previous steps), favoring container instances with the fewest number of running tasks for this service.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003c/ul\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateServiceResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n        '484':\n          description: UnsupportedFeatureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedFeatureException'\n        '485':\n          description: PlatformUnknownException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlatformUnknownException'\n        '486':\n          description: PlatformTaskDefinitionIncompatibilityException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlatformTaskDefinitionIncompatibilityException'\n        '487':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateServiceRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.CreateService\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.CreateTaskSet:\n    post:\n      operationId: CreateTaskSet\n      description: 'Create a task set in the specified cluster and service. This is used when a service uses the \u003ccode\u003eEXTERNAL\u003c/code\u003e deployment controller type. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html\"\u003eAmazon ECS Deployment Types\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateTaskSetResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n        '484':\n          description: UnsupportedFeatureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedFeatureException'\n        '485':\n          description: PlatformUnknownException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlatformUnknownException'\n        '486':\n          description: PlatformTaskDefinitionIncompatibilityException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlatformTaskDefinitionIncompatibilityException'\n        '487':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '488':\n          description: ServiceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceNotFoundException'\n        '489':\n          description: ServiceNotActiveException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceNotActiveException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateTaskSetRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.CreateTaskSet\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.DeleteAccountSetting:\n    post:\n      operationId: DeleteAccountSetting\n      description: 'Disables an account setting for a specified IAM user, IAM role, or the root user for an account.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteAccountSettingResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteAccountSettingRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.DeleteAccountSetting\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.DeleteAttributes:\n    post:\n      operationId: DeleteAttributes\n      description: Deletes one or more custom attributes from an Amazon ECS resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteAttributesResponse'\n        '480':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n        '481':\n          description: TargetNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TargetNotFoundException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteAttributesRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.DeleteAttributes\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.DeleteCapacityProvider:\n    post:\n      operationId: DeleteCapacityProvider\n      description: '\u003cp\u003eDeletes the specified capacity provider.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThe \u003ccode\u003eFARGATE\u003c/code\u003e and \u003ccode\u003eFARGATE_SPOT\u003c/code\u003e capacity providers are reserved and cannot be deleted. You can disassociate them from a cluster using either the \u003ca\u003ePutClusterCapacityProviders\u003c/a\u003e API or by deleting the cluster.\u003c/p\u003e \u003c/note\u003e \u003cp\u003ePrior to a capacity provider being deleted, the capacity provider must be removed from the capacity provider strategy from all services. The \u003ca\u003eUpdateService\u003c/a\u003e API can be used to remove a capacity provider from a service''s capacity provider strategy. When updating a service, the \u003ccode\u003eforceNewDeployment\u003c/code\u003e option can be used to ensure that any tasks using the Amazon EC2 instance capacity provided by the capacity provider are transitioned to use the capacity from the remaining capacity providers. Only capacity providers that are not associated with a cluster can be deleted. To remove a capacity provider from a cluster, you can either use \u003ca\u003ePutClusterCapacityProviders\u003c/a\u003e or delete the cluster.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteCapacityProviderResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteCapacityProviderRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.DeleteCapacityProvider\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.DeleteCluster:\n    post:\n      operationId: DeleteCluster\n      description: '\u003cp\u003eDeletes the specified cluster. The cluster will transition to the \u003ccode\u003eINACTIVE\u003c/code\u003e state. Clusters with an \u003ccode\u003eINACTIVE\u003c/code\u003e status may remain discoverable in your account for a period of time. However, this behavior is subject to change in the future, so you should not rely on \u003ccode\u003eINACTIVE\u003c/code\u003e clusters persisting.\u003c/p\u003e \u003cp\u003eYou must deregister all container instances from this cluster before you may delete it. You can list the container instances in a cluster with \u003ca\u003eListContainerInstances\u003c/a\u003e and deregister them with \u003ca\u003eDeregisterContainerInstance\u003c/a\u003e.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteClusterResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n        '484':\n          description: ClusterContainsContainerInstancesException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterContainsContainerInstancesException'\n        '485':\n          description: ClusterContainsServicesException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterContainsServicesException'\n        '486':\n          description: ClusterContainsTasksException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterContainsTasksException'\n        '487':\n          description: UpdateInProgressException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateInProgressException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteClusterRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.DeleteCluster\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.DeleteService:\n    post:\n      operationId: DeleteService\n      description: '\u003cp\u003eDeletes a specified service within a cluster. You can delete a service if you have no running tasks in it and the desired task count is zero. If the service is actively maintaining tasks, you cannot delete it, and you must update the service to a desired task count of zero. For more information, see \u003ca\u003eUpdateService\u003c/a\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eWhen you delete a service, if there are still running tasks that require cleanup, the service status moves from \u003ccode\u003eACTIVE\u003c/code\u003e to \u003ccode\u003eDRAINING\u003c/code\u003e, and the service is no longer visible in the console or in the \u003ca\u003eListServices\u003c/a\u003e API operation. After all tasks have transitioned to either \u003ccode\u003eSTOPPING\u003c/code\u003e or \u003ccode\u003eSTOPPED\u003c/code\u003e status, the service status moves from \u003ccode\u003eDRAINING\u003c/code\u003e to \u003ccode\u003eINACTIVE\u003c/code\u003e. Services in the \u003ccode\u003eDRAINING\u003c/code\u003e or \u003ccode\u003eINACTIVE\u003c/code\u003e status can still be viewed with the \u003ca\u003eDescribeServices\u003c/a\u003e API operation. However, in the future, \u003ccode\u003eINACTIVE\u003c/code\u003e services may be cleaned up and purged from Amazon ECS record keeping, and \u003ca\u003eDescribeServices\u003c/a\u003e calls on those services return a \u003ccode\u003eServiceNotFoundException\u003c/code\u003e error.\u003c/p\u003e \u003c/note\u003e \u003cimportant\u003e \u003cp\u003eIf you attempt to create a new service with the same name as an existing service in either \u003ccode\u003eACTIVE\u003c/code\u003e or \u003ccode\u003eDRAINING\u003c/code\u003e status, you receive an error.\u003c/p\u003e \u003c/important\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteServiceResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n        '484':\n          description: ServiceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteServiceRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.DeleteService\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.DeleteTaskSet:\n    post:\n      operationId: DeleteTaskSet\n      description: 'Deletes a specified task set within a service. This is used when a service uses the \u003ccode\u003eEXTERNAL\u003c/code\u003e deployment controller type. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html\"\u003eAmazon ECS Deployment Types\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteTaskSetResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n        '484':\n          description: UnsupportedFeatureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedFeatureException'\n        '485':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '486':\n          description: ServiceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceNotFoundException'\n        '487':\n          description: ServiceNotActiveException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceNotActiveException'\n        '488':\n          description: TaskSetNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskSetNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteTaskSetRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.DeleteTaskSet\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.DeregisterContainerInstance:\n    post:\n      operationId: DeregisterContainerInstance\n      description: '\u003cp\u003eDeregisters an Amazon ECS container instance from the specified cluster. This instance is no longer available to run tasks.\u003c/p\u003e \u003cp\u003eIf you intend to use the container instance for some other purpose after deregistration, you should stop all of the tasks running on the container instance before deregistration. That prevents any orphaned tasks from consuming resources.\u003c/p\u003e \u003cp\u003eDeregistering a container instance removes the instance from a cluster, but it does not terminate the EC2 instance. If you are finished using the instance, be sure to terminate it in the Amazon EC2 console to stop billing.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eIf you terminate a running container instance, Amazon ECS automatically deregisters the instance from your cluster (stopped container instances or instances with disconnected agents are not automatically deregistered when terminated).\u003c/p\u003e \u003c/note\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeregisterContainerInstanceResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeregisterContainerInstanceRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.DeregisterContainerInstance\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.DeregisterTaskDefinition:\n    post:\n      operationId: DeregisterTaskDefinition\n      description: '\u003cp\u003eDeregisters the specified task definition by family and revision. Upon deregistration, the task definition is marked as \u003ccode\u003eINACTIVE\u003c/code\u003e. Existing tasks and services that reference an \u003ccode\u003eINACTIVE\u003c/code\u003e task definition continue to run without disruption. Existing services that reference an \u003ccode\u003eINACTIVE\u003c/code\u003e task definition can still scale up or down by modifying the service''s desired count.\u003c/p\u003e \u003cp\u003eYou cannot use an \u003ccode\u003eINACTIVE\u003c/code\u003e task definition to run new tasks or create new services, and you cannot update an existing service to reference an \u003ccode\u003eINACTIVE\u003c/code\u003e task definition. However, there may be up to a 10-minute window following deregistration where these restrictions have not yet taken effect.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eAt this time, \u003ccode\u003eINACTIVE\u003c/code\u003e task definitions remain discoverable in your account indefinitely. However, this behavior is subject to change in the future, so you should not rely on \u003ccode\u003eINACTIVE\u003c/code\u003e task definitions persisting beyond the lifecycle of any associated tasks and services.\u003c/p\u003e \u003c/note\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeregisterTaskDefinitionResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeregisterTaskDefinitionRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.DeregisterTaskDefinition\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.DescribeCapacityProviders:\n    post:\n      operationId: DescribeCapacityProviders\n      description: Describes one or more of your capacity providers.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeCapacityProvidersResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeCapacityProvidersRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.DescribeCapacityProviders\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.DescribeClusters:\n    post:\n      operationId: DescribeClusters\n      description: Describes one or more of your clusters.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeClustersResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeClustersRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.DescribeClusters\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.DescribeContainerInstances:\n    post:\n      operationId: DescribeContainerInstances\n      description: Describes one or more container instances. Returns metadata about each container instance requested.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeContainerInstancesResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeContainerInstancesRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.DescribeContainerInstances\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.DescribeServices:\n    post:\n      operationId: DescribeServices\n      description: Describes the specified services running in your cluster.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeServicesResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeServicesRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.DescribeServices\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.DescribeTaskDefinition:\n    post:\n      operationId: DescribeTaskDefinition\n      description: '\u003cp\u003eDescribes a task definition. You can specify a \u003ccode\u003efamily\u003c/code\u003e and \u003ccode\u003erevision\u003c/code\u003e to find information about a specific task definition, or you can simply specify the family to find the latest \u003ccode\u003eACTIVE\u003c/code\u003e revision in that family.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eYou can only describe \u003ccode\u003eINACTIVE\u003c/code\u003e task definitions while an active task or service references them.\u003c/p\u003e \u003c/note\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeTaskDefinitionResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeTaskDefinitionRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.DescribeTaskDefinition\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.DescribeTaskSets:\n    post:\n      operationId: DescribeTaskSets\n      description: 'Describes the task sets in the specified cluster and service. This is used when a service uses the \u003ccode\u003eEXTERNAL\u003c/code\u003e deployment controller type. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html\"\u003eAmazon ECS Deployment Types\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeTaskSetsResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n        '484':\n          description: UnsupportedFeatureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedFeatureException'\n        '485':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '486':\n          description: ServiceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceNotFoundException'\n        '487':\n          description: ServiceNotActiveException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceNotActiveException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeTaskSetsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.DescribeTaskSets\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.DescribeTasks:\n    post:\n      operationId: DescribeTasks\n      description: Describes a specified task or tasks.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeTasksResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeTasksRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.DescribeTasks\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.DiscoverPollEndpoint:\n    post:\n      operationId: DiscoverPollEndpoint\n      description: '\u003cnote\u003e \u003cp\u003eThis action is only used by the Amazon ECS agent, and it is not intended for use outside of the agent.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eReturns an endpoint for the Amazon ECS agent to poll for updates.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DiscoverPollEndpointResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DiscoverPollEndpointRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.DiscoverPollEndpoint\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.ExecuteCommand:\n    post:\n      operationId: ExecuteCommand\n      description: Runs a command remotely on a container within a task.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExecuteCommandResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n        '485':\n          description: TargetNotConnectedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TargetNotConnectedException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExecuteCommandRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.ExecuteCommand\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.ListAccountSettings:\n    post:\n      operationId: ListAccountSettings\n      description: Lists the account settings for a specified principal.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListAccountSettingsResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListAccountSettingsRequest'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.ListAccountSettings\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.ListAttributes:\n    post:\n      operationId: ListAttributes\n      description: 'Lists the attributes for Amazon ECS resources within a specified target type and cluster. When you specify a target type and cluster, \u003ccode\u003eListAttributes\u003c/code\u003e returns a list of attribute objects, one for each attribute on each resource. You can filter the list of results to a single attribute name to only return results that have that name. You can also filter the results by attribute name and value, for example, to see which container instances in a cluster are running a Linux AMI (\u003ccode\u003eecs.os-type=linux\u003c/code\u003e). '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListAttributesResponse'\n        '480':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n        '481':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListAttributesRequest'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.ListAttributes\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.ListClusters:\n    post:\n      operationId: ListClusters\n      description: Returns a list of existing clusters.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListClustersResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListClustersRequest'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.ListClusters\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.ListContainerInstances:\n    post:\n      operationId: ListContainerInstances\n      description: 'Returns a list of container instances in a specified cluster. You can filter the results of a \u003ccode\u003eListContainerInstances\u003c/code\u003e operation with cluster query language statements inside the \u003ccode\u003efilter\u003c/code\u003e parameter. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html\"\u003eCluster Query Language\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListContainerInstancesResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListContainerInstancesRequest'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.ListContainerInstances\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.ListServices:\n    post:\n      operationId: ListServices\n      description: 'Returns a list of services. You can filter the results by cluster, launch type, and scheduling strategy.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListServicesResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListServicesRequest'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.ListServices\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.ListTagsForResource:\n    post:\n      operationId: ListTagsForResource\n      description: List the tags for an Amazon ECS resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsForResourceResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n        '483':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListTagsForResourceRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.ListTagsForResource\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.ListTaskDefinitionFamilies:\n    post:\n      operationId: ListTaskDefinitionFamilies\n      description: \u003cp\u003eReturns a list of task definition families that are registered to your account (which may include task definition families that no longer have any \u003ccode\u003eACTIVE\u003c/code\u003e task definition revisions).\u003c/p\u003e \u003cp\u003eYou can filter out task definition families that do not contain any \u003ccode\u003eACTIVE\u003c/code\u003e task definition revisions by setting the \u003ccode\u003estatus\u003c/code\u003e parameter to \u003ccode\u003eACTIVE\u003c/code\u003e. You can also filter the results with the \u003ccode\u003efamilyPrefix\u003c/code\u003e parameter.\u003c/p\u003e\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTaskDefinitionFamiliesResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListTaskDefinitionFamiliesRequest'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.ListTaskDefinitionFamilies\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.ListTaskDefinitions:\n    post:\n      operationId: ListTaskDefinitions\n      description: Returns a list of task definitions that are registered to your account. You can filter the results by family name with the \u003ccode\u003efamilyPrefix\u003c/code\u003e parameter or by status with the \u003ccode\u003estatus\u003c/code\u003e parameter.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTaskDefinitionsResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListTaskDefinitionsRequest'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.ListTaskDefinitions\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.ListTasks:\n    post:\n      operationId: ListTasks\n      description: '\u003cp\u003eReturns a list of tasks. You can filter the results by cluster, task definition family, container instance, launch type, what IAM principal started the task, or by the desired status of the task.\u003c/p\u003e \u003cp\u003eRecently stopped tasks might appear in the returned results. Currently, stopped tasks appear in the returned results for at least one hour.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTasksResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n        '484':\n          description: ServiceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListTasksRequest'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.ListTasks\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.PutAccountSetting:\n    post:\n      operationId: PutAccountSetting\n      description: '\u003cp\u003eModifies an account setting. Account settings are set on a per-Region basis.\u003c/p\u003e \u003cp\u003eIf you change the account setting for the root user, the default settings for all of the IAM users and roles for which no individual account setting has been specified are reset. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-account-settings.html\"\u003eAccount Settings\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eWhen \u003ccode\u003eserviceLongArnFormat\u003c/code\u003e, \u003ccode\u003etaskLongArnFormat\u003c/code\u003e, or \u003ccode\u003econtainerInstanceLongArnFormat\u003c/code\u003e are specified, the Amazon Resource Name (ARN) and resource ID format of the resource type for a specified IAM user, IAM role, or the root user for an account is affected. The opt-in and opt-out account setting must be set for each Amazon ECS resource separately. The ARN and resource ID format of a resource will be defined by the opt-in status of the IAM user or role that created the resource. You must enable this setting to use Amazon ECS features such as resource tagging.\u003c/p\u003e \u003cp\u003eWhen \u003ccode\u003eawsvpcTrunking\u003c/code\u003e is specified, the elastic network interface (ENI) limit for any new container instances that support the feature is changed. If \u003ccode\u003eawsvpcTrunking\u003c/code\u003e is enabled, any new container instances that support the feature are launched have the increased ENI limits available to them. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/container-instance-eni.html\"\u003eElastic Network Interface Trunking\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eWhen \u003ccode\u003econtainerInsights\u003c/code\u003e is specified, the default setting indicating whether CloudWatch Container Insights is enabled for your clusters is changed. If \u003ccode\u003econtainerInsights\u003c/code\u003e is enabled, any new clusters that are created will have Container Insights enabled unless you disable it during cluster creation. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cloudwatch-container-insights.html\"\u003eCloudWatch Container Insights\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutAccountSettingResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutAccountSettingRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.PutAccountSetting\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.PutAccountSettingDefault:\n    post:\n      operationId: PutAccountSettingDefault\n      description: Modifies an account setting for all IAM users on an account for whom no individual account setting has been specified. Account settings are set on a per-Region basis.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutAccountSettingDefaultResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutAccountSettingDefaultRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.PutAccountSettingDefault\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.PutAttributes:\n    post:\n      operationId: PutAttributes\n      description: 'Create or update an attribute on an Amazon ECS resource. If the attribute does not exist, it is created. If the attribute exists, its value is replaced with the specified value. To delete an attribute, use \u003ca\u003eDeleteAttributes\u003c/a\u003e. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html#attributes\"\u003eAttributes\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutAttributesResponse'\n        '480':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n        '481':\n          description: TargetNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TargetNotFoundException'\n        '482':\n          description: AttributeLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AttributeLimitExceededException'\n        '483':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutAttributesRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.PutAttributes\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.PutClusterCapacityProviders:\n    post:\n      operationId: PutClusterCapacityProviders\n      description: '\u003cp\u003eModifies the available capacity providers and the default capacity provider strategy for a cluster.\u003c/p\u003e \u003cp\u003eYou must specify both the available capacity providers and a default capacity provider strategy for the cluster. If the specified cluster has existing capacity providers associated with it, you must specify all existing capacity providers in addition to any new ones you want to add. Any existing capacity providers associated with a cluster that are omitted from a \u003ca\u003ePutClusterCapacityProviders\u003c/a\u003e API call will be disassociated with the cluster. You can only disassociate an existing capacity provider from a cluster if it''s not being used by any existing tasks.\u003c/p\u003e \u003cp\u003eWhen creating a service or running a task on a cluster, if no capacity provider or launch type is specified, then the cluster''s default capacity provider strategy is used. It is recommended to define a default capacity provider strategy for your cluster, however you may specify an empty array (\u003ccode\u003e[]\u003c/code\u003e) to bypass defining a default strategy.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutClusterCapacityProvidersResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n        '484':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '485':\n          description: UpdateInProgressException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateInProgressException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutClusterCapacityProvidersRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.PutClusterCapacityProviders\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.RegisterContainerInstance:\n    post:\n      operationId: RegisterContainerInstance\n      description: '\u003cnote\u003e \u003cp\u003eThis action is only used by the Amazon ECS agent, and it is not intended for use outside of the agent.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eRegisters an EC2 instance into the specified cluster. This instance becomes available to place containers on.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegisterContainerInstanceResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterContainerInstanceRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.RegisterContainerInstance\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.RegisterTaskDefinition:\n    post:\n      operationId: RegisterTaskDefinition\n      description: '\u003cp\u003eRegisters a new task definition from the supplied \u003ccode\u003efamily\u003c/code\u003e and \u003ccode\u003econtainerDefinitions\u003c/code\u003e. Optionally, you can add data volumes to your containers with the \u003ccode\u003evolumes\u003c/code\u003e parameter. For more information about task definition parameters and defaults, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html\"\u003eAmazon ECS Task Definitions\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eYou can specify an IAM role for your task with the \u003ccode\u003etaskRoleArn\u003c/code\u003e parameter. When you specify an IAM role for a task, its containers can then use the latest versions of the CLI or SDKs to make API requests to the Amazon Web Services services that are specified in the IAM policy associated with the role. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html\"\u003eIAM Roles for Tasks\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eYou can specify a Docker networking mode for the containers in your task definition with the \u003ccode\u003enetworkMode\u003c/code\u003e parameter. The available network modes correspond to those described in \u003ca href=\"https://docs.docker.com/engine/reference/run/#/network-settings\"\u003eNetwork settings\u003c/a\u003e in the Docker run reference. If you specify the \u003ccode\u003eawsvpc\u003c/code\u003e network mode, the task is allocated an elastic network interface, and you must specify a \u003ca\u003eNetworkConfiguration\u003c/a\u003e when you create a service or run a task with the task definition. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html\"\u003eTask Networking\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegisterTaskDefinitionResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterTaskDefinitionRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.RegisterTaskDefinition\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.RunTask:\n    post:\n      operationId: RunTask\n      description: '\u003cp\u003eStarts a new task using the specified task definition.\u003c/p\u003e \u003cp\u003eYou can allow Amazon ECS to place tasks for you, or you can customize how Amazon ECS places tasks using placement constraints and placement strategies. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html\"\u003eScheduling Tasks\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eAlternatively, you can use \u003ca\u003eStartTask\u003c/a\u003e to use your own scheduler or place tasks manually on specific container instances.\u003c/p\u003e \u003cp\u003eThe Amazon ECS API follows an eventual consistency model, due to the distributed nature of the system supporting the API. This means that the result of an API command you run that affects your Amazon ECS resources might not be immediately visible to all subsequent commands you run. Keep this in mind when you carry out an API command that immediately follows a previous API command.\u003c/p\u003e \u003cp\u003eTo manage eventual consistency, you can do the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eConfirm the state of the resource before you run a command to modify it. Run the DescribeTasks command using an exponential backoff algorithm to ensure that you allow enough time for the previous command to propagate through the system. To do this, run the DescribeTasks command repeatedly, starting with a couple of seconds of wait time and increasing gradually up to five minutes of wait time.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAdd wait time between subsequent commands, even if the DescribeTasks command returns an accurate response. Apply an exponential backoff algorithm starting with a couple of seconds of wait time, and increase gradually up to about five minutes of wait time.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RunTaskResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n        '484':\n          description: UnsupportedFeatureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedFeatureException'\n        '485':\n          description: PlatformUnknownException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlatformUnknownException'\n        '486':\n          description: PlatformTaskDefinitionIncompatibilityException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlatformTaskDefinitionIncompatibilityException'\n        '487':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '488':\n          description: BlockedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlockedException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RunTaskRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.RunTask\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.StartTask:\n    post:\n      operationId: StartTask\n      description: '\u003cp\u003eStarts a new task from the specified task definition on the specified container instance or instances.\u003c/p\u003e \u003cp\u003eAlternatively, you can use \u003ca\u003eRunTask\u003c/a\u003e to place tasks for you. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html\"\u003eScheduling Tasks\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StartTaskResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StartTaskRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.StartTask\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.StopTask:\n    post:\n      operationId: StopTask\n      description: '\u003cp\u003eStops a running task. Any tags associated with the task will be deleted.\u003c/p\u003e \u003cp\u003eWhen \u003ca\u003eStopTask\u003c/a\u003e is called on a task, the equivalent of \u003ccode\u003edocker stop\u003c/code\u003e is issued to the containers running in the task. This results in a \u003ccode\u003eSIGTERM\u003c/code\u003e value and a default 30-second timeout, after which the \u003ccode\u003eSIGKILL\u003c/code\u003e value is sent and the containers are forcibly stopped. If the container handles the \u003ccode\u003eSIGTERM\u003c/code\u003e value gracefully and exits within 30 seconds from receiving it, no \u003ccode\u003eSIGKILL\u003c/code\u003e value is sent.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThe default 30-second timeout can be configured on the Amazon ECS container agent with the \u003ccode\u003eECS_CONTAINER_STOP_TIMEOUT\u003c/code\u003e variable. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html\"\u003eAmazon ECS Container Agent Configuration\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003c/note\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StopTaskResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StopTaskRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.StopTask\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.SubmitAttachmentStateChanges:\n    post:\n      operationId: SubmitAttachmentStateChanges\n      description: '\u003cnote\u003e \u003cp\u003eThis action is only used by the Amazon ECS agent, and it is not intended for use outside of the agent.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eSent to acknowledge that an attachment changed states.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmitAttachmentStateChangesResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubmitAttachmentStateChangesRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.SubmitAttachmentStateChanges\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.SubmitContainerStateChange:\n    post:\n      operationId: SubmitContainerStateChange\n      description: '\u003cnote\u003e \u003cp\u003eThis action is only used by the Amazon ECS agent, and it is not intended for use outside of the agent.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eSent to acknowledge that a container changed states.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmitContainerStateChangeResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubmitContainerStateChangeRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.SubmitContainerStateChange\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.SubmitTaskStateChange:\n    post:\n      operationId: SubmitTaskStateChange\n      description: '\u003cnote\u003e \u003cp\u003eThis action is only used by the Amazon ECS agent, and it is not intended for use outside of the agent.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eSent to acknowledge that a task changed states.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmitTaskStateChangeResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubmitTaskStateChangeRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.SubmitTaskStateChange\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.TagResource:\n    post:\n      operationId: TagResource\n      description: 'Associates the specified tags to a resource with the specified \u003ccode\u003eresourceArn\u003c/code\u003e. If existing tags on a resource are not specified in the request parameters, they are not changed. When a resource is deleted, the tags associated with that resource are deleted as well.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagResourceResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TagResourceRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.TagResource\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.UntagResource:\n    post:\n      operationId: UntagResource\n      description: Deletes specified tags from a resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UntagResourceResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UntagResourceRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.UntagResource\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.UpdateCapacityProvider:\n    post:\n      operationId: UpdateCapacityProvider\n      description: Modifies the parameters for a capacity provider.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateCapacityProviderResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateCapacityProviderRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.UpdateCapacityProvider\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.UpdateCluster:\n    post:\n      operationId: UpdateCluster\n      description: Updates the cluster.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateClusterResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n        '483':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateClusterRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.UpdateCluster\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.UpdateClusterSettings:\n    post:\n      operationId: UpdateClusterSettings\n      description: Modifies the settings to use for a cluster.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateClusterSettingsResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n        '483':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateClusterSettingsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.UpdateClusterSettings\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.UpdateContainerAgent:\n    post:\n      operationId: UpdateContainerAgent\n      description: '\u003cp\u003eUpdates the Amazon ECS container agent on a specified container instance. Updating the Amazon ECS container agent does not interrupt running tasks or services on the container instance. The process for updating the agent differs depending on whether your container instance was launched with the Amazon ECS-optimized AMI or another operating system.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThe \u003ccode\u003eUpdateContainerAgent\u003c/code\u003e API isn''t supported for container instances using the Amazon ECS-optimized Amazon Linux 2 (arm64) AMI. To update the container agent, you can update the \u003ccode\u003eecs-init\u003c/code\u003e package which will update the agent. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/agent-update-ecs-ami.html\"\u003eUpdating the Amazon ECS container agent\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eThe \u003ccode\u003eUpdateContainerAgent\u003c/code\u003e API requires an Amazon ECS-optimized AMI or Amazon Linux AMI with the \u003ccode\u003eecs-init\u003c/code\u003e service installed and running. For help updating the Amazon ECS container agent on other operating systems, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html#manually_update_agent\"\u003eManually updating the Amazon ECS container agent\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateContainerAgentResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n        '484':\n          description: UpdateInProgressException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateInProgressException'\n        '485':\n          description: NoUpdateAvailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NoUpdateAvailableException'\n        '486':\n          description: MissingVersionException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingVersionException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateContainerAgentRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.UpdateContainerAgent\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.UpdateContainerInstancesState:\n    post:\n      operationId: UpdateContainerInstancesState\n      description: '\u003cp\u003eModifies the status of an Amazon ECS container instance.\u003c/p\u003e \u003cp\u003eOnce a container instance has reached an \u003ccode\u003eACTIVE\u003c/code\u003e state, you can change the status of a container instance to \u003ccode\u003eDRAINING\u003c/code\u003e to manually remove an instance from a cluster, for example to perform system updates, update the Docker daemon, or scale down the cluster size.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eA container instance cannot be changed to \u003ccode\u003eDRAINING\u003c/code\u003e until it has reached an \u003ccode\u003eACTIVE\u003c/code\u003e status. If the instance is in any other status, an error will be received.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eWhen you set a container instance to \u003ccode\u003eDRAINING\u003c/code\u003e, Amazon ECS prevents new tasks from being scheduled for placement on the container instance and replacement service tasks are started on other container instances in the cluster if the resources are available. Service tasks on the container instance that are in the \u003ccode\u003ePENDING\u003c/code\u003e state are stopped immediately.\u003c/p\u003e \u003cp\u003eService tasks on the container instance that are in the \u003ccode\u003eRUNNING\u003c/code\u003e state are stopped and replaced according to the service''s deployment configuration parameters, \u003ccode\u003eminimumHealthyPercent\u003c/code\u003e and \u003ccode\u003emaximumPercent\u003c/code\u003e. You can change the deployment configuration of your service using \u003ca\u003eUpdateService\u003c/a\u003e.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eIf \u003ccode\u003eminimumHealthyPercent\u003c/code\u003e is below 100%, the scheduler can ignore \u003ccode\u003edesiredCount\u003c/code\u003e temporarily during task replacement. For example, \u003ccode\u003edesiredCount\u003c/code\u003e is four tasks, a minimum of 50% allows the scheduler to stop two existing tasks before starting two new tasks. If the minimum is 100%, the service scheduler can''t remove existing tasks until the replacement tasks are considered healthy. Tasks for services that do not use a load balancer are considered healthy if they are in the \u003ccode\u003eRUNNING\u003c/code\u003e state. Tasks for services that use a load balancer are considered healthy if they are in the \u003ccode\u003eRUNNING\u003c/code\u003e state and the container instance they are hosted on is reported as healthy by the load balancer.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eThe \u003ccode\u003emaximumPercent\u003c/code\u003e parameter represents an upper limit on the number of running tasks during task replacement, which enables you to define the replacement batch size. For example, if \u003ccode\u003edesiredCount\u003c/code\u003e is four tasks, a maximum of 200% starts four new tasks before stopping the four tasks to be drained, provided that the cluster resources required to do this are available. If the maximum is 100%, then replacement tasks can''t start until the draining tasks have stopped.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eAny \u003ccode\u003ePENDING\u003c/code\u003e or \u003ccode\u003eRUNNING\u003c/code\u003e tasks that do not belong to a service are not affected. You must wait for them to finish or stop them manually.\u003c/p\u003e \u003cp\u003eA container instance has completed draining when it has no more \u003ccode\u003eRUNNING\u003c/code\u003e tasks. You can verify this using \u003ca\u003eListTasks\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eWhen a container instance has been drained, you can set a container instance to \u003ccode\u003eACTIVE\u003c/code\u003e status and once it has reached that status the Amazon ECS scheduler can begin scheduling tasks on the instance again.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateContainerInstancesStateResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateContainerInstancesStateRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.UpdateContainerInstancesState\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.UpdateService:\n    post:\n      operationId: UpdateService\n      description: '\u003cimportant\u003e \u003cp\u003eUpdating the task placement strategies and constraints on an Amazon ECS service remains in preview and is a Beta Service as defined by and subject to the Beta Service Participation Service Terms located at \u003ca href=\"https://aws.amazon.com/service-terms\"\u003ehttps://aws.amazon.com/service-terms\u003c/a\u003e (\"Beta Terms\"). These Beta Terms apply to your participation in this preview.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eModifies the parameters of a service.\u003c/p\u003e \u003cp\u003eFor services using the rolling update (\u003ccode\u003eECS\u003c/code\u003e) deployment controller, the desired count, deployment configuration, network configuration, task placement constraints and strategies, or task definition used can be updated.\u003c/p\u003e \u003cp\u003eFor services using the blue/green (\u003ccode\u003eCODE_DEPLOY\u003c/code\u003e) deployment controller, only the desired count, deployment configuration, task placement constraints and strategies, and health check grace period can be updated using this API. If the network configuration, platform version, or task definition need to be updated, a new CodeDeploy deployment should be created. For more information, see \u003ca href=\"https://docs.aws.amazon.com/codedeploy/latest/APIReference/API_CreateDeployment.html\"\u003eCreateDeployment\u003c/a\u003e in the \u003ci\u003eCodeDeploy API Reference\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eFor services using an external deployment controller, you can update only the desired count, task placement constraints and strategies, and health check grace period using this API. If the launch type, load balancer, network configuration, platform version, or task definition need to be updated, you should create a new task set. For more information, see \u003ca\u003eCreateTaskSet\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eYou can add to or subtract from the number of instantiations of a task definition in a service by specifying the cluster that the service is running in and a new \u003ccode\u003edesiredCount\u003c/code\u003e parameter.\u003c/p\u003e \u003cp\u003eIf you have updated the Docker image of your application, you can create a new task definition with that image and deploy it to your service. The service scheduler uses the minimum healthy percent and maximum percent parameters (in the service''s deployment configuration) to determine the deployment strategy.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eIf your updated Docker image uses the same tag as what is in the existing task definition for your service (for example, \u003ccode\u003emy_image:latest\u003c/code\u003e), you do not need to create a new revision of your task definition. You can update the service using the \u003ccode\u003eforceNewDeployment\u003c/code\u003e option. The new tasks launched by the deployment pull the current image/tag combination from your repository when they start.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eYou can also update the deployment configuration of a service. When a deployment is triggered by updating the task definition of a service, the service scheduler uses the deployment configuration parameters, \u003ccode\u003eminimumHealthyPercent\u003c/code\u003e and \u003ccode\u003emaximumPercent\u003c/code\u003e, to determine the deployment strategy.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eIf \u003ccode\u003eminimumHealthyPercent\u003c/code\u003e is below 100%, the scheduler can ignore \u003ccode\u003edesiredCount\u003c/code\u003e temporarily during a deployment. For example, if \u003ccode\u003edesiredCount\u003c/code\u003e is four tasks, a minimum of 50% allows the scheduler to stop two existing tasks before starting two new tasks. Tasks for services that do not use a load balancer are considered healthy if they are in the \u003ccode\u003eRUNNING\u003c/code\u003e state. Tasks for services that use a load balancer are considered healthy if they are in the \u003ccode\u003eRUNNING\u003c/code\u003e state and the container instance they are hosted on is reported as healthy by the load balancer.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eThe \u003ccode\u003emaximumPercent\u003c/code\u003e parameter represents an upper limit on the number of running tasks during a deployment, which enables you to define the deployment batch size. For example, if \u003ccode\u003edesiredCount\u003c/code\u003e is four tasks, a maximum of 200% starts four new tasks before stopping the four older tasks (provided that the cluster resources required to do this are available).\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eWhen \u003ca\u003eUpdateService\u003c/a\u003e stops a task during a deployment, the equivalent of \u003ccode\u003edocker stop\u003c/code\u003e is issued to the containers running in the task. This results in a \u003ccode\u003eSIGTERM\u003c/code\u003e and a 30-second timeout, after which \u003ccode\u003eSIGKILL\u003c/code\u003e is sent and the containers are forcibly stopped. If the container handles the \u003ccode\u003eSIGTERM\u003c/code\u003e gracefully and exits within 30 seconds from receiving it, no \u003ccode\u003eSIGKILL\u003c/code\u003e is sent.\u003c/p\u003e \u003cp\u003eWhen the service scheduler launches new tasks, it determines task placement in your cluster with the following logic:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eDetermine which of the container instances in your cluster can support your service''s task definition (for example, they have the required CPU, memory, ports, and container instance attributes).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eBy default, the service scheduler attempts to balance tasks across Availability Zones in this manner (although you can choose a different placement strategy):\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eSort the valid container instances by the fewest number of running tasks for this service in the same Availability Zone as the instance. For example, if zone A has one running service task and zones B and C each have zero, valid container instances in either zone B or C are considered optimal for placement.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003ePlace the new service task on a valid container instance in an optimal Availability Zone (based on the previous steps), favoring container instances with the fewest number of running tasks for this service.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eWhen the service scheduler stops running tasks, it attempts to maintain balance across the Availability Zones in your cluster using the following logic: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eSort the container instances by the largest number of running tasks for this service in the same Availability Zone as the instance. For example, if zone A has one running service task and zones B and C each have two, container instances in either zone B or C are considered optimal for termination.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eStop the task on a container instance in an optimal Availability Zone (based on the previous steps), favoring container instances with the largest number of running tasks for this service.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateServiceResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n        '484':\n          description: ServiceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceNotFoundException'\n        '485':\n          description: ServiceNotActiveException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceNotActiveException'\n        '486':\n          description: PlatformUnknownException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlatformUnknownException'\n        '487':\n          description: PlatformTaskDefinitionIncompatibilityException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlatformTaskDefinitionIncompatibilityException'\n        '488':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateServiceRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.UpdateService\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.UpdateServicePrimaryTaskSet:\n    post:\n      operationId: UpdateServicePrimaryTaskSet\n      description: 'Modifies which task set in a service is the primary task set. Any parameters that are updated on the primary task set in a service will transition to the service. This is used when a service uses the \u003ccode\u003eEXTERNAL\u003c/code\u003e deployment controller type. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html\"\u003eAmazon ECS Deployment Types\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateServicePrimaryTaskSetResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n        '484':\n          description: UnsupportedFeatureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedFeatureException'\n        '485':\n          description: ServiceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceNotFoundException'\n        '486':\n          description: ServiceNotActiveException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceNotActiveException'\n        '487':\n          description: TaskSetNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskSetNotFoundException'\n        '488':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateServicePrimaryTaskSetRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.UpdateServicePrimaryTaskSet\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.UpdateTaskSet:\n    post:\n      operationId: UpdateTaskSet\n      description: 'Modifies a task set. This is used when a service uses the \u003ccode\u003eEXTERNAL\u003c/code\u003e deployment controller type. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html\"\u003eAmazon ECS Deployment Types\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateTaskSetResponse'\n        '480':\n          description: ServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ClusterNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundException'\n        '484':\n          description: UnsupportedFeatureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedFeatureException'\n        '485':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '486':\n          description: ServiceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceNotFoundException'\n        '487':\n          description: ServiceNotActiveException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceNotActiveException'\n        '488':\n          description: TaskSetNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskSetNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateTaskSetRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonEC2ContainerServiceV20141113.UpdateTaskSet\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    CreateCapacityProviderResponse:\n      type: object\n      properties:\n        capacityProvider:\n          allOf:\n            - $ref: '#/components/schemas/CapacityProvider'\n            - description: The full description of the new capacity provider.\n    CreateCapacityProviderRequest:\n      type: object\n      required:\n        - name\n        - autoScalingGroupProvider\n      title: CreateCapacityProviderRequest\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The name of the capacity provider. Up to 255 characters are allowed, including letters (upper and lowercase), numbers, underscores, and hyphens. The name cannot be prefixed with \"\u003ccode\u003eaws\u003c/code\u003e\", \"\u003ccode\u003eecs\u003c/code\u003e\", or \"\u003ccode\u003efargate\u003c/code\u003e\".'\n        autoScalingGroupProvider:\n          allOf:\n            - $ref: '#/components/schemas/AutoScalingGroupProvider'\n            - description: The details of the Auto Scaling group for the capacity provider.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: '\u003cp\u003eThe metadata that you apply to the capacity provider to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.\u003c/p\u003e \u003cp\u003eThe following basic restrictions apply to tags:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eMaximum number of tags per resource - 50\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor each resource, each tag key must be unique, and each tag key can have only one value.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum key length - 128 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum value length - 256 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTag keys and values are case-sensitive.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eDo not use \u003ccode\u003eaws:\u003c/code\u003e, \u003ccode\u003eAWS:\u003c/code\u003e, or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n    ServerException: {}\n    ClientException: {}\n    InvalidParameterException: {}\n    LimitExceededException: {}\n    UpdateInProgressException: {}\n    CreateClusterResponse:\n      type: object\n      example:\n        cluster:\n          activeServicesCount: 0\n          clusterArn: 'arn:aws:ecs:us-east-1:012345678910:cluster/my_cluster'\n          clusterName: my_cluster\n          pendingTasksCount: 0\n          registeredContainerInstancesCount: 0\n          runningTasksCount: 0\n          status: ACTIVE\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/Cluster'\n            - description: The full description of your new cluster.\n    CreateClusterRequest:\n      type: object\n      title: CreateClusterRequest\n      properties:\n        clusterName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The name of your cluster. If you do not specify a name for your cluster, you create a cluster named \u003ccode\u003edefault\u003c/code\u003e. Up to 255 letters (uppercase and lowercase), numbers, underscores, and hyphens are allowed. '\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: '\u003cp\u003eThe metadata that you apply to the cluster to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.\u003c/p\u003e \u003cp\u003eThe following basic restrictions apply to tags:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eMaximum number of tags per resource - 50\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor each resource, each tag key must be unique, and each tag key can have only one value.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum key length - 128 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum value length - 256 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTag keys and values are case-sensitive.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eDo not use \u003ccode\u003eaws:\u003c/code\u003e, \u003ccode\u003eAWS:\u003c/code\u003e, or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        settings:\n          allOf:\n            - $ref: '#/components/schemas/ClusterSettings'\n            - description: 'The setting to use when creating a cluster. This parameter is used to enable CloudWatch Container Insights for a cluster. If this value is specified, it will override the \u003ccode\u003econtainerInsights\u003c/code\u003e value set with \u003ca\u003ePutAccountSetting\u003c/a\u003e or \u003ca\u003ePutAccountSettingDefault\u003c/a\u003e.'\n        configuration:\n          allOf:\n            - $ref: '#/components/schemas/ClusterConfiguration'\n            - description: The execute command configuration for the cluster.\n        capacityProviders:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: '\u003cp\u003eThe short name of one or more capacity providers to associate with the cluster. A capacity provider must be associated with a cluster before it can be included as part of the default capacity provider strategy of the cluster or used in a capacity provider strategy when calling the \u003ca\u003eCreateService\u003c/a\u003e or \u003ca\u003eRunTask\u003c/a\u003e actions.\u003c/p\u003e \u003cp\u003eIf specifying a capacity provider that uses an Auto Scaling group, the capacity provider must already be created and not already associated with another cluster. New Auto Scaling group capacity providers can be created with the \u003ca\u003eCreateCapacityProvider\u003c/a\u003e API operation.\u003c/p\u003e \u003cp\u003eTo use a Fargate capacity provider, specify either the \u003ccode\u003eFARGATE\u003c/code\u003e or \u003ccode\u003eFARGATE_SPOT\u003c/code\u003e capacity providers. The Fargate capacity providers are available to all accounts and only need to be associated with a cluster to be used.\u003c/p\u003e \u003cp\u003eThe \u003ca\u003ePutClusterCapacityProviders\u003c/a\u003e API operation is used to update the list of available capacity providers for a cluster after the cluster is created.\u003c/p\u003e'\n        defaultCapacityProviderStrategy:\n          allOf:\n            - $ref: '#/components/schemas/CapacityProviderStrategy'\n            - description: '\u003cp\u003eThe capacity provider strategy to set as the default for the cluster. When a default capacity provider strategy is set for a cluster, when calling the \u003ca\u003eRunTask\u003c/a\u003e or \u003ca\u003eCreateService\u003c/a\u003e APIs with no capacity provider strategy or launch type specified, the default capacity provider strategy for the cluster is used.\u003c/p\u003e \u003cp\u003eIf a default capacity provider strategy is not defined for a cluster during creation, it can be defined later with the \u003ca\u003ePutClusterCapacityProviders\u003c/a\u003e API operation.\u003c/p\u003e'\n    CreateServiceResponse:\n      type: object\n      example:\n        service:\n          clusterArn: 'arn:aws:ecs:us-east-1:012345678910:cluster/default'\n          createdAt: '2016-08-29T16:02:54.884Z'\n          deploymentConfiguration:\n            maximumPercent: 200\n            minimumHealthyPercent: 100\n          deployments:\n            - createdAt: '2016-08-29T16:02:54.884Z'\n              desiredCount: 10\n              id: ecs-svc/9223370564343000923\n              pendingCount: 0\n              runningCount: 0\n              status: PRIMARY\n              taskDefinition: 'arn:aws:ecs:us-east-1:012345678910:task-definition/console-sample-app-static:6'\n              updatedAt: '2016-08-29T16:02:54.884Z'\n          desiredCount: 10\n          events: []\n          loadBalancers:\n            - containerName: simple-app\n              containerPort: 80\n              loadBalancerName: EC2Contai-EcsElast-15DCDAURT3ZO2\n          pendingCount: 0\n          roleArn: 'arn:aws:iam::012345678910:role/ecsServiceRole'\n          runningCount: 0\n          serviceArn: 'arn:aws:ecs:us-east-1:012345678910:service/ecs-simple-service-elb'\n          serviceName: ecs-simple-service-elb\n          status: ACTIVE\n          taskDefinition: 'arn:aws:ecs:us-east-1:012345678910:task-definition/console-sample-app-static:6'\n      properties:\n        service:\n          allOf:\n            - $ref: '#/components/schemas/Service'\n            - description: '\u003cp\u003eThe full description of your service following the create call.\u003c/p\u003e \u003cp\u003eA service will return either a \u003ccode\u003ecapacityProviderStrategy\u003c/code\u003e or \u003ccode\u003elaunchType\u003c/code\u003e parameter, but not both, depending on which one was specified during creation.\u003c/p\u003e \u003cp\u003eIf a service is using the \u003ccode\u003eECS\u003c/code\u003e deployment controller, the \u003ccode\u003edeploymentController\u003c/code\u003e and \u003ccode\u003etaskSets\u003c/code\u003e parameters will not be returned.\u003c/p\u003e \u003cp\u003eIf the service is using the \u003ccode\u003eCODE_DEPLOY\u003c/code\u003e deployment controller, the \u003ccode\u003edeploymentController\u003c/code\u003e, \u003ccode\u003etaskSets\u003c/code\u003e and \u003ccode\u003edeployments\u003c/code\u003e parameters will be returned, however the \u003ccode\u003edeployments\u003c/code\u003e parameter will be an empty list.\u003c/p\u003e'\n    CreateServiceRequest:\n      type: object\n      required:\n        - serviceName\n      title: CreateServiceRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The short name or full Amazon Resource Name (ARN) of the cluster on which to run your service. If you do not specify a cluster, the default cluster is assumed.'\n        serviceName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The name of your service. Up to 255 letters (uppercase and lowercase), numbers, underscores, and hyphens are allowed. Service names must be unique within a cluster, but you can have similarly named services in multiple clusters within a Region or across multiple Regions.'\n        taskDefinition:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe \u003ccode\u003efamily\u003c/code\u003e and \u003ccode\u003erevision\u003c/code\u003e (\u003ccode\u003efamily:revision\u003c/code\u003e) or full ARN of the task definition to run in your service. If a \u003ccode\u003erevision\u003c/code\u003e is not specified, the latest \u003ccode\u003eACTIVE\u003c/code\u003e revision is used.\u003c/p\u003e \u003cp\u003eA task definition must be specified if the service is using either the \u003ccode\u003eECS\u003c/code\u003e or \u003ccode\u003eCODE_DEPLOY\u003c/code\u003e deployment controllers.\u003c/p\u003e'\n        loadBalancers:\n          allOf:\n            - $ref: '#/components/schemas/LoadBalancers'\n            - description: '\u003cp\u003eA load balancer object representing the load balancers to use with your service. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-load-balancing.html\"\u003eService Load Balancing\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eIf the service is using the rolling update (\u003ccode\u003eECS\u003c/code\u003e) deployment controller and using either an Application Load Balancer or Network Load Balancer, you must specify one or more target group ARNs to attach to the service. The service-linked role is required for services that make use of multiple target groups. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using-service-linked-roles.html\"\u003eUsing service-linked roles for Amazon ECS\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eIf the service is using the \u003ccode\u003eCODE_DEPLOY\u003c/code\u003e deployment controller, the service is required to use either an Application Load Balancer or Network Load Balancer. When creating an CodeDeploy deployment group, you specify two target groups (referred to as a \u003ccode\u003etargetGroupPair\u003c/code\u003e). During a deployment, CodeDeploy determines which task set in your service has the status \u003ccode\u003ePRIMARY\u003c/code\u003e and associates one target group with it, and then associates the other target group with the replacement task set. The load balancer can also have up to two listeners: a required listener for production traffic and an optional listener that allows you perform validation tests with Lambda functions before routing production traffic to it.\u003c/p\u003e \u003cp\u003eAfter you create a service using the \u003ccode\u003eECS\u003c/code\u003e deployment controller, the load balancer name or target group ARN, container name, and container port specified in the service definition are immutable. If you are using the \u003ccode\u003eCODE_DEPLOY\u003c/code\u003e deployment controller, these values can be changed when updating the service.\u003c/p\u003e \u003cp\u003eFor Application Load Balancers and Network Load Balancers, this object must contain the load balancer target group ARN, the container name (as it appears in a container definition), and the container port to access from the load balancer. The load balancer name parameter must be omitted. When a task from this service is placed on a container instance, the container instance and port combination is registered as a target in the target group specified here.\u003c/p\u003e \u003cp\u003eFor Classic Load Balancers, this object must contain the load balancer name, the container name (as it appears in a container definition), and the container port to access from the load balancer. The target group ARN parameter must be omitted. When a task from this service is placed on a container instance, the container instance is registered with the load balancer specified here.\u003c/p\u003e \u003cp\u003eServices with tasks that use the \u003ccode\u003eawsvpc\u003c/code\u003e network mode (for example, those with the Fargate launch type) only support Application Load Balancers and Network Load Balancers. Classic Load Balancers are not supported. Also, when you create any target groups for these services, you must choose \u003ccode\u003eip\u003c/code\u003e as the target type, not \u003ccode\u003einstance\u003c/code\u003e, because tasks that use the \u003ccode\u003eawsvpc\u003c/code\u003e network mode are associated with an elastic network interface, not an Amazon EC2 instance.\u003c/p\u003e'\n        serviceRegistries:\n          allOf:\n            - $ref: '#/components/schemas/ServiceRegistries'\n            - description: '\u003cp\u003eThe details of the service discovery registry to associate with this service. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html\"\u003eService discovery\u003c/a\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eEach service may be associated with one service registry. Multiple service registries per service isn''t supported.\u003c/p\u003e \u003c/note\u003e'\n        desiredCount:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: \u003cp\u003eThe number of instantiations of the specified task definition to place and keep running on your cluster.\u003c/p\u003e \u003cp\u003eThis is required if \u003ccode\u003eschedulingStrategy\u003c/code\u003e is \u003ccode\u003eREPLICA\u003c/code\u003e or is not specified. If \u003ccode\u003eschedulingStrategy\u003c/code\u003e is \u003ccode\u003eDAEMON\u003c/code\u003e then this is not required.\u003c/p\u003e\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Up to 32 ASCII characters are allowed.'\n        launchType:\n          allOf:\n            - $ref: '#/components/schemas/LaunchType'\n            - description: '\u003cp\u003eThe infrastructure on which to run your service. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html\"\u003eAmazon ECS launch types\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eFARGATE\u003c/code\u003e launch type runs your tasks on Fargate On-Demand infrastructure.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eFargate Spot infrastructure is available for use but a capacity provider strategy must be used. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/userguide/fargate-capacity-providers.html\"\u003eFargate capacity providers\u003c/a\u003e in the \u003ci\u003eAmazon ECS User Guide for Fargate\u003c/i\u003e.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eThe \u003ccode\u003eEC2\u003c/code\u003e launch type runs your tasks on Amazon EC2 instances registered to your cluster.\u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eEXTERNAL\u003c/code\u003e launch type runs your tasks on your on-premise server or virtual machine (VM) capacity registered to your cluster.\u003c/p\u003e \u003cp\u003eA service can use either a launch type or a capacity provider strategy. If a \u003ccode\u003elaunchType\u003c/code\u003e is specified, the \u003ccode\u003ecapacityProviderStrategy\u003c/code\u003e parameter must be omitted.\u003c/p\u003e'\n        capacityProviderStrategy:\n          allOf:\n            - $ref: '#/components/schemas/CapacityProviderStrategy'\n            - description: '\u003cp\u003eThe capacity provider strategy to use for the service.\u003c/p\u003e \u003cp\u003eIf a \u003ccode\u003ecapacityProviderStrategy\u003c/code\u003e is specified, the \u003ccode\u003elaunchType\u003c/code\u003e parameter must be omitted. If no \u003ccode\u003ecapacityProviderStrategy\u003c/code\u003e or \u003ccode\u003elaunchType\u003c/code\u003e is specified, the \u003ccode\u003edefaultCapacityProviderStrategy\u003c/code\u003e for the cluster is used.\u003c/p\u003e \u003cp\u003eA capacity provider strategy may contain a maximum of 6 capacity providers.\u003c/p\u003e'\n        platformVersion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The platform version that your tasks in the service are running on. A platform version is specified only for tasks using the Fargate launch type. If one isn''t specified, the \u003ccode\u003eLATEST\u003c/code\u003e platform version is used by default. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html\"\u003eFargate platform versions\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n        role:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe name or full Amazon Resource Name (ARN) of the IAM role that allows Amazon ECS to make calls to your load balancer on your behalf. This parameter is only permitted if you are using a load balancer with your service and your task definition does not use the \u003ccode\u003eawsvpc\u003c/code\u003e network mode. If you specify the \u003ccode\u003erole\u003c/code\u003e parameter, you must also specify a load balancer object with the \u003ccode\u003eloadBalancers\u003c/code\u003e parameter.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eIf your account has already created the Amazon ECS service-linked role, that role is used by default for your service unless you specify a role here. The service-linked role is required if your task definition uses the \u003ccode\u003eawsvpc\u003c/code\u003e network mode or if the service is configured to use service discovery, an external deployment controller, multiple target groups, or Elastic Inference accelerators in which case you should not specify a role here. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using-service-linked-roles.html\"\u003eUsing service-linked roles for Amazon ECS\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eIf your specified role has a path other than \u003ccode\u003e/\u003c/code\u003e, then you must either specify the full role ARN (this is recommended) or prefix the role name with the path. For example, if a role with the name \u003ccode\u003ebar\u003c/code\u003e has a path of \u003ccode\u003e/foo/\u003c/code\u003e then you would specify \u003ccode\u003e/foo/bar\u003c/code\u003e as the role name. For more information, see \u003ca href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-friendly-names\"\u003eFriendly names and paths\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e'\n        deploymentConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentConfiguration'\n            - description: Optional deployment parameters that control how many tasks run during the deployment and the ordering of stopping and starting tasks.\n        placementConstraints:\n          allOf:\n            - $ref: '#/components/schemas/PlacementConstraints'\n            - description: An array of placement constraint objects to use for tasks in your service. You can specify a maximum of 10 constraints per task (this limit includes constraints in the task definition and those specified at runtime).\n        placementStrategy:\n          allOf:\n            - $ref: '#/components/schemas/PlacementStrategies'\n            - description: The placement strategy objects to use for tasks in your service. You can specify a maximum of 5 strategy rules per service.\n        networkConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/NetworkConfiguration'\n            - description: 'The network configuration for the service. This parameter is required for task definitions that use the \u003ccode\u003eawsvpc\u003c/code\u003e network mode to receive their own elastic network interface, and it is not supported for other network modes. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html\"\u003eTask networking\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n        healthCheckGracePeriodSeconds:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: '\u003cp\u003eThe period of time, in seconds, that the Amazon ECS service scheduler should ignore unhealthy Elastic Load Balancing target health checks after a task has first started. This is only used when your service is configured to use a load balancer. If your service has a load balancer defined and you don''t specify a health check grace period value, the default value of \u003ccode\u003e0\u003c/code\u003e is used.\u003c/p\u003e \u003cp\u003eIf your service''s tasks take a while to start and respond to Elastic Load Balancing health checks, you can specify a health check grace period of up to 2,147,483,647 seconds. During that time, the Amazon ECS service scheduler ignores health check status. This grace period can prevent the service scheduler from marking tasks as unhealthy and stopping them before they have time to come up.\u003c/p\u003e'\n        schedulingStrategy:\n          allOf:\n            - $ref: '#/components/schemas/SchedulingStrategy'\n            - description: '\u003cp\u003eThe scheduling strategy to use for the service. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html\"\u003eServices\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eThere are two service scheduler strategies available:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eREPLICA\u003c/code\u003e-The replica scheduling strategy places and maintains the desired number of tasks across your cluster. By default, the service scheduler spreads tasks across Availability Zones. You can use task placement strategies and constraints to customize task placement decisions. This scheduler strategy is required if the service is using the \u003ccode\u003eCODE_DEPLOY\u003c/code\u003e or \u003ccode\u003eEXTERNAL\u003c/code\u003e deployment controller types.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDAEMON\u003c/code\u003e-The daemon scheduling strategy deploys exactly one task on each active container instance that meets all of the task placement constraints that you specify in your cluster. The service scheduler also evaluates the task placement constraints for running tasks and will stop tasks that do not meet the placement constraints. When you''re using this strategy, you don''t need to specify a desired number of tasks, a task placement strategy, or use Service Auto Scaling policies.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eTasks using the Fargate launch type or the \u003ccode\u003eCODE_DEPLOY\u003c/code\u003e or \u003ccode\u003eEXTERNAL\u003c/code\u003e deployment controller types don''t support the \u003ccode\u003eDAEMON\u003c/code\u003e scheduling strategy.\u003c/p\u003e \u003c/note\u003e \u003c/li\u003e \u003c/ul\u003e'\n        deploymentController:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentController'\n            - description: 'The deployment controller to use for the service. If no deployment controller is specified, the default value of \u003ccode\u003eECS\u003c/code\u003e is used.'\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: '\u003cp\u003eThe metadata that you apply to the service to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. When a service is deleted, the tags are deleted as well.\u003c/p\u003e \u003cp\u003eThe following basic restrictions apply to tags:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eMaximum number of tags per resource - 50\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor each resource, each tag key must be unique, and each tag key can have only one value.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum key length - 128 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum value length - 256 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTag keys and values are case-sensitive.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eDo not use \u003ccode\u003eaws:\u003c/code\u003e, \u003ccode\u003eAWS:\u003c/code\u003e, or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        enableECSManagedTags:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: 'Specifies whether to enable Amazon ECS managed tags for the tasks within the service. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html\"\u003eTagging Your Amazon ECS Resources\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n        propagateTags:\n          allOf:\n            - $ref: '#/components/schemas/PropagateTags'\n            - description: 'Specifies whether to propagate the tags from the task definition or the service to the tasks in the service. If no value is specified, the tags are not propagated. Tags can only be propagated to the tasks within the service during service creation. To add tags to a task after service creation, use the \u003ca\u003eTagResource\u003c/a\u003e API action.'\n        enableExecuteCommand:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: 'Whether or not the execute command functionality is enabled for the service. If \u003ccode\u003etrue\u003c/code\u003e, this enables execute command functionality on all containers in the service tasks.'\n    ClusterNotFoundException: {}\n    UnsupportedFeatureException: {}\n    PlatformUnknownException: {}\n    PlatformTaskDefinitionIncompatibilityException: {}\n    AccessDeniedException: {}\n    CreateTaskSetResponse:\n      type: object\n      properties:\n        taskSet:\n          allOf:\n            - $ref: '#/components/schemas/TaskSet'\n            - description: 'Information about a set of Amazon ECS tasks in either an CodeDeploy or an \u003ccode\u003eEXTERNAL\u003c/code\u003e deployment. A task set includes details such as the desired number of tasks, how many tasks are running, and whether the task set serves production traffic.'\n    CreateTaskSetRequest:\n      type: object\n      required:\n        - service\n        - cluster\n        - taskDefinition\n      title: CreateTaskSetRequest\n      properties:\n        service:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The short name or full Amazon Resource Name (ARN) of the service to create the task set in.\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service to create the task set in.\n        externalId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'An optional non-unique tag that identifies this task set in external systems. If the task set is associated with a service discovery registry, the tasks in this task set will have the \u003ccode\u003eECS_TASK_SET_EXTERNAL_ID\u003c/code\u003e Cloud Map attribute set to the provided value.'\n        taskDefinition:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The task definition for the tasks in the task set to use.\n        networkConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/NetworkConfiguration'\n            - description: An object representing the network configuration for a task set.\n        loadBalancers:\n          allOf:\n            - $ref: '#/components/schemas/LoadBalancers'\n            - description: A load balancer object representing the load balancer to use with the task set. The supported load balancer types are either an Application Load Balancer or a Network Load Balancer.\n        serviceRegistries:\n          allOf:\n            - $ref: '#/components/schemas/ServiceRegistries'\n            - description: 'The details of the service discovery registries to assign to this task set. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html\"\u003eService Discovery\u003c/a\u003e.'\n        launchType:\n          allOf:\n            - $ref: '#/components/schemas/LaunchType'\n            - description: '\u003cp\u003eThe launch type that new tasks in the task set will use. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html\"\u003eAmazon ECS Launch Types\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eIf a \u003ccode\u003elaunchType\u003c/code\u003e is specified, the \u003ccode\u003ecapacityProviderStrategy\u003c/code\u003e parameter must be omitted.\u003c/p\u003e'\n        capacityProviderStrategy:\n          allOf:\n            - $ref: '#/components/schemas/CapacityProviderStrategy'\n            - description: '\u003cp\u003eThe capacity provider strategy to use for the task set.\u003c/p\u003e \u003cp\u003eA capacity provider strategy consists of one or more capacity providers along with the \u003ccode\u003ebase\u003c/code\u003e and \u003ccode\u003eweight\u003c/code\u003e to assign to them. A capacity provider must be associated with the cluster to be used in a capacity provider strategy. The \u003ca\u003ePutClusterCapacityProviders\u003c/a\u003e API is used to associate a capacity provider with a cluster. Only capacity providers with an \u003ccode\u003eACTIVE\u003c/code\u003e or \u003ccode\u003eUPDATING\u003c/code\u003e status can be used.\u003c/p\u003e \u003cp\u003eIf a \u003ccode\u003ecapacityProviderStrategy\u003c/code\u003e is specified, the \u003ccode\u003elaunchType\u003c/code\u003e parameter must be omitted. If no \u003ccode\u003ecapacityProviderStrategy\u003c/code\u003e or \u003ccode\u003elaunchType\u003c/code\u003e is specified, the \u003ccode\u003edefaultCapacityProviderStrategy\u003c/code\u003e for the cluster is used.\u003c/p\u003e \u003cp\u003eIf specifying a capacity provider that uses an Auto Scaling group, the capacity provider must already be created. New capacity providers can be created with the \u003ca\u003eCreateCapacityProvider\u003c/a\u003e API operation.\u003c/p\u003e \u003cp\u003eTo use a Fargate capacity provider, specify either the \u003ccode\u003eFARGATE\u003c/code\u003e or \u003ccode\u003eFARGATE_SPOT\u003c/code\u003e capacity providers. The Fargate capacity providers are available to all accounts and only need to be associated with a cluster to be used.\u003c/p\u003e \u003cp\u003eThe \u003ca\u003ePutClusterCapacityProviders\u003c/a\u003e API operation is used to update the list of available capacity providers for a cluster after the cluster is created.\u003c/p\u003e'\n        platformVersion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The platform version that the tasks in the task set should use. A platform version is specified only for tasks using the Fargate launch type. If one isn''t specified, the \u003ccode\u003eLATEST\u003c/code\u003e platform version is used by default.'\n        scale:\n          allOf:\n            - $ref: '#/components/schemas/Scale'\n            - description: A floating-point percentage of the desired number of tasks to place and keep running in the task set.\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Up to 32 ASCII characters are allowed.'\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: '\u003cp\u003eThe metadata that you apply to the task set to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. When a service is deleted, the tags are deleted as well.\u003c/p\u003e \u003cp\u003eThe following basic restrictions apply to tags:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eMaximum number of tags per resource - 50\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor each resource, each tag key must be unique, and each tag key can have only one value.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum key length - 128 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum value length - 256 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTag keys and values are case-sensitive.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eDo not use \u003ccode\u003eaws:\u003c/code\u003e, \u003ccode\u003eAWS:\u003c/code\u003e, or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n    ServiceNotFoundException: {}\n    ServiceNotActiveException: {}\n    DeleteAccountSettingResponse:\n      type: object\n      example:\n        setting:\n          name: containerInstanceLongArnFormat\n          value: enabled\n          principalArn: 'arn:aws:iam::\u003caws_account_id\u003e:user/principalName'\n      properties:\n        setting:\n          allOf:\n            - $ref: '#/components/schemas/Setting'\n            - description: The account setting for the specified principal ARN.\n    DeleteAccountSettingRequest:\n      type: object\n      required:\n        - name\n      title: DeleteAccountSettingRequest\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/SettingName'\n            - description: 'The resource name for which to disable the account setting. If \u003ccode\u003eserviceLongArnFormat\u003c/code\u003e is specified, the ARN for your Amazon ECS services is affected. If \u003ccode\u003etaskLongArnFormat\u003c/code\u003e is specified, the ARN and resource ID for your Amazon ECS tasks is affected. If \u003ccode\u003econtainerInstanceLongArnFormat\u003c/code\u003e is specified, the ARN and resource ID for your Amazon ECS container instances is affected. If \u003ccode\u003eawsvpcTrunking\u003c/code\u003e is specified, the ENI limit for your Amazon ECS container instances is affected.'\n        principalArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The ARN of the principal, which can be an IAM user, IAM role, or the root user. If you specify the root user, it disables the account setting for all IAM users, IAM roles, and the root user of the account unless an IAM user or role explicitly overrides these settings. If this field is omitted, the setting is changed only for the authenticated user.'\n    DeleteAttributesResponse:\n      type: object\n      properties:\n        attributes:\n          allOf:\n            - $ref: '#/components/schemas/Attributes'\n            - description: A list of attribute objects that were successfully deleted from your resource.\n    DeleteAttributesRequest:\n      type: object\n      required:\n        - attributes\n      title: DeleteAttributesRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The short name or full Amazon Resource Name (ARN) of the cluster that contains the resource to delete attributes. If you do not specify a cluster, the default cluster is assumed.'\n        attributes:\n          allOf:\n            - $ref: '#/components/schemas/Attributes'\n            - description: 'The attributes to delete from your resource. You can specify up to 10 attributes per request. For custom attributes, specify the attribute name and target ID, but do not specify the value. If you specify the target ID using the short form, you must also specify the target type.'\n    TargetNotFoundException: {}\n    DeleteCapacityProviderResponse:\n      type: object\n      properties:\n        capacityProvider:\n          allOf:\n            - $ref: '#/components/schemas/CapacityProvider'\n            - description: The details of the capacity provider.\n    DeleteCapacityProviderRequest:\n      type: object\n      required:\n        - capacityProvider\n      title: DeleteCapacityProviderRequest\n      properties:\n        capacityProvider:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The short name or full Amazon Resource Name (ARN) of the capacity provider to delete.\n    DeleteClusterResponse:\n      type: object\n      example:\n        cluster:\n          activeServicesCount: 0\n          clusterArn: 'arn:aws:ecs:us-east-1:012345678910:cluster/my_cluster'\n          clusterName: my_cluster\n          pendingTasksCount: 0\n          registeredContainerInstancesCount: 0\n          runningTasksCount: 0\n          status: INACTIVE\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/Cluster'\n            - description: The full description of the deleted cluster.\n    DeleteClusterRequest:\n      type: object\n      required:\n        - cluster\n      title: DeleteClusterRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The short name or full Amazon Resource Name (ARN) of the cluster to delete.\n    ClusterContainsContainerInstancesException: {}\n    ClusterContainsServicesException: {}\n    ClusterContainsTasksException: {}\n    DeleteServiceResponse:\n      type: object\n      example: {}\n      properties:\n        service:\n          allOf:\n            - $ref: '#/components/schemas/Service'\n            - description: The full description of the deleted service.\n    DeleteServiceRequest:\n      type: object\n      required:\n        - service\n      title: DeleteServiceRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service to delete. If you do not specify a cluster, the default cluster is assumed.'\n        service:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the service to delete.\n        force:\n          allOf:\n            - $ref: '#/components/schemas/BoxedBoolean'\n            - description: 'If \u003ccode\u003etrue\u003c/code\u003e, allows you to delete a service even if it has not been scaled down to zero tasks. It is only necessary to use this if the service is using the \u003ccode\u003eREPLICA\u003c/code\u003e scheduling strategy.'\n    DeleteTaskSetResponse:\n      type: object\n      properties:\n        taskSet:\n          allOf:\n            - $ref: '#/components/schemas/TaskSet'\n            - description: Details about the task set.\n    DeleteTaskSetRequest:\n      type: object\n      required:\n        - cluster\n        - service\n        - taskSet\n      title: DeleteTaskSetRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service that the task set exists in to delete.\n        service:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The short name or full Amazon Resource Name (ARN) of the service that hosts the task set to delete.\n        taskSet:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The task set ID or full Amazon Resource Name (ARN) of the task set to delete.\n        force:\n          allOf:\n            - $ref: '#/components/schemas/BoxedBoolean'\n            - description: 'If \u003ccode\u003etrue\u003c/code\u003e, this allows you to delete a task set even if it hasn''t been scaled down to zero.'\n    TaskSetNotFoundException: {}\n    DeregisterContainerInstanceResponse:\n      type: object\n      example: {}\n      properties:\n        containerInstance:\n          allOf:\n            - $ref: '#/components/schemas/ContainerInstance'\n            - description: The container instance that was deregistered.\n    DeregisterContainerInstanceRequest:\n      type: object\n      required:\n        - containerInstance\n      title: DeregisterContainerInstanceRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The short name or full Amazon Resource Name (ARN) of the cluster that hosts the container instance to deregister. If you do not specify a cluster, the default cluster is assumed.'\n        containerInstance:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The container instance ID or full ARN of the container instance to deregister. The ARN contains the \u003ccode\u003earn:aws:ecs\u003c/code\u003e namespace, followed by the Region of the container instance, the Amazon Web Services account ID of the container instance owner, the \u003ccode\u003econtainer-instance\u003c/code\u003e namespace, and then the container instance ID. For example, \u003ccode\u003earn:aws:ecs:region:aws_account_id:container-instance/container_instance_ID\u003c/code\u003e.'\n        force:\n          allOf:\n            - $ref: '#/components/schemas/BoxedBoolean'\n            - description: '\u003cp\u003eForces the deregistration of the container instance. If you have tasks running on the container instance when you deregister it with the \u003ccode\u003eforce\u003c/code\u003e option, these tasks remain running until you terminate the instance or the tasks stop through some other means, but they are orphaned (no longer monitored or accounted for by Amazon ECS). If an orphaned task on your container instance is part of an Amazon ECS service, then the service scheduler starts another copy of that task, on a different container instance if possible. \u003c/p\u003e \u003cp\u003eAny containers in orphaned service tasks that are registered with a Classic Load Balancer or an Application Load Balancer target group are deregistered. They begin connection draining according to the settings on the load balancer or target group.\u003c/p\u003e'\n    DeregisterTaskDefinitionResponse:\n      type: object\n      properties:\n        taskDefinition:\n          allOf:\n            - $ref: '#/components/schemas/TaskDefinition'\n            - description: The full description of the deregistered task.\n    DeregisterTaskDefinitionRequest:\n      type: object\n      required:\n        - taskDefinition\n      title: DeregisterTaskDefinitionRequest\n      properties:\n        taskDefinition:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The \u003ccode\u003efamily\u003c/code\u003e and \u003ccode\u003erevision\u003c/code\u003e (\u003ccode\u003efamily:revision\u003c/code\u003e) or full Amazon Resource Name (ARN) of the task definition to deregister. You must specify a \u003ccode\u003erevision\u003c/code\u003e.'\n    DescribeCapacityProvidersResponse:\n      type: object\n      properties:\n        capacityProviders:\n          allOf:\n            - $ref: '#/components/schemas/CapacityProviders'\n            - description: The list of capacity providers.\n        failures:\n          allOf:\n            - $ref: '#/components/schemas/Failures'\n            - description: Any failures associated with the call.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The \u003ccode\u003enextToken\u003c/code\u003e value to include in a future \u003ccode\u003eDescribeCapacityProviders\u003c/code\u003e request. When the results of a \u003ccode\u003eDescribeCapacityProviders\u003c/code\u003e request exceed \u003ccode\u003emaxResults\u003c/code\u003e, this value can be used to retrieve the next page of results. This value is \u003ccode\u003enull\u003c/code\u003e when there are no more results to return.'\n    DescribeCapacityProvidersRequest:\n      type: object\n      title: DescribeCapacityProvidersRequest\n      properties:\n        capacityProviders:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: The short name or full Amazon Resource Name (ARN) of one or more capacity providers. Up to \u003ccode\u003e100\u003c/code\u003e capacity providers can be described in an action.\n        include:\n          allOf:\n            - $ref: '#/components/schemas/CapacityProviderFieldList'\n            - description: 'Specifies whether or not you want to see the resource tags for the capacity provider. If \u003ccode\u003eTAGS\u003c/code\u003e is specified, the tags are included in the response. If this field is omitted, tags are not included in the response.'\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: 'The maximum number of account setting results returned by \u003ccode\u003eDescribeCapacityProviders\u003c/code\u003e in paginated output. When this parameter is used, \u003ccode\u003eDescribeCapacityProviders\u003c/code\u003e only returns \u003ccode\u003emaxResults\u003c/code\u003e results in a single page along with a \u003ccode\u003enextToken\u003c/code\u003e response element. The remaining results of the initial request can be seen by sending another \u003ccode\u003eDescribeCapacityProviders\u003c/code\u003e request with the returned \u003ccode\u003enextToken\u003c/code\u003e value. This value can be between 1 and 10. If this parameter is not used, then \u003ccode\u003eDescribeCapacityProviders\u003c/code\u003e returns up to 10 results and a \u003ccode\u003enextToken\u003c/code\u003e value if applicable.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: \u003cp\u003eThe \u003ccode\u003enextToken\u003c/code\u003e value returned from a previous paginated \u003ccode\u003eDescribeCapacityProviders\u003c/code\u003e request where \u003ccode\u003emaxResults\u003c/code\u003e was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the \u003ccode\u003enextToken\u003c/code\u003e value.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.\u003c/p\u003e \u003c/note\u003e\n    DescribeClustersResponse:\n      type: object\n      example:\n        clusters:\n          - clusterArn: 'arn:aws:ecs:us-east-1:aws_account_id:cluster/default'\n            clusterName: default\n            status: ACTIVE\n        failures: []\n      properties:\n        clusters:\n          allOf:\n            - $ref: '#/components/schemas/Clusters'\n            - description: The list of clusters.\n        failures:\n          allOf:\n            - $ref: '#/components/schemas/Failures'\n            - description: Any failures associated with the call.\n    DescribeClustersRequest:\n      type: object\n      title: DescribeClustersRequest\n      properties:\n        clusters:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: 'A list of up to 100 cluster names or full cluster Amazon Resource Name (ARN) entries. If you do not specify a cluster, the default cluster is assumed.'\n        include:\n          allOf:\n            - $ref: '#/components/schemas/ClusterFieldList'\n            - description: '\u003cp\u003eWhether to include additional information about the clusters in the response. If this field is omitted, this information isn''t included.\u003c/p\u003e \u003cp\u003eIf \u003ccode\u003eATTACHMENTS\u003c/code\u003e is specified, the attachments for the container instances or tasks within the cluster are included.\u003c/p\u003e \u003cp\u003eIf \u003ccode\u003eSETTINGS\u003c/code\u003e is specified, the settings for the cluster are included.\u003c/p\u003e \u003cp\u003eIf \u003ccode\u003eCONFIGURATIONS\u003c/code\u003e is specified, the configuration for the cluster is included.\u003c/p\u003e \u003cp\u003eIf \u003ccode\u003eSTATISTICS\u003c/code\u003e is specified, the task and service count is included, separated by launch type.\u003c/p\u003e \u003cp\u003eIf \u003ccode\u003eTAGS\u003c/code\u003e is specified, the metadata tags associated with the cluster are included.\u003c/p\u003e'\n    DescribeContainerInstancesResponse:\n      type: object\n      example:\n        containerInstances:\n          - agentConnected: true\n            containerInstanceArn: 'arn:aws:ecs:us-east-1:012345678910:container-instance/f2756532-8f13-4d53-87c9-aed50dc94cd7'\n            ec2InstanceId: i-807f3249\n            pendingTasksCount: 0\n            registeredResources:\n              - name: CPU\n                type: INTEGER\n                doubleValue: 0\n                integerValue: 2048\n                longValue: 0\n              - name: MEMORY\n                type: INTEGER\n                doubleValue: 0\n                integerValue: 3768\n                longValue: 0\n              - name: PORTS\n                type: STRINGSET\n                doubleValue: 0\n                integerValue: 0\n                longValue: 0\n                stringSetValue:\n                  - '2376'\n                  - '22'\n                  - '51678'\n                  - '2375'\n            remainingResources:\n              - name: CPU\n                type: INTEGER\n                doubleValue: 0\n                integerValue: 1948\n                longValue: 0\n              - name: MEMORY\n                type: INTEGER\n                doubleValue: 0\n                integerValue: 3668\n                longValue: 0\n              - name: PORTS\n                type: STRINGSET\n                doubleValue: 0\n                integerValue: 0\n                longValue: 0\n                stringSetValue:\n                  - '2376'\n                  - '22'\n                  - '80'\n                  - '51678'\n                  - '2375'\n            runningTasksCount: 1\n            status: ACTIVE\n        failures: []\n      properties:\n        containerInstances:\n          allOf:\n            - $ref: '#/components/schemas/ContainerInstances'\n            - description: The list of container instances.\n        failures:\n          allOf:\n            - $ref: '#/components/schemas/Failures'\n            - description: Any failures associated with the call.\n    DescribeContainerInstancesRequest:\n      type: object\n      required:\n        - containerInstances\n      title: DescribeContainerInstancesRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The short name or full Amazon Resource Name (ARN) of the cluster that hosts the container instances to describe. If you do not specify a cluster, the default cluster is assumed. This parameter is required if the container instance or container instances you are describing were launched in any cluster other than the default cluster.'\n        containerInstances:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: A list of up to 100 container instance IDs or full Amazon Resource Name (ARN) entries.\n        include:\n          allOf:\n            - $ref: '#/components/schemas/ContainerInstanceFieldList'\n            - description: 'Specifies whether you want to see the resource tags for the container instance. If \u003ccode\u003eTAGS\u003c/code\u003e is specified, the tags are included in the response. If this field is omitted, tags are not included in the response.'\n    DescribeServicesResponse:\n      type: object\n      example:\n        failures: []\n        services:\n          - clusterArn: 'arn:aws:ecs:us-east-1:012345678910:cluster/default'\n            createdAt: '2016-08-29T16:25:52.130Z'\n            deploymentConfiguration:\n              maximumPercent: 200\n              minimumHealthyPercent: 100\n            deployments:\n              - createdAt: '2016-08-29T16:25:52.130Z'\n                desiredCount: 1\n                id: ecs-svc/9223370564341623665\n                pendingCount: 0\n                runningCount: 0\n                status: PRIMARY\n                taskDefinition: 'arn:aws:ecs:us-east-1:012345678910:task-definition/hello_world:6'\n                updatedAt: '2016-08-29T16:25:52.130Z'\n            desiredCount: 1\n            events:\n              - createdAt: '2016-08-29T16:25:58.520Z'\n                id: 38c285e5-d335-4b68-8b15-e46dedc8e88d\n                message: '(service ecs-simple-service) was unable to place a task because no container instance met all of its requirements. The closest matching (container-instance 3f4de1c5-ffdd-4954-af7e-75b4be0c8841) is already using a port required by your task. For more information, see the Troubleshooting section of the Amazon ECS Developer Guide.'\n            loadBalancers: []\n            pendingCount: 0\n            runningCount: 0\n            serviceArn: 'arn:aws:ecs:us-east-1:012345678910:service/ecs-simple-service'\n            serviceName: ecs-simple-service\n            status: ACTIVE\n            taskDefinition: 'arn:aws:ecs:us-east-1:012345678910:task-definition/hello_world:6'\n      properties:\n        services:\n          allOf:\n            - $ref: '#/components/schemas/Services'\n            - description: The list of services described.\n        failures:\n          allOf:\n            - $ref: '#/components/schemas/Failures'\n            - description: Any failures associated with the call.\n    DescribeServicesRequest:\n      type: object\n      required:\n        - services\n      title: DescribeServicesRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The short name or full Amazon Resource Name (ARN)the cluster that hosts the service to describe. If you do not specify a cluster, the default cluster is assumed. This parameter is required if the service or services you are describing were launched in any cluster other than the default cluster.'\n        services:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: A list of services to describe. You may specify up to 10 services to describe in a single operation.\n        include:\n          allOf:\n            - $ref: '#/components/schemas/ServiceFieldList'\n            - description: 'Specifies whether you want to see the resource tags for the service. If \u003ccode\u003eTAGS\u003c/code\u003e is specified, the tags are included in the response. If this field is omitted, tags are not included in the response.'\n    DescribeTaskDefinitionResponse:\n      type: object\n      example:\n        taskDefinition:\n          containerDefinitions:\n            - name: wordpress\n              cpu: 10\n              environment: []\n              essential: true\n              image: wordpress\n              links:\n                - mysql\n              memory: 500\n              mountPoints: []\n              portMappings:\n                - containerPort: 80\n                  hostPort: 80\n              volumesFrom: []\n            - name: mysql\n              cpu: 10\n              environment:\n                - name: MYSQL_ROOT_PASSWORD\n                  value: password\n              essential: true\n              image: mysql\n              memory: 500\n              mountPoints: []\n              portMappings: []\n              volumesFrom: []\n          family: hello_world\n          revision: 8\n          taskDefinitionArn: 'arn:aws:ecs:us-east-1:\u003caws_account_id\u003e:task-definition/hello_world:8'\n          volumes: []\n      properties:\n        taskDefinition:\n          allOf:\n            - $ref: '#/components/schemas/TaskDefinition'\n            - description: The full task definition description.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: '\u003cp\u003eThe metadata that is applied to the task definition to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.\u003c/p\u003e \u003cp\u003eThe following basic restrictions apply to tags:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eMaximum number of tags per resource - 50\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor each resource, each tag key must be unique, and each tag key can have only one value.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum key length - 128 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum value length - 256 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTag keys and values are case-sensitive.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eDo not use \u003ccode\u003eaws:\u003c/code\u003e, \u003ccode\u003eAWS:\u003c/code\u003e, or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n    DescribeTaskDefinitionRequest:\n      type: object\n      required:\n        - taskDefinition\n      title: DescribeTaskDefinitionRequest\n      properties:\n        taskDefinition:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The \u003ccode\u003efamily\u003c/code\u003e for the latest \u003ccode\u003eACTIVE\u003c/code\u003e revision, \u003ccode\u003efamily\u003c/code\u003e and \u003ccode\u003erevision\u003c/code\u003e (\u003ccode\u003efamily:revision\u003c/code\u003e) for a specific revision in the family, or full Amazon Resource Name (ARN) of the task definition to describe.'\n        include:\n          allOf:\n            - $ref: '#/components/schemas/TaskDefinitionFieldList'\n            - description: 'Specifies whether to see the resource tags for the task definition. If \u003ccode\u003eTAGS\u003c/code\u003e is specified, the tags are included in the response. If this field is omitted, tags are not included in the response.'\n    DescribeTaskSetsResponse:\n      type: object\n      properties:\n        taskSets:\n          allOf:\n            - $ref: '#/components/schemas/TaskSets'\n            - description: The list of task sets described.\n        failures:\n          allOf:\n            - $ref: '#/components/schemas/Failures'\n            - description: Any failures associated with the call.\n    DescribeTaskSetsRequest:\n      type: object\n      required:\n        - cluster\n        - service\n      title: DescribeTaskSetsRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service that the task sets exist in.\n        service:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The short name or full Amazon Resource Name (ARN) of the service that the task sets exist in.\n        taskSets:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: The ID or full Amazon Resource Name (ARN) of task sets to describe.\n        include:\n          allOf:\n            - $ref: '#/components/schemas/TaskSetFieldList'\n            - description: 'Specifies whether to see the resource tags for the task set. If \u003ccode\u003eTAGS\u003c/code\u003e is specified, the tags are included in the response. If this field is omitted, tags are not included in the response.'\n    DescribeTasksResponse:\n      type: object\n      example:\n        failures: []\n        tasks:\n          - clusterArn: 'arn:aws:ecs:\u003cregion\u003e:\u003caws_account_id\u003e:cluster/default'\n            containerInstanceArn: 'arn:aws:ecs:\u003cregion\u003e:\u003caws_account_id\u003e:container-instance/18f9eda5-27d7-4c19-b133-45adc516e8fb'\n            containers:\n              - name: ecs-demo\n                containerArn: 'arn:aws:ecs:\u003cregion\u003e:\u003caws_account_id\u003e:container/7c01765b-c588-45b3-8290-4ba38bd6c5a6'\n                lastStatus: RUNNING\n                networkBindings:\n                  - bindIP: 0.0.0.0\n                    containerPort: 80\n                    hostPort: 80\n                taskArn: 'arn:aws:ecs:\u003cregion\u003e:\u003caws_account_id\u003e:task/c5cba4eb-5dad-405e-96db-71ef8eefe6a8'\n            desiredStatus: RUNNING\n            lastStatus: RUNNING\n            overrides:\n              containerOverrides:\n                - name: ecs-demo\n            startedBy: ecs-svc/9223370608528463088\n            taskArn: 'arn:aws:ecs:\u003cregion\u003e:\u003caws_account_id\u003e:task/c5cba4eb-5dad-405e-96db-71ef8eefe6a8'\n            taskDefinitionArn: 'arn:aws:ecs:\u003cregion\u003e:\u003caws_account_id\u003e:task-definition/amazon-ecs-sample:1'\n      properties:\n        tasks:\n          allOf:\n            - $ref: '#/components/schemas/Tasks'\n            - description: The list of tasks.\n        failures:\n          allOf:\n            - $ref: '#/components/schemas/Failures'\n            - description: Any failures associated with the call.\n    DescribeTasksRequest:\n      type: object\n      required:\n        - tasks\n      title: DescribeTasksRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The short name or full Amazon Resource Name (ARN) of the cluster that hosts the task or tasks to describe. If you do not specify a cluster, the default cluster is assumed. This parameter is required if the task or tasks you are describing were launched in any cluster other than the default cluster.'\n        tasks:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: A list of up to 100 task IDs or full ARN entries.\n        include:\n          allOf:\n            - $ref: '#/components/schemas/TaskFieldList'\n            - description: 'Specifies whether you want to see the resource tags for the task. If \u003ccode\u003eTAGS\u003c/code\u003e is specified, the tags are included in the response. If this field is omitted, tags are not included in the response.'\n    DiscoverPollEndpointResponse:\n      type: object\n      properties:\n        endpoint:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The endpoint for the Amazon ECS agent to poll.\n        telemetryEndpoint:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The telemetry endpoint for the Amazon ECS agent.\n    DiscoverPollEndpointRequest:\n      type: object\n      title: DiscoverPollEndpointRequest\n      properties:\n        containerInstance:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The container instance ID or full ARN of the container instance. The ARN contains the \u003ccode\u003earn:aws:ecs\u003c/code\u003e namespace, followed by the Region of the container instance, the Amazon Web Services account ID of the container instance owner, the \u003ccode\u003econtainer-instance\u003c/code\u003e namespace, and then the container instance ID. For example, \u003ccode\u003earn:aws:ecs:region:aws_account_id:container-instance/container_instance_ID\u003c/code\u003e.'\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The short name or full Amazon Resource Name (ARN) of the cluster to which the container instance belongs.\n    ExecuteCommandResponse:\n      type: object\n      properties:\n        clusterArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the cluster.\n        containerArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the container.\n        containerName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the container.\n        interactive:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: 'Whether or not the execute command session is running in interactive mode. Amazon ECS only supports initiating interactive sessions, so you must specify \u003ccode\u003etrue\u003c/code\u003e for this value.'\n        session:\n          allOf:\n            - $ref: '#/components/schemas/Session'\n            - description: The details of the SSM session that was created for this instance of execute-command.\n        taskArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the task.\n    ExecuteCommandRequest:\n      type: object\n      required:\n        - command\n        - interactive\n        - task\n      title: ExecuteCommandRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The Amazon Resource Name (ARN) or short name of the cluster the task is running in. If you do not specify a cluster, the default cluster is assumed.'\n        container:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the container to execute the command on. A container name only needs to be specified for tasks containing multiple containers.\n        command:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The command to run on the container.\n        interactive:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: Use this flag to run your command in interactive mode.\n        task:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) or ID of the task the container is part of.\n    TargetNotConnectedException: {}\n    ListAccountSettingsResponse:\n      type: object\n      example:\n        settings:\n          - name: containerInstanceLongArnFormat\n            value: disabled\n            principalArn: 'arn:aws:iam::\u003caws_account_id\u003e:user/principalName'\n          - name: serviceLongArnFormat\n            value: enabled\n            principalArn: 'arn:aws:iam::\u003caws_account_id\u003e:user/principalName'\n          - name: taskLongArnFormat\n            value: disabled\n            principalArn: 'arn:aws:iam::\u003caws_account_id\u003e:user/principalName'\n      properties:\n        settings:\n          allOf:\n            - $ref: '#/components/schemas/Settings'\n            - description: The account settings for the resource.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The \u003ccode\u003enextToken\u003c/code\u003e value to include in a future \u003ccode\u003eListAccountSettings\u003c/code\u003e request. When the results of a \u003ccode\u003eListAccountSettings\u003c/code\u003e request exceed \u003ccode\u003emaxResults\u003c/code\u003e, this value can be used to retrieve the next page of results. This value is \u003ccode\u003enull\u003c/code\u003e when there are no more results to return.'\n    ListAccountSettingsRequest:\n      type: object\n      title: ListAccountSettingsRequest\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/SettingName'\n            - description: The name of the account setting you want to list the settings for.\n        value:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The value of the account settings with which to filter results. You must also specify an account setting name to use this parameter.\n        principalArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe ARN of the principal, which can be an IAM user, IAM role, or the root user. If this field is omitted, the account settings are listed only for the authenticated user.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eFederated users assume the account setting of the root user and can''t have explicit account settings set for them.\u003c/p\u003e \u003c/note\u003e'\n        effectiveSettings:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: 'Specifies whether to return the effective settings. If \u003ccode\u003etrue\u003c/code\u003e, the account settings for the root user or the default setting for the \u003ccode\u003eprincipalArn\u003c/code\u003e are returned. If \u003ccode\u003efalse\u003c/code\u003e, the account settings for the \u003ccode\u003eprincipalArn\u003c/code\u003e are returned if they are set. Otherwise, no account settings are returned.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe \u003ccode\u003enextToken\u003c/code\u003e value returned from a \u003ccode\u003eListAccountSettings\u003c/code\u003e request indicating that more results are available to fulfill the request and further calls will be needed. If \u003ccode\u003emaxResults\u003c/code\u003e was provided, it is possible the number of results to be fewer than \u003ccode\u003emaxResults\u003c/code\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.\u003c/p\u003e \u003c/note\u003e'\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: 'The maximum number of account setting results returned by \u003ccode\u003eListAccountSettings\u003c/code\u003e in paginated output. When this parameter is used, \u003ccode\u003eListAccountSettings\u003c/code\u003e only returns \u003ccode\u003emaxResults\u003c/code\u003e results in a single page along with a \u003ccode\u003enextToken\u003c/code\u003e response element. The remaining results of the initial request can be seen by sending another \u003ccode\u003eListAccountSettings\u003c/code\u003e request with the returned \u003ccode\u003enextToken\u003c/code\u003e value. This value can be between 1 and 10. If this parameter is not used, then \u003ccode\u003eListAccountSettings\u003c/code\u003e returns up to 10 results and a \u003ccode\u003enextToken\u003c/code\u003e value if applicable.'\n    ListAttributesResponse:\n      type: object\n      properties:\n        attributes:\n          allOf:\n            - $ref: '#/components/schemas/Attributes'\n            - description: A list of attribute objects that meet the criteria of the request.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The \u003ccode\u003enextToken\u003c/code\u003e value to include in a future \u003ccode\u003eListAttributes\u003c/code\u003e request. When the results of a \u003ccode\u003eListAttributes\u003c/code\u003e request exceed \u003ccode\u003emaxResults\u003c/code\u003e, this value can be used to retrieve the next page of results. This value is \u003ccode\u003enull\u003c/code\u003e when there are no more results to return.'\n    ListAttributesRequest:\n      type: object\n      required:\n        - targetType\n      title: ListAttributesRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The short name or full Amazon Resource Name (ARN) of the cluster to list attributes. If you do not specify a cluster, the default cluster is assumed.'\n        targetType:\n          allOf:\n            - $ref: '#/components/schemas/TargetType'\n            - description: The type of the target with which to list attributes.\n        attributeName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The name of the attribute with which to filter the results. '\n        attributeValue:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The value of the attribute with which to filter results. You must also specify an attribute name to use this parameter.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe \u003ccode\u003enextToken\u003c/code\u003e value returned from a \u003ccode\u003eListAttributes\u003c/code\u003e request indicating that more results are available to fulfill the request and further calls will be needed. If \u003ccode\u003emaxResults\u003c/code\u003e was provided, it is possible the number of results to be fewer than \u003ccode\u003emaxResults\u003c/code\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.\u003c/p\u003e \u003c/note\u003e'\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: 'The maximum number of cluster results returned by \u003ccode\u003eListAttributes\u003c/code\u003e in paginated output. When this parameter is used, \u003ccode\u003eListAttributes\u003c/code\u003e only returns \u003ccode\u003emaxResults\u003c/code\u003e results in a single page along with a \u003ccode\u003enextToken\u003c/code\u003e response element. The remaining results of the initial request can be seen by sending another \u003ccode\u003eListAttributes\u003c/code\u003e request with the returned \u003ccode\u003enextToken\u003c/code\u003e value. This value can be between 1 and 100. If this parameter is not used, then \u003ccode\u003eListAttributes\u003c/code\u003e returns up to 100 results and a \u003ccode\u003enextToken\u003c/code\u003e value if applicable.'\n    ListClustersResponse:\n      type: object\n      example:\n        clusterArns:\n          - 'arn:aws:ecs:us-east-1:\u003caws_account_id\u003e:cluster/test'\n          - 'arn:aws:ecs:us-east-1:\u003caws_account_id\u003e:cluster/default'\n      properties:\n        clusterArns:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: The list of full Amazon Resource Name (ARN) entries for each cluster associated with your account.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The \u003ccode\u003enextToken\u003c/code\u003e value to include in a future \u003ccode\u003eListClusters\u003c/code\u003e request. When the results of a \u003ccode\u003eListClusters\u003c/code\u003e request exceed \u003ccode\u003emaxResults\u003c/code\u003e, this value can be used to retrieve the next page of results. This value is \u003ccode\u003enull\u003c/code\u003e when there are no more results to return.'\n    ListClustersRequest:\n      type: object\n      title: ListClustersRequest\n      properties:\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe \u003ccode\u003enextToken\u003c/code\u003e value returned from a \u003ccode\u003eListClusters\u003c/code\u003e request indicating that more results are available to fulfill the request and further calls will be needed. If \u003ccode\u003emaxResults\u003c/code\u003e was provided, it is possible the number of results to be fewer than \u003ccode\u003emaxResults\u003c/code\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.\u003c/p\u003e \u003c/note\u003e'\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: 'The maximum number of cluster results returned by \u003ccode\u003eListClusters\u003c/code\u003e in paginated output. When this parameter is used, \u003ccode\u003eListClusters\u003c/code\u003e only returns \u003ccode\u003emaxResults\u003c/code\u003e results in a single page along with a \u003ccode\u003enextToken\u003c/code\u003e response element. The remaining results of the initial request can be seen by sending another \u003ccode\u003eListClusters\u003c/code\u003e request with the returned \u003ccode\u003enextToken\u003c/code\u003e value. This value can be between 1 and 100. If this parameter is not used, then \u003ccode\u003eListClusters\u003c/code\u003e returns up to 100 results and a \u003ccode\u003enextToken\u003c/code\u003e value if applicable.'\n    ListContainerInstancesResponse:\n      type: object\n      example:\n        containerInstanceArns:\n          - 'arn:aws:ecs:us-east-1:\u003caws_account_id\u003e:container-instance/f6bbb147-5370-4ace-8c73-c7181ded911f'\n          - 'arn:aws:ecs:us-east-1:\u003caws_account_id\u003e:container-instance/ffe3d344-77e2-476c-a4d0-bf560ad50acb'\n      properties:\n        containerInstanceArns:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: The list of container instances with full ARN entries for each container instance associated with the specified cluster.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The \u003ccode\u003enextToken\u003c/code\u003e value to include in a future \u003ccode\u003eListContainerInstances\u003c/code\u003e request. When the results of a \u003ccode\u003eListContainerInstances\u003c/code\u003e request exceed \u003ccode\u003emaxResults\u003c/code\u003e, this value can be used to retrieve the next page of results. This value is \u003ccode\u003enull\u003c/code\u003e when there are no more results to return.'\n    ListContainerInstancesRequest:\n      type: object\n      title: ListContainerInstancesRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The short name or full Amazon Resource Name (ARN) of the cluster that hosts the container instances to list. If you do not specify a cluster, the default cluster is assumed.'\n        filter:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'You can filter the results of a \u003ccode\u003eListContainerInstances\u003c/code\u003e operation with cluster query language statements. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html\"\u003eCluster Query Language\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe \u003ccode\u003enextToken\u003c/code\u003e value returned from a \u003ccode\u003eListContainerInstances\u003c/code\u003e request indicating that more results are available to fulfill the request and further calls will be needed. If \u003ccode\u003emaxResults\u003c/code\u003e was provided, it is possible the number of results to be fewer than \u003ccode\u003emaxResults\u003c/code\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.\u003c/p\u003e \u003c/note\u003e'\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: 'The maximum number of container instance results returned by \u003ccode\u003eListContainerInstances\u003c/code\u003e in paginated output. When this parameter is used, \u003ccode\u003eListContainerInstances\u003c/code\u003e only returns \u003ccode\u003emaxResults\u003c/code\u003e results in a single page along with a \u003ccode\u003enextToken\u003c/code\u003e response element. The remaining results of the initial request can be seen by sending another \u003ccode\u003eListContainerInstances\u003c/code\u003e request with the returned \u003ccode\u003enextToken\u003c/code\u003e value. This value can be between 1 and 100. If this parameter is not used, then \u003ccode\u003eListContainerInstances\u003c/code\u003e returns up to 100 results and a \u003ccode\u003enextToken\u003c/code\u003e value if applicable.'\n        status:\n          allOf:\n            - $ref: '#/components/schemas/ContainerInstanceStatus'\n            - description: 'Filters the container instances by status. For example, if you specify the \u003ccode\u003eDRAINING\u003c/code\u003e status, the results include only container instances that have been set to \u003ccode\u003eDRAINING\u003c/code\u003e using \u003ca\u003eUpdateContainerInstancesState\u003c/a\u003e. If you do not specify this parameter, the default is to include container instances set to all states other than \u003ccode\u003eINACTIVE\u003c/code\u003e.'\n    ListServicesResponse:\n      type: object\n      example:\n        serviceArns:\n          - 'arn:aws:ecs:us-east-1:012345678910:service/my-http-service'\n      properties:\n        serviceArns:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: The list of full ARN entries for each service associated with the specified cluster.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The \u003ccode\u003enextToken\u003c/code\u003e value to include in a future \u003ccode\u003eListServices\u003c/code\u003e request. When the results of a \u003ccode\u003eListServices\u003c/code\u003e request exceed \u003ccode\u003emaxResults\u003c/code\u003e, this value can be used to retrieve the next page of results. This value is \u003ccode\u003enull\u003c/code\u003e when there are no more results to return.'\n    ListServicesRequest:\n      type: object\n      title: ListServicesRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The short name or full Amazon Resource Name (ARN) of the cluster to use when filtering the \u003ccode\u003eListServices\u003c/code\u003e results. If you do not specify a cluster, the default cluster is assumed.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe \u003ccode\u003enextToken\u003c/code\u003e value returned from a \u003ccode\u003eListServices\u003c/code\u003e request indicating that more results are available to fulfill the request and further calls will be needed. If \u003ccode\u003emaxResults\u003c/code\u003e was provided, it is possible the number of results to be fewer than \u003ccode\u003emaxResults\u003c/code\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.\u003c/p\u003e \u003c/note\u003e'\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: 'The maximum number of service results returned by \u003ccode\u003eListServices\u003c/code\u003e in paginated output. When this parameter is used, \u003ccode\u003eListServices\u003c/code\u003e only returns \u003ccode\u003emaxResults\u003c/code\u003e results in a single page along with a \u003ccode\u003enextToken\u003c/code\u003e response element. The remaining results of the initial request can be seen by sending another \u003ccode\u003eListServices\u003c/code\u003e request with the returned \u003ccode\u003enextToken\u003c/code\u003e value. This value can be between 1 and 100. If this parameter is not used, then \u003ccode\u003eListServices\u003c/code\u003e returns up to 10 results and a \u003ccode\u003enextToken\u003c/code\u003e value if applicable.'\n        launchType:\n          allOf:\n            - $ref: '#/components/schemas/LaunchType'\n            - description: The launch type to use when filtering the \u003ccode\u003eListServices\u003c/code\u003e results.\n        schedulingStrategy:\n          allOf:\n            - $ref: '#/components/schemas/SchedulingStrategy'\n            - description: The scheduling strategy to use when filtering the \u003ccode\u003eListServices\u003c/code\u003e results.\n    ListTagsForResourceResponse:\n      type: object\n      example:\n        tags:\n          - key: team\n            value: dev\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: The tags for the resource.\n    ListTagsForResourceRequest:\n      type: object\n      required:\n        - resourceArn\n      title: ListTagsForResourceRequest\n      properties:\n        resourceArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the supported resources are Amazon ECS tasks, services, task definitions, clusters, and container instances.'\n    ListTaskDefinitionFamiliesResponse:\n      type: object\n      example:\n        families:\n          - hpcc\n          - hpcc-c4-8xlarge\n      properties:\n        families:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: The list of task definition family names that match the \u003ccode\u003eListTaskDefinitionFamilies\u003c/code\u003e request.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The \u003ccode\u003enextToken\u003c/code\u003e value to include in a future \u003ccode\u003eListTaskDefinitionFamilies\u003c/code\u003e request. When the results of a \u003ccode\u003eListTaskDefinitionFamilies\u003c/code\u003e request exceed \u003ccode\u003emaxResults\u003c/code\u003e, this value can be used to retrieve the next page of results. This value is \u003ccode\u003enull\u003c/code\u003e when there are no more results to return.'\n    ListTaskDefinitionFamiliesRequest:\n      type: object\n      title: ListTaskDefinitionFamiliesRequest\n      properties:\n        familyPrefix:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The \u003ccode\u003efamilyPrefix\u003c/code\u003e is a string that is used to filter the results of \u003ccode\u003eListTaskDefinitionFamilies\u003c/code\u003e. If you specify a \u003ccode\u003efamilyPrefix\u003c/code\u003e, only task definition family names that begin with the \u003ccode\u003efamilyPrefix\u003c/code\u003e string are returned.'\n        status:\n          allOf:\n            - $ref: '#/components/schemas/TaskDefinitionFamilyStatus'\n            - description: 'The task definition family status with which to filter the \u003ccode\u003eListTaskDefinitionFamilies\u003c/code\u003e results. By default, both \u003ccode\u003eACTIVE\u003c/code\u003e and \u003ccode\u003eINACTIVE\u003c/code\u003e task definition families are listed. If this parameter is set to \u003ccode\u003eACTIVE\u003c/code\u003e, only task definition families that have an \u003ccode\u003eACTIVE\u003c/code\u003e task definition revision are returned. If this parameter is set to \u003ccode\u003eINACTIVE\u003c/code\u003e, only task definition families that do not have any \u003ccode\u003eACTIVE\u003c/code\u003e task definition revisions are returned. If you paginate the resulting output, be sure to keep the \u003ccode\u003estatus\u003c/code\u003e value constant in each subsequent request.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe \u003ccode\u003enextToken\u003c/code\u003e value returned from a \u003ccode\u003eListTaskDefinitionFamilies\u003c/code\u003e request indicating that more results are available to fulfill the request and further calls will be needed. If \u003ccode\u003emaxResults\u003c/code\u003e was provided, it is possible the number of results to be fewer than \u003ccode\u003emaxResults\u003c/code\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.\u003c/p\u003e \u003c/note\u003e'\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: 'The maximum number of task definition family results returned by \u003ccode\u003eListTaskDefinitionFamilies\u003c/code\u003e in paginated output. When this parameter is used, \u003ccode\u003eListTaskDefinitions\u003c/code\u003e only returns \u003ccode\u003emaxResults\u003c/code\u003e results in a single page along with a \u003ccode\u003enextToken\u003c/code\u003e response element. The remaining results of the initial request can be seen by sending another \u003ccode\u003eListTaskDefinitionFamilies\u003c/code\u003e request with the returned \u003ccode\u003enextToken\u003c/code\u003e value. This value can be between 1 and 100. If this parameter is not used, then \u003ccode\u003eListTaskDefinitionFamilies\u003c/code\u003e returns up to 100 results and a \u003ccode\u003enextToken\u003c/code\u003e value if applicable.'\n    ListTaskDefinitionsResponse:\n      type: object\n      example:\n        taskDefinitionArns:\n          - 'arn:aws:ecs:us-east-1:\u003caws_account_id\u003e:task-definition/wordpress:3'\n          - 'arn:aws:ecs:us-east-1:\u003caws_account_id\u003e:task-definition/wordpress:4'\n          - 'arn:aws:ecs:us-east-1:\u003caws_account_id\u003e:task-definition/wordpress:5'\n          - 'arn:aws:ecs:us-east-1:\u003caws_account_id\u003e:task-definition/wordpress:6'\n      properties:\n        taskDefinitionArns:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: The list of task definition Amazon Resource Name (ARN) entries for the \u003ccode\u003eListTaskDefinitions\u003c/code\u003e request.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The \u003ccode\u003enextToken\u003c/code\u003e value to include in a future \u003ccode\u003eListTaskDefinitions\u003c/code\u003e request. When the results of a \u003ccode\u003eListTaskDefinitions\u003c/code\u003e request exceed \u003ccode\u003emaxResults\u003c/code\u003e, this value can be used to retrieve the next page of results. This value is \u003ccode\u003enull\u003c/code\u003e when there are no more results to return.'\n    ListTaskDefinitionsRequest:\n      type: object\n      title: ListTaskDefinitionsRequest\n      properties:\n        familyPrefix:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The full family name with which to filter the \u003ccode\u003eListTaskDefinitions\u003c/code\u003e results. Specifying a \u003ccode\u003efamilyPrefix\u003c/code\u003e limits the listed task definitions to task definition revisions that belong to that family.\n        status:\n          allOf:\n            - $ref: '#/components/schemas/TaskDefinitionStatus'\n            - description: 'The task definition status with which to filter the \u003ccode\u003eListTaskDefinitions\u003c/code\u003e results. By default, only \u003ccode\u003eACTIVE\u003c/code\u003e task definitions are listed. By setting this parameter to \u003ccode\u003eINACTIVE\u003c/code\u003e, you can view task definitions that are \u003ccode\u003eINACTIVE\u003c/code\u003e as long as an active task or service still references them. If you paginate the resulting output, be sure to keep the \u003ccode\u003estatus\u003c/code\u003e value constant in each subsequent request.'\n        sort:\n          allOf:\n            - $ref: '#/components/schemas/SortOrder'\n            - description: 'The order in which to sort the results. Valid values are \u003ccode\u003eASC\u003c/code\u003e and \u003ccode\u003eDESC\u003c/code\u003e. By default (\u003ccode\u003eASC\u003c/code\u003e), task definitions are listed lexicographically by family name and in ascending numerical order by revision so that the newest task definitions in a family are listed last. Setting this parameter to \u003ccode\u003eDESC\u003c/code\u003e reverses the sort order on family name and revision so that the newest task definitions in a family are listed first.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe \u003ccode\u003enextToken\u003c/code\u003e value returned from a \u003ccode\u003eListTaskDefinitions\u003c/code\u003e request indicating that more results are available to fulfill the request and further calls will be needed. If \u003ccode\u003emaxResults\u003c/code\u003e was provided, it is possible the number of results to be fewer than \u003ccode\u003emaxResults\u003c/code\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.\u003c/p\u003e \u003c/note\u003e'\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: 'The maximum number of task definition results returned by \u003ccode\u003eListTaskDefinitions\u003c/code\u003e in paginated output. When this parameter is used, \u003ccode\u003eListTaskDefinitions\u003c/code\u003e only returns \u003ccode\u003emaxResults\u003c/code\u003e results in a single page along with a \u003ccode\u003enextToken\u003c/code\u003e response element. The remaining results of the initial request can be seen by sending another \u003ccode\u003eListTaskDefinitions\u003c/code\u003e request with the returned \u003ccode\u003enextToken\u003c/code\u003e value. This value can be between 1 and 100. If this parameter is not used, then \u003ccode\u003eListTaskDefinitions\u003c/code\u003e returns up to 100 results and a \u003ccode\u003enextToken\u003c/code\u003e value if applicable.'\n    ListTasksResponse:\n      type: object\n      example:\n        taskArns:\n          - 'arn:aws:ecs:us-east-1:012345678910:task/0cc43cdb-3bee-4407-9c26-c0e6ea5bee84'\n      properties:\n        taskArns:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: The list of task ARN entries for the \u003ccode\u003eListTasks\u003c/code\u003e request.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The \u003ccode\u003enextToken\u003c/code\u003e value to include in a future \u003ccode\u003eListTasks\u003c/code\u003e request. When the results of a \u003ccode\u003eListTasks\u003c/code\u003e request exceed \u003ccode\u003emaxResults\u003c/code\u003e, this value can be used to retrieve the next page of results. This value is \u003ccode\u003enull\u003c/code\u003e when there are no more results to return.'\n    ListTasksRequest:\n      type: object\n      title: ListTasksRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The short name or full Amazon Resource Name (ARN) of the cluster to use when filtering the \u003ccode\u003eListTasks\u003c/code\u003e results. If you do not specify a cluster, the default cluster is assumed.'\n        containerInstance:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The container instance ID or full ARN of the container instance to use when filtering the \u003ccode\u003eListTasks\u003c/code\u003e results. Specifying a \u003ccode\u003econtainerInstance\u003c/code\u003e limits the results to tasks that belong to that container instance.\n        family:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the task definition family to use when filtering the \u003ccode\u003eListTasks\u003c/code\u003e results. Specifying a \u003ccode\u003efamily\u003c/code\u003e limits the results to tasks that belong to that family.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe \u003ccode\u003enextToken\u003c/code\u003e value returned from a \u003ccode\u003eListTasks\u003c/code\u003e request indicating that more results are available to fulfill the request and further calls will be needed. If \u003ccode\u003emaxResults\u003c/code\u003e was provided, it is possible the number of results to be fewer than \u003ccode\u003emaxResults\u003c/code\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.\u003c/p\u003e \u003c/note\u003e'\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: 'The maximum number of task results returned by \u003ccode\u003eListTasks\u003c/code\u003e in paginated output. When this parameter is used, \u003ccode\u003eListTasks\u003c/code\u003e only returns \u003ccode\u003emaxResults\u003c/code\u003e results in a single page along with a \u003ccode\u003enextToken\u003c/code\u003e response element. The remaining results of the initial request can be seen by sending another \u003ccode\u003eListTasks\u003c/code\u003e request with the returned \u003ccode\u003enextToken\u003c/code\u003e value. This value can be between 1 and 100. If this parameter is not used, then \u003ccode\u003eListTasks\u003c/code\u003e returns up to 100 results and a \u003ccode\u003enextToken\u003c/code\u003e value if applicable.'\n        startedBy:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The \u003ccode\u003estartedBy\u003c/code\u003e value with which to filter the task results. Specifying a \u003ccode\u003estartedBy\u003c/code\u003e value limits the results to tasks that were started with that value.\n        serviceName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the service to use when filtering the \u003ccode\u003eListTasks\u003c/code\u003e results. Specifying a \u003ccode\u003eserviceName\u003c/code\u003e limits the results to tasks that belong to that service.\n        desiredStatus:\n          allOf:\n            - $ref: '#/components/schemas/DesiredStatus'\n            - description: '\u003cp\u003eThe task desired status to use when filtering the \u003ccode\u003eListTasks\u003c/code\u003e results. Specifying a \u003ccode\u003edesiredStatus\u003c/code\u003e of \u003ccode\u003eSTOPPED\u003c/code\u003e limits the results to tasks that Amazon ECS has set the desired status to \u003ccode\u003eSTOPPED\u003c/code\u003e. This can be useful for debugging tasks that are not starting properly or have died or finished. The default status filter is \u003ccode\u003eRUNNING\u003c/code\u003e, which shows tasks that Amazon ECS has set the desired status to \u003ccode\u003eRUNNING\u003c/code\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eAlthough you can filter results based on a desired status of \u003ccode\u003ePENDING\u003c/code\u003e, this does not return any results. Amazon ECS never sets the desired status of a task to that value (only a task''s \u003ccode\u003elastStatus\u003c/code\u003e may have a value of \u003ccode\u003ePENDING\u003c/code\u003e).\u003c/p\u003e \u003c/note\u003e'\n        launchType:\n          allOf:\n            - $ref: '#/components/schemas/LaunchType'\n            - description: The launch type to use when filtering the \u003ccode\u003eListTasks\u003c/code\u003e results.\n    PutAccountSettingResponse:\n      type: object\n      example:\n        setting:\n          name: containerInstanceLongArnFormat\n          value: enabled\n          principalArn: 'arn:aws:iam::\u003caws_account_id\u003e:user/principalName'\n      properties:\n        setting:\n          allOf:\n            - $ref: '#/components/schemas/Setting'\n            - description: The current account setting for a resource.\n    PutAccountSettingRequest:\n      type: object\n      required:\n        - name\n        - value\n      title: PutAccountSettingRequest\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/SettingName'\n            - description: 'The Amazon ECS resource name for which to modify the account setting. If \u003ccode\u003eserviceLongArnFormat\u003c/code\u003e is specified, the ARN for your Amazon ECS services is affected. If \u003ccode\u003etaskLongArnFormat\u003c/code\u003e is specified, the ARN and resource ID for your Amazon ECS tasks is affected. If \u003ccode\u003econtainerInstanceLongArnFormat\u003c/code\u003e is specified, the ARN and resource ID for your Amazon ECS container instances is affected. If \u003ccode\u003eawsvpcTrunking\u003c/code\u003e is specified, the elastic network interface (ENI) limit for your Amazon ECS container instances is affected. If \u003ccode\u003econtainerInsights\u003c/code\u003e is specified, the default setting for CloudWatch Container Insights for your clusters is affected.'\n        value:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The account setting value for the specified principal ARN. Accepted values are \u003ccode\u003eenabled\u003c/code\u003e and \u003ccode\u003edisabled\u003c/code\u003e.\n        principalArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe ARN of the principal, which can be an IAM user, IAM role, or the root user. If you specify the root user, it modifies the account setting for all IAM users, IAM roles, and the root user of the account unless an IAM user or role explicitly overrides these settings. If this field is omitted, the setting is changed only for the authenticated user.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eFederated users assume the account setting of the root user and can''t have explicit account settings set for them.\u003c/p\u003e \u003c/note\u003e'\n    PutAccountSettingDefaultResponse:\n      type: object\n      example:\n        setting:\n          name: serviceLongArnFormat\n          value: enabled\n          principalArn: 'arn:aws:iam::\u003caws_account_id\u003e:root'\n      properties:\n        setting:\n          allOf:\n            - $ref: '#/components/schemas/Setting'\n            - description: The current setting for a resource.\n    PutAccountSettingDefaultRequest:\n      type: object\n      required:\n        - name\n        - value\n      title: PutAccountSettingDefaultRequest\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/SettingName'\n            - description: 'The resource name for which to modify the account setting. If \u003ccode\u003eserviceLongArnFormat\u003c/code\u003e is specified, the ARN for your Amazon ECS services is affected. If \u003ccode\u003etaskLongArnFormat\u003c/code\u003e is specified, the ARN and resource ID for your Amazon ECS tasks is affected. If \u003ccode\u003econtainerInstanceLongArnFormat\u003c/code\u003e is specified, the ARN and resource ID for your Amazon ECS container instances is affected. If \u003ccode\u003eawsvpcTrunking\u003c/code\u003e is specified, the ENI limit for your Amazon ECS container instances is affected. If \u003ccode\u003econtainerInsights\u003c/code\u003e is specified, the default setting for CloudWatch Container Insights for your clusters is affected.'\n        value:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The account setting value for the specified principal ARN. Accepted values are \u003ccode\u003eenabled\u003c/code\u003e and \u003ccode\u003edisabled\u003c/code\u003e.\n    PutAttributesResponse:\n      type: object\n      properties:\n        attributes:\n          allOf:\n            - $ref: '#/components/schemas/Attributes'\n            - description: The attributes applied to your resource.\n    PutAttributesRequest:\n      type: object\n      required:\n        - attributes\n      title: PutAttributesRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The short name or full Amazon Resource Name (ARN) of the cluster that contains the resource to apply attributes. If you do not specify a cluster, the default cluster is assumed.'\n        attributes:\n          allOf:\n            - $ref: '#/components/schemas/Attributes'\n            - description: The attributes to apply to your resource. You can specify up to 10 custom attributes per resource. You can specify up to 10 attributes in a single call.\n    AttributeLimitExceededException: {}\n    PutClusterCapacityProvidersResponse:\n      type: object\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/Cluster'\n            - description: Details about the cluster.\n    PutClusterCapacityProvidersRequest:\n      type: object\n      required:\n        - cluster\n        - capacityProviders\n        - defaultCapacityProviderStrategy\n      title: PutClusterCapacityProvidersRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The short name or full Amazon Resource Name (ARN) of the cluster to modify the capacity provider settings for. If you do not specify a cluster, the default cluster is assumed.'\n        capacityProviders:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: '\u003cp\u003eThe name of one or more capacity providers to associate with the cluster.\u003c/p\u003e \u003cp\u003eIf specifying a capacity provider that uses an Auto Scaling group, the capacity provider must already be created. New capacity providers can be created with the \u003ca\u003eCreateCapacityProvider\u003c/a\u003e API operation.\u003c/p\u003e \u003cp\u003eTo use a Fargate capacity provider, specify either the \u003ccode\u003eFARGATE\u003c/code\u003e or \u003ccode\u003eFARGATE_SPOT\u003c/code\u003e capacity providers. The Fargate capacity providers are available to all accounts and only need to be associated with a cluster to be used.\u003c/p\u003e'\n        defaultCapacityProviderStrategy:\n          allOf:\n            - $ref: '#/components/schemas/CapacityProviderStrategy'\n            - description: '\u003cp\u003eThe capacity provider strategy to use by default for the cluster.\u003c/p\u003e \u003cp\u003eWhen creating a service or running a task on a cluster, if no capacity provider or launch type is specified then the default capacity provider strategy for the cluster is used.\u003c/p\u003e \u003cp\u003eA capacity provider strategy consists of one or more capacity providers along with the \u003ccode\u003ebase\u003c/code\u003e and \u003ccode\u003eweight\u003c/code\u003e to assign to them. A capacity provider must be associated with the cluster to be used in a capacity provider strategy. The \u003ca\u003ePutClusterCapacityProviders\u003c/a\u003e API is used to associate a capacity provider with a cluster. Only capacity providers with an \u003ccode\u003eACTIVE\u003c/code\u003e or \u003ccode\u003eUPDATING\u003c/code\u003e status can be used.\u003c/p\u003e \u003cp\u003eIf specifying a capacity provider that uses an Auto Scaling group, the capacity provider must already be created. New capacity providers can be created with the \u003ca\u003eCreateCapacityProvider\u003c/a\u003e API operation.\u003c/p\u003e \u003cp\u003eTo use a Fargate capacity provider, specify either the \u003ccode\u003eFARGATE\u003c/code\u003e or \u003ccode\u003eFARGATE_SPOT\u003c/code\u003e capacity providers. The Fargate capacity providers are available to all accounts and only need to be associated with a cluster to be used.\u003c/p\u003e'\n    ResourceInUseException: {}\n    RegisterContainerInstanceResponse:\n      type: object\n      properties:\n        containerInstance:\n          allOf:\n            - $ref: '#/components/schemas/ContainerInstance'\n            - description: The container instance that was registered.\n    RegisterContainerInstanceRequest:\n      type: object\n      title: RegisterContainerInstanceRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The short name or full Amazon Resource Name (ARN) of the cluster with which to register your container instance. If you do not specify a cluster, the default cluster is assumed.'\n        instanceIdentityDocument:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The instance identity document for the EC2 instance to register. This document can be found by running the following command from the instance: \u003ccode\u003ecurl http://169.254.169.254/latest/dynamic/instance-identity/document/\u003c/code\u003e '\n        instanceIdentityDocumentSignature:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The instance identity document signature for the EC2 instance to register. This signature can be found by running the following command from the instance: \u003ccode\u003ecurl http://169.254.169.254/latest/dynamic/instance-identity/signature/\u003c/code\u003e '\n        totalResources:\n          allOf:\n            - $ref: '#/components/schemas/Resources'\n            - description: The resources available on the instance.\n        versionInfo:\n          allOf:\n            - $ref: '#/components/schemas/VersionInfo'\n            - description: The version information for the Amazon ECS container agent and Docker daemon running on the container instance.\n        containerInstanceArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ARN of the container instance (if it was previously registered).\n        attributes:\n          allOf:\n            - $ref: '#/components/schemas/Attributes'\n            - description: The container instance attributes that this container instance supports.\n        platformDevices:\n          allOf:\n            - $ref: '#/components/schemas/PlatformDevices'\n            - description: The devices that are available on the container instance. The only supported device type is a GPU.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: '\u003cp\u003eThe metadata that you apply to the container instance to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.\u003c/p\u003e \u003cp\u003eThe following basic restrictions apply to tags:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eMaximum number of tags per resource - 50\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor each resource, each tag key must be unique, and each tag key can have only one value.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum key length - 128 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum value length - 256 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTag keys and values are case-sensitive.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eDo not use \u003ccode\u003eaws:\u003c/code\u003e, \u003ccode\u003eAWS:\u003c/code\u003e, or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n    RegisterTaskDefinitionResponse:\n      type: object\n      example:\n        taskDefinition:\n          containerDefinitions:\n            - name: sleep\n              command:\n                - sleep\n                - '360'\n              cpu: 10\n              environment: []\n              essential: true\n              image: busybox\n              memory: 10\n              mountPoints: []\n              portMappings: []\n              volumesFrom: []\n          family: sleep360\n          revision: 1\n          taskDefinitionArn: 'arn:aws:ecs:us-east-1:\u003caws_account_id\u003e:task-definition/sleep360:19'\n          volumes: []\n      properties:\n        taskDefinition:\n          allOf:\n            - $ref: '#/components/schemas/TaskDefinition'\n            - description: The full description of the registered task definition.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: The list of tags associated with the task definition.\n    RegisterTaskDefinitionRequest:\n      type: object\n      required:\n        - family\n        - containerDefinitions\n      title: RegisterTaskDefinitionRequest\n      properties:\n        family:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'You must specify a \u003ccode\u003efamily\u003c/code\u003e for a task definition, which allows you to track multiple versions of the same task definition. The \u003ccode\u003efamily\u003c/code\u003e is used as a name for your task definition. Up to 255 letters (uppercase and lowercase), numbers, underscores, and hyphens are allowed.'\n        taskRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The short name or full Amazon Resource Name (ARN) of the IAM role that containers in this task can assume. All containers in this task are granted the permissions that are specified in this role. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html\"\u003eIAM Roles for Tasks\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n        executionRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The Amazon Resource Name (ARN) of the task execution role that grants the Amazon ECS container agent permission to make Amazon Web Services API calls on your behalf. The task execution IAM role is required depending on the requirements of your task. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_execution_IAM_role.html\"\u003eAmazon ECS task execution IAM role\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n        networkMode:\n          allOf:\n            - $ref: '#/components/schemas/NetworkMode'\n            - description: '\u003cp\u003eThe Docker networking mode to use for the containers in the task. The valid values are \u003ccode\u003enone\u003c/code\u003e, \u003ccode\u003ebridge\u003c/code\u003e, \u003ccode\u003eawsvpc\u003c/code\u003e, and \u003ccode\u003ehost\u003c/code\u003e. If no network mode is specified, the default is \u003ccode\u003ebridge\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eFor Amazon ECS tasks on Fargate, the \u003ccode\u003eawsvpc\u003c/code\u003e network mode is required. For Amazon ECS tasks on Amazon EC2 Linux instances, any network mode can be used. For Amazon ECS tasks on Amazon EC2 Windows instances, \u003ccode\u003e\u0026lt;default\u0026gt;\u003c/code\u003e or \u003ccode\u003eawsvpc\u003c/code\u003e can be used. If the network mode is set to \u003ccode\u003enone\u003c/code\u003e, you cannot specify port mappings in your container definitions, and the tasks containers do not have external connectivity. The \u003ccode\u003ehost\u003c/code\u003e and \u003ccode\u003eawsvpc\u003c/code\u003e network modes offer the highest networking performance for containers because they use the EC2 network stack instead of the virtualized network stack provided by the \u003ccode\u003ebridge\u003c/code\u003e mode.\u003c/p\u003e \u003cp\u003eWith the \u003ccode\u003ehost\u003c/code\u003e and \u003ccode\u003eawsvpc\u003c/code\u003e network modes, exposed container ports are mapped directly to the corresponding host port (for the \u003ccode\u003ehost\u003c/code\u003e network mode) or the attached elastic network interface port (for the \u003ccode\u003eawsvpc\u003c/code\u003e network mode), so you cannot take advantage of dynamic host port mappings. \u003c/p\u003e \u003cimportant\u003e \u003cp\u003eWhen using the \u003ccode\u003ehost\u003c/code\u003e network mode, you should not run containers using the root user (UID 0). It is considered best practice to use a non-root user.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eIf the network mode is \u003ccode\u003eawsvpc\u003c/code\u003e, the task is allocated an elastic network interface, and you must specify a \u003ca\u003eNetworkConfiguration\u003c/a\u003e value when you create a service or run a task with the task definition. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html\"\u003eTask Networking\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eIf the network mode is \u003ccode\u003ehost\u003c/code\u003e, you cannot run multiple instantiations of the same task on a single container instance when port mappings are used.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.docker.com/engine/reference/run/#network-settings\"\u003eNetwork settings\u003c/a\u003e in the \u003ci\u003eDocker run reference\u003c/i\u003e.\u003c/p\u003e'\n        containerDefinitions:\n          allOf:\n            - $ref: '#/components/schemas/ContainerDefinitions'\n            - description: A list of container definitions in JSON format that describe the different containers that make up your task.\n        volumes:\n          allOf:\n            - $ref: '#/components/schemas/VolumeList'\n            - description: A list of volume definitions in JSON format that containers in your task may use.\n        placementConstraints:\n          allOf:\n            - $ref: '#/components/schemas/TaskDefinitionPlacementConstraints'\n            - description: An array of placement constraint objects to use for the task. You can specify a maximum of 10 constraints per task (this limit includes constraints in the task definition and those specified at runtime).\n        requiresCompatibilities:\n          allOf:\n            - $ref: '#/components/schemas/CompatibilityList'\n            - description: 'The task launch type that Amazon ECS should validate the task definition against. A client exception is returned if the task definition doesn''t validate against the compatibilities specified. If no value is specified, the parameter is omitted from the response.'\n        cpu:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe number of CPU units used by the task. It can be expressed as an integer using CPU units, for example \u003ccode\u003e1024\u003c/code\u003e, or as a string using vCPUs, for example \u003ccode\u003e1 vCPU\u003c/code\u003e or \u003ccode\u003e1 vcpu\u003c/code\u003e, in a task definition. String values are converted to an integer indicating the CPU units when the task definition is registered.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eTask-level CPU and memory parameters are ignored for Windows containers. We recommend specifying container-level resources for Windows containers.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eIf you are using the EC2 launch type, this field is optional. Supported values are between \u003ccode\u003e128\u003c/code\u003e CPU units (\u003ccode\u003e0.125\u003c/code\u003e vCPUs) and \u003ccode\u003e10240\u003c/code\u003e CPU units (\u003ccode\u003e10\u003c/code\u003e vCPUs).\u003c/p\u003e \u003cp\u003eIf you are using the Fargate launch type, this field is required and you must use one of the following values, which determines your range of supported values for the \u003ccode\u003ememory\u003c/code\u003e parameter:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e256 (.25 vCPU) - Available \u003ccode\u003ememory\u003c/code\u003e values: 512 (0.5 GB), 1024 (1 GB), 2048 (2 GB)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e512 (.5 vCPU) - Available \u003ccode\u003ememory\u003c/code\u003e values: 1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e1024 (1 vCPU) - Available \u003ccode\u003ememory\u003c/code\u003e values: 2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e2048 (2 vCPU) - Available \u003ccode\u003ememory\u003c/code\u003e values: Between 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e4096 (4 vCPU) - Available \u003ccode\u003ememory\u003c/code\u003e values: Between 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB)\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        memory:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe amount of memory (in MiB) used by the task. It can be expressed as an integer using MiB, for example \u003ccode\u003e1024\u003c/code\u003e, or as a string using GB, for example \u003ccode\u003e1GB\u003c/code\u003e or \u003ccode\u003e1 GB\u003c/code\u003e, in a task definition. String values are converted to an integer indicating the MiB when the task definition is registered.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eTask-level CPU and memory parameters are ignored for Windows containers. We recommend specifying container-level resources for Windows containers.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eIf using the EC2 launch type, this field is optional.\u003c/p\u003e \u003cp\u003eIf using the Fargate launch type, this field is required and you must use one of the following values, which determines your range of supported values for the \u003ccode\u003ecpu\u003c/code\u003e parameter:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e512 (0.5 GB), 1024 (1 GB), 2048 (2 GB) - Available \u003ccode\u003ecpu\u003c/code\u003e values: 256 (.25 vCPU)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB) - Available \u003ccode\u003ecpu\u003c/code\u003e values: 512 (.5 vCPU)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB) - Available \u003ccode\u003ecpu\u003c/code\u003e values: 1024 (1 vCPU)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eBetween 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB) - Available \u003ccode\u003ecpu\u003c/code\u003e values: 2048 (2 vCPU)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eBetween 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB) - Available \u003ccode\u003ecpu\u003c/code\u003e values: 4096 (4 vCPU)\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: '\u003cp\u003eThe metadata that you apply to the task definition to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.\u003c/p\u003e \u003cp\u003eThe following basic restrictions apply to tags:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eMaximum number of tags per resource - 50\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor each resource, each tag key must be unique, and each tag key can have only one value.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum key length - 128 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum value length - 256 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTag keys and values are case-sensitive.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eDo not use \u003ccode\u003eaws:\u003c/code\u003e, \u003ccode\u003eAWS:\u003c/code\u003e, or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        pidMode:\n          allOf:\n            - $ref: '#/components/schemas/PidMode'\n            - description: '\u003cp\u003eThe process namespace to use for the containers in the task. The valid values are \u003ccode\u003ehost\u003c/code\u003e or \u003ccode\u003etask\u003c/code\u003e. If \u003ccode\u003ehost\u003c/code\u003e is specified, then all containers within the tasks that specified the \u003ccode\u003ehost\u003c/code\u003e PID mode on the same container instance share the same process namespace with the host Amazon EC2 instance. If \u003ccode\u003etask\u003c/code\u003e is specified, all containers within the specified task share the same process namespace. If no value is specified, the default is a private namespace. For more information, see \u003ca href=\"https://docs.docker.com/engine/reference/run/#pid-settings---pid\"\u003ePID settings\u003c/a\u003e in the \u003ci\u003eDocker run reference\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eIf the \u003ccode\u003ehost\u003c/code\u003e PID mode is used, be aware that there is a heightened risk of undesired process namespace expose. For more information, see \u003ca href=\"https://docs.docker.com/engine/security/security/\"\u003eDocker security\u003c/a\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis parameter is not supported for Windows containers or tasks run on Fargate.\u003c/p\u003e \u003c/note\u003e'\n        ipcMode:\n          allOf:\n            - $ref: '#/components/schemas/IpcMode'\n            - description: '\u003cp\u003eThe IPC resource namespace to use for the containers in the task. The valid values are \u003ccode\u003ehost\u003c/code\u003e, \u003ccode\u003etask\u003c/code\u003e, or \u003ccode\u003enone\u003c/code\u003e. If \u003ccode\u003ehost\u003c/code\u003e is specified, then all containers within the tasks that specified the \u003ccode\u003ehost\u003c/code\u003e IPC mode on the same container instance share the same IPC resources with the host Amazon EC2 instance. If \u003ccode\u003etask\u003c/code\u003e is specified, all containers within the specified task share the same IPC resources. If \u003ccode\u003enone\u003c/code\u003e is specified, then IPC resources within the containers of a task are private and not shared with other containers in a task or on the container instance. If no value is specified, then the IPC resource namespace sharing depends on the Docker daemon setting on the container instance. For more information, see \u003ca href=\"https://docs.docker.com/engine/reference/run/#ipc-settings---ipc\"\u003eIPC settings\u003c/a\u003e in the \u003ci\u003eDocker run reference\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eIf the \u003ccode\u003ehost\u003c/code\u003e IPC mode is used, be aware that there is a heightened risk of undesired IPC namespace expose. For more information, see \u003ca href=\"https://docs.docker.com/engine/security/security/\"\u003eDocker security\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eIf you are setting namespaced kernel parameters using \u003ccode\u003esystemControls\u003c/code\u003e for the containers in the task, the following will apply to your IPC resource namespace. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html\"\u003eSystem Controls\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eFor tasks that use the \u003ccode\u003ehost\u003c/code\u003e IPC mode, IPC namespace related \u003ccode\u003esystemControls\u003c/code\u003e are not supported.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor tasks that use the \u003ccode\u003etask\u003c/code\u003e IPC mode, IPC namespace related \u003ccode\u003esystemControls\u003c/code\u003e will apply to all containers within a task.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cnote\u003e \u003cp\u003eThis parameter is not supported for Windows containers or tasks run on Fargate.\u003c/p\u003e \u003c/note\u003e'\n        proxyConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/ProxyConfiguration'\n            - description: '\u003cp\u003eThe configuration details for the App Mesh proxy.\u003c/p\u003e \u003cp\u003eFor tasks hosted on Amazon EC2 instances, the container instances require at least version \u003ccode\u003e1.26.0\u003c/code\u003e of the container agent and at least version \u003ccode\u003e1.26.0-1\u003c/code\u003e of the \u003ccode\u003eecs-init\u003c/code\u003e package to enable a proxy configuration. If your container instances are launched from the Amazon ECS-optimized AMI version \u003ccode\u003e20190301\u003c/code\u003e or later, then they contain the required versions of the container agent and \u003ccode\u003eecs-init\u003c/code\u003e. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-ami-versions.html\"\u003eAmazon ECS-optimized AMI versions\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        inferenceAccelerators:\n          allOf:\n            - $ref: '#/components/schemas/InferenceAccelerators'\n            - description: The Elastic Inference accelerators to use for the containers in the task.\n        ephemeralStorage:\n          allOf:\n            - $ref: '#/components/schemas/EphemeralStorage'\n            - description: '\u003cp\u003eThe amount of ephemeral storage to allocate for the task. This parameter is used to expand the total amount of ephemeral storage available, beyond the default amount, for tasks hosted on Fargate. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/userguide/using_data_volumes.html\"\u003eFargate task storage\u003c/a\u003e in the \u003ci\u003eAmazon ECS User Guide for Fargate\u003c/i\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis parameter is only supported for tasks hosted on Fargate using platform version \u003ccode\u003e1.4.0\u003c/code\u003e or later.\u003c/p\u003e \u003c/note\u003e'\n    RunTaskResponse:\n      type: object\n      example:\n        tasks:\n          - containerInstanceArn: 'arn:aws:ecs:us-east-1:\u003caws_account_id\u003e:container-instance/ffe3d344-77e2-476c-a4d0-bf560ad50acb'\n            containers:\n              - name: sleep\n                containerArn: 'arn:aws:ecs:us-east-1:\u003caws_account_id\u003e:container/58591c8e-be29-4ddf-95aa-ee459d4c59fd'\n                lastStatus: PENDING\n                taskArn: 'arn:aws:ecs:us-east-1:\u003caws_account_id\u003e:task/a9f21ea7-c9f5-44b1-b8e6-b31f50ed33c0'\n            desiredStatus: RUNNING\n            lastStatus: PENDING\n            overrides:\n              containerOverrides:\n                - name: sleep\n            taskArn: 'arn:aws:ecs:us-east-1:\u003caws_account_id\u003e:task/a9f21ea7-c9f5-44b1-b8e6-b31f50ed33c0'\n            taskDefinitionArn: 'arn:aws:ecs:us-east-1:\u003caws_account_id\u003e:task-definition/sleep360:1'\n      properties:\n        tasks:\n          allOf:\n            - $ref: '#/components/schemas/Tasks'\n            - description: A full description of the tasks that were run. The tasks that were successfully placed on your cluster are described here.\n        failures:\n          allOf:\n            - $ref: '#/components/schemas/Failures'\n            - description: Any failures associated with the call.\n    RunTaskRequest:\n      type: object\n      required:\n        - taskDefinition\n      title: RunTaskRequest\n      properties:\n        capacityProviderStrategy:\n          allOf:\n            - $ref: '#/components/schemas/CapacityProviderStrategy'\n            - description: '\u003cp\u003eThe capacity provider strategy to use for the task.\u003c/p\u003e \u003cp\u003eIf a \u003ccode\u003ecapacityProviderStrategy\u003c/code\u003e is specified, the \u003ccode\u003elaunchType\u003c/code\u003e parameter must be omitted. If no \u003ccode\u003ecapacityProviderStrategy\u003c/code\u003e or \u003ccode\u003elaunchType\u003c/code\u003e is specified, the \u003ccode\u003edefaultCapacityProviderStrategy\u003c/code\u003e for the cluster is used.\u003c/p\u003e \u003cp\u003eWhen you use cluster auto scaling, you must specify \u003ccode\u003ecapacityProviderStrategy\u003c/code\u003e and not \u003ccode\u003elaunchType\u003c/code\u003e. \u003c/p\u003e \u003cp\u003eA capacity provider strategy may contain a maximum of 6 capacity providers.\u003c/p\u003e'\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The short name or full Amazon Resource Name (ARN) of the cluster on which to run your task. If you do not specify a cluster, the default cluster is assumed.'\n        count:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: The number of instantiations of the specified task to place on your cluster. You can specify up to 10 tasks per call.\n        enableECSManagedTags:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: 'Specifies whether to enable Amazon ECS managed tags for the task. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html\"\u003eTagging Your Amazon ECS Resources\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n        enableExecuteCommand:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: 'Whether or not to enable the execute command functionality for the containers in this task. If \u003ccode\u003etrue\u003c/code\u003e, this enables execute command functionality on all containers in the task.'\n        group:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The name of the task group to associate with the task. The default value is the family name of the task definition (for example, \u003ccode\u003efamily:my-family-name\u003c/code\u003e).'\n        launchType:\n          allOf:\n            - $ref: '#/components/schemas/LaunchType'\n            - description: '\u003cp\u003eThe infrastructure on which to run your standalone task. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html\"\u003eAmazon ECS launch types\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eFARGATE\u003c/code\u003e launch type runs your tasks on Fargate On-Demand infrastructure.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eFargate Spot infrastructure is available for use but a capacity provider strategy must be used. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/userguide/fargate-capacity-providers.html\"\u003eFargate capacity providers\u003c/a\u003e in the \u003ci\u003eAmazon ECS User Guide for Fargate\u003c/i\u003e.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eThe \u003ccode\u003eEC2\u003c/code\u003e launch type runs your tasks on Amazon EC2 instances registered to your cluster.\u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eEXTERNAL\u003c/code\u003e launch type runs your tasks on your on-premise server or virtual machine (VM) capacity registered to your cluster.\u003c/p\u003e \u003cp\u003eA task can use either a launch type or a capacity provider strategy. If a \u003ccode\u003elaunchType\u003c/code\u003e is specified, the \u003ccode\u003ecapacityProviderStrategy\u003c/code\u003e parameter must be omitted.\u003c/p\u003e \u003cp\u003eWhen you use cluster auto scaling, you must specify \u003ccode\u003ecapacityProviderStrategy\u003c/code\u003e and not \u003ccode\u003elaunchType\u003c/code\u003e. \u003c/p\u003e'\n        networkConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/NetworkConfiguration'\n            - description: 'The network configuration for the task. This parameter is required for task definitions that use the \u003ccode\u003eawsvpc\u003c/code\u003e network mode to receive their own elastic network interface, and it is not supported for other network modes. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html\"\u003eTask networking\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n        overrides:\n          allOf:\n            - $ref: '#/components/schemas/TaskOverride'\n            - description: \u003cp\u003eA list of container overrides in JSON format that specify the name of a container in the specified task definition and the overrides it should receive. You can override the default command for a container (that is specified in the task definition or Docker image) with a \u003ccode\u003ecommand\u003c/code\u003e override. You can also override existing environment variables (that are specified in the task definition or Docker image) on a container or add new environment variables to it with an \u003ccode\u003eenvironment\u003c/code\u003e override.\u003c/p\u003e \u003cp\u003eA total of 8192 characters are allowed for overrides. This limit includes the JSON formatting characters of the override structure.\u003c/p\u003e\n        placementConstraints:\n          allOf:\n            - $ref: '#/components/schemas/PlacementConstraints'\n            - description: An array of placement constraint objects to use for the task. You can specify up to 10 constraints per task (including constraints in the task definition and those specified at runtime).\n        placementStrategy:\n          allOf:\n            - $ref: '#/components/schemas/PlacementStrategies'\n            - description: The placement strategy objects to use for the task. You can specify a maximum of 5 strategy rules per task.\n        platformVersion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The platform version the task should use. A platform version is only specified for tasks hosted on Fargate. If one is not specified, the \u003ccode\u003eLATEST\u003c/code\u003e platform version is used by default. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html\"\u003eFargate platform versions\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n        propagateTags:\n          allOf:\n            - $ref: '#/components/schemas/PropagateTags'\n            - description: '\u003cp\u003eSpecifies whether to propagate the tags from the task definition to the task. If no value is specified, the tags are not propagated. Tags can only be propagated to the task during task creation. To add tags to a task after task creation, use the \u003ca\u003eTagResource\u003c/a\u003e API action.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eAn error will be received if you specify the \u003ccode\u003eSERVICE\u003c/code\u003e option when running a task.\u003c/p\u003e \u003c/note\u003e'\n        referenceId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The reference ID to use for the task. The reference ID can have a maximum length of 1024 characters.\n        startedBy:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eAn optional tag specified when a task is started. For example, if you automatically trigger a task to run a batch process job, you could apply a unique identifier for that job to your task with the \u003ccode\u003estartedBy\u003c/code\u003e parameter. You can then identify which tasks belong to that job by filtering the results of a \u003ca\u003eListTasks\u003c/a\u003e call with the \u003ccode\u003estartedBy\u003c/code\u003e value. Up to 36 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed.\u003c/p\u003e \u003cp\u003eIf a task is started by an Amazon ECS service, then the \u003ccode\u003estartedBy\u003c/code\u003e parameter contains the deployment ID of the service that starts it.\u003c/p\u003e'\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: '\u003cp\u003eThe metadata that you apply to the task to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.\u003c/p\u003e \u003cp\u003eThe following basic restrictions apply to tags:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eMaximum number of tags per resource - 50\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor each resource, each tag key must be unique, and each tag key can have only one value.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum key length - 128 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum value length - 256 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTag keys and values are case-sensitive.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eDo not use \u003ccode\u003eaws:\u003c/code\u003e, \u003ccode\u003eAWS:\u003c/code\u003e, or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        taskDefinition:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The \u003ccode\u003efamily\u003c/code\u003e and \u003ccode\u003erevision\u003c/code\u003e (\u003ccode\u003efamily:revision\u003c/code\u003e) or full ARN of the task definition to run. If a \u003ccode\u003erevision\u003c/code\u003e is not specified, the latest \u003ccode\u003eACTIVE\u003c/code\u003e revision is used.'\n    BlockedException: {}\n    StartTaskResponse:\n      type: object\n      properties:\n        tasks:\n          allOf:\n            - $ref: '#/components/schemas/Tasks'\n            - description: A full description of the tasks that were started. Each task that was successfully placed on your container instances is described.\n        failures:\n          allOf:\n            - $ref: '#/components/schemas/Failures'\n            - description: Any failures associated with the call.\n    StartTaskRequest:\n      type: object\n      required:\n        - containerInstances\n        - taskDefinition\n      title: StartTaskRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The short name or full Amazon Resource Name (ARN) of the cluster on which to start your task. If you do not specify a cluster, the default cluster is assumed.'\n        containerInstances:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: The container instance IDs or full ARN entries for the container instances on which you would like to place your task. You can specify up to 10 container instances.\n        enableECSManagedTags:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: 'Specifies whether to enable Amazon ECS managed tags for the task. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html\"\u003eTagging Your Amazon ECS Resources\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n        enableExecuteCommand:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: 'Whether or not the execute command functionality is enabled for the task. If \u003ccode\u003etrue\u003c/code\u003e, this enables execute command functionality on all containers in the task.'\n        group:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The name of the task group to associate with the task. The default value is the family name of the task definition (for example, family:my-family-name).'\n        networkConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/NetworkConfiguration'\n            - description: The VPC subnet and security group configuration for tasks that receive their own elastic network interface by using the \u003ccode\u003eawsvpc\u003c/code\u003e networking mode.\n        overrides:\n          allOf:\n            - $ref: '#/components/schemas/TaskOverride'\n            - description: \u003cp\u003eA list of container overrides in JSON format that specify the name of a container in the specified task definition and the overrides it should receive. You can override the default command for a container (that is specified in the task definition or Docker image) with a \u003ccode\u003ecommand\u003c/code\u003e override. You can also override existing environment variables (that are specified in the task definition or Docker image) on a container or add new environment variables to it with an \u003ccode\u003eenvironment\u003c/code\u003e override.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eA total of 8192 characters are allowed for overrides. This limit includes the JSON formatting characters of the override structure.\u003c/p\u003e \u003c/note\u003e\n        propagateTags:\n          allOf:\n            - $ref: '#/components/schemas/PropagateTags'\n            - description: 'Specifies whether to propagate the tags from the task definition or the service to the task. If no value is specified, the tags are not propagated.'\n        referenceId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The reference ID to use for the task.\n        startedBy:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eAn optional tag specified when a task is started. For example, if you automatically trigger a task to run a batch process job, you could apply a unique identifier for that job to your task with the \u003ccode\u003estartedBy\u003c/code\u003e parameter. You can then identify which tasks belong to that job by filtering the results of a \u003ca\u003eListTasks\u003c/a\u003e call with the \u003ccode\u003estartedBy\u003c/code\u003e value. Up to 36 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed.\u003c/p\u003e \u003cp\u003eIf a task is started by an Amazon ECS service, then the \u003ccode\u003estartedBy\u003c/code\u003e parameter contains the deployment ID of the service that starts it.\u003c/p\u003e'\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: '\u003cp\u003eThe metadata that you apply to the task to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.\u003c/p\u003e \u003cp\u003eThe following basic restrictions apply to tags:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eMaximum number of tags per resource - 50\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor each resource, each tag key must be unique, and each tag key can have only one value.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum key length - 128 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum value length - 256 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTag keys and values are case-sensitive.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eDo not use \u003ccode\u003eaws:\u003c/code\u003e, \u003ccode\u003eAWS:\u003c/code\u003e, or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        taskDefinition:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The \u003ccode\u003efamily\u003c/code\u003e and \u003ccode\u003erevision\u003c/code\u003e (\u003ccode\u003efamily:revision\u003c/code\u003e) or full ARN of the task definition to start. If a \u003ccode\u003erevision\u003c/code\u003e is not specified, the latest \u003ccode\u003eACTIVE\u003c/code\u003e revision is used.'\n    StopTaskResponse:\n      type: object\n      properties:\n        task:\n          allOf:\n            - $ref: '#/components/schemas/Task'\n            - description: The task that was stopped.\n    StopTaskRequest:\n      type: object\n      required:\n        - task\n      title: StopTaskRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The short name or full Amazon Resource Name (ARN) of the cluster that hosts the task to stop. If you do not specify a cluster, the default cluster is assumed.'\n        task:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The task ID or full Amazon Resource Name (ARN) of the task to stop.\n        reason:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'An optional message specified when a task is stopped. For example, if you are using a custom scheduler, you can use this parameter to specify the reason for stopping the task here, and the message appears in subsequent \u003ca\u003eDescribeTasks\u003c/a\u003e API operations on this task. Up to 255 characters are allowed in this message.'\n    SubmitAttachmentStateChangesResponse:\n      type: object\n      properties:\n        acknowledgment:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Acknowledgement of the state change.\n    SubmitAttachmentStateChangesRequest:\n      type: object\n      required:\n        - attachments\n      title: SubmitAttachmentStateChangesRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The short name or full ARN of the cluster that hosts the container instance the attachment belongs to.\n        attachments:\n          allOf:\n            - $ref: '#/components/schemas/AttachmentStateChanges'\n            - description: Any attachments associated with the state change request.\n    SubmitContainerStateChangeResponse:\n      type: object\n      properties:\n        acknowledgment:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Acknowledgement of the state change.\n    SubmitContainerStateChangeRequest:\n      type: object\n      title: SubmitContainerStateChangeRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The short name or full ARN of the cluster that hosts the container.\n        task:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The task ID or full Amazon Resource Name (ARN) of the task that hosts the container.\n        containerName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the container.\n        runtimeId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ID of the Docker container.\n        status:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The status of the state change request.\n        exitCode:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: The exit code returned for the state change request.\n        reason:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The reason for the state change request.\n        networkBindings:\n          allOf:\n            - $ref: '#/components/schemas/NetworkBindings'\n            - description: The network bindings of the container.\n    SubmitTaskStateChangeResponse:\n      type: object\n      properties:\n        acknowledgment:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Acknowledgement of the state change.\n    SubmitTaskStateChangeRequest:\n      type: object\n      title: SubmitTaskStateChangeRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The short name or full Amazon Resource Name (ARN) of the cluster that hosts the task.\n        task:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The task ID or full ARN of the task in the state change request.\n        status:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The status of the state change request.\n        reason:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The reason for the state change request.\n        containers:\n          allOf:\n            - $ref: '#/components/schemas/ContainerStateChanges'\n            - description: Any containers associated with the state change request.\n        attachments:\n          allOf:\n            - $ref: '#/components/schemas/AttachmentStateChanges'\n            - description: Any attachments associated with the state change request.\n        managedAgents:\n          allOf:\n            - $ref: '#/components/schemas/ManagedAgentStateChanges'\n            - description: The details for the managed agent associated with the task.\n        pullStartedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix timestamp for when the container image pull began.\n        pullStoppedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix timestamp for when the container image pull completed.\n        executionStoppedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix timestamp for when the task execution stopped.\n    TagResourceResponse:\n      type: object\n      example: {}\n      properties: {}\n    TagResourceRequest:\n      type: object\n      required:\n        - resourceArn\n        - tags\n      title: TagResourceRequest\n      properties:\n        resourceArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The Amazon Resource Name (ARN) of the resource to which to add tags. Currently, the supported resources are Amazon ECS capacity providers, tasks, services, task definitions, clusters, and container instances.'\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: '\u003cp\u003eThe tags to add to the resource. A tag is an array of key-value pairs.\u003c/p\u003e \u003cp\u003eThe following basic restrictions apply to tags:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eMaximum number of tags per resource - 50\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor each resource, each tag key must be unique, and each tag key can have only one value.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum key length - 128 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum value length - 256 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTag keys and values are case-sensitive.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eDo not use \u003ccode\u003eaws:\u003c/code\u003e, \u003ccode\u003eAWS:\u003c/code\u003e, or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n    ResourceNotFoundException: {}\n    UntagResourceResponse:\n      type: object\n      example: {}\n      properties: {}\n    UntagResourceRequest:\n      type: object\n      required:\n        - resourceArn\n        - tagKeys\n      title: UntagResourceRequest\n      properties:\n        resourceArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The Amazon Resource Name (ARN) of the resource from which to delete tags. Currently, the supported resources are Amazon ECS capacity providers, tasks, services, task definitions, clusters, and container instances.'\n        tagKeys:\n          allOf:\n            - $ref: '#/components/schemas/TagKeys'\n            - description: The keys of the tags to be removed.\n    UpdateCapacityProviderResponse:\n      type: object\n      properties:\n        capacityProvider:\n          allOf:\n            - $ref: '#/components/schemas/CapacityProvider'\n            - description: Details about the capacity provider.\n    UpdateCapacityProviderRequest:\n      type: object\n      required:\n        - name\n        - autoScalingGroupProvider\n      title: UpdateCapacityProviderRequest\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the capacity provider to update.\n        autoScalingGroupProvider:\n          allOf:\n            - $ref: '#/components/schemas/AutoScalingGroupProviderUpdate'\n            - description: An object representing the parameters to update for the Auto Scaling group capacity provider.\n    UpdateClusterResponse:\n      type: object\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/Cluster'\n            - description: Details about the cluster.\n    UpdateClusterRequest:\n      type: object\n      required:\n        - cluster\n      title: UpdateClusterRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the cluster to modify the settings for.\n        settings:\n          allOf:\n            - $ref: '#/components/schemas/ClusterSettings'\n            - description: The cluster settings for your cluster.\n        configuration:\n          allOf:\n            - $ref: '#/components/schemas/ClusterConfiguration'\n            - description: The execute command configuration for the cluster.\n    UpdateClusterSettingsResponse:\n      type: object\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/Cluster'\n            - description: Details about the cluster\n    UpdateClusterSettingsRequest:\n      type: object\n      required:\n        - cluster\n        - settings\n      title: UpdateClusterSettingsRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the cluster to modify the settings for.\n        settings:\n          allOf:\n            - $ref: '#/components/schemas/ClusterSettings'\n            - description: 'The setting to use by default for a cluster. This parameter is used to enable CloudWatch Container Insights for a cluster. If this value is specified, it will override the \u003ccode\u003econtainerInsights\u003c/code\u003e value set with \u003ca\u003ePutAccountSetting\u003c/a\u003e or \u003ca\u003ePutAccountSettingDefault\u003c/a\u003e.'\n    UpdateContainerAgentResponse:\n      type: object\n      properties:\n        containerInstance:\n          allOf:\n            - $ref: '#/components/schemas/ContainerInstance'\n            - description: The container instance for which the container agent was updated.\n    UpdateContainerAgentRequest:\n      type: object\n      required:\n        - containerInstance\n      title: UpdateContainerAgentRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The short name or full Amazon Resource Name (ARN) of the cluster that your container instance is running on. If you do not specify a cluster, the default cluster is assumed.'\n        containerInstance:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The container instance ID or full ARN entries for the container instance on which you would like to update the Amazon ECS container agent.\n    NoUpdateAvailableException: {}\n    MissingVersionException: {}\n    UpdateContainerInstancesStateResponse:\n      type: object\n      properties:\n        containerInstances:\n          allOf:\n            - $ref: '#/components/schemas/ContainerInstances'\n            - description: The list of container instances.\n        failures:\n          allOf:\n            - $ref: '#/components/schemas/Failures'\n            - description: Any failures associated with the call.\n    UpdateContainerInstancesStateRequest:\n      type: object\n      required:\n        - containerInstances\n        - status\n      title: UpdateContainerInstancesStateRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The short name or full Amazon Resource Name (ARN) of the cluster that hosts the container instance to update. If you do not specify a cluster, the default cluster is assumed.'\n        containerInstances:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: A list of container instance IDs or full ARN entries.\n        status:\n          allOf:\n            - $ref: '#/components/schemas/ContainerInstanceStatus'\n            - description: 'The container instance state with which to update the container instance. The only valid values for this action are \u003ccode\u003eACTIVE\u003c/code\u003e and \u003ccode\u003eDRAINING\u003c/code\u003e. A container instance can only be updated to \u003ccode\u003eDRAINING\u003c/code\u003e status once it has reached an \u003ccode\u003eACTIVE\u003c/code\u003e state. If a container instance is in \u003ccode\u003eREGISTERING\u003c/code\u003e, \u003ccode\u003eDEREGISTERING\u003c/code\u003e, or \u003ccode\u003eREGISTRATION_FAILED\u003c/code\u003e state you can describe the container instance but will be unable to update the container instance state.'\n    UpdateServiceResponse:\n      type: object\n      example: {}\n      properties:\n        service:\n          allOf:\n            - $ref: '#/components/schemas/Service'\n            - description: The full description of your service following the update call.\n    UpdateServiceRequest:\n      type: object\n      required:\n        - service\n      title: UpdateServiceRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The short name or full Amazon Resource Name (ARN) of the cluster that your service is running on. If you do not specify a cluster, the default cluster is assumed.'\n        service:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the service to update.\n        desiredCount:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: The number of instantiations of the task to place and keep running in your service.\n        taskDefinition:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The \u003ccode\u003efamily\u003c/code\u003e and \u003ccode\u003erevision\u003c/code\u003e (\u003ccode\u003efamily:revision\u003c/code\u003e) or full ARN of the task definition to run in your service. If a \u003ccode\u003erevision\u003c/code\u003e is not specified, the latest \u003ccode\u003eACTIVE\u003c/code\u003e revision is used. If you modify the task definition with \u003ccode\u003eUpdateService\u003c/code\u003e, Amazon ECS spawns a task with the new version of the task definition and then stops an old task after the new version is running.'\n        capacityProviderStrategy:\n          allOf:\n            - $ref: '#/components/schemas/CapacityProviderStrategy'\n            - description: '\u003cp\u003eThe capacity provider strategy to update the service to use.\u003c/p\u003e \u003cp\u003eIf the service is using the default capacity provider strategy for the cluster, the service can be updated to use one or more capacity providers as opposed to the default capacity provider strategy. However, when a service is using a capacity provider strategy that is not the default capacity provider strategy, the service cannot be updated to use the cluster''s default capacity provider strategy.\u003c/p\u003e \u003cp\u003eA capacity provider strategy consists of one or more capacity providers along with the \u003ccode\u003ebase\u003c/code\u003e and \u003ccode\u003eweight\u003c/code\u003e to assign to them. A capacity provider must be associated with the cluster to be used in a capacity provider strategy. The \u003ca\u003ePutClusterCapacityProviders\u003c/a\u003e API is used to associate a capacity provider with a cluster. Only capacity providers with an \u003ccode\u003eACTIVE\u003c/code\u003e or \u003ccode\u003eUPDATING\u003c/code\u003e status can be used.\u003c/p\u003e \u003cp\u003eIf specifying a capacity provider that uses an Auto Scaling group, the capacity provider must already be created. New capacity providers can be created with the \u003ca\u003eCreateCapacityProvider\u003c/a\u003e API operation.\u003c/p\u003e \u003cp\u003eTo use a Fargate capacity provider, specify either the \u003ccode\u003eFARGATE\u003c/code\u003e or \u003ccode\u003eFARGATE_SPOT\u003c/code\u003e capacity providers. The Fargate capacity providers are available to all accounts and only need to be associated with a cluster to be used.\u003c/p\u003e \u003cp\u003eThe \u003ca\u003ePutClusterCapacityProviders\u003c/a\u003e API operation is used to update the list of available capacity providers for a cluster after the cluster is created.\u003c/p\u003e \u003cp/\u003e'\n        deploymentConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentConfiguration'\n            - description: Optional deployment parameters that control how many tasks run during the deployment and the ordering of stopping and starting tasks.\n        networkConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/NetworkConfiguration'\n            - description: An object representing the network configuration for the service.\n        placementConstraints:\n          allOf:\n            - $ref: '#/components/schemas/PlacementConstraints'\n            - description: '\u003cp\u003eAn array of task placement constraint objects to update the service to use. If no value is specified, the existing placement constraints for the service will remain unchanged. If this value is specified, it will override any existing placement constraints defined for the service. To remove all existing placement constraints, specify an empty array.\u003c/p\u003e \u003cp\u003eYou can specify a maximum of 10 constraints per task (this limit includes constraints in the task definition and those specified at runtime).\u003c/p\u003e'\n        placementStrategy:\n          allOf:\n            - $ref: '#/components/schemas/PlacementStrategies'\n            - description: '\u003cp\u003eThe task placement strategy objects to update the service to use. If no value is specified, the existing placement strategy for the service will remain unchanged. If this value is specified, it will override the existing placement strategy defined for the service. To remove an existing placement strategy, specify an empty object.\u003c/p\u003e \u003cp\u003eYou can specify a maximum of five strategy rules per service.\u003c/p\u003e'\n        platformVersion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The platform version on which your tasks in the service are running. A platform version is only specified for tasks using the Fargate launch type. If a platform version is not specified, the \u003ccode\u003eLATEST\u003c/code\u003e platform version is used by default. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html\"\u003eFargate Platform Versions\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n        forceNewDeployment:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: 'Whether to force a new deployment of the service. Deployments are not forced by default. You can use this option to trigger a new deployment with no service definition changes. For example, you can update a service''s tasks to use a newer Docker image with the same image/tag combination (\u003ccode\u003emy_image:latest\u003c/code\u003e) or to roll Fargate tasks onto a newer platform version.'\n        healthCheckGracePeriodSeconds:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: 'The period of time, in seconds, that the Amazon ECS service scheduler should ignore unhealthy Elastic Load Balancing target health checks after a task has first started. This is only valid if your service is configured to use a load balancer. If your service''s tasks take a while to start and respond to Elastic Load Balancing health checks, you can specify a health check grace period of up to 2,147,483,647 seconds. During that time, the Amazon ECS service scheduler ignores the Elastic Load Balancing health check status. This grace period can prevent the ECS service scheduler from marking tasks as unhealthy and stopping them before they have time to come up.'\n        enableExecuteCommand:\n          allOf:\n            - $ref: '#/components/schemas/BoxedBoolean'\n            - description: '\u003cp\u003eIf \u003ccode\u003etrue\u003c/code\u003e, this enables execute command functionality on all task containers.\u003c/p\u003e \u003cp\u003eIf you do not want to override the value that was set when the service was created, you can set this to \u003ccode\u003enull\u003c/code\u003e when performing this action.\u003c/p\u003e'\n    UpdateServicePrimaryTaskSetResponse:\n      type: object\n      properties:\n        taskSet:\n          allOf:\n            - $ref: '#/components/schemas/TaskSet'\n            - description: Details about the task set.\n    UpdateServicePrimaryTaskSetRequest:\n      type: object\n      required:\n        - cluster\n        - service\n        - primaryTaskSet\n      title: UpdateServicePrimaryTaskSetRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service that the task set exists in.\n        service:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The short name or full Amazon Resource Name (ARN) of the service that the task set exists in.\n        primaryTaskSet:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The short name or full Amazon Resource Name (ARN) of the task set to set as the primary task set in the deployment.\n    UpdateTaskSetResponse:\n      type: object\n      properties:\n        taskSet:\n          allOf:\n            - $ref: '#/components/schemas/TaskSet'\n            - description: Details about the task set.\n    UpdateTaskSetRequest:\n      type: object\n      required:\n        - cluster\n        - service\n        - taskSet\n        - scale\n      title: UpdateTaskSetRequest\n      properties:\n        cluster:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service that the task set exists in.\n        service:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The short name or full Amazon Resource Name (ARN) of the service that the task set exists in.\n        taskSet:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The short name or full Amazon Resource Name (ARN) of the task set to update.\n        scale:\n          allOf:\n            - $ref: '#/components/schemas/Scale'\n            - description: A floating-point percentage of the desired number of tasks to place and keep running in the task set.\n    AgentUpdateStatus:\n      type: string\n      enum:\n        - PENDING\n        - STAGING\n        - STAGED\n        - UPDATING\n        - UPDATED\n        - FAILED\n    AssignPublicIp:\n      type: string\n      enum:\n        - ENABLED\n        - DISABLED\n    String:\n      type: string\n    AttachmentDetails:\n      type: array\n      items:\n        $ref: '#/components/schemas/KeyValuePair'\n    Attachment:\n      type: object\n      properties:\n        id:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The unique identifier for the attachment.\n        type:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The type of the attachment, such as \u003ccode\u003eElasticNetworkInterface\u003c/code\u003e.'\n        status:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: ' The status of the attachment. Valid values are \u003ccode\u003ePRECREATED\u003c/code\u003e, \u003ccode\u003eCREATED\u003c/code\u003e, \u003ccode\u003eATTACHING\u003c/code\u003e, \u003ccode\u003eATTACHED\u003c/code\u003e, \u003ccode\u003eDETACHING\u003c/code\u003e, \u003ccode\u003eDETACHED\u003c/code\u003e, and \u003ccode\u003eDELETED\u003c/code\u003e.'\n        details:\n          allOf:\n            - $ref: '#/components/schemas/AttachmentDetails'\n            - description: 'Details of the attachment. For elastic network interfaces, this includes the network interface ID, the MAC address, the subnet ID, and the private IPv4 address.'\n      description: An object representing a container instance or task attachment.\n    KeyValuePair:\n      type: object\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The name of the key-value pair. For environment variables, this is the name of the environment variable.'\n        value:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The value of the key-value pair. For environment variables, this is the value of the environment variable.'\n      description: A key-value pair object.\n    AttachmentStateChange:\n      type: object\n      required:\n        - attachmentArn\n        - status\n      properties:\n        attachmentArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the attachment.\n        status:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The status of the attachment.\n      description: An object representing a change in state for a task attachment.\n    AttachmentStateChanges:\n      type: array\n      items:\n        $ref: '#/components/schemas/AttachmentStateChange'\n    Attachments:\n      type: array\n      items:\n        $ref: '#/components/schemas/Attachment'\n    TargetType:\n      type: string\n      enum:\n        - container-instance\n    Attribute:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The name of the attribute. The \u003ccode\u003ename\u003c/code\u003e must contain between 1 and 128 characters and name may contain letters (uppercase and lowercase), numbers, hyphens, underscores, forward slashes, back slashes, or periods.'\n        value:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The value of the attribute. The \u003ccode\u003evalue\u003c/code\u003e must contain between 1 and 128 characters and may contain letters (uppercase and lowercase), numbers, hyphens, underscores, periods, at signs (@), forward slashes, back slashes, colons, or spaces. The value cannot contain any leading or trailing whitespace.'\n        targetType:\n          allOf:\n            - $ref: '#/components/schemas/TargetType'\n            - description: The type of the target with which to attach the attribute. This parameter is required if you use the short form ID for a resource instead of the full ARN.\n        targetId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ID of the target. You can specify the short form ID for a resource or the full Amazon Resource Name (ARN).\n      description: 'An attribute is a name-value pair associated with an Amazon ECS object. Attributes enable you to extend the Amazon ECS data model by adding custom metadata to your resources. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html#attributes\"\u003eAttributes\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n    Attributes:\n      type: array\n      items:\n        $ref: '#/components/schemas/Attribute'\n    ManagedScaling:\n      type: object\n      properties:\n        status:\n          allOf:\n            - $ref: '#/components/schemas/ManagedScalingStatus'\n            - description: Whether or not to enable managed scaling for the capacity provider.\n        targetCapacity:\n          allOf:\n            - $ref: '#/components/schemas/ManagedScalingTargetCapacity'\n            - description: The target capacity value for the capacity provider. The specified value must be greater than \u003ccode\u003e0\u003c/code\u003e and less than or equal to \u003ccode\u003e100\u003c/code\u003e. A value of \u003ccode\u003e100\u003c/code\u003e will result in the Amazon EC2 instances in your Auto Scaling group being completely utilized.\n        minimumScalingStepSize:\n          allOf:\n            - $ref: '#/components/schemas/ManagedScalingStepSize'\n            - description: 'The minimum number of container instances that Amazon ECS will scale in or scale out at one time. If this parameter is omitted, the default value of \u003ccode\u003e1\u003c/code\u003e is used.'\n        maximumScalingStepSize:\n          allOf:\n            - $ref: '#/components/schemas/ManagedScalingStepSize'\n            - description: 'The maximum number of container instances that Amazon ECS will scale in or scale out at one time. If this parameter is omitted, the default value of \u003ccode\u003e10000\u003c/code\u003e is used.'\n        instanceWarmupPeriod:\n          allOf:\n            - $ref: '#/components/schemas/ManagedScalingInstanceWarmupPeriod'\n            - description: 'The period of time, in seconds, after a newly launched Amazon EC2 instance can contribute to CloudWatch metrics for Auto Scaling group. If this parameter is omitted, the default value of \u003ccode\u003e300\u003c/code\u003e seconds is used.'\n      description: '\u003cp\u003eThe managed scaling settings for the Auto Scaling group capacity provider.\u003c/p\u003e \u003cp\u003eWhen managed scaling is enabled, Amazon ECS manages the scale-in and scale-out actions of the Auto Scaling group. Amazon ECS manages a target tracking scaling policy using an Amazon ECS-managed CloudWatch metric with the specified \u003ccode\u003etargetCapacity\u003c/code\u003e value as the target value for the metric. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/asg-capacity-providers.html#asg-capacity-providers-managed-scaling\"\u003eUsing Managed Scaling\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eIf managed scaling is disabled, the user must manage the scaling of the Auto Scaling group.\u003c/p\u003e'\n    ManagedTerminationProtection:\n      type: string\n      enum:\n        - ENABLED\n        - DISABLED\n    AutoScalingGroupProvider:\n      type: object\n      required:\n        - autoScalingGroupArn\n      properties:\n        autoScalingGroupArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) that identifies the Auto Scaling group.\n        managedScaling:\n          allOf:\n            - $ref: '#/components/schemas/ManagedScaling'\n            - description: The managed scaling settings for the Auto Scaling group capacity provider.\n        managedTerminationProtection:\n          allOf:\n            - $ref: '#/components/schemas/ManagedTerminationProtection'\n            - description: '\u003cp\u003eThe managed termination protection setting to use for the Auto Scaling group capacity provider. This determines whether the Auto Scaling group has managed termination protection.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eWhen using managed termination protection, managed scaling must also be used otherwise managed termination protection will not work.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eWhen managed termination protection is enabled, Amazon ECS prevents the Amazon EC2 instances in an Auto Scaling group that contain tasks from being terminated during a scale-in action. The Auto Scaling group and each instance in the Auto Scaling group must have instance protection from scale-in actions enabled as well. For more information, see \u003ca href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#instance-protection\"\u003eInstance Protection\u003c/a\u003e in the \u003ci\u003eAuto Scaling User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eWhen managed termination protection is disabled, your Amazon EC2 instances are not protected from termination when the Auto Scaling group scales in.\u003c/p\u003e'\n      description: The details of the Auto Scaling group for the capacity provider.\n    AutoScalingGroupProviderUpdate:\n      type: object\n      properties:\n        managedScaling:\n          allOf:\n            - $ref: '#/components/schemas/ManagedScaling'\n            - description: The managed scaling settings for the Auto Scaling group capacity provider.\n        managedTerminationProtection:\n          allOf:\n            - $ref: '#/components/schemas/ManagedTerminationProtection'\n            - description: '\u003cp\u003eThe managed termination protection setting to use for the Auto Scaling group capacity provider. This determines whether the Auto Scaling group has managed termination protection.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eWhen using managed termination protection, managed scaling must also be used otherwise managed termination protection will not work.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eWhen managed termination protection is enabled, Amazon ECS prevents the Amazon EC2 instances in an Auto Scaling group that contain tasks from being terminated during a scale-in action. The Auto Scaling group and each instance in the Auto Scaling group must have instance protection from scale-in actions enabled as well. For more information, see \u003ca href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#instance-protection\"\u003eInstance Protection\u003c/a\u003e in the \u003ci\u003eAuto Scaling User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eWhen managed termination protection is disabled, your Amazon EC2 instances are not protected from termination when the Auto Scaling group scales in.\u003c/p\u003e'\n      description: The details of the Auto Scaling group capacity provider to update.\n    StringList:\n      type: array\n      items:\n        $ref: '#/components/schemas/String'\n    AwsVpcConfiguration:\n      type: object\n      required:\n        - subnets\n      properties:\n        subnets:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: \u003cp\u003eThe IDs of the subnets associated with the task or service. There is a limit of 16 subnets that can be specified per \u003ccode\u003eAwsVpcConfiguration\u003c/code\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eAll specified subnets must be from the same VPC.\u003c/p\u003e \u003c/note\u003e\n        securityGroups:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: '\u003cp\u003eThe IDs of the security groups associated with the task or service. If you do not specify a security group, the default security group for the VPC is used. There is a limit of 5 security groups that can be specified per \u003ccode\u003eAwsVpcConfiguration\u003c/code\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eAll specified security groups must be from the same VPC.\u003c/p\u003e \u003c/note\u003e'\n        assignPublicIp:\n          allOf:\n            - $ref: '#/components/schemas/AssignPublicIp'\n            - description: Whether the task's elastic network interface receives a public IP address. The default value is \u003ccode\u003eDISABLED\u003c/code\u003e.\n      description: An object representing the networking details for a task or service.\n    Boolean:\n      type: boolean\n    BoxedBoolean:\n      type: boolean\n    BoxedInteger:\n      type: integer\n    CapacityProviderStatus:\n      type: string\n      enum:\n        - ACTIVE\n        - INACTIVE\n    CapacityProviderUpdateStatus:\n      type: string\n      enum:\n        - DELETE_IN_PROGRESS\n        - DELETE_COMPLETE\n        - DELETE_FAILED\n        - UPDATE_IN_PROGRESS\n        - UPDATE_COMPLETE\n        - UPDATE_FAILED\n    Tags:\n      type: array\n      items:\n        $ref: '#/components/schemas/Tag'\n      minItems: 0\n      maxItems: 50\n    CapacityProvider:\n      type: object\n      properties:\n        capacityProviderArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) that identifies the capacity provider.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the capacity provider.\n        status:\n          allOf:\n            - $ref: '#/components/schemas/CapacityProviderStatus'\n            - description: 'The current status of the capacity provider. Only capacity providers in an \u003ccode\u003eACTIVE\u003c/code\u003e state can be used in a cluster. When a capacity provider is successfully deleted, it will have an \u003ccode\u003eINACTIVE\u003c/code\u003e status.'\n        autoScalingGroupProvider:\n          allOf:\n            - $ref: '#/components/schemas/AutoScalingGroupProvider'\n            - description: The Auto Scaling group settings for the capacity provider.\n        updateStatus:\n          allOf:\n            - $ref: '#/components/schemas/CapacityProviderUpdateStatus'\n            - description: \u003cp\u003eThe update status of the capacity provider. The following are the possible states that will be returned.\u003c/p\u003e \u003cdl\u003e \u003cdt\u003eDELETE_IN_PROGRESS\u003c/dt\u003e \u003cdd\u003e \u003cp\u003eThe capacity provider is in the process of being deleted.\u003c/p\u003e \u003c/dd\u003e \u003cdt\u003eDELETE_COMPLETE\u003c/dt\u003e \u003cdd\u003e \u003cp\u003eThe capacity provider has been successfully deleted and will have an \u003ccode\u003eINACTIVE\u003c/code\u003e status.\u003c/p\u003e \u003c/dd\u003e \u003cdt\u003eDELETE_FAILED\u003c/dt\u003e \u003cdd\u003e \u003cp\u003eThe capacity provider was unable to be deleted. The update status reason will provide further details about why the delete failed.\u003c/p\u003e \u003c/dd\u003e \u003c/dl\u003e\n        updateStatusReason:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The update status reason. This provides further details about the update status for the capacity provider.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: '\u003cp\u003eThe metadata that you apply to the capacity provider to help you categorize and organize it. Each tag consists of a key and an optional value, both of which you define.\u003c/p\u003e \u003cp\u003eThe following basic restrictions apply to tags:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eMaximum number of tags per resource - 50\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor each resource, each tag key must be unique, and each tag key can have only one value.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum key length - 128 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum value length - 256 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTag keys and values are case-sensitive.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eDo not use \u003ccode\u003eaws:\u003c/code\u003e, \u003ccode\u003eAWS:\u003c/code\u003e, or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: The details of a capacity provider.\n    CapacityProviderField:\n      type: string\n      enum:\n        - TAGS\n    CapacityProviderFieldList:\n      type: array\n      items:\n        $ref: '#/components/schemas/CapacityProviderField'\n    CapacityProviderStrategyItem:\n      type: object\n      required:\n        - capacityProvider\n      properties:\n        capacityProvider:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The short name of the capacity provider.\n        weight:\n          allOf:\n            - $ref: '#/components/schemas/CapacityProviderStrategyItemWeight'\n            - description: '\u003cp\u003eThe \u003ci\u003eweight\u003c/i\u003e value designates the relative percentage of the total number of tasks launched that should use the specified capacity provider. The \u003ccode\u003eweight\u003c/code\u003e value is taken into consideration after the \u003ccode\u003ebase\u003c/code\u003e value, if defined, is satisfied.\u003c/p\u003e \u003cp\u003eIf no \u003ccode\u003eweight\u003c/code\u003e value is specified, the default value of \u003ccode\u003e0\u003c/code\u003e is used. When multiple capacity providers are specified within a capacity provider strategy, at least one of the capacity providers must have a weight value greater than zero and any capacity providers with a weight of \u003ccode\u003e0\u003c/code\u003e will not be used to place tasks. If you specify multiple capacity providers in a strategy that all have a weight of \u003ccode\u003e0\u003c/code\u003e, any \u003ccode\u003eRunTask\u003c/code\u003e or \u003ccode\u003eCreateService\u003c/code\u003e actions using the capacity provider strategy will fail.\u003c/p\u003e \u003cp\u003eAn example scenario for using weights is defining a strategy that contains two capacity providers and both have a weight of \u003ccode\u003e1\u003c/code\u003e, then when the \u003ccode\u003ebase\u003c/code\u003e is satisfied, the tasks will be split evenly across the two capacity providers. Using that same logic, if you specify a weight of \u003ccode\u003e1\u003c/code\u003e for \u003ci\u003ecapacityProviderA\u003c/i\u003e and a weight of \u003ccode\u003e4\u003c/code\u003e for \u003ci\u003ecapacityProviderB\u003c/i\u003e, then for every one task that is run using \u003ci\u003ecapacityProviderA\u003c/i\u003e, four tasks would use \u003ci\u003ecapacityProviderB\u003c/i\u003e.\u003c/p\u003e'\n        base:\n          allOf:\n            - $ref: '#/components/schemas/CapacityProviderStrategyItemBase'\n            - description: 'The \u003ci\u003ebase\u003c/i\u003e value designates how many tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a \u003ci\u003ebase\u003c/i\u003e defined. If no value is specified, the default value of \u003ccode\u003e0\u003c/code\u003e is used.'\n      description: '\u003cp\u003eThe details of a capacity provider strategy. A capacity provider strategy can be set when using the \u003ca\u003eRunTask\u003c/a\u003e or \u003ca\u003eCreateCluster\u003c/a\u003e APIs or as the default capacity provider strategy for a cluster with the \u003ca\u003eCreateCluster\u003c/a\u003e API.\u003c/p\u003e \u003cp\u003eOnly capacity providers that are already associated with a cluster and have an \u003ccode\u003eACTIVE\u003c/code\u003e or \u003ccode\u003eUPDATING\u003c/code\u003e status can be used in a capacity provider strategy. The \u003ca\u003ePutClusterCapacityProviders\u003c/a\u003e API is used to associate a capacity provider with a cluster.\u003c/p\u003e \u003cp\u003eIf specifying a capacity provider that uses an Auto Scaling group, the capacity provider must already be created. New Auto Scaling group capacity providers can be created with the \u003ca\u003eCreateCapacityProvider\u003c/a\u003e API operation.\u003c/p\u003e \u003cp\u003eTo use a Fargate capacity provider, specify either the \u003ccode\u003eFARGATE\u003c/code\u003e or \u003ccode\u003eFARGATE_SPOT\u003c/code\u003e capacity providers. The Fargate capacity providers are available to all accounts and only need to be associated with a cluster to be used in a capacity provider strategy.\u003c/p\u003e \u003cp\u003eA capacity provider strategy may contain a maximum of 6 capacity providers.\u003c/p\u003e'\n    CapacityProviderStrategy:\n      type: array\n      items:\n        $ref: '#/components/schemas/CapacityProviderStrategyItem'\n    CapacityProviderStrategyItemWeight:\n      type: integer\n      minimum: 0\n      maximum: 1000\n    CapacityProviderStrategyItemBase:\n      type: integer\n      minimum: 0\n      maximum: 100000\n    CapacityProviders:\n      type: array\n      items:\n        $ref: '#/components/schemas/CapacityProvider'\n    ClusterConfiguration:\n      type: object\n      properties:\n        executeCommandConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/ExecuteCommandConfiguration'\n            - description: The details of the execute command configuration.\n      description: The execute command configuration for the cluster.\n    Integer:\n      type: integer\n    Statistics:\n      type: array\n      items:\n        $ref: '#/components/schemas/KeyValuePair'\n    ClusterSettings:\n      type: array\n      items:\n        $ref: '#/components/schemas/ClusterSetting'\n    Cluster:\n      type: object\n      properties:\n        clusterArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The Amazon Resource Name (ARN) that identifies the cluster. The ARN contains the \u003ccode\u003earn:aws:ecs\u003c/code\u003e namespace, followed by the Region of the cluster, the Amazon Web Services account ID of the cluster owner, the \u003ccode\u003ecluster\u003c/code\u003e namespace, and then the cluster name. For example, \u003ccode\u003earn:aws:ecs:region:012345678910:cluster/test\u003c/code\u003e.'\n        clusterName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: A user-generated string that you use to identify your cluster.\n        configuration:\n          allOf:\n            - $ref: '#/components/schemas/ClusterConfiguration'\n            - description: The execute command configuration for the cluster.\n        status:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe status of the cluster. The following are the possible states that will be returned.\u003c/p\u003e \u003cdl\u003e \u003cdt\u003eACTIVE\u003c/dt\u003e \u003cdd\u003e \u003cp\u003eThe cluster is ready to accept tasks and if applicable you can register container instances with the cluster.\u003c/p\u003e \u003c/dd\u003e \u003cdt\u003ePROVISIONING\u003c/dt\u003e \u003cdd\u003e \u003cp\u003eThe cluster has capacity providers associated with it and the resources needed for the capacity provider are being created.\u003c/p\u003e \u003c/dd\u003e \u003cdt\u003eDEPROVISIONING\u003c/dt\u003e \u003cdd\u003e \u003cp\u003eThe cluster has capacity providers associated with it and the resources needed for the capacity provider are being deleted.\u003c/p\u003e \u003c/dd\u003e \u003cdt\u003eFAILED\u003c/dt\u003e \u003cdd\u003e \u003cp\u003eThe cluster has capacity providers associated with it and the resources needed for the capacity provider have failed to create.\u003c/p\u003e \u003c/dd\u003e \u003cdt\u003eINACTIVE\u003c/dt\u003e \u003cdd\u003e \u003cp\u003eThe cluster has been deleted. Clusters with an \u003ccode\u003eINACTIVE\u003c/code\u003e status may remain discoverable in your account for a period of time. However, this behavior is subject to change in the future, so you should not rely on \u003ccode\u003eINACTIVE\u003c/code\u003e clusters persisting.\u003c/p\u003e \u003c/dd\u003e \u003c/dl\u003e'\n        registeredContainerInstancesCount:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The number of container instances registered into the cluster. This includes container instances in both \u003ccode\u003eACTIVE\u003c/code\u003e and \u003ccode\u003eDRAINING\u003c/code\u003e status.\n        runningTasksCount:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The number of tasks in the cluster that are in the \u003ccode\u003eRUNNING\u003c/code\u003e state.\n        pendingTasksCount:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The number of tasks in the cluster that are in the \u003ccode\u003ePENDING\u003c/code\u003e state.\n        activeServicesCount:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The number of services that are running on the cluster in an \u003ccode\u003eACTIVE\u003c/code\u003e state. You can view these services with \u003ca\u003eListServices\u003c/a\u003e.\n        statistics:\n          allOf:\n            - $ref: '#/components/schemas/Statistics'\n            - description: '\u003cp\u003eAdditional information about your clusters that are separated by launch type, including:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003erunningEC2TasksCount\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eRunningFargateTasksCount\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003ependingEC2TasksCount\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003ependingFargateTasksCount\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eactiveEC2ServiceCount\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eactiveFargateServiceCount\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003edrainingEC2ServiceCount\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003edrainingFargateServiceCount\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: '\u003cp\u003eThe metadata that you apply to the cluster to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.\u003c/p\u003e \u003cp\u003eThe following basic restrictions apply to tags:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eMaximum number of tags per resource - 50\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor each resource, each tag key must be unique, and each tag key can have only one value.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum key length - 128 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum value length - 256 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTag keys and values are case-sensitive.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eDo not use \u003ccode\u003eaws:\u003c/code\u003e, \u003ccode\u003eAWS:\u003c/code\u003e, or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        settings:\n          allOf:\n            - $ref: '#/components/schemas/ClusterSettings'\n            - description: The settings for the cluster. This parameter indicates whether CloudWatch Container Insights is enabled or disabled for a cluster.\n        capacityProviders:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: The capacity providers associated with the cluster.\n        defaultCapacityProviderStrategy:\n          allOf:\n            - $ref: '#/components/schemas/CapacityProviderStrategy'\n            - description: 'The default capacity provider strategy for the cluster. When services or tasks are run in the cluster with no launch type or capacity provider strategy specified, the default capacity provider strategy is used.'\n        attachments:\n          allOf:\n            - $ref: '#/components/schemas/Attachments'\n            - description: 'The resources attached to a cluster. When using a capacity provider with a cluster, the Auto Scaling plan that is created will be returned as a cluster attachment.'\n        attachmentsStatus:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe status of the capacity providers associated with the cluster. The following are the states that will be returned:\u003c/p\u003e \u003cdl\u003e \u003cdt\u003eUPDATE_IN_PROGRESS\u003c/dt\u003e \u003cdd\u003e \u003cp\u003eThe available capacity providers for the cluster are updating. This occurs when the Auto Scaling plan is provisioning or deprovisioning.\u003c/p\u003e \u003c/dd\u003e \u003cdt\u003eUPDATE_COMPLETE\u003c/dt\u003e \u003cdd\u003e \u003cp\u003eThe capacity providers have successfully updated.\u003c/p\u003e \u003c/dd\u003e \u003cdt\u003eUPDATE_FAILED\u003c/dt\u003e \u003cdd\u003e \u003cp\u003eThe capacity provider updates failed.\u003c/p\u003e \u003c/dd\u003e \u003c/dl\u003e'\n      description: 'A regional grouping of one or more container instances on which you can run task requests. Each account receives a default cluster the first time you use the Amazon ECS service, but you may also create other clusters. Clusters may contain more than one instance type simultaneously.'\n    ExecuteCommandConfiguration:\n      type: object\n      properties:\n        kmsKeyId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Specify an Key Management Service key ID to encrypt the data between the local client and the container.\n        logging:\n          allOf:\n            - $ref: '#/components/schemas/ExecuteCommandLogging'\n            - description: '\u003cp\u003eThe log setting to use for redirecting logs for your execute command results. The following log settings are available.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNONE\u003c/code\u003e: The execute command session is not logged.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDEFAULT\u003c/code\u003e: The \u003ccode\u003eawslogs\u003c/code\u003e configuration in the task definition is used. If no logging parameter is specified, it defaults to this value. If no \u003ccode\u003eawslogs\u003c/code\u003e log driver is configured in the task definition, the output won''t be logged.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eOVERRIDE\u003c/code\u003e: Specify the logging details as a part of \u003ccode\u003elogConfiguration\u003c/code\u003e. If the \u003ccode\u003eOVERRIDE\u003c/code\u003e logging option is specified, the \u003ccode\u003elogConfiguration\u003c/code\u003e is required.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        logConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/ExecuteCommandLogConfiguration'\n            - description: 'The log configuration for the results of the execute command actions. The logs can be sent to CloudWatch Logs or an Amazon S3 bucket. When \u003ccode\u003elogging=OVERRIDE\u003c/code\u003e is specified, a \u003ccode\u003elogConfiguration\u003c/code\u003e must be provided.'\n      description: The details of the execute command configuration.\n    ClusterField:\n      type: string\n      enum:\n        - ATTACHMENTS\n        - CONFIGURATIONS\n        - SETTINGS\n        - STATISTICS\n        - TAGS\n    ClusterFieldList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ClusterField'\n    ClusterSettingName:\n      type: string\n      enum:\n        - containerInsights\n    ClusterSetting:\n      type: object\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ClusterSettingName'\n            - description: The name of the cluster setting. The only supported value is \u003ccode\u003econtainerInsights\u003c/code\u003e.\n        value:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The value to set for the cluster setting. The supported values are \u003ccode\u003eenabled\u003c/code\u003e and \u003ccode\u003edisabled\u003c/code\u003e. If \u003ccode\u003eenabled\u003c/code\u003e is specified, CloudWatch Container Insights will be enabled for the cluster, otherwise it will be disabled unless the \u003ccode\u003econtainerInsights\u003c/code\u003e account setting is enabled. If a cluster value is specified, it will override the \u003ccode\u003econtainerInsights\u003c/code\u003e value set with \u003ca\u003ePutAccountSetting\u003c/a\u003e or \u003ca\u003ePutAccountSettingDefault\u003c/a\u003e.'\n      description: The settings to use when creating a cluster. This parameter is used to enable CloudWatch Container Insights for a cluster.\n    Clusters:\n      type: array\n      items:\n        $ref: '#/components/schemas/Cluster'\n    Compatibility:\n      type: string\n      enum:\n        - EC2\n        - FARGATE\n        - EXTERNAL\n    CompatibilityList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Compatibility'\n    Connectivity:\n      type: string\n      enum:\n        - CONNECTED\n        - DISCONNECTED\n    NetworkBindings:\n      type: array\n      items:\n        $ref: '#/components/schemas/NetworkBinding'\n    NetworkInterfaces:\n      type: array\n      items:\n        $ref: '#/components/schemas/NetworkInterface'\n    HealthStatus:\n      type: string\n      enum:\n        - HEALTHY\n        - UNHEALTHY\n        - UNKNOWN\n    ManagedAgents:\n      type: array\n      items:\n        $ref: '#/components/schemas/ManagedAgent'\n    GpuIds:\n      type: array\n      items:\n        $ref: '#/components/schemas/String'\n    Container:\n      type: object\n      properties:\n        containerArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the container.\n        taskArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ARN of the task.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the container.\n        image:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The image used for the container.\n        imageDigest:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe container image manifest digest.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThe \u003ccode\u003eimageDigest\u003c/code\u003e is only returned if the container is using an image hosted in Amazon ECR, otherwise it is omitted.\u003c/p\u003e \u003c/note\u003e'\n        runtimeId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ID of the Docker container.\n        lastStatus:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The last known status of the container.\n        exitCode:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: The exit code returned from the container.\n        reason:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: A short (255 max characters) human-readable string to provide additional details about a running or stopped container.\n        networkBindings:\n          allOf:\n            - $ref: '#/components/schemas/NetworkBindings'\n            - description: The network bindings associated with the container.\n        networkInterfaces:\n          allOf:\n            - $ref: '#/components/schemas/NetworkInterfaces'\n            - description: The network interfaces associated with the container.\n        healthStatus:\n          allOf:\n            - $ref: '#/components/schemas/HealthStatus'\n            - description: 'The health status of the container. If health checks are not configured for this container in its task definition, then it reports the health status as \u003ccode\u003eUNKNOWN\u003c/code\u003e.'\n        managedAgents:\n          allOf:\n            - $ref: '#/components/schemas/ManagedAgents'\n            - description: The details of any Amazon ECS managed agents associated with the container.\n        cpu:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The number of CPU units set for the container. The value will be \u003ccode\u003e0\u003c/code\u003e if no value was specified in the container definition when the task definition was registered.\n        memory:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The hard limit (in MiB) of memory set for the container.\n        memoryReservation:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The soft limit (in MiB) of memory set for the container.\n        gpuIds:\n          allOf:\n            - $ref: '#/components/schemas/GpuIds'\n            - description: The IDs of each GPU assigned to the container.\n      description: A Docker container that is part of a task.\n    ContainerCondition:\n      type: string\n      enum:\n        - START\n        - COMPLETE\n        - SUCCESS\n        - HEALTHY\n    RepositoryCredentials:\n      type: object\n      required:\n        - credentialsParameter\n      properties:\n        credentialsParameter:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe Amazon Resource Name (ARN) of the secret containing the private repository credentials.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eWhen you are using the Amazon ECS API, CLI, or Amazon Web Services SDK, if the secret exists in the same Region as the task that you are launching then you can use either the full ARN or the name of the secret. When you are using the Amazon Web Services Management Console, you must specify the full ARN of the secret.\u003c/p\u003e \u003c/note\u003e'\n      description: The repository credentials for private registry authentication.\n    PortMappingList:\n      type: array\n      items:\n        $ref: '#/components/schemas/PortMapping'\n    EnvironmentVariables:\n      type: array\n      items:\n        $ref: '#/components/schemas/KeyValuePair'\n    EnvironmentFiles:\n      type: array\n      items:\n        $ref: '#/components/schemas/EnvironmentFile'\n    MountPointList:\n      type: array\n      items:\n        $ref: '#/components/schemas/MountPoint'\n    VolumeFromList:\n      type: array\n      items:\n        $ref: '#/components/schemas/VolumeFrom'\n    LinuxParameters:\n      type: object\n      properties:\n        capabilities:\n          allOf:\n            - $ref: '#/components/schemas/KernelCapabilities'\n            - description: '\u003cp\u003eThe Linux capabilities for the container that are added to or dropped from the default configuration provided by Docker.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eFor tasks that use the Fargate launch type, \u003ccode\u003ecapabilities\u003c/code\u003e is supported for all platform versions but the \u003ccode\u003eadd\u003c/code\u003e parameter is only supported if using platform version 1.4.0 or later.\u003c/p\u003e \u003c/note\u003e'\n        devices:\n          allOf:\n            - $ref: '#/components/schemas/DevicesList'\n            - description: '\u003cp\u003eAny host devices to expose to the container. This parameter maps to \u003ccode\u003eDevices\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--device\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eIf you are using tasks that use the Fargate launch type, the \u003ccode\u003edevices\u003c/code\u003e parameter is not supported.\u003c/p\u003e \u003c/note\u003e'\n        initProcessEnabled:\n          allOf:\n            - $ref: '#/components/schemas/BoxedBoolean'\n            - description: 'Run an \u003ccode\u003einit\u003c/code\u003e process inside the container that forwards signals and reaps processes. This parameter maps to the \u003ccode\u003e--init\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e. This parameter requires version 1.25 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log in to your container instance and run the following command: \u003ccode\u003esudo docker version --format ''{{.Server.APIVersion}}''\u003c/code\u003e '\n        sharedMemorySize:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: '\u003cp\u003eThe value for the size (in MiB) of the \u003ccode\u003e/dev/shm\u003c/code\u003e volume. This parameter maps to the \u003ccode\u003e--shm-size\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eIf you are using tasks that use the Fargate launch type, the \u003ccode\u003esharedMemorySize\u003c/code\u003e parameter is not supported.\u003c/p\u003e \u003c/note\u003e'\n        tmpfs:\n          allOf:\n            - $ref: '#/components/schemas/TmpfsList'\n            - description: '\u003cp\u003eThe container path, mount options, and size (in MiB) of the tmpfs mount. This parameter maps to the \u003ccode\u003e--tmpfs\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eIf you are using tasks that use the Fargate launch type, the \u003ccode\u003etmpfs\u003c/code\u003e parameter is not supported.\u003c/p\u003e \u003c/note\u003e'\n        maxSwap:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: '\u003cp\u003eThe total amount of swap memory (in MiB) a container can use. This parameter will be translated to the \u003ccode\u003e--memory-swap\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e where the value would be the sum of the container memory plus the \u003ccode\u003emaxSwap\u003c/code\u003e value.\u003c/p\u003e \u003cp\u003eIf a \u003ccode\u003emaxSwap\u003c/code\u003e value of \u003ccode\u003e0\u003c/code\u003e is specified, the container will not use swap. Accepted values are \u003ccode\u003e0\u003c/code\u003e or any positive integer. If the \u003ccode\u003emaxSwap\u003c/code\u003e parameter is omitted, the container will use the swap configuration for the container instance it is running on. A \u003ccode\u003emaxSwap\u003c/code\u003e value must be set for the \u003ccode\u003eswappiness\u003c/code\u003e parameter to be used.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eIf you are using tasks that use the Fargate launch type, the \u003ccode\u003emaxSwap\u003c/code\u003e parameter is not supported.\u003c/p\u003e \u003c/note\u003e'\n        swappiness:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: '\u003cp\u003eThis allows you to tune a container''s memory swappiness behavior. A \u003ccode\u003eswappiness\u003c/code\u003e value of \u003ccode\u003e0\u003c/code\u003e will cause swapping to not happen unless absolutely necessary. A \u003ccode\u003eswappiness\u003c/code\u003e value of \u003ccode\u003e100\u003c/code\u003e will cause pages to be swapped very aggressively. Accepted values are whole numbers between \u003ccode\u003e0\u003c/code\u003e and \u003ccode\u003e100\u003c/code\u003e. If the \u003ccode\u003eswappiness\u003c/code\u003e parameter is not specified, a default value of \u003ccode\u003e60\u003c/code\u003e is used. If a value is not specified for \u003ccode\u003emaxSwap\u003c/code\u003e then this parameter is ignored. This parameter maps to the \u003ccode\u003e--memory-swappiness\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eIf you are using tasks that use the Fargate launch type, the \u003ccode\u003eswappiness\u003c/code\u003e parameter is not supported.\u003c/p\u003e \u003c/note\u003e'\n      description: 'Linux-specific options that are applied to the container, such as Linux \u003ca\u003eKernelCapabilities\u003c/a\u003e.'\n    SecretList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Secret'\n    ContainerDependencies:\n      type: array\n      items:\n        $ref: '#/components/schemas/ContainerDependency'\n    HostEntryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/HostEntry'\n    DockerLabelsMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/String'\n    UlimitList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Ulimit'\n    LogConfiguration:\n      type: object\n      required:\n        - logDriver\n      properties:\n        logDriver:\n          allOf:\n            - $ref: '#/components/schemas/LogDriver'\n            - description: '\u003cp\u003eThe log driver to use for the container.\u003c/p\u003e \u003cp\u003eFor tasks on Fargate, the supported log drivers are \u003ccode\u003eawslogs\u003c/code\u003e, \u003ccode\u003esplunk\u003c/code\u003e, and \u003ccode\u003eawsfirelens\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eFor tasks hosted on Amazon EC2 instances, the supported log drivers are \u003ccode\u003eawslogs\u003c/code\u003e, \u003ccode\u003efluentd\u003c/code\u003e, \u003ccode\u003egelf\u003c/code\u003e, \u003ccode\u003ejson-file\u003c/code\u003e, \u003ccode\u003ejournald\u003c/code\u003e, \u003ccode\u003elogentries\u003c/code\u003e,\u003ccode\u003esyslog\u003c/code\u003e, \u003ccode\u003esplunk\u003c/code\u003e, and \u003ccode\u003eawsfirelens\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eFor more information about using the \u003ccode\u003eawslogs\u003c/code\u003e log driver, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_awslogs.html\"\u003eUsing the awslogs log driver\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eFor more information about using the \u003ccode\u003eawsfirelens\u003c/code\u003e log driver, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html\"\u003eCustom log routing\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eIf you have a custom driver that is not listed, you can fork the Amazon ECS container agent project that is \u003ca href=\"https://github.com/aws/amazon-ecs-agent\"\u003eavailable on GitHub\u003c/a\u003e and customize it to work with that driver. We encourage you to submit pull requests for changes that you would like to have included. However, we do not currently provide support for running modified copies of this software.\u003c/p\u003e \u003c/note\u003e'\n        options:\n          allOf:\n            - $ref: '#/components/schemas/LogConfigurationOptionsMap'\n            - description: 'The configuration options to send to the log driver. This parameter requires version 1.19 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log in to your container instance and run the following command: \u003ccode\u003esudo docker version --format ''{{.Server.APIVersion}}''\u003c/code\u003e '\n        secretOptions:\n          allOf:\n            - $ref: '#/components/schemas/SecretList'\n            - description: 'The secrets to pass to the log configuration. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html\"\u003eSpecifying Sensitive Data\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n      description: '\u003cp\u003eThe log configuration for the container. This parameter maps to \u003ccode\u003eLogConfig\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--log-driver\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/commandline/run/\"\u003e \u003ccode\u003edocker run\u003c/code\u003e \u003c/a\u003e.\u003c/p\u003e \u003cp\u003eBy default, containers use the same logging driver that the Docker daemon uses; however the container may use a different logging driver than the Docker daemon by specifying a log driver configuration in the container definition. For more information on the options for different supported log drivers, see \u003ca href=\"https://docs.docker.com/engine/admin/logging/overview/\"\u003eConfigure logging drivers\u003c/a\u003e in the Docker documentation.\u003c/p\u003e \u003cp\u003eThe following should be noted when specifying a log configuration for your containers:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eAmazon ECS currently supports a subset of the logging drivers available to the Docker daemon (shown in the valid values below). Additional log drivers may be available in future releases of the Amazon ECS container agent.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eThis parameter requires version 1.18 of the Docker Remote API or greater on your container instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor tasks hosted on Amazon EC2 instances, the Amazon ECS container agent must register the available logging drivers with the \u003ccode\u003eECS_AVAILABLE_LOGGING_DRIVERS\u003c/code\u003e environment variable before containers placed on that instance can use these log configuration options. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html\"\u003eAmazon ECS container agent configuration\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor tasks on Fargate, because you do not have access to the underlying infrastructure your tasks are hosted on, any additional software needed will have to be installed outside of the task. For example, the Fluentd output aggregators or a remote host running Logstash to send Gelf logs to.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n    HealthCheck:\n      type: object\n      required:\n        - command\n      properties:\n        command:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: '\u003cp\u003eA string array representing the command that the container runs to determine if it is healthy. The string array must start with \u003ccode\u003eCMD\u003c/code\u003e to execute the command arguments directly, or \u003ccode\u003eCMD-SHELL\u003c/code\u003e to run the command with the container''s default shell. \u003c/p\u003e \u003cp\u003e When you use the Amazon Web Services Management Console JSON panel, the Command Line Interface, or the APIs, you should enclose the list of commands in brackets, as shown below.\u003c/p\u003e \u003cp\u003e \u003ccode\u003e[ \"CMD-SHELL\", \"curl -f http://localhost/ || exit 1\" ]\u003c/code\u003e \u003c/p\u003e \u003cp\u003eYou do not need to include the brackets when you use the Amazon Web Services Management Consoleas shown below.\u003c/p\u003e \u003cp\u003e \u003ccode\u003e \"CMD-SHELL\", \"curl -f http://localhost/ || exit 1\" \u003c/code\u003e \u003c/p\u003e \u003cp\u003eAn exit code of 0 indicates success, and non-zero exit code indicates failure. For more information, see \u003ccode\u003eHealthCheck\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e.\u003c/p\u003e'\n        interval:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: The time period in seconds between each health check execution. You may specify between 5 and 300 seconds. The default value is 30 seconds.\n        timeout:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: The time period in seconds to wait for a health check to succeed before it is considered a failure. You may specify between 2 and 60 seconds. The default value is 5.\n        retries:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: The number of times to retry a failed health check before the container is considered unhealthy. You may specify between 1 and 10 retries. The default value is 3.\n        startPeriod:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: '\u003cp\u003eThe optional grace period within which to provide containers time to bootstrap before failed health checks count towards the maximum number of retries. You may specify between 0 and 300 seconds. The \u003ccode\u003estartPeriod\u003c/code\u003e is disabled by default.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eIf a health check succeeds within the \u003ccode\u003estartPeriod\u003c/code\u003e, then the container is considered healthy and any subsequent failures count toward the maximum number of retries.\u003c/p\u003e \u003c/note\u003e'\n      description: '\u003cp\u003eAn object representing a container health check. Health check parameters that are specified in a container definition override any Docker health checks that exist in the container image (such as those specified in a parent image or from the image''s Dockerfile).\u003c/p\u003e \u003cp\u003eYou can view the health status of both individual containers and a task with the DescribeTasks API operation or when viewing the task details in the console.\u003c/p\u003e \u003cp\u003eThe following describes the possible \u003ccode\u003ehealthStatus\u003c/code\u003e values for a container:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eHEALTHY\u003c/code\u003e-The container health check has passed successfully.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUNHEALTHY\u003c/code\u003e-The container health check has failed.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUNKNOWN\u003c/code\u003e-The container health check is being evaluated or there is no container health check defined.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eThe following describes the possible \u003ccode\u003ehealthStatus\u003c/code\u003e values for a task. The container health check status of nonessential containers do not have an effect on the health status of a task.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eHEALTHY\u003c/code\u003e-All essential containers within the task have passed their health checks.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUNHEALTHY\u003c/code\u003e-One or more essential containers have failed their health check.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUNKNOWN\u003c/code\u003e-The essential containers within the task are still having their health checks evaluated or there are no container health checks defined.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf a task is run manually, and not as part of a service, the task will continue its lifecycle regardless of its health status. For tasks that are part of a service, if the task reports as unhealthy then the task will be stopped and the service scheduler will replace it.\u003c/p\u003e \u003cp\u003eThe following are notes about container health check support:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eContainer health checks require version 1.17.0 or greater of the Amazon ECS container agent. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html\"\u003eUpdating the Amazon ECS Container Agent\u003c/a\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eContainer health checks are supported for Fargate tasks if you are using platform version 1.1.0 or greater. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html\"\u003eFargate Platform Versions\u003c/a\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eContainer health checks are not supported for tasks that are part of a service that is configured to use a Classic Load Balancer.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n    SystemControls:\n      type: array\n      items:\n        $ref: '#/components/schemas/SystemControl'\n    ResourceRequirements:\n      type: array\n      items:\n        $ref: '#/components/schemas/ResourceRequirement'\n    FirelensConfiguration:\n      type: object\n      required:\n        - type\n      properties:\n        type:\n          allOf:\n            - $ref: '#/components/schemas/FirelensConfigurationType'\n            - description: The log router to use. The valid values are \u003ccode\u003efluentd\u003c/code\u003e or \u003ccode\u003efluentbit\u003c/code\u003e.\n        options:\n          allOf:\n            - $ref: '#/components/schemas/FirelensConfigurationOptionsMap'\n            - description: '\u003cp\u003eThe options to use when configuring the log router. This field is optional and can be used to specify a custom configuration file or to add additional metadata, such as the task, task definition, cluster, and container instance details to the log event. If specified, the syntax to use is \u003ccode\u003e\"options\":{\"enable-ecs-log-metadata\":\"true|false\",\"config-file-type:\"s3|file\",\"config-file-value\":\"arn:aws:s3:::mybucket/fluent.conf|filepath\"}\u003c/code\u003e. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html#firelens-taskdef\"\u003eCreating a Task Definition that Uses a FireLens Configuration\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eTasks hosted on Fargate only support the \u003ccode\u003efile\u003c/code\u003e configuration file type.\u003c/p\u003e \u003c/note\u003e'\n      description: 'The FireLens configuration for the container. This is used to specify and configure a log router for container logs. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html\"\u003eCustom Log Routing\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n    ContainerDefinition:\n      type: object\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The name of a container. If you are linking multiple containers together in a task definition, the \u003ccode\u003ename\u003c/code\u003e of one container can be entered in the \u003ccode\u003elinks\u003c/code\u003e of another container to connect the containers. Up to 255 letters (uppercase and lowercase), numbers, underscores, and hyphens are allowed. This parameter maps to \u003ccode\u003ename\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--name\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e. '\n        image:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe image used to start a container. This string is passed directly to the Docker daemon. Images in the Docker Hub registry are available by default. Other repositories are specified with either \u003ccode\u003e \u003ci\u003erepository-url\u003c/i\u003e/\u003ci\u003eimage\u003c/i\u003e:\u003ci\u003etag\u003c/i\u003e \u003c/code\u003e or \u003ccode\u003e \u003ci\u003erepository-url\u003c/i\u003e/\u003ci\u003eimage\u003c/i\u003e@\u003ci\u003edigest\u003c/i\u003e \u003c/code\u003e. Up to 255 letters (uppercase and lowercase), numbers, hyphens, underscores, colons, periods, forward slashes, and number signs are allowed. This parameter maps to \u003ccode\u003eImage\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003eIMAGE\u003c/code\u003e parameter of \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eWhen a new task starts, the Amazon ECS container agent pulls the latest version of the specified image and tag for the container to use. However, subsequent updates to a repository image are not propagated to already running tasks.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eImages in Amazon ECR repositories can be specified by either using the full \u003ccode\u003eregistry/repository:tag\u003c/code\u003e or \u003ccode\u003eregistry/repository@digest\u003c/code\u003e. For example, \u003ccode\u003e012345678910.dkr.ecr.\u0026lt;region-name\u0026gt;.amazonaws.com/\u0026lt;repository-name\u0026gt;:latest\u003c/code\u003e or \u003ccode\u003e012345678910.dkr.ecr.\u0026lt;region-name\u0026gt;.amazonaws.com/\u0026lt;repository-name\u0026gt;@sha256:94afd1f2e64d908bc90dbca0035a5b567EXAMPLE\u003c/code\u003e. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eImages in official repositories on Docker Hub use a single name (for example, \u003ccode\u003eubuntu\u003c/code\u003e or \u003ccode\u003emongo\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eImages in other repositories on Docker Hub are qualified with an organization name (for example, \u003ccode\u003eamazon/amazon-ecs-agent\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eImages in other online repositories are qualified further by a domain name (for example, \u003ccode\u003equay.io/assemblyline/ubuntu\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        repositoryCredentials:\n          allOf:\n            - $ref: '#/components/schemas/RepositoryCredentials'\n            - description: The private repository authentication credentials to use.\n        cpu:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: '\u003cp\u003eThe number of \u003ccode\u003ecpu\u003c/code\u003e units reserved for the container. This parameter maps to \u003ccode\u003eCpuShares\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--cpu-shares\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eThis field is optional for tasks using the Fargate launch type, and the only requirement is that the total amount of CPU reserved for all containers within a task be lower than the task-level \u003ccode\u003ecpu\u003c/code\u003e value.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eYou can determine the number of CPU units that are available per EC2 instance type by multiplying the vCPUs listed for that instance type on the \u003ca href=\"http://aws.amazon.com/ec2/instance-types/\"\u003eAmazon EC2 Instances\u003c/a\u003e detail page by 1,024.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eLinux containers share unallocated CPU units with other containers on the container instance with the same ratio as their allocated amount. For example, if you run a single-container task on a single-core instance type with 512 CPU units specified for that container, and that is the only task running on the container instance, that container could use the full 1,024 CPU unit share at any given time. However, if you launched another copy of the same task on that container instance, each task would be guaranteed a minimum of 512 CPU units when needed, and each container could float to higher CPU usage if the other container was not using it, but if both tasks were 100% active all of the time, they would be limited to 512 CPU units.\u003c/p\u003e \u003cp\u003eOn Linux container instances, the Docker daemon on the container instance uses the CPU value to calculate the relative CPU share ratios for running containers. For more information, see \u003ca href=\"https://docs.docker.com/engine/reference/run/#cpu-share-constraint\"\u003eCPU share constraint\u003c/a\u003e in the Docker documentation. The minimum valid CPU share value that the Linux kernel allows is 2. However, the CPU parameter is not required, and you can use CPU values below 2 in your container definitions. For CPU values below 2 (including null), the behavior varies based on your Amazon ECS container agent version:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eAgent versions less than or equal to 1.1.0:\u003c/b\u003e Null and zero CPU values are passed to Docker as 0, which Docker then converts to 1,024 CPU shares. CPU values of 1 are passed to Docker as 1, which the Linux kernel converts to two CPU shares.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eAgent versions greater than or equal to 1.2.0:\u003c/b\u003e Null, zero, and CPU values of 1 are passed to Docker as 2.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eOn Windows container instances, the CPU limit is enforced as an absolute limit, or a quota. Windows containers only have access to the specified amount of CPU that is described in the task definition. A null or zero CPU value is passed to Docker as \u003ccode\u003e0\u003c/code\u003e, which Windows interprets as 1% of one CPU.\u003c/p\u003e'\n        memory:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: '\u003cp\u003eThe amount (in MiB) of memory to present to the container. If your container attempts to exceed the memory specified here, the container is killed. The total amount of memory reserved for all containers within a task must be lower than the task \u003ccode\u003ememory\u003c/code\u003e value, if one is specified. This parameter maps to \u003ccode\u003eMemory\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--memory\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eIf using the Fargate launch type, this parameter is optional.\u003c/p\u003e \u003cp\u003eIf using the EC2 launch type, you must specify either a task-level memory value or a container-level memory value. If you specify both a container-level \u003ccode\u003ememory\u003c/code\u003e and \u003ccode\u003ememoryReservation\u003c/code\u003e value, \u003ccode\u003ememory\u003c/code\u003e must be greater than \u003ccode\u003ememoryReservation\u003c/code\u003e. If you specify \u003ccode\u003ememoryReservation\u003c/code\u003e, then that value is subtracted from the available memory resources for the container instance on which the container is placed. Otherwise, the value of \u003ccode\u003ememory\u003c/code\u003e is used.\u003c/p\u003e \u003cp\u003eThe Docker daemon reserves a minimum of 4 MiB of memory for a container, so you should not specify fewer than 4 MiB of memory for your containers.\u003c/p\u003e'\n        memoryReservation:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: '\u003cp\u003eThe soft limit (in MiB) of memory to reserve for the container. When system memory is under heavy contention, Docker attempts to keep the container memory to this soft limit. However, your container can consume more memory when it needs to, up to either the hard limit specified with the \u003ccode\u003ememory\u003c/code\u003e parameter (if applicable), or all of the available memory on the container instance, whichever comes first. This parameter maps to \u003ccode\u003eMemoryReservation\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--memory-reservation\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eIf a task-level memory value is not specified, you must specify a non-zero integer for one or both of \u003ccode\u003ememory\u003c/code\u003e or \u003ccode\u003ememoryReservation\u003c/code\u003e in a container definition. If you specify both, \u003ccode\u003ememory\u003c/code\u003e must be greater than \u003ccode\u003ememoryReservation\u003c/code\u003e. If you specify \u003ccode\u003ememoryReservation\u003c/code\u003e, then that value is subtracted from the available memory resources for the container instance on which the container is placed. Otherwise, the value of \u003ccode\u003ememory\u003c/code\u003e is used.\u003c/p\u003e \u003cp\u003eFor example, if your container normally uses 128 MiB of memory, but occasionally bursts to 256 MiB of memory for short periods of time, you can set a \u003ccode\u003ememoryReservation\u003c/code\u003e of 128 MiB, and a \u003ccode\u003ememory\u003c/code\u003e hard limit of 300 MiB. This configuration would allow the container to only reserve 128 MiB of memory from the remaining resources on the container instance, but also allow the container to consume more memory resources when needed.\u003c/p\u003e \u003cp\u003eThe Docker daemon reserves a minimum of 4 MiB of memory for a container, so you should not specify fewer than 4 MiB of memory for your containers. \u003c/p\u003e'\n        links:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: '\u003cp\u003eThe \u003ccode\u003elinks\u003c/code\u003e parameter allows containers to communicate with each other without the need for port mappings. This parameter is only supported if the network mode of a task definition is \u003ccode\u003ebridge\u003c/code\u003e. The \u003ccode\u003ename:internalName\u003c/code\u003e construct is analogous to \u003ccode\u003ename:alias\u003c/code\u003e in Docker links. Up to 255 letters (uppercase and lowercase), numbers, underscores, and hyphens are allowed. For more information about linking Docker containers, go to \u003ca href=\"https://docs.docker.com/network/links/\"\u003eLegacy container links\u003c/a\u003e in the Docker documentation. This parameter maps to \u003ccode\u003eLinks\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--link\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis parameter is not supported for Windows containers.\u003c/p\u003e \u003c/note\u003e \u003cimportant\u003e \u003cp\u003eContainers that are collocated on a single container instance may be able to communicate with each other without requiring links or host port mappings. Network isolation is achieved on the container instance using security groups and VPC settings.\u003c/p\u003e \u003c/important\u003e'\n        portMappings:\n          allOf:\n            - $ref: '#/components/schemas/PortMappingList'\n            - description: '\u003cp\u003eThe list of port mappings for the container. Port mappings allow containers to access ports on the host container instance to send or receive traffic.\u003c/p\u003e \u003cp\u003eFor task definitions that use the \u003ccode\u003eawsvpc\u003c/code\u003e network mode, you should only specify the \u003ccode\u003econtainerPort\u003c/code\u003e. The \u003ccode\u003ehostPort\u003c/code\u003e can be left blank or it must be the same value as the \u003ccode\u003econtainerPort\u003c/code\u003e.\u003c/p\u003e \u003cp\u003ePort mappings on Windows use the \u003ccode\u003eNetNAT\u003c/code\u003e gateway address rather than \u003ccode\u003elocalhost\u003c/code\u003e. There is no loopback for port mappings on Windows, so you cannot access a container''s mapped port from the host itself. \u003c/p\u003e \u003cp\u003eThis parameter maps to \u003ccode\u003ePortBindings\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--publish\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e. If the network mode of a task definition is set to \u003ccode\u003enone\u003c/code\u003e, then you can''t specify port mappings. If the network mode of a task definition is set to \u003ccode\u003ehost\u003c/code\u003e, then host ports must either be undefined or they must match the container port in the port mapping.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eAfter a task reaches the \u003ccode\u003eRUNNING\u003c/code\u003e status, manual and automatic host and container port assignments are visible in the \u003cb\u003eNetwork Bindings\u003c/b\u003e section of a container description for a selected task in the Amazon ECS console. The assignments are also visible in the \u003ccode\u003enetworkBindings\u003c/code\u003e section \u003ca\u003eDescribeTasks\u003c/a\u003e responses.\u003c/p\u003e \u003c/note\u003e'\n        essential:\n          allOf:\n            - $ref: '#/components/schemas/BoxedBoolean'\n            - description: '\u003cp\u003eIf the \u003ccode\u003eessential\u003c/code\u003e parameter of a container is marked as \u003ccode\u003etrue\u003c/code\u003e, and that container fails or stops for any reason, all other containers that are part of the task are stopped. If the \u003ccode\u003eessential\u003c/code\u003e parameter of a container is marked as \u003ccode\u003efalse\u003c/code\u003e, then its failure does not affect the rest of the containers in a task. If this parameter is omitted, a container is assumed to be essential.\u003c/p\u003e \u003cp\u003eAll tasks must have at least one essential container. If you have an application that is composed of multiple containers, you should group containers that are used for a common purpose into components, and separate the different components into multiple task definitions. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/application_architecture.html\"\u003eApplication Architecture\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        entryPoint:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: '\u003cimportant\u003e \u003cp\u003eEarly versions of the Amazon ECS container agent do not properly handle \u003ccode\u003eentryPoint\u003c/code\u003e parameters. If you have problems using \u003ccode\u003eentryPoint\u003c/code\u003e, update your container agent or enter your commands and arguments as \u003ccode\u003ecommand\u003c/code\u003e array items instead.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eThe entry point that is passed to the container. This parameter maps to \u003ccode\u003eEntrypoint\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--entrypoint\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e. For more information, see \u003ca href=\"https://docs.docker.com/engine/reference/builder/#entrypoint\"\u003ehttps://docs.docker.com/engine/reference/builder/#entrypoint\u003c/a\u003e.\u003c/p\u003e'\n        command:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: 'The command that is passed to the container. This parameter maps to \u003ccode\u003eCmd\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003eCOMMAND\u003c/code\u003e parameter to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e. For more information, see \u003ca href=\"https://docs.docker.com/engine/reference/builder/#cmd\"\u003ehttps://docs.docker.com/engine/reference/builder/#cmd\u003c/a\u003e. If there are multiple arguments, each argument should be a separated string in the array.'\n        environment:\n          allOf:\n            - $ref: '#/components/schemas/EnvironmentVariables'\n            - description: '\u003cp\u003eThe environment variables to pass to a container. This parameter maps to \u003ccode\u003eEnv\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--env\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eWe do not recommend using plaintext environment variables for sensitive information, such as credential data.\u003c/p\u003e \u003c/important\u003e'\n        environmentFiles:\n          allOf:\n            - $ref: '#/components/schemas/EnvironmentFiles'\n            - description: '\u003cp\u003eA list of files containing the environment variables to pass to a container. This parameter maps to the \u003ccode\u003e--env-file\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eYou can specify up to ten environment files. The file must have a \u003ccode\u003e.env\u003c/code\u003e file extension. Each line in an environment file should contain an environment variable in \u003ccode\u003eVARIABLE=VALUE\u003c/code\u003e format. Lines beginning with \u003ccode\u003e#\u003c/code\u003e are treated as comments and are ignored. For more information on the environment variable file syntax, see \u003ca href=\"https://docs.docker.com/compose/env-file/\"\u003eDeclare default environment variables in file\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eIf there are environment variables specified using the \u003ccode\u003eenvironment\u003c/code\u003e parameter in a container definition, they take precedence over the variables contained within an environment file. If multiple environment files are specified that contain the same variable, they are processed from the top down. It is recommended to use unique variable names. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/taskdef-envfiles.html\"\u003eSpecifying Environment Variables\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        mountPoints:\n          allOf:\n            - $ref: '#/components/schemas/MountPointList'\n            - description: '\u003cp\u003eThe mount points for data volumes in your container.\u003c/p\u003e \u003cp\u003eThis parameter maps to \u003ccode\u003eVolumes\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--volume\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eWindows containers can mount whole directories on the same drive as \u003ccode\u003e$env:ProgramData\u003c/code\u003e. Windows containers cannot mount directories on a different drive, and mount point cannot be across drives.\u003c/p\u003e'\n        volumesFrom:\n          allOf:\n            - $ref: '#/components/schemas/VolumeFromList'\n            - description: 'Data volumes to mount from another container. This parameter maps to \u003ccode\u003eVolumesFrom\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--volumes-from\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.'\n        linuxParameters:\n          allOf:\n            - $ref: '#/components/schemas/LinuxParameters'\n            - description: '\u003cp\u003eLinux-specific modifications that are applied to the container, such as Linux kernel capabilities. For more information see \u003ca\u003eKernelCapabilities\u003c/a\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis parameter is not supported for Windows containers.\u003c/p\u003e \u003c/note\u003e'\n        secrets:\n          allOf:\n            - $ref: '#/components/schemas/SecretList'\n            - description: 'The secrets to pass to the container. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html\"\u003eSpecifying Sensitive Data\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n        dependsOn:\n          allOf:\n            - $ref: '#/components/schemas/ContainerDependencies'\n            - description: '\u003cp\u003eThe dependencies defined for container startup and shutdown. A container can contain multiple dependencies. When a dependency is defined for container startup, for container shutdown it is reversed.\u003c/p\u003e \u003cp\u003eFor tasks using the EC2 launch type, the container instances require at least version 1.26.0 of the container agent to enable container dependencies. However, we recommend using the latest container agent version. For information about checking your agent version and updating to the latest version, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html\"\u003eUpdating the Amazon ECS Container Agent\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e. If you are using an Amazon ECS-optimized Linux AMI, your instance needs at least version 1.26.0-1 of the \u003ccode\u003eecs-init\u003c/code\u003e package. If your container instances are launched from version \u003ccode\u003e20190301\u003c/code\u003e or later, then they contain the required versions of the container agent and \u003ccode\u003eecs-init\u003c/code\u003e. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html\"\u003eAmazon ECS-optimized Linux AMI\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eFor tasks using the Fargate launch type, the task or service requires platform version \u003ccode\u003e1.3.0\u003c/code\u003e or later.\u003c/p\u003e'\n        startTimeout:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: '\u003cp\u003eTime duration (in seconds) to wait before giving up on resolving dependencies for a container. For example, you specify two containers in a task definition with containerA having a dependency on containerB reaching a \u003ccode\u003eCOMPLETE\u003c/code\u003e, \u003ccode\u003eSUCCESS\u003c/code\u003e, or \u003ccode\u003eHEALTHY\u003c/code\u003e status. If a \u003ccode\u003estartTimeout\u003c/code\u003e value is specified for containerB and it does not reach the desired status within that time then containerA will give up and not start. This results in the task transitioning to a \u003ccode\u003eSTOPPED\u003c/code\u003e state.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eWhen the \u003ccode\u003eECS_CONTAINER_START_TIMEOUT\u003c/code\u003e container agent configuration variable is used, it is enforced indendently from this start timeout value.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eFor tasks using the Fargate launch type, this parameter requires that the task or service uses platform version 1.3.0 or later.\u003c/p\u003e \u003cp\u003eFor tasks using the EC2 launch type, your container instances require at least version \u003ccode\u003e1.26.0\u003c/code\u003e of the container agent to enable a container start timeout value. However, we recommend using the latest container agent version. For information about checking your agent version and updating to the latest version, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html\"\u003eUpdating the Amazon ECS Container Agent\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e. If you are using an Amazon ECS-optimized Linux AMI, your instance needs at least version \u003ccode\u003e1.26.0-1\u003c/code\u003e of the \u003ccode\u003eecs-init\u003c/code\u003e package. If your container instances are launched from version \u003ccode\u003e20190301\u003c/code\u003e or later, then they contain the required versions of the container agent and \u003ccode\u003eecs-init\u003c/code\u003e. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html\"\u003eAmazon ECS-optimized Linux AMI\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        stopTimeout:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: '\u003cp\u003eTime duration (in seconds) to wait before the container is forcefully killed if it doesn''t exit normally on its own.\u003c/p\u003e \u003cp\u003eFor tasks using the Fargate launch type, the task or service requires platform version 1.3.0 or later. The max stop timeout value is 120 seconds and if the parameter is not specified, the default value of 30 seconds is used.\u003c/p\u003e \u003cp\u003eFor tasks using the EC2 launch type, if the \u003ccode\u003estopTimeout\u003c/code\u003e parameter is not specified, the value set for the Amazon ECS container agent configuration variable \u003ccode\u003eECS_CONTAINER_STOP_TIMEOUT\u003c/code\u003e is used by default. If neither the \u003ccode\u003estopTimeout\u003c/code\u003e parameter or the \u003ccode\u003eECS_CONTAINER_STOP_TIMEOUT\u003c/code\u003e agent configuration variable are set, then the default values of 30 seconds for Linux containers and 30 seconds on Windows containers are used. Your container instances require at least version 1.26.0 of the container agent to enable a container stop timeout value. However, we recommend using the latest container agent version. For information about checking your agent version and updating to the latest version, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html\"\u003eUpdating the Amazon ECS Container Agent\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e. If you are using an Amazon ECS-optimized Linux AMI, your instance needs at least version 1.26.0-1 of the \u003ccode\u003eecs-init\u003c/code\u003e package. If your container instances are launched from version \u003ccode\u003e20190301\u003c/code\u003e or later, then they contain the required versions of the container agent and \u003ccode\u003eecs-init\u003c/code\u003e. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html\"\u003eAmazon ECS-optimized Linux AMI\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        hostname:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe hostname to use for your container. This parameter maps to \u003ccode\u003eHostname\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--hostname\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThe \u003ccode\u003ehostname\u003c/code\u003e parameter is not supported if you are using the \u003ccode\u003eawsvpc\u003c/code\u003e network mode.\u003c/p\u003e \u003c/note\u003e'\n        user:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe user to use inside the container. This parameter maps to \u003ccode\u003eUser\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--user\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eWhen running tasks using the \u003ccode\u003ehost\u003c/code\u003e network mode, you should not run containers using the root user (UID 0). It is considered best practice to use a non-root user.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eYou can specify the \u003ccode\u003euser\u003c/code\u003e using the following formats. If specifying a UID or GID, you must specify it as a positive integer.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003euser\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003euser:group\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003euid\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003euid:gid\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003euser:gid\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003euid:group\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cnote\u003e \u003cp\u003eThis parameter is not supported for Windows containers.\u003c/p\u003e \u003c/note\u003e'\n        workingDirectory:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The working directory in which to run commands inside the container. This parameter maps to \u003ccode\u003eWorkingDir\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--workdir\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.'\n        disableNetworking:\n          allOf:\n            - $ref: '#/components/schemas/BoxedBoolean'\n            - description: '\u003cp\u003eWhen this parameter is true, networking is disabled within the container. This parameter maps to \u003ccode\u003eNetworkDisabled\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis parameter is not supported for Windows containers.\u003c/p\u003e \u003c/note\u003e'\n        privileged:\n          allOf:\n            - $ref: '#/components/schemas/BoxedBoolean'\n            - description: '\u003cp\u003eWhen this parameter is true, the container is given elevated privileges on the host container instance (similar to the \u003ccode\u003eroot\u003c/code\u003e user). This parameter maps to \u003ccode\u003ePrivileged\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--privileged\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis parameter is not supported for Windows containers or tasks run on Fargate.\u003c/p\u003e \u003c/note\u003e'\n        readonlyRootFilesystem:\n          allOf:\n            - $ref: '#/components/schemas/BoxedBoolean'\n            - description: '\u003cp\u003eWhen this parameter is true, the container is given read-only access to its root file system. This parameter maps to \u003ccode\u003eReadonlyRootfs\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--read-only\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis parameter is not supported for Windows containers.\u003c/p\u003e \u003c/note\u003e'\n        dnsServers:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: '\u003cp\u003eA list of DNS servers that are presented to the container. This parameter maps to \u003ccode\u003eDns\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--dns\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis parameter is not supported for Windows containers.\u003c/p\u003e \u003c/note\u003e'\n        dnsSearchDomains:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: '\u003cp\u003eA list of DNS search domains that are presented to the container. This parameter maps to \u003ccode\u003eDnsSearch\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--dns-search\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis parameter is not supported for Windows containers.\u003c/p\u003e \u003c/note\u003e'\n        extraHosts:\n          allOf:\n            - $ref: '#/components/schemas/HostEntryList'\n            - description: '\u003cp\u003eA list of hostnames and IP address mappings to append to the \u003ccode\u003e/etc/hosts\u003c/code\u003e file on the container. This parameter maps to \u003ccode\u003eExtraHosts\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--add-host\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis parameter is not supported for Windows containers or tasks that use the \u003ccode\u003eawsvpc\u003c/code\u003e network mode.\u003c/p\u003e \u003c/note\u003e'\n        dockerSecurityOptions:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: '\u003cp\u003eA list of strings to provide custom labels for SELinux and AppArmor multi-level security systems. This field is not valid for containers in tasks using the Fargate launch type.\u003c/p\u003e \u003cp\u003eWith Windows containers, this parameter can be used to reference a credential spec file when configuring a container for Active Directory authentication. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/windows-gmsa.html\"\u003eUsing gMSAs for Windows Containers\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eThis parameter maps to \u003ccode\u003eSecurityOpt\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--security-opt\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThe Amazon ECS container agent running on a container instance must register with the \u003ccode\u003eECS_SELINUX_CAPABLE=true\u003c/code\u003e or \u003ccode\u003eECS_APPARMOR_CAPABLE=true\u003c/code\u003e environment variables before containers placed on that instance can use these security options. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html\"\u003eAmazon ECS Container Agent Configuration\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eFor more information about valid values, see \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003eDocker Run Security Configuration\u003c/a\u003e. \u003c/p\u003e \u003cp\u003eValid values: \"no-new-privileges\" | \"apparmor:PROFILE\" | \"label:value\" | \"credentialspec:CredentialSpecFilePath\"\u003c/p\u003e'\n        interactive:\n          allOf:\n            - $ref: '#/components/schemas/BoxedBoolean'\n            - description: 'When this parameter is \u003ccode\u003etrue\u003c/code\u003e, this allows you to deploy containerized applications that require \u003ccode\u003estdin\u003c/code\u003e or a \u003ccode\u003etty\u003c/code\u003e to be allocated. This parameter maps to \u003ccode\u003eOpenStdin\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--interactive\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.'\n        pseudoTerminal:\n          allOf:\n            - $ref: '#/components/schemas/BoxedBoolean'\n            - description: 'When this parameter is \u003ccode\u003etrue\u003c/code\u003e, a TTY is allocated. This parameter maps to \u003ccode\u003eTty\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--tty\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.'\n        dockerLabels:\n          allOf:\n            - $ref: '#/components/schemas/DockerLabelsMap'\n            - description: 'A key/value map of labels to add to the container. This parameter maps to \u003ccode\u003eLabels\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--label\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e. This parameter requires version 1.18 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log in to your container instance and run the following command: \u003ccode\u003esudo docker version --format ''{{.Server.APIVersion}}''\u003c/code\u003e '\n        ulimits:\n          allOf:\n            - $ref: '#/components/schemas/UlimitList'\n            - description: '\u003cp\u003eA list of \u003ccode\u003eulimits\u003c/code\u003e to set in the container. If a ulimit value is specified in a task definition, it will override the default values set by Docker. This parameter maps to \u003ccode\u003eUlimits\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--ulimit\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e. Valid naming values are displayed in the \u003ca\u003eUlimit\u003c/a\u003e data type.\u003c/p\u003e \u003cp\u003eAmazon ECS tasks hosted on Fargate use the default resource limit values set by the operating system with the exception of the \u003ccode\u003enofile\u003c/code\u003e resource limit parameter which Fargate overrides. The \u003ccode\u003enofile\u003c/code\u003e resource limit sets a restriction on the number of open files that a container can use. The default \u003ccode\u003enofile\u003c/code\u003e soft limit is \u003ccode\u003e1024\u003c/code\u003e and hard limit is \u003ccode\u003e4096\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eThis parameter requires version 1.18 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log in to your container instance and run the following command: \u003ccode\u003esudo docker version --format ''{{.Server.APIVersion}}''\u003c/code\u003e \u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis parameter is not supported for Windows containers.\u003c/p\u003e \u003c/note\u003e'\n        logConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/LogConfiguration'\n            - description: '\u003cp\u003eThe log configuration specification for the container.\u003c/p\u003e \u003cp\u003eThis parameter maps to \u003ccode\u003eLogConfig\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--log-driver\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e. By default, containers use the same logging driver that the Docker daemon uses. However the container may use a different logging driver than the Docker daemon by specifying a log driver with this parameter in the container definition. To use a different logging driver for a container, the log system must be configured properly on the container instance (or on a different log server for remote logging options). For more information on the options for different supported log drivers, see \u003ca href=\"https://docs.docker.com/engine/admin/logging/overview/\"\u003eConfigure logging drivers\u003c/a\u003e in the Docker documentation.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eAmazon ECS currently supports a subset of the logging drivers available to the Docker daemon (shown in the \u003ca\u003eLogConfiguration\u003c/a\u003e data type). Additional log drivers may be available in future releases of the Amazon ECS container agent.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eThis parameter requires version 1.18 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log in to your container instance and run the following command: \u003ccode\u003esudo docker version --format ''{{.Server.APIVersion}}''\u003c/code\u003e \u003c/p\u003e \u003cnote\u003e \u003cp\u003eThe Amazon ECS container agent running on a container instance must register the logging drivers available on that instance with the \u003ccode\u003eECS_AVAILABLE_LOGGING_DRIVERS\u003c/code\u003e environment variable before containers placed on that instance can use these log configuration options. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html\"\u003eAmazon ECS Container Agent Configuration\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003c/note\u003e'\n        healthCheck:\n          allOf:\n            - $ref: '#/components/schemas/HealthCheck'\n            - description: 'The container health check command and associated configuration parameters for the container. This parameter maps to \u003ccode\u003eHealthCheck\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003eHEALTHCHECK\u003c/code\u003e parameter of \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.'\n        systemControls:\n          allOf:\n            - $ref: '#/components/schemas/SystemControls'\n            - description: '\u003cp\u003eA list of namespaced kernel parameters to set in the container. This parameter maps to \u003ccode\u003eSysctls\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--sysctl\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eIt is not recommended that you specify network-related \u003ccode\u003esystemControls\u003c/code\u003e parameters for multiple containers in a single task that also uses either the \u003ccode\u003eawsvpc\u003c/code\u003e or \u003ccode\u003ehost\u003c/code\u003e network modes. For tasks that use the \u003ccode\u003eawsvpc\u003c/code\u003e network mode, the container that is started last determines which \u003ccode\u003esystemControls\u003c/code\u003e parameters take effect. For tasks that use the \u003ccode\u003ehost\u003c/code\u003e network mode, it changes the container instance''s namespaced kernel parameters as well as the containers.\u003c/p\u003e \u003c/note\u003e'\n        resourceRequirements:\n          allOf:\n            - $ref: '#/components/schemas/ResourceRequirements'\n            - description: The type and amount of a resource to assign to a container. The only supported resource is a GPU.\n        firelensConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/FirelensConfiguration'\n            - description: 'The FireLens configuration for the container. This is used to specify and configure a log router for container logs. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html\"\u003eCustom Log Routing\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n      description: Container definitions are used in task definitions to describe the different containers that are launched as part of a task.\n    ContainerDefinitions:\n      type: array\n      items:\n        $ref: '#/components/schemas/ContainerDefinition'\n    ContainerDependency:\n      type: object\n      required:\n        - containerName\n        - condition\n      properties:\n        containerName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of a container.\n        condition:\n          allOf:\n            - $ref: '#/components/schemas/ContainerCondition'\n            - description: '\u003cp\u003eThe dependency condition of the container. The following are the available conditions and their behavior:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSTART\u003c/code\u003e - This condition emulates the behavior of links and volumes today. It validates that a dependent container is started before permitting other containers to start.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCOMPLETE\u003c/code\u003e - This condition validates that a dependent container runs to completion (exits) before permitting other containers to start. This can be useful for nonessential containers that run a script and then exit. This condition cannot be set on an essential container.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSUCCESS\u003c/code\u003e - This condition is the same as \u003ccode\u003eCOMPLETE\u003c/code\u003e, but it also requires that the container exits with a \u003ccode\u003ezero\u003c/code\u003e status. This condition cannot be set on an essential container.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eHEALTHY\u003c/code\u003e - This condition validates that the dependent container passes its Docker health check before permitting other containers to start. This requires that the dependent container has health checks configured. This condition is confirmed only at task startup.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: '\u003cp\u003eThe dependencies defined for container startup and shutdown. A container can contain multiple dependencies. When a dependency is defined for container startup, for container shutdown it is reversed.\u003c/p\u003e \u003cp\u003eYour Amazon ECS container instances require at least version 1.26.0 of the container agent to enable container dependencies. However, we recommend using the latest container agent version. For information about checking your agent version and updating to the latest version, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html\"\u003eUpdating the Amazon ECS Container Agent\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e. If you are using an Amazon ECS-optimized Linux AMI, your instance needs at least version 1.26.0-1 of the \u003ccode\u003eecs-init\u003c/code\u003e package. If your container instances are launched from version \u003ccode\u003e20190301\u003c/code\u003e or later, then they contain the required versions of the container agent and \u003ccode\u003eecs-init\u003c/code\u003e. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html\"\u003eAmazon ECS-optimized Linux AMI\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eFor tasks using the Fargate launch type, this parameter requires that the task or service uses platform version 1.3.0 or later.\u003c/p\u003e \u003c/note\u003e'\n    Long:\n      type: integer\n    VersionInfo:\n      type: object\n      properties:\n        agentVersion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The version number of the Amazon ECS container agent.\n        agentHash:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The Git commit hash for the Amazon ECS container agent build on the \u003ca href=\"https://github.com/aws/amazon-ecs-agent/commits/master\"\u003eamazon-ecs-agent \u003c/a\u003e GitHub repository.'\n        dockerVersion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Docker version running on the container instance.\n      description: The Docker and Amazon ECS container agent version information about a container instance.\n    Resources:\n      type: array\n      items:\n        $ref: '#/components/schemas/Resource'\n    Timestamp:\n      type: string\n      format: date-time\n    ContainerInstance:\n      type: object\n      properties:\n        containerInstanceArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The Amazon Resource Name (ARN) of the container instance. The ARN contains the \u003ccode\u003earn:aws:ecs\u003c/code\u003e namespace, followed by the Region of the container instance, the Amazon Web Services account ID of the container instance owner, the \u003ccode\u003econtainer-instance\u003c/code\u003e namespace, and then the container instance ID. For example, \u003ccode\u003earn:aws:ecs:region:aws_account_id:container-instance/container_instance_ID\u003c/code\u003e.'\n        ec2InstanceId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The ID of the container instance. For Amazon EC2 instances, this value is the Amazon EC2 instance ID. For external instances, this value is the Amazon Web Services Systems Manager managed instance ID.'\n        capacityProviderName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The capacity provider associated with the container instance.\n        version:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: 'The version counter for the container instance. Every time a container instance experiences a change that triggers a CloudWatch event, the version counter is incremented. If you are replicating your Amazon ECS container instance state with CloudWatch Events, you can compare the version of a container instance reported by the Amazon ECS APIs with the version reported in CloudWatch Events for the container instance (inside the \u003ccode\u003edetail\u003c/code\u003e object) to verify that the version in your event stream is current.'\n        versionInfo:\n          allOf:\n            - $ref: '#/components/schemas/VersionInfo'\n            - description: The version information for the Amazon ECS container agent and Docker daemon running on the container instance.\n        remainingResources:\n          allOf:\n            - $ref: '#/components/schemas/Resources'\n            - description: 'For CPU and memory resource types, this parameter describes the remaining CPU and memory that has not already been allocated to tasks and is therefore available for new tasks. For port resource types, this parameter describes the ports that were reserved by the Amazon ECS container agent (at instance registration time) and any task containers that have reserved port mappings on the host (with the \u003ccode\u003ehost\u003c/code\u003e or \u003ccode\u003ebridge\u003c/code\u003e network mode). Any port that is not specified here is available for new tasks.'\n        registeredResources:\n          allOf:\n            - $ref: '#/components/schemas/Resources'\n            - description: 'For CPU and memory resource types, this parameter describes the amount of each resource that was available on the container instance when the container agent registered it with Amazon ECS. This value represents the total amount of CPU and memory that can be allocated on this container instance to tasks. For port resource types, this parameter describes the ports that were reserved by the Amazon ECS container agent when it registered the container instance with Amazon ECS.'\n        status:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe status of the container instance. The valid values are \u003ccode\u003eREGISTERING\u003c/code\u003e, \u003ccode\u003eREGISTRATION_FAILED\u003c/code\u003e, \u003ccode\u003eACTIVE\u003c/code\u003e, \u003ccode\u003eINACTIVE\u003c/code\u003e, \u003ccode\u003eDEREGISTERING\u003c/code\u003e, or \u003ccode\u003eDRAINING\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIf your account has opted in to the \u003ccode\u003eawsvpcTrunking\u003c/code\u003e account setting, then any newly registered container instance will transition to a \u003ccode\u003eREGISTERING\u003c/code\u003e status while the trunk elastic network interface is provisioned for the instance. If the registration fails, the instance will transition to a \u003ccode\u003eREGISTRATION_FAILED\u003c/code\u003e status. You can describe the container instance and see the reason for failure in the \u003ccode\u003estatusReason\u003c/code\u003e parameter. Once the container instance is terminated, the instance transitions to a \u003ccode\u003eDEREGISTERING\u003c/code\u003e status while the trunk elastic network interface is deprovisioned. The instance then transitions to an \u003ccode\u003eINACTIVE\u003c/code\u003e status.\u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eACTIVE\u003c/code\u003e status indicates that the container instance can accept tasks. The \u003ccode\u003eDRAINING\u003c/code\u003e indicates that new tasks are not placed on the container instance and any service tasks running on the container instance are removed if possible. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/container-instance-draining.html\"\u003eContainer Instance Draining\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        statusReason:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The reason that the container instance reached its current status.\n        agentConnected:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: This parameter returns \u003ccode\u003etrue\u003c/code\u003e if the agent is connected to Amazon ECS. Registered instances with an agent that may be unhealthy or stopped return \u003ccode\u003efalse\u003c/code\u003e. Only instances connected to an agent can accept placement requests.\n        runningTasksCount:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The number of tasks on the container instance that are in the \u003ccode\u003eRUNNING\u003c/code\u003e status.\n        pendingTasksCount:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The number of tasks on the container instance that are in the \u003ccode\u003ePENDING\u003c/code\u003e status.\n        agentUpdateStatus:\n          allOf:\n            - $ref: '#/components/schemas/AgentUpdateStatus'\n            - description: 'The status of the most recent agent update. If an update has never been requested, this value is \u003ccode\u003eNULL\u003c/code\u003e.'\n        attributes:\n          allOf:\n            - $ref: '#/components/schemas/Attributes'\n            - description: 'The attributes set for the container instance, either by the Amazon ECS container agent at instance registration or manually with the \u003ca\u003ePutAttributes\u003c/a\u003e operation.'\n        registeredAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix timestamp for when the container instance was registered.\n        attachments:\n          allOf:\n            - $ref: '#/components/schemas/Attachments'\n            - description: 'The resources attached to a container instance, such as elastic network interfaces.'\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: '\u003cp\u003eThe metadata that you apply to the container instance to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.\u003c/p\u003e \u003cp\u003eThe following basic restrictions apply to tags:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eMaximum number of tags per resource - 50\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor each resource, each tag key must be unique, and each tag key can have only one value.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum key length - 128 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum value length - 256 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTag keys and values are case-sensitive.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eDo not use \u003ccode\u003eaws:\u003c/code\u003e, \u003ccode\u003eAWS:\u003c/code\u003e, or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: An EC2 instance that is running the Amazon ECS agent and has been registered with a cluster.\n    ContainerInstanceField:\n      type: string\n      enum:\n        - TAGS\n    ContainerInstanceFieldList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ContainerInstanceField'\n    ContainerInstanceStatus:\n      type: string\n      enum:\n        - ACTIVE\n        - DRAINING\n        - REGISTERING\n        - DEREGISTERING\n        - REGISTRATION_FAILED\n    ContainerInstances:\n      type: array\n      items:\n        $ref: '#/components/schemas/ContainerInstance'\n    ContainerOverride:\n      type: object\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the container that receives the override. This parameter is required if any override is specified.\n        command:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: The command to send to the container that overrides the default command from the Docker image or the task definition. You must also specify a container name.\n        environment:\n          allOf:\n            - $ref: '#/components/schemas/EnvironmentVariables'\n            - description: 'The environment variables to send to the container. You can add new environment variables, which are added to the container at launch, or you can override the existing environment variables from the Docker image or the task definition. You must also specify a container name.'\n        environmentFiles:\n          allOf:\n            - $ref: '#/components/schemas/EnvironmentFiles'\n            - description: 'A list of files containing the environment variables to pass to a container, instead of the value from the container definition.'\n        cpu:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: 'The number of \u003ccode\u003ecpu\u003c/code\u003e units reserved for the container, instead of the default value from the task definition. You must also specify a container name.'\n        memory:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: 'The hard limit (in MiB) of memory to present to the container, instead of the default value from the task definition. If your container attempts to exceed the memory specified here, the container is killed. You must also specify a container name.'\n        memoryReservation:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: 'The soft limit (in MiB) of memory to reserve for the container, instead of the default value from the task definition. You must also specify a container name.'\n        resourceRequirements:\n          allOf:\n            - $ref: '#/components/schemas/ResourceRequirements'\n            - description: 'The type and amount of a resource to assign to a container, instead of the default value from the task definition. The only supported resource is a GPU.'\n      description: 'The overrides that should be sent to a container. An empty container override can be passed in. An example of an empty container override would be \u003ccode\u003e{\"containerOverrides\": [ ] }\u003c/code\u003e. If a non-empty container override is specified, the \u003ccode\u003ename\u003c/code\u003e parameter must be included.'\n    ContainerOverrides:\n      type: array\n      items:\n        $ref: '#/components/schemas/ContainerOverride'\n    ContainerStateChange:\n      type: object\n      properties:\n        containerName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the container.\n        imageDigest:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The container image SHA 256 digest.\n        runtimeId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ID of the Docker container.\n        exitCode:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: 'The exit code for the container, if the state change is a result of the container exiting.'\n        networkBindings:\n          allOf:\n            - $ref: '#/components/schemas/NetworkBindings'\n            - description: Any network bindings associated with the container.\n        reason:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The reason for the state change.\n        status:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The status of the container.\n      description: An object representing a change in state for a container.\n    ContainerStateChanges:\n      type: array\n      items:\n        $ref: '#/components/schemas/ContainerStateChange'\n    Containers:\n      type: array\n      items:\n        $ref: '#/components/schemas/Container'\n    LoadBalancers:\n      type: array\n      items:\n        $ref: '#/components/schemas/LoadBalancer'\n    ServiceRegistries:\n      type: array\n      items:\n        $ref: '#/components/schemas/ServiceRegistry'\n    LaunchType:\n      type: string\n      enum:\n        - EC2\n        - FARGATE\n        - EXTERNAL\n    DeploymentConfiguration:\n      type: object\n      properties:\n        deploymentCircuitBreaker:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentCircuitBreaker'\n            - description: '\u003cnote\u003e \u003cp\u003eThe deployment circuit breaker can only be used for services using the rolling update (\u003ccode\u003eECS\u003c/code\u003e) deployment type.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eThe \u003cb\u003edeployment circuit breaker\u003c/b\u003e determines whether a service deployment will fail if the service can''t reach a steady state. If deployment circuit breaker is enabled, a service deployment will transition to a failed state and stop launching new tasks. If rollback is enabled, when a service deployment fails, the service is rolled back to the last deployment that completed successfully.\u003c/p\u003e'\n        maximumPercent:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: '\u003cp\u003eIf a service is using the rolling update (\u003ccode\u003eECS\u003c/code\u003e) deployment type, the \u003cb\u003emaximum percent\u003c/b\u003e parameter represents an upper limit on the number of tasks in a service that are allowed in the \u003ccode\u003eRUNNING\u003c/code\u003e or \u003ccode\u003ePENDING\u003c/code\u003e state during a deployment, as a percentage of the desired number of tasks (rounded down to the nearest integer), and while any container instances are in the \u003ccode\u003eDRAINING\u003c/code\u003e state if the service contains tasks using the EC2 launch type. This parameter enables you to define the deployment batch size. For example, if your service has a desired number of four tasks and a maximum percent value of 200%, the scheduler may start four new tasks before stopping the four older tasks (provided that the cluster resources required to do this are available). The default value for maximum percent is 200%.\u003c/p\u003e \u003cp\u003eIf a service is using the blue/green (\u003ccode\u003eCODE_DEPLOY\u003c/code\u003e) or \u003ccode\u003eEXTERNAL\u003c/code\u003e deployment types and tasks that use the EC2 launch type, the \u003cb\u003emaximum percent\u003c/b\u003e value is set to the default value and is used to define the upper limit on the number of the tasks in the service that remain in the \u003ccode\u003eRUNNING\u003c/code\u003e state while the container instances are in the \u003ccode\u003eDRAINING\u003c/code\u003e state. If the tasks in the service use the Fargate launch type, the maximum percent value is not used, although it is returned when describing your service.\u003c/p\u003e'\n        minimumHealthyPercent:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: '\u003cp\u003eIf a service is using the rolling update (\u003ccode\u003eECS\u003c/code\u003e) deployment type, the \u003cb\u003eminimum healthy percent\u003c/b\u003e represents a lower limit on the number of tasks in a service that must remain in the \u003ccode\u003eRUNNING\u003c/code\u003e state during a deployment, as a percentage of the desired number of tasks (rounded up to the nearest integer), and while any container instances are in the \u003ccode\u003eDRAINING\u003c/code\u003e state if the service contains tasks using the EC2 launch type. This parameter enables you to deploy without using additional cluster capacity. For example, if your service has a desired number of four tasks and a minimum healthy percent of 50%, the scheduler may stop two existing tasks to free up cluster capacity before starting two new tasks. Tasks for services that \u003ci\u003edo not\u003c/i\u003e use a load balancer are considered healthy if they are in the \u003ccode\u003eRUNNING\u003c/code\u003e state; tasks for services that \u003ci\u003edo\u003c/i\u003e use a load balancer are considered healthy if they are in the \u003ccode\u003eRUNNING\u003c/code\u003e state and they are reported as healthy by the load balancer. The default value for minimum healthy percent is 100%.\u003c/p\u003e \u003cp\u003eIf a service is using the blue/green (\u003ccode\u003eCODE_DEPLOY\u003c/code\u003e) or \u003ccode\u003eEXTERNAL\u003c/code\u003e deployment types and tasks that use the EC2 launch type, the \u003cb\u003eminimum healthy percent\u003c/b\u003e value is set to the default value and is used to define the lower limit on the number of the tasks in the service that remain in the \u003ccode\u003eRUNNING\u003c/code\u003e state while the container instances are in the \u003ccode\u003eDRAINING\u003c/code\u003e state. If the tasks in the service use the Fargate launch type, the minimum healthy percent value is not used, although it is returned when describing your service.\u003c/p\u003e'\n      description: Optional deployment parameters that control how many tasks run during a deployment and the ordering of stopping and starting tasks.\n    PlacementConstraints:\n      type: array\n      items:\n        $ref: '#/components/schemas/PlacementConstraint'\n    PlacementStrategies:\n      type: array\n      items:\n        $ref: '#/components/schemas/PlacementStrategy'\n    NetworkConfiguration:\n      type: object\n      properties:\n        awsvpcConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/AwsVpcConfiguration'\n            - description: \u003cp\u003eThe VPC subnets and security groups associated with a task.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eAll specified subnets and security groups must be from the same VPC.\u003c/p\u003e \u003c/note\u003e\n      description: An object representing the network configuration for a task or service.\n    SchedulingStrategy:\n      type: string\n      enum:\n        - REPLICA\n        - DAEMON\n    DeploymentController:\n      type: object\n      required:\n        - type\n      properties:\n        type:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentControllerType'\n            - description: '\u003cp\u003eThe deployment controller type to use.\u003c/p\u003e \u003cp\u003eThere are three deployment controller types available:\u003c/p\u003e \u003cdl\u003e \u003cdt\u003eECS\u003c/dt\u003e \u003cdd\u003e \u003cp\u003eThe rolling update (\u003ccode\u003eECS\u003c/code\u003e) deployment type involves replacing the current running version of the container with the latest version. The number of containers Amazon ECS adds or removes from the service during a rolling update is controlled by adjusting the minimum and maximum number of healthy tasks allowed during a service deployment, as specified in the \u003ca\u003eDeploymentConfiguration\u003c/a\u003e.\u003c/p\u003e \u003c/dd\u003e \u003cdt\u003eCODE_DEPLOY\u003c/dt\u003e \u003cdd\u003e \u003cp\u003eThe blue/green (\u003ccode\u003eCODE_DEPLOY\u003c/code\u003e) deployment type uses the blue/green deployment model powered by CodeDeploy, which allows you to verify a new deployment of a service before sending production traffic to it.\u003c/p\u003e \u003c/dd\u003e \u003cdt\u003eEXTERNAL\u003c/dt\u003e \u003cdd\u003e \u003cp\u003eThe external (\u003ccode\u003eEXTERNAL\u003c/code\u003e) deployment type enables you to use any third-party deployment controller for full control over the deployment process for an Amazon ECS service.\u003c/p\u003e \u003c/dd\u003e \u003c/dl\u003e'\n      description: 'The deployment controller to use for the service. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html\"\u003eAmazon ECS Deployment Types\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n    PropagateTags:\n      type: string\n      enum:\n        - TASK_DEFINITION\n        - SERVICE\n    Service:\n      type: object\n      properties:\n        serviceArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The ARN that identifies the service. The ARN contains the \u003ccode\u003earn:aws:ecs\u003c/code\u003e namespace, followed by the Region of the service, the Amazon Web Services account ID of the service owner, the \u003ccode\u003eservice\u003c/code\u003e namespace, and then the service name. For example, \u003ccode\u003earn:aws:ecs:region:012345678910:service/my-service\u003c/code\u003e.'\n        serviceName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The name of your service. Up to 255 letters (uppercase and lowercase), numbers, underscores, and hyphens are allowed. Service names must be unique within a cluster, but you can have similarly named services in multiple clusters within a Region or across multiple Regions.'\n        clusterArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the cluster that hosts the service.\n        loadBalancers:\n          allOf:\n            - $ref: '#/components/schemas/LoadBalancers'\n            - description: 'A list of Elastic Load Balancing load balancer objects, containing the load balancer name, the container name (as it appears in a container definition), and the container port to access from the load balancer.'\n        serviceRegistries:\n          allOf:\n            - $ref: '#/components/schemas/ServiceRegistries'\n            - description: 'The details of the service discovery registries to assign to this service. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html\"\u003eService Discovery\u003c/a\u003e.'\n        status:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The status of the service. The valid values are \u003ccode\u003eACTIVE\u003c/code\u003e, \u003ccode\u003eDRAINING\u003c/code\u003e, or \u003ccode\u003eINACTIVE\u003c/code\u003e.'\n        desiredCount:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: 'The desired number of instantiations of the task definition to keep running on the service. This value is specified when the service is created with \u003ca\u003eCreateService\u003c/a\u003e, and it can be modified with \u003ca\u003eUpdateService\u003c/a\u003e.'\n        runningCount:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The number of tasks in the cluster that are in the \u003ccode\u003eRUNNING\u003c/code\u003e state.\n        pendingCount:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The number of tasks in the cluster that are in the \u003ccode\u003ePENDING\u003c/code\u003e state.\n        launchType:\n          allOf:\n            - $ref: '#/components/schemas/LaunchType'\n            - description: 'The launch type the service is using. When using the DescribeServices API, this field is omitted if the service was created using a capacity provider strategy.'\n        capacityProviderStrategy:\n          allOf:\n            - $ref: '#/components/schemas/CapacityProviderStrategy'\n            - description: 'The capacity provider strategy the service is using. When using the DescribeServices API, this field is omitted if the service was created using a launch type.'\n        platformVersion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The platform version on which to run your service. A platform version is only specified for tasks hosted on Fargate. If one is not specified, the \u003ccode\u003eLATEST\u003c/code\u003e platform version is used by default. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html\"\u003eFargate Platform Versions\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n        taskDefinition:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The task definition to use for tasks in the service. This value is specified when the service is created with \u003ca\u003eCreateService\u003c/a\u003e, and it can be modified with \u003ca\u003eUpdateService\u003c/a\u003e.'\n        deploymentConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentConfiguration'\n            - description: Optional deployment parameters that control how many tasks run during the deployment and the ordering of stopping and starting tasks.\n        taskSets:\n          allOf:\n            - $ref: '#/components/schemas/TaskSets'\n            - description: 'Information about a set of Amazon ECS tasks in either an CodeDeploy or an \u003ccode\u003eEXTERNAL\u003c/code\u003e deployment. An Amazon ECS task set includes details such as the desired number of tasks, how many tasks are running, and whether the task set serves production traffic.'\n        deployments:\n          allOf:\n            - $ref: '#/components/schemas/Deployments'\n            - description: The current state of deployments for the service.\n        roleArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ARN of the IAM role associated with the service that allows the Amazon ECS container agent to register container instances with an Elastic Load Balancing load balancer.\n        events:\n          allOf:\n            - $ref: '#/components/schemas/ServiceEvents'\n            - description: The event stream for your service. A maximum of 100 of the latest events are displayed.\n        createdAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix timestamp for when the service was created.\n        placementConstraints:\n          allOf:\n            - $ref: '#/components/schemas/PlacementConstraints'\n            - description: The placement constraints for the tasks in the service.\n        placementStrategy:\n          allOf:\n            - $ref: '#/components/schemas/PlacementStrategies'\n            - description: The placement strategy that determines how tasks for the service are placed.\n        networkConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/NetworkConfiguration'\n            - description: The VPC subnet and security group configuration for tasks that receive their own elastic network interface by using the \u003ccode\u003eawsvpc\u003c/code\u003e networking mode.\n        healthCheckGracePeriodSeconds:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: 'The period of time, in seconds, that the Amazon ECS service scheduler ignores unhealthy Elastic Load Balancing target health checks after a task has first started.'\n        schedulingStrategy:\n          allOf:\n            - $ref: '#/components/schemas/SchedulingStrategy'\n            - description: '\u003cp\u003eThe scheduling strategy to use for the service. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html\"\u003eServices\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eThere are two service scheduler strategies available:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eREPLICA\u003c/code\u003e-The replica scheduling strategy places and maintains the desired number of tasks across your cluster. By default, the service scheduler spreads tasks across Availability Zones. You can use task placement strategies and constraints to customize task placement decisions.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDAEMON\u003c/code\u003e-The daemon scheduling strategy deploys exactly one task on each active container instance that meets all of the task placement constraints that you specify in your cluster. The service scheduler also evaluates the task placement constraints for running tasks and will stop tasks that do not meet the placement constraints.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eFargate tasks do not support the \u003ccode\u003eDAEMON\u003c/code\u003e scheduling strategy.\u003c/p\u003e \u003c/note\u003e \u003c/li\u003e \u003c/ul\u003e'\n        deploymentController:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentController'\n            - description: 'The deployment controller type the service is using. When using the DescribeServices API, this field is omitted if the service is using the \u003ccode\u003eECS\u003c/code\u003e deployment controller type.'\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: '\u003cp\u003eThe metadata that you apply to the service to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.\u003c/p\u003e \u003cp\u003eThe following basic restrictions apply to tags:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eMaximum number of tags per resource - 50\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor each resource, each tag key must be unique, and each tag key can have only one value.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum key length - 128 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum value length - 256 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTag keys and values are case-sensitive.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eDo not use \u003ccode\u003eaws:\u003c/code\u003e, \u003ccode\u003eAWS:\u003c/code\u003e, or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        createdBy:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The principal that created the service.\n        enableECSManagedTags:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: 'Specifies whether to enable Amazon ECS managed tags for the tasks in the service. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html\"\u003eTagging Your Amazon ECS Resources\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n        propagateTags:\n          allOf:\n            - $ref: '#/components/schemas/PropagateTags'\n            - description: 'Specifies whether to propagate the tags from the task definition or the service to the task. If no value is specified, the tags are not propagated.'\n        enableExecuteCommand:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: 'Whether or not the execute command functionality is enabled for the service. If \u003ccode\u003etrue\u003c/code\u003e, the execute command functionality is enabled for all containers in tasks as part of the service.'\n      description: Details on a service within a cluster\n    Scale:\n      type: object\n      properties:\n        value:\n          allOf:\n            - $ref: '#/components/schemas/Double'\n            - description: 'The value, specified as a percent total of a service''s \u003ccode\u003edesiredCount\u003c/code\u003e, to scale the task set. Accepted values are numbers between 0 and 100.'\n        unit:\n          allOf:\n            - $ref: '#/components/schemas/ScaleUnit'\n            - description: The unit of measure for the scale value.\n      description: A floating-point percentage of the desired number of tasks to place and keep running in the task set.\n    TaskSet:\n      type: object\n      properties:\n        id:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ID of the task set.\n        taskSetArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the task set.\n        serviceArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the service the task set exists in.\n        clusterArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the cluster that the service that hosts the task set exists in.\n        startedBy:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The tag specified when a task set is started. If the task set is created by an CodeDeploy deployment, the \u003ccode\u003estartedBy\u003c/code\u003e parameter is \u003ccode\u003eCODE_DEPLOY\u003c/code\u003e. For a task set created for an external deployment, the startedBy field isn''t used.'\n        externalId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe external ID associated with the task set.\u003c/p\u003e \u003cp\u003eIf a task set is created by an CodeDeploy deployment, the \u003ccode\u003eexternalId\u003c/code\u003e parameter contains the CodeDeploy deployment ID.\u003c/p\u003e \u003cp\u003eIf a task set is created for an external deployment and is associated with a service discovery registry, the \u003ccode\u003eexternalId\u003c/code\u003e parameter contains the \u003ccode\u003eECS_TASK_SET_EXTERNAL_ID\u003c/code\u003e Cloud Map attribute.\u003c/p\u003e'\n        status:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe status of the task set. The following describes each state:\u003c/p\u003e \u003cdl\u003e \u003cdt\u003ePRIMARY\u003c/dt\u003e \u003cdd\u003e \u003cp\u003eThe task set is serving production traffic.\u003c/p\u003e \u003c/dd\u003e \u003cdt\u003eACTIVE\u003c/dt\u003e \u003cdd\u003e \u003cp\u003eThe task set is not serving production traffic.\u003c/p\u003e \u003c/dd\u003e \u003cdt\u003eDRAINING\u003c/dt\u003e \u003cdd\u003e \u003cp\u003eThe tasks in the task set are being stopped and their corresponding targets are being deregistered from their target group.\u003c/p\u003e \u003c/dd\u003e \u003c/dl\u003e'\n        taskDefinition:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The task definition the task set is using.\n        computedDesiredCount:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: 'The computed desired count for the task set. This is calculated by multiplying the service''s \u003ccode\u003edesiredCount\u003c/code\u003e by the task set''s \u003ccode\u003escale\u003c/code\u003e percentage. The result is always rounded up. For example, if the computed desired count is 1.2, it rounds up to 2 tasks.'\n        pendingCount:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The number of tasks in the task set that are in the \u003ccode\u003ePENDING\u003c/code\u003e status during a deployment. A task in the \u003ccode\u003ePENDING\u003c/code\u003e state is preparing to enter the \u003ccode\u003eRUNNING\u003c/code\u003e state. A task set enters the \u003ccode\u003ePENDING\u003c/code\u003e status when it launches for the first time or when it is restarted after being in the \u003ccode\u003eSTOPPED\u003c/code\u003e state.\n        runningCount:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The number of tasks in the task set that are in the \u003ccode\u003eRUNNING\u003c/code\u003e status during a deployment. A task in the \u003ccode\u003eRUNNING\u003c/code\u003e state is running and ready for use.\n        createdAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix timestamp for when the task set was created.\n        updatedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix timestamp for when the task set was last updated.\n        launchType:\n          allOf:\n            - $ref: '#/components/schemas/LaunchType'\n            - description: 'The launch type the tasks in the task set are using. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html\"\u003eAmazon ECS launch types\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n        capacityProviderStrategy:\n          allOf:\n            - $ref: '#/components/schemas/CapacityProviderStrategy'\n            - description: The capacity provider strategy associated with the task set.\n        platformVersion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The Fargate platform version on which the tasks in the task set are running. A platform version is only specified for tasks run on Fargate. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html\"\u003eFargate platform versions\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n        networkConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/NetworkConfiguration'\n            - description: The network configuration for the task set.\n        loadBalancers:\n          allOf:\n            - $ref: '#/components/schemas/LoadBalancers'\n            - description: Details on a load balancer that is used with a task set.\n        serviceRegistries:\n          allOf:\n            - $ref: '#/components/schemas/ServiceRegistries'\n            - description: 'The details of the service discovery registries to assign to this task set. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html\"\u003eService discovery\u003c/a\u003e.'\n        scale:\n          allOf:\n            - $ref: '#/components/schemas/Scale'\n            - description: A floating-point percentage of the desired number of tasks to place and keep running in the task set.\n        stabilityStatus:\n          allOf:\n            - $ref: '#/components/schemas/StabilityStatus'\n            - description: '\u003cp\u003eThe stability status, which indicates whether the task set has reached a steady state. If the following conditions are met, the task set will be in \u003ccode\u003eSTEADY_STATE\u003c/code\u003e:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eThe task \u003ccode\u003erunningCount\u003c/code\u003e is equal to the \u003ccode\u003ecomputedDesiredCount\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eThe \u003ccode\u003ependingCount\u003c/code\u003e is \u003ccode\u003e0\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eThere are no tasks running on container instances in the \u003ccode\u003eDRAINING\u003c/code\u003e status.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAll tasks are reporting a healthy status from the load balancers, service discovery, and container health checks.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf any of those conditions are not met, the stability status returns \u003ccode\u003eSTABILIZING\u003c/code\u003e.\u003c/p\u003e'\n        stabilityStatusAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix timestamp for when the task set stability status was retrieved.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: '\u003cp\u003eThe metadata that you apply to the task set to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.\u003c/p\u003e \u003cp\u003eThe following basic restrictions apply to tags:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eMaximum number of tags per resource - 50\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor each resource, each tag key must be unique, and each tag key can have only one value.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum key length - 128 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum value length - 256 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTag keys and values are case-sensitive.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eDo not use \u003ccode\u003eaws:\u003c/code\u003e, \u003ccode\u003eAWS:\u003c/code\u003e, or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: 'Information about a set of Amazon ECS tasks in either an CodeDeploy or an \u003ccode\u003eEXTERNAL\u003c/code\u003e deployment. An Amazon ECS task set includes details such as the desired number of tasks, how many tasks are running, and whether the task set serves production traffic.'\n    SettingName:\n      type: string\n      enum:\n        - serviceLongArnFormat\n        - taskLongArnFormat\n        - containerInstanceLongArnFormat\n        - awsvpcTrunking\n        - containerInsights\n    Setting:\n      type: object\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/SettingName'\n            - description: The Amazon ECS resource name.\n        value:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Whether the account setting is enabled or disabled for the specified resource.\n        principalArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The ARN of the principal, which can be an IAM user, IAM role, or the root user. If this field is omitted, the authenticated user is assumed.'\n      description: The current account setting for a resource.\n    DeploymentRolloutState:\n      type: string\n      enum:\n        - COMPLETED\n        - FAILED\n        - IN_PROGRESS\n    Deployment:\n      type: object\n      properties:\n        id:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ID of the deployment.\n        status:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe status of the deployment. The following describes each state:\u003c/p\u003e \u003cdl\u003e \u003cdt\u003ePRIMARY\u003c/dt\u003e \u003cdd\u003e \u003cp\u003eThe most recent deployment of a service.\u003c/p\u003e \u003c/dd\u003e \u003cdt\u003eACTIVE\u003c/dt\u003e \u003cdd\u003e \u003cp\u003eA service deployment that still has running tasks, but are in the process of being replaced with a new \u003ccode\u003ePRIMARY\u003c/code\u003e deployment.\u003c/p\u003e \u003c/dd\u003e \u003cdt\u003eINACTIVE\u003c/dt\u003e \u003cdd\u003e \u003cp\u003eA deployment that has been completely replaced.\u003c/p\u003e \u003c/dd\u003e \u003c/dl\u003e'\n        taskDefinition:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The most recent task definition that was specified for the tasks in the service to use.\n        desiredCount:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The most recent desired count of tasks that was specified for the service to deploy or maintain.\n        pendingCount:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The number of tasks in the deployment that are in the \u003ccode\u003ePENDING\u003c/code\u003e status.\n        runningCount:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The number of tasks in the deployment that are in the \u003ccode\u003eRUNNING\u003c/code\u003e status.\n        failedTasks:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: '\u003cp\u003eThe number of consecutively failed tasks in the deployment. A task is considered a failure if the service scheduler can''t launch the task, the task doesn''t transition to a \u003ccode\u003eRUNNING\u003c/code\u003e state, or if it fails any of its defined health checks and is stopped.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eOnce a service deployment has one or more successfully running tasks, the failed task count resets to zero and stops being evaluated.\u003c/p\u003e \u003c/note\u003e'\n        createdAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix timestamp for when the service deployment was created.\n        updatedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix timestamp for when the service deployment was last updated.\n        capacityProviderStrategy:\n          allOf:\n            - $ref: '#/components/schemas/CapacityProviderStrategy'\n            - description: The capacity provider strategy that the deployment is using.\n        launchType:\n          allOf:\n            - $ref: '#/components/schemas/LaunchType'\n            - description: 'The launch type the tasks in the service are using. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html\"\u003eAmazon ECS Launch Types\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n        platformVersion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The platform version on which your tasks in the service are running. A platform version is only specified for tasks using the Fargate launch type. If one is not specified, the \u003ccode\u003eLATEST\u003c/code\u003e platform version is used by default. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html\"\u003eFargate Platform Versions\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n        networkConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/NetworkConfiguration'\n            - description: The VPC subnet and security group configuration for tasks that receive their own elastic network interface by using the \u003ccode\u003eawsvpc\u003c/code\u003e networking mode.\n        rolloutState:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentRolloutState'\n            - description: '\u003cnote\u003e \u003cp\u003eThe \u003ccode\u003erolloutState\u003c/code\u003e of a service is only returned for services that use the rolling update (\u003ccode\u003eECS\u003c/code\u003e) deployment type that are not behind a Classic Load Balancer.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eThe rollout state of the deployment. When a service deployment is started, it begins in an \u003ccode\u003eIN_PROGRESS\u003c/code\u003e state. When the service reaches a steady state, the deployment will transition to a \u003ccode\u003eCOMPLETED\u003c/code\u003e state. If the service fails to reach a steady state and circuit breaker is enabled, the deployment will transition to a \u003ccode\u003eFAILED\u003c/code\u003e state. A deployment in \u003ccode\u003eFAILED\u003c/code\u003e state will launch no new tasks. For more information, see \u003ca\u003eDeploymentCircuitBreaker\u003c/a\u003e.\u003c/p\u003e'\n        rolloutStateReason:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: A description of the rollout state of a deployment.\n      description: The details of an Amazon ECS service deployment. This is used only when a service uses the \u003ccode\u003eECS\u003c/code\u003e deployment controller type.\n    DeploymentCircuitBreaker:\n      type: object\n      required:\n        - enable\n        - rollback\n      properties:\n        enable:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: Whether to enable the deployment circuit breaker logic for the service.\n        rollback:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: 'Whether to enable Amazon ECS to roll back the service if a service deployment fails. If rollback is enabled, when a service deployment fails, the service is rolled back to the last deployment that completed successfully.'\n      description: '\u003cnote\u003e \u003cp\u003eThe deployment circuit breaker can only be used for services using the rolling update (\u003ccode\u003eECS\u003c/code\u003e) deployment type that are not behind a Classic Load Balancer.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eThe \u003cb\u003edeployment circuit breaker\u003c/b\u003e determines whether a service deployment will fail if the service can''t reach a steady state. If enabled, a service deployment will transition to a failed state and stop launching new tasks. You can also enable Amazon ECS to roll back your service to the last completed deployment after a failure. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-ecs.html\"\u003eRolling update\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n    DeploymentControllerType:\n      type: string\n      enum:\n        - ECS\n        - CODE_DEPLOY\n        - EXTERNAL\n    Deployments:\n      type: array\n      items:\n        $ref: '#/components/schemas/Deployment'\n    TaskDefinition:\n      type: object\n      properties:\n        taskDefinitionArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The full Amazon Resource Name (ARN) of the task definition.\n        containerDefinitions:\n          allOf:\n            - $ref: '#/components/schemas/ContainerDefinitions'\n            - description: 'A list of container definitions in JSON format that describe the different containers that make up your task. For more information about container definition parameters and defaults, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html\"\u003eAmazon ECS Task Definitions\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n        family:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe name of a family that this task definition is registered to. Up to 255 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed.\u003c/p\u003e \u003cp\u003eA family groups multiple versions of a task definition. Amazon ECS gives the first task definition that you registered to a family a revision number of 1. Amazon ECS gives sequential revision numbers to each task definition that you add.\u003c/p\u003e'\n        taskRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe short name or full Amazon Resource Name (ARN) of the Identity and Access Management role that grants containers in the task permission to call Amazon Web Services APIs on your behalf. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html\"\u003eAmazon ECS Task Role\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eIAM roles for tasks on Windows require that the \u003ccode\u003e-EnableTaskIAMRole\u003c/code\u003e option is set when you launch the Amazon ECS-optimized Windows AMI. Your containers must also run some configuration code in order to take advantage of the feature. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/windows_task_IAM_roles.html\"\u003eWindows IAM roles for tasks\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        executionRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The Amazon Resource Name (ARN) of the task execution role that grants the Amazon ECS container agent permission to make Amazon Web Services API calls on your behalf. The task execution IAM role is required depending on the requirements of your task. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_execution_IAM_role.html\"\u003eAmazon ECS task execution IAM role\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n        networkMode:\n          allOf:\n            - $ref: '#/components/schemas/NetworkMode'\n            - description: '\u003cp\u003eThe Docker networking mode to use for the containers in the task. The valid values are \u003ccode\u003enone\u003c/code\u003e, \u003ccode\u003ebridge\u003c/code\u003e, \u003ccode\u003eawsvpc\u003c/code\u003e, and \u003ccode\u003ehost\u003c/code\u003e. If no network mode is specified, the default is \u003ccode\u003ebridge\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eFor Amazon ECS tasks on Fargate, the \u003ccode\u003eawsvpc\u003c/code\u003e network mode is required. For Amazon ECS tasks on Amazon EC2 Linux instances, any network mode can be used. For Amazon ECS tasks on Amazon EC2 Windows instances, \u003ccode\u003e\u0026lt;default\u0026gt;\u003c/code\u003e or \u003ccode\u003eawsvpc\u003c/code\u003e can be used. If the network mode is set to \u003ccode\u003enone\u003c/code\u003e, you cannot specify port mappings in your container definitions, and the tasks containers do not have external connectivity. The \u003ccode\u003ehost\u003c/code\u003e and \u003ccode\u003eawsvpc\u003c/code\u003e network modes offer the highest networking performance for containers because they use the EC2 network stack instead of the virtualized network stack provided by the \u003ccode\u003ebridge\u003c/code\u003e mode.\u003c/p\u003e \u003cp\u003eWith the \u003ccode\u003ehost\u003c/code\u003e and \u003ccode\u003eawsvpc\u003c/code\u003e network modes, exposed container ports are mapped directly to the corresponding host port (for the \u003ccode\u003ehost\u003c/code\u003e network mode) or the attached elastic network interface port (for the \u003ccode\u003eawsvpc\u003c/code\u003e network mode), so you cannot take advantage of dynamic host port mappings. \u003c/p\u003e \u003cimportant\u003e \u003cp\u003eWhen using the \u003ccode\u003ehost\u003c/code\u003e network mode, you should not run containers using the root user (UID 0). It is considered best practice to use a non-root user.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eIf the network mode is \u003ccode\u003eawsvpc\u003c/code\u003e, the task is allocated an elastic network interface, and you must specify a \u003ca\u003eNetworkConfiguration\u003c/a\u003e value when you create a service or run a task with the task definition. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html\"\u003eTask Networking\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eIf the network mode is \u003ccode\u003ehost\u003c/code\u003e, you cannot run multiple instantiations of the same task on a single container instance when port mappings are used.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.docker.com/engine/reference/run/#network-settings\"\u003eNetwork settings\u003c/a\u003e in the \u003ci\u003eDocker run reference\u003c/i\u003e.\u003c/p\u003e'\n        revision:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: 'The revision of the task in a particular family. The revision is a version number of a task definition in a family. When you register a task definition for the first time, the revision is \u003ccode\u003e1\u003c/code\u003e. Each time that you register a new revision of a task definition in the same family, the revision value always increases by one, even if you have deregistered previous revisions in this family.'\n        volumes:\n          allOf:\n            - $ref: '#/components/schemas/VolumeList'\n            - description: '\u003cp\u003eThe list of data volume definitions for the task. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_data_volumes.html\"\u003eUsing data volumes in tasks\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThe \u003ccode\u003ehost\u003c/code\u003e and \u003ccode\u003esourcePath\u003c/code\u003e parameters are not supported for tasks run on Fargate.\u003c/p\u003e \u003c/note\u003e'\n        status:\n          allOf:\n            - $ref: '#/components/schemas/TaskDefinitionStatus'\n            - description: The status of the task definition.\n        requiresAttributes:\n          allOf:\n            - $ref: '#/components/schemas/RequiresAttributes'\n            - description: '\u003cp\u003eThe container instance attributes required by your task. When an Amazon EC2 instance is registered to your cluster, the Amazon ECS container agent assigns some standard attributes to the instance. You can apply custom attributes, specified as key-value pairs using the Amazon ECS console or the \u003ca\u003ePutAttributes\u003c/a\u003e API. These attributes are used when considering task placement for tasks hosted on Amazon EC2 instances. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html#attributes\"\u003eAttributes\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis parameter is not supported for tasks run on Fargate.\u003c/p\u003e \u003c/note\u003e'\n        placementConstraints:\n          allOf:\n            - $ref: '#/components/schemas/TaskDefinitionPlacementConstraints'\n            - description: \u003cp\u003eAn array of placement constraint objects to use for tasks.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis parameter is not supported for tasks run on Fargate.\u003c/p\u003e \u003c/note\u003e\n        compatibilities:\n          allOf:\n            - $ref: '#/components/schemas/CompatibilityList'\n            - description: 'The task launch types the task definition validated against during task definition registration. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html\"\u003eAmazon ECS launch types\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n        requiresCompatibilities:\n          allOf:\n            - $ref: '#/components/schemas/CompatibilityList'\n            - description: 'The task launch types the task definition was validated against. To determine which task launch types the task definition is validated for, see the \u003ca\u003eTaskDefinition$compatibilities\u003c/a\u003e parameter.'\n        cpu:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe number of \u003ccode\u003ecpu\u003c/code\u003e units used by the task. If you are using the EC2 launch type, this field is optional and any value can be used. If you are using the Fargate launch type, this field is required and you must use one of the following values, which determines your range of valid values for the \u003ccode\u003ememory\u003c/code\u003e parameter:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e256 (.25 vCPU) - Available \u003ccode\u003ememory\u003c/code\u003e values: 512 (0.5 GB), 1024 (1 GB), 2048 (2 GB)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e512 (.5 vCPU) - Available \u003ccode\u003ememory\u003c/code\u003e values: 1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e1024 (1 vCPU) - Available \u003ccode\u003ememory\u003c/code\u003e values: 2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e2048 (2 vCPU) - Available \u003ccode\u003ememory\u003c/code\u003e values: Between 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e4096 (4 vCPU) - Available \u003ccode\u003ememory\u003c/code\u003e values: Between 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB)\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        memory:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe amount (in MiB) of memory used by the task.\u003c/p\u003e \u003cp\u003eIf your tasks will be run on Amazon EC2 instances, you must specify either a task-level memory value or a container-level memory value. This field is optional and any value can be used. If a task-level memory value is specified then the container-level memory value is optional. For more information regarding container-level memory and memory reservation, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ContainerDefinition.html\"\u003eContainerDefinition\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eIf your tasks will be run on Fargate, this field is required and you must use one of the following values, which determines your range of valid values for the \u003ccode\u003ecpu\u003c/code\u003e parameter:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e512 (0.5 GB), 1024 (1 GB), 2048 (2 GB) - Available \u003ccode\u003ecpu\u003c/code\u003e values: 256 (.25 vCPU)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB) - Available \u003ccode\u003ecpu\u003c/code\u003e values: 512 (.5 vCPU)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB) - Available \u003ccode\u003ecpu\u003c/code\u003e values: 1024 (1 vCPU)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eBetween 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB) - Available \u003ccode\u003ecpu\u003c/code\u003e values: 2048 (2 vCPU)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eBetween 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB) - Available \u003ccode\u003ecpu\u003c/code\u003e values: 4096 (4 vCPU)\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        inferenceAccelerators:\n          allOf:\n            - $ref: '#/components/schemas/InferenceAccelerators'\n            - description: The Elastic Inference accelerator associated with the task.\n        pidMode:\n          allOf:\n            - $ref: '#/components/schemas/PidMode'\n            - description: '\u003cp\u003eThe process namespace to use for the containers in the task. The valid values are \u003ccode\u003ehost\u003c/code\u003e or \u003ccode\u003etask\u003c/code\u003e. If \u003ccode\u003ehost\u003c/code\u003e is specified, then all containers within the tasks that specified the \u003ccode\u003ehost\u003c/code\u003e PID mode on the same container instance share the same process namespace with the host Amazon EC2 instance. If \u003ccode\u003etask\u003c/code\u003e is specified, all containers within the specified task share the same process namespace. If no value is specified, the default is a private namespace. For more information, see \u003ca href=\"https://docs.docker.com/engine/reference/run/#pid-settings---pid\"\u003ePID settings\u003c/a\u003e in the \u003ci\u003eDocker run reference\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eIf the \u003ccode\u003ehost\u003c/code\u003e PID mode is used, be aware that there is a heightened risk of undesired process namespace expose. For more information, see \u003ca href=\"https://docs.docker.com/engine/security/security/\"\u003eDocker security\u003c/a\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis parameter is not supported for Windows containers or tasks run on Fargate.\u003c/p\u003e \u003c/note\u003e'\n        ipcMode:\n          allOf:\n            - $ref: '#/components/schemas/IpcMode'\n            - description: '\u003cp\u003eThe IPC resource namespace to use for the containers in the task. The valid values are \u003ccode\u003ehost\u003c/code\u003e, \u003ccode\u003etask\u003c/code\u003e, or \u003ccode\u003enone\u003c/code\u003e. If \u003ccode\u003ehost\u003c/code\u003e is specified, then all containers within the tasks that specified the \u003ccode\u003ehost\u003c/code\u003e IPC mode on the same container instance share the same IPC resources with the host Amazon EC2 instance. If \u003ccode\u003etask\u003c/code\u003e is specified, all containers within the specified task share the same IPC resources. If \u003ccode\u003enone\u003c/code\u003e is specified, then IPC resources within the containers of a task are private and not shared with other containers in a task or on the container instance. If no value is specified, then the IPC resource namespace sharing depends on the Docker daemon setting on the container instance. For more information, see \u003ca href=\"https://docs.docker.com/engine/reference/run/#ipc-settings---ipc\"\u003eIPC settings\u003c/a\u003e in the \u003ci\u003eDocker run reference\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eIf the \u003ccode\u003ehost\u003c/code\u003e IPC mode is used, be aware that there is a heightened risk of undesired IPC namespace expose. For more information, see \u003ca href=\"https://docs.docker.com/engine/security/security/\"\u003eDocker security\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eIf you are setting namespaced kernel parameters using \u003ccode\u003esystemControls\u003c/code\u003e for the containers in the task, the following will apply to your IPC resource namespace. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html\"\u003eSystem Controls\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eFor tasks that use the \u003ccode\u003ehost\u003c/code\u003e IPC mode, IPC namespace related \u003ccode\u003esystemControls\u003c/code\u003e are not supported.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor tasks that use the \u003ccode\u003etask\u003c/code\u003e IPC mode, IPC namespace related \u003ccode\u003esystemControls\u003c/code\u003e will apply to all containers within a task.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cnote\u003e \u003cp\u003eThis parameter is not supported for Windows containers or tasks run on Fargate.\u003c/p\u003e \u003c/note\u003e'\n        proxyConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/ProxyConfiguration'\n            - description: '\u003cp\u003eThe configuration details for the App Mesh proxy.\u003c/p\u003e \u003cp\u003eYour Amazon ECS container instances require at least version 1.26.0 of the container agent and at least version 1.26.0-1 of the \u003ccode\u003eecs-init\u003c/code\u003e package to enable a proxy configuration. If your container instances are launched from the Amazon ECS-optimized AMI version \u003ccode\u003e20190301\u003c/code\u003e or later, then they contain the required versions of the container agent and \u003ccode\u003eecs-init\u003c/code\u003e. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html\"\u003eAmazon ECS-optimized Linux AMI\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        registeredAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix timestamp for when the task definition was registered.\n        deregisteredAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix timestamp for when the task definition was deregistered.\n        registeredBy:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The principal that registered the task definition.\n        ephemeralStorage:\n          allOf:\n            - $ref: '#/components/schemas/EphemeralStorage'\n            - description: The ephemeral storage settings to use for tasks run with the task definition.\n      description: 'The details of a task definition which describes the container and volume definitions of an Amazon Elastic Container Service task. You can specify which Docker images to use, the required resources, and other configurations related to launching the task definition through an Amazon ECS service or task.'\n    Failures:\n      type: array\n      items:\n        $ref: '#/components/schemas/Failure'\n    ServiceFieldList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ServiceField'\n    Services:\n      type: array\n      items:\n        $ref: '#/components/schemas/Service'\n    TaskDefinitionFieldList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TaskDefinitionField'\n    TaskSetFieldList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TaskSetField'\n    TaskSets:\n      type: array\n      items:\n        $ref: '#/components/schemas/TaskSet'\n    TaskFieldList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TaskField'\n    Tasks:\n      type: array\n      items:\n        $ref: '#/components/schemas/Task'\n    DesiredStatus:\n      type: string\n      enum:\n        - RUNNING\n        - PENDING\n        - STOPPED\n    DeviceCgroupPermissions:\n      type: array\n      items:\n        $ref: '#/components/schemas/DeviceCgroupPermission'\n    Device:\n      type: object\n      required:\n        - hostPath\n      properties:\n        hostPath:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The path for the device on the host container instance.\n        containerPath:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The path inside the container at which to expose the host device.\n        permissions:\n          allOf:\n            - $ref: '#/components/schemas/DeviceCgroupPermissions'\n            - description: 'The explicit permissions to provide to the container for the device. By default, the container has permissions for \u003ccode\u003eread\u003c/code\u003e, \u003ccode\u003ewrite\u003c/code\u003e, and \u003ccode\u003emknod\u003c/code\u003e for the device.'\n      description: An object representing a container instance host device.\n    DeviceCgroupPermission:\n      type: string\n      enum:\n        - read\n        - write\n        - mknod\n    DevicesList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Device'\n    Scope:\n      type: string\n      enum:\n        - task\n        - shared\n    StringMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/String'\n    DockerVolumeConfiguration:\n      type: object\n      properties:\n        scope:\n          allOf:\n            - $ref: '#/components/schemas/Scope'\n            - description: The scope for the Docker volume that determines its lifecycle. Docker volumes that are scoped to a \u003ccode\u003etask\u003c/code\u003e are automatically provisioned when the task starts and destroyed when the task stops. Docker volumes that are scoped as \u003ccode\u003eshared\u003c/code\u003e persist after the task stops.\n        autoprovision:\n          allOf:\n            - $ref: '#/components/schemas/BoxedBoolean'\n            - description: '\u003cp\u003eIf this value is \u003ccode\u003etrue\u003c/code\u003e, the Docker volume is created if it does not already exist.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis field is only used if the \u003ccode\u003escope\u003c/code\u003e is \u003ccode\u003eshared\u003c/code\u003e.\u003c/p\u003e \u003c/note\u003e'\n        driver:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The Docker volume driver to use. The driver value must match the driver name provided by Docker because it is used for task placement. If the driver was installed using the Docker plugin CLI, use \u003ccode\u003edocker plugin ls\u003c/code\u003e to retrieve the driver name from your container instance. If the driver was installed using another method, use Docker plugin discovery to retrieve the driver name. For more information, see \u003ca href=\"https://docs.docker.com/engine/extend/plugin_api/#plugin-discovery\"\u003eDocker plugin discovery\u003c/a\u003e. This parameter maps to \u003ccode\u003eDriver\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/VolumeCreate\"\u003eCreate a volume\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003exxdriver\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/commandline/volume_create/\"\u003edocker volume create\u003c/a\u003e.'\n        driverOpts:\n          allOf:\n            - $ref: '#/components/schemas/StringMap'\n            - description: 'A map of Docker driver-specific options passed through. This parameter maps to \u003ccode\u003eDriverOpts\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/VolumeCreate\"\u003eCreate a volume\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003exxopt\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/commandline/volume_create/\"\u003edocker volume create\u003c/a\u003e.'\n        labels:\n          allOf:\n            - $ref: '#/components/schemas/StringMap'\n            - description: 'Custom metadata to add to your Docker volume. This parameter maps to \u003ccode\u003eLabels\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/VolumeCreate\"\u003eCreate a volume\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003exxlabel\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/commandline/volume_create/\"\u003edocker volume create\u003c/a\u003e.'\n      description: 'This parameter is specified when you are using Docker volumes. Docker volumes are only supported when you are using the EC2 launch type. Windows containers only support the use of the \u003ccode\u003elocal\u003c/code\u003e driver. To use bind mounts, specify a \u003ccode\u003ehost\u003c/code\u003e instead.'\n    Double:\n      type: number\n      format: double\n    EFSAuthorizationConfigIAM:\n      type: string\n      enum:\n        - ENABLED\n        - DISABLED\n    EFSAuthorizationConfig:\n      type: object\n      properties:\n        accessPointId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The Amazon EFS access point ID to use. If an access point is specified, the root directory value specified in the \u003ccode\u003eEFSVolumeConfiguration\u003c/code\u003e must either be omitted or set to \u003ccode\u003e/\u003c/code\u003e which will enforce the path set on the EFS access point. If an access point is used, transit encryption must be enabled in the \u003ccode\u003eEFSVolumeConfiguration\u003c/code\u003e. For more information, see \u003ca href=\"https://docs.aws.amazon.com/efs/latest/ug/efs-access-points.html\"\u003eWorking with Amazon EFS Access Points\u003c/a\u003e in the \u003ci\u003eAmazon Elastic File System User Guide\u003c/i\u003e.'\n        iam:\n          allOf:\n            - $ref: '#/components/schemas/EFSAuthorizationConfigIAM'\n            - description: 'Whether or not to use the Amazon ECS task IAM role defined in a task definition when mounting the Amazon EFS file system. If enabled, transit encryption must be enabled in the \u003ccode\u003eEFSVolumeConfiguration\u003c/code\u003e. If this parameter is omitted, the default value of \u003ccode\u003eDISABLED\u003c/code\u003e is used. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/efs-volumes.html#efs-volume-accesspoints\"\u003eUsing Amazon EFS Access Points\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n      description: The authorization configuration details for the Amazon EFS file system.\n    EFSTransitEncryption:\n      type: string\n      enum:\n        - ENABLED\n        - DISABLED\n    EFSVolumeConfiguration:\n      type: object\n      required:\n        - fileSystemId\n      properties:\n        fileSystemId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon EFS file system ID to use.\n        rootDirectory:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe directory within the Amazon EFS file system to mount as the root directory inside the host. If this parameter is omitted, the root of the Amazon EFS volume will be used. Specifying \u003ccode\u003e/\u003c/code\u003e will have the same effect as omitting this parameter.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eIf an EFS access point is specified in the \u003ccode\u003eauthorizationConfig\u003c/code\u003e, the root directory parameter must either be omitted or set to \u003ccode\u003e/\u003c/code\u003e which will enforce the path set on the EFS access point.\u003c/p\u003e \u003c/important\u003e'\n        transitEncryption:\n          allOf:\n            - $ref: '#/components/schemas/EFSTransitEncryption'\n            - description: 'Whether or not to enable encryption for Amazon EFS data in transit between the Amazon ECS host and the Amazon EFS server. Transit encryption must be enabled if Amazon EFS IAM authorization is used. If this parameter is omitted, the default value of \u003ccode\u003eDISABLED\u003c/code\u003e is used. For more information, see \u003ca href=\"https://docs.aws.amazon.com/efs/latest/ug/encryption-in-transit.html\"\u003eEncrypting Data in Transit\u003c/a\u003e in the \u003ci\u003eAmazon Elastic File System User Guide\u003c/i\u003e.'\n        transitEncryptionPort:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: 'The port to use when sending encrypted data between the Amazon ECS host and the Amazon EFS server. If you do not specify a transit encryption port, it will use the port selection strategy that the Amazon EFS mount helper uses. For more information, see \u003ca href=\"https://docs.aws.amazon.com/efs/latest/ug/efs-mount-helper.html\"\u003eEFS Mount Helper\u003c/a\u003e in the \u003ci\u003eAmazon Elastic File System User Guide\u003c/i\u003e.'\n        authorizationConfig:\n          allOf:\n            - $ref: '#/components/schemas/EFSAuthorizationConfig'\n            - description: The authorization configuration details for the Amazon EFS file system.\n      description: 'This parameter is specified when you are using an Amazon Elastic File System file system for task storage. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/efs-volumes.html\"\u003eAmazon EFS Volumes\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n    EnvironmentFileType:\n      type: string\n      enum:\n        - s3\n    EnvironmentFile:\n      type: object\n      required:\n        - value\n        - type\n      properties:\n        value:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the Amazon S3 object containing the environment variable file.\n        type:\n          allOf:\n            - $ref: '#/components/schemas/EnvironmentFileType'\n            - description: The file type to use. The only supported value is \u003ccode\u003es3\u003c/code\u003e.\n      description: '\u003cp\u003eA list of files containing the environment variables to pass to a container. You can specify up to ten environment files. The file must have a \u003ccode\u003e.env\u003c/code\u003e file extension. Each line in an environment file should contain an environment variable in \u003ccode\u003eVARIABLE=VALUE\u003c/code\u003e format. Lines beginning with \u003ccode\u003e#\u003c/code\u003e are treated as comments and are ignored. For more information on the environment variable file syntax, see \u003ca href=\"https://docs.docker.com/compose/env-file/\"\u003eDeclare default environment variables in file\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eIf there are environment variables specified using the \u003ccode\u003eenvironment\u003c/code\u003e parameter in a container definition, they take precedence over the variables contained within an environment file. If multiple environment files are specified that contain the same variable, they are processed from the top down. It is recommended to use unique variable names. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/taskdef-envfiles.html\"\u003eSpecifying environment variables\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eThis field is only valid for containers in Fargate tasks that use platform version \u003ccode\u003e1.4.0\u003c/code\u003e or later.\u003c/p\u003e'\n    EphemeralStorage:\n      type: object\n      required:\n        - sizeInGiB\n      properties:\n        sizeInGiB:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: 'The total amount, in GiB, of ephemeral storage to set for the task. The minimum supported value is \u003ccode\u003e21\u003c/code\u003e GiB and the maximum supported value is \u003ccode\u003e200\u003c/code\u003e GiB.'\n      description: '\u003cp\u003eThe amount of ephemeral storage to allocate for the task. This parameter is used to expand the total amount of ephemeral storage available, beyond the default amount, for tasks hosted on Fargate. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/userguide/using_data_volumes.html\"\u003eFargate task storage\u003c/a\u003e in the \u003ci\u003eAmazon ECS User Guide for Fargate\u003c/i\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis parameter is only supported for tasks hosted on Fargate using platform version \u003ccode\u003e1.4.0\u003c/code\u003e or later.\u003c/p\u003e \u003c/note\u003e'\n    ExecuteCommandLogging:\n      type: string\n      enum:\n        - NONE\n        - DEFAULT\n        - OVERRIDE\n    ExecuteCommandLogConfiguration:\n      type: object\n      properties:\n        cloudWatchLogGroupName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: \u003cp\u003eThe name of the CloudWatch log group to send logs to.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThe CloudWatch log group must already be created.\u003c/p\u003e \u003c/note\u003e\n        cloudWatchEncryptionEnabled:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: 'Whether or not to enable encryption on the CloudWatch logs. If not specified, encryption will be disabled.'\n        s3BucketName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: \u003cp\u003eThe name of the S3 bucket to send logs to.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThe S3 bucket must already be created.\u003c/p\u003e \u003c/note\u003e\n        s3EncryptionEnabled:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: 'Whether or not to enable encryption on the CloudWatch logs. If not specified, encryption will be disabled.'\n        s3KeyPrefix:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: An optional folder in the S3 bucket to place logs in.\n      description: The log configuration for the results of the execute command actions. The logs can be sent to CloudWatch Logs or an Amazon S3 bucket.\n    Session:\n      type: object\n      properties:\n        sessionId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ID of the execute command session.\n        streamUrl:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: A URL back to managed agent on the container that the SSM Session Manager client uses to send commands and receive output from the container.\n        tokenValue:\n          allOf:\n            - $ref: '#/components/schemas/SensitiveString'\n            - description: An encrypted token value containing session and caller information. Used to authenticate the connection to the container.\n      description: The details of the execute command session.\n    FSxWindowsFileServerAuthorizationConfig:\n      type: object\n      required:\n        - credentialsParameter\n        - domain\n      properties:\n        credentialsParameter:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The authorization credential option to use. The authorization credential options can be provided using either the Amazon Resource Name (ARN) of an Secrets Manager secret or SSM Parameter Store parameter. The ARNs refer to the stored credentials.\n        domain:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'A fully qualified domain name hosted by an \u003ca href=\"https://docs.aws.amazon.com/directoryservice/latest/admin-guide/directory_microsoft_ad.html\"\u003eDirectory Service\u003c/a\u003e Managed Microsoft AD (Active Directory) or self-hosted AD on Amazon EC2.'\n      description: '\u003cp\u003eThe authorization configuration details for Amazon FSx for Windows File Server file system. See \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_FSxWindowsFileServerVolumeConfiguration.html\"\u003eFSxWindowsFileServerVolumeConfiguration\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service API Reference\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eFor more information and the input format, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/wfsx-volumes.html\"\u003eAmazon FSx for Windows File Server Volumes\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n    FSxWindowsFileServerVolumeConfiguration:\n      type: object\n      required:\n        - fileSystemId\n        - rootDirectory\n        - authorizationConfig\n      properties:\n        fileSystemId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon FSx for Windows File Server file system ID to use.\n        rootDirectory:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The directory within the Amazon FSx for Windows File Server file system to mount as the root directory inside the host.\n        authorizationConfig:\n          allOf:\n            - $ref: '#/components/schemas/FSxWindowsFileServerAuthorizationConfig'\n            - description: The authorization configuration details for the Amazon FSx for Windows File Server file system.\n      description: '\u003cp\u003eThis parameter is specified when you are using \u003ca href=\"https://docs.aws.amazon.com/fsx/latest/WindowsGuide/what-is.html\"\u003eAmazon FSx for Windows File Server\u003c/a\u003e file system for task storage.\u003c/p\u003e \u003cp\u003eFor more information and the input format, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/wfsx-volumes.html\"\u003eAmazon FSx for Windows File Server Volumes\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n    Failure:\n      type: object\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the failed resource.\n        reason:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The reason for the failure.\n        detail:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The details of the failure.\n      description: 'A failed resource. For a list of common causes, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/api_failures_messages.html\"\u003eAPI failure reasons\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n    FirelensConfigurationType:\n      type: string\n      enum:\n        - fluentd\n        - fluentbit\n    FirelensConfigurationOptionsMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/String'\n    HostEntry:\n      type: object\n      required:\n        - hostname\n        - ipAddress\n      properties:\n        hostname:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The hostname to use in the \u003ccode\u003e/etc/hosts\u003c/code\u003e entry.\n        ipAddress:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The IP address to use in the \u003ccode\u003e/etc/hosts\u003c/code\u003e entry.\n      description: 'Hostnames and IP address entries that are added to the \u003ccode\u003e/etc/hosts\u003c/code\u003e file of a container via the \u003ccode\u003eextraHosts\u003c/code\u003e parameter of its \u003ca\u003eContainerDefinition\u003c/a\u003e. '\n    HostVolumeProperties:\n      type: object\n      properties:\n        sourcePath:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eWhen the \u003ccode\u003ehost\u003c/code\u003e parameter is used, specify a \u003ccode\u003esourcePath\u003c/code\u003e to declare the path on the host container instance that is presented to the container. If this parameter is empty, then the Docker daemon has assigned a host path for you. If the \u003ccode\u003ehost\u003c/code\u003e parameter contains a \u003ccode\u003esourcePath\u003c/code\u003e file location, then the data volume persists at the specified location on the host container instance until you delete it manually. If the \u003ccode\u003esourcePath\u003c/code\u003e value does not exist on the host container instance, the Docker daemon creates it. If the location does exist, the contents of the source path folder are exported.\u003c/p\u003e \u003cp\u003eIf you are using the Fargate launch type, the \u003ccode\u003esourcePath\u003c/code\u003e parameter is not supported.\u003c/p\u003e'\n      description: Details on a container instance bind mount host volume.\n    InferenceAccelerator:\n      type: object\n      required:\n        - deviceName\n        - deviceType\n      properties:\n        deviceName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Elastic Inference accelerator device name. The \u003ccode\u003edeviceName\u003c/code\u003e must also be referenced in a container definition as a \u003ca\u003eResourceRequirement\u003c/a\u003e.\n        deviceType:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Elastic Inference accelerator type to use.\n      description: 'Details on a Elastic Inference accelerator. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-eia.html\"\u003eWorking with Amazon Elastic Inference on Amazon ECS\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n    InferenceAcceleratorOverride:\n      type: object\n      properties:\n        deviceName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Elastic Inference accelerator device name to override for the task. This parameter must match a \u003ccode\u003edeviceName\u003c/code\u003e specified in the task definition.\n        deviceType:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Elastic Inference accelerator type to use.\n      description: 'Details on an Elastic Inference accelerator task override. This parameter is used to override the Elastic Inference accelerator specified in the task definition. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-eia.html\"\u003eWorking with Amazon Elastic Inference on Amazon ECS\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n    InferenceAcceleratorOverrides:\n      type: array\n      items:\n        $ref: '#/components/schemas/InferenceAcceleratorOverride'\n    InferenceAccelerators:\n      type: array\n      items:\n        $ref: '#/components/schemas/InferenceAccelerator'\n    IpcMode:\n      type: string\n      enum:\n        - host\n        - task\n        - none\n    KernelCapabilities:\n      type: object\n      properties:\n        add:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: '\u003cp\u003eThe Linux capabilities for the container that have been added to the default configuration provided by Docker. This parameter maps to \u003ccode\u003eCapAdd\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--cap-add\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eTasks launched on Fargate only support adding the \u003ccode\u003eSYS_PTRACE\u003c/code\u003e kernel capability.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eValid values: \u003ccode\u003e\"ALL\" | \"AUDIT_CONTROL\" | \"AUDIT_WRITE\" | \"BLOCK_SUSPEND\" | \"CHOWN\" | \"DAC_OVERRIDE\" | \"DAC_READ_SEARCH\" | \"FOWNER\" | \"FSETID\" | \"IPC_LOCK\" | \"IPC_OWNER\" | \"KILL\" | \"LEASE\" | \"LINUX_IMMUTABLE\" | \"MAC_ADMIN\" | \"MAC_OVERRIDE\" | \"MKNOD\" | \"NET_ADMIN\" | \"NET_BIND_SERVICE\" | \"NET_BROADCAST\" | \"NET_RAW\" | \"SETFCAP\" | \"SETGID\" | \"SETPCAP\" | \"SETUID\" | \"SYS_ADMIN\" | \"SYS_BOOT\" | \"SYS_CHROOT\" | \"SYS_MODULE\" | \"SYS_NICE\" | \"SYS_PACCT\" | \"SYS_PTRACE\" | \"SYS_RAWIO\" | \"SYS_RESOURCE\" | \"SYS_TIME\" | \"SYS_TTY_CONFIG\" | \"SYSLOG\" | \"WAKE_ALARM\"\u003c/code\u003e \u003c/p\u003e'\n        drop:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: '\u003cp\u003eThe Linux capabilities for the container that have been removed from the default configuration provided by Docker. This parameter maps to \u003ccode\u003eCapDrop\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--cap-drop\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eValid values: \u003ccode\u003e\"ALL\" | \"AUDIT_CONTROL\" | \"AUDIT_WRITE\" | \"BLOCK_SUSPEND\" | \"CHOWN\" | \"DAC_OVERRIDE\" | \"DAC_READ_SEARCH\" | \"FOWNER\" | \"FSETID\" | \"IPC_LOCK\" | \"IPC_OWNER\" | \"KILL\" | \"LEASE\" | \"LINUX_IMMUTABLE\" | \"MAC_ADMIN\" | \"MAC_OVERRIDE\" | \"MKNOD\" | \"NET_ADMIN\" | \"NET_BIND_SERVICE\" | \"NET_BROADCAST\" | \"NET_RAW\" | \"SETFCAP\" | \"SETGID\" | \"SETPCAP\" | \"SETUID\" | \"SYS_ADMIN\" | \"SYS_BOOT\" | \"SYS_CHROOT\" | \"SYS_MODULE\" | \"SYS_NICE\" | \"SYS_PACCT\" | \"SYS_PTRACE\" | \"SYS_RAWIO\" | \"SYS_RESOURCE\" | \"SYS_TIME\" | \"SYS_TTY_CONFIG\" | \"SYSLOG\" | \"WAKE_ALARM\"\u003c/code\u003e \u003c/p\u003e'\n      description: 'The Linux capabilities for the container that are added to or dropped from the default configuration provided by Docker. For more information on the default capabilities and the non-default available capabilities, see \u003ca href=\"https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities\"\u003eRuntime privilege and Linux capabilities\u003c/a\u003e in the \u003ci\u003eDocker run reference\u003c/i\u003e. For more detailed information on these Linux capabilities, see the \u003ca href=\"http://man7.org/linux/man-pages/man7/capabilities.7.html\"\u003ecapabilities(7)\u003c/a\u003e Linux manual page.'\n    TmpfsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Tmpfs'\n    Settings:\n      type: array\n      items:\n        $ref: '#/components/schemas/Setting'\n    TaskDefinitionFamilyStatus:\n      type: string\n      enum:\n        - ACTIVE\n        - INACTIVE\n        - ALL\n    TaskDefinitionStatus:\n      type: string\n      enum:\n        - ACTIVE\n        - INACTIVE\n    SortOrder:\n      type: string\n      enum:\n        - ASC\n        - DESC\n    LoadBalancer:\n      type: object\n      properties:\n        targetGroupArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe full Amazon Resource Name (ARN) of the Elastic Load Balancing target group or groups associated with a service or task set.\u003c/p\u003e \u003cp\u003eA target group ARN is only specified when using an Application Load Balancer or Network Load Balancer. If you are using a Classic Load Balancer the target group ARN should be omitted.\u003c/p\u003e \u003cp\u003eFor services using the \u003ccode\u003eECS\u003c/code\u003e deployment controller, you can specify one or multiple target groups. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/register-multiple-targetgroups.html\"\u003eRegistering Multiple Target Groups with a Service\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eFor services using the \u003ccode\u003eCODE_DEPLOY\u003c/code\u003e deployment controller, you are required to define two target groups for the load balancer. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-bluegreen.html\"\u003eBlue/Green Deployment with CodeDeploy\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eIf your service''s task definition uses the \u003ccode\u003eawsvpc\u003c/code\u003e network mode (which is required for the Fargate launch type), you must choose \u003ccode\u003eip\u003c/code\u003e as the target type, not \u003ccode\u003einstance\u003c/code\u003e, when creating your target groups because tasks that use the \u003ccode\u003eawsvpc\u003c/code\u003e network mode are associated with an elastic network interface, not an Amazon EC2 instance.\u003c/p\u003e \u003c/important\u003e'\n        loadBalancerName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: \u003cp\u003eThe name of the load balancer to associate with the Amazon ECS service or task set.\u003c/p\u003e \u003cp\u003eA load balancer name is only specified when using a Classic Load Balancer. If you are using an Application Load Balancer or a Network Load Balancer the load balancer name parameter should be omitted.\u003c/p\u003e\n        containerName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the container (as it appears in a container definition) to associate with the load balancer.\n        containerPort:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: 'The port on the container to associate with the load balancer. This port must correspond to a \u003ccode\u003econtainerPort\u003c/code\u003e in the task definition the tasks in the service are using. For tasks that use the EC2 launch type, the container instance they are launched on must allow ingress traffic on the \u003ccode\u003ehostPort\u003c/code\u003e of the port mapping.'\n      description: '\u003cp\u003eThe load balancer configuration to use with a service or task set.\u003c/p\u003e \u003cp\u003eFor specific notes and restrictions regarding the use of load balancers with services and task sets, see the CreateService and CreateTaskSet actions.\u003c/p\u003e'\n    LogDriver:\n      type: string\n      enum:\n        - json-file\n        - syslog\n        - journald\n        - gelf\n        - fluentd\n        - awslogs\n        - splunk\n        - awsfirelens\n    LogConfigurationOptionsMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/String'\n    ManagedAgentName:\n      type: string\n      enum:\n        - ExecuteCommandAgent\n    ManagedAgent:\n      type: object\n      properties:\n        lastStartedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix timestamp for when the managed agent was last started.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ManagedAgentName'\n            - description: 'The name of the managed agent. When the execute command feature is enabled, the managed agent name is \u003ccode\u003eExecuteCommandAgent\u003c/code\u003e.'\n        reason:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The reason for why the managed agent is in the state it is in.\n        lastStatus:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The last known status of the managed agent.\n      description: Details about the managed agent status for the container.\n    ManagedAgentStateChange:\n      type: object\n      required:\n        - containerName\n        - managedAgentName\n        - status\n      properties:\n        containerName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the container associated with the managed agent.\n        managedAgentName:\n          allOf:\n            - $ref: '#/components/schemas/ManagedAgentName'\n            - description: The name of the managed agent.\n        status:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The status of the managed agent.\n        reason:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The reason for the status of the managed agent.\n      description: An object representing a change in state for a managed agent.\n    ManagedAgentStateChanges:\n      type: array\n      items:\n        $ref: '#/components/schemas/ManagedAgentStateChange'\n    ManagedScalingStatus:\n      type: string\n      enum:\n        - ENABLED\n        - DISABLED\n    ManagedScalingTargetCapacity:\n      type: integer\n      minimum: 1\n      maximum: 100\n    ManagedScalingStepSize:\n      type: integer\n      minimum: 1\n      maximum: 10000\n    ManagedScalingInstanceWarmupPeriod:\n      type: integer\n      minimum: 0\n      maximum: 10000\n    MountPoint:\n      type: object\n      properties:\n        sourceVolume:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the volume to mount. Must be a volume name referenced in the \u003ccode\u003ename\u003c/code\u003e parameter of task definition \u003ccode\u003evolume\u003c/code\u003e.\n        containerPath:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The path on the container to mount the host volume at.\n        readOnly:\n          allOf:\n            - $ref: '#/components/schemas/BoxedBoolean'\n            - description: 'If this value is \u003ccode\u003etrue\u003c/code\u003e, the container has read-only access to the volume. If this value is \u003ccode\u003efalse\u003c/code\u003e, then the container can write to the volume. The default value is \u003ccode\u003efalse\u003c/code\u003e.'\n      description: Details on a volume mount point that is used in a container definition.\n    TransportProtocol:\n      type: string\n      enum:\n        - tcp\n        - udp\n    NetworkBinding:\n      type: object\n      properties:\n        bindIP:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The IP address that the container is bound to on the container instance.\n        containerPort:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: The port number on the container that is used with the network binding.\n        hostPort:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: The port number on the host that is used with the network binding.\n        protocol:\n          allOf:\n            - $ref: '#/components/schemas/TransportProtocol'\n            - description: The protocol used for the network binding.\n      description: 'Details on the network bindings between a container and its host container instance. After a task reaches the \u003ccode\u003eRUNNING\u003c/code\u003e status, manual and automatic host and container port assignments are visible in the \u003ccode\u003enetworkBindings\u003c/code\u003e section of \u003ca\u003eDescribeTasks\u003c/a\u003e API responses.'\n    NetworkInterface:\n      type: object\n      properties:\n        attachmentId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The attachment ID for the network interface.\n        privateIpv4Address:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The private IPv4 address for the network interface.\n        ipv6Address:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The private IPv6 address for the network interface.\n      description: An object representing the elastic network interface for tasks that use the \u003ccode\u003eawsvpc\u003c/code\u003e network mode.\n    NetworkMode:\n      type: string\n      enum:\n        - bridge\n        - host\n        - awsvpc\n        - none\n    PidMode:\n      type: string\n      enum:\n        - host\n        - task\n    PlacementConstraintType:\n      type: string\n      enum:\n        - distinctInstance\n        - memberOf\n    PlacementConstraint:\n      type: object\n      properties:\n        type:\n          allOf:\n            - $ref: '#/components/schemas/PlacementConstraintType'\n            - description: The type of constraint. Use \u003ccode\u003edistinctInstance\u003c/code\u003e to ensure that each task in a particular group is running on a different container instance. Use \u003ccode\u003ememberOf\u003c/code\u003e to restrict the selection to a group of valid candidates.\n        expression:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'A cluster query language expression to apply to the constraint. The expression can have a maximum length of 2000 characters. You can''t specify an expression if the constraint type is \u003ccode\u003edistinctInstance\u003c/code\u003e. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html\"\u003eCluster query language\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n      description: '\u003cp\u003eAn object representing a constraint on task placement. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html\"\u003eTask Placement Constraints\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eIf you are using the Fargate launch type, task placement constraints are not supported.\u003c/p\u003e \u003c/note\u003e'\n    PlacementStrategy:\n      type: object\n      properties:\n        type:\n          allOf:\n            - $ref: '#/components/schemas/PlacementStrategyType'\n            - description: 'The type of placement strategy. The \u003ccode\u003erandom\u003c/code\u003e placement strategy randomly places tasks on available candidates. The \u003ccode\u003espread\u003c/code\u003e placement strategy spreads placement across available candidates evenly based on the \u003ccode\u003efield\u003c/code\u003e parameter. The \u003ccode\u003ebinpack\u003c/code\u003e strategy places tasks on available candidates that have the least available amount of the resource that is specified with the \u003ccode\u003efield\u003c/code\u003e parameter. For example, if you binpack on memory, a task is placed on the instance with the least amount of remaining memory (but still enough to run the task).'\n        field:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The field to apply the placement strategy against. For the \u003ccode\u003espread\u003c/code\u003e placement strategy, valid values are \u003ccode\u003einstanceId\u003c/code\u003e (or \u003ccode\u003ehost\u003c/code\u003e, which has the same effect), or any platform or custom attribute that is applied to a container instance, such as \u003ccode\u003eattribute:ecs.availability-zone\u003c/code\u003e. For the \u003ccode\u003ebinpack\u003c/code\u003e placement strategy, valid values are \u003ccode\u003ecpu\u003c/code\u003e and \u003ccode\u003ememory\u003c/code\u003e. For the \u003ccode\u003erandom\u003c/code\u003e placement strategy, this field is not used.'\n      description: 'The task placement strategy for a task or service. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html\"\u003eTask Placement Strategies\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n    PlacementStrategyType:\n      type: string\n      enum:\n        - random\n        - spread\n        - binpack\n    PlatformDeviceType:\n      type: string\n      enum:\n        - GPU\n    PlatformDevice:\n      type: object\n      required:\n        - id\n        - type\n      properties:\n        id:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ID for the GPU(s) on the container instance. The available GPU IDs can also be obtained on the container instance in the \u003ccode\u003e/var/lib/ecs/gpu/nvidia_gpu_info.json\u003c/code\u003e file.\n        type:\n          allOf:\n            - $ref: '#/components/schemas/PlatformDeviceType'\n            - description: The type of device that is available on the container instance. The only supported value is \u003ccode\u003eGPU\u003c/code\u003e.\n      description: The devices that are available on the container instance. The only supported device type is a GPU.\n    PlatformDevices:\n      type: array\n      items:\n        $ref: '#/components/schemas/PlatformDevice'\n    PortMapping:\n      type: object\n      properties:\n        containerPort:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: '\u003cp\u003eThe port number on the container that is bound to the user-specified or automatically assigned host port.\u003c/p\u003e \u003cp\u003eIf you are using containers in a task with the \u003ccode\u003eawsvpc\u003c/code\u003e or \u003ccode\u003ehost\u003c/code\u003e network mode, exposed ports should be specified using \u003ccode\u003econtainerPort\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIf you are using containers in a task with the \u003ccode\u003ebridge\u003c/code\u003e network mode and you specify a container port and not a host port, your container automatically receives a host port in the ephemeral port range. For more information, see \u003ccode\u003ehostPort\u003c/code\u003e. Port mappings that are automatically assigned in this way do not count toward the 100 reserved ports limit of a container instance.\u003c/p\u003e'\n        hostPort:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: '\u003cp\u003eThe port number on the container instance to reserve for your container.\u003c/p\u003e \u003cp\u003eIf you are using containers in a task with the \u003ccode\u003eawsvpc\u003c/code\u003e or \u003ccode\u003ehost\u003c/code\u003e network mode, the \u003ccode\u003ehostPort\u003c/code\u003e can either be left blank or set to the same value as the \u003ccode\u003econtainerPort\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIf you are using containers in a task with the \u003ccode\u003ebridge\u003c/code\u003e network mode, you can specify a non-reserved host port for your container port mapping, or you can omit the \u003ccode\u003ehostPort\u003c/code\u003e (or set it to \u003ccode\u003e0\u003c/code\u003e) while specifying a \u003ccode\u003econtainerPort\u003c/code\u003e and your container automatically receives a port in the ephemeral port range for your container instance operating system and Docker version.\u003c/p\u003e \u003cp\u003eThe default ephemeral port range for Docker version 1.6.0 and later is listed on the instance under \u003ccode\u003e/proc/sys/net/ipv4/ip_local_port_range\u003c/code\u003e. If this kernel parameter is unavailable, the default ephemeral port range from 49153 through 65535 is used. Do not attempt to specify a host port in the ephemeral port range as these are reserved for automatic assignment. In general, ports below 32768 are outside of the ephemeral port range.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThe default ephemeral port range from 49153 through 65535 is always used for Docker versions before 1.6.0.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eThe default reserved ports are 22 for SSH, the Docker ports 2375 and 2376, and the Amazon ECS container agent ports 51678-51680. Any host port that was previously specified in a running task is also reserved while the task is running (after a task stops, the host port is released). The current reserved ports are displayed in the \u003ccode\u003eremainingResources\u003c/code\u003e of \u003ca\u003eDescribeContainerInstances\u003c/a\u003e output. A container instance can have up to 100 reserved ports at a time, including the default reserved ports. Automatically assigned ports don''t count toward the 100 reserved ports limit.\u003c/p\u003e'\n        protocol:\n          allOf:\n            - $ref: '#/components/schemas/TransportProtocol'\n            - description: The protocol used for the port mapping. Valid values are \u003ccode\u003etcp\u003c/code\u003e and \u003ccode\u003eudp\u003c/code\u003e. The default is \u003ccode\u003etcp\u003c/code\u003e.\n      description: '\u003cp\u003ePort mappings allow containers to access ports on the host container instance to send or receive traffic. Port mappings are specified as part of the container definition.\u003c/p\u003e \u003cp\u003eIf you are using containers in a task with the \u003ccode\u003eawsvpc\u003c/code\u003e or \u003ccode\u003ehost\u003c/code\u003e network mode, exposed ports should be specified using \u003ccode\u003econtainerPort\u003c/code\u003e. The \u003ccode\u003ehostPort\u003c/code\u003e can be left blank or it must be the same value as the \u003ccode\u003econtainerPort\u003c/code\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eYou cannot expose the same container port for multiple protocols. An error will be returned if this is attempted\u003c/p\u003e \u003c/note\u003e \u003cp\u003eAfter a task reaches the \u003ccode\u003eRUNNING\u003c/code\u003e status, manual and automatic host and container port assignments are visible in the \u003ccode\u003enetworkBindings\u003c/code\u003e section of \u003ca\u003eDescribeTasks\u003c/a\u003e API responses.\u003c/p\u003e'\n    ProxyConfigurationType:\n      type: string\n      enum:\n        - APPMESH\n    ProxyConfiguration:\n      type: object\n      required:\n        - containerName\n      properties:\n        type:\n          allOf:\n            - $ref: '#/components/schemas/ProxyConfigurationType'\n            - description: The proxy type. The only supported value is \u003ccode\u003eAPPMESH\u003c/code\u003e.\n        containerName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the container that will serve as the App Mesh proxy.\n        properties:\n          description: '\u003cp\u003eThe set of network configuration parameters to provide the Container Network Interface (CNI) plugin, specified as key-value pairs.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIgnoredUID\u003c/code\u003e - (Required) The user ID (UID) of the proxy container as defined by the \u003ccode\u003euser\u003c/code\u003e parameter in a container definition. This is used to ensure the proxy ignores its own traffic. If \u003ccode\u003eIgnoredGID\u003c/code\u003e is specified, this field can be empty.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIgnoredGID\u003c/code\u003e - (Required) The group ID (GID) of the proxy container as defined by the \u003ccode\u003euser\u003c/code\u003e parameter in a container definition. This is used to ensure the proxy ignores its own traffic. If \u003ccode\u003eIgnoredUID\u003c/code\u003e is specified, this field can be empty.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eAppPorts\u003c/code\u003e - (Required) The list of ports that the application uses. Network traffic to these ports is forwarded to the \u003ccode\u003eProxyIngressPort\u003c/code\u003e and \u003ccode\u003eProxyEgressPort\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eProxyIngressPort\u003c/code\u003e - (Required) Specifies the port that incoming traffic to the \u003ccode\u003eAppPorts\u003c/code\u003e is directed to.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eProxyEgressPort\u003c/code\u003e - (Required) Specifies the port that outgoing traffic from the \u003ccode\u003eAppPorts\u003c/code\u003e is directed to.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eEgressIgnoredPorts\u003c/code\u003e - (Required) The egress traffic going to the specified ports is ignored and not redirected to the \u003ccode\u003eProxyEgressPort\u003c/code\u003e. It can be an empty list.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eEgressIgnoredIPs\u003c/code\u003e - (Required) The egress traffic going to the specified IP addresses is ignored and not redirected to the \u003ccode\u003eProxyEgressPort\u003c/code\u003e. It can be an empty list.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: '\u003cp\u003eThe configuration details for the App Mesh proxy.\u003c/p\u003e \u003cp\u003eFor tasks using the EC2 launch type, the container instances require at least version 1.26.0 of the container agent and at least version 1.26.0-1 of the \u003ccode\u003eecs-init\u003c/code\u003e package to enable a proxy configuration. If your container instances are launched from the Amazon ECS-optimized AMI version \u003ccode\u003e20190301\u003c/code\u003e or later, then they contain the required versions of the container agent and \u003ccode\u003eecs-init\u003c/code\u003e. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html\"\u003eAmazon ECS-optimized Linux AMI\u003c/a\u003e \u003c/p\u003e'\n    ProxyConfigurationProperties:\n      type: array\n      items:\n        $ref: '#/components/schemas/KeyValuePair'\n    VolumeList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Volume'\n    TaskDefinitionPlacementConstraints:\n      type: array\n      items:\n        $ref: '#/components/schemas/TaskDefinitionPlacementConstraint'\n    RequiresAttributes:\n      type: array\n      items:\n        $ref: '#/components/schemas/Attribute'\n    Resource:\n      type: object\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The name of the resource, such as \u003ccode\u003eCPU\u003c/code\u003e, \u003ccode\u003eMEMORY\u003c/code\u003e, \u003ccode\u003ePORTS\u003c/code\u003e, \u003ccode\u003ePORTS_UDP\u003c/code\u003e, or a user-defined resource.'\n        type:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The type of the resource, such as \u003ccode\u003eINTEGER\u003c/code\u003e, \u003ccode\u003eDOUBLE\u003c/code\u003e, \u003ccode\u003eLONG\u003c/code\u003e, or \u003ccode\u003eSTRINGSET\u003c/code\u003e.'\n        doubleValue:\n          allOf:\n            - $ref: '#/components/schemas/Double'\n            - description: 'When the \u003ccode\u003edoubleValue\u003c/code\u003e type is set, the value of the resource must be a double precision floating-point type.'\n        longValue:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: 'When the \u003ccode\u003elongValue\u003c/code\u003e type is set, the value of the resource must be an extended precision floating-point type.'\n        integerValue:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: 'When the \u003ccode\u003eintegerValue\u003c/code\u003e type is set, the value of the resource must be an integer.'\n        stringSetValue:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: 'When the \u003ccode\u003estringSetValue\u003c/code\u003e type is set, the value of the resource must be a string type.'\n      description: Describes the resources available for a container instance.\n    ResourceType:\n      type: string\n      enum:\n        - GPU\n        - InferenceAccelerator\n    ResourceRequirement:\n      type: object\n      required:\n        - value\n        - type\n      properties:\n        value:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe value for the specified resource type.\u003c/p\u003e \u003cp\u003eIf the \u003ccode\u003eGPU\u003c/code\u003e type is used, the value is the number of physical \u003ccode\u003eGPUs\u003c/code\u003e the Amazon ECS container agent will reserve for the container. The number of GPUs reserved for all containers in a task should not exceed the number of available GPUs on the container instance the task is launched on.\u003c/p\u003e \u003cp\u003eIf the \u003ccode\u003eInferenceAccelerator\u003c/code\u003e type is used, the \u003ccode\u003evalue\u003c/code\u003e should match the \u003ccode\u003edeviceName\u003c/code\u003e for an \u003ca\u003eInferenceAccelerator\u003c/a\u003e specified in a task definition.\u003c/p\u003e'\n        type:\n          allOf:\n            - $ref: '#/components/schemas/ResourceType'\n            - description: The type of resource to assign to a container. The supported values are \u003ccode\u003eGPU\u003c/code\u003e or \u003ccode\u003eInferenceAccelerator\u003c/code\u003e.\n      description: 'The type and amount of a resource to assign to a container. The supported resource types are GPUs and Elastic Inference accelerators. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-gpu.html\"\u003eWorking with GPUs on Amazon ECS\u003c/a\u003e or \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-eia.html\"\u003eWorking with Amazon Elastic Inference on Amazon ECS\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e '\n    TaskOverride:\n      type: object\n      properties:\n        containerOverrides:\n          allOf:\n            - $ref: '#/components/schemas/ContainerOverrides'\n            - description: One or more container overrides sent to a task.\n        cpu:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The cpu override for the task.\n        inferenceAcceleratorOverrides:\n          allOf:\n            - $ref: '#/components/schemas/InferenceAcceleratorOverrides'\n            - description: The Elastic Inference accelerator override for the task.\n        executionRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the task execution IAM role override for the task.\n        memory:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The memory override for the task.\n        taskRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the IAM role that containers in this task can assume. All containers in this task are granted the permissions that are specified in this role.\n        ephemeralStorage:\n          allOf:\n            - $ref: '#/components/schemas/EphemeralStorage'\n            - description: \u003cp\u003eThe ephemeral storage setting override for the task.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis parameter is only supported for tasks hosted on Fargate using platform version \u003ccode\u003e1.4.0\u003c/code\u003e or later.\u003c/p\u003e \u003c/note\u003e\n      description: The overrides associated with a task.\n    ScaleUnit:\n      type: string\n      enum:\n        - PERCENT\n    Secret:\n      type: object\n      required:\n        - name\n        - valueFrom\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the secret.\n        valueFrom:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe secret to expose to the container. The supported values are either the full ARN of the Secrets Manager secret or the full ARN of the parameter in the SSM Parameter Store.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eIf the SSM Parameter Store parameter exists in the same Region as the task you are launching, then you can use either the full ARN or name of the parameter. If the parameter exists in a different Region, then the full ARN must be specified.\u003c/p\u003e \u003c/note\u003e'\n      description: '\u003cp\u003eAn object representing the secret to expose to your container. Secrets can be exposed to a container in the following ways:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eTo inject sensitive data into your containers as environment variables, use the \u003ccode\u003esecrets\u003c/code\u003e container definition parameter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTo reference sensitive information in the log configuration of a container, use the \u003ccode\u003esecretOptions\u003c/code\u003e container definition parameter.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html\"\u003eSpecifying Sensitive Data\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n    SensitiveString:\n      type: string\n      format: password\n    ServiceEvents:\n      type: array\n      items:\n        $ref: '#/components/schemas/ServiceEvent'\n    ServiceEvent:\n      type: object\n      properties:\n        id:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ID string of the event.\n        createdAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix timestamp for when the event was triggered.\n        message:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The event message.\n      description: Details on an event associated with a service.\n    ServiceField:\n      type: string\n      enum:\n        - TAGS\n    ServiceRegistry:\n      type: object\n      properties:\n        registryArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The Amazon Resource Name (ARN) of the service registry. The currently supported service registry is Cloud Map. For more information, see \u003ca href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_CreateService.html\"\u003eCreateService\u003c/a\u003e.'\n        port:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: The port value used if your service discovery service specified an SRV record. This field may be used if both the \u003ccode\u003eawsvpc\u003c/code\u003e network mode and SRV records are used.\n        containerName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The container name value, already specified in the task definition, to be used for your service discovery service. If the task definition that your service task specifies uses the \u003ccode\u003ebridge\u003c/code\u003e or \u003ccode\u003ehost\u003c/code\u003e network mode, you must specify a \u003ccode\u003econtainerName\u003c/code\u003e and \u003ccode\u003econtainerPort\u003c/code\u003e combination from the task definition. If the task definition that your service task specifies uses the \u003ccode\u003eawsvpc\u003c/code\u003e network mode and a type SRV DNS record is used, you must specify either a \u003ccode\u003econtainerName\u003c/code\u003e and \u003ccode\u003econtainerPort\u003c/code\u003e combination or a \u003ccode\u003eport\u003c/code\u003e value, but not both.'\n        containerPort:\n          allOf:\n            - $ref: '#/components/schemas/BoxedInteger'\n            - description: 'The port value, already specified in the task definition, to be used for your service discovery service. If the task definition your service task specifies uses the \u003ccode\u003ebridge\u003c/code\u003e or \u003ccode\u003ehost\u003c/code\u003e network mode, you must specify a \u003ccode\u003econtainerName\u003c/code\u003e and \u003ccode\u003econtainerPort\u003c/code\u003e combination from the task definition. If the task definition your service task specifies uses the \u003ccode\u003eawsvpc\u003c/code\u003e network mode and a type SRV DNS record is used, you must specify either a \u003ccode\u003econtainerName\u003c/code\u003e and \u003ccode\u003econtainerPort\u003c/code\u003e combination or a \u003ccode\u003eport\u003c/code\u003e value, but not both.'\n      description: Details of the service registry.\n    StabilityStatus:\n      type: string\n      enum:\n        - STEADY_STATE\n        - STABILIZING\n    Task:\n      type: object\n      properties:\n        attachments:\n          allOf:\n            - $ref: '#/components/schemas/Attachments'\n            - description: The Elastic Network Adapter associated with the task if the task uses the \u003ccode\u003eawsvpc\u003c/code\u003e network mode.\n        attributes:\n          allOf:\n            - $ref: '#/components/schemas/Attributes'\n            - description: The attributes of the task\n        availabilityZone:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The availability zone of the task.\n        capacityProviderName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The capacity provider associated with the task.\n        clusterArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ARN of the cluster that hosts the task.\n        connectivity:\n          allOf:\n            - $ref: '#/components/schemas/Connectivity'\n            - description: The connectivity status of a task.\n        connectivityAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix timestamp for when the task last went into \u003ccode\u003eCONNECTED\u003c/code\u003e status.\n        containerInstanceArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ARN of the container instances that host the task.\n        containers:\n          allOf:\n            - $ref: '#/components/schemas/Containers'\n            - description: The containers associated with the task.\n        cpu:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe number of CPU units used by the task as expressed in a task definition. It can be expressed as an integer using CPU units, for example \u003ccode\u003e1024\u003c/code\u003e. It can also be expressed as a string using vCPUs, for example \u003ccode\u003e1 vCPU\u003c/code\u003e or \u003ccode\u003e1 vcpu\u003c/code\u003e. String values are converted to an integer indicating the CPU units when the task definition is registered.\u003c/p\u003e \u003cp\u003eIf you are using the EC2 launch type, this field is optional. Supported values are between \u003ccode\u003e128\u003c/code\u003e CPU units (\u003ccode\u003e0.125\u003c/code\u003e vCPUs) and \u003ccode\u003e10240\u003c/code\u003e CPU units (\u003ccode\u003e10\u003c/code\u003e vCPUs).\u003c/p\u003e \u003cp\u003eIf you are using the Fargate launch type, this field is required and you must use one of the following values, which determines your range of supported values for the \u003ccode\u003ememory\u003c/code\u003e parameter:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e256 (.25 vCPU) - Available \u003ccode\u003ememory\u003c/code\u003e values: 512 (0.5 GB), 1024 (1 GB), 2048 (2 GB)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e512 (.5 vCPU) - Available \u003ccode\u003ememory\u003c/code\u003e values: 1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e1024 (1 vCPU) - Available \u003ccode\u003ememory\u003c/code\u003e values: 2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e2048 (2 vCPU) - Available \u003ccode\u003ememory\u003c/code\u003e values: Between 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e4096 (4 vCPU) - Available \u003ccode\u003ememory\u003c/code\u003e values: Between 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB)\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        createdAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix timestamp for when the task was created (the task entered the \u003ccode\u003ePENDING\u003c/code\u003e state).\n        desiredStatus:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The desired status of the task. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-lifecycle.html\"\u003eTask Lifecycle\u003c/a\u003e.'\n        enableExecuteCommand:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: 'Whether or not execute command functionality is enabled for this task. If \u003ccode\u003etrue\u003c/code\u003e, this enables execute command functionality on all containers in the task.'\n        executionStoppedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix timestamp for when the task execution stopped.\n        group:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the task group associated with the task.\n        healthStatus:\n          allOf:\n            - $ref: '#/components/schemas/HealthStatus'\n            - description: '\u003cp\u003eThe health status for the task, which is determined by the health of the essential containers in the task. If all essential containers in the task are reporting as \u003ccode\u003eHEALTHY\u003c/code\u003e, then the task status also reports as \u003ccode\u003eHEALTHY\u003c/code\u003e. If any essential containers in the task are reporting as \u003ccode\u003eUNHEALTHY\u003c/code\u003e or \u003ccode\u003eUNKNOWN\u003c/code\u003e, then the task status also reports as \u003ccode\u003eUNHEALTHY\u003c/code\u003e or \u003ccode\u003eUNKNOWN\u003c/code\u003e, accordingly.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThe Amazon ECS container agent does not monitor or report on Docker health checks that are embedded in a container image (such as those specified in a parent image or from the image''s Dockerfile) and not specified in the container definition. Health check parameters that are specified in a container definition override any Docker health checks that exist in the container image.\u003c/p\u003e \u003c/note\u003e'\n        inferenceAccelerators:\n          allOf:\n            - $ref: '#/components/schemas/InferenceAccelerators'\n            - description: The Elastic Inference accelerator associated with the task.\n        lastStatus:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The last known status of the task. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-lifecycle.html\"\u003eTask Lifecycle\u003c/a\u003e.'\n        launchType:\n          allOf:\n            - $ref: '#/components/schemas/LaunchType'\n            - description: 'The infrastructure on which your task is running. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html\"\u003eAmazon ECS launch types\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n        memory:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe amount of memory (in MiB) used by the task as expressed in a task definition. It can be expressed as an integer using MiB, for example \u003ccode\u003e1024\u003c/code\u003e. It can also be expressed as a string using GB, for example \u003ccode\u003e1GB\u003c/code\u003e or \u003ccode\u003e1 GB\u003c/code\u003e. String values are converted to an integer indicating the MiB when the task definition is registered.\u003c/p\u003e \u003cp\u003eIf you are using the EC2 launch type, this field is optional.\u003c/p\u003e \u003cp\u003eIf you are using the Fargate launch type, this field is required and you must use one of the following values, which determines your range of supported values for the \u003ccode\u003ecpu\u003c/code\u003e parameter:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e512 (0.5 GB), 1024 (1 GB), 2048 (2 GB) - Available \u003ccode\u003ecpu\u003c/code\u003e values: 256 (.25 vCPU)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB) - Available \u003ccode\u003ecpu\u003c/code\u003e values: 512 (.5 vCPU)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB) - Available \u003ccode\u003ecpu\u003c/code\u003e values: 1024 (1 vCPU)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eBetween 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB) - Available \u003ccode\u003ecpu\u003c/code\u003e values: 2048 (2 vCPU)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eBetween 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB) - Available \u003ccode\u003ecpu\u003c/code\u003e values: 4096 (4 vCPU)\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        overrides:\n          allOf:\n            - $ref: '#/components/schemas/TaskOverride'\n            - description: One or more container overrides.\n        platformVersion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The platform version on which your task is running. A platform version is only specified for tasks using the Fargate launch type. If one is not specified, the \u003ccode\u003eLATEST\u003c/code\u003e platform version is used by default. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html\"\u003eFargate Platform Versions\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n        pullStartedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix timestamp for when the container image pull began.\n        pullStoppedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix timestamp for when the container image pull completed.\n        startedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix timestamp for when the task started (the task transitioned from the \u003ccode\u003ePENDING\u003c/code\u003e state to the \u003ccode\u003eRUNNING\u003c/code\u003e state).\n        startedBy:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The tag specified when a task is started. If the task is started by an Amazon ECS service, then the \u003ccode\u003estartedBy\u003c/code\u003e parameter contains the deployment ID of the service that starts it.'\n        stopCode:\n          allOf:\n            - $ref: '#/components/schemas/TaskStopCode'\n            - description: The stop code indicating why a task was stopped. The \u003ccode\u003estoppedReason\u003c/code\u003e may contain additional details.\n        stoppedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix timestamp for when the task was stopped (the task transitioned from the \u003ccode\u003eRUNNING\u003c/code\u003e state to the \u003ccode\u003eSTOPPED\u003c/code\u003e state).\n        stoppedReason:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The reason that the task was stopped.\n        stoppingAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The Unix timestamp for when the task stops (transitions from the \u003ccode\u003eRUNNING\u003c/code\u003e state to \u003ccode\u003eSTOPPED\u003c/code\u003e).\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: '\u003cp\u003eThe metadata that you apply to the task to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.\u003c/p\u003e \u003cp\u003eThe following basic restrictions apply to tags:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eMaximum number of tags per resource - 50\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor each resource, each tag key must be unique, and each tag key can have only one value.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum key length - 128 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum value length - 256 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTag keys and values are case-sensitive.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eDo not use \u003ccode\u003eaws:\u003c/code\u003e, \u003ccode\u003eAWS:\u003c/code\u003e, or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        taskArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the task.\n        taskDefinitionArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ARN of the task definition that creates the task.\n        version:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: 'The version counter for the task. Every time a task experiences a change that triggers a CloudWatch event, the version counter is incremented. If you are replicating your Amazon ECS task state with CloudWatch Events, you can compare the version of a task reported by the Amazon ECS API actions with the version reported in CloudWatch Events for the task (inside the \u003ccode\u003edetail\u003c/code\u003e object) to verify that the version in your event stream is current.'\n        ephemeralStorage:\n          allOf:\n            - $ref: '#/components/schemas/EphemeralStorage'\n            - description: The ephemeral storage settings for the task.\n      description: Details on a task in a cluster.\n    SystemControl:\n      type: object\n      properties:\n        namespace:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The namespaced kernel parameter for which to set a \u003ccode\u003evalue\u003c/code\u003e.\n        value:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The value for the namespaced kernel parameter specified in \u003ccode\u003enamespace\u003c/code\u003e.\n      description: '\u003cp\u003eA list of namespaced kernel parameters to set in the container. This parameter maps to \u003ccode\u003eSysctls\u003c/code\u003e in the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate\"\u003eCreate a container\u003c/a\u003e section of the \u003ca href=\"https://docs.docker.com/engine/api/v1.35/\"\u003eDocker Remote API\u003c/a\u003e and the \u003ccode\u003e--sysctl\u003c/code\u003e option to \u003ca href=\"https://docs.docker.com/engine/reference/run/#security-configuration\"\u003edocker run\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eIt is not recommended that you specify network-related \u003ccode\u003esystemControls\u003c/code\u003e parameters for multiple containers in a single task that also uses either the \u003ccode\u003eawsvpc\u003c/code\u003e or \u003ccode\u003ehost\u003c/code\u003e network mode for the following reasons:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eFor tasks that use the \u003ccode\u003eawsvpc\u003c/code\u003e network mode, if you set \u003ccode\u003esystemControls\u003c/code\u003e for any container, it applies to all containers in the task. If you set different \u003ccode\u003esystemControls\u003c/code\u003e for multiple containers in a single task, the container that is started last determines which \u003ccode\u003esystemControls\u003c/code\u003e take effect.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor tasks that use the \u003ccode\u003ehost\u003c/code\u003e network mode, the \u003ccode\u003esystemControls\u003c/code\u003e parameter applies to the container instance''s kernel parameter as well as that of all containers of any tasks running on that container instance.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n    TagKey:\n      type: string\n      pattern: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$'\n      minLength: 1\n      maxLength: 128\n    TagValue:\n      type: string\n      pattern: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$'\n      minLength: 0\n      maxLength: 256\n    Tag:\n      type: object\n      properties:\n        key:\n          allOf:\n            - $ref: '#/components/schemas/TagKey'\n            - description: One part of a key-value pair that make up a tag. A \u003ccode\u003ekey\u003c/code\u003e is a general label that acts like a category for more specific tag values.\n        value:\n          allOf:\n            - $ref: '#/components/schemas/TagValue'\n            - description: The optional part of a key-value pair that make up a tag. A \u003ccode\u003evalue\u003c/code\u003e acts as a descriptor within a tag category (key).\n      description: '\u003cp\u003eThe metadata that you apply to a resource to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.\u003c/p\u003e \u003cp\u003eThe following basic restrictions apply to tags:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eMaximum number of tags per resource - 50\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor each resource, each tag key must be unique, and each tag key can have only one value.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum key length - 128 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMaximum value length - 256 Unicode characters in UTF-8\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTag keys and values are case-sensitive.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eDo not use \u003ccode\u003eaws:\u003c/code\u003e, \u003ccode\u003eAWS:\u003c/code\u003e, or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n    TagKeys:\n      type: array\n      items:\n        $ref: '#/components/schemas/TagKey'\n    TaskStopCode:\n      type: string\n      enum:\n        - TaskFailedToStart\n        - EssentialContainerExited\n        - UserInitiated\n    TaskDefinitionField:\n      type: string\n      enum:\n        - TAGS\n    TaskDefinitionPlacementConstraintType:\n      type: string\n      enum:\n        - memberOf\n    TaskDefinitionPlacementConstraint:\n      type: object\n      properties:\n        type:\n          allOf:\n            - $ref: '#/components/schemas/TaskDefinitionPlacementConstraintType'\n            - description: The type of constraint. The \u003ccode\u003eMemberOf\u003c/code\u003e constraint restricts selection to be from a group of valid candidates.\n        expression:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'A cluster query language expression to apply to the constraint. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html\"\u003eCluster query language\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.'\n      description: '\u003cp\u003eAn object representing a constraint on task placement in the task definition. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html\"\u003eTask placement constraints\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Service Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eTask placement constraints are not supported for tasks run on Fargate.\u003c/p\u003e \u003c/note\u003e'\n    TaskField:\n      type: string\n      enum:\n        - TAGS\n    TaskSetField:\n      type: string\n      enum:\n        - TAGS\n    Tmpfs:\n      type: object\n      required:\n        - containerPath\n        - size\n      properties:\n        containerPath:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The absolute file path where the tmpfs volume is to be mounted.\n        size:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The maximum size (in MiB) of the tmpfs volume.\n        mountOptions:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: '\u003cp\u003eThe list of tmpfs volume mount options.\u003c/p\u003e \u003cp\u003eValid values: \u003ccode\u003e\"defaults\" | \"ro\" | \"rw\" | \"suid\" | \"nosuid\" | \"dev\" | \"nodev\" | \"exec\" | \"noexec\" | \"sync\" | \"async\" | \"dirsync\" | \"remount\" | \"mand\" | \"nomand\" | \"atime\" | \"noatime\" | \"diratime\" | \"nodiratime\" | \"bind\" | \"rbind\" | \"unbindable\" | \"runbindable\" | \"private\" | \"rprivate\" | \"shared\" | \"rshared\" | \"slave\" | \"rslave\" | \"relatime\" | \"norelatime\" | \"strictatime\" | \"nostrictatime\" | \"mode\" | \"uid\" | \"gid\" | \"nr_inodes\" | \"nr_blocks\" | \"mpol\"\u003c/code\u003e \u003c/p\u003e'\n      description: 'The container path, mount options, and size of the tmpfs mount.'\n    UlimitName:\n      type: string\n      enum:\n        - core\n        - cpu\n        - data\n        - fsize\n        - locks\n        - memlock\n        - msgqueue\n        - nice\n        - nofile\n        - nproc\n        - rss\n        - rtprio\n        - rttime\n        - sigpending\n        - stack\n    Ulimit:\n      type: object\n      required:\n        - name\n        - softLimit\n        - hardLimit\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/UlimitName'\n            - description: The \u003ccode\u003etype\u003c/code\u003e of the \u003ccode\u003eulimit\u003c/code\u003e.\n        softLimit:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The soft limit for the ulimit type.\n        hardLimit:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The hard limit for the ulimit type.\n      description: \u003cp\u003eThe \u003ccode\u003eulimit\u003c/code\u003e settings to pass to the container.\u003c/p\u003e \u003cp\u003eAmazon ECS tasks hosted on Fargate use the default resource limit values set by the operating system with the exception of the \u003ccode\u003enofile\u003c/code\u003e resource limit parameter which Fargate overrides. The \u003ccode\u003enofile\u003c/code\u003e resource limit sets a restriction on the number of open files that a container can use. The default \u003ccode\u003enofile\u003c/code\u003e soft limit is \u003ccode\u003e1024\u003c/code\u003e and hard limit is \u003ccode\u003e4096\u003c/code\u003e.\u003c/p\u003e\n    Volume:\n      type: object\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The name of the volume. Up to 255 letters (uppercase and lowercase), numbers, underscores, and hyphens are allowed. This name is referenced in the \u003ccode\u003esourceVolume\u003c/code\u003e parameter of container definition \u003ccode\u003emountPoints\u003c/code\u003e.'\n        host:\n          allOf:\n            - $ref: '#/components/schemas/HostVolumeProperties'\n            - description: '\u003cp\u003eThis parameter is specified when you are using bind mount host volumes. The contents of the \u003ccode\u003ehost\u003c/code\u003e parameter determine whether your bind mount host volume persists on the host container instance and where it is stored. If the \u003ccode\u003ehost\u003c/code\u003e parameter is empty, then the Docker daemon assigns a host path for your data volume. However, the data is not guaranteed to persist after the containers associated with it stop running.\u003c/p\u003e \u003cp\u003eWindows containers can mount whole directories on the same drive as \u003ccode\u003e$env:ProgramData\u003c/code\u003e. Windows containers cannot mount directories on a different drive, and mount point cannot be across drives. For example, you can mount \u003ccode\u003eC:\\my\\path:C:\\my\\path\u003c/code\u003e and \u003ccode\u003eD:\\:D:\\\u003c/code\u003e, but not \u003ccode\u003eD:\\my\\path:C:\\my\\path\u003c/code\u003e or \u003ccode\u003eD:\\:C:\\my\\path\u003c/code\u003e.\u003c/p\u003e'\n        dockerVolumeConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/DockerVolumeConfiguration'\n            - description: '\u003cp\u003eThis parameter is specified when you are using Docker volumes.\u003c/p\u003e \u003cp\u003eWindows containers only support the use of the \u003ccode\u003elocal\u003c/code\u003e driver. To use bind mounts, specify the \u003ccode\u003ehost\u003c/code\u003e parameter instead.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eDocker volumes are not supported by tasks run on Fargate.\u003c/p\u003e \u003c/note\u003e'\n        efsVolumeConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/EFSVolumeConfiguration'\n            - description: This parameter is specified when you are using an Amazon Elastic File System file system for task storage.\n        fsxWindowsFileServerVolumeConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/FSxWindowsFileServerVolumeConfiguration'\n            - description: This parameter is specified when you are using Amazon FSx for Windows File Server file system for task storage.\n      description: 'A data volume used in a task definition. For tasks that use the Amazon Elastic File System (Amazon EFS), specify an \u003ccode\u003eefsVolumeConfiguration\u003c/code\u003e. For Windows tasks that use Amazon FSx for Windows File Server file system, specify a \u003ccode\u003efsxWindowsFileServerVolumeConfiguration\u003c/code\u003e. For tasks that use a Docker volume, specify a \u003ccode\u003eDockerVolumeConfiguration\u003c/code\u003e. For tasks that use a bind mount host volume, specify a \u003ccode\u003ehost\u003c/code\u003e and optional \u003ccode\u003esourcePath\u003c/code\u003e. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_data_volumes.html\"\u003eUsing Data Volumes in Tasks\u003c/a\u003e.'\n    VolumeFrom:\n      type: object\n      properties:\n        sourceContainer:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of another container within the same task definition from which to mount volumes.\n        readOnly:\n          allOf:\n            - $ref: '#/components/schemas/BoxedBoolean'\n            - description: 'If this value is \u003ccode\u003etrue\u003c/code\u003e, the container has read-only access to the volume. If this value is \u003ccode\u003efalse\u003c/code\u003e, then the container can write to the volume. The default value is \u003ccode\u003efalse\u003c/code\u003e.'\n      description: Details on a data volume from another container in the same task definition.\nsecurity:\n  - hmac: []\n"
		}
	},
	"Error": "parse: paths: /#X-Amz-Target=AmazonEC2ContainerServiceV20141113.DeleteCluster: post: DeleteCluster: responses: 486: unknown status code: 486"
}