{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dart-ogurets/dart-openapi-maven"
		},
		"file": {
			"name": "sample-types.yaml",
			"path": "src/test/resources/sample-types.yaml",
			"content": "openapi: 3.0.1\ninfo:\n  title: test api\n  description: Sample API for test case for k8s\n  version: \"1.1.1\"\npaths:\n  /hello:\n    get:\n      tags:\n        - TestService\n      operationId: helloOp\n      responses:\n        \"200\":\n          description: \"Resulting weird api\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SampleTypes\"\ncomponents:\n  schemas:\n    ExternalEnum:\n      type: string\n      enum:\n        - enum1\n        - enum2\n    SimpleModel:\n      type: object\n      properties:\n        id:\n          type: string\n    SampleTypes:\n      type: object\n      properties:\n        numberField:\n          type: number\n        numerArrayField:\n          type: array\n          items:\n            type: number\n        numerArrayArrayField:\n          type: array\n          items:\n            type: array\n            items:\n              type: number\n        dateField:\n          type: string\n          format: date\n        dateArrayField:\n          type: array\n          items:\n            type: date\n        dateArrayArrayField:\n          type: array\n          items:\n            type: array\n            items:\n              type: date\n        dateTimeField:\n          type: string\n          format: date-time\n        dateTimeArrayField:\n          type: array\n          items:\n            type: date-time\n        dateTimeArrayArrayField:\n          type: array\n          items:\n            type: array\n            items:\n              type: date-time\n        embeddedEnumField:\n          type: string\n          enum:\n            - enum1\n            - enum2\n        embeddedEnumArrayField:\n          type: array\n          items:\n            type: string\n            enum:\n              - enum1\n              - enum2\n        embeddedEnumArrayArrayField:\n          type: array\n          items:\n            type: array\n            items:\n              type: string\n              enum:\n                - enum1\n                - enum2\n        externalEnumField:\n          $ref: \"#/components/schemas/ExternalEnum\"\n        externalEnumArrayField:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ExternalEnum\"\n        externalEnumArrayArrayField:\n          type: array\n          items:\n            type: array\n            items:\n              $ref: \"#/components/schemas/ExternalEnum\"\n        stringField:\n          type: string\n        stringArrayField:\n          type: array\n          items:\n            type: string\n        stringArrayArrayField:\n          type: array\n          items:\n            type: array\n            items:\n              type: string\n        modelField:\n          $ref: \"#/components/schemas/SimpleModel\"\n        modelArrayField:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SimpleModel\"\n        modelArrayArrayField:\n          type: array\n          items:\n            type: array\n            items:\n              $ref: \"#/components/schemas/SimpleModel\"\n        anyField:\n          description: \"field\"\n        anyArrayField:\n          type: array\n          items:\n            description: \"desc\"\n        anyArrayArrayField:\n          type: array\n          items:\n            type: array\n            items:\n              description: \"any array array\"\n        mapOfArraysOfStrings:\n          type: object\n          additionalProperties:\n            items:\n              type: string\n            type: array\n          description: \"used extensively in k8s api and generates weird code\"\n        fieldThatIsOnlyMap:\n          $ref: \"#/components/schemas/ObjectThatIsOnlyMap\"\n    ObjectThatIsOnlyMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/ObjectTargetOfMap'\n    ObjectTargetOfMap:\n      type: object\n      properties:\n        code:\n          type: integer\n        text:\n          type: string\n\n\n"
		}
	},
	"Error": "parse: paths: /hello: get: helloOp: responses: 200: content: application/json: schema: parse schema: reference \"#/components/schemas/SampleTypes\": parse schema: dateArrayArrayField: parse schema: item: parse schema: item: parse schema: unexpected schema type: \"date\""
}