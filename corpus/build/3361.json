{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kurusugawa-computer/annofab-api-python-client"
		},
		"file": {
			"name": "swagger.yaml",
			"path": "generate/swagger/swagger.yaml",
			"content": "\nopenapi: \"3.0.0\"\ninfo:\n  description: |\n    [AnnoFab](https://annofab.com) のWeb APIです。\n    キャッシュが有効になって[大幅に高速化された v2 はこちら](/docs/api/v2/) です。\n\n    APIベースURL: https://annofab.com/api/v1\u003cbr\u003e\n    例） /projects というAPIを使う場合、 https://annofab.com/api/v1/projects をリクエストします。\n\n\n    ■APIの変更ポリシー\u003cbr\u003e\n    **現在、APIは開発途上版です。予告なく互換性のない変更がある可能性をご了承ください。**\n    ご要望の実現、あるいは、セキュリティやパフォーマンスの改善などを実現するにあたり、互換性のない変更が必要になる場合があります。\n    その場合、開発途上版では開発リソースを改善に集中するため、古いバージョンを共存させずに互換性のない変更を行う場合があります。\n\n    ■機能の要望や不具合報告 \u003cbr\u003e\n    「こんな機能が欲しい」というご要望や、「APIが予期せぬ動作をする」といった不具合報告などは、[こちらのお問い合わせフォーム](https://docs.google.com/forms/d/e/1FAIpQLSePryikS_wo_H11pxL2ewUe2d0ud0jxZlBQwH2rVVfcifKyQw/viewform)からご連絡ください。\n\n    # API Client\n\n    APIクライアントも提供しています。\n\n    * https://github.com/kurusugawa-computer/annofab-cli\n    * https://github.com/kurusugawa-computer/annofab-api-python-client\n\n    # API Convention\n\n    ## 用語\n\n    * **属性○○○を必須**とは、「JSONに属性キー○○○を含め、かつ、その値が`null`以外」であること\n    * **属性○○○を未指定**とは、「JSONに属性キー○○○を含めない」または「属性○○○のキーはあるが値は`null`」のどちらかであること\n\n    ## 更新系APIのリクエストボディに必須の属性\n\n    * 更新系APIとは、HTTPメソッドが **PUT** または **POST** のAPIです。\n    * 更新系APIでは、更新対象の「リソースの最終更新日」を必須とする場合があります。\n      * これは、複数ユーザーからのAPIリクエストのデータ競合を避けるための、一般的なAPI設計慣習によるものです。\n      * ここで「リソースの最終更新日」とは、`last_updated_datetime` または `updated_datetime` という名前の属性です。\n      * 一部のAPIでは、操作対象リソースと別のリソースの最終更新日を必要とします。\n        その場合は、`last_***_update_datetime` のような名前です（***には別リソースが入ります）。\n      * **新規作成のとき**は、リクエストボディの「リソースの最終更新日」を未指定にします。\n        * リソースがすでに作成されているときは、新規作成リクエストは失敗します。\n      * **存在するリソースを更新または削除するとき**は、リクエストボディの「リソースの最終更新日」に、そのリソースの現在の`updated_datetime`を指定します。\n        * 更新しようとしたリソースが存在しないとき、またはすでに更新されているときは、更新リクエストは失敗します。\n    * 「リソースの最終更新日」以外の属性については、新規作成/更新それぞれで必須が異なる場合、API個別に特筆されています。\n\n    ## APIのリクエストボディに指定する _type 属性について\n\n    * 一部のAPIではリクエストボディに `_type` 属性を任意で指定することができます。\n    * `_type` 属性を指定する場合は、`_type` 属性で指定された型にデコードします。\n      例えば、`_type` 属性に `ByDirectory` を指定すると `TaskGenerateRuleByDirectory` にデコードされ、`Poliline` を指定すると `InspectionDataPolyline` にデコードされます。\n      リクエストボディが誤っている場合はエラーになります。\n    * `_type` 属性を指定しない場合は、リクエストボディで指定された `_type` 以外の属性からデコードすべき型を推論します。適切な型が見つからない場合はエラーになります。\n    * `_type` 属性は「推論が失敗して別の型にデコードされる」ことを防ぐために指定することを推奨します。しかし、利便性のために一部APIを除き指定は必須ではありません。\n\n    ## APIに指定するID/名前の制約\n\n    * APIで使用する各データのIDに使用できる文字種は次の通りです。\n      * 半角英数字\n      * `_` (アンダースコア)\n      * `-` (ハイフン)\n      * `.` (ドット)\n    * 特に制限がない限り、IDはUUID version4形式とすることを推奨します。\n      * 例） `b048c6b3-b36f-4c8d-97ea-96828a50a44c`\n    * 各データのIDは、以下のように特定のデータに対して一意な値である必要があります。\n\n    ID/名前 | 一意制約\n    ---|---\n    組織名 | AnnoFab内で一意\n    組織ID | AnnoFab内で一意\n    ユーザID | AnnoFab内で一意\n    アカウントID  | AnnoFab内で一意\n    プロジェクトID | AnnoFab内で一意\n    タスクID（プレフィックス含む） | プロジェクト内で一意\n    入力データID | プロジェクト内で一意\n    アノテーションID | フレーム内（タスクID、入力データIDの組み合わせ）で一意\n    検査ID | プロジェクト内で一意\n    補助情報ID | プロジェクト内で一意\n    WebhookID | プロジェクト内で一意\n    作業ガイド画像ID | プロジェクト内で一意\n    ラベルID | プロジェクト内で一意\n    属性ID | プロジェクト内で一意\n    選択肢ID | 属性内で一意\n    ジョブID | プロジェクト内で一意\n    入力データセットID | 組織内で一意\n    プラグインID | 組織内で一意\n\n    ## 検索結果の集約を表す AggregationResult\n\n    いくつかの検索系 API の検索結果レスポンスは、`AggregationResult` というデータ構造のフィールドを持っています。\n    `AggergationResult` は、検索対象リソースをある観点で集約した結果を表します。\n    このような集約は、「検索結果を属性 XXX の件数別に分類」などするために使われます。\n\n    例えば、タスクを検索する API には、以下のような「タスクの現在担当者での集約 `account_id_count`」などの `AggregationResult` がいくつか含まれています。\n\n    ```json\n    {\n      \"list\": [ ... ],\n      \"aggregations\": [\n        {\n          \"_type\": \"CountResult\",\n          \"name\": \"account_id_count\",\n          \"field\": \"account_id\",\n          \"docCount\": 15,\n          \"items\": [\n            {\"key\":\"c5eee002\", \"count\":9, \"aggregations\":[], \"_type\":\"...\"},\n            {\"key\":\"9f110e48\", \"count\":5, \"aggregations\":[], \"_type\":\"...\"},\n            {\"key\":\"b25dfeb3\", \"count\":1, \"aggregations\":[], \"_type\":\"...\"}\n          ]\n        }\n      ]\n    }\n    ```\n\n    上記例 `account_id_count` は、タスクのフィールド `account_id` でタスクを分類したところ「`account_id` が `c5eee002` であるタスクが9件、`9f110e48` であるタスクが5件、`b25dfeb3` であるタスクが1件」だったという結果を表しています。\n    また、AggregationResultの集約の件数は、合計で10000件以下に制限されており、それを超える件数がある場合は上位10000件が取得されます。もし、省略された部分を取得したい場合は、検索条件を縛って結果に上る集約の数を減らしてください。\n\n  version: 0.132.0\n  title: AnnoFab Web API\n  x-logo:\n    url: \"https://annofab.com/resource/images/logo_landscape.png\"\n    href: \"https://annofab.com/\"\n  contact:\n    url: \"https://annofab.com/docs/forms/trouble-shooting.html\"\nservers:\n- url: https://annofab.com/api/v1\ntags:\n- name: af-account\n  x-displayName: Account\n  description: ユーザーアカウントに対する操作\n- name: af-annotation\n  x-displayName: Annotation\n  description: アノテーションに対する操作\n- name: af-annotation-specs\n  x-displayName: Annotation Specs\n  description: アノテーション仕様に対する操作\n- name: af-comment\n  x-displayName: Comment\n  description: コメントに対する操作\n- name: af-input\n  x-displayName: Input\n  description: |\n    **入力データ（input data）**に対する操作です。\n\n    入力データとは、アノテーションする対象となる画像、動画、CSVなどのファイル全般のことです。\n    入力データは、プロジェクトごとに作成されます。\n\n    すべてのAF利用プランで、入力データをAnnoFabにアップロードできます。\n    AnnoFabにアップロードされた入力データは、AnnoFabからアノテーションツール上に配信されます。\n\n    ビジネスプランでは、入力データをお客様が管理される**プライベートストレージ**に置き、URLだけをAnnoFabに登録できます。\n    プライベートストレージには、**httpsサーバーに対応したNAS**または**AWS S3**を利用できます。\n    プライベートストレージに置かれた入力データは、AnnoFabのサーバーを経由せず、直接アノテーションツール上に配信されます。\n    セキュリティ要件のためお客様の入力データを社外（AnnoFab含む）に非公開にしたい場合、プライベートストレージを利用することができます。\n    また場合によっては、AnnoFabから入力データを配信するよりも配信速度が改善する場合があります。\n\n    関連\n    * [af-supplementary](#tag/af-supplementary): 入力データを補う補助情報\n- name: af-inspection\n  x-displayName: Inspection\n  description: 検査コメントに対する操作\n- name: af-instruction\n  x-displayName: Instruction\n  description: 作業ガイドに対する操作\n- name: af-job\n  x-displayName: Job\n  description: バッチ処理ジョブに対する操作\n- name: af-login\n  x-displayName: Login\n  description: ログイン関連の操作\n- name: af-my\n  x-displayName: My\n  description: 自身のリソースに対する操作\n- name: af-organization\n  x-displayName: Organization\n  description: 組織に対する操作\n- name: af-organization-input\n  x-displayName: Organization Input\n  description: |\n    入力データセットと入力データに対する操作\n\n    **入力データセットに関するAPIは開発中のため、予告なく変更されることがあります。**\n\n    **入力データセット**とは、プロジェクトが用いる入力データの集合です。入力データセットは組織に所属します。\n    現時点では入力データセットはプロジェクトを新規作成するごとに一つずつ作成されるようになっています。\n    将来的にプロジェクトの新規作成時に同じ組織の別のプロジェクトの入力データセットを指定して入力データを共有できるようにする機能のリリースを予定しています。\n- name: af-organization-member\n  x-displayName: Organization Member\n  description: 組織メンバーに対する操作\n- name: af-organization-plugin\n  x-displayName: Organization Plugin\n  description: |\n    組織で使用するプラグインに対する操作\n\n    **このAPIは AnnoFab に許可された組織だけで使用できます。またアルファ版につき、予告なく変更されることがあります。**\n- name: af-project\n  x-displayName: Project\n  description: プロジェクトに対する操作\n- name: af-project-member\n  x-displayName: Project Member\n  description: プロジェクトメンバーに対する操作\n- name: af-statistics\n  x-displayName: Statistics\n  description: 集計に関する操作\n- name: af-supplementary\n  x-displayName: Supplementary\n  description: |\n    **補助情報（supprementary data）**に対する操作です。\n\n    補助情報とは、アノテーションする対象となる[入力データ](#tag/af-input)では*ありません*が、\n    アノテーションするときに何らかの手がかりや文脈を与えるデータのことです。\n    例えば、次のようなものです。\n    * 現在の写真に対する、過去の写真\n    * 光学写真に対する、暗視写真\n    * 前方を撮影した写真に対する、左側面・右側面・後方の写真\n    * 写真や動画を撮影した日時、緯度経度、撮影者などのメタデータ（テキスト）\n\n    補助情報は、画像やテキストで、プロジェクトの入力データごとにひも付けられます。\n    補助情報で扱う画像は、入力データと同様にAnnoFabにアップロードする他に、プライベートストレージの画像を利用することもできます。\n\n    関連\n    * [af-input](#tag/af-input): 補助情報をひもづける入力データ\n    * [af-project](#tag/af-project): 補助情報をひもづけるプロジェクト\n- name: af-task\n  x-displayName: Task\n  description: タスクに対する操作\n- name: af-webhook\n  x-displayName: Webhook\n  description: Webhookに対する操作\n- name: x-annotation-zip\n  x-displayName: Annotation ZIP\n  description: |\n    AnnoFabで作成したアノテーションは、元となった入力データ（画像や動画など）に対応する形で1ファイルのJSONとなります。\n    これらのJSONはZIP形式で圧縮され、一括で取得できます。\n\n    AnnoFabから取得できるアノテーションの構造は、現在2種類あります。\n\n    1. Simple\n      * バウンディングボックスや属性など、いわゆるアノテーションにしぼった軽量な構造。\n      * いかなるプロジェクトでも取得できます。\n      * 推奨版です。\n      * アノテーションZIPおよびアノテーション構造の詳細は、 [Simple Annotation ZIP](#section/Simple-Annotation-ZIP) を参照ください。\n    2. Full\n      * バウンディングボックスや属性に加え、アノテーションを作成したタスクに関する構造が含まれる重厚長大な構造。\n      * Businessプラン組織のプロジェクトでのみ取得できます。\n      * 非推奨版です。長期的には廃止予定なので、新規の使用は控え、Simpleへ移行してください。\n      * アノテーションZIPおよびアノテーション構造の詳細は、 [Full Annotation ZIP](#section/Full-Annotation-ZIP) を参照ください。\n\n    アノテーションは、各プロジェクトのトップページでダウンロードできます。また、次のAPIを利用して取得することもできます。\n\n    * Simple版アノテーションZIP取得API: [getAnnotationArchive](#operation/getAnnotationArchive)\n    * Full版アノテーションZIP取得API: [getArchiveFullWithProId](#operation/getArchiveFullWithProId)\n\n    なお、アノテーションZIPは毎日AM 03:00 JSTごろに自動更新されます。\n\n    ## Simple Annotation ZIP\n    ### ファイル名\n    `af-annotation-{プロジェクトID}-{更新日時: yyyyMMdd-hhmmss}.zip`\n\n    ### ZIPファイル内の構造\n    * / (ZIPファイルのルートディレクトリ)\n      * {タスクID}/\n        * {入力データID}.json\n          * アノテーションJSONデータ (詳細は次節を参照)\n        * {入力データID}/ (塗りつぶしアノテーション時のみ)\n          * {アノテーションデータID} (塗りつぶしのPNG画像)\n\n    ### アノテーションJSONデータの構造\n    Simple版アノテーションZIPに含まれるアノテーションJSONは、機械学習の一般的な利用で扱いやすい構造になっています。\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/SimpleAnnotation\" /\u003e\n\n    ## Full Annotation ZIP\n    ### ファイル名\n    `af-annotation-{プロジェクトID}-{更新日時: yyyyMMdd-hhmmss}.zip`\n\n    ### ZIPファイル内の構造\n    * / (ZIPファイルのルートディレクトリ)\n      * {タスクID}/\n        * {入力データID}.json\n          * アノテーションJSONデータ (詳細は次節を参照)\n        * {入力データID}/ (塗りつぶしアノテーション時のみ)\n          * {アノテーションデータID} (塗りつぶしのPNG画像)\n\n    ### アノテーションJSONデータの構造\n    Full版アノテーションZIPに含まれるアノテーションJSONは、画像やアノテーションやアノテーション作成者など管理用の詳細情報が付随しています。\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/FullAnnotation\" /\u003e\n\n- name: x-data-types\n  x-displayName: Data Types\n  description: |\n    # Task\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/Task\" /\u003e\n\n    # TaskHistory\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/TaskHistory\" /\u003e\n\n    # TaskHistoryEvent\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/TaskHistoryEvent\" /\u003e\n\n    # Inspection\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/Inspection\" /\u003e\n\n    # TaskStatus\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/TaskStatus\" /\u003e\n\n    # TaskPhase\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/TaskPhase\" /\u003e\n\n    # AnnotationId\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/AnnotationId\" /\u003e\n\n    # InputData\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/InputData\" /\u003e\n\n    # ProjectJobType\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/ProjectJobType\" /\u003e\n\n    # OrganizationJobType\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/OrganizationJobType\" /\u003e\n\n    # AnnotationQuery\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/AnnotationQuery\" /\u003e\n\n    # ArrayOfProjectTaskStatisticsHistory\n\n    日付ごと、タスクフェーズごと、タスクステータスごとに以下の項目を集計したデータです。\n    * タスク数\n    * 累計作業時間\n\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/ArrayOfProjectTaskStatisticsHistory\" /\u003e\n\n    # ArrayOfProjectAccountStatistics\n\n    ユーザごと、日ごとに以下の項目を集計したデータです。\n    * 教師付フェーズのタスクを提出した回数、または検査/受入フェーズのタスクを合格/差戻にした回数\n    * 教師付フェーズを担当して提出したタスクが差し戻された回数、または受入フェーズを担当して合格にしたタスクが受入完了状態を取り消された回数\n    * 作業時間\n\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/ArrayOfProjectAccountStatistics\" /\u003e\n\n    # ArrayOfInspectionStatistics\n\n    ラベルごと、定型指摘ごとに検査コメント数を集計したデータです。\n\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/ArrayOfInspectionStatistics\" /\u003e\n\n    # ArrayOfTaskPhaseStatistics\n\n    日ごと、フェーズごとに以下の項目を集計したデータです。\n    * 累積作業時間\n\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/ArrayOfTaskPhaseStatistics\" /\u003e\n\n    # ArrayOfLabelStatistics\n\n    アノテーションラベルごとに以下の項目を集計したデータです。\n    * 受入が完了したアノテーション数\n    * 受入が完了していないアノテーション数\n\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/ArrayOfLabelStatistics\" /\u003e\n\n    # ArrayOfWorktimeStatistics\n\n    単位当たり（タスク1個、画像1個、動画1分）の作業時間情報を集計したデータです。\n\n    ヒストグラムは、最終日の `by_tasks`、`by_inputs` のみ格納されます。\n    アカウント毎の集計の `by_tasks`、`by_inputs` には、最終日であってもヒストグラムは格納されません。\n\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/ArrayOfWorktimeStatistics\" /\u003e\nx-tagGroups:\n  - name: API\n    tags:\n      - af-account\n      - af-annotation\n      - af-annotation-specs\n      - af-comment\n      - af-input\n      - af-inspection\n      - af-instruction\n      - af-job\n      - af-login\n      - af-my\n      - af-organization\n      - af-organization-input\n      - af-organization-member\n      - af-organization-plugin\n      - af-project\n      - af-project-member\n      - af-statistics\n      - af-supplementary\n      - af-task\n      - af-webhook\n  - name: Appendix\n    tags:\n      - x-annotation-zip\n      - x-data-types\ncomponents:\n  securitySchemes:\n    EveryoneRequestBody:\n      $ref: \"swagger-api-components.yaml#/components/securitySchemes/EveryoneRequestBody\"\n    EveryoneQueryParameter:\n      $ref: \"swagger-api-components.yaml#/components/securitySchemes/EveryoneQueryParameter\"\n    Everyone:\n      $ref: \"swagger-api-components.yaml#/components/securitySchemes/Everyone\"\n    AnnoFabAdminOnly:\n      $ref: \"swagger-api-components.yaml#/components/securitySchemes/AnnoFabAdminOnly\"\n    AllProjectMember:\n      $ref: \"swagger-api-components.yaml#/components/securitySchemes/AllProjectMember\"\n    ProjectAccepter:\n      $ref: \"swagger-api-components.yaml#/components/securitySchemes/ProjectAccepter\"\n    ProjectDataUser:\n      $ref: \"swagger-api-components.yaml#/components/securitySchemes/ProjectDataUser\"\n    ProjectAccepterOrDataUser:\n      $ref: \"swagger-api-components.yaml#/components/securitySchemes/ProjectAccepterOrDataUser\"\n    ProjectOwner:\n      $ref: \"swagger-api-components.yaml#/components/securitySchemes/ProjectOwner\"\n    AllOrganizationMember:\n      $ref: \"swagger-api-components.yaml#/components/securitySchemes/AllOrganizationMember\"\n    OrganizationAdministrator:\n      $ref: \"swagger-api-components.yaml#/components/securitySchemes/OrganizationAdministrator\"\n    OrganizationOwner:\n      $ref: \"swagger-api-components.yaml#/components/securitySchemes/OrganizationOwner\"\npaths:\n  /login:\n    post:\n      tags:\n      - af-login\n      summary: ログイン\n      description: |\n        AnnoFab にログインし、その他 API の認証に必要なトークンを取得します。\n\n        トークンは本人認証に使われる機密情報です。なりすましなど悪用のおそれがあるため、他人への提供は推奨されません。\n      security:\n      - EveryoneRequestBody: []\n      operationId: login\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/LoginRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/LoginResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /logout:\n    post:\n      tags:\n      - af-login\n      summary: ログアウト\n      description: \"本人認証にはリクエストボディのトークンを使用します。\"\n      security:\n      - EveryoneRequestBody: []\n      operationId: logout\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/Token\"\n      responses:\n        \"200\":\n          $ref: \"swagger-api-components.yaml#/components/responses/SuccessMessage\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /refresh-token:\n    post:\n      tags:\n      - af-login\n      summary: トークン リフレッシュ\n      description: |\n        トークンを再発行します。\n        IDトークンやアクセストークンの有効期限が切れた場合に使います。\n\n        リフレッシュトークンの有効期限が切れた場合は本 API では再発行できません。代わりに、[login API](#operation/login) を実行します。\n      security:\n      - EveryoneRequestBody: []\n      operationId: refreshToken\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/RefreshTokenRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Token\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorRefreshTokenExpired\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /plugin-token:\n    post:\n      tags:\n        - af-login\n      summary: プラグイン用トークン発行\n      description: |\n        プラグイン用のトークンを発行します。\n        ここで発行されるアクセストークンは、プラグインの種別に応じた範囲のAPIアクセスに使用することができます。\n\n        現時点ではカスタムアノテーションエディタ用のプラグインのみに対応しています。\n\n        #### authorization_code を使う場合 (PluginTokenRequestAuthorizationCode)\n        1. プラグイン: PKCE (RFC 7636) の code_challenge_method=S256 の場合に準ずる形で `code_verifier` `code_challenge`  を生成\n        1. プラグイン: `https://annofab.com/project/{project_id}/authorize-plugin?plugin_type={plugin_type}\u0026code_challenge={code_challenge}` へリダイレクト\n          - `plugin_type` はカスタムアノテーションエディタの場合は `AnnotationEditor` を、カスタムアノテーション仕様の場合は `AnnotationSpecs` を指定\n        1. AnnoFab: リクエストやユーザー権限の確認後、プラグインの auth_redirect_url に設定されたURLへクエリパラメータ `code` つきでリダイレクト\n        1. プラグイン: 本APIに上記 code および1で生成した code_verifier を渡し、access_token と refresh_token を得る\n\n        code付きでカスタムエディタにリダイレクトする際のURLは、タスク一覧等からのリダイレクトに使うURLとは別に設定し、projectIdやtaskIdは含まれません。\n        AnnoFabへリダイレクトする前に `location.href` などを保存しておき、トークン取得後にURL書き換えやリダイレクトを行うことを推奨します。\n\n        この手順で取得したaccess_tokenを使って他のAPIをリクエストする際には `Authorization: Bearer \u003caccess_token\u003e` としてBearer付きでアクセスしてください。\n\n        #### refresh_token を使う場合 (PluginTokenRequestRefreshToken)\n        1. プラグイン: 前回のトークン発行時に access_token と共に発行される refresh_token を記憶しておく\n        1. プラグイン: 本APIに上記 refresh_token を渡し、 access_token と refresh_token を得る\n      security:\n        - EveryoneRequestBody: []\n      operationId: requestPluginToken\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/PluginTokenRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/PluginTokenResponse\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /sign-up:\n    post:\n      tags:\n      - af-account\n      summary: サインアップstep1（仮登録）\n      description: |\n        アカウントのサインアップの最初のステップとして、アカウントを仮登録します。\n\n        AnnoFab に未登録のメールアドレスであれば、新規アカウントが仮登録状態で作成され、本登録フローのためのメールが送信されます。\n        このメールには仮パスワードなどが記載されています。\n\n        指定したメールアドレスを使うユーザーが仮登録であれば、本登録フローのメールが再送信されます。\n        指定したメールアドレスを使うユーザーが本登録であれば、不正なリクエストとしてエラーを返します（本登録が仮登録に戻ることはありません）。\n      operationId: initiateSignup\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/SignUpRequest\"\n      responses:\n        \"200\":\n          $ref: \"swagger-api-components.yaml#/components/responses/SuccessMessage\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n  /confirm-sign-up:\n    post:\n      tags:\n      - af-account\n      summary: サインアップstep2（本登録）\n      description: |\n        アカウントのサインアップの最後のステップとして、アカウントを本登録します。\n      operationId: confirmSignup\n      security:\n      - EveryoneRequestBody: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/ConfirmSignUpRequest\"\n      responses:\n        \"200\":\n          $ref: \"swagger-api-components.yaml#/components/responses/SuccessMessage\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /change-password:\n    post:\n      tags:\n      - af-account\n      summary: パスワード変更\n      description: |\n        パスワードの変更を試みます。\n\n        パスワードの要件を満たさない場合、エラーメッセージが返ります。\n      security:\n      - Everyone: []\n      operationId: changePassword\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/ChangePasswordRequest\"\n      responses:\n        \"200\":\n          $ref: \"swagger-api-components.yaml#/components/responses/SuccessMessage\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /request-password-reset:\n    post:\n      tags:\n      - af-account\n      summary: パスワードリセットstep1（開始）\n      description: |\n        パスワードリセットに必要な確認コードをメールで送付します。\n        後続の[新しいパスワードに変更](#operation/confirmResetPassword)を実行することで、新しいパスワードに変更できます。\n      security:\n      - EveryoneRequestBody: []\n      operationId: initiatePasswordReset\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/PasswordResetRequest\"\n      responses:\n        \"200\":\n          $ref: \"swagger-api-components.yaml#/components/responses/SuccessMessage\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /confirm-reset-password:\n    post:\n      tags:\n      - af-account\n      summary: パスワードリセットstep2（新しいパスワードに変更）\n      description: |\n        新しいパスワードに変更します。\n        本人確認のため、[パスワードリセットを要求](#operation/initiateResetPassword)で受信したメールに記載された検証コードを使用します。\n\n        パスワードリセットプロセスの最終ステップです。\n      security:\n      - EveryoneRequestBody: []\n      operationId: confirmResetPassword\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/ConfirmResetPasswordRequest\"\n      responses:\n        \"200\":\n          $ref: \"swagger-api-components.yaml#/components/responses/SuccessMessage\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /reset-email:\n    post:\n      tags:\n      - af-account\n      summary: メールアドレスリセットstep1（開始）\n      description: |\n        メールアドレス変更プロセスを開始します。\n\n        本人からの要求かどうかを検証するための確認コードがメールで送付されます。\n      security:\n      - Everyone: []\n      operationId: initiateResetEmail\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/ResetEmailRequest\"\n      responses:\n        \"200\":\n          $ref: \"swagger-api-components.yaml#/components/responses/SuccessMessage\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"409\":\n          description: 外部アカウントでログインしているユーザーのメールアドレスを変更しようとした\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /confirm-reset-email:\n    post:\n      tags:\n      - af-account\n      summary: メールアドレスstep2（確定）\n      description: |\n        [受け取った確認コード](#operation/initiateResetEmail)を使い、メールアドレスを変更します。\n      security:\n      - EveryoneRequestBody: []\n      operationId: confirmResetEmail\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/ConfirmResetEmailRequest\"\n      responses:\n        \"200\":\n          $ref: \"swagger-api-components.yaml#/components/responses/SuccessMessage\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /verify-email:\n    post:\n      tags:\n      - af-account\n      summary: メールアドレス検証step1（開始）\n      description: |\n        メールアドレスが有効かどうかの確認プロセスを開始します。\n\n        本人からの要求かどうかを検証するための確認コードがメールで送付されます。\n      security:\n      - Everyone: []\n      operationId: initiateVerifyEmail\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/VerifyEmailRequest\"\n      responses:\n        \"200\":\n          $ref: \"swagger-api-components.yaml#/components/responses/SuccessMessage\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /confirm-verify-email:\n    post:\n      tags:\n      - af-account\n      summary: メールアドレス検証step2（確定）\n      description: |\n        [受け取った確認コード](#operation/initiateVerifyEmail)を使い、メールアドレスが有効であることを確認します。\n      security:\n      - Everyone: []\n      operationId: confirmVerifyEmail\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/ConfirmVerifyEmailRequest\"\n      responses:\n        \"200\":\n          $ref: \"swagger-api-components.yaml#/components/responses/SuccessMessage\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /my/account:\n    get:\n      tags:\n      - af-my\n      summary: 自分のアカウント取得\n      description: |\n        API リクエストユーザーのアカウント情報を取得します。\n      security:\n      - Everyone: []\n      operationId: getMyAccount\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/MyAccount\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    put:\n      tags:\n      - af-my\n      summary: 自分のアカウント情報更新\n      description: |\n        API リクエストユーザーのアカウント情報を更新します。\n      security:\n      - Everyone: []\n      operationId: putMyAccount\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/PutMyAccountRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/MyAccount\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /my/account/delete-request:\n    post:\n      tags:\n      - af-my\n      summary: アカウント削除step1（確認）\n      description: |\n        アカウント削除プロセスを開始します。\n\n        本人からの要求かどうかを検証するための確認コードがメールで送付されます。\n      security:\n      - Everyone: []\n      operationId: initiateMyAccountDelete\n      responses:\n        \"200\":\n          $ref: \"swagger-api-components.yaml#/components/responses/SuccessMessage\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /my/account/delete-request/confirm:\n    post:\n      tags:\n      - af-my\n      summary: アカウント削除step2（確定）\n      description: |\n        [受け取った確認コード](#operation/initiateMyAccountDelete)を使い、アカウントを削除します。\n      security:\n      - EveryoneRequestBody: []\n      operationId: confirmMyAccountDelete\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/ConfirmAccountDeleteRequest\"\n      responses:\n        \"200\":\n          $ref: \"swagger-api-components.yaml#/components/responses/SuccessMessage\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"409\":\n          description: 自身のみがオーナーのプロジェクト、または組織が1つ以上存在した\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /my/project-members:\n    get:\n      tags:\n      - af-my\n      summary: 自分のプロジェクトメンバー情報一括取得\n      description: |\n        API リクエストユーザーが所属するすべてのプロジェクトにおける、自身がどのようなメンバー設定で所属しているかをまとめて取得します。\n      security:\n      - Everyone: []\n      operationId: getMyProjectMembers\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/ProjectMember\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n  /organizations:\n    post:\n      tags:\n        - af-organization\n      summary: 組織新規作成\n      description: |\n        同じ name の組織が既に存在する場合は失敗（400）します。\n      security:\n        - Everyone: []\n      operationId: createNewOrganization\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationRegistrationRequest\"\n      responses:\n        \"200\":\n          description: 作成に成功すると、その組織\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Organization\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /my/organizations:\n    get:\n      tags:\n      - af-my\n      summary: 所属組織一括取得\n      description: |\n        API リクエストユーザーが所属するすべての組織における、自身がどのようなメンバー設定で所属しているかをまとめて取得します。\n      security:\n      - AllOrganizationMember: []\n      operationId: getMyOrganizations\n      parameters:\n      - name: page\n        in: query\n        description: |\n          表示するページ番号\n\n          現在は未実装のパラメータです。(今後対応予定)\n        required: false\n        schema:\n          type: integer\n          minimum: 1\n          default: 1\n      - name: limit\n        in: query\n        description: |\n          1ページあたりの取得するデータ件数\n\n          現在は未実装のパラメータです。(今後対応予定)\n        required: false\n        schema:\n          type: integer\n          minimum: 1\n          default: 30\n          maximum: 200\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/MyOrganizationList\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    put:\n      deprecated: true\n      tags:\n      - af-my\n      summary: 組織名変更\n      description: |\n        同じ name の組織が既に存在する場合は失敗(400)します。\n      security:\n      - OrganizationOwner: []\n      operationId: updateOrganization\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/UpdateOrganizationNameRequest\"\n      responses:\n        \"200\":\n          description: 変更に成功すると、その組織\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Organization\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"409\":\n          description: 先に更新されているため失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorAlreadyUpdated\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}:\n    get:\n      tags:\n      - af-organization\n      summary: 組織情報取得\n      description: |\n        指定組織の組織IDなどの情報を取得します。\n      security:\n      - AllOrganizationMember: []\n      operationId: getOrganization\n      parameters:\n      - name: organization_name\n        in: path\n        description: 組織名\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Organization\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    put:\n      tags:\n        - af-organization\n      summary: 組織情報更新\n      description: |\n        同じ name の組織が既に存在する場合は失敗(400)します。\n      security:\n        - OrganizationOwner: []\n      operationId: putOrganization\n      parameters:\n      - name: organization_name\n        in: path\n        description: |\n            組織名。組織名を変更する場合は現在の組織名と異なる値を指定します。\n            同じ名前の組織が既に存在する場合は失敗(400)します。\n        required: true\n        schema:\n          type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/PutOrganizationRequest\"\n      responses:\n        \"200\":\n          description: 変更に成功すると、その組織\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Organization\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"409\":\n          description: 先に更新されているため失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorAlreadyUpdated\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    delete:\n      tags:\n        - af-organization\n      summary: 組織削除\n      description: |\n        組織を完全に削除します。\n\n        組織のプロジェクトが1件も存在しない場合のみ削除できます。\n        組織を削除したい場合は全てのプロジェクトを削除してください。\n        また、削除された組織は元に戻せませんのでご注意ください。\n      security:\n        - OrganizationOwner: []\n      operationId: deleteOrganization\n      parameters:\n        - name: organization_name\n          in: path\n          description: 組織名\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Organization\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"409\":\n          description: プロジェクトが存在する組織を削除しようとした\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}/projects:\n    get:\n      tags:\n      - af-organization\n      summary: 組織配下プロジェクト一括取得\n      description: |\n        指定した組織のプロジェクトを一括で取得します。\n      security:\n      - AllOrganizationMember: []\n      operationId: getProjectsOfOrganization\n      parameters:\n      - name: organization_name\n        in: path\n        description: 組織名\n        required: true\n        schema:\n          type: string\n      - name: page\n        in: query\n        description: |\n          表示するページ番号\n        required: false\n        schema:\n          type: integer\n          minimum: 1\n          default: 1\n      - name: limit\n        in: query\n        description: |\n          1ページあたりの取得するデータ件数\n        required: false\n        schema:\n          type: integer\n          minimum: 1\n          default: 30\n          maximum: 200\n      - name: account_id\n        in: query\n        description: |\n          指定したアカウントIDをメンバーに持つプロジェクトで絞り込む。\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/AccountId\"\n      - name: except_account_id\n        in: query\n        description: |\n          指定したアカウントIDをメンバーに持たないプロジェクトで絞り込む。\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/AccountId\"\n      - name: title\n        in: query\n        description: |\n          プロジェクトタイトルでの部分一致検索。1文字以上あれば使用します。利便性のため、大文字小文字は区別しません。\n        required: false\n        schema:\n          type: string\n      - name: status\n        in: query\n        description: |\n          指定した状態のプロジェクトで絞り込む。未指定時は全プロジェクト。\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectStatus\"\n      - name: plugin_id\n        in: query\n        description: |\n          指定したプラグインIDを使用しているプロジェクトで絞り込む。未指定時は指定なし。\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/PluginId\"\n      - name: input_data_type\n        in: query\n        description: |\n          指定した入力データ種別でプロジェクトを絞り込む。未指定時は全プロジェクト。\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/InputDataType\"\n      - name: sort_by\n        in: query\n        description: |\n          `date` を指定することでプロジェクトの最新のタスク更新時間の順にソートして出力する。\n          未指定時はプロジェクト名でソートする。\n        required: false\n        schema:\n          type: string\n          example: date\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ProjectList\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}/members:\n    get:\n      tags:\n      - af-organization-member\n      summary: 組織メンバー一括取得\n      description: |\n        脱退したメンバーは含まれません。\n      security:\n      - AllOrganizationMember: []\n      operationId: getOrganizationMembers\n      parameters:\n      - name: organization_name\n        in: path\n        description: 組織名\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationMemberList\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}/members/{user_id}:\n    get:\n      tags:\n      - af-organization-member\n      summary: 組織メンバー取得\n      description: |\n        指定したユーザーが指定した組織にどのようなロールで参加しているかを取得します。\n      security:\n      - AllOrganizationMember: []\n      operationId: getOrganizationMember\n      parameters:\n      - name: organization_name\n        in: path\n        description: 組織名\n        required: true\n        schema:\n          type: string\n      - name: user_id\n        in: path\n        description: ユーザID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/UserId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationMember\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    delete:\n      tags:\n      - af-organization-member\n      summary: 組織メンバー削除\n      description: |\n        指定したメンバーを指定した組織から削除します。\n\n        組織の管理者が実行する場合、組織のオーナーは削除できません。(権限エラーになります)\n      security:\n      - OrganizationAdministrator: []\n      operationId: deleteOrganizationMember\n      parameters:\n      - name: organization_name\n        in: path\n        description: 組織名\n        required: true\n        schema:\n          type: string\n      - name: user_id\n        in: path\n        description: ユーザID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/UserId\"\n      responses:\n        \"200\":\n          description: 正常。削除したメンバーを返します\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationMember\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}/members/{user_id}/role:\n    put:\n      tags:\n      - af-organization-member\n      summary: 組織メンバーのロール更新\n      description: |\n        指定された組織メンバーのロールのみを変更します。\n      security:\n      - OrganizationOwner: []\n      operationId: updateOrganizationMemberRole\n      parameters:\n      - name: organization_name\n        in: path\n        description: 組織名\n        required: true\n        schema:\n          type: string\n      - name: user_id\n        in: path\n        description: ユーザID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/UserId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/PutOrganizationMemberRoleRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationMember\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}/members/{user_id}/invitation:\n    post:\n      tags:\n      - af-organization-member\n      summary: 組織への招待送信\n      description: |\n        指定したユーザーに、組織への招待（メール）を送信します。\n\n        組織の管理者が実行する場合、リクエストボディ内の `role` には `contributor` を指定してください。(それ以外の値を指定した場合エラーとなります)\n      security:\n      - OrganizationAdministrator: []\n      operationId: inviteOrganizationMember\n      parameters:\n      - name: organization_name\n        in: path\n        description: 組織名\n        required: true\n        schema:\n          type: string\n      - name: user_id\n        in: path\n        description: ユーザ名\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/UserId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/InviteOrganizationMemberRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationMember\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}/members/{user_id}/invitation/accept:\n    post:\n      tags:\n      - af-organization-member\n      summary: 組織への招待受諾\n      description: |\n        組織への招待を受諾し、組織へのメンバー登録を完了します。\n\n        [組織招待API](#operation/postInviteOrganizationMember)で送信されたメールに記載されているトークンが必要です。\n      security:\n      - EveryoneRequestBody: []\n      operationId: acceptOrganizationInvitation\n      parameters:\n      - name: organization_name\n        in: path\n        description: 組織名\n        required: true\n        schema:\n          type: string\n      - name: user_id\n        in: path\n        description: ユーザ名\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/UserId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/AcceptOrganizationInvitationRequest\"\n      responses:\n        \"200\":\n          $ref: \"swagger-api-components.yaml#/components/responses/SuccessMessage\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}/activity:\n    get:\n      tags:\n      - af-organization\n      summary: 組織活動サマリー取得\n      description: |\n        組織全体でどれだけ AnnoFab ストレージを使用しているかなどの活動の要約を取得します。\n      security:\n      - AllOrganizationMember: []\n      operationId: getOrganizationActivity\n      parameters:\n      - name: organization_name\n        in: path\n        description: 組織名\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationActivity\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}/plugins:\n    get:\n      operationId: getOrganizationPlugins\n      summary: プラグイン一括取得\n      description: |\n        **この API は AnnoFab に許可された組織だけで使用できます。またアルファ版につき、予告なく変更されることがあります。**\n\n        指定した組織のプラグインを一括で取得します。\n      tags:\n        - af-organization-plugin\n      security:\n        - AllOrganizationMember: []\n      parameters:\n        - name: organization_name\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationName\"\n          description: 組織名\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationPluginList\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}/plugins/{plugin_id}:\n    get:\n      operationId: getOrganizationPlugin\n      summary: プラグイン取得\n      description: |\n        **この API は AnnoFab に許可された組織だけで使用できます。またアルファ版につき、予告なく変更されることがあります。**\n\n        指定した組織のプラグインを取得します。\n      tags:\n        - af-organization-plugin\n      security:\n        - AllOrganizationMember: []\n      parameters:\n        - name: organization_name\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationName\"\n          description: 組織名\n        - name: plugin_id\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/PluginId\"\n          description: プラグインID\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationPlugin\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    put:\n      operationId: putOrganizationPlugin\n      summary: プラグイン更新\n      description: |\n        **この API は AnnoFab に許可された組織だけで使用できます。またアルファ版につき、予告なく変更されることがあります。**\n\n        指定した組織のプラグインを更新します。\n      tags:\n        - af-organization-plugin\n      security:\n        - OrganizationAdministrator: []\n        - OrganizationOwner: []\n      parameters:\n        - name: organization_name\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationName\"\n          description: 組織名\n        - name: plugin_id\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/PluginId\"\n          description: プラグインID\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/PutOrganizationPluginRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationPlugin\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    delete:\n      operationId: deleteOrganizationPlugin\n      summary: プラグイン削除\n      description: |\n        **この API は AnnoFab に許可された組織だけで使用できます。またアルファ版につき、予告なく変更されることがあります。**\n\n        指定した組織のプラグインを削除します。\n      tags:\n        - af-organization-plugin\n      security:\n        - OrganizationAdministrator: []\n        - OrganizationOwner: []\n      parameters:\n        - name: organization_name\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationName\"\n          description: 組織名\n        - name: plugin_id\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/PluginId\"\n          description: プラグインID\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationPlugin\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}/input_data_set:\n    get:\n      operationId: getInputDataSetList\n      summary: 入力データセット一括取得\n      description: |\n        指定した組織の[入力データセット](#tag/af-organization-input)を一括で取得します。\n      tags:\n        - af-organization-input\n      security:\n        - OrganizationAdministrator: []\n        - OrganizationOwner: []\n      parameters:\n        - name: organization_name\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationName\"\n          description: 組織名\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/InputDataSetList\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}/input_data_set/{input_data_set_id}:\n    get:\n      operationId: getInputDataSet\n      summary: 入力データセット情報取得\n      description: |\n        指定した組織の[入力データセット](#tag/af-organization-input)の情報を取得します。\n        組織オーナーまたは組織管理者でない場合は自身が所属するプロジェクトの入力データセットのみが取得できます。\n      tags:\n        - af-organization-input\n      security:\n        - AllOrganizationMember: []\n      parameters:\n        - name: organization_name\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationName\"\n          description: 組織名\n        - name: input_data_set_id\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/InputDataSetId\"\n          description: 入力データセットID\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/InputDataSet\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    put:\n      operationId: putInputDataSet\n      summary: 入力データセット新規作成/更新\n      description: |\n        指定した組織の[入力データセット](#tag/af-organization-input)の情報を新規登録/更新します。\n      tags:\n        - af-organization-input\n      security:\n        - OrganizationAdministrator: []\n        - OrganizationOwner: []\n      parameters:\n        - name: organization_name\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationName\"\n          description: 組織名\n        - name: input_data_set_id\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/InputDataSetId\"\n          description: 入力データセットID\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/PutInputDataSetRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/InputDataSet\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}/input_data_set/{input_data_set_id}/inputs:\n    get:\n      tags:\n        - af-organization-input\n      summary: 入力データセット内の入力データ一括取得\n      description: |\n        指定された入力データセットの入力データを検索します。\n        組織オーナーまたは組織管理者でない場合は自身が所属するプロジェクトの入力データセット内の入力データのみが取得できます。\n\n        パフォーマンスのため、結果はページング形式で返ります。全件取得したい場合は、レスポンスを見て、ページ移動してください。\n      security:\n        - AllOrganizationMember: []\n      operationId: getOrganizationInputDataList\n      parameters:\n        - name: organization_name\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationName\"\n          description: 組織名\n        - name: input_data_set_id\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/InputDataSetId\"\n          description: 入力データセットID\n        - name: input_data_id\n          in: query\n          description: 入力データIDでの部分一致検索で使用。1文字以上あれば使用します。\n          required: false\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n        - name: input_data_name\n          in: query\n          description: 入力データ名での部分一致検索で使用。1文字以上あれば使用します。\n          required: false\n          schema:\n            type: string\n        - name: input_data_path\n          in: query\n          description: 入力データパスでの部分一致検索で使用。1文字以上あれば使用します。\n          required: false\n          schema:\n            type: string\n        - name: task_id\n          in: query\n          description: 入力データが紐づくタスクIDの部分一致検索で使用。1文字以上あれば使用します。条件に合致した先頭100件のタスクに使われている入力データを検索します。\n          required: false\n          schema:\n            type: string\n        - name: from\n          in: query\n          description: 更新日時での範囲検索で使用（ISO 8601 拡張形式）\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - name: to\n          in: query\n          description: 更新日時での範囲検索で使用（ISO 8601 拡張形式）\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - name: page\n          in: query\n          description: 検索結果のうち、取得したいページの番号(1始まり）\n          required: false\n          schema:\n            type: integer\n            minimum: 1\n            default: 1\n        - name: limit\n          in: query\n          description: 1ページあたりの取得するデータ件数\n          required: false\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 200\n            default: 30\n      responses:\n        \"200\":\n          description: 指定された条件にあてはまる入力データを返します。条件にあてはまる入力データが多数に及ぶことがあるので、すべての結果を得るにはページングしてください。\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/InputDataList\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}/input_data_set/{input_data_set_id}/inputs/{input_data_id}:\n    get:\n      tags:\n        - af-organization-input\n      summary: 入力データセットの入力データ取得\n      description: |\n        指定した組織の[入力データセット](#tag/af-organization-input)内で指定した入力データ情報を取得します。\n        組織オーナーまたは組織管理者でない場合は自身が所属するプロジェクトの入力データセット内の入力データのみが取得できます。\n      security:\n        - AllOrganizationMember: []\n      operationId: getOrganizationInputData\n      parameters:\n        - name: organization_name\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationName\"\n          description: 組織名\n        - name: input_data_set_id\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/InputDataSetId\"\n          description: 入力データセットID\n        - name: input_data_id\n          in: path\n          description: 入力データID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/InputData\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    delete:\n      tags:\n        - af-organization-input\n      summary: 入力データセットの入力データ削除\n      description: |\n        指定した組織の[入力データセット](#tag/af-organization-input)内で指定した入力データ情報を削除します。\n      security:\n        - OrganizationAdministrator: []\n        - ProjectOwner: []\n      operationId: deleteOrganizationInputData\n      parameters:\n        - name: organization_name\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationName\"\n          description: 組織名\n        - name: input_data_set_id\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/InputDataSetId\"\n          description: 入力データセットID\n        - name: input_data_id\n          in: path\n          description: 入力データID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/InputData\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /my/projects:\n    get:\n      tags:\n      - af-my\n      summary: 所属プロジェクト一括取得\n      description: |\n        自身が所属するプロジェクトを一括で取得します。\n      security:\n      - Everyone: []\n      operationId: getMyProjects\n      parameters:\n      - name: page\n        in: query\n        description: |\n          表示するページ番号\n        required: false\n        schema:\n          type: integer\n          minimum: 1\n          default: 1\n      - name: limit\n        in: query\n        description: |\n          1ページあたりの取得するデータ件数\n        required: false\n        schema:\n          type: integer\n          minimum: 0\n          default: 30\n          maximum: 200\n      - name: organization_id\n        in: query\n        description: |\n          指定した組織に属するプロジェクトに絞り込む。未指定時は全プロジェクト。\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationId\"\n      - name: title\n        in: query\n        description: |\n          プロジェクトタイトルでの部分一致検索。1文字以上あれば使用します。利便性のため、大文字小文字は区別しません。\n        required: false\n        schema:\n          type: string\n      - name: status\n        in: query\n        description: |\n          指定した状態のプロジェクトで絞り込む。未指定時は全プロジェクト。\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectStatus\"\n      - name: input_data_type\n        in: query\n        description: |\n          指定した入力データ種別でプロジェクトを絞り込む。未指定時は全プロジェクト\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/InputDataType\"\n      - name: sort_by\n        in: query\n        description: |\n          `date` を指定することでプロジェクトの最新のタスク更新時間の順にソートして出力する。\n          未指定時はプロジェクト名でソートする。\n        required: false\n        schema:\n          type: string\n          example: date\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ProjectContainer\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}:\n    get:\n      tags:\n      - af-project\n      summary: プロジェクト取得\n      description: |\n        プロジェクトを取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getProject\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Project\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    put:\n      tags:\n      - af-project\n      summary: プロジェクト作成/更新\n      description: |\n        プロジェクトを新規作成または更新します。\n\n        ### 新規作成する場合\n        ユーザーは、作成するプロジェクトをひもづける組織の [OrganizationAdministrator](#section/Authentication/OrganizationAdministrator) である必要があります。\n\n        ### 更新する場合\n        ユーザーは、更新するプロジェクトの [ProjectOwner](#section/Authentication/ProjectOwner) である必要があります。\n        また所属組織を変更する場合は、新しくひもづける組織の [OrganizationAdministrator](#section/Authentication/OrganizationAdministrator) である必要があります。\n\n        なお、プロジェクト状態を「停止中」にした場合、アノテーションZIPやタスク進捗状況などの集計情報は自動更新されなくなります。\n        所属組織が変更された場合バックグラウンドジョブが登録されます。ジョブは [getProjectJob](#operation/getProjectJob) APIで確認できます（ジョブ種別は`move-project`）。\n\n        制限事項として、このAPIでプロジェクト状態を「初期化中」へ変更することはできません。\n        また、プロジェクト状態が「初期化中」の場合は、所属組織変更をおこなうことはできません。\n      security:\n      - OrganizationAdministrator: []\n        ProjectOwner: []\n      operationId: putProject\n      parameters:\n      - name: project_id\n        in: path\n        description: |\n          プロジェクトID。[値の制約についてはこちら。](#section/API-Convention/APIID)\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: v\n        in: query\n        description: |\n          APIの戻り型のバージョンを指定します。\n          値と戻り型の対応は以下です。\n          - \"1\"：Project\n          - \"2\"：PutProjectResponse\n        required: false\n        schema:\n          type: string\n          default: \"1\"\n          example: \"2\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/PutProjectRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Project\"\n        \"202\":\n          description: 組織変更実施時\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/PutProjectResponse\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"409\":\n          description: 現在のプロジェクトやタスクの状態ではできない操作をしようとした、またはジョブの同時実行制限による失敗（所属組織を変更した場合）\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    delete:\n      tags:\n      - af-project\n      summary: プロジェクト削除\n      description: |\n        プロジェクトを完全に削除します。\n        アノテーション仕様、タスク、入力データ、アノテーションなど、プロジェクト配下のリソースがすべて削除されます。\n\n        削除されたプロジェクトは元に戻せません。\n        完了したプロジェクトは削除せず、プロジェクト状態を「停止中」に変更するのをおすすめします。\n\n        本APIを実行すると、バックグラウンドジョブが登録されます。ジョブは [getProjectJob](#operation/getProjectJob) APIで確認できます（ジョブ種別は`delete-project`）。\n\n      security:\n      - ProjectOwner: []\n      operationId: deleteProject\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"202\":\n          description: バッチにてプロジェクトの削除開始\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/DeleteProjectResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"409\":\n          description: 停止中ではないプロジェクトを削除しようとした、またはジョブの同時実行制限による失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/organization:\n    get:\n      tags:\n      - af-project\n      summary: プロジェクトの所属組織取得\n      description: |\n        指定されたプロジェクトがひもづく組織を取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getOrganizationOfProject\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Organization\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/copy:\n    post:\n      tags:\n      - af-project\n      summary: プロジェクト複製\n      description: |\n        指定したプロジェクトのデータを引き継いだ新しいプロジェクトを作成します。\n        新しいプロジェクトに引き継がれるデータは次の通りです。\n\n        * プロジェクト設定\n        * プロジェクトメンバー\n        * アノテーション仕様\n\n        また、オプションを指定することで新しいプロジェクトに次のデータを引き継ぐことも可能です。\n\n        |引き継ぎ対象|同時に引き継ぐ必要があるデータ|\n        |:--|:--|\n        |入力データ||\n        |タスク|入力データ|\n        |アノテーション|入力データ、タスク|\n        |補助情報|入力データ|\n        |作業ガイド||\n        |Webhook||\n\n        このAPIを利用するには、プロジェクトを登録する組織の[OrganizationAdministrator](#section/Authentication/OrganizationAdministrator) かつ コピー元プロジェクトの [ProjectOwner](#section/Authentication/ProjectOwner) である必要があります。\n\n        本APIを実行すると、バックグラウンドジョブが登録されます。ジョブは [getProjectJob](#operation/getProjectJob) APIで確認できます（ジョブ種別は`copy-project`）。\n      security:\n      - OrganizationAdministrator: []\n        ProjectOwner: []\n      operationId: initiateProjectCopy\n      parameters:\n      - name: project_id\n        in: path\n        description: コピー元となるプロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/ProjectCopyRequest\"\n      responses:\n        \"202\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ProjectCopyResponse\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"409\":\n          description: ジョブの同時実行制限による失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/rawdata/inputs:\n    get:\n      tags:\n        - af-project\n      summary: プロジェクトの入力データ情報全件URLの取得\n      description: |\n        入力データ情報全件ファイルにアクセスするための、認証済み一時URLを取得します。\n        取得したURLは1時間で失効し、アクセスできなくなります。\n\n        ### 入力データ情報全件ファイル\n        入力データ情報全件ファイルには、プロジェクトの入力データ情報がJSON形式（[InputData](#section/InputData)の配列）で記録されています。\n        ただし`InputData`中の`url`は常に`null`です。\n        このファイルは毎日AM 02:00 JSTに更新されます。\n      security:\n        - ProjectDataUser: []\n      operationId: getProjectInputsUrl\n      parameters:\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"201\":\n          $ref: \"swagger-api-components.yaml#/components/responses/FileRedirectResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    post:\n      tags:\n        - af-project\n      summary: プロジェクトの入力データ情報全件ファイル更新開始\n      description: |\n        プロジェクト内の入力データ情報全件ファイルの更新を開始します。\n        ファイルの更新時間は、データ量に応じて数分～数十分程度かかります。\n        本APIを実行すると、バックグラウンドジョブが登録されます。ジョブは [getProjectJob](#operation/getProjectJob) APIで確認できます（ジョブ種別は`gen-inputs-list`）。\n\n        入力データ情報全件ファイルは毎日AM 02:00 JSTに自動更新されます。\n        本APIを用いると、自動更新を待たずに更新を要求できます。\n        ただし、入力データ情報全件ファイル以外は更新されません。\n\n        入力データ情報全件ファイルについては、[getProjectInputsUrl](#operation/getProjectInputsUrl) APIを参照ください。\n      security:\n        - ProjectDataUser: []\n      operationId: postProjectInputsUpdate\n      parameters:\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"202\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ProjectInputsUpdateResponse\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"409\":\n          description: ジョブの同時実行制限による失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/rawdata/tasks:\n    get:\n      tags:\n      - af-project\n      summary: プロジェクトのタスク全件URLの取得\n      description: |\n        タスク全件ファイルにアクセスするための、認証済み一時URLを取得します。\n        取得したURLは1時間で失効し、アクセスできなくなります。\n\n        ### タスク全件ファイル\n        タスク全件ファイルには、プロジェクトのタスク情報がJSON形式（[Task](#section/Task)の配列）で記録されています。\n        このファイルは毎日AM 02:00 JSTに更新されます。\n        また、[postProjectTasksUpdate](#operation/postProjectTasksUpdate) APIを利用することで、手動でタスク全件ファイルを更新することも可能です。\n      security:\n      - ProjectDataUser: []\n      operationId: getProjectTasksUrl\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"201\":\n          $ref: \"swagger-api-components.yaml#/components/responses/FileRedirectResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    post:\n      tags:\n      - af-project\n      summary: プロジェクトのタスク全件ファイル更新開始\n      description: |\n        プロジェクト内のタスク全件ファイルの更新を開始します。\n        ファイルの更新時間は、データ量に応じて数分～数十分程度かかります。\n        本APIを実行すると、バックグラウンドジョブが登録されます。ジョブは [getProjectJob](#operation/getProjectJob) APIで確認できます（ジョブ種別は`gen-tasks-list`）。\n\n        タスク全件ファイルは毎日AM 02:00 JSTに自動更新されます。\n        本APIを用いると、自動更新を待たずに更新を要求できます。\n        ただし、タスク全件ファイル以外は更新されません。\n\n        タスク全件ファイルについては、[getProjectTasksUrl](#operation/getProjectTasksUrl) APIを参照ください。\n      security:\n        - ProjectDataUser: []\n      operationId: postProjectTasksUpdate\n      parameters:\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"202\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/PostProjectTasksUpdateResponse\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"409\":\n          description: ジョブの同時実行制限による失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/rawdata/inspections:\n    get:\n      tags:\n      - af-project\n      summary: プロジェクトの検査コメント全件URLの取得\n      description: |\n        検査コメント全件ファイルにアクセスするための、認証済み一時URLを取得します。\n        取得したURLは1時間で失効し、アクセスできなくなります。\n\n        ### 検査コメント全件ファイル\n        検査コメント全件ファイルには、プロジェクトの検査コメント情報がJSON形式（[Inspection](#section/Inspection)の配列）で記録されています。\n        このファイルは毎日AM 02:00 JSTに更新されます。\n      security:\n      - ProjectDataUser: []\n      operationId: getProjectInspectionsUrl\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"201\":\n          $ref: \"swagger-api-components.yaml#/components/responses/FileRedirectResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/rawdata/task_history_events:\n    get:\n      deprecated: true\n      tags:\n      - af-project\n      summary: プロジェクトのタスク履歴イベント全件URLの取得\n      description: |\n        タスク履歴イベント全件ファイルにアクセスするための、認証済み一時URLを取得します。\n        取得したURLは1時間で失効し、アクセスできなくなります。\n\n        ### タスク履歴イベント全件ファイル\n        タスク履歴イベント全件ファイルには、プロジェクトのタスク履歴イベント情報がJSON形式（[TaskHistoryEvent](#section/TaskHistoryEvent)の配列）で記録されています。\n        このファイルは毎日AM 02:00 JSTに更新されます。\n      security:\n      - ProjectDataUser: []\n      operationId: getProjectTaskHistoryEventsUrl\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"201\":\n          $ref: \"swagger-api-components.yaml#/components/responses/FileRedirectResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/rawdata/task_histories:\n    get:\n      tags:\n        - af-project\n      summary: プロジェクトのタスク履歴全件URLの取得\n      description: |\n        タスク履歴全件ファイルにアクセスするための、認証済み一時URLを取得します。\n        取得したURLは1時間で失効し、アクセスできなくなります。\n\n        ### タスク履歴全件ファイル\n        タスク履歴イベント全件ファイルには、プロジェクトのタスク履歴情報がJSON形式（キーがタスクID、値が[TaskHistory](#section/TaskHistory)の配列となるマップ）で記録されています。\n        このファイルは毎日AM 02:00 JSTに更新されます。\n      security:\n        - ProjectDataUser: []\n      operationId: getProjectTaskHistoriesUrl\n      parameters:\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"201\":\n          $ref: \"swagger-api-components.yaml#/components/responses/FileRedirectResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /my/projects/{project_id}/member:\n    get:\n      tags:\n      - af-my\n      summary: 自分のプロジェクトメンバー取得\n      description: |\n        備考: システム管理者が自身が所属しないプロジェクトに対して実行した場合、オーナーであるというダミーのプロジェクトメンバー情報が取得できます。ダミーには更新日は含まれません。\n      security:\n      - AllProjectMember: []\n      operationId: getMyMemberInProject\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ProjectMember\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/members:\n    get:\n      tags:\n      - af-project-member\n      summary: プロジェクトメンバー一括取得\n      description: |\n        備考: 組織に加入していないメンバーも取得できることがあります（[プロジェクト更新](#operation/putProject)でプロジェクトの組織移動をおこなった場合）。\n      security:\n      - AllProjectMember: []\n      operationId: getProjectMembers\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: include_inactive_member\n        in: query\n        description: 脱退したプロジェクトメンバーも取得する時に、キーのみ指定します（値は無視されます）。\n        required: false\n        allowEmptyValue: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ProjectMemberList\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/members/{user_id}:\n    get:\n      tags:\n      - af-project-member\n      summary: プロジェクトメンバー取得\n      description: |\n        プロジェクトの特定のメンバーを取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getProjectMember\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: user_id\n        in: path\n        description: アカウントのユーザID. RESTクライアントユーザが指定しやすいように、Cognitoのaccount_idではなくuser_idとしている。\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/UserId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ProjectMember\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    put:\n      tags:\n      - af-project-member\n      summary: プロジェクトメンバー追加/更新\n      description: |\n        プロジェクトにメンバーを新規に追加、または存在するメンバーの設定を変更します。\n\n        メンバーとなるユーザーは、作成するプロジェクトをひもづける組織に加入している必要があります。\n      security:\n      - ProjectOwner: []\n      operationId: putProjectMember\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: user_id\n        in: path\n        description: アカウントのユーザID. RESTクライアントユーザが指定しやすいように、Cognitoのaccount_idではなくuser_idとしている。\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/UserId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/ProjectMemberRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ProjectMember\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/statistics/dates:\n    get:\n      tags:\n        - af-statistics\n      summary: プロジェクト統計記録期間取得\n      description: |\n        プロジェクトの統計情報が記録されている日付期間を取得します。\n\n        日付期間とは、from（日付）からto（日付）までの連続する日付を指します。fromとtoの日付は期間に含みます。\n\n        プロジェクトが一度も停止されていない場合、プロジェクト作成日から昨日までの日付期間が一つだけ返ります。\n\n        プロジェクトを停止した場合、プロジェクトの作成日から停止した日までの日付期間が一つだけ返ります。\n\n        プロジェクトを再開した場合、統計情報が記録されない（プロジェクトの停止）期間を除いた日付期間が複数返ります。以降、プロジェクトの停止と再開を繰り返すたびに結果の日付期間が増えていきます。\n      security:\n        - AllProjectMember: []\n      operationId: getStatisticsAvailableDates\n      parameters:\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ArrayOfDateRanges\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/statistics/tasks/daily:\n    get:\n      tags:\n      - af-statistics\n      summary: タスク集計取得\n      description: |\n        指定した期間の [タスク集計データ](#section/ArrayOfProjectTaskStatisticsHistory) を取得できるAPI。取得期間は最大3か月です。\n      security:\n      - AllProjectMember: []\n      operationId: getTaskDailyStatistics\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: from\n        in: query\n        description: 取得する統計の区間の開始日 - `YYYY-MM-DD`\n        required: true\n        schema:\n          type: string\n      - name: to\n        in: query\n        description: 取得する統計の区間の終了日 - `YYYY-MM-DD` 。この日は含まれます。\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ArrayOfProjectTaskStatisticsHistory\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/statistics/tasks:\n    get:\n      deprecated: true\n      tags:\n      - af-statistics\n      summary: タスク集計ファイルへのURL取得\n      description: |\n        [タスク集計データ](#section/ArrayOfProjectTaskStatisticsHistory) を取得するための認証済み一時URLを取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getTaskStatistics\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"201\":\n          $ref: \"swagger-api-components.yaml#/components/responses/FileRedirectResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/statistics/accounts:\n    get:\n      deprecated: true\n      tags:\n      - af-statistics\n      summary: ユーザー別タスク集計ファイルへのURL取得\n      description: |\n        [ユーザー別タスク集計データ](#section/ArrayOfProjectAccountStatistics) を取得するための認証済み一時URLを取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getAccountStatistics\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"201\":\n          $ref: \"swagger-api-components.yaml#/components/responses/FileRedirectResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/statistics/accounts/daily:\n    get:\n      tags:\n        - af-statistics\n      summary: ユーザー別タスク集計取得\n      description: |\n        指定した期間の [ユーザー別タスク集計データ](#section/ArrayOfProjectAccountStatistics) を取得できるAPI。取得期間は最大3か月です。\n      security:\n        - AllProjectMember: [ ]\n      operationId: getAccountDailyStatistics\n      parameters:\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n        - name: from\n          in: query\n          description: 取得する統計の区間の開始日 - `YYYY-MM-DD`\n          required: true\n          schema:\n            type: string\n        - name: to\n          in: query\n          description: 取得する統計の区間の終了日 - `YYYY-MM-DD` 。この日は含まれます。\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ArrayOfProjectAccountStatistics\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/statistics/inspections:\n    get:\n      deprecated: true\n      tags:\n      - af-statistics\n      summary: 検査コメント集計ファイルへのURL取得\n      description: |\n        [検査コメント集計データ](#section/ArrayOfInspectionStatistics) を取得するための認証済み一時URLを取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getInspectionStatistics\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"201\":\n          $ref: \"swagger-api-components.yaml#/components/responses/FileRedirectResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/statistics/inspections/daily:\n    get:\n      tags:\n      - af-statistics\n      summary: 検査コメント集計取得\n      description: |\n        指定した期間の [検査コメント集計データ](#section/ArrayOfInspectionStatistics) を取得できるAPI。取得期間は最大3か月です。\n      security:\n      - AllProjectMember: [ ]\n      operationId: getInspectionDailyStatistics\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: from\n        in: query\n        description: 取得する統計の区間の開始日 - `YYYY-MM-DD`\n        required: true\n        schema:\n          type: string\n      - name: to\n        in: query\n        description: 取得する統計の区間の終了日 - `YYYY-MM-DD` 。この日は含まれます。\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ArrayOfInspectionStatistics\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/statistics/task-phases:\n    get:\n      deprecated: true\n      tags:\n      - af-statistics\n      summary: フェーズ別タスク集計ファイルへのURL取得\n      description: |\n        [フェーズ別タスク集計データ](#section/ArrayOfTaskPhaseStatistics) を取得するための認証済み一時URLを取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getTaskPhaseStatistics\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"201\":\n          $ref: \"swagger-api-components.yaml#/components/responses/FileRedirectResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/statistics/task-phases/daily:\n    get:\n      tags:\n      - af-statistics\n      summary: フェーズ別タスク集計取得\n      description: |\n        指定した期間の [フェーズ別タスク集計データ](#section/ArrayOfTaskPhaseStatistics) を取得できるAPI。取得期間は最大3か月です。\n      security:\n      - AllProjectMember: [ ]\n      operationId: getPhaseDailyStatistics\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: from\n        in: query\n        description: 取得する統計の区間の開始日 - `YYYY-MM-DD`\n        required: true\n        schema:\n          type: string\n      - name: to\n        in: query\n        description: 取得する統計の区間の終了日 - `YYYY-MM-DD` 。この日は含まれます。\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ArrayOfTaskPhaseStatistics\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/statistics/labels:\n    get:\n      tags:\n      - af-statistics\n      summary: ラベル別アノテーション数集計取得\n      description: |\n        [ラベル別アノテーション数集計データ](#section/ArrayOfLabelStatistics) を取得するための認証済み一時URLを取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getLabelStatistics\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"201\":\n          $ref: \"swagger-api-components.yaml#/components/responses/FileRedirectResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/statistics/worktimes:\n    get:\n      deprecated: true\n      tags:\n      - af-statistics\n      summary: タスク作業時間集計ファイルへのURL取得\n      description: |\n        [タスク作業時間集計データ](#section/ArrayOfWorktimeStatistics) を取得するための認証済み一時URLを取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getWorktimeStatistics\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"201\":\n          $ref: \"swagger-api-components.yaml#/components/responses/FileRedirectResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/statistics/worktimes/daily:\n    get:\n      tags:\n        - af-statistics\n      summary: プロジェクト単位のフェーズ別タスク集計取得\n      description: |\n        指定したプロジェクトのタスク作業時間集計データを指定した期間分取得できるAPI。取得期間は最大3か月です。\n      security:\n        - AllProjectMember: [ ]\n      operationId: getWorktimeDailyStatistics\n      parameters:\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n        - name: from\n          in: query\n          description: 取得する統計の区間の開始日 - `YYYY-MM-DD`\n          required: true\n          schema:\n            type: string\n        - name: to\n          in: query\n          description: 取得する統計の区間の終了日 - `YYYY-MM-DD` 。この日は含まれます。\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/WorktimeStatisticsByProject\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/statistics/worktimes-by-account/{account_id}/daily:\n    get:\n      tags:\n        - af-statistics\n      summary: プロジェクトメンバー単位のフェーズ別タスク集計取得\n      description: |\n        指定したプロジェクトメンバーのタスク作業時間集計データを指定した期間分取得できるAPI。取得期間は最大3か月です。\n      security:\n        - AllProjectMember: [ ]\n      operationId: getWorktimeDailyStatisticsByAccount\n      parameters:\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n        - name: account_id\n          in: path\n          description: アカウントID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/AccountId\"\n        - name: from\n          in: query\n          description: 取得する統計の区間の開始日 - `YYYY-MM-DD`\n          required: true\n          schema:\n            type: string\n        - name: to\n          in: query\n          description: 取得する統計の区間の終了日 - `YYYY-MM-DD` 。この日は含まれます。\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/WorktimeStatisticsByAccount\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/statistics/markers:\n    get:\n      tags:\n      - af-statistics\n      summary: 統計グラフマーカー一括取得\n      description: |\n        指定されたプロジェクトの統計グラフマーカーをすべて取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getMarkers\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Markers\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    put:\n      tags:\n      - af-statistics\n      summary: 統計グラフマーカー更新\n      description: |\n        指定されたプロジェクトの統計グラフマーカーを更新します。\n      security:\n      - ProjectOwner: []\n      operationId: putMarkers\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/PutMarkersRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Markers\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}/jobs:\n    get:\n      tags:\n      - af-job\n      summary: 組織のバックグラウンドジョブ情報取得\n      description: |\n        組織のバックグラウンドジョブの情報を取得します。\n        取得されるジョブ情報は、作成日付の新しい順にソートされています。\n\n        バックグラウンドジョブ情報は、完了(失敗含む)から14日経過後に自動で削除されます。\n      security:\n      - AllOrganizationMember: []\n      operationId: getOrganizationJob\n      parameters:\n      - name: organization_name\n        in: path\n        description: 組織名\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationName\"\n      - name: type\n        in: query\n        description: 取得するジョブの種別。[詳細はこちら](#section/OrganizationJobType)。\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationJobType\"\n      - name: page\n        in: query\n        description: |\n          検索結果のうち、取得したいページの番号(1始まり)\n\n          現在は未実装のパラメータです。(今後対応予定)\n        required: false\n        schema:\n          type: integer\n          minimum: 1\n          default: 1\n      - name: limit\n        in: query\n        description: |\n          1ページあたりの取得するデータ件数。\n          未指定時は1件のみ取得。\n        required: false\n        schema:\n          type: integer\n          minimum: 0\n          maximum: 200\n          default: 1\n      - name: exclusive_start_created_datetime\n        in: query\n        description: 取得するデータの直前の作成日時（ISO 8601 拡張形式）\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationJobInfoContainer\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/jobs:\n    get:\n      tags:\n      - af-job\n      summary: プロジェクトのバックグラウンドジョブ情報取得\n      description: |\n        プロジェクトのバックグラウンドジョブの情報を取得します。\n        取得されるジョブ情報は、作成日付の新しい順にソートされています。\n\n        バックグラウンドジョブ情報は、完了(失敗含む)から14日経過後に自動で削除されます。\n      security:\n      - AllProjectMember: []\n      operationId: getProjectJob\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: type\n        in: query\n        description: 取得するジョブの種別。[詳細はこちら](#section/ProjectJobType)。\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectJobType\"\n      - name: page\n        in: query\n        description: |\n          検索結果のうち、取得したいページの番号(1始まり)\n\n          現在は未実装のパラメータです。(今後対応予定)\n        required: false\n        schema:\n          type: integer\n          minimum: 1\n          default: 1\n      - name: limit\n        in: query\n        description: |\n          1ページあたりの取得するデータ件数。\n          未指定時は1件のみ取得。\n        required: false\n        schema:\n          type: integer\n          minimum: 0\n          maximum: 200\n          default: 1\n      - name: exclusive_start_created_datetime\n        in: query\n        description: 取得するデータの直前の作成日時（ISO 8601 拡張形式）\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ProjectJobInfoContainer\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/jobs/{job_type}/{job_id}:\n    delete:\n      tags:\n      - af-job\n      summary: バックグラウンドジョブ情報削除\n      description: |\n        バックグラウンドジョブ情報を削除します。\n\n        なお、バックグラウンドジョブ情報は、完了(失敗含む)から14日経過後に自動で削除されます。\n      security:\n      - ProjectOwner: []\n      operationId: deleteProjectJob\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: job_type\n        in: path\n        description: ジョブの種別。[詳細はこちら](#section/ProjectJobType)。\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectJobType\"\n      - name: job_id\n        in: path\n        description: ジョブID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/JobId\"\n      responses:\n        \"200\":\n          description: 正常\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/webhooks:\n    get:\n      tags:\n      - af-webhook\n      summary: プロジェクト Webhook 一括取得\n      description: |\n        指定されたプロジェクトの Webhook をすべて取得します。\n      security:\n      - ProjectOwner: []\n      operationId: getWebhooks\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/Webhook\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/webhooks/{webhook_id}:\n    put:\n      tags:\n      - af-webhook\n      summary: プロジェクト Webhook 作成/更新\n      description: |\n        プロジェクトのWebhookを新規作成/更新します。\n\n        Webhook で送信される body には、event_type によって以下のプレースホルダーを使用できます。\n\n        * task-completed\n          * {{PROJECT_ID}} :  プロジェクトID\n          * {{TASK_ID}}\t: タスクID\n          * {{PROJECT_TITLE}}\t: プロジェクトタイトル\n          * {{COMPLETE_DATETIME}}\t: 完了日時\n            * 例 : 2019-05-08T10:00:00.000+09:00\n          * {{LAST_ACCOUNT}} : 最終作業者\n            * 形式 : アカウントID\n\n        * annotation-archive-updated\n          * {{PROJECT_ID}} :  プロジェクトID\n          * {{PROJECT_TITLE}}\t: プロジェクトタイトル\n          * {{COMPLETE_DATETIME}}\t: 完了日時\n            * 例 : 2019-05-08T10:00:00.000+09:00\n\n        * input-data-zip-registered\n          * {{PROJECT_ID}} :  プロジェクトID\n          * {{PROJECT_TITLE}}\t: プロジェクトタイトル\n          * {{COMPLETE_DATETIME}}\t: 完了日時\n            * 例 : 2019-05-08T10:00:00.000+09:00\n          * {{ZIP_NAME}} : ZIPファイル名\n            * 例 : input_data.zip\n\n        * project-copy-completed\n          * {{PROJECT_ID}} :  プロジェクトID\n          * {{DEST_PROJECT_ID}} :  コピー先プロジェクトID\n          * {{DEST_PROJECT_TITLE}}\t: コピー先プロジェクトタイトル\n          * {{COMPLETE_DATETIME}}\t: 完了日時\n            * 例 : 2019-05-08T10:00:00.000+09:00\n\n        Webhookが起動されると、ジョブ種別が`invoke-hook`のバックグラウンドジョブが登録されます。ジョブは [getProjectJob](#operation/getProjectJob) APIで確認できます。\n      security:\n      - ProjectOwner: []\n      operationId: putWebhook\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: webhook_id\n        in: path\n        description: |\n          WebhookID。[値の制約についてはこちら。](#section/API-Convention/APIID)\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/WebhookId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/Webhook\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Webhook\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    delete:\n      tags:\n      - af-webhook\n      summary: プロジェクト Webhook 削除\n      description: |\n        指定された Webhook を削除\n      security:\n      - ProjectOwner: []\n      operationId: deleteWebhook\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: webhook_id\n        in: path\n        description: WebhookID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/WebhookId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Webhook\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/webhooks/{webhook_id}/test:\n    post:\n      tags:\n        - af-webhook\n      summary: プロジェクト Webhook テスト実行\n      description: |\n        得録された登録された URL にテスト用の Webhook を実際に送信します。\n\n        送信される Webhook の body に含まれるプレースホルダーは、本 API リクエストで指定されたダミーのプレースホルダーで置き換えられます。\n      security:\n        - ProjectOwner: []\n      operationId: testWebhook\n      parameters:\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n        - name: webhook_id\n          in: path\n          description: WebhookID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/WebhookId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/WebhookTestRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/WebhookTestResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/annotation-specs:\n    get:\n      tags:\n      - af-annotation-specs\n      summary: アノテーション仕様取得\n      description: |\n        指定したプロジェクトのアノテーション仕様を取得します。\n\n        パラメータを指定することで、過去に保存された履歴を取得することもできます。\n      security:\n      - AllProjectMember: []\n      operationId: getAnnotationSpecs\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: history_id\n        in: query\n        description: |\n          過去のアノテーション仕様を取得する場合、[アノテーション仕様履歴取得](#operation/getAnnotationSpecsHistories)APIで取得した `history_id` の値を指定します。\n          未指定時は最新のアノテーション仕様を取得します。\n        required: false\n        schema:\n          type: string\n          example: \"123456789\"\n      - name: v\n        in: query\n        description: |\n          取得するアノテーション仕様のフォーマットバージョンを指定します。\n        required: false\n        schema:\n          type: string\n          default: \"1\"\n          example: \"2\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/AnnotationSpecs\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    put:\n      tags:\n      - af-annotation-specs\n      summary: アノテーション仕様更新\n      description: |\n        アノテーション仕様を更新します。\n      security:\n      - ProjectOwner: []\n      operationId: putAnnotationSpecs\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/AnnotationSpecsRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/AnnotationSpecsV2\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/annotation-specs-histories:\n    get:\n      tags:\n      - af-annotation-specs\n      summary: アノテーション仕様履歴一括取得\n      description: |\n        指定されたプロジェクトのアノテーション仕様のすべての履歴を取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getAnnotationSpecsHistories\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/AnnotationSpecsHistory\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/tasks:\n    get:\n      tags:\n      - af-task\n      summary: タスク検索\n      description: |\n        プロジェクトに含まれる複数のタスクをまとめて取得します。\n\n        検索条件を指定することで、特定のユーザが担当するタスクなどを絞り込むことができます。\n\n        パフォーマンスのため、結果はページング形式で返ります。全件取得したい場合は、レスポンスを見て、ページ移動してください。\n      security:\n      - AllProjectMember: []\n      operationId: getTasks\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: page\n        in: query\n        description: 検索結果のうち、取得したいページの番号(1始まり）\n        required: false\n        schema:\n          type: integer\n          minimum: 1\n          default: 1\n      - name: limit\n        in: query\n        description: 1ページあたりの取得するデータ件数\n        required: false\n        schema:\n          type: integer\n          minimum: 1\n          maximum: 200\n          default: 30\n      - name: task_id\n        in: query\n        description: タスクIDでの部分一致検索で使用。最大文字列長300文字。1文字以上あれば使用します。利便性のため、大文字小文字は区別しません\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskId\"\n      - name: input_data_ids\n        in: query\n        description: 指定された入力データIDを使用しているタスクを絞り込みます。カンマ区切りで複数の入力データIDを指定可能です。1文字以上あれば使用します。利便性のため、大文字小文字は区別しません\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      - name: phase\n        in: query\n        description: 絞り込み条件となるフェーズ名。未指定時は全フェーズ\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskPhase\"\n      - name: phase_stage\n        in: query\n        description: 絞り込み条件となるステージ。未指定時は全ステージ\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskPhaseStage\"\n      - name: status\n        in: query\n        description: 絞り込み条件となる状態名。未指定時は全ステータス。\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskStatus\"\n      - name: account_id\n        in: query\n        description: 絞り込み条件となる作業中のアカウントID。未指定時は全アカウント\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/AccountId\"\n      - name: no_user\n        in: query\n        description: 未割り当てのタスクを絞り込む時に、キーのみ指定します（値は無視されます）。\n        required: false\n        allowEmptyValue: true\n        schema:\n          type: string\n      - name: previous_account_id\n        in: query\n        description: そのタスクをこれまでに担当したことのあるユーザー（現在の担当者含む）のアカウントID。未指定時は全ユーザ\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/AccountId\"\n      - name: previous_phase\n        in: query\n        description: そのタスクがこれまでに遷移したことのあるフェーズ名（現在のフェーズ含む）。未指定時は全フェーズ\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskPhase\"\n      - name: previous_phase_stage\n        in: query\n        description: そのタスクがこれまでに遷移したことのあるステージ（現在のステージ含む）。未指定時は全ステージ\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskPhaseStage\"\n      - name: rejected_only\n        in: query\n        description: 差し戻されたタスクだけを絞り込む時に、キーのみ指定します（値は無視されます）。\n        required: false\n        allowEmptyValue: true\n        schema:\n          type: string\n      - name: auto_accepted_only\n        in: query\n        description: 「抜取検査の対象外となり、自動受入されたタスク」だけを絞り込む時に、キーのみ指定します（値は無視されます）。\n        required: false\n        allowEmptyValue: true\n        schema:\n          type: string\n      - name: metadata\n        in: query\n        description: |\n          メタデータからタスクを検索できます。\u003cbr\u003e\n          例えば、 `priority` (数値) や `assignable` (真偽値) といったメタデータを個々のタスクに登録していたとします。\n          その場合、次のように検索できます。\n\n          ```\n          // priorityが5のタスクを検索\n          https://annofab.com/~/tasks?metadata=priority:5\n\n          // priorityが5以外のタスクを検索\n          https://annofab.com/~/tasks?metadata=-priority:5\n\n          // priorityが1より大きいタスクを検索\n          https://annofab.com/~/tasks?metadata=priority:\u003e1\n\n          // priorityが1以上のタスクを検索\n          https://annofab.com/~/tasks?metadata=priority:\u003e=1\n\n          // priorityが100未満のタスクを検索\n          https://annofab.com/~/tasks?metadata=priority:\u003c100\n\n          // priorityが100以下のタスクを検索\n          https://annofab.com/~/tasks?metadata=priority:\u003c=100\n\n          // priorityが1~100のタスクを検索 (複数の検索条件は半角スペースで区切ります)\n          https://annofab.com/~/tasks?metadata=priority:\u003e=1 priority:\u003c=100\n\n          // priorityが1以上、且つ、assignableがtrueのタスクを検索\n          https://annofab.com/~/tasks?metadata=priority:\u003e=1 assignable:true\n          ```\n\n          次の検索構文は \u003cspan style=\"color: red\"\u003edeprecated\u003c/span\u003e です。\n\n          ```\n          // priorityが5のタスクを検索\n          https://annofab.com/~/tasks?metadata.priority=5\n\n          // priorityが1以上のタスクを検索\n          https://annofab.com/~/tasks?metadata.priority\u003e=1\n\n          // priorityが100以下のタスクを検索\n          https://annofab.com/~/tasks?metadata.priority\u003c=100\n\n          // priorityが1~100のタスクを検索\n          https://annofab.com/~/tasks?metadata.priority\u003e=1\u0026metadata.priority\u003c=100\n\n          // 教師付けフェーズ、且つ、priorityが5のタスクを検索\n          https://annofab.com/~/tasks?phase=annotation\u0026metadata.priority=5\n          ```\n\n          (注意) これらの例は、説明の都合上「URLエンコード」を施していません。\u003cbr\u003e\n          実際には、URLエンコードを施してください。\n        required: false\n        schema:\n          type: string\n      - name: sort\n        in: query\n        description: |\n          ソート順の指定。\n\n          * 使用可能キーはtask_id、updated_datetime、number_of_rejections、phase、phase_stage、status、account_id, metadataのいずれかです。\n          * metadata指定時は、`metadata.{メタデータ名}` の形式で指定します。\n          * 降順指定時は先頭に-(ハイフン)を付与します。\n          * 複数指定時は,(カンマ)区切りで列挙します。複数キーを列挙した場合は、先頭から優先順位を割り振られます。\n\n        required: false\n        example: metadata.priority,-updated_datetime\n        schema:\n          type: string\n      - name: annotation\n        in: query\n        description: |\n          アノテーションの絞り込み条件をJSON形式([AnnotationQuery](#section/AnnotationQuery))で指定したもの。指定した条件に合致するアノテーションを持つタスクを絞り込む際に指定する。\n        required: false\n        example: '{\"label_id\":\"b048c6b3-b36f-4c8d-97ea-96828a50a44c\"}'\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: 指定された条件にあてはまるタスクを返します。条件にあてはまるタスクが多数に及ぶことがあるので、すべての結果を得るにはページングしてください。\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/TaskList\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    post:\n      tags:\n      - af-task\n      summary: タスク一括更新\n      description: |\n        タスクを一括更新します。\n\n        リクエストボディは、1個以上の「操作」オブジェクトを含むJSON配列になります。\n        操作オブジェクトには、現在「削除」の1通りのみがあります。\n        これら操作オブジェクトを複数含めることで、1リクエストで複数の削除ができます。\n\n        複数の操作のうち、1つでも失敗するとAPIのレスポンス全体としては失敗になります。 成功した部分までは反映されます。\n      security:\n      - ProjectOwner: []\n      operationId: batchUpdateTasks\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"swagger-api-components.yaml#/components/schemas/BatchTaskRequestItem\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/Task\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"409\":\n          # TODO Error定義構造化(KRSANNOFAC-1502)\n          description: 停止中プロジェクトに対する操作のため失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Errors\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/generate-tasks:\n    post:\n      tags:\n      - af-task\n      summary: タスク一括作成\n      description: |\n        典型的なタスク作成ルールにもとづいた、一括作成を行うAPIです。\n\n        タスク作成ルールは、リクエストペイロードの `task_generate_rule` フィールドで指定できます。\u003cbr\u003e\n        `ByCount` を指定した場合、1つのタスクに割りあてる入力データの個数を指定してタスクを生成します。この作成ルールは、画像を同じ枚数均等にタスクに割り振りたい場合に便利です。\u003cbr\u003e\n        `ByDirectory` を指定した場合、入力データ名をファイルパスに見立て、ディレクトリ単位でタスクを生成します。この作成ルールは、動画などから切り出した画像をディレクトリ別に格納し、、その動画（ディレクトリ）の単位でタスクを作りたい場合に便利です。\n        `ByInputDataCsv` を指定した場合、入力データを各タスクに割り振ったCSVへのS3パスを指定してタスクを生成できます。この作成ルールは特定のデータの組み合わせを持ったタスクを作成したい場合に便利です。\u003cbr\u003e\n\n        本APIを実行すると、バックグラウンドジョブが登録されます。ジョブは [getProjectJob](#operation/getProjectJob) APIで確認できます（ジョブ種別は`gen-tasks`）。\n\n        #### ByDirectory: ディレクトリ単位でのタスク一括生成の使い方\n        例えば、次のような `input_data_name_` の入力データが登録されているとします。\n\n        * a.zip/dir1/image1.png\n        * a.zip/dir1/image2.png\n        * a.zip/dir1/subdir/image3.png\n        * a.zip/dir1/subdir/image4.png\n        * a.zip/dir1/subdir/image5.png\n        * b.zip/dir2/subdir1/image6.png\n        * b.zip/dir2/subdir1/image7.png\n        * b.zip/dir2/subdir1/image8.png\n        * b.zip/dir2/subdir2/image9.png\n        * b.zip/dir2/subdir2/image10.png\n\n        ここで、`input_data_name_prefix`フィールド に `a.zip` を指定すると、次の2タスクが生成されます。\n\n        1. タスク: `{task_id_prefix}_a.zip_dir1`\n          * a.zip/dir1/image1.png\n          * a.zip/dir1/image2.png\n        2. タスク: `{task_id_prefix}_a.zip_dir1_subdir`\n          * a.zip/dir1/subdir/image3.png\n          * a.zip/dir1/subdir/image4.png\n          * a.zip/dir1/subdir/image5.png\n\n        次に、`input_data_name_prefix` に `b.zip/dir2` を指定すると、次の2タスクが生成されます。\n\n        1. タスク: `{task_id_prefix}_b.zip_dir2_subdir1`\n          * b.zip/dir2/subdir1/image6.png\n          * b.zip/dir2/subdir1/image7.png\n          * b.zip/dir2/subdir1/image8.png\n        2. タスク: `{task_id_prefix}_b.zip_dir2_subdir2`\n          * b.zip/dir2/subdir2/image9.png\n          * b.zip/dir2/subdir2/image10.png\n\n        `input_data_name_prefix` が未指定の時は、全ディレクトリごとにタスクが作成されます。つまり次のように4つのタスクが生成されます。\n\n        1. タスク: `{task_id_prefix}_a.zip_dir1`\n          * a.zip/dir1/image1.png\n          * a.zip/dir1/image2.png\n        2. タスク: `{task_id_prefix}_a.zip_dir1_subdir`\n          * a.zip/dir1/subdir/image3.png\n          * a.zip/dir1/subdir/image4.png\n          * a.zip/dir1/subdir/image5.png\n        3. タスク: `{task_id_prefix}_b.zip_dir2_subdir1`\n          * b.zip/dir2/subdir1/image6.png\n          * b.zip/dir2/subdir1/image7.png\n          * b.zip/dir2/subdir1/image8.png\n        4. タスク: `{task_id_prefix}_b.zip_dir2_subdir2`\n          * b.zip/dir2/subdir2/image9.png\n          * b.zip/dir2/subdir2/image10.png\n\n        画像プロジェクトの場合、タスクに割り当てられる「ディレクトリ内の入力データ」の順序は、名前の昇順となります。\u003cbr\u003e\n        動画プロジェクトの場合、タスクに割り当てられる「ディレクトリ内の入力データ」の順序は、動画の入力データが先頭に来るようにソートされたうえで、名前の昇順となります。\n\n        **注意:** `ByDirectory`では、入力データ名がファイルパス形式になっていない入力データはタスクの作成対象になりません。\n        例えば、`foo/bar.png` はタスクの作成対象になりますが、ディレクトリを含まない`bar.png` や、最後がディレクトリになっている`foo/bar.png/` は対象になりません。\n\n        **注意:** 動画プロジェクトの場合、ディレクトリに含まれる動画の入力データは一つに制限してください。\n        これが守られない場合、作成されたタスクで動画を再生できない場合があります。\n\n        #### ByInputDataCsv: CSVによるタスク一括生成の使い方\n        以下のように「タスクID,入力データ名,入力データID」を1行毎に指定したCSVを作成します。\n\n        ```\n        task_1,a001.jpg,ca0cb2f9-fec5-49b4-98df-dc34490f9785\n        task_1,a002.jpg,5ac1987e-ca7c-42a0-9c19-b5b23a41836b\n        task_1,centinel.jpg,81d6407b-2172-4fa8-8525-2e43c49267ee\n        task_2,b001.jpg,4f2ae4d0-7a38-4f9a-be6f-170ba76aba73\n        task_2,b002.jpg,45ac5852-f20c-4938-9ee9-cc0274401df7\n        task_2,centinel.jpg,81d6407b-2172-4fa8-8525-2e43c49267ee\n        task_3,c001.jpg,3260c7a0-4820-424d-a26e-db7e91dbc139\n        task_3,centinel.jpg,81d6407b-2172-4fa8-8525-2e43c49267ee\n        ```\n        CSVのエンコーディングは UTF-8(BOM付き)、UTF-8(BOMなし)、UTF-16(BOM付きLE) のいずれかのみ対応しています。\n\n        **注意:** 動画プロジェクトの場合、一つのタスクに含まれる動画の入力データは一つに制限し、動画の入力データの位置は先頭にしてください。\n        これが守られない場合、作成されたタスクで動画を再生できない場合があります。\n\n        [createTempPath](#operation/createTempPath) APIを使ってアップロード用のURLとS3パスを取得してCSVをアップロードした上で`csv_data_path` フィールドに取得したS3パスを記述します。\n      security:\n      - ProjectOwner: []\n      operationId: initiateTasksGeneration\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/TaskGenerateRequest\"\n      responses:\n        \"202\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/TaskGenerateResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"409\":\n          description: 停止中プロジェクトに対する操作のため失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/tasks/{task_id}:\n    get:\n      tags:\n      - af-task\n      summary: タスク取得\n      description: |\n        個々のタスクの情報を取得します。\n\n        タスクを割り当てる場合は、[タスク割当](#operation/startTask)を使います。\n      security:\n      - AllProjectMember: []\n      operationId: getTask\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: task_id\n        in: path\n        description: タスクID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Task\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"409\":\n          description: 停止中プロジェクトに対する操作のため失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    put:\n      tags:\n      - af-task\n      summary: タスク作成/更新\n      description: |\n        1つのタスクを作成または更新します。\n        複数のタスクを一括生成する場合は、効率のよい[一括作成API](#operation/initiateTasksGeneration)を検討してください。\n\n        このAPIで変更できるのは、タスクの入力データ（`input_data_list`）のみです。タスクに割り当てた画像や動画などの入力データを差し替えることができます。\n\n        タスクの担当者やステータスを変更するには、[タスク割当](#operation/startTask)や[タスクの状態遷移](#operation/operateTask)を使用します。\n      security:\n      - ProjectOwner: []\n      operationId: putTask\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: task_id\n        in: path\n        description: |\n          タスクID。[値の制約についてはこちら。](#section/API-Convention/APIID)\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/TaskRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Task\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"409\":\n          description: 停止中プロジェクトに対する操作のため失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    delete:\n      tags:\n      - af-task\n      summary: タスク削除\n      description: |\n        不要になったタスクや、間違って投入したタスクを削除します。教師データなどは削除せず残すので、あとから復元することも可能です。\n      security:\n      - ProjectOwner: []\n      operationId: deleteTask\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: task_id\n        in: path\n        description: タスクID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskId\"\n      responses:\n        \"200\":\n          description: 正常。削除したタスクを返します\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Task\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/assign-tasks:\n    post:\n      tags:\n        - af-task\n      summary: タスク割当\n      description: |\n        メンバーもしくは自身にタスクを割当します。\n\n        個々のタスクの情報を取得する場合は、[タスク取得](#operation/getTask)を使います。\n      security:\n        - AllProjectMember: []\n      operationId: assignTasks\n      parameters:\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/TaskAssignRequest\"\n      responses:\n        \"200\":\n          description: 正常。割当したタスクを返します。\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/Task\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"409\":\n          description: プロジェクトが停止中のため、タスクの割当ができない。\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/tasks/metadata:\n    patch:\n      tags:\n        - af-task\n      summary: タスクメタデータの一括更新\n      description: |\n        複数の既存タスクのメタデータを一括更新します。\n      security:\n        - ProjectDataUser: []\n      operationId: patchTasksMetadata\n      parameters:\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      requestBody:\n        required: true\n        description: |\n          タスクIDとメタデータのkey-valueペア(Dictionary)を指定してください。\u003cbr\u003e\n          メタデータは、メタデータ名と値のkey-valueペア(Dictionary)です。\n\n          keyに指定できる文字種は次の通りです。\n\n          * 半角英数字\n          * `_` (アンダースコア)\n          * `-` (ハイフン)\n\n          valueに指定できる値は次の通りです。\n\n          * 文字列\n          * 数値\n          * 真偽値\n\n          ```\n          (例)\n\n          {\n            \"task_1\": { \"metadata_1\": \"str\", \"metadata_2\": 100 },\n            \"task_2\": { \"metadata_3\": true }\n          }\n          ```\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/PatchTasksMetadataRequest\"\n      responses:\n        \"200\":\n          $ref: \"swagger-api-components.yaml#/components/responses/SuccessMessage\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"409\":\n          description: 停止中プロジェクトに対する操作のため失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/tasks/{task_id}/operate:\n    post:\n      tags:\n      - af-task\n      summary: タスク状態変更\n      description: |\n        タスクの状態、もしくはタスクの担当者を変更することができます。\n\n        #### ユースケースごとの使い方\n\n        * タスクを作業中(working)にしたい場合\n          * 制約\n            * 現在タスクを担当しているユーザーのみ、この操作を行うことができます。\n            * 現在の状態が未着手(not_started)、休憩中(break)、保留(on_hold)のいずれかであるタスクに対してのみ、この操作を行うことができます。\n          * リクエストボディのJSONサンプル\n            * ```{ status: \"working\", account_id: \"自身(現在のタスク担当者)のアカウントID\", last_updated_datetime: \"2018-08-14T19:01:51.775+09:00\"}```\n        * タスクを休憩中にしたい場合\n          * 制約\n            * 現在タスクを担当しているユーザーのみ、この操作を行うことができます。\n            * 現在の状態が作業中(working)のタスクに対してのみ、この操作を行うことができます。\n          * リクエストボディのJSONサンプル\n            * ```{ status: \"break\", account_id: \"自身(現在のタスク担当者)のアカウントID\", last_updated_datetime: \"2018-08-14T19:01:51.775+09:00\"}```\n        * タスクを保留(on_hold)にしたい場合\n          * 制約\n            * 現在タスクを担当しているユーザーのみ、この操作を行うことができます。\n            * 現在の状態が作業中(working)のタスクに対してのみ、この操作を行うことができます。\n          * リクエストボディのJSONサンプル\n            * ```{ status: \"on_hold\", account_id: \"自身(現在のタスク担当者)のアカウントID\", last_updated_datetime: \"2018-08-14T19:01:51.775+09:00\"}```\n        * タスクを提出(complete)したい場合\n          * 制約\n            * 現在タスクを担当しているユーザーのみ、この操作を行うことができます。\n            * 現在の状態が作業中(working)のタスクに対してのみ、この操作を行うことができます。\n          * リクエストボディのJSONサンプル\n            * ```{ status: \"complete\", account_id: \"自身(現在のタスク担当者)のアカウントID\", last_updated_datetime: \"2018-08-14T19:01:51.775+09:00\"}```\n        * タスクの提出を取消し(cancelled)したい場合\n          * 制約\n            * タスクを提出したユーザーのみ、この操作を行うことができます。\n            * タスク提出後に検査/受入(抜取含む)等の作業が一切行われていない場合のみ、この操作を行うことができます。\n            * 現在の状態が未着手(not_started)のタスクに対してのみ、この操作を行うことができます。\n            * 現在のフェーズが検査(inspection)、もしくは受入(acceptance)のタスクに対してのみ、この操作を行うことができます。\n          * リクエストボディのJSONサンプル\n            * ```{ status: \"cancelled\", account_id: \"自身(タスク提出者)のアカウントID\", last_updated_datetime: \"2018-08-14T19:01:51.775+09:00\"}```\n        * タスクを差戻し(rejected)したい場合\n          * 制約\n            * 現在タスクを担当しているユーザーのみ、この操作を行うことができます。\n            * 現在の状態が作業中(working)のタスクに対してのみ、この操作を行うことができます。\n            * 現在のフェーズが検査(inspection)、もしくは受入(acceptance)のタスクに対してのみ、この操作を行うことができます。\n          * リクエストボディのJSONサンプル\n            * ```{ status: \"rejected\", account_id: \"自身(現在のタスク担当者)のアカウントID\", last_updated_datetime: \"2018-08-14T19:01:51.775+09:00\"}```\n          * タスクを強制差戻し(force rejected)したい場合\n            * 強制差戻しについて\n              * タスクの状態・フェーズを無視して、フェーズを教師付け(annotation)に、状態を未作業(not started)に変更します。\n              * タスクの担当者としては、直前の教師付け(annotation)フェーズの担当者を割り当てます。\n              * この差戻しは差戻しとして扱われず、抜取検査・抜取受入のスキップ判定に影響を及ぼしません。\n            * 制約\n              * プロジェクトオーナー(owner)のみ、この操作を行うことができます。\n              * 現在のタスクの状態、フェーズを問わず、この操作を行うことができます。\n            * リクエストボディのJSONサンプル\n              * ```{ status: \"rejected\", account_id: \"自身(プロジェクトオーナー)のアカウントID\", last_updated_datetime: \"2018-08-14T19:01:51.775+09:00\", force: true }```\n        * タスクの受入完了を取り消したい場合\n          * 制約\n            * プロジェクトオーナー(owner)のみ、この操作を行うことができます。\n            * 現在の状態が完了(completed)のタスクに対してのみ、この操作を行うことができます。\n            * 現在のフェーズが受入(acceptance)のタスクに対してのみ、この操作を行うことができます。\n          * リクエストボディのJSONサンプル\n            * ```{ status: \"not_started\", account_id: \"再度受入を担当させたいアカウントID\", last_updated_datetime: \"2018-08-14T19:01:51.775+09:00\"}```\n        * タスクの担当者を変更したい場合\n          * 制約\n            * プロジェクトオーナー(owner)、もしくは受入担当者(accepter)のみ、この操作を行うことができます。\n          * リクエストボディのJSONサンプル\n            * ```{ status: \"not_started\", account_id: \"現在のフェーズを担当できるアカウントID\", last_updated_datetime: \"2018-08-14T19:01:51.775+09:00\"}```\n        * タスクの担当者を未割当てにしたい場合\n          * 制約\n            * プロジェクトオーナー(owner)、もしくは受入担当者(accepter)のみ、この操作を行うことができます。\n          * リクエストボディのJSONサンプル\n            * ```{ status: \"not_started\", last_updated_datetime: \"2018-08-14T19:01:51.775+09:00\"}```\n      security:\n      - AllProjectMember: []\n      operationId: operateTask\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: task_id\n        in: path\n        description: タスクID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/TaskOperation\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Task\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"409\":\n          description: 指定された現在の状態が実際の現在の状態と食い違っている\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/tasks/{task_id}/histories:\n    get:\n      tags:\n      - af-task\n      summary: タスク履歴一括取得\n      description: |\n        指定されたタスクの作業履歴をすべて取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getTaskHistories\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: task_id\n        in: path\n        description: タスクID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/TaskHistory\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/annotations:\n    get:\n      tags:\n      - af-annotation\n      summary: アノテーション一括取得\n      description:\n        指定したタスク-入力データにつけられたアノテーションを一括で取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getAnnotationList\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: page\n        in: query\n        description: 検索結果のうち、取得したいページの番号(1始まり）\n        required: false\n        schema:\n          type: integer\n          minimum: 1\n          default: 1\n      - name: limit\n        in: query\n        description: 1ページあたりの取得するデータ件数\n        required: false\n        schema:\n          type: integer\n          minimum: 1\n          maximum: 200\n          default: 30\n      - name: aggregate_by_task_and_input\n        in: query\n        description: trueを指定した場合に「タスクIDと入力IDの組」ごとに検索結果を集計するようにする。\n        required: false\n        schema:\n          type: boolean\n          default: false\n      - name: no_aggregate_label_and_input\n        in: query\n        description: |\n          trueを指定した場合、ラベルIDによるアノテーション検索数の集約結果、および属性IDによるアノテーション検索数の集約結果を取得しなくなります。\n\n          集約計算は時間がかかる処理であるため、アノテーション件数が多い場合はアノテーション検索が遅くなる場合がありますが、\n          このパラメーターをtrueに指定することで集約計算をおこなわなくなるため、アノテーション検索が速くなる可能性があります。\n        required: false\n        schema:\n          type: boolean\n          default: false\n      - name: query\n        in: query\n        description: |\n          絞り込み条件([AnnotationQuery](#section/AnnotationQuery))をJSON形式で表した文字列。\n        required: false\n        example: '{\"label_id\":\"b048c6b3-b36f-4c8d-97ea-96828a50a44c\"}'\n        schema:\n          type: string\n      - name: sort\n        in: query\n        description: |\n          ソート順の指定。\n          使用可能キーはtask_id, input_data_id, detail.annotation_id, detail.account_id, detail.label_id, detail.data_holding_type, detail.created_datetime, detail.updated_datetimeのいずれかです。降順指定時は先頭に-(ハイフン)を付与します。\n          複数指定時は,(カンマ)区切りで列挙します。複数キーを列挙した場合は、先頭から優先順位を割り振られます。\n        required: false\n        example: task_id,input_data_id,detail.annotation_id,-detail.updated_datetime\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: 指定された条件にあてはまるアノテーションを返します。条件にあてはまるアノテーションが多数に及ぶことがあるので、すべての結果を得るにはページングしてください。\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/AnnotationList\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    post:\n      tags:\n      - af-annotation\n      summary: アノテーション一括更新\n      description: |\n        複数のアノテーションを一括更新します。\n\n        リクエストボディは、1個以上の「操作」オブジェクトを含むJSON配列になります。\n        操作オブジェクトには、「更新」と「削除」の2通りがあり、それぞれJSONオブジェクト構造が異なります。\n        これら操作オブジェクトを複数含めることで、1リクエストで複数の更新や削除ができます。\n\n        **現時点で、このAPIは複数のアノテーションを修正するためのもので、新しいアノテーションを作成することはできません**。\n        新しいアノテーションを更新や削除の対象に指定した場合、無視されます。\n\n        既に作成済みのアノテーションのうち、リクエストボディの配列に含まれないアノテーションは更新されません。\n\n        更新対象のアノテーションのうち、属性配列に含まれない属性は更新されません。\n\n        更新対象のアノテーションのラベルを変更する場合、異なるアノテーション種別のラベルに変更することはできません。\n        また、変更後のラベルに含まれない属性は削除されます。\n\n        画像全体のアノテーションは、他のラベルに変更することはできません。\n\n        塗りつぶしv2アノテーションは、1ラベル1アノテーションの制約のため、他の塗りつぶしv2ラベルに変更することはできません。\n\n        複数の操作のうち、1つでも失敗するとAPIのレスポンス全体としては失敗になります。 成功した部分までは反映されます。\n\n        受入が完了しているタスクのアノテーション更新を含む場合、オーナー以上の権限が必要になります。\n      security:\n      - ProjectAccepter: []\n      operationId: batchUpdateAnnotations\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"swagger-api-components.yaml#/components/schemas/BatchAnnotationRequestItem\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/SingleAnnotation\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"409\":\n          # TODO Error定義構造化(KRSANNOFAC-1502)\n          description: 停止中プロジェクトに対する操作、または、先に更新されているため失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Errors\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/tasks/{task_id}/inputs/{input_data_id}/annotation:\n    get:\n      tags:\n        - af-annotation\n      summary: タスク/入力データのアノテーション一括取得\n      description: |\n        [putAnnotation](#operation/putAnnotation)が要求する構造のアノテーションを取得します。\n        このAPIは、[putAnnotation](#operation/putAnnotation)をより利用しやすくする目的で提供しています。\n        機械学習などで利用する成果物としてのアノテーションを取得するには、以下をご利用いただけます。\n\n        * [getAnnotation](#operation/getAnnotation): 特定のタスク - 入力データのアノテーション取得\n        * [getAnnotationArchive](#operation/getAnnotationArchive): プロジェクト全体のアノテーション（ZIP）\n      security:\n        - AllProjectMember: []\n      operationId: getEditorAnnotation\n      parameters:\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n        - name: task_id\n          in: path\n          description: タスクID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/TaskId\"\n        - name: input_data_id\n          in: path\n          description: 入力データID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n        - name: task_history_id\n          in: query\n          description: |\n            過去のフェーズのアノテーションを取得する場合、タスク履歴IDを指定します。未指定時は最新のアノテーションを取得します。\n\n            過去のアノテーションデータは最後に保存してから30日前のデータまで取得できます。\n            30日より前のデータを取得しようとした場合はアノテーションデータは空リストとなります。\n          required: false\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/TaskHistoryId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Annotation\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    put:\n      tags:\n      - af-annotation\n      summary: タスク-入力データのアノテーション更新\n      description: |\n        「過去に誰にも割り当てられていないタスクに含まれる入力データ」に限り、プロジェクトオーナーであればアノテーションを更新できます。\n        この挙動は、[AnnoFab外部で作成されたアノテーションをインポート](/docs/tutorial/tutorial-ex-importing-annotation.html) する目的にも利用できます。\n\n        １度でも誰かに割り当てられたタスクは、タスクの現在の担当者であればアノテーションを更新できます。\n        タスクの現在の担当者でない場合、エラーになります。\n        この制限は、アノテーション作業中の予期せぬ同時編集を防ぐためです。\n\n        `is_protected`（保護） を `true` にすることで、アノテーションをアノテーションエディタ上での削除から保護できます。\n        属性の変更もさせたくない場合は、アノテーション仕様で特定の属性を読取専用にすることで保護できます。保護は、\n\n        * 外部からインポートしたアノテーション\n        * 別プロジェクトからコピーしたアノテーション\n\n        などを誤って削除したくないときに便利です。\n        `is_protected`は、プロジェクトオーナーのみ変更可能です。\n\n        なお、本APIでは `is_protected` によらず、更新や削除が可能です。\n      security:\n      - AllProjectMember: []\n      operationId: putAnnotation\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: task_id\n        in: path\n        description: タスクID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskId\"\n      - name: input_data_id\n        in: path\n        description: 入力データID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/Annotation\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Annotation\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"409\":\n          # TODO Error定義構造化(KRSANNOFAC-1502)\n          description: 停止中プロジェクトに対する操作、または、先に更新されているため失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Errors\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/tasks/{task_id}/inputs/{input_data_id}/annotation/simple:\n    get:\n      tags:\n      - af-annotation\n      summary: タスク-入力データのSimpleアノテーション一括取得\n      description: |\n        指定したタスク - 入力データにつけられたアノテーションを一括で取得します。\n        Simple版のアノテーションJSONは、機械学習の一般的な利用で扱いやすい構造になっています。\n\n        なお、プロジェクト全体のアノテーションを一括で取得したい場合には、 [getAnnotationArchive](#operation/getAnnotationArchive) APIを使用することもできます。\n      security:\n      - AllProjectMember: []\n      operationId: getAnnotation\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: task_id\n        in: path\n        description: タスクID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskId\"\n      - name: input_data_id\n        in: path\n        description: 入力データID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/SimpleAnnotation\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/archive/full:\n    get:\n      tags:\n      - af-annotation\n      summary: FullアノテーションZIP取得\n      description: |\n        プロジェクト内のアノテーション（Full版）がまとめられたZIPを取得するための、認証済み一時URLを取得します。\n        取得したURLは1時間で失効し、アクセスできなくなります。\n        アノテーションZIPを更新中の場合は409エラーになります。\n\n        FullアノテーションZIPのデータ構造については、 [Full Annotation ZIP](#section/Full-Annotation-ZIP) を参照ください。\n      security:\n      - ProjectDataUser: []\n      operationId: getArchiveFullWithProId #getFullAnnotationArchiveByProjectId\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"201\":\n          $ref: \"swagger-api-components.yaml#/components/responses/FileRedirectResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"409\":\n          description: アノテーションZIPを更新中のため失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/archive/simple:\n    get:\n      tags:\n      - af-annotation\n      summary: SimpleアノテーションZIP取得\n      description: |\n        プロジェクト内のアノテーション（Simple版）がまとめられたZIPを取得するための、認証済み一時URLを取得します。\n        取得したURLは1時間で失効し、アクセスできなくなります。\n        アノテーションZIPを更新中の場合は409エラーになります。\n\n        SimpleアノテーションZIPのデータ構造については、 [Simple Annotation ZIP](#section/Simple-Annotation-ZIP) を参照ください。\n\n        なお、特定のタスクのSimpleアノテーションを取得したい場合には、 [getAnnotation](#operation/getAnnotation) APIを使用することもできます。\n      security:\n      - ProjectDataUser: []\n      operationId: getAnnotationArchive\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"201\":\n          $ref: \"swagger-api-components.yaml#/components/responses/FileRedirectResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"409\":\n          description: アノテーションZIPを更新中のため失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/archive/update:\n    post:\n      tags:\n      - af-annotation\n      summary: アノテーションZIP更新開始\n      description: |\n        プロジェクト内のアノテーションZIP（Simple版とFull版の両方）の更新を開始します。\n        ZIPの更新は、データ量に応じて数分〜数十分かかります。\n\n        アノテーションZIPは毎日AM 03:00 JSTごろに自動更新されますが、本APIを用いると、自動更新を待たずに更新を要求できます。\n\n        本APIを実行すると、バックグラウンドジョブが登録されます。ジョブは [getProjectJob](#operation/getProjectJob) APIで確認できます（ジョブ種別は`gen-annotation`）。\n\n      security:\n      - ProjectDataUser: []\n      operationId: postAnnotationArchiveUpdate\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"202\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/PostAnnotationArchiveUpdateResponse\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"409\":\n          description: ジョブの同時実行制限による失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/tasks/{task_id}/inputs/{input_data_id}/inspections:\n    get:\n      tags:\n      - af-inspection\n      summary: 検査コメント一括取得\n      description: |\n        指定されたタスクで、指定された入力データにつけられた検査コメントをすべて取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getInspections\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: task_id\n        in: path\n        description: タスクID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskId\"\n      - name: input_data_id\n        in: path\n        description: 入力データID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/Inspection\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    post:\n      tags:\n      - af-inspection\n      summary: 検査コメント一括更新\n      description: |\n        検査コメントを一括更新します。\n        タスクの現在の担当者でない場合、またはタスクの状態が「作業中」でない場合は409エラーになります。\n\n        リクエストボディは、1個以上の「操作」オブジェクトを含むJSON配列になります。\n        操作オブジェクトには、「更新（作成含む）」と「削除」の2通りがあり、それぞれJSONオブジェクト構造が異なります。\n        これら操作オブジェクトを複数含めることで、1リクエストで複数の更新や削除ができます。\n\n        既に作成済みの検査コメントのうち、リクエストボディの配列に含まれないものは更新されません。\n\n        複数の操作のうち、1つでも失敗するとAPIのレスポンス全体としては失敗になります。 成功した部分までは反映されます。\n      security:\n      - AllProjectMember: []\n      operationId: batchUpdateInspections\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: task_id\n        in: path\n        description: タスクID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskId\"\n      - name: input_data_id\n        in: path\n        description: 入力データID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"swagger-api-components.yaml#/components/schemas/BatchInspectionRequestItem\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/Inspection\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"409\":\n          # TODO Error定義構造化(KRSANNOFAC-1502)\n          description: 停止中プロジェクトに対する操作、または、先に更新されているため失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Errors\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/tasks/{task_id}/inputs/{input_data_id}/comments:\n    get:\n      tags:\n        - af-comment\n      summary: コメント一括取得\n      description: |\n        指定されたタスクで、指定された入力データにつけられたコメントをすべて取得します。\n\n        **このAPIでは検査コメントのデータは取得できません（今後対応予定）。**\n      security:\n        - AllProjectMember: [ ]\n      operationId: getComments\n      parameters:\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n        - name: task_id\n          in: path\n          description: タスクID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/TaskId\"\n        - name: input_data_id\n          in: path\n          description: 入力データID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/Comment\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    post:\n      tags:\n        - af-comment\n      summary: コメント一括更新\n      description: |\n        コメントを一括更新します。\n        タスクの現在の担当者でない場合、またはタスクの状態が「作業中」でない場合は409エラーになります。\n\n        リクエストボディは、1個以上の「操作」オブジェクトを含むJSON配列になります。\n        操作オブジェクトには、「更新（作成含む）」と「削除」の2通りがあり、それぞれJSONオブジェクト構造が異なります。\n        これら操作オブジェクトを複数含めることで、1リクエストで複数の更新や削除ができます。\n\n        既に作成済みのコメントのうち、リクエストボディの配列に含まれないものは更新されません。\n\n        複数の操作のうち、1つでも失敗するとAPIのレスポンス全体としては失敗になります。 成功した部分までは反映されます。\n\n        **このAPIでは検査コメントのデータは更新できません（今後対応予定）。**\n      security:\n        - AllProjectMember: [ ]\n      operationId: batchUpdateComments\n      parameters:\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n        - name: task_id\n          in: path\n          description: タスクID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/TaskId\"\n        - name: input_data_id\n          in: path\n          description: 入力データID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"swagger-api-components.yaml#/components/schemas/BatchCommentRequestItem\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/Comment\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"409\":\n          # TODO Error定義構造化(KRSANNOFAC-1502)\n          description: 停止中プロジェクトに対する操作、または、先に更新されているため失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Errors\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/inputs:\n    get:\n      tags:\n      - af-input\n      summary: 入力データ一括取得\n      description: |\n        指定されたプロジェクトの入力データを検索します。\n\n        パフォーマンスのため、結果はページング形式で返ります。全件取得したい場合は、レスポンスを見て、ページ移動してください。\n      security:\n      - AllProjectMember: []\n      operationId: getInputDataList\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: input_data_id\n        in: query\n        description: 入力データIDでの部分一致検索で使用。1文字以上あれば使用します。最大文字列長300文字。大文字小文字は区別しません。\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      - name: input_data_name\n        in: query\n        description: 入力データ名での部分一致検索で使用。1文字以上あれば使用します。最大文字列長300文字。大文字小文字は区別しません。\n        required: false\n        schema:\n          type: string\n      - name: input_data_path\n        in: query\n        description: 入力データパスでの部分一致検索で使用。1文字以上あれば使用します。最大文字列長300文字。\n        required: false\n        schema:\n          type: string\n      - name: task_id\n        in: query\n        description: 入力データが紐づくタスクIDの部分一致検索で使用。1文字以上あれば使用します。最大文字列長300文字。大文字小文字は区別しません。条件に合致した先頭100件のタスクに使われている入力データを検索します。\n        required: false\n        schema:\n          type: string\n      - name: from\n        in: query\n        description: 更新日時での範囲検索で使用（ISO 8601 拡張形式）\n        required: false\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        description: 更新日時での範囲検索で使用（ISO 8601 拡張形式）\n        required: false\n        schema:\n          type: string\n          format: date-time\n      - name: page\n        in: query\n        description: 検索結果のうち、取得したいページの番号(1始まり）\n        required: false\n        schema:\n          type: integer\n          minimum: 1\n          default: 1\n      - name: limit\n        in: query\n        description: 1ページあたりの取得するデータ件数\n        required: false\n        schema:\n          type: integer\n          minimum: 1\n          maximum: 200\n          default: 30\n      responses:\n        \"200\":\n          description: 指定された条件にあてはまる入力データを返します。条件にあてはまる入力データが多数に及ぶことがあるので、すべての結果を得るにはページングしてください。\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/InputDataList\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    post:\n      tags:\n      - af-input\n      summary: 入力データ一括更新\n      description: |\n        入力データを一括更新します。\n\n        リクエストボディは、1個以上の「操作」オブジェクトを含むJSON配列になります。\n        操作オブジェクトには、現在「削除」の1通りのみがあります。\n        これら操作オブジェクトを複数含めることで、1リクエストで複数の削除ができます。\n\n        複数の操作のうち、1つでも失敗するとAPIのレスポンス全体としては失敗になります。 成功した部分までは反映されます。\n      security:\n      - ProjectOwner: []\n      operationId: batchUpdateInputs\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"swagger-api-components.yaml#/components/schemas/BatchInputDataRequestItem\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/InputData\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"409\":\n          # TODO Error定義構造化(KRSANNOFAC-1502)\n          description: 停止中プロジェクトに対する操作のため失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Errors\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/inputs/{input_data_id}:\n    get:\n      tags:\n      - af-input\n      summary: 入力データ取得\n      description: |\n        指定された入力データを取得します。\n\n        この API の返す入力データは入力データ名などの項目を含む JSON であり、実体のファイル（画像や動画など）ではありません。\n        実体ファイルにアクセスする方法は非公開です（詳細を希望される場合はお問い合わせください）。\n      security:\n      - AllProjectMember: []\n      operationId: getInputData\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: input_data_id\n        in: path\n        description: 入力データID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/InputData\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    put:\n      tags:\n      - af-input\n      summary: |\n        入力データ更新\n      description: |\n        入力データ（画像プロジェクトなら画像、動画プロジェクトなら動画や時系列データ）を登録します。\n\n        ファイルの登録には、[アップロード用一時データ保存先作成API](#operation/createTempPath) を組み合わせて使用します。\n\n        ## ZIPでまとめてアップロード\n\n        画像プロジェクトの場合、複数の画像ファイルをZIPでまとめてアップロードできます。ZIPは最大5GB、UTF-8エンコーディングのみ対応しています。\u003cbr\u003e\n        アノテーション作業生産性を高めるため、画像は「長辺4096px以内」かつ「4MB以内」になるよう縮小されます。\u003cbr\u003e\n        作成されるアノテーションは、元の解像度でつけた場合相当に自動で復元されます。\n\n        動画プロジェクトの場合、複数の動画ファイルをZIPでまとめてアップロードできます。ZIPは最大5GB、UTF-8エンコーディングのみ対応しています。\u003cbr\u003e\n        また、複数のストリーミング形式の動画をアップロードすることもできます。\u003cbr\u003e\n        この場合はZIP形式必須で、同一のZIPファイル内にm3u8ファイルとtsファイルを両方含めてください。\u003cbr\u003e\n        なお、このm3u8ファイルに記述された相対パスでtsファイルが参照可能である必要があります。\n\n        ZIPファイルを登録するとバックグラウンドジョブが登録されます。ジョブは [getProjectJob](#operation/getProjectJob) APIで確認できます（ジョブ種別は`gen-inputs`）。\n\n        ### ディレクトリ例\n        ```\n          hoge.zip/\n            hoge.ts\n            fuga/\n              foo.m3u8(hoge.ts, fuga/foo1.ts, fuga/foo2.tsを参照)\n              foo1.ts\n              foo2.ts\n            piyo1/\n              piyo2/\n                bar.ts\n              bar.m3u8(hoge.ts, piyo1/piyo2/bar.tsを参照)\n        ```\n\n        ## 注意事項\n\n        * `input_data_path` のスキーマが `https` の場合、 `input_data_name` もしくは `input_data_path` の末尾にファイルの拡張子を含むようにしてください\n            * `input_data_name`  の値が優先されます\n        * `input_data_path` のスキーマが `s3` かつ入力データがtsファイルの場合、 `input_data_name` もしくは `input_data_path` の末尾にファイルの拡張子を含むようにしてください\n            * `input_data_name`  の値が優先されます\n        * ZIPでまとめてアップロード時、ZIPファイル内の次の名前のファイルは入力データとして登録されません\n            * `Thumbs.db`\n            * `__MACOSX`\n            * `.DS_Store`\n            * 上記以外の、ファイル名先頭が `.`（ドット）で始まるファイル\n        * ZIPでまとめてアップロード時、ZIPファイル内の `.`（ドット）から始まるフォルダ以下のファイルは入力データとして登録されません\n\n      security:\n      - ProjectOwner: []\n      operationId: putInputData\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: input_data_id\n        in: path\n        description: |\n          入力データID。[値の制約についてはこちら。](#section/API-Convention/APIID)\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/InputDataRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/InputData\"\n        \"202\":\n          description: zipファイルを受領、バッチにて登録開始。\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ProjectJobInfo\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"409\":\n          description: 先に更新されているため、またはジョブの同時実行制御（zipファイルをアップロードした場合）により失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorAlreadyUpdated\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    delete:\n      tags:\n      - af-input\n      summary: 入力データ削除\n      description: |\n        入力データを削除します。\n\n        入力データの実体ファイルが AnnoFab のストレージに存在するものであれば、実体ファイルも削除されます。\n        お客様の管理するプライベートストレージに存在するものであれば、実体ファイルは削除されません。\n      security:\n      - ProjectOwner: []\n      operationId: deleteInputData\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: input_data_id\n        in: path\n        description: 入力データID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      responses:\n        \"200\":\n          description: 正常。削除した入力データを返します\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/InputData\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/inputs/{input_data_id}/supplementary-data:\n    get:\n      tags:\n      - af-supplementary\n      summary: 補助情報一括取得\n      description: |\n        指定された入力データにつけられた補助情報をすべて取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getSupplementaryDataList\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: input_data_id\n        in: path\n        description: 入力データID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/SupplementaryData\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/inputs/{input_data_id}/supplementary-data/{supplementary_data_id}:\n    put:\n      tags:\n      - af-supplementary\n      summary: 補助情報作成/更新\n      description: |\n        指定された入力データに補助情報を新規作成または更新します。\n      security:\n      - ProjectOwner: []\n      operationId: putSupplementaryData\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: input_data_id\n        in: path\n        description: 入力データID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      - name: supplementary_data_id\n        in: path\n        description: 補助情報ID（プロジェクトIDとの2つ組で一意となる値）\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/SupplementaryDataId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/SupplementaryDataRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/SupplementaryData\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    delete:\n      tags:\n      - af-supplementary\n      summary: 補助情報削除\n      description: |\n        指定された補助情報を、実体ファイルとともに削除します。\n      security:\n      - ProjectOwner: []\n      operationId: deleteSupplementaryData\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: input_data_id\n        in: path\n        description: 入力データID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      - name: supplementary_data_id\n        in: path\n        description: 補助情報ID（プロジェクトIDとの2つ組で一意となる値）\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/SupplementaryDataId\"\n      responses:\n        \"200\":\n          description: 正常\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/create-temp-path:\n    post:\n      tags:\n      - af-input\n      summary: 一時データ保存先取得\n      description: |\n        「複数の入力データを圧縮したZIPファイル」や「4MBを超える画像」などをAnnoFabに一時的に保存するための、URLと登録用データパスを発行します。\n\n        このAPIと他のAPIを以下に示すように使うことで、ZIPファイルなどをAFにアップロードできます。\n\n\n        1. 本APIを実行して、URLを取得する。\n          * `curl -X POST -H 'Content-Type: {CONTENT_TYPE_HERE}' 'https://annofab.com/api/v1/projects/{project_id}/create-temp-path'`\n        2. 1で取得したURLに、一時保存したいファイルをPUTする。\n          * `curl -X PUT -H 'Content-Type: {CONTENT_TYPE_HERE}' --data-binary @/hoge.zip 'https://{発行されたURL}'`\n        3. 1で取得した登録用データパスを [入力データ登録API](#operation/putInputData)のリクエストボディ `input_data_path` に指定する。\n          * `curl -X PUT -H 'Content-Type: text/json' -d '{\"input_data_name\":\"{表示名}\", \"input_data_path\":\"{登録用データパス}\" }' 'https://annofab.com/api/v1/projects/{project_id}/inputs/{input_data_id}'`\n\n        ここで、1と2で `CONTENT_TYPE_HERE` は必ず一致しなければいけません。\n        ZIPファイルの場合は `application/zip` 、画像ファイルの場合は `image/png` など、適切な Content-Type を指定します。\n\n        登録するファイルはどのような内容であれ、アップロードから24時間経過すると削除されます。\n        したがって、ZIP圧縮した入力データを登録する場合は、URL発行から24時間以内に完了してください。\n      security:\n      - AllProjectMember: []\n      operationId: createTempPath\n      parameters:\n      - in: header\n        name: Content-Type\n        schema:\n          type: string\n        example: \"application/zip\"\n        description: |\n          アップロードしたいファイルの Content-Type を指定します。\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"200\":\n          description: |\n            何らかのファイルをAnnoFabに一時的に保存するためのアップロード先URL\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/DataPath\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/instruction:\n    get:\n      tags:\n      - af-instruction\n      summary: 作業ガイドの取得\n      description: |\n        指定された版の作業ガイドのHTMLを取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getInstruction\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: history_id\n        in: query\n        description: 取得する版の履歴ID\n        required: true\n        schema:\n          type: string\n        example: \"ed55914c-9f04-470e-8af2-373c8def3e8b\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Instruction\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    put:\n      tags:\n      - af-instruction\n      summary: 作業ガイドの更新\n      description: |\n        作業ガイドのHTMLを更新します。\n      security:\n      - ProjectOwner: []\n      - ProjectAccepter: []\n      operationId: putInstruction\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/Instruction\"\n      responses:\n        \"200\":\n          description: 作業ガイドの更新が成功した。\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/InstructionHistory\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/instruction-history:\n    get:\n      tags:\n      - af-instruction\n      summary: 作業ガイドの編集履歴の取得\n      description: |\n        プロジェクトの作業ガイドの編集履歴を取得します。\n        取得される編集履歴は日付の新しい順にソートされます。\n      security:\n      - AllProjectMember: []\n      operationId: getInstructionHistory\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: limit\n        in: query\n        description: 取得する編集履歴の件数\n        required: false\n        schema:\n          type: integer\n          default: 30\n          minimum: 0\n          maximum: 10000\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/InstructionHistory\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/instruction-images:\n    get:\n      tags:\n      - af-instruction\n      summary: 作業ガイドの画像一覧の取得\n      description: |\n        プロジェクトの作業ガイドの画像一覧を取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getInstructionImages\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/InstructionImage\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/instruction-images/{image_id}:\n    delete:\n      tags:\n      - af-instruction\n      summary: 作業ガイドの画像削除\n      description: |\n        プロジェクトの作業ガイドの画像を削除します。\n      security:\n      - ProjectOwner: []\n      - ProjectAccepter: []\n      operationId: deleteInstructionImage\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: image_id\n        in: path\n        description: 作業ガイド画像ID\n        required: true\n        schema:\n          type: string\n        example: \"ed55914c-9f04-470e-8af2-373c8def3e8b\"\n      responses:\n        \"200\":\n          description: 正常\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/instruction-images/{image_id}/put-url:\n    get:\n      tags:\n      - af-instruction\n      summary: 作業ガイドの画像登録・更新用URL取得\n      description: |\n        プロジェクトの作業ガイドの画像を登録するためのput先URLを取得します。\n\n        リクエストヘッダには、登録する画像に応じた適切な Content-Type を指定してください。\n\n\n        作業ガイド画像の登録/更新方法は以下の通りです。\n        1. `getInstructionImageUrlForPut` APIを実行して、ファイルアップロード用のURLを取得する。\n          * `curl -X GET -H 'Content-Type: {CONTENT_TYPE_HERE}' 'https://annofab.com/api/v1/projects/{project_id}/instruction-images/{image_id}/put-url'`\n        2. 手順1で取得したファイルアップロード用のURLに対して、登録/更新する作業ガイド画像ファイル(`hoge.jpg`)をPUTする。\n          * `curl -X PUT -H 'Content-Type: {CONTENT_TYPE_HERE}' --data-binary @/hoge.jpg '{ファイルアップロード用のURL}'`\n\n        手順1と2で `CONTENT_TYPE_HERE` は必ず一致しなければいけません。\n\n      security:\n      - ProjectOwner: []\n      - ProjectAccepter: []\n      operationId: getInstructionImageUrlForPut\n      parameters:\n      - in: header\n        name: Content-Type\n        schema:\n          type: string\n        example: \"image/png\"\n        description: |\n          登録する画像ファイルの Content-Type を指定します。\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: image_id\n        in: path\n        description: 作業ガイド画像ID\n        required: true\n        schema:\n          type: string\n        example: \"ed55914c-9f04-470e-8af2-373c8def3e8b\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/InstructionImagePath\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n"
		}
	},
	"Error": "parse: paths: /organizations/{organization_name}/jobs: get: getOrganizationJob: parameters: parse parameter \"organization_name\": schema: parse schema: reference \"swagger-api-components.yaml#/components/schemas/OrganizationName\": resolve reference \"swagger-api-components.yaml#/components/schemas/OrganizationName\": invalid schema reference \"swagger-api-components.yaml#/components/schemas/OrganizationName\""
}