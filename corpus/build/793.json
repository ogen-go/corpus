{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/geoserver/geoserver"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "src/community/ogcapi/ogcapi-tiles/src/main/resources/org/geoserver/ogcapi/tiles/openapi.yaml",
			"content": "openapi: 3.0.0\n# This is just a summary version from https://app.swaggerhub.com/apis/UAB-CREAF/ogc-api-map-tiles-opf-xmp-full/1.0.0#/\n# with the parts we intent to implement now. It will have to be revised later once things settle down\nservers:\n  # Added by API Auto Mocking Plugin\n  - description: SwaggerHub API Auto Mocking\n    url: https://virtserver.swaggerhub.com/UAB-CREAF/ogc-api-map-tiles-opf-xmp-full/1.0.0\ninfo:\n  title: |-\n    OGC API Maps and Tiles OpenAPI document example\n  description: |-\n    This is a draft of an example of a service following the OGC API maps and tiles produced in the Testbed-15 Open Portrayal Framework in collaboration with the WMS.SWG. The Map Tile API is a Web API for fetching and managing maps and tiles.\n\n    The extensions are the following.\n    * There are\n    * The collection metadata (path `/collections/{collectionId}`) has been extended by the set of applicable styles (member `styles`, same\n    value as in `/styles` in the Style API) and a default style\n    (member `defaultStyle`, the style id).\n    * The PATCH operation on the feature collection metadata\n    (path `/collections/{collectionId}`) has been added. Only `styles` and\n    `defaultStyle` may be updated.\n\n    For more background information see [the Vector Tiles Pilot Extension Engineering\n    Report](https://github.com/opengeospatial/OGC-API-Map-Tiles/tree/master/standard/openapi).\n\n  version: \"1.0.0\"\n  contact:\n    name: Joan Maso\n    email: joan.maso@uab.cat\n  license:\n    name: OGC License\n    url: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/LICENSE'\ntags:\n  - name: OGC API Common\n    description: |-\n      Common characteristics of this API\n  - name: TileMatrixSet\n    description: |-\n      TileMatrixSet used in this API\n  - name: Tiled data from one collection\n    description: |-\n      Data partitioned into a hierarchy of tiles of a collection\n  - name: Tiled map from one collection\n    description: |-\n      map (renderizations or vector tiles) partitioned into a hierarchy of tiles  of a collection\n  - name: MultiTiles\n    description: |-\n      access to information about retriving multiple tiles in a single request.\npaths:\n  '/':\n    get:\n      tags:\n        - OGC API Common\n      summary: landing page\n      description: |-\n        The landing page provides links to the API definition, the conformance statements and to the feature collections in this dataset.\n      operationId: getLandingPage\n      parameters:\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/parameters/f-json-html'\n      responses:\n        '200':\n          description: |-\n            Links to the API capabilities and the TileMatrixSets shared by this API.\n          content:\n            application/json:\n              schema:\n                $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/schemas/landingPage'\n              example:\n                - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/examples/link-landingPage-this'\n                - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/examples/link-landingPage-alternate'\n                - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/examples/link-landingPage-service-json'\n                - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/examples/link-landingPage-service-html'\n                - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/examples/link-landingPage-conformance'\n                - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/examples/link-landingPage-collections-json'\n                - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/examples/link-landingPage-collections-html'\n                - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-tiles/1.0.0#/components/examples/link-landingPage-tms-json'\n            text/html:\n              schema:\n                type: string\n        '500':\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/responses/ServerError'\n  '/conformance':\n    get:\n      description: |-\n        A list of all requirements classes specified in a standard that the\n        server conforms to.\n      operationId: getConformanceClasses\n      parameters:\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/parameters/f-json-html'\n      tags:\n        - OGC API Common\n      responses:\n        '200':\n          description: |-\n            the URIs of all requirements classes supported by this API\n          content:\n            application/json:\n              schema:\n                $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/schemas/confClasses'\n              example:\n                conformsTo:\n                  - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/req/core'\n                  - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/req/oas30'\n                  - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/req/html'\n                  - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/req/geojson'\n                  - 'http://www.opengis.net/spec/ogcapi-maps-1/1.0/req/core'\n                  - 'http://www.opengis.net/spec/ogcapi-maps-1/1.0/req/info'\n                  - 'http://www.opengis.net/spec/ogcapi-tiles-1/1.0/req/core'\n                  - 'http://www.opengis.net/spec/ogcapi-tiles-1/1.0/req/multitile'\n                  - 'http://www.opengis.net/spec/ogcapi-tiles-1/1.0/req/info'\n        '400':\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/responses/InvalidParam'\n        '406':\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/responses/UnsupportedFormat'\n        '500':\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/responses/ServerError'\n  '/collections':\n    get:\n      tags:\n        - OGC API Common\n      summary: the collections in the dataset\n      operationId: describeCollections\n      parameters:\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/parameters/f-json-html'\n      responses:\n        '200':\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/responses/Collections'\n          content: \n            application/json:\n              schema:\n                $ref: '#/components/schemas/collectionInfo'\n        '500':\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/responses/ServerError'\n  '/collections/{collectionId}':\n    get:\n      tags:\n        - OGC API Common\n      summary: describe a collection\n      operationId: describeCollection\n      parameters:\n        - $ref: '#/components/parameters/collectionId'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/parameters/f-json-html'\n      responses:\n        '200':\n          description: |-\n            Metadata about the collection including style information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/collection'\n            text/html:\n              schema:\n                type: string\n        '404':\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/responses/NotFound'\n        '500':\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/responses/ServerError'\n    patch:\n      tags:\n        - OGC API Common\n      summary: |-\n        update parts of the style metadata\n      description: |-\n        IMPORTANT: This operation is defined by Clemens P. in the Testbed 15. It is included here for INFORMATION ONLY But is OUT OF SCOPE for Maps and Tiles.\n\n        Update selected elements of the metadata for\n        the collection with the id `collectionId`.\n\n        The only members that may be updated at this\n        time are `styles` and `defaultStyle`.\n\n        The PATCH semantics in this operation are defined by\n        RFC 7396 (JSON Merge Patch). From the specification:\n\n        _\"A JSON merge patch document describes changes to be\n        made to a target JSON document using a syntax that\n        closely mimics the document being modified. Recipients\n        of a merge patch document determine the exact set of\n        changes being requested by comparing the content of\n        the provided patch against the current content of the\n        target document. If the provided merge patch contains\n        members that do not appear within the target, those\n        members are added. If the target does contain the\n        member, the value is replaced. Null values in the\n        merge patch are given special meaning to indicate\n        the removal of existing values in the target.\"_\n\n        Some examples:\n\n        To add or update the default style, just send\n\n        ```\n        {\n          \"defaultStyle\": \"night\"\n        }\n        ```\n\n        To remove the default style, send\n\n        ```\n        {\n          \"defaultStyle\": null\n        }\n        ```\n\n        For arrays the complete array needs to be sent. I.e., to\n        update the list of styles, send the complete new array value.\n\n        To remove all styles, send\n\n        ```\n        {\n          \"styles\": null\n        }\n        ```\n\n        This operation is only available to registered\n        users.\n      operationId: patchCollectionMetadata\n      security:\n        - BasicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/collectionId'\n      requestBody:\n        description: |-\n          The updated style information for the collection.\n        content:\n          application/merge-patch+json:\n            schema:\n              $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-maps/1.0.0#/components/schemas/collection-patch'\n      responses:\n        '204':\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/responses/Updated'\n        '400':\n          description: |-\n            Malformed patch document.\n        '401':\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/responses/UnauthorizedAccess'\n        '404':\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/responses/NotFound'\n        '415':\n          description: |-\n            Unsupported patch document.\n          headers:\n            Accept-Patch:\n              description: |-\n                supported patch document media types\n              schema:\n                type: string\n        '422':\n          description: |-\n            Unprocessable request. The patch document appears\n            to be valid, but the server is incapable of processing\n            the request.\n        '500':\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/responses/ServerError'\n  '/tileMatrixSets':\n    get:\n      tags:\n        - TileMatrixSet\n      summary: fetch all available tile matrix sets (tiling schemes)\n      operationId: getTileMatrixSets\n      parameters:\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/parameters/f-json'\n      responses:\n        '200':\n          description: |-\n            An array of tile matrix sets (tiling schemes).\n          content:\n            application/json:\n              schema:\n                $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-tiles/1.0.0#/components/schemas/tileMatrixSets'\n        '500':\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/responses/ServerError'\n  '/tileMatrixSets/{tileMatrixSetId}':\n    get:\n      tags:\n        - TileMatrixSet\n      summary: fetch a tile matrix sets (tiling scheme) by id\n      operationId: getTileMatrixSetDescription\n      parameters:\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-tiles/1.0.0#/components/parameters/tileMatrixSetId'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/parameters/f-json'\n      responses:\n        '200':\n          description: tile matrix sets (a tiling scheme).\n          content:\n            application/json:\n              schema:\n                $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-tiles/1.0.0#/components/schemas/tileMatrixSet'\n        '404':\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/responses/NotFound'\n        '500':\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/responses/ServerError'\n  '/collections/{collectionId}/queryables':\n    get:\n      tags:\n        - Capabilities\n      summary: |-\n        lists the queryable attributes for the feature collection with id `collectionId`\n      operationId: getQueryables\n      parameters:\n        - $ref: '#/components/parameters/collectionId'\n        - $ref: '#/components/parameters/otherParameters'\n      responses:\n        '200':\n          $ref: '#/components/responses/Queryables'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  '/collections/{collectionId}/tiles/{tileMatrixSetId}/{tileMatrix}/{tileRow}/{tileCol}':\n    get:\n      tags:\n        - Tiled data from one collection\n      summary: fetch a tile from a collection\n      description: |-\n        Retrieves the tile in the requested tileMatrixSet, on the requested tileMatrix in the TileMatrixSet, with the requested tile indices (tileRow, tileCol). The tile has a single collection (formerly refered as layer) with all selected features in the bounding box of the tile. The feature properties to include in the tile representation can be limited using a query parameter.\n      operationId: getTileOfCollectionId\n      parameters:\n        - $ref: '#/components/parameters/collectionId'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-tiles/1.0.0#/components/parameters/tileMatrixSetId'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-tiles/1.0.0#/components/parameters/tileMatrix'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-tiles/1.0.0#/components/parameters/tileRow'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-tiles/1.0.0#/components/parameters/tileCol'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/parameters/datetime'\n        - $ref: '#/components/parameters/f-vector'\n        - $ref: '#/components/parameters/filter'\n        - $ref: '#/components/parameters/filter-lang'\n      responses:\n        '200':\n          description: A tile of the collection.\n          content:\n            image/jpeg:\n              schema:\n                type: string\n                format: binary\n            image/png:\n              schema:\n                type: string\n                format: binary\n            image/gif:\n              schema:\n                type: string\n                format: binary\n            image/mvt:\n              schema:\n                type: string\n            application/geo+json:\n              schema:\n                $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-features/1.0.0#/components/schemas/featureCollectionGeoJSON'\n        '404':\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/responses/NotFound'\n        '500':\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/responses/ServerError'\n  '/collections/{collectionId}/map/{styleId}/tiles/{tileMatrixSetId}/{tileMatrix}/{tileRow}/{tileCol}':\n    get:\n      tags:\n        - Tiled map from one collection\n      summary: fetch a tile from a collection\n      description: |-\n        Retrieves the tile in the requested tileMatrixSet, on the requested tileMatrix in the TileMatrixSet, with the requested tile indices (tileRow, tileCol). The tile has a single collection (formerly refered as layer) with all selected features in the bounding box of the tile. The feature properties to include in the tile representation can be limited using a query parameter.\n      operationId: getMapTileOfCollectionId\n      parameters:\n        - $ref: '#/components/parameters/collectionId'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-map-styles/1.0.0#/components/parameters/styleId'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-tiles/1.0.0#/components/parameters/tileMatrixSetId'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-tiles/1.0.0#/components/parameters/tileMatrix'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-tiles/1.0.0#/components/parameters/tileRow'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-tiles/1.0.0#/components/parameters/tileCol'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/parameters/datetime'\n        - $ref: '#/components/parameters/f-png-jpeg'\n        - $ref: '#/components/parameters/filter'\n        - $ref: '#/components/parameters/filter-lang'\n      responses:\n        '200':\n          description: A tile of the collection.\n          content:\n            image/jpeg:\n              schema:\n                type: string\n                format: binary\n            image/png:\n              schema:\n                type: string\n                format: binary\n            image/gif:\n              schema:\n                type: string\n                format: binary\n            image/mvt:\n              schema:\n                type: string\n            application/geo+json:\n              schema:\n                $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-features/1.0.0#/components/schemas/featureCollectionGeoJSON'\n        '404':\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/responses/NotFound'\n        '500':\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/responses/ServerError'\n  '/collections/{collectionId}/map/{styleId}/tiles/{tileMatrixSetId}/{tileMatrix}/{tileRow}/{tileCol}/info':\n    get:\n      tags:\n        - Tiled map from one collection\n      summary: fetch information about a point on a tile from a collection\n      description: |-\n        Retrieves inforamtion on a point of a tile in the requested tileMatrixSet, on the requested tileMatrix in the TileMatrixSet, with the requested tile indices (tileRow, tileCol). The tile has a single collection (formerly refered as layer) with all selected features in the bounding box of the tile. The feature properties to include in the tile representation can be limited using a query parameter.\n      operationId: getFeatureInfoMapTileOfCollectionId\n      parameters:\n        - $ref: '#/components/parameters/collectionId'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-map-styles/1.0.0#/components/parameters/styleId'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-tiles/1.0.0#/components/parameters/tileMatrixSetId'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-tiles/1.0.0#/components/parameters/tileMatrix'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-tiles/1.0.0#/components/parameters/tileRow'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-tiles/1.0.0#/components/parameters/tileCol'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-map-tiles/1.0.0#/components/parameters/coord_i'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-map-tiles/1.0.0#/components/parameters/coord_j'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-map-tiles/1.0.0#/components/parameters/infoTemplate'\n        - $ref: '#/components/parameters/f-tile'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/parameters/datetime'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/parameters/f-json-html'\n      responses:\n        '200':\n          description: A getFeatureInfo of a tile of the collection.\n          content:\n            application/geo+json:\n              schema:\n                $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-features/1.0.0#/components/schemas/featureCollectionGeoJSON'\n        '404':\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/responses/NotFound'\n        '500':\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/responses/ServerError'         \n  '/collections/{collectionId}/tiles/{tileMatrixSetId}':\n    get:\n      tags:\n        - MultiTiles\n      summary: |-\n        fetch tiles of a collection.\n      operationId: getTilesCollectionId\n      parameters:\n        - $ref: '#/components/parameters/collectionId'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-tiles/1.0.0#/components/parameters/tileMatrixSetId'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-tiles/1.0.0#/components/parameters/scaleDenominator'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/parameters/bbox'\n        - $ref: '#/components/parameters/f-tile'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-tiles/1.0.0#/components/parameters/multiTileType'\n        - $ref: '#/components/parameters/f-json-zip'\n      responses:\n        '200':\n          description: |-\n            A tiling scheme used to partition the collection into tiles.\n          content:\n            application/json:\n              schema:\n                $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-tiles/1.0.0#/components/schemas/tileSet'\n            application/x-zip-compressed:\n              schema:\n                type: string\n                format: binary\n        '404':\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/responses/NotFound'\n        '500':\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/responses/ServerError'\n  '/collections/{collectionId}/map/{styleId}/tiles/{tileMatrixSetId}':\n    get:\n      tags:\n        - MultiTiles\n      summary: |-\n        fetch tiles of a collection.\n      operationId: getMapTilesCollectionId\n      parameters:\n        - $ref: '#/components/parameters/collectionId'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-map-styles/1.0.0#/components/parameters/styleId'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-tiles/1.0.0#/components/parameters/tileMatrixSetId'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-tiles/1.0.0#/components/parameters/scaleDenominator'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/parameters/bbox'\n        - $ref: '#/components/parameters/f-tile'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-tiles/1.0.0#/components/parameters/multiTileType'\n        - $ref: '#/components/parameters/f-json-zip'\n      responses:\n        '200':\n          description: |-\n            A tiling scheme used to partition the collection into tiles.\n          content:\n            application/json:\n              schema:\n                $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-tiles/1.0.0#/components/schemas/tileSet'\n            application/x-zip-compressed:\n              schema:\n                type: string\n                format: binary\n        '404':\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/responses/NotFound'\n        '500':\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/responses/ServerError'\n\ncomponents:\n  schemas:\n    collection:\n      allOf:\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/schemas/collection'\n        - $ref: '#/components/schemas/collection-link'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-maps/1.0.0#/components/schemas/collection'\n        - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-tiles/1.0.0#/components/schemas/collection'\n    collection-link:\n      #This element is a duplicate of the one in OGC API common but it is enriched with more examples for maps and other resource types.\n      type: object\n      required:\n        - links\n      properties:\n        links:\n          type: array\n          items:\n            $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/schemas/link'\n          example:\n            - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/examples/link-collection-this'\n            - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/examples/link-collection-describedBy'\n            - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-features/1.0.0#/components/examples/link-collection-items'\n            - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-coverages/1.0.0#/components/examples/link-collection-rangeType'\n            - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-coverages/1.0.0#/components/examples/link-collection-domainSet'\n            - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-maps/1.0.0#/components/examples/link-collection-map'\n            - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-maps/1.0.0#/components/examples/link-collection-info'\n            - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-tiles/1.0.0#/components/examples/link-collection-tiles'\n            - $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-tiles/1.0.0#/components/examples/link-collection-info'\n    queryables:\n      type: object\n      required:\n        - queryables\n      properties:\n        queryables:\n          description: list of queryable properties\n          type: array\n          items:\n            $ref: \"#/components/schemas/queryable\"\n    queryable:\n      type:  object\n      required:\n        - name\n        - type\n      properties:\n        id:\n          description: identifier of the attribute that can be used in CQL filters\n          type: string\n          example: address\n        type:\n          description: the property type\n          type: string\n          enum:\n            - string\n            - uri\n            - number\n            - integer\n            - date\n            - dateTime\n            - boolean\n            - geometry\n  parameters:\n    collectionId:\n      name: collectionId\n      in: path\n      required: true\n      description: Identifier (name) of a specific collection\n      schema:\n        type: string\n    f-json-zip:\n      name: f\n      in: query\n      description: |-\n        The format of the response. If no value is provided, the standard http\n        rules apply, i.e., the accept header is used to determine the format.\n\n        The only pre-defined value is \"json\". The response to other values is\n        determined by the server.\n      required: false\n      style: form\n      explode: false\n      schema:\n        type: string\n        enum:\n          - json\n          - zip\n      example: json\n    f-png-jpeg:\n      name: f\n      in: query\n      description: |-\n        The format of the response. If no value is provided, the standard http rules apply, i.e., the accept header is used to determine the format.\n\n        Pre-defined values are jpeg, png or gif for image based tiles. The response to other values is determined by the server.\n      required: false\n      style: form\n      explode: false\n      schema:\n        type: string\n        enum:\n          - png\n          - jpeg\n          - gif\n          - mvt\n          - json\n      example: png\n    f-vector:\n        name: f\n        in: query\n        description: |-\n          The format of the response. If no value is provided, the standard http rules apply, i.e., the accept header is used to determine the format.\n\n          Pre-defined values are \"mvt\" for a Mapbox Vector Tile, \"json\" for a GeoJSON tiled feature collection. The response to other values is determined by the server.\n        required: false\n        style: form\n        explode: false\n        schema:\n          type: string\n          enum:\n            - png\n            - jpeg\n            - gif\n            - mvt\n            - json\n        example: png\n    f-map:\n      name: f-map\n      in: query\n      description: |-\n        Internal format of the maps referenced by a getFeatureInfo.\n      required: false\n      style: form\n      explode: false\n      schema:\n        type: string\n        enum:\n          - png\n          - jpeg\n          - gif\n      example: png\n    f-tile:\n      name: f\n      in: query\n      description: |-\n        The format of the response. If no value is provided, the standard http rules apply, i.e., the accept header is used to determine the format.\n\n        Pre-defined values are \"mvt\" for a Mapbox Vector Tile, \"json\" for a GeoJSON tiled feature collection and jpeg, png or gif for image based tiles\n        The response to other values is determined by the server.\n      required: false\n      style: form\n      explode: false\n      schema:\n        type: string\n        enum:\n          - image/png\n          - image/jpeg\n          - image/gif\n          - mvt\n          - application/json\n      example: image/png\n    f-geotiff:\n      name: f\n      in: query\n      description: |-\n        The format of the response. If no value is provided, the standard http\n        rules apply, i.e., the accept header is used to determine the format.\n\n        The only pre-defined value is \"geotiff\". The response to other values is\n        determined by the server.\n      required: false\n      style: form\n      explode: false\n      schema:\n        type: string\n        enum:\n          - image/geotiff\n      example: image/geotiff\n    f-png-jpeg:\n      name: f\n      in: query\n      description: |-\n        The format of the response. If no value is provided, the standard http rules apply, i.e., the accept header is used to determine the format.\n\n        Pre-defined values jpeg, png or gif for image based tiles\n        The response to other values is determined by the server.\n      required: false\n      style: form\n      explode: false\n      schema:\n        type: string\n        enum:\n          - image/png\n          - image/jpeg\n          - image/gif\n      example: image/png\n    filter:\n      name: filter\n      in: query\n      description: Defines a filter that will be applied on items, only items matching the filter will be returned\n      schema:\n        type: string\n    filter-lang:\n      name: filter-lang\n      in: query\n      description: Filter encoding used in the filter parameter\n      schema:\n        type: string\n        enum:\n          - cql-text\n        default: cql-text\n    otherParameters:\n      style: form\n      in: query\n      name: otherParameters\n      description: Allows unrecognized parameters to be added in the query string without getting a 400 back (e.g., cache busters)\n      schema:\n        type: object\n        additionalProperties: true\n  responses:\n    Queryables:\n      description: |-\n        Information about the feature collection queryable properties\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/queryables'\n"
		}
	},
	"Error": "parse: paths: /tileMatrixSets: get: getTileMatrixSets: parameters: parse parameter \"\": resolve \"https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/parameters/f-json\" reference: invalid parameter reference: \"https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/parameters/f-json\""
}