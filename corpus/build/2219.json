{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "openapi/opendesign/openapi.yaml",
			"content": "openapi: 3.0.2\ninfo:\n  title: Open Design REST API\n  description: \u003e\n    This is a generated connector for [Open Design REST API v0.3.4](https://opendesign.dev/docs/api-reference/introduction) OpenAPI specification. \n\n    Open Design read and display data from designs using code. Unlock the power of programmatic design.\n  x-ballerina-init-description: \u003e \n    The connector initialization requires setting the API credentials.\n\n    Create a [Open Design account](https://opendesign.dev) and obtain tokens by following [this guide](https://opendesign.dev/docs/api-reference/introduction#step-1-get-your-api-token).\n  x-ballerina-display:\n    label: opendesign\n    iconPath: \"icon.png\"\n  version: 0.3.4\n  contact:\n    name: Open Design\n    email: team@opendesign.dev\n    url: https://opendesign.dev\npaths:\n  /token:\n    get:\n      tags:\n        - Auth\n      description: Auth Token Check\n      operationId: CheckToken\n      responses:\n        '200':\n          description: Returns info about the token.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  expires_at:\n                    type: integer\n                    format: int32\n                    nullable: true\n                    description: \u003e-\n                      UTC timestamp (in milliseconds) when the provided token\n                      expires.\n                required:\n                  - expires_at\n        '400':\n          description: Unexpected parameters provided.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/InvalidInputError'\n                required:\n                  - error\n        '401':\n          description: Token not provided on invalid/expired.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/AuthTokenError'\n                required:\n                  - error\n        '500':\n          description: There was an internal error.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/ServerError'\n                required:\n                  - error\n  /designs/upload:\n    post:\n      tags:\n        - Import\n      description: Design File Upload\n      operationId: PostDesignUpload\n      parameters: []\n      requestBody:\n        description: Upload information\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  $ref: '#/components/schemas/MultipartFilePart'\n                format:\n                  $ref: '#/components/schemas/DesignImportFormatEnum'\n              required:\n                - file\n      responses:\n        '201':\n          description: Returns the created design entity.\n          headers:\n            location:\n              description: URL of the created design.\n              required: true\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: object\n                description: A design file descriptor\n                properties:\n                  design:\n                    $ref: '#/components/schemas/Design'\n                required:\n                  - design\n        '400':\n          description: \u003e-\n            Invalid or unexpected input (wrong headers, invalid multi-part data\n            etc.)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    oneOf:\n                      - $ref: '#/components/schemas/InvalidHeaderError'\n                      - $ref: '#/components/schemas/InvalidFormatError'\n                      - $ref: '#/components/schemas/MissingUploadFileError'\n                      - $ref: '#/components/schemas/InvalidUploadFileFieldError'\n                      - $ref: '#/components/schemas/InvalidInputError'\n                    discriminator:\n                      propertyName: code\n                      mapping:\n                        InvalidHeader: '#/components/schemas/InvalidHeaderError'\n                        InvalidFormat: '#/components/schemas/InvalidFormatError'\n                        MissingUploadFile: '#/components/schemas/MissingUploadFileError'\n                        InvalidUploadFileField: '#/components/schemas/InvalidUploadFileFieldError'\n                        InvalidInput: '#/components/schemas/InvalidInputError'\n                required:\n                  - error\n        '401':\n          description: Token not provided or invalid.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/AuthTokenError'\n                required:\n                  - error\n        '429':\n          description: Rate limit reached.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/RateLimitReachedError'\n                required:\n                  - error\n        '500':\n          description: There was an internal error.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/ServerError'\n                required:\n                  - error\n  /designs/link:\n    post:\n      tags:\n        - Import\n      description: URL-Based Design File Import\n      operationId: PostDesignLink\n      parameters: []\n      requestBody:\n        description: Design link information\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                url:\n                  type: string\n                  description: A publicly accessible URL of the design file to import.\n                format:\n                  $ref: '#/components/schemas/DesignImportFormatEnum'\n                design_name:\n                  type: string\n                  nullable: true\n                  description: \u003e-\n                    Name of the design. (When no name is provided, the server\n                    infers the name from the URL.)\n              required:\n                - url\n        required: true\n      responses:\n        '201':\n          description: Returns the created design entity.\n          headers:\n            location:\n              description: URL of the created design.\n              required: true\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: object\n                description: A design file descriptor\n                properties:\n                  design:\n                    $ref: '#/components/schemas/Design'\n                required:\n                  - design\n        '400':\n          description: Invalid or unexpected input (misformed URL etc.)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    oneOf:\n                      - $ref: '#/components/schemas/InvalidUploadLinkError'\n                      - $ref: '#/components/schemas/InvalidFormatError'\n                      - $ref: '#/components/schemas/InvalidInputError'\n                    discriminator:\n                      propertyName: code\n                      mapping:\n                        InvalidUploadLink: '#/components/schemas/InvalidUploadLinkError'\n                        InvalidFormat: '#/components/schemas/InvalidFormatError'\n                        InvalidInput: '#/components/schemas/InvalidInputError'\n                required:\n                  - error\n        '401':\n          description: Token not provided or invalid.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/AuthTokenError'\n                required:\n                  - error\n        '429':\n          description: Rate limit reached.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/RateLimitReachedError'\n                required:\n                  - error\n        '500':\n          description: There was an internal error.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/ServerError'\n                required:\n                  - error\n  /designs/figma-link:\n    post:\n      tags:\n        - Import\n      description: Figma Design File Import\n      operationId: PostDesignFigmaLink\n      parameters: []\n      requestBody:\n        description: Figma design information\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                design_name:\n                  type: string\n                  nullable: true\n                  description: Name of the design.\n                figma_token:\n                  type: string\n                  description: An access token from Figma.\n                figma_filekey:\n                  type: string\n                  description: ID of the file in Figma.\n                figma_ids:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/FigmaFrameId'\n                  description: \u003e-\n                    Frame IDs to sync. When not specified, all frames are\n                    included.\n                exports:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      format:\n                        $ref: '#/components/schemas/DesignExportTargetFormatEnum'\n                    required:\n                      - format\n                  description: \u003e-\n                    Design file exports to intiate automatically with the\n                    import. (Only Sketch is supported currently as the target\n                    format.)\n              required:\n                - figma_token\n                - figma_filekey\n        required: true\n      responses:\n        '201':\n          description: \u003e-\n            Returns the created design entity or its processing status (in case\n            a export was requested).\n          headers:\n            location:\n              description: URL of the created design.\n              required: true\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  design:\n                    oneOf:\n                      - $ref: '#/components/schemas/FigmaDesign'\n                      - $ref: '#/components/schemas/DesignProcessing'\n                  exports:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/DesignExport'\n                    description: Inititated design file exports for the import.\n                required:\n                  - design\n                  - exports\n        '400':\n          description: The requested design export is invalid or not supported.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    oneOf:\n                      - $ref: '#/components/schemas/InvalidFormatError'\n                      - $ref: '#/components/schemas/MultipleDesignExportsError'\n                      - $ref: '#/components/schemas/InvalidInputError'\n                    discriminator:\n                      propertyName: code\n                      mapping:\n                        InvalidFormat: '#/components/schemas/InvalidFormatError'\n                        MultipleDesignExports: '#/components/schemas/MultipleDesignExportsError'\n                        InvalidInput: '#/components/schemas/InvalidInputError'\n                required:\n                  - error\n        '401':\n          description: Token not provided or invalid.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/AuthTokenError'\n                required:\n                  - error\n        '429':\n          description: Rate limit reached.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/RateLimitReachedError'\n                required:\n                  - error\n        '500':\n          description: There was an internal error.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/ServerError'\n                required:\n                  - error\n  /designs:\n    get:\n      tags:\n        - Designs\n      description: Design List\n      operationId: GetDesignList\n      responses:\n        '200':\n          description: Returns a list of design entities\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  designs:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Design'\n                    description: List of design entities\n                required:\n                  - designs\n        '400':\n          description: Unexpected parameters provided.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/InvalidInputError'\n                required:\n                  - error\n        '401':\n          description: Token not provided or invalid.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/AuthTokenError'\n                required:\n                  - error\n        '500':\n          description: There was an internal error.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/ServerError'\n                required:\n                  - error\n  /designs/{design_id}:\n    get:\n      tags:\n        - Designs\n      description: Design Info\n      operationId: GetDesign\n      parameters:\n        - name: design_id\n          description: A unique identifier (UUID) of an imported design file.\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$\n      responses:\n        '200':\n          description: Returns the design entity or its processing status.\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/Design'\n                  - $ref: '#/components/schemas/DesignProcessing'\n        '202':\n          description: The design is being processed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DesignProcessing'\n        '400':\n          description: Invalid or unexpected input.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/InvalidInputError'\n                required:\n                  - error\n        '401':\n          description: Token not provided or invalid.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/AuthTokenError'\n                required:\n                  - error\n        '404':\n          description: No such design entity (or not accessible with the provided token).\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/DesignNotFoundError'\n                required:\n                  - error\n        '500':\n          description: There was an internal error.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/ServerError'\n                required:\n                  - error\n  /designs/{design_id}/exports:\n    post:\n      tags:\n        - Export\n      description: Start Design Export\n      operationId: PostDesignExport\n      parameters:\n        - name: design_id\n          description: A unique identifier (UUID) of an imported design file.\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$\n      requestBody:\n        description: Design export target\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                format:\n                  $ref: '#/components/schemas/DesignExportTargetFormatEnum'\n              required:\n                - format\n        required: true\n      responses:\n        '201':\n          description: Returns the started design export task entity.\n          headers:\n            location:\n              description: URL where info about the created design export can be checked.\n              required: true\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DesignExport'\n        '400':\n          description: Invalid or unexpected input or incompatible design.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    oneOf:\n                      - $ref: '#/components/schemas/InvalidFormatError'\n                      - $ref: '#/components/schemas/DesignNotProcessedError'\n                      - $ref: '#/components/schemas/InvalidInputError'\n                    discriminator:\n                      propertyName: code\n                      mapping:\n                        InvalidFormat: '#/components/schemas/InvalidFormatError'\n                        DesignNotProcessed: '#/components/schemas/DesignNotProcessedError'\n                        InvalidInput: '#/components/schemas/InvalidInputError'\n                required:\n                  - error\n        '401':\n          description: Token not provided or invalid.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/AuthTokenError'\n                required:\n                  - error\n        '404':\n          description: No such design entity.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/DesignNotFoundError'\n                required:\n                  - error\n        '500':\n          description: There was an internal error.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/ServerError'\n                required:\n                  - error\n  /designs/{design_id}/exports/{export_id}:\n    get:\n      tags:\n        - Export\n      description: Design Export Info\n      operationId: GetDesignExport\n      parameters:\n        - name: design_id\n          description: A unique identifier (UUID) of an imported design file.\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$\n        - name: export_id\n          description: An identifier of a export task of an imported design file.\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$\n      responses:\n        '200':\n          description: Returns the design export task entity.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DesignExport'\n        '400':\n          description: Invalid or unexpected input.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/InvalidInputError'\n                required:\n                  - error\n        '401':\n          description: Token not provided or invalid.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/AuthTokenError'\n                required:\n                  - error\n        '404':\n          description: \u003e-\n            No such design entity or design export (or not accessible with the\n            provided token).\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    oneOf:\n                      - $ref: '#/components/schemas/DesignNotFoundError'\n                      - $ref: '#/components/schemas/DesignExportNotFoundError'\n                required:\n                  - error\n        '500':\n          description: There was an internal error.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/ServerError'\n                required:\n                  - error\n  /designs/{design_id}/summary:\n    get:\n      tags:\n        - Design Contents\n      description: Design Summary\n      operationId: GetDesignSummary\n      parameters:\n        - name: design_id\n          description: A unique identifier (UUID) of an imported design file.\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$\n      responses:\n        '200':\n          description: \u003e-\n            Returns an extended design entity with the complete page and\n            artboard entity lists or the processing status of the design.\n          content:\n            application/json:\n              schema:\n                description: Descriptor for a design\n                oneOf:\n                  - $ref: '#/components/schemas/DesignSummary'\n                  - $ref: '#/components/schemas/DesignProcessing'\n        '202':\n          description: The design is being uploaded or processed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DesignProcessing'\n        '400':\n          description: Invalid or unexpected input.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/InvalidInputError'\n                required:\n                  - error\n        '401':\n          description: Token not provided or invalid.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/AuthTokenError'\n                required:\n                  - error\n        '404':\n          description: No such design entity (or not accessible with the provided token).\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/DesignNotFoundError'\n                required:\n                  - error\n        '500':\n          description: There was an internal error.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/ServerError'\n                required:\n                  - error\n  /designs/{design_id}/pages:\n    get:\n      tags:\n        - Design Contents\n      description: Page List\n      operationId: GetDesignPageList\n      parameters:\n        - name: design_id\n          description: A unique identifier (UUID) of an imported design file.\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$\n      responses:\n        '200':\n          description: Returns a page entity list.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  pages:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Page'\n                    description: The list of pages within the paged (`has_pages=true`) design file.\n                required:\n                  - pages\n        '202':\n          description: The design is being uploaded or processed.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  pages:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Page'\n                    description: The list of pages within the paged (`has_pages=true`) design file.\n                required:\n                  - pages\n        '400':\n          description: Invalid or unexpected input.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/InvalidInputError'\n                required:\n                  - error\n        '401':\n          description: Token not provided or invalid.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/AuthTokenError'\n                required:\n                  - error\n        '404':\n          description: No such design entity (or not accessible with the provided token).\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/DesignNotFoundError'\n                required:\n                  - error\n        '406':\n          description: The design file is unpaged.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/DesignNotPagedError'\n                required:\n                  - error\n        '500':\n          description: There was an internal error.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/ServerError'\n                required:\n                  - error\n  /designs/{design_id}/artboards:\n    get:\n      tags:\n        - Design Contents\n      description: Artboard List\n      operationId: GetDesignArtboardList\n      parameters:\n        - name: design_id\n          description: A unique identifier (UUID) of an imported design file.\n          in: path\n          required: true\n          schema:\n            type: string\n            description: A unique identifier (UUID) of an imported design file.\n            pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$\n      responses:\n        '200':\n          description: Returns a artboard entity list.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  artboards:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Artboard'\n                    description: The list of artboards within the design file.\n                required:\n                  - artboards\n        '202':\n          description: The design is being uploaded or processed.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  artboards:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Artboard'\n                    description: The list of artboards within the design file.\n                required:\n                  - artboards\n        '400':\n          description: Invalid or unexpected input.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/InvalidInputError'\n                required:\n                  - error\n        '401':\n          description: Token not provided or invalid.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/AuthTokenError'\n                required:\n                  - error\n        '404':\n          description: No such design entity (or not accessible with the provided token).\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    oneOf:\n                      - $ref: '#/components/schemas/DesignNotFoundError'\n                      - $ref: '#/components/schemas/ArtboardNotFoundError'\n                required:\n                  - error\n        '500':\n          description: There was an internal error.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/ServerError'\n                required:\n                  - error\n  # /designs/{design_id}/artboards/{artboard_id}/content:\n  #   get:\n  #     tags:\n  #       - Design Contents\n  #     description: Artboard Content\n  #     operationId: GetDesignArtboardContent\n  #     parameters:\n  #       - name: design_id\n  #         in: path\n  #         required: true\n  #         schema:\n  #           type: string\n  #           description: A unique identifier (UUID) of an imported design file.\n  #           pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$\n  #       - name: artboard_id\n  #         in: path\n  #         required: true\n  #         schema:\n  #           $ref: '#/components/schemas/ArtboardId'\n  #     responses:\n  #       '200':\n  #         description: Returns the content of the artboard as JSON.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/OctopusDocument'\n  #       '202':\n  #         description: The design or the artboard is being uploaded or processed.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/DesignArtboardProcessing'\n  #       '400':\n  #         description: Invalid or unexpected input.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 error:\n  #                   $ref: '#/components/schemas/InvalidInputError'\n  #               required:\n  #                 - error\n  #       '401':\n  #         description: Token not provided or invalid.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 error:\n  #                   $ref: '#/components/schemas/AuthTokenError'\n  #               required:\n  #                 - error\n  #       '404':\n  #         description: \u003e-\n  #           No such design or artboard entity (or not accessible with the\n  #           provided token).\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 error:\n  #                   oneOf:\n  #                     - $ref: '#/components/schemas/DesignNotFoundError'\n  #                     - $ref: '#/components/schemas/ArtboardNotFoundError'\n  #                     - $ref: '#/components/schemas/ArtboardContentNotFoundError'\n  #               required:\n  #                 - error\n  #       '500':\n  #         description: There was an internal error.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 error:\n  #                   $ref: '#/components/schemas/ServerError'\n  #               required:\n  #                 - error\ncomponents:\n  schemas:\n    InvalidInputError:\n      type: object\n      properties:\n        code:\n          type: string\n          description: Error code\n          enum:\n            - InvalidInput\n        message:\n          type: string\n          description: Error message\n        docs_url:\n          $ref: '#/components/schemas/ErrorDocsUrl'\n      required:\n        - code\n        - message\n      description: Some of the input parameters are invalid or missing.\n    AuthTokenError:\n      oneOf:\n        - $ref: '#/components/schemas/NoAuthTokenError'\n        - $ref: '#/components/schemas/InvalidAuthTokenError'\n        - $ref: '#/components/schemas/InactiveAccountError'\n    ServerError:\n      type: object\n      properties:\n        code:\n          type: string\n          description: Error code\n          enum:\n            - ServerError\n        message:\n          type: string\n          description: A human-readable technical message of the error.\n        docs_url:\n          $ref: '#/components/schemas/ErrorDocsUrl'\n      required:\n        - code\n    MultipartFilePart:\n      type: string\n      format: binary\n      description: A multipart file upload field.\n    DesignImportFormatEnum:\n      type: string\n      enum:\n        - photoshop\n        - xd\n        - sketch\n        - illustrator\n      description: \u003e-\n        The design file format. (This is not needed when the format can be\n        inferred from the file extension.)\n    Design:\n      type: object\n      description: A design file descriptor \n      properties:\n        id:\n          type: string\n          description: A unique identifier (UUID) of an imported design file.\n          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$\n        name:\n          type: string\n          nullable: true\n          description: The name of the design.\n        format:\n          $ref: '#/components/schemas/DesignFormatEnum'\n        created_at:\n          type: integer\n          format: int32\n          description: UTC timestamp (in milliseconds) when the design file was imported.\n        completed_at:\n          type: integer\n          format: int32\n          nullable: true\n          description: \u003e-\n            UTC timestamp (in milliseconds) when the processing of the design\n            file successfully finished.\n        status:\n          $ref: '#/components/schemas/DesignStatusEnum'\n        has_pages:\n          type: boolean\n          description: \u003e-\n            Flag denoting there are pages in the design file and the client can\n            obtain the page list via a GET `…/pages` request.\n      required:\n        - id\n        - name\n        - format\n        - created_at\n        - completed_at\n        - status\n        - has_pages\n    InvalidHeaderError:\n      type: object\n      properties:\n        code:\n          type: string\n          description: Error code\n          enum:\n            - InvalidHeader\n        message:\n          type: string\n          description: Error message\n        docs_url:\n          $ref: '#/components/schemas/ErrorDocsUrl'\n      required:\n        - code\n        - message\n      description: A required HTTP header is either not provided of invalid.\n    InvalidFormatError:\n      type: object\n      properties:\n        code:\n          type: string\n          description: Error code\n          enum:\n            - InvalidFormat\n        message:\n          type: string\n          description: Error message\n        docs_url:\n          $ref: '#/components/schemas/ErrorDocsUrl'\n      required:\n        - code\n        - message\n      description: The provided file format is not valid or supported.\n    MissingUploadFileError:\n      type: object\n      properties:\n        code:\n          type: string\n          description: Error code\n          enum:\n            - MissingUploadFile\n        message:\n          type: string\n          description: Error message\n          enum:\n            - The upload request does not include a file.\n        docs_url:\n          $ref: '#/components/schemas/ErrorDocsUrl'\n      required:\n        - code\n        - message\n      description: The multipart request does not contain file data.\n    InvalidUploadFileFieldError:\n      type: object\n      properties:\n        code:\n          type: string\n          description: Error code\n          enum:\n            - InvalidUploadFileField\n        message:\n          type: string\n          description: Error message\n          enum:\n            - The uploaded file multipart field name is incorrect.\n        docs_url:\n          $ref: '#/components/schemas/ErrorDocsUrl'\n      required:\n        - code\n        - message\n      description: The multipart request contain the file data under the wrong field name.\n    RateLimitReachedError:\n      type: object\n      properties:\n        code:\n          type: string\n          description: Error code\n          enum:\n            - RateLimitReached\n        message:\n          type: string\n          description: Error message\n          enum:\n            - The rate limit for the operation has been reached.\n        docs_url:\n          $ref: '#/components/schemas/ErrorDocsUrl'\n      required:\n        - code\n        - message\n      description: The rate limit for the operation has been reached.\n    InvalidUploadLinkError:\n      type: object\n      properties:\n        code:\n          type: string\n          description: Error code\n          enum:\n            - InvalidUploadLink\n        message:\n          type: string\n          description: Error message\n          enum:\n            - The provided link is not a valid URL.\n        docs_url:\n          $ref: '#/components/schemas/ErrorDocsUrl'\n      required:\n        - code\n        - message\n      description: The provided file URL is not valid.\n    FigmaFrameId:\n      type: string\n      description: An identifier of a \"frame\" component within a Figma file.\n    DesignExportTargetFormatEnum:\n      type: string\n      enum:\n        - sketch\n      description: \u003e-\n        The target design file format of a export. (Only Sketch is supported\n        currently.)\n    FigmaDesign:\n      type: object\n      description:  A descriptor of a figma design file\n      properties:\n        format:\n          type: string\n          description: Design format\n          enum:\n            - figma\n        id:\n          type: string\n          description: A unique identifier (UUID) of an imported design file.\n          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$\n        name:\n          type: string\n          nullable: true\n          description: The name of the design.\n        created_at:\n          type: integer\n          format: int32\n          description: UTC timestamp (in milliseconds) when the design file was imported.\n        completed_at:\n          type: integer\n          format: int32\n          nullable: true\n          description: \u003e-\n            UTC timestamp (in milliseconds) when the processing of the design\n            file successfully finished.\n        status:\n          $ref: '#/components/schemas/DesignStatusEnum'\n        has_pages:\n          type: boolean\n          description: \u003e-\n            Flag denoting there are pages in the design file and the client can\n            obtain the page list via a GET `…/pages` request.\n      required:\n        - format\n        - id\n        - name\n        - created_at\n        - completed_at\n        - status\n        - has_pages\n    DesignProcessing:\n      type: object\n      properties:\n        id:\n          type: string\n          description: A unique identifier (UUID) of an imported design file.\n          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$\n        status:\n          $ref: '#/components/schemas/DesignStatusEnum'\n      required:\n        - id\n        - status\n      description: A descriptor of a design file which is being processed.\n    DesignExport:\n      type: object\n      properties:\n        id:\n          type: string\n          description: An identifier of a export task of an imported design file.\n          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$\n        created_at:\n          type: integer\n          format: int32\n          description: UTC timestamp (in milliseconds) when the design export started.\n        completed_at:\n          type: integer\n          format: int32\n          nullable: true\n          description: \u003e-\n            UTC timestamp (in milliseconds) when the design export successfully\n            finished.\n        status:\n          $ref: '#/components/schemas/DesignExportStatusEnum'\n        result_format:\n          $ref: '#/components/schemas/DesignExportTargetFormatEnum'\n        result_url:\n          type: string\n          nullable: true\n          description: \u003e-\n            The URL of the produced design file in the `result_format` format\n            when the export is successfully finished.\n      required:\n        - id\n        - created_at\n        - completed_at\n        - status\n        - result_format\n        - result_url\n    MultipleDesignExportsError:\n      type: object\n      properties:\n        code:\n          type: string\n          description: Error code\n          enum:\n            - MultipleDesignExports\n        message:\n          type: string\n          description: Error message\n          enum:\n            - There can currently only be a single export requested at a time.\n        docs_url:\n          $ref: '#/components/schemas/ErrorDocsUrl'\n      required:\n        - code\n        - message\n      description: The provided file format is not valid or supported.\n    DesignId:\n      type: string\n      description: A unique identifier (UUID) of an imported design file.\n      pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$\n    DesignNotFoundError:\n      type: object\n      properties:\n        code:\n          type: string\n          description: Error code\n          enum:\n            - DesignNotFound\n        message:\n          type: string\n          description: Error message\n          enum:\n            - No such design found.\n        docs_url:\n          $ref: '#/components/schemas/ErrorDocsUrl'\n      required:\n        - code\n        - message\n      description: The specified design file is not found.\n    DesignNotProcessedError:\n      type: object\n      properties:\n        code:\n          type: string\n          description: Error code\n          enum:\n            - DesignNotProcessed\n        message:\n          type: string\n          description: Error message\n          enum:\n            - \u003e-\n              There design has not been processed (or failed) and cannot be\n              exported yet.\n        docs_url:\n          $ref: '#/components/schemas/ErrorDocsUrl'\n      required:\n        - code\n        - message\n      description: The provided file format is not valid or supported.\n    # DesignExportId:\n    #   type: string\n    #   description: An identifier of a export task of an imported design file.\n    #   pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$\n    DesignExportNotFoundError:\n      type: object\n      properties:\n        code:\n          type: string\n          description: Error code\n          enum:\n            - DesignExportNotFound\n        message:\n          type: string\n          description: Error message\n          enum:\n            - No such design export task found.\n        docs_url:\n          $ref: '#/components/schemas/ErrorDocsUrl'\n      required:\n        - code\n        - message\n      description: The specified design file export task is not found.\n    DesignSummary:\n      type: object\n      properties:\n        pages:\n          type: array\n          items:\n            $ref: '#/components/schemas/Page'\n          description: The list of pages within the paged (`has_pages=true`) design file.\n        artboards:\n          type: array\n          items:\n            $ref: '#/components/schemas/Artboard'\n          description: The list of artboards within the design file.\n        id:\n          type: string\n          description: A unique identifier (UUID) of an imported design file.\n          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$\n        name:\n          type: string\n          nullable: true\n          description: The name of the design.\n        format:\n          $ref: '#/components/schemas/DesignFormatEnum'\n        created_at:\n          type: integer\n          format: int32\n          description: UTC timestamp (in milliseconds) when the design file was imported.\n        completed_at:\n          type: integer\n          format: int32\n          nullable: true\n          description: \u003e-\n            UTC timestamp (in milliseconds) when the processing of the design\n            file successfully finished.\n        status:\n          $ref: '#/components/schemas/DesignStatusEnum'\n        has_pages:\n          type: boolean\n          description: \u003e-\n            Flag denoting there are pages in the design file and the client can\n            obtain the page list via a GET `…/pages` request.\n      required:\n        - artboards\n        - id\n        - name\n        - format\n        - created_at\n        - completed_at\n        - status\n        - has_pages\n    Page:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/PageId'\n        name:\n          type: string\n        status:\n          $ref: '#/components/schemas/PageStatusEnum'\n      required:\n        - id\n        - name\n        - status\n    DesignNotPagedError:\n      type: object\n      properties:\n        code:\n          type: string\n          description: Error code\n          enum:\n            - DesignNotPaged\n        message:\n          type: string\n          description: Error message\n          enum:\n            - The design is unpaged.\n        docs_url:\n          $ref: '#/components/schemas/ErrorDocsUrl'\n      required:\n        - code\n        - message\n      description: The specified design file is not paged (`has_pages=false`).\n    Artboard:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/ArtboardId'\n        page_id:\n          type: string\n          description: \u003e-\n            The design file page containing the artboard in case of paged\n            (`has_pages=true`) designs.\n        name:\n          type: string\n          description: The name of the design file artboard.\n        status:\n          $ref: '#/components/schemas/ArtboardStatusEnum'\n        has_content:\n          type: boolean\n          description: \u003e-\n            Flag denoting there is content in the design file artboard and the\n            client can obtain it via a GET `…/content` request.\n      required:\n        - id\n        - name\n        - status\n        - has_content\n    ArtboardNotFoundError:\n      type: object\n      properties:\n        code:\n          type: string\n          description: Error code\n          enum:\n            - ArtboardNotFound\n        message:\n          type: string\n          description: Error message\n          enum:\n            - No such artboard found in the design.\n        docs_url:\n          $ref: '#/components/schemas/ErrorDocsUrl'\n      required:\n        - code\n        - message\n      description: The specified artboard is not present in the design file.\n    ArtboardId:\n      type: string\n      description: An identifier of an artboard within a design file.\n    # OctopusDocument:\n    #   $ref: ./octopus.json#/components/schemas/OctopusDocument\n    DesignArtboardProcessing:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/ArtboardId'\n        design_id:\n          description: A unique identifier (UUID) of an imported design file.\n          $ref: '#/components/schemas/DesignId'\n        status:\n          $ref: '#/components/schemas/ArtboardStatusEnum'\n      required:\n        - id\n        - design_id\n        - status\n      description: A descriptor of a design artboard which is being processed.\n    ArtboardContentNotFoundError:\n      type: object\n      properties:\n        code:\n          type: string\n          description: Error code\n          enum:\n            - ArtboardContentNotFoundError\n        message:\n          type: string\n          description: Error message\n          enum:\n            - The content for the artboard not found.\n        docs_url:\n          $ref: '#/components/schemas/ErrorDocsUrl'\n      required:\n        - code\n        - message\n      description: The specified artboard does not have any content.\n    ErrorDocsUrl:\n      type: string\n      description: The URL of a documentation web page with more info about the error.\n    NoAuthTokenError:\n      type: object\n      properties:\n        code:\n          type: string\n          description: Error code\n          enum:\n            - NoAuthToken\n        message:\n          type: string\n          description: Error message\n          enum:\n            - No authentication token provided.\n        docs_url:\n          $ref: '#/components/schemas/ErrorDocsUrl'\n      required:\n        - code\n        - message\n      description: \u003e-\n        The endpoint requires an auth token provided via the `Authorization`\n        HTTP header.\n    InvalidAuthTokenError:\n      type: object\n      properties:\n        code:\n          type: string\n          description: Error code\n          enum:\n            - InvalidAuthToken\n        message:\n          type: string\n          description: Error message\n          enum:\n            - The provided authentication token is invalid.\n        docs_url:\n          $ref: '#/components/schemas/ErrorDocsUrl'\n      required:\n        - code\n        - message\n      description: \u003e-\n        The auth token provided via the `Authorization` HTTP header is not\n        valid.\n    InactiveAccountError:\n      type: object\n      properties:\n        code:\n          type: string\n          description: Error code\n          enum:\n            - InactiveAccount\n        message:\n          type: string\n          description: Error message\n          enum:\n            - The user account is inactive or blocked.\n        docs_url:\n          $ref: '#/components/schemas/ErrorDocsUrl'\n      required:\n        - code\n        - message\n      description: \u003e-\n        The auth token provided via the `Authorization` HTTP header is\n        associated with an account which is either expired or blocked.\n    DesignFormatEnum:\n      type: string\n      enum:\n        - photoshop\n        - xd\n        - sketch\n        - figma\n        - illustrator\n      description: The design file format.\n    DesignStatusEnum:\n      type: string\n      enum:\n        - uploading\n        - processing\n        - done\n        - failed\n      description: The processing status of the design file.\n    DesignExportStatusEnum:\n      type: string\n      enum:\n        - uploading\n        - processing\n        - done\n        - failed\n      description: The processing status of the design file export task.\n    PageId:\n      type: string\n      description: An identifier of an page within a design file.\n    PageStatusEnum:\n      type: string\n      enum:\n        - uploading\n        - processing\n        - done\n        - failed\n      description: The processing status of a page within a design file.\n    ArtboardStatusEnum:\n      type: string\n      enum:\n        - uploading\n        - processing\n        - done\n        - failed\n      description: The processing status of an artboard within a design file.\n  securitySchemes:\n    JWT:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n      description: 'Authorization: Bearer JWT'\nsecurity:\n  - JWT: []\nexternalDocs:\n  url: https://opendesign.dev/docs/\n  description: Documentation\ntags:\n  - name: Auth\n    description: Authentication/authorization-related endpoints\n  - name: Import\n    description: Design file import endpoints\n  - name: Designs\n    description: Design entity listing and detail endpoints\n  - name: Design Contents\n    description: Design content (Octopus) endpoints\n  - name: Export\n    description: Design file export endpoints\nservers:\n  - url: https://api.opendesign.dev\n"
		}
	},
	"Error": "make ir: path \"/designs/link\": post: responses: 400: contents: application/json: schema: field error: oneOf: discriminator: unable to map InvalidFormat to #/components/schemas/InvalidFormatError"
}