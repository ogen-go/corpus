{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/TeamYouthChina/backend"
		},
		"file": {
			"name": "youthchinaopenapi.yml",
			"path": "youthchinaopenapi.yml",
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.5.3\n  title: YouthChina\n  license:\n    name: MIT\nservers:\n  - url: 'http://youthchina.io/api/v1'\npaths:\n  '/jobs/{id}':\n    get:\n      tags:\n        - Job\n      summary: 获得工作信息\n      description: get job info by id\n      operationId: getJob\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '200':\n          description: job info\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/JobWithMail'\n                  status:\n                    $ref: '#/components/schemas/Status'\n\n    put:\n      summary: 更改工作信息\n      tags:\n        - Job\n      parameters:\n        - name: id\n          required: true\n          in: path\n          description: job id\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JobRequest'\n      responses:\n        '204':\n          description: updated success\n    delete:\n      summary: 删除工作\n      tags:\n        - Job\n      parameters:\n        - name: id\n          required: true\n          in: path\n          description: job id\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '204':\n          description: deleted successed.\n        '404':\n          description: target job does not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorStatus'\n  '/jobs':\n    post:\n      summary: 发布工作\n      tags:\n        - Job\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JobRequest'\n      parameters:\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '200':\n          description: job info\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/JobWithMail'\n                  status:\n                    $ref: '#/components/schemas/Status'\n  # '/jobs/search':\n  #   post:\n  #     tags:\n  #       - Job\n  #     summary: job search\n  #     description: search job by complex conditions\n  #     operationId: searchJob\n  #     requestBody:\n  #       content:\n  #         application/json:\n  #           schema:\n  #             $ref: '#/components/schemas/JobSearch'\n  #     parameters:\n  #       - in: header\n  #         name: X-AUTHENTICATION\n  #         required: true\n  #         description: authentication header\n  #         schema:\n  #           type: string\n  #       - name: offset\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: limit\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: page\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '201':\n  #         description: search result\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 content:\n  #                   type: object\n  #                   properties:\n  #                     data:\n  #                       type: array\n  #                       items:\n  #                         $ref: '#/components/schemas/Job'\n  #                     offset:\n  #                       type: integer\n  #                     limit:\n  #                       type: integer\n  #                     page_count:\n  #                       type: integer\n  #                     item_count:\n  #                       type: integer\n  #                     page_index:\n  #                       type: integer\n  #                     is_first:\n  #                       type: boolean\n  #                     is_last:\n  #                       type: boolean\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n\n  '/jobs/{id}/apply':\n    post:\n      summary: 发起申请不提交任何东西\n      tags:\n        - Application\n      parameters:\n        - name: id\n          in: path\n          description: id of the job\n          required: true\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '201':\n          description: apply successful\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/Application'\n                  status:\n                    $ref: '#/components/schemas/Status'\n        '403':\n          description: cannot apply for job\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - status\n                properties:\n                  status:\n                    $ref: '#/components/schemas/Status'\n              example:\n                status:\n                  code: 4032\n                  reason: cannot apply for job because it has passed deadline\n        '404':\n          description: job not found\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - status\n                properties:\n                  status:\n                    $ref: '#/components/schemas/Status'\n              example:\n                status:\n                  code: 4042\n                  reason: Cannot find job with id 124\n  '/jobs/{id}/apply/pdf/email':\n    post:\n      summary: 用pdf申请工作并且发送邮件\n      tags:\n        - Application\n      description: send resume to company\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: string\n              format: binary\n              description: video to uploaded\n      parameters:\n        - name: pdfid\n          in: path\n          description: id of the job\n          required: true\n          schema:\n            type: integer\n        - name: id\n          in: path\n          description: id of the job\n          required: true\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '201':\n          description: successfully send email\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/Application'\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/jobs/{id}/apply/online/email':\n    post:\n      summary: 用电子简历申请工作并且发送邮件\n      tags:\n        - Application\n      description: send resume to company\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: string\n              format: binary\n              description: video to uploaded\n      parameters:\n        - name: onlineid\n          in: path\n          description: id of the job\n          required: true\n          schema:\n            type: integer\n        - name: id\n          in: path\n          description: id of the job\n          required: true\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '201':\n          description: successfully send email\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/Application'\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/applicants/{id}/applications':\n    get:\n      summary: 获得所有申请的公司\n      tags:\n        - Application\n      parameters:\n        - name: id\n          in: path\n          description: user id\n          required: true\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n        - name: offset\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: limit\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: page\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n      responses:\n        '200':\n          description: return the application of users\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/Application'\n                      offset:\n                        type: integer\n                      limit:\n                        type: integer\n                      page_count:\n                        type: integer\n                      item_count:\n                        type: integer\n                      page_index:\n                        type: integer\n                      is_first:\n                        type: boolean\n                      is_last:\n                        type: boolean\n                  status:\n                    $ref: '#/components/schemas/Status'\n        '404':\n          description: user not exist\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    $ref: '#/components/schemas/Status'\n              example:\n                status:\n                  code: 4041\n                  reason: Cannot find user with id 14\n  '/jobs/{id}/attention':\n    put:\n      summary: 收藏工作\n      tags:\n        - Job\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '201':\n          description: collect successful\n        '400':\n          description: 'cannot collect this job, maybe the job has already deleted'\n  '/users/{id}/attentions':\n    get:\n      summary: 获得关注的文章，工作等\n      tags:\n        - Collection\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - name: type\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - job\n              - company\n              - question\n              - answer\n              - article\n              - video\n              - editorial\n          description: determine what part of attention list to return\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '200':\n          description: return one of the following based on the type parameter\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      company:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/Company'\n                      job:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/Job'\n                      question:\n                        $ref: '#/components/schemas/QuestionBasic'\n                      answer:\n                        $ref: '#/components/schemas/AnswerBasic'\n                      article:\n                        $ref: '#/components/schemas/Article'\n                      video:\n                        $ref: '#/components/schemas/Video'\n                      editorial:\n                        $ref: '#/components/schemas/Editorial'\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/my':\n    get:\n      summary: 获得我发布的文章，职位等\n      tags:\n        - My\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - name: type\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - job\n              - company\n              - question\n              - answer\n              - article\n              - video\n          description: determine what part of attention list to return\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '200':\n          description: return one of the following based on the type parameter\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      companies:\n                        type: array\n                        items:\n                          type: object\n                          required:\n                            - id\n                            - company\n                          properties:\n                            id:\n                              type: integer\n                            company:\n                              $ref: '#/components/schemas/Company'\n                      jobs:\n                        type: array\n                        items:\n                          type: object\n                          required:\n                            - id\n                            - job\n                          properties:\n                            id:\n                              type: integer\n                            job:\n                              $ref: '#/components/schemas/Job'\n                      questions:\n                        type: array\n                        items:\n                          type: object\n                          required:\n                            - id\n                            - questions\n                          properties:\n                            id:\n                              type: integer\n                            question:\n                              $ref: '#/components/schemas/QuestionBasic'\n                      answers:\n                        type: array\n                        items:\n                          type: object\n                          required:\n                            - id\n                            - answers\n                          properties:\n                            id:\n                              type: integer\n                            answer:\n                              $ref: '#/components/schemas/AnswerBasic'\n                      articles:\n                        type: array\n                        items:\n                          type: object\n                          required:\n                            - id\n                            - article\n                          properties:\n                            id:\n                              type: integer\n                            article:\n                              $ref: '#/components/schemas/Article'\n                      videos:\n                        type: array\n                        items:\n                          type: object\n                          required:\n                            - id\n                            - video\n                          properties:\n                            id:\n                              type: integer\n                            video:\n                              $ref: '#/components/schemas/Video'\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/users/{user_id}/influence':\n    get:\n      summary: 查看影响力\n      tags:\n        - My\n      parameters:\n        - name: user_id\n          in: path\n          required: true\n          schema:\n            type: integer\n        - name: X-AUTHENTICATION\n          in: header\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: the influence score\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      influence_score:\n                        type: integer\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/notifications/{user_id}':\n    get:\n      tags:\n        - My\n      parameters:\n        - name: user_id\n          in: path\n          description: user id\n          required: true\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n        - name: offset\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: limit\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: page\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n      responses:\n        '200':\n          description: return the notifications of users\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/Notification'\n                      offset:\n                        type: integer\n                      limit:\n                        type: integer\n                      page_count:\n                        type: integer\n                      item_count:\n                        type: integer\n                      page_index:\n                        type: integer\n                      is_first:\n                        type: boolean\n                      is_last:\n                        type: boolean\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/notifications/{notification_id}/read':\n    patch:\n      tags:\n        - My\n      parameters:\n        - name: notification_id\n          in: path\n          required: true\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '200':\n          description: the notification is read\n  '/jobs/attentions/{job_id}':\n    delete:\n      summary: 删除收藏的工作\n      tags:\n        - Collection\n      parameters:\n        - name: job_id\n          required: true\n          in: path\n          schema:\n            type: integer\n          description: id of collection\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '204':\n          description: delete target collection\n  '/companies/attentions/{company_id}':\n    delete:\n      summary: 删除收藏的公司\n      tags:\n        - Collection\n      parameters:\n        - name: company_id\n          required: true\n          in: path\n          schema:\n            type: integer\n          description: id of collection\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '204':\n          description: delete target collection\n  '/questions/attentions/{question_id}':\n    delete:\n      summary: 删除收藏的问题\n      tags:\n        - Collection\n      parameters:\n        - name: question_id\n          required: true\n          in: path\n          schema:\n            type: integer\n          description: id of collection\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '204':\n          description: delete target collection\n  '/answers/attentions/{answer_id}':\n    delete:\n      summary: 删除收藏的答案\n      tags:\n        - Collection\n      parameters:\n        - name: answer_id\n          required: true\n          in: path\n          schema:\n            type: integer\n          description: id of collection\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '204':\n          description: delete target collection\n  '/editorials/attentions/{editorial_id}':\n    delete:\n      summary: 删除收藏的短则\n      tags:\n        - Collection\n      parameters:\n        - name: editorial_id\n          required: true\n          in: path\n          schema:\n            type: integer\n          description: id of collection\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '204':\n          description: delete target collection\n  '/articles/attentions/{article_id}':\n    delete:\n      summary: 删除收藏的文章\n      tags:\n        - Collection\n      parameters:\n        - name: article_id\n          required: true\n          in: path\n          schema:\n            type: integer\n          description: id of collection\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '204':\n          description: delete target collection\n  '/questions':\n    post:\n      summary: 发布问题\n      tags:\n        - Question\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/QuestionRequest'\n      parameters:\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '201':\n          description: create question\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/Question'\n                  status:\n                    $ref: '#/components/schemas/Status'\n        '400':\n          description: cannot create question due to user's error\n    # get:\n    #   tags:\n    #     - Question\n    #   parameters:\n    #     - name: company\n    #       in: query\n    #       description: company name\n    #       schema:\n    #         type: string\n    #     - name: job\n    #       in: query\n    #       description: job name\n    #       schema:\n    #         type: string\n    #     - in: header\n    #       name: X-AUTHENTICATION\n    #       required: true\n    #       description: authentication header\n    #       schema:\n    #         type: string\n    #     - name: offset\n    #       in: query\n    #       required: false\n    #       description: start index of element\n    #       schema:\n    #         type: string\n    #     - name: limit\n    #       in: query\n    #       required: false\n    #       description: start index of element\n    #       schema:\n    #         type: string\n    #     - name: page\n    #       in: query\n    #       required: false\n    #       description: start index of element\n    #       schema:\n    #         type: string\n    #   responses:\n    #     '200':\n    #       description: search job\n    #       content:\n    #         application/json:\n    #           schema:\n    #             type: object\n    #             properties:\n    #               content:\n    #                 properties:\n    #                   data:\n    #                     type: array\n    #                     items:\n    #                       $ref: '#/components/schemas/Question'\n    #                   offset:\n    #                     type: integer\n    #                   limit:\n    #                     type: integer\n    #                   page_count:\n    #                     type: integer\n    #                   item_count:\n    #                     type: integer\n    #                   page_index:\n    #                     type: integer\n    #                   is_first:\n    #                     type: boolean\n    #                   is_last:\n    #                     type: boolean\n    #               status:\n    #                 $ref: '#/components/schemas/Status'\n    #     '400':\n    #       description: cannot create question due to user's error\n  '/questions/{id}':\n    get:\n      summary: 获得问题\n      tags:\n        - Question\n      parameters:\n        - name: id\n          required: true\n          in: path\n          description: question id\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '200':\n          description: return target question\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/Question'\n                  status:\n                    $ref: '#/components/schemas/Status'\n        '404':\n          description: target question does not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorStatus'\n    delete:\n      summary: 删除问题\n      tags:\n        - Question\n      parameters:\n        - name: id\n          required: true\n          in: path\n          description: question id\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '204':\n          description: deleted successed.\n        '404':\n          description: target question does not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorStatus'\n    put:\n      summary: 更新问题\n      tags:\n        - Question\n      parameters:\n        - name: id\n          required: true\n          in: path\n          description: id of the question\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/QuestionRequest'\n      responses:\n        '204':\n          description: updated success\n  '/questions/{id}/answers':\n    get:\n      summary: 获得问题的答案\n      tags:\n        - Question\n      parameters:\n        - name: id\n          required: true\n          in: path\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n        - name: offset\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: limit\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: page\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n      responses:\n        '200':\n          description: the answer list of target question\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/AnswerBasic'\n                      offset:\n                        type: integer\n                      limit:\n                        type: integer\n                      page_count:\n                        type: integer\n                      item_count:\n                        type: integer\n                      page_index:\n                        type: integer\n                      is_first:\n                        type: boolean\n                      is_last:\n                        type: boolean\n                  status:\n                    $ref: '#/components/schemas/Status'\n    post:\n      summary: 发布答案\n      tags:\n        - Answer\n      parameters:\n        - name: id\n          required: true\n          in: path\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - body\n              properties:\n                body:\n                  $ref: '#/components/schemas/RichText'\n                is_anonymous:\n                  type: boolean\n                  default: false\n      responses:\n        '201':\n          description: target answer\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/Answer'\n                  status:\n                    $ref: '#/components/schemas/Status'\n  # '/questions/{questionId}/invite/{userId}':\n  #   put:\n  #     tags:\n  #       - Question\n  #     parameters:\n  #       - name: questionId\n  #         required: true\n  #         in: path\n  #         schema:\n  #           type: integer\n  #       - name: userId\n  #         required: true\n  #         in: path\n  #         schema:\n  #           type: integer\n  #       - in: header\n  #         name: X-AUTHENTICATION\n  #         required: true\n  #         description: authentication header\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '201':\n  #         description: invitation send successfully.\n  # '/questions/{id}/invite':\n  #   put:\n  #     tags:\n  #       - Question\n  #     parameters:\n  #       - name: id\n  #         required: true\n  #         in: path\n  #         schema:\n  #           type: integer\n  #       - in: header\n  #         name: X-AUTHENTICATION\n  #         required: true\n  #         description: authentication header\n  #         schema:\n  #           type: string\n  #     requestBody:\n  #       content:\n  #         application/json:\n  #           schema:\n  #             type: object\n  #             properties:\n  #               invited:\n  #                 type: array\n  #                 items:\n  #                   type: integer\n  #     responses:\n  #       '201':\n  #         description: invitation send successfully.\n  '/questions/{id}/attention':\n    put:\n      summary: 收藏问题\n      tags:\n        - Question\n      parameters:\n        - name: id\n          required: true\n          in: path\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '201':\n          description: upvote successfullly\n  '/answers/{id}':\n    get:\n      summary: 获得答案\n      tags:\n        - Answer\n      parameters:\n        - name: id\n          required: true\n          in: path\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '200':\n          description: target answer\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/Answer'\n                  status:\n                    $ref: '#/components/schemas/Status'\n    put:\n      summary: 更改答案\n      tags:\n        - Answer\n      parameters:\n        - name: id\n          required: true\n          in: path\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AnswerRequest'\n      responses:\n        '200':\n          description: target answer\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/Answer'\n                  status:\n                    $ref: '#/components/schemas/Status'\n    delete:\n      summary: 删除答案\n      tags:\n        - Answer\n      parameters:\n        - name: id\n          required: true\n          in: path\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '204':\n          description: success\n        '403':\n          description: do not have authority to delete answer\n  '/answers/{id}/comments':\n    post:\n      summary: 发布回答评论\n      tags:\n        - Answer\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CommentRequest'\n      responses:\n        '201':\n          description: comments successfully\n    get:\n      summary: 获得回答全部评论\n      tags:\n        - Answer\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n        - name: offset\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: limit\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: page\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/Comment'\n                      offset:\n                        type: integer\n                      limit:\n                        type: integer\n                      page_count:\n                        type: integer\n                      item_count:\n                        type: integer\n                      page_index:\n                        type: integer\n                      is_first:\n                        type: boolean\n                      is_last:\n                        type: boolean\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/answers/{id}/upvote':\n    put:\n      summary: 点赞答案\n      tags:\n        - Answer\n      parameters:\n        - name: id\n          required: true\n          in: path\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '201':\n          description: upvote successfullly\n    # delete:\n    #   summary: 取消答案\n    #   tags:\n    #     - Answer\n    #   parameters:\n    #     - name: id\n    #       required: true\n    #       in: path\n    #       schema:\n    #         type: integer\n    #     - in: header\n    #       name: X-AUTHENTICATION\n    #       required: true\n    #       description: authentication header\n    #       schema:\n    #         type: string\n    #   responses:\n    #     '201':\n    #       description: upvote successfullly\n  '/answers/{id}/downvote':\n    put:\n      summary: 反对答案\n      tags:\n        - Answer\n      parameters:\n        - name: id\n          required: true\n          in: path\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '201':\n          description: downvote successfullly\n    # delete:\n    #   summary: 取消反对\n    #   tags:\n    #     - Answer\n    #   parameters:\n    #     - name: id\n    #       required: true\n    #       in: path\n    #       schema:\n    #         type: integer\n    #     - in: header\n    #       name: X-AUTHENTICATION\n    #       required: true\n    #       description: authentication header\n    #       schema:\n    #         type: string\n    #   responses:\n    #     '201':\n    #       description: downvote successfullly\n  '/answers/{id}/vote':\n    delete:\n      summary: 取消点赞或反对\n      tags:\n        - Answer\n      parameters:\n        - name: id\n          schema:\n            type: integer\n          in: path\n          required: true\n          description: editorials id\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful\n  '/answers/{id}/attention':\n    put:\n      summary: 收藏回答\n      tags:\n        - Answer\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '201':\n          description: collect successful\n        '400':\n          description: 'cannot collect this answer, maybe the answer has already deleted'\n  '/applicants/resgister':\n    post:\n      tags:\n        - Security\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - date_of_birth\n                - password\n                - phonenumber\n                - email\n                - current_city\n                - prefer_industry\n                - prefer_city\n              properties:\n                username:\n                  type: string\n                date_of_birth:\n                  type: string\n                password:\n                  type: string\n                phone_number:\n                  type: string\n                email:\n                  type: string\n                nation:\n                  type: string\n                gender:\n                  type: string\n                age:\n                  type: integer\n      parameters:\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '201':\n          description: register success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/User'\n                  status:\n                    $ref: '#/components/schemas/Status'\n\n  '/users/{id}':\n    patch:\n      parameters:\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      tags:\n        - Security\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                avatar_url:\n                  type: string\n                  description: avatar's doc id\n                first_name:\n                  type: string\n                last_name:\n                  type: string\n                data_of_birth:\n                  type: number\n                  description: birth date timestamp in millionseconds\n      responses:\n        200:\n          description: update success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/User'\n                  status:\n                    $ref: '#/components/schemas/Status'\n        403:\n          description: cannot modify, most likely because the user is not the logged in one.\n        400:\n          description: cannot modify, most likely because wrong type in request body.\n  '/me':\n    get:\n      parameters:\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      tags:\n        - Security\n      responses:\n        '200':\n          description: Return current logined user\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/User'\n                  status:\n                    $ref: '#/components/schemas/Status'\n        '401':\n          description: not loged in\n  '/login':\n    post:\n      parameters:\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      tags:\n        - Security\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - identifier\n                - password\n              properties:\n                identifier:\n                  type: integer\n                password:\n                  type: string\n      responses:\n        '200':\n          description: login success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/User'\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/articles/{id}':\n    get:\n      summary: 获取文章\n      tags:\n        - Article\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/Article'\n                  status:\n                    $ref: '#/components/schemas/Status'\n    put:\n      summary: 更新文章\n      tags:\n        - Article\n      parameters:\n        - name: id\n          required: true\n          in: path\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ArticleRequest'\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/Article'\n                  status:\n                    $ref: '#/components/schemas/Status'\n    delete:\n      summary: 删除文章\n      tags:\n        - Article\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '204':\n          description: delete successfully\n        '403':\n          description: no auth\n  '/articles/{id}/attention':\n    put:\n      summary: 收藏文章\n      tags:\n        - Article\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '201':\n          description: collect successful\n        '400':\n          description: 'cannot collect this article, maybe the article has already deleted'\n  '/articles':\n    post:\n      summary: 发布文章\n      parameters:\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      tags:\n        - Article\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ArticleRequest'\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/Article'\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/articles/{id}/comments':\n    post:\n      summary: 发布文章评论\n      tags:\n        - Article\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CommentRequest'\n      responses:\n        '201':\n          description: comments successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/Comment'\n                  status:\n                    $ref: '#/components/schemas/Status'\n    get:\n      summary: 获得文章全部评论\n      tags:\n        - Article\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n        - name: offset\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: limit\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: page\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/Comment'\n                      offset:\n                        type: integer\n                      limit:\n                        type: integer\n                      page_count:\n                        type: integer\n                      item_count:\n                        type: integer\n                      page_index:\n                        type: integer\n                      is_first:\n                        type: boolean\n                      is_last:\n                        type: boolean\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/articles/{id}/upvote':\n    put:\n      summary: 点赞文章\n      tags:\n        - Article\n      parameters:\n        - name: id\n          required: true\n          in: path\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '201':\n          description: upvote successfullly\n    # delete:\n    #   summary: 取消点赞\n    #   tags:\n    #     - Article\n    #   parameters:\n    #     - name: id\n    #       required: true\n    #       in: path\n    #       schema:\n    #         type: integer\n    #     - in: header\n    #       name: X-AUTHENTICATION\n    #       required: true\n    #       description: authentication header\n    #       schema:\n    #         type: string\n    #   responses:\n    #     '201':\n    #       description: upvote successfullly\n  '/articles/{id}/downvote':\n    put:\n      summary: 反对文章\n      tags:\n        - Article\n      parameters:\n        - name: id\n          required: true\n          in: path\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '201':\n          description: downvote successfullly\n    # delete:\n    #   summary: 取消反对\n    #   tags:\n    #     - Article\n    #   parameters:\n    #     - name: id\n    #       required: true\n    #       in: path\n    #       schema:\n    #         type: integer\n    #     - in: header\n    #       name: X-AUTHENTICATION\n    #       required: true\n    #       description: authentication header\n    #       schema:\n    #         type: string\n    #   responses:\n    #     '201':\n    #       description: downvote successfullly\n  '/articles/{id}/vote':\n    delete:\n      summary: 取消点赞或反对\n      tags:\n        - Article\n      parameters:\n        - name: id\n          schema:\n            type: integer\n          in: path\n          required: true\n          description: editorials id\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful\n  # '/articles/{id}/comments':\n  #   post:\n  #     tags:\n  #       - Article\n  #     parameters:\n  #       - name: id\n  #         in: path\n  #         schema:\n  #           type: integer\n  #         required: true\n  #       - in: header\n  #         name: X-AUTHENTICATION\n  #         required: true\n  #         description: authentication header\n  #         schema:\n  #           type: string\n  #     requestBody:\n  #       content:\n  #         application/json:\n  #           schema:\n  #             $ref: '#/components/schemas/CommentRequest'\n  #     responses:\n  #       '201':\n  #         description: successful\n  #   get:\n  #     tags:\n  #       - Article\n  #     parameters:\n  #       - name: id\n  #         in: path\n  #         schema:\n  #           type: integer\n  #         required: true\n  #       - in: header\n  #         name: X-AUTHENTICATION\n  #         required: true\n  #         description: authentication header\n  #         schema:\n  #           type: string\n  #       - name: offset\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: limit\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: page\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 content:\n  #                   type: object\n  #                   properties:\n  #                     data:\n  #                       type: array\n  #                       items:\n  #                         $ref: '#/components/schemas/Comment'\n  #                     offset:\n  #                       type: integer\n  #                     limit:\n  #                       type: integer\n  #                     page_count:\n  #                       type: integer\n  #                     item_count:\n  #                       type: integer\n  #                     page_index:\n  #                       type: integer\n  #                     is_first:\n  #                       type: boolean\n  #                     is_last:\n  #                       type: boolean\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  '/companies/{id}':\n    get:\n      summary: 获取公司信息\n      tags:\n        - Company\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: company id\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/Company'\n                  status:\n                    $ref: '#/components/schemas/Status'\n    put:\n      summary: 更改公司信息\n      tags:\n        - Company\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: company id\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CompanyRequest'\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/Company'\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/companies':\n    post:\n      summary: 发布公司\n      parameters:\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      tags:\n        - Company\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CompanyRequest'\n      responses:\n        '201':\n          description: successful\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/Company'\n                  status:\n                    $ref: '#/components/schemas/Status'\n        '403':\n          description: do not have privilege to create company\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorStatus'\n  '/companies/{id}/attention':\n    put:\n      summary: 收藏公司\n      tags:\n        - Company\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '201':\n          description: collect successful\n        '400':\n          description: 'cannot collect this job, maybe the job has already deleted'\n  '/companies/{id}/jobs':\n    get:\n      summary: Get all jobs belong to certain company\n      tags:\n        - Company\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - name: X-AUTHENTICATION\n          in: header\n          required: true\n          schema:\n            type: string\n        - name: offset\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: limit\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: page\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n      responses:\n        '201':\n          description: sucessful\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/JobWithoutCompany'\n                      offset:\n                        type: integer\n                      limit:\n                        type: integer\n                      page_count:\n                        type: integer\n                      item_count:\n                        type: integer\n                      page_index:\n                        type: integer\n                      is_first:\n                        type: boolean\n                      is_last:\n                        type: boolean\n                  status:\n                    $ref: '#/components/schemas/Status'\n        '404':\n          description: The company not found.\n  # '/videos/{id}':\n  #   get:\n  #     tags:\n  #       - Video\n  #     parameters:\n  #       - name: id\n  #         in: path\n  #         schema:\n  #           type: integer\n  #         required: true\n  #       - in: header\n  #         name: X-AUTHENTICATION\n  #         required: true\n  #         description: authentication header\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 content:\n  #                   $ref: '#/components/schemas/Video'\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  #   delete:\n  #     tags:\n  #       - Video\n  #     parameters:\n  #       - name: id\n  #         in: path\n  #         schema:\n  #           type: integer\n  #         required: true\n  #       - in: header\n  #         name: X-AUTHENTICATION\n  #         required: true\n  #         description: authentication header\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '204':\n  #         description: successful\n  # '/videos':\n  #   post:\n  #     parameters:\n  #       - in: header\n  #         name: X-AUTHENTICATION\n  #         required: true\n  #         description: authentication header\n  #         schema:\n  #           type: string\n  #     tags:\n  #       - Video\n  #     requestBody:\n  #       content:\n  #         multipart/form-data:\n  #           schema:\n  #             type: string\n  #             format: binary\n  #             description: video to uploaded\n  #     responses:\n  #       '201':\n  #         description: successful\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 content:\n  #                   $ref: '#/components/schemas/Video'\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  # '/videos/{id}/comments':\n  #   post:\n  #     tags:\n  #       - Video\n  #     parameters:\n  #       - name: id\n  #         schema:\n  #           type: integer\n  #         in: path\n  #         required: true\n  #         description: video id\n  #       - in: header\n  #         name: X-AUTHENTICATION\n  #         required: true\n  #         description: authentication header\n  #         schema:\n  #           type: string\n  #     requestBody:\n  #       content:\n  #         application/json:\n  #           schema:\n  #             $ref: '#/components/schemas/CommentRequest'\n  #     responses:\n  #       '201':\n  #         description: successful\n  #   get:\n  #     tags:\n  #       - Video\n  #     parameters:\n  #       - name: id\n  #         schema:\n  #           type: integer\n  #         in: path\n  #         required: true\n  #         description: video id\n  #       - in: header\n  #         name: X-AUTHENTICATION\n  #         required: true\n  #         description: authentication header\n  #         schema:\n  #           type: string\n  #       - name: offset\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: limit\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: page\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 content:\n  #                   type: object\n  #                   properties:\n  #                     data:\n  #                       type: array\n  #                       items:\n  #                         $ref: '#/components/schemas/Comment'\n  #                     offset:\n  #                       type: integer\n  #                     limit:\n  #                       type: integer\n  #                     page_count:\n  #                       type: integer\n  #                     item_count:\n  #                       type: integer\n  #                     page_index:\n  #                       type: integer\n  #                     is_first:\n  #                       type: boolean\n  #                     is_last:\n  #                       type: boolean\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  # '/videos/{id}/upvote':\n  #   put:\n  #     tags:\n  #       - Video\n  #     parameters:\n  #       - name: id\n  #         schema:\n  #           type: integer\n  #         in: path\n  #         required: true\n  #         description: video id\n  #       - in: header\n  #         name: X-AUTHENTICATION\n  #         required: true\n  #         description: authentication header\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful\n  # '/videos/{id}/attention':\n  #   put:\n  #     tags:\n  #       - Video\n  #     parameters:\n  #       - name: id\n  #         schema:\n  #           type: integer\n  #         in: path\n  #         required: true\n  #         description: video id\n  #       - in: header\n  #         name: X-AUTHENTICATION\n  #         required: true\n  #         description: authentication header\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: successful\n  '/editorials/{id}':\n    get:\n      summary: 获取短则\n      tags:\n        - Editorials\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/Editorial'\n                  status:\n                    $ref: '#/components/schemas/Status'\n    delete:\n      summary: 删除短则\n      tags:\n        - Editorials\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '204':\n          description: successful\n    put:\n      summary: 更改短则\n      tags:\n        - Editorials\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContentRequestWithCompany'\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/Editorial'\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/editorials':\n    post:\n      summary: 发布短则\n      parameters:\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      tags:\n        - Editorials\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContentRequestWithCompany'\n      responses:\n        '201':\n          description: successful\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/Editorial'\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/editorials/{id}/comments':\n    post:\n      summary: 发布短则评论\n      tags:\n        - Editorials\n      parameters:\n        - name: id\n          schema:\n            type: integer\n          in: path\n          required: true\n          description: editorials id\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CommentRequest'\n      responses:\n        '201':\n          description: successful\n    get:\n      summary: 获得短则全部评论\n      tags:\n        - Editorials\n      parameters:\n        - name: id\n          schema:\n            type: integer\n          in: path\n          required: true\n          description: video id\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n        - name: offset\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: limit\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: page\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/Comment'\n                      offset:\n                        type: integer\n                      limit:\n                        type: integer\n                      page_count:\n                        type: integer\n                      item_count:\n                        type: integer\n                      page_index:\n                        type: integer\n                      is_first:\n                        type: boolean\n                      is_last:\n                        type: boolean\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/editorials/{id}/upvote':\n    put:\n      summary: 点赞短则\n      tags:\n        - Editorials\n      parameters:\n        - name: id\n          schema:\n            type: integer\n          in: path\n          required: true\n          description: editorials id\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful\n    # delete:\n    #   summary: 取消点赞\n    #   tags:\n    #     - Editorials\n    #   parameters:\n    #     - name: id\n    #       schema:\n    #         type: integer\n    #       in: path\n    #       required: true\n    #       description: editorials id\n    #     - in: header\n    #       name: X-AUTHENTICATION\n    #       required: true\n    #       description: authentication header\n    #       schema:\n    #         type: string\n    #   responses:\n    #     '200':\n    #       description: successful\n  '/editorials/{id}/downvote':\n    put:\n      summary: 反对短则\n      tags:\n        - Editorials\n      parameters:\n        - name: id\n          schema:\n            type: integer\n          in: path\n          required: true\n          description: editorials id\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful\n    # delete:\n    #   summary: 取消反对\n    #   tags:\n    #     - Editorials\n    #   parameters:\n    #     - name: id\n    #       schema:\n    #         type: integer\n    #       in: path\n    #       required: true\n    #       description: editorials id\n    #     - in: header\n    #       name: X-AUTHENTICATION\n    #       required: true\n    #       description: authentication header\n    #       schema:\n    #         type: string\n    #   responses:\n    #     '200':\n    #       description: successful\n  '/editorials/{id}/vote':\n    delete:\n      summary: 取消点赞或反对\n      tags:\n        - Editorials\n      parameters:\n        - name: id\n          schema:\n            type: integer\n          in: path\n          required: true\n          description: editorials id\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful\n  '/editorials/{id}/attention':\n    put:\n      summary: 收藏短则\n      tags:\n        - Editorials\n      parameters:\n        - name: id\n          schema:\n            type: integer\n          in: path\n          required: true\n          description: editorials id\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful\n  # '/job-for-you/intern':\n  #   get:\n  #     tags:\n  #       - Discover\n  #     parameters:\n  #       - name: offset\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: limit\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: page\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: success\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 content:\n  #                   type: object\n  #                   properties:\n  #                     data:\n  #                       type: array\n  #                       items:\n  #                         $ref: '#/components/schemas/Job'\n  #                     offset:\n  #                       type: integer\n  #                     limit:\n  #                       type: integer\n  #                     page_count:\n  #                       type: integer\n  #                     item_count:\n  #                       type: integer\n  #                     page_index:\n  #                       type: integer\n  #                     is_first:\n  #                       type: boolean\n  #                     is_last:\n  #                       type: boolean\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  # '/job-for-you/campus':\n  #   get:\n  #     tags:\n  #       - Discover\n  #     parameters:\n  #       - name: offset\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: limit\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: page\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: success\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 content:\n  #                   type: object\n  #                   properties:\n  #                     data:\n  #                       type: array\n  #                       items:\n  #                         $ref: '#/components/schemas/Job'\n  #                     offset:\n  #                       type: integer\n  #                     limit:\n  #                       type: integer\n  #                     page_count:\n  #                       type: integer\n  #                     item_count:\n  #                       type: integer\n  #                     page_index:\n  #                       type: integer\n  #                     is_first:\n  #                       type: boolean\n  #                     is_last:\n  #                       type: boolean\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  # '/job-for-you/general':\n  #   get:\n  #     tags:\n  #       - Discover\n  #     parameters:\n  #       - name: offset\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: limit\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: page\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: success\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 content:\n  #                   type: object\n  #                   properties:\n  #                     data:\n  #                       type: array\n  #                       items:\n  #                         $ref: '#/components/schemas/Job'\n  #                     offset:\n  #                       type: integer\n  #                     limit:\n  #                       type: integer\n  #                     page_count:\n  #                       type: integer\n  #                     item_count:\n  #                       type: integer\n  #                     page_index:\n  #                       type: integer\n  #                     is_first:\n  #                       type: boolean\n  #                     is_last:\n  #                       type: boolean\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  # '/home/new':\n  #   get:\n  #     tags:\n  #       - Discover\n  #     parameters:\n  #       - name: offset\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: limit\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: page\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: success\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 content:\n  #                   type: object\n  #                   properties:\n  #                     data:\n  #                       type: array\n  #                       items:\n  #                         $ref: '#/components/schemas/Job'\n  #                     offset:\n  #                       type: integer\n  #                     limit:\n  #                       type: integer\n  #                     page_count:\n  #                       type: integer\n  #                     item_count:\n  #                       type: integer\n  #                     page_index:\n  #                       type: integer\n  #                     is_first:\n  #                       type: boolean\n  #                     is_last:\n  #                       type: boolean\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  # '/home/hot':\n  #   get:\n  #     tags:\n  #       - Discover\n  #     parameters:\n  #       - name: offset\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: limit\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: page\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: success\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 content:\n  #                   type: object\n  #                   properties:\n  #                     data:\n  #                       type: array\n  #                       items:\n  #                         $ref: '#/components/schemas/Job'\n  #                     offset:\n  #                       type: integer\n  #                     limit:\n  #                       type: integer\n  #                     page_count:\n  #                       type: integer\n  #                     item_count:\n  #                       type: integer\n  #                     page_index:\n  #                       type: integer\n  #                     is_first:\n  #                       type: boolean\n  #                     is_last:\n  #                       type: boolean\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  '/discovery/users':\n    get:\n      summary: 推荐用户\n      tags:\n        - Discover\n      parameters:\n        - name: offset\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: limit\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: page\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n      responses:\n        '200':\n          description: recommend users\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/User'\n                      offset:\n                        type: integer\n                      limit:\n                        type: integer\n                      page_count:\n                        type: integer\n                      item_count:\n                        type: integer\n                      page_index:\n                        type: integer\n                      is_first:\n                        type: boolean\n                      is_last:\n                        type: boolean\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/discovery/companies':\n    get:\n      summary: 推荐公司\n      tags:\n        - Discover\n      parameters:\n        - name: offset\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: limit\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: page\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n      responses:\n        '200':\n          description: recommend company\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/Company'\n                      offset:\n                        type: integer\n                      limit:\n                        type: integer\n                      page_count:\n                        type: integer\n                      item_count:\n                        type: integer\n                      page_index:\n                        type: integer\n                      is_first:\n                        type: boolean\n                      is_last:\n                        type: boolean\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/disconvery/articles':\n    get:\n      summary: 推荐文章\n      tags:\n        - Discover\n      parameters:\n        - name: offset\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: limit\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: page\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n      responses:\n        '200':\n          description: recommend users\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/Article'\n                      offset:\n                        type: integer\n                      limit:\n                        type: integer\n                      page_count:\n                        type: integer\n                      item_count:\n                        type: integer\n                      page_index:\n                        type: integer\n                      is_first:\n                        type: boolean\n                      is_last:\n                        type: boolean\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/discovery/questions':\n    get:\n      summary: 推荐问题\n      tags:\n        - Discover\n      parameters:\n        - name: offset\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: limit\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: page\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n      responses:\n        '200':\n          description: recommend questions\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/Question'\n                      offset:\n                        type: integer\n                      limit:\n                        type: integer\n                      page_count:\n                        type: integer\n                      item_count:\n                        type: integer\n                      page_index:\n                        type: integer\n                      is_first:\n                        type: boolean\n                      is_last:\n                        type: boolean\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/discovery/jobs':\n    get:\n      summary: 推荐工作\n      tags:\n        - Discover\n      parameters:\n        - name: offset\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: limit\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: page\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n      responses:\n        '200':\n          description: recommend jobs\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/Job'\n                      offset:\n                        type: integer\n                      limit:\n                        type: integer\n                      page_count:\n                        type: integer\n                      item_count:\n                        type: integer\n                      page_index:\n                        type: integer\n                      is_first:\n                        type: boolean\n                      is_last:\n                        type: boolean\n                  status:\n                    $ref: '#/components/schemas/Status'\n  # '/discovery/videos':\n  #   get:\n  #     tags:\n  #       - Discover\n  #     parameters:\n  #       - name: offset\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: limit\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: page\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: recommend jobs\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 content:\n  #                   type: object\n  #                   properties:\n  #                     data:\n  #                       type: array\n  #                       items:\n  #                         $ref: '#/components/schemas/Video'\n  #                     offset:\n  #                       type: integer\n  #                     limit:\n  #                       type: integer\n  #                     page_count:\n  #                       type: integer\n  #                     item_count:\n  #                       type: integer\n  #                     page_index:\n  #                       type: integer\n  #                     is_first:\n  #                       type: boolean\n  #                     is_last:\n  #                       type: boolean\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  '/discovery/editorials':\n    get:\n      summary: 推荐短则\n      tags:\n        - Discover\n      parameters:\n        - name: offset\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: limit\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: page\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n      responses:\n        '200':\n          description: recommend jobs\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/Editorial'\n                      offset:\n                        type: integer\n                      limit:\n                        type: integer\n                      page_count:\n                        type: integer\n                      item_count:\n                        type: integer\n                      page_index:\n                        type: integer\n                      is_first:\n                        type: boolean\n                      is_last:\n                        type: boolean\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/discovery':\n    get:\n      summary: 混合推荐\n      tags:\n        - Discover\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - name: type\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - job\n              - company\n              - question\n              - answer\n              - article\n              - video\n          description: determine what part of discovery list to return\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '200':\n          description: return one of the following based on the type parameter\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      discovery:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            type:\n                              type: string\n                              description: the type of object\n                            object:\n                              type: object\n                              description: the object of given type(may be Article, User, ...)\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/resumes/online':\n    post:\n      summary: 发布电子简历\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      tags:\n        - Resume\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResumeRequest'\n      responses:\n        '201':\n          description: created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/ResumeResponse'\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/resumes/online/{id}':\n    get:\n      summary: 获得所有电子简历\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      tags:\n        - Resume\n      responses:\n        '201':\n          description: created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/ResumeResponse'\n                  status:\n                    $ref: '#/components/schemas/Status'\n    put:\n      summary: 获得所有电子简历\n      tags:\n        - Resume\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResumeRequest'\n      responses:\n        '201':\n          description: created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/ResumeResponse'\n                  status:\n                    $ref: '#/components/schemas/Status'\n    delete:\n      summary: 删除电子简历\n      tags:\n        - Resume\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '200':\n          description: deleted\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/resumes/pdf':\n    post:\n      summary: 发布pdf简历\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      tags:\n        - Resume\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                content:\n                  $ref: '#/components/schemas/ResumePDFResponse'\n                status:\n                  $ref: '#/components/schemas/Status'\n      responses:\n        '201':\n          description: created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/ResumePDFResponse'\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/resumes/pdf/{id}':\n    get:\n      summary: 获得pdf简历\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      tags:\n        - Resume\n      responses:\n        '201':\n          description: created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/ResumePDFResponse'\n                  status:\n                    $ref: '#/components/schemas/Status'\n    patch:\n      summary: 获得所有pdf简历\n      tags:\n        - Resume\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n      responses:\n        '201':\n          description: created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/ResumePDFResponse'\n                  status:\n                    $ref: '#/components/schemas/Status'\n    delete:\n      summary: 删除pdf简历\n      tags:\n        - Resume\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '200':\n          description: deleted\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    $ref: '#/components/schemas/Status'\n  # '/applicant/{id}/resumes':\n  #   get:\n  #     tags:\n  #       - applicant\n  #     parameters:\n  #       - name: id\n  #         in: path\n  #         description: applicant id\n  #         schema:\n  #           type: integer\n  #         required: true\n  #       - in: header\n  #         name: X-AUTHENTICATION\n  #         required: true\n  #         description: authentication header\n  #         schema:\n  #           type: string\n  #       - name: offset\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: limit\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: page\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: resumes\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 content:\n  #                   type: object\n  #                   properties:\n  #                     data:\n  #                       type: object\n  #                       properties:\n  #                         id:\n  #                           type: integer\n  #                         jsons:\n  #                           type: array\n  #                           items:\n  #                             type: object\n  #                     offset:\n  #                       type: integer\n  #                     limit:\n  #                       type: integer\n  #                     page_count:\n  #                       type: integer\n  #                     item_count:\n  #                       type: integer\n  #                     page_index:\n  #                       type: integer\n  #                     is_first:\n  #                       type: boolean\n  #                     is_last:\n  #                       type: boolean\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  '/friends/{userId}/apply':\n    post:\n      tags:\n        - Friends\n      parameters:\n        - name: userId\n          description: other guy's id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                message:\n                  type: string\n      responses:\n        '201':\n          description: created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/friends/{userId}':\n    delete:\n      tags:\n        - Friends\n      parameters:\n        - name: userId\n          description: other guy's id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '200':\n          description: created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/friends/applications/{reference_id}/approval':\n    put:\n      tags:\n        - Friends\n      parameters:\n        - name: reference_id\n          description:  reference_id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                message:\n                  type: string\n      responses:\n        '200':\n          description: \"approval\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/friends/applications/{reference_id}/deny':\n    put:\n      tags:\n        - Friends\n      parameters:\n        - name: reference_id\n          description:  reference_id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                message:\n                  type: string\n      responses:\n        '200':\n          description: \"deny\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/friends/applications/{id}':\n    get:\n      tags:\n        - Friends\n      parameters:\n        - name: id\n          description: application id\n          in: path\n          schema:\n            type: integer\n          required: true\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '200':\n          description: created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/FriendApplication'\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/friends':\n    get:\n      tags:\n        - Friends\n      parameters:\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n        - name: offset\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: limit\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: page\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n      responses:\n        '200':\n          description: friends representation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/User'\n                      offset:\n                        type: integer\n                      limit:\n                        type: integer\n                      page_count:\n                        type: integer\n                      item_count:\n                        type: integer\n                      page_index:\n                        type: integer\n                      is_first:\n                        type: boolean\n                      is_last:\n                        type: boolean\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/friends/applications':\n    get:\n      tags:\n        - Friends\n      parameters:\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n        - name: offset\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: limit\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: page\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n      responses:\n        '200':\n          description: applications representation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/User'\n                      offset:\n                        type: integer\n                      limit:\n                        type: integer\n                      page_count:\n                        type: integer\n                      item_count:\n                        type: integer\n                      page_index:\n                        type: integer\n                      is_first:\n                        type: boolean\n                      is_last:\n                        type: boolean\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/search':\n    get:\n      tags:\n        - Util\n      parameters:\n        - name: type\n          description: type only available for article, editorial, answer, question, user, job, company, comment and all.\n          in: query\n          schema:\n            type: string\n          required: false\n        - name: title\n          description: search element in title\n          in: query\n          schema:\n            type: string\n          required: false\n        - name: text\n          description: search element in title\n          in: query\n          schema:\n            type: string\n          required: false\n        - name: offset\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: limit\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: page\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n      responses:\n        '200':\n          description: search result\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            type:\n                              type: string\n                            content:\n                              $ref: '#/components/schemas/Article'\n                      offset:\n                        type: integer\n                      limit:\n                        type: integer\n                      page_count:\n                        type: integer\n                      item_count:\n                        type: integer\n                      page_index:\n                        type: integer\n                      is_first:\n                        type: boolean\n                      is_last:\n                        type: boolean\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/comments/{id}':\n    get:\n      summary: 获得文章，问题等评论\n      description: 返回文章，回答等的全部评论\n      tags:\n        - Comment\n      parameters:\n        - name: id\n          description: id of articles\n\n          in: path\n          required: true\n          schema:\n            type: integer\n        - name: X-AUTHENTICATION\n          in: header\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description:\n            \"nike\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/Comment'\n    # put:\n    #   summary: 发布评论\n    #   description: 发布评论\n    #   tags:\n    #     - Comment\n    #   parameters:\n    #     - name: id\n    #       in: path\n    #       required: true\n    #       schema:\n    #         type: integer\n    #     - name: X-AUTHENTICATION\n    #       in: header\n    #       required: true\n    #       schema:\n    #         type: string\n    #   requestBody:\n    #     content:\n    #       application/json:\n    #         schema:\n    #           $ref: '#/components/schemas/CommentRequest'\n    #   responses:\n    #     '200':\n    #       description: 'nike'\n    #       content:\n    #         application/json:\n    #           schema:\n    #             type: object\n    #             properties:\n    #               content:\n    #                 $ref: '#/components/schemas/Comment'\n    delete:\n      summary: 删除评论\n      description: 删除评论\n      tags:\n        - Comment\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n        - name: X-AUTHENTICATION\n          in: header\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'nike'\n  # '/comments':\n  #   post:\n  #     tags:\n  #       - Comment\n  #     parameters:\n  #       - name: id\n  #         in: path\n  #         required: true\n  #         schema:\n  #           type: integer\n  #       - name: X-AUTHENTICATION\n  #         in: header\n  #         required: true\n  #         schema:\n  #           type: string\n  #     requestBody:\n  #       content:\n  #         application/json:\n  #           schema:\n  #             $ref: '#/components/schemas/CommentRequest'\n  #     responses:\n  #       '200':\n  #         description: 'nike'\n  '/comments/(comment_id)/upvote':\n    put:\n      summary: 点赞评论\n      description: 评论点赞\n      tags:\n        - Comment\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n        - name: X-AUTHENTICATION\n          in: header\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'nike'\n    # delete:\n    #   summary: 删除点赞\n    #   description: 评论点赞\n    #   tags:\n    #     - Comment\n    #   parameters:\n    #     - name: id\n    #       in: path\n    #       required: true\n    #       schema:\n    #         type: integer\n    #     - name: X-AUTHENTICATION\n    #       in: header\n    #       required: true\n    #       schema:\n    #         type: string\n    #   responses:\n    #     '200':\n    #       description: 'nike'\n  '/comments/(comment_id)/downvote':\n    put:\n      summary: 反对评论\n      description: 评论反对\n      tags:\n        - Comment\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n        - name: X-AUTHENTICATION\n          in: header\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'nike'\n    # delete:\n    #   summary: 删除反对\n    #   description: 评论反对\n    #   tags:\n    #     - Comment\n    #   parameters:\n    #     - name: id\n    #       in: path\n    #       required: true\n    #       schema:\n    #         type: integer\n    #     - name: X-AUTHENTICATION\n    #       in: header\n    #       required: true\n    #       schema:\n    #         type: string\n    #   responses:\n    #     '200':\n    #       description: 'nike'\n  '/comments/(comment_id)/vote':\n    delete:\n      summary: 取消点赞和反对\n      description: 评论点赞\n      tags:\n        - Comment\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n        - name: X-AUTHENTICATION\n          in: header\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'nike'\n  # '/answers/{answer_id}/comments/{comment_id}':\n  #   get:\n  #     description:\n  #     tags:\n  #       - Comment\n  #     responses:\n  #       '200':\n  #         description: 'nike'\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 content:\n  #                   type: object\n  #                   properties:\n  #                     data:\n  #                       type: array\n  #                       items:\n  #                         type: object\n  #                         properties:\n  #                           type:\n  #                             type: string\n  #                           content:\n  #                             $ref: '#/components/schemas/Comment'\n  #                     offset:\n  #                       type: integer\n  #                     limit:\n  #                       type: integer\n  #                     page_count:\n  #                       type: integer\n  #                     item_count:\n  #                       type: integer\n  #                     page_index:\n  #                       type: integer\n  #                     is_first:\n  #                       type: boolean\n  #                     is_last:\n  #                       type: boolean\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  #     parameters:\n  #       - name: comment_id\n  #         in: path\n  #         required: true\n  #         schema:\n  #           type: integer\n  #       - name: answer_id\n  #         in: path\n  #         required: true\n  #         schema:\n  #           type: integer\n  #       - name: X-AUTHENTICATION\n  #         in: header\n  #         required: true\n  #         schema:\n  #           type: string\n  #       - name: offset\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: limit\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: page\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  # '/articles/{article_id}/comments/{comment_id}':\n  #   get:\n  #     tags:\n  #       - Comment\n  #     responses:\n  #       '200':\n  #         description: 'nike'\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 content:\n  #                   type: object\n  #                   properties:\n  #                     data:\n  #                       type: array\n  #                       items:\n  #                         type: object\n  #                         properties:\n  #                           type:\n  #                             type: string\n  #                           content:\n  #                             $ref: '#/components/schemas/Comment'\n  #                     offset:\n  #                       type: integer\n  #                     limit:\n  #                       type: integer\n  #                     page_count:\n  #                       type: integer\n  #                     item_count:\n  #                       type: integer\n  #                     page_index:\n  #                       type: integer\n  #                     is_first:\n  #                       type: boolean\n  #                     is_last:\n  #                       type: boolean\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  #     parameters:\n  #       - name: comment_id\n  #         in: path\n  #         required: true\n  #         schema:\n  #           type: integer\n  #       - name: article_id\n  #         in: path\n  #         required: true\n  #         schema:\n  #           type: integer\n  #       - name: X-AUTHENTICATION\n  #         in: header\n  #         required: true\n  #         schema:\n  #           type: string\n  #       - name: offset\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: limit\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: page\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  # '/editorials/{editorial_id}/comments/{comment_id}':\n  #   get:\n  #     tags:\n  #       - Comment\n  #     responses:\n  #       '200':\n  #         description: 'nike'\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 content:\n  #                   type: object\n  #                   properties:\n  #                     data:\n  #                       type: array\n  #                       items:\n  #                         type: object\n  #                         properties:\n  #                           type:\n  #                             type: string\n  #                           content:\n  #                             $ref: '#/components/schemas/Comment'\n  #                     offset:\n  #                       type: integer\n  #                     limit:\n  #                       type: integer\n  #                     page_count:\n  #                       type: integer\n  #                     item_count:\n  #                       type: integer\n  #                     page_index:\n  #                       type: integer\n  #                     is_first:\n  #                       type: boolean\n  #                     is_last:\n  #                       type: boolean\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  #     parameters:\n  #       - name: comment_id\n  #         in: path\n  #         required: true\n  #         schema:\n  #           type: integer\n  #       - name: editorial_id\n  #         in: path\n  #         required: true\n  #         schema:\n  #           type: integer\n  #       - name: X-AUTHENTICATION\n  #         in: header\n  #         required: true\n  #         schema:\n  #           type: string\n  #       - name: offset\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: limit\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: page\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  # '/comments/{comment_id}':\n  #   get:\n  #     tags:\n  #       - Comment\n  #     parameters:\n  #       - name: comment_id\n  #         description: the id of articles, answer and more\n  #         in: path\n  #         required: true\n  #         schema:\n  #           type: integer\n  #       - name: X-AUTHENTICATION\n  #         in: header\n  #         required: true\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description:\n  #           \"nike\"\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 content:\n  #                   $ref: '#/components/schemas/Comment'\n  #   put:\n  #     tags:\n  #       - Comment\n  #     parameters:\n  #       - name: comment_id\n  #         in: path\n  #         required: true\n  #         schema:\n  #           type: integer\n  #       - name: X-AUTHENTICATION\n  #         in: header\n  #         required: true\n  #         schema:\n  #           type: string\n  #     requestBody:\n  #       content:\n  #         application/json:\n  #           schema:\n  #             $ref: '#/components/schemas/CommentRequest'\n  #     responses:\n  #       '200':\n  #         description: 'nike'\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 content:\n  #                   $ref: '#/components/schemas/Comment'\n  #   delete:\n  #     tags:\n  #       - Comment\n  #     parameters:\n  #       - name: comment_id\n  #         in: path\n  #         required: true\n  #         schema:\n  #           type: integer\n  #       - name: X-AUTHENTICATION\n  #         in: header\n  #         required: true\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: 'nike'\n  '/comments/{commentid}/replies':\n    get:\n      summary: 获得评论所有回复\n      description: 返回评论全部回复\n      tags:\n        - Comment\n      parameters:\n        - name: commentid\n          in: path\n          required: true\n          schema:\n            type: integer\n        - name: X-AUTHENTICATION\n          in: header\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'nike'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/Comment'\n    post:\n      summary: 发布回复\n      description: 发表回复\n      tags:\n        - Comment\n      parameters:\n        - name: commentid\n          in: path\n          required: true\n          schema:\n            type: integer\n\n        - name: X-AUTHENTICATION\n          in: header\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CommentRequest'\n      responses:\n        '200':\n          description: 'nike'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/Comment'\n  '/replies/{reply_id}':\n    get:\n      summary: 获得回复\n      tags:\n        - Comment\n      parameters:\n        - name: reply_id\n          required: true\n          in: path\n          description: reply id\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '200':\n          description: return target reply\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/Reply'\n                  status:\n                    $ref: '#/components/schemas/Status'\n        '404':\n          description: target question does not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorStatus'\n\n  '/replies/{reply_id}/upvote':\n    put:\n      summary: 点赞回复\n      description: 回复点赞\n      tags:\n        - Comment\n      parameters:\n        - name: comment_id\n          in: path\n          required: true\n          schema:\n            type: integer\n        - name: reply_id\n          in: path\n          required: true\n          schema:\n            type: integer\n        - name: X-AUTHENTICATION\n          in: header\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'nike'\n    # delete:\n    #   summary: 删除点赞\n    #   description: 回复反对\n    #   tags:\n    #     - Comment\n    #   parameters:\n    #     - name: comment_id\n    #       in: path\n    #       required: true\n    #       schema:\n    #         type: integer\n    #     - name: reply_id\n    #       in: path\n    #       required: true\n    #       schema:\n    #         type: integer\n    #     - name: X-AUTHENTICATION\n    #       in: header\n    #       required: true\n    #       schema:\n    #         type: string\n    #   responses:\n    #     '200':\n    #       description: 'nike'\n  '/replies/{reply_id}/downvote':\n    put:\n      summary: 反对回复\n      tags:\n        - Comment\n      parameters:\n        - name: comment_id\n          in: path\n          required: true\n          schema:\n            type: integer\n        - name: reply_id\n          in: path\n          required: true\n          schema:\n            type: integer\n        - name: X-AUTHENTICATION\n          in: header\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'nike'\n    # delete:\n    #   summary: 删除反对\n    #   tags:\n    #     - Comment\n    #   parameters:\n    #     - name: comment_id\n    #       in: path\n    #       required: true\n    #       schema:\n    #         type: integer\n    #     - name: reply_id\n    #       in: path\n    #       required: true\n    #       schema:\n    #         type: integer\n    #     - name: X-AUTHENTICATION\n    #       in: header\n    #       required: true\n    #       schema:\n    #         type: string\n    #   responses:\n    #     '200':\n    #       description: 'nike'\n  '/replies/{reply_id}/vote':\n    delete:\n      summary: 取消点赞和反对\n      description: 回复点赞\n      tags:\n        - Comment\n      parameters:\n        - name: comment_id\n          in: path\n          required: true\n          schema:\n            type: integer\n        - name: reply_id\n          in: path\n          required: true\n          schema:\n            type: integer\n        - name: X-AUTHENTICATION\n          in: header\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'nike'\n  '/applicants/{id}':\n    get:\n      summary: 获得人profile\n      tags:\n        - applicant\n      parameters:\n        - name: id\n          in: path\n          description: user id\n          required: true\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '200':\n          description: return target user\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/Applicant'\n                  status:\n                    $ref: '#/components/schemas/Status'\n        '404':\n          description: cannot find\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - status\n                properties:\n                  status:\n                    $ref: '#/components/schemas/Status'\n              example:\n                status:\n                  code: 4041\n                  reason: Cannot find user with id 14\n        # put:\n        #   summary: 更改profile\n        #   tags:\n        #     - applicant\n        #   parameters:\n        #     - name: id\n        #       in: path\n        #       description: user id\n        #       required: true\n        #       schema:\n        #         type: integer\n        #     - in: header\n        #       name: X-AUTHENTICATION\n        #       required: true\n        #       description: authentication header\n        #       schema:\n        #         type: string\n        #   requestBody:\n        #     content:\n        #       application/json:\n        #         schema:\n        #           $ref: '#/components/schemas/ApplicantRequest'\n        #   responses:\n        #     '200':\n        #       description: return target user\n        #       content:\n        #         application/json:\n        #           schema:\n        #             type: object\n        #             properties:\n        #               content:\n        #                 $ref: '#/components/schemas/Applicant'\n        #               status:\n        #             $ref: '#/components/schemas/Status'\n        # '404':\n        #   description: cannot find\n        #   content:\n        #     application/json:\n        #       schema:\n        #         type: object\n        #         required:\n        #           - status\n        #         properties:\n        #           status:\n        #             $ref: '#/components/schemas/Status'\n        #       example:\n        #         status:\n        #           code: 4041\n        #           reason: Cannot find user with id 14\n  # '/applicants':\n  #   post:\n  #     tags:\n  #       - applicant\n  #     parameters:\n  #       - name: id\n  #         in: path\n  #         description: user id\n  #         required: true\n  #         schema:\n  #           type: integer\n  #       - in: header\n  #         name: X-AUTHENTICATION\n  #         required: true\n  #         description: authentication header\n  #         schema:\n  #           type: string\n  #     requestBody:\n  #       content:\n  #         application/json:\n  #           schema:\n  #             $ref: '#/components/schemas/ApplicantRequest'\n  #     responses:\n  #       '201':\n  #         description: created\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               required:\n  #                 - status\n  #                 - applicant\n  #               properties:\n  #                 content:\n  #                   $ref: '#/components/schemas/Applicant'\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  # '/applicants/{id}/contacts':\n  #   get:\n  #     tags:\n  #       - applicant\n  #     parameters:\n  #       - name: id\n  #         in: path\n  #         description: user id\n  #         required: true\n  #         schema:\n  #           type: integer\n  #       - in: header\n  #         name: X-AUTHENTICATION\n  #         required: true\n  #         description: authentication header\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: return target user's 1\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 content:\n  #                   $ref: '#/components/schemas/ContactInfo'\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  #       '404':\n  #         description: cannot find\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               required:\n  #                 - status\n  #               properties:\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  #             example:\n  #               status:\n  #                 code: 4041\n  #                 reason: Cannot find user with id 14\n  #   put:\n  #     tags:\n  #       - applicant\n  #     parameters:\n  #       - name: applicantId\n  #         in: path\n  #         description: applicant id\n  #         required: true\n  #         schema:\n  #           type: integer\n  #       - name: id\n  #         in: path\n  #         description: certificate id\n  #         required: true\n  #         schema:\n  #           type: integer\n  #       - in: header\n  #         name: X-AUTHENTICATION\n  #         required: true\n  #         description: authentication header\n  #         schema:\n  #           type: string\n  #     requestBody:\n  #       content:\n  #         application/json:\n  #           schema:\n  #             $ref: '#/components/schemas/ContactInfo'\n  #     responses:\n  #       '200':\n  #         description: return target user's 1\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 content:\n  #                   $ref: '#/components/schemas/ContactInfo'\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  #       '404':\n  #         description: cannot find\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               required:\n  #                 - status\n  #               properties:\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  #             example:\n  #               status:\n  #                 code: 4041\n  #                 reason: Cannot find user with id 14\n  #   post:\n  #     tags:\n  #       - applicant\n  #     parameters:\n  #       - name: applicantId\n  #         in: path\n  #         description: applicant id\n  #         required: true\n  #         schema:\n  #           type: integer\n  #       - name: id\n  #         in: path\n  #         description: certificate id\n  #         required: true\n  #         schema:\n  #           type: integer\n  #       - in: header\n  #         name: X-AUTHENTICATION\n  #         required: true\n  #         description: authentication header\n  #         schema:\n  #           type: string\n  #     requestBody:\n  #       content:\n  #         application/json:\n  #           schema:\n  #             $ref: '#/components/schemas/ContactInfo'\n  #     responses:\n  #       '200':\n  #         description: return target user's 1\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 content:\n  #                   $ref: '#/components/schemas/ContactInfo'\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  #       '404':\n  #         description: cannot find\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               required:\n  #                 - status\n  #               properties:\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  #             example:\n  #               status:\n  #                 code: 4041\n  #                 reason: Cannot find user with id 14\n  '/applicants/{id}/educations':\n\n    get:\n      summary: 获得教育经历\n      tags:\n        - applicant\n      parameters:\n        - name: id\n          in: path\n          description: user id\n          required: true\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n        - name: offset\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: limit\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: page\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n      responses:\n        '200':\n          description: return target user's educations\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/EducationInfo'\n                      offset:\n                        type: integer\n                      limit:\n                        type: integer\n                      page_count:\n                        type: integer\n                      item_count:\n                        type: integer\n                      page_index:\n                        type: integer\n                      is_first:\n                        type: boolean\n                      is_last:\n                        type: boolean\n                  status:\n                    $ref: '#/components/schemas/Status'\n        '404':\n          description: cannot find\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - status\n                properties:\n                  status:\n                    $ref: '#/components/schemas/Status'\n              example:\n                status:\n                  code: 4041\n                  reason: Cannot find user with id 14\n    post:\n      summary: 添加教育经历\n      tags:\n        - applicant\n      parameters:\n        - name: id\n          in: path\n          description: applicant id\n          required: true\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EducationInfoRequest'\n      responses:\n        '200':\n          description: return target user's 1\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/EducationInfo'\n                  status:\n                    $ref: '#/components/schemas/Status'\n        '404':\n          description: cannot find\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - status\n                properties:\n                  status:\n                    $ref: '#/components/schemas/Status'\n              example:\n                status:\n                  code: 4041\n                  reason: Cannot find user with id 14\n    put:\n      tags:\n        - applicant\n      parameters:\n        - name: id\n          in: path\n          description: certificate id\n          required: true\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/EducationInfoRequest'\n      responses:\n        '200':\n          description: return target user's 1\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      educations:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/EducationInfo'\n                  status:\n                    $ref: '#/components/schemas/Status'\n        '404':\n          description: cannot find\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - status\n                properties:\n                  status:\n                    $ref: '#/components/schemas/Status'\n              example:\n                status:\n                  code: 4041\n                  reason: Cannot find user with id 14\n  '/applicants/{id}/educations/{educationID}':\n    get:\n      tags:\n        - applicant\n      parameters:\n        - name: id\n          in: path\n          description: user id\n          required: true\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n        - name: educationID\n          in: path\n          description: education id\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: return target user's educations\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/EducationInfo'\n                  status:\n                    $ref: '#/components/schemas/Status'\n        '404':\n          description: cannot find\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - status\n                properties:\n                  status:\n                    $ref: '#/components/schemas/Status'\n              example:\n                status:\n                  code: 4041\n                  reason: Cannot find user with id 14\n    delete:\n      tags:\n        - applicant\n      parameters:\n        - name: id\n          in: path\n          description: user id\n          required: true\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n        - name: educationID\n          in: path\n          description: education id\n          required: true\n          schema:\n            type: integer\n      responses:\n        '204':\n          description: cannot find\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - status\n                properties:\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/applicants/{id}/projects':\n    get:\n      tags:\n        - applicant\n      parameters:\n        - name: id\n          in: path\n          description: user id\n          required: true\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n        - name: offset\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: limit\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: page\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n      responses:\n        '200':\n          description: return target user's projects\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/Project'\n                      offset:\n                        type: integer\n                      limit:\n                        type: integer\n                      page_count:\n                        type: integer\n                      item_count:\n                        type: integer\n                      page_index:\n                        type: integer\n                      is_first:\n                        type: boolean\n                      is_last:\n                        type: boolean\n                  status:\n                    $ref: '#/components/schemas/Status'\n        '404':\n          description: cannot find\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - status\n                properties:\n                  status:\n                    $ref: '#/components/schemas/Status'\n              example:\n                status:\n                  code: 4041\n                  reason: Cannot find user with id 14\n    post:\n      tags:\n        - applicant\n      parameters:\n        - name: id\n          in: path\n          description: certificate id\n          required: true\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Project'\n      responses:\n        '200':\n          description: return target user's 1\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/Project'\n                  status:\n                    $ref: '#/components/schemas/Status'\n        '404':\n          description: cannot find\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - status\n                properties:\n                  status:\n                    $ref: '#/components/schemas/Status'\n              example:\n                status:\n                  code: 4041\n                  reason: Cannot find user with id 14\n    put:\n      tags:\n        - applicant\n      parameters:\n        - name: id\n          in: path\n          description: certificate id\n          required: true\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/Project'\n      responses:\n        '200':\n          description: return target user's 1\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Project'\n                  status:\n                    $ref: '#/components/schemas/Status'\n        '404':\n          description: cannot find\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - status\n                properties:\n                  status:\n                    $ref: '#/components/schemas/Status'\n              example:\n                status:\n                  code: 4041\n                  reason: Cannot find user with id 14\n  '/applicants/{id}/projects/{projectID}':\n    get:\n      tags:\n        - applicant\n      parameters:\n        - name: id\n          in: path\n          description: user id\n          required: true\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n        - name: projectID\n          in: path\n          description: projet id\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: return target user's projects\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/Project'\n                  status:\n                    $ref: '#/components/schemas/Status'\n        '404':\n          description: cannot find\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - status\n                properties:\n                  status:\n                    $ref: '#/components/schemas/Status'\n              example:\n                status:\n                  code: 4041\n                  reason: Cannot find user with id 14\n    delete:\n      tags:\n        - applicant\n      parameters:\n        - name: id\n          in: path\n          description: user id\n          required: true\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n        - name: projectID\n          in: path\n          description: projet id\n          required: true\n          schema:\n            type: integer\n      responses:\n        '204':\n          description: cannot find\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - status\n                properties:\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/applicants/{id}/experiences':\n    get:\n      tags:\n        - applicant\n      parameters:\n        - name: id\n          in: path\n          description: user id\n          required: true\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n        - name: offset\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: limit\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n        - name: page\n          in: query\n          required: false\n          description: start index of element\n          schema:\n            type: string\n      responses:\n        '200':\n          description: return target user's works\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/WorkExperienceInfo'\n                      offset:\n                        type: integer\n                      limit:\n                        type: integer\n                      page_count:\n                        type: integer\n                      item_count:\n                        type: integer\n                      page_index:\n                        type: integer\n                      is_first:\n                        type: boolean\n                      is_last:\n                        type: boolean\n                  status:\n                    $ref: '#/components/schemas/Status'\n        '404':\n          description: cannot find\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - status\n                properties:\n                  status:\n                    $ref: '#/components/schemas/Status'\n              example:\n                status:\n                  code: 4041\n                  reason: Cannot find user with id 14\n    post:\n      tags:\n        - applicant\n      parameters:\n        - name: applicantId\n          in: path\n          description: applicant id\n          required: true\n          schema:\n            type: integer\n        - name: id\n          in: path\n          description: certificate id\n          required: true\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WorkExperienceInfoRequest'\n      responses:\n        '200':\n          description: return target user's 1\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      experiences:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/WorkExperienceInfo'\n                  status:\n                    $ref: '#/components/schemas/Status'\n        '404':\n          description: cannot find\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - status\n                properties:\n                  status:\n                    $ref: '#/components/schemas/Status'\n              example:\n                status:\n                  code: 4041\n                  reason: Cannot find user with id 14\n    put:\n      tags:\n        - applicant\n      parameters:\n        - name: id\n          in: path\n          description: certificate id\n          required: true\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/WorkExperienceInfoRequest'\n      responses:\n        '200':\n          description: return target user's 1\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      experiences:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/WorkExperienceInfo'\n                  status:\n                    $ref: '#/components/schemas/Status'\n        '404':\n          description: cannot find\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - status\n                properties:\n                  status:\n                    $ref: '#/components/schemas/Status'\n              example:\n                status:\n                  code: 4041\n                  reason: Cannot find user with id 14\n  '/applicants/{id}/experiences/{experienceID}':\n    get:\n      tags:\n        - applicant\n      parameters:\n        - name: id\n          in: path\n          description: user id\n          required: true\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n        - name: experienceID\n          in: path\n          description: experience id\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: return target user's works\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    $ref: '#/components/schemas/WorkExperienceInfo'\n                  status:\n                    $ref: '#/components/schemas/Status'\n        '404':\n          description: cannot find\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - status\n                properties:\n                  status:\n                    $ref: '#/components/schemas/Status'\n              example:\n                status:\n                  code: 4041\n                  reason: Cannot find user with id 14\n    delete:\n      tags:\n        - applicant\n      parameters:\n        - name: id\n          in: path\n          description: user id\n          required: true\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n        - name: experienceID\n          in: path\n          description: experience id\n          required: true\n          schema:\n            type: integer\n      responses:\n        '204':\n          description: cannot find\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - status\n                properties:\n                  status:\n                    $ref: '#/components/schemas/Status'\n  # '/applicants/{id}/certificates':\n  #   get:\n  #     tags:\n  #       - applicant\n  #     parameters:\n  #       - name: id\n  #         in: path\n  #         description: user id\n  #         required: true\n  #         schema:\n  #           type: integer\n  #       - in: header\n  #         name: X-AUTHENTICATION\n  #         required: true\n  #         description: authentication header\n  #         schema:\n  #           type: string\n  #       - name: offset\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: limit\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: page\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: return target user's works\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 content:\n  #                   type: object\n  #                   properties:\n  #                     data:\n  #                       type: array\n  #                       items:\n  #                         $ref: '#/components/schemas/Certification'\n  #                     offset:\n  #                       type: integer\n  #                     limit:\n  #                       type: integer\n  #                     page_count:\n  #                       type: integer\n  #                     item_count:\n  #                       type: integer\n  #                     page_index:\n  #                       type: integer\n  #                     is_first:\n  #                       type: boolean\n  #                     is_last:\n  #                       type: boolean\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  #       '404':\n  #         description: cannot find\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               required:\n  #                 - status\n  #               properties:\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  #             example:\n  #               status:\n  #                 code: 4041\n  #                 reason: Cannot find user with id 14\n  #   post:\n  #     tags:\n  #       - applicant\n  #     parameters:\n  #       - name: applicantId\n  #         in: path\n  #         description: applicant id\n  #         required: true\n  #         schema:\n  #           type: integer\n  #       - name: id\n  #         in: path\n  #         description: certificate id\n  #         required: true\n  #         schema:\n  #           type: integer\n  #       - in: header\n  #         name: X-AUTHENTICATION\n  #         required: true\n  #         description: authentication header\n  #         schema:\n  #           type: string\n  #     requestBody:\n  #       content:\n  #         application/json:\n  #           schema:\n  #             $ref: '#/components/schemas/Certification'\n  #     responses:\n  #       '200':\n  #         description: return target user's 1\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 content:\n  #                   $ref: '#/components/schemas/Certification'\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  #       '404':\n  #         description: cannot find\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               required:\n  #                 - status\n  #               properties:\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  #             example:\n  #               status:\n  #                 code: 4041\n  #                 reason: Cannot find user with id 14\n  #   put:\n  #     tags:\n  #       - applicant\n  #     parameters:\n  #       - name: id\n  #         in: path\n  #         description: certificate id\n  #         required: true\n  #         schema:\n  #           type: integer\n  #       - in: header\n  #         name: X-AUTHENTICATION\n  #         required: true\n  #         description: authentication header\n  #         schema:\n  #           type: string\n  #     requestBody:\n  #       content:\n  #         application/json:\n  #           schema:\n  #             type: array\n  #             items:\n  #               $ref: '#/components/schemas/Certification'\n  #     responses:\n  #       '200':\n  #         description: return target user's 1\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 content:\n  #                   type: object\n  #                   properties:\n  #                     certificates:\n  #                       type: array\n  #                       items:\n  #                         $ref: '#/components/schemas/Certification'\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  #       '404':\n  #         description: cannot find\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               required:\n  #                 - status\n  #               properties:\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  #             example:\n  #               status:\n  #                 code: 4041\n  #                 reason: Cannot find user with id 14\n  # '/applicants/{id}/certificates/{certificateID}':\n  #   get:\n  #     tags:\n  #       - applicant\n  #     parameters:\n  #       - name: id\n  #         in: path\n  #         description: user id\n  #         required: true\n  #         schema:\n  #           type: integer\n  #       - in: header\n  #         name: X-AUTHENTICATION\n  #         required: true\n  #         description: authentication header\n  #         schema:\n  #           type: string\n  #       - name: certificateID\n  #         in: path\n  #         description: certificate id\n  #         required: true\n  #         schema:\n  #           type: integer\n  #     responses:\n  #       '200':\n  #         description: return target user's works\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 content:\n  #                   $ref: '#/components/schemas/Certification'\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  #       '404':\n  #         description: cannot find\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               required:\n  #                 - status\n  #               properties:\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  #             example:\n  #               status:\n  #                 code: 4041\n  #                 reason: Cannot find user with id 14\n  #   delete:\n  #     tags:\n  #       - applicant\n  #     parameters:\n  #       - name: id\n  #         in: path\n  #         description: user id\n  #         required: true\n  #         schema:\n  #           type: integer\n  #       - in: header\n  #         name: X-AUTHENTICATION\n  #         required: true\n  #         description: authentication header\n  #         schema:\n  #           type: string\n  #       - name: certificateID\n  #         in: path\n  #         description: certificate id\n  #         required: true\n  #         schema:\n  #           type: integer\n  #     responses:\n  #       '204':\n  #         description: cannot find\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               required:\n  #                 - status\n  #               properties:\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  # '/applicants/{id}/extracurriculars':\n  #   get:\n  #     tags:\n  #       - applicant\n  #     parameters:\n  #       - name: id\n  #         in: path\n  #         description: user id\n  #         required: true\n  #         schema:\n  #           type: integer\n  #       - in: header\n  #         name: X-AUTHENTICATION\n  #         required: true\n  #         description: authentication header\n  #         schema:\n  #           type: string\n  #       - name: offset\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: limit\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #       - name: page\n  #         in: query\n  #         required: false\n  #         description: start index of element\n  #         schema:\n  #           type: string\n  #     responses:\n  #       '200':\n  #         description: return target user's works\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 content:\n  #                   type: object\n  #                   properties:\n  #                     data:\n  #                       type: array\n  #                       items:\n  #                         $ref: '#/components/schemas/Extracurricular'\n  #                     offset:\n  #                       type: integer\n  #                     limit:\n  #                       type: integer\n  #                     page_count:\n  #                       type: integer\n  #                     item_count:\n  #                       type: integer\n  #                     page_index:\n  #                       type: integer\n  #                     is_first:\n  #                       type: boolean\n  #                     is_last:\n  #                       type: boolean\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  #       '404':\n  #         description: cannot find\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               required:\n  #                 - status\n  #               properties:\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  #             example:\n  #               status:\n  #                 code: 4041\n  #                 reason: Cannot find user with id 14\n  #   post:\n  #     tags:\n  #       - applicant\n  #     parameters:\n  #       - name: id\n  #         in: path\n  #         description: applicant id\n  #         required: true\n  #         schema:\n  #           type: integer\n  #       - in: header\n  #         name: X-AUTHENTICATION\n  #         required: true\n  #         description: authentication header\n  #         schema:\n  #           type: string\n  #     requestBody:\n  #       content:\n  #         application/json:\n  #           schema:\n  #             $ref: '#/components/schemas/Extracurricular'\n  #     responses:\n  #       '200':\n  #         description: return target applicant\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 content:\n  #                   $ref: '#/components/schemas/Extracurricular'\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  #       '404':\n  #         description: cannot find\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               required:\n  #                 - status\n  #               properties:\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  #             example:\n  #               status:\n  #                 code: 4041\n  #                 reason: Cannot find user with id 14\n  #   put:\n  #     tags:\n  #       - applicant\n  #     parameters:\n  #       - name: id\n  #         in: path\n  #         description: applicant id\n  #         required: true\n  #         schema:\n  #           type: integer\n  #       - in: header\n  #         name: X-AUTHENTICATION\n  #         required: true\n  #         description: authentication header\n  #         schema:\n  #           type: string\n  #     requestBody:\n  #       content:\n  #         application/json:\n  #           schema:\n  #             type: array\n  #             items:\n  #               $ref: '#/components/schemas/Extracurricular'\n  #     responses:\n  #       '200':\n  #         description: return target applicant\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 content:\n  #                   type: object\n  #                   properties:\n  #                     extracurriculars:\n  #                       type: array\n  #                       items:\n  #                         $ref: '#/components/schemas/Extracurricular'\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  #       '404':\n  #         description: cannot find\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               required:\n  #                 - status\n  #               properties:\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  #             example:\n  #               status:\n  #                 code: 4041\n  #                 reason: Cannot find user with id 14\n  # '/applicants/{id}/extracurriculars/{extracurricularID}':\n  #   get:\n  #     tags:\n  #       - applicant\n  #     parameters:\n  #       - name: id\n  #         in: path\n  #         description: user id\n  #         required: true\n  #         schema:\n  #           type: integer\n  #       - in: header\n  #         name: X-AUTHENTICATION\n  #         required: true\n  #         description: authentication header\n  #         schema:\n  #           type: string\n  #       - name: extracurricularID\n  #         in: path\n  #         description: extracurricular id\n  #         required: true\n  #         schema:\n  #           type: integer\n  #     responses:\n  #       '200':\n  #         description: return target user's works\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 content:\n  #                   $ref: '#/components/schemas/Extracurricular'\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  #       '404':\n  #         description: cannot find\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               required:\n  #                 - status\n  #               properties:\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  #             example:\n  #               status:\n  #                 code: 4041\n  #                 reason: Cannot find user with id 14\n  #   delete:\n  #     tags:\n  #       - applicant\n  #     parameters:\n  #       - name: id\n  #         in: path\n  #         description: user id\n  #         required: true\n  #         schema:\n  #           type: integer\n  #       - in: header\n  #         name: X-AUTHENTICATION\n  #         required: true\n  #         description: authentication header\n  #         schema:\n  #           type: string\n  #       - name: extracurricularID\n  #         in: path\n  #         description: extracurricular id\n  #         required: true\n  #         schema:\n  #           type: integer\n  #     responses:\n  #       '204':\n  #         description: cannot find\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               required:\n  #                 - status\n  #               properties:\n  #                 status:\n  #                   $ref: '#/components/schemas/Status'\n  '/static/location':\n    get:\n      tags:\n        - Static\n      parameters:\n        - in: query\n          name: target\n          description: the region\n          schema:\n            type: integer\n        - in: query\n          name: id\n          schema:\n            type: integer\n\n      responses:\n        '200':\n          description: \"null\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      locations:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            id:\n                              type: integer\n                            value:\n                              type: string\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/static/{id}':\n    get:\n      tags:\n        - Static\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: \"null\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: integer\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/static':\n    post:\n      tags:\n        - Static\n      parameters:\n        - in: path\n          required: true\n          name: id\n          schema:\n            type: integer\n      requestBody:\n        description: \"File to upload\"\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n      responses:\n        '200':\n          description: \"null\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: integer\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/static/dictionaries':\n    get:\n      tags:\n        - Static\n      parameters:\n        - name: type\n          required: true\n          in: query\n          schema:\n            type: string\n            enum:\n              - major\n              - degree\n              - diploma\n              - advantageSkill\n              - industry\n              - job\n              - companyScale\n              - companyNature\n              - country\n              - chinaRegion\n              - USAState\n              - USARegion\n              - CHNUniversity\n              - USAUniversity\n              - GBRUniversity\n              - GANUniversity\n              - TimesRank\n              - USNEWSRank\n              - QSRank\n              - label\n        - name: length\n          required: false\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: dictionary\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      id:\n                        type: string\n                      name:\n                        type: string\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/labels/{type}/{id}':\n    get:\n      summary: 获得某种实体的标签\n      tags:\n        - Label\n      parameters:\n        - name: type\n          in: path\n          description: type of domain\n          required: true\n          schema:\n            type: integer\n        - name: id\n          in: path\n          description: id of domain\n          required: true\n          schema:\n            type: integer\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '200':\n          description: the label list of the domain\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  content:\n                    type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/Label'\n                  status:\n                    $ref: '#/components/schemas/Status'\n  '/labels':\n    post:\n      summary: 给各种实体添加标签\n      tags:\n        - Label\n      parameters:\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - label_code\n                - target_id\n                - target_type\n              properties:\n                label_code:\n                  type: string\n                target_id:\n                  type: integer\n                target_type:\n                  type: integer\n      responses:\n        '201':\n          description: add label successfullly\n  '/labels/{labelCode}/{targetType}/{targetId}':\n    delete:\n      summary: 删除各种实体的某个标签\n      tags:\n        - Label\n      parameters:\n        - name: labelCode\n          schema:\n            type: string\n          in: path\n          required: true\n          description: label code\n        - name: targetType\n          schema:\n            type: integer\n          in: path\n          required: true\n          description: the type of the target, 1 for question, 2 for essay, 3 for editorial, 100 for user, 200 for company, 300 for job\n        - name: targetId\n          schema:\n            type: integer\n          in: path\n          required: true\n          description: id of domain\n        - in: header\n          name: X-AUTHENTICATION\n          required: true\n          description: authentication header\n          schema:\n            type: string\n      responses:\n        '200':\n          description: delete label successfullly\ncomponents:\n  schemas:\n    ContentRequest:\n      type: object\n      properties:\n        body:\n          type: string\n    Status:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int64\n        reason:\n          type: string\n    ErrorStatus:\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/Status'\n    JobSearch:\n      type: object\n      properties:\n        industry:\n          type: array\n          items:\n            type: string\n        tags:\n          type: array\n          items:\n            type: string\n    Job:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n          description: name of job\n        organization:\n          $ref: '#/components/schemas/Organization'\n        location:\n          type: array\n          items:\n            type: string\n        type:\n          description: 1实习 2兼职 3全职\n          type: string\n          enum:\n            - full-time\n            - part-time\n            - internship\n        star_time:\n          type: string\n        dead_line:\n          type: string\n        job_duty:\n          type: string\n        job_description:\n          type: string\n        collected:\n          type: boolean\n    JobWithoutCompany:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n          description: name of job\n        location:\n          type: array\n          items:\n            type: string\n        type:\n          description: 1实习 2兼职 3全职\n          type: string\n          enum:\n            - full-time\n            - part-time\n            - internship\n        start_time:\n          type: string\n        dead_line:\n          type: string\n        job_duty:\n          type: string\n        job_description:\n          type: string\n        collected:\n          type: boolean\n    JobRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          description: name of job\n        organization_id:\n          type: integer\n        location:\n          type: array\n          items:\n            $ref: '#/components/schemas/Location'\n        type:\n          type: string\n          enum:\n            - full-time\n            - part-time\n            - internship\n        dead_line:\n          type: string\n        start_time:\n          type: string\n        job_description:\n          type: string\n        job_duty:\n          type: string\n        mail:\n          type: string\n    Organization:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        avatarUrl:\n          type: string\n          pattern: '(http|https)://(.?)*'\n        location:\n          type: string\n        website:\n          type: string\n          pattern: '(http|https)://(.?)*'\n        note:\n          type: string\n        nation:\n          type: string\n        photoUrlList:\n          type: array\n          items:\n            type: string\n        jobCount:\n          type: integer\n        isCollected:\n          type: boolean\n    User:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        username:\n          type: string\n        email:\n          type: string\n          format: email\n        phonenumber:\n          type: string\n        register_date:\n          type: string\n        first_name:\n          type: string\n        last_name:\n          type: string\n        gender:\n          type: string\n          enum:\n            - male\n            - female\n        nation:\n          type: string\n        avatar_url:\n          type: string\n        role:\n          type: string\n        age:\n          type: integer\n    NewUser:\n      allOf:\n        - $ref: '#/components/schemas/User'\n        - type: object\n          required:\n            - password\n          properties:\n            password:\n              type: string\n    ContactInfo:\n      type: object\n      required:\n        - emails\n        - phonenumbers\n      properties:\n        emails:\n          type: array\n          items:\n            type: string\n            pattern: (.?)*@(.?)*\n        phonenumbers:\n          type: array\n          items:\n            type: string\n    EducationInfo:\n      type: object\n      required:\n        - university\n        - major\n        - degree\n        - duration\n      properties:\n        university:\n          type: string\n        major:\n          type: string\n        degree:\n          type: string\n        duration:\n          $ref: '#/components/schemas/Duration'\n        note:\n          type: string\n    EducationInfoRequest:\n      type: object\n      required:\n        - university_id\n        - major\n        - degree\n        - duration\n      properties:\n        university_id:\n          type: string\n        major:\n          type: string\n        degree:\n          type: string\n        duration:\n          $ref: '#/components/schemas/Duration'\n        location:\n          $ref: '#/components/schemas/Location'\n        note:\n          type: string\n    WorkExperienceInfo:\n      type: object\n      required:\n        - employer\n        - position\n        - duration\n        - location\n      properties:\n        id:\n          type: integer\n        employer:\n          type: string\n        position:\n          type: string\n        duration:\n          $ref: '#/components/schemas/Duration'\n        location:\n          type: string\n        note:\n          type: string\n    WorkExperienceInfoRequest:\n      type: object\n      required:\n        - employer\n        - position\n        - duration\n        - location\n      properties:\n        id:\n          type: integer\n        employer:\n          type: string\n        position:\n          type: string\n        duration:\n          $ref: '#/components/schemas/Duration'\n        location:\n          $ref: '#/components/schemas/Location'\n        note:\n          type: string\n    Certification:\n      type: object\n      required:\n        - name\n        - duration\n      properties:\n        name:\n          type: string\n        authority:\n          type: string\n        duration:\n          $ref: '#/components/schemas/Duration'\n        note:\n          type: string\n    Extracurricular:\n      type: object\n      required:\n        - name\n        - role\n        - organization\n        - duration\n        - location\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        role:\n          type: string\n        organization:\n          type: string\n        duration:\n          $ref: '#/components/schemas/Duration'\n        note:\n          type: string\n    Project:\n      type: object\n      required:\n        - name\n        - role\n        - duration\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        role:\n          type: string\n        duration:\n          $ref: '#/components/schemas/Duration'\n        note:\n          type: string\n    Duration:\n      type: object\n      properties:\n        begin:\n          type: string\n          pattern: timestamp\n        end:\n          type: string\n          pattern: timestamp\n    ApplicantRequest:\n      type: object\n      required:\n        - name\n        - avatarUrl\n      properties:\n        name:\n          type: string\n        avatarUrl:\n          type: string\n        isInJob:\n          type: boolean\n        currentCompanyId:\n          type: integer\n        skills:\n          type: array\n          items:\n            type: string\n        educations:\n          type: array\n          items:\n            type: object\n            required:\n              - university\n              - major\n              - degree\n              - duration\n              - location\n            properties:\n              university:\n                type: string\n              major:\n                type: string\n              degree:\n                type: string\n              duration:\n                $ref: '#/components/schemas/Duration'\n              location:\n                $ref: '#/components/schemas/Location'\n              note:\n                type: string\n        contacts:\n          $ref: '#/components/schemas/ContactInfo'\n        works:\n          type: array\n          items:\n            type: object\n            required:\n              - employer\n              - position\n              - duration\n              - location\n            properties:\n              employer:\n                type: string\n              position:\n                type: string\n              duration:\n                $ref: '#/components/schemas/Duration'\n              location:\n                $ref: '#/components/schemas/Location'\n              note:\n                type: string\n        projects:\n          type: array\n          items:\n            $ref: '#/components/schemas/Project'\n        extracurriculars:\n          type: array\n          items:\n            $ref: '#/components/schemas/Extracurricular'\n        certifications:\n          type: array\n          items:\n            $ref: '#/components/schemas/Certification'\n    Applicant:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        avatarUrl:\n          type: string\n        isInJob:\n          type: boolean\n          # skills:\n          #   type: array\n          items:\n            type: string\n        # currentCompany:\n        #   $ref: '#/components/schemas/Company'\n        educations:\n          type: array\n          items:\n            $ref: '#/components/schemas/EducationInfo'\n        # contacts:\n        #   $ref: '#/components/schemas/ContactInfo'\n        works:\n          type: array\n          items:\n            $ref: '#/components/schemas/WorkExperienceInfo'\n        # projects:\n        #   type: array\n        #   items:\n        #     $ref: '#/components/schemas/Project'\n        extracurriculars:\n          type: array\n          items:\n            $ref: '#/components/schemas/Extracurricular'\n        # certifications:\n        #   type: array\n        #   items:\n        #     $ref: '#/components/schemas/Certification'\n    JobResponse:\n      allOf:\n        - $ref: '#/components/schemas/Job'\n        - properties:\n            status:\n              $ref: '#/components/schemas/Status'\n    JobWithMail:\n      allOf:\n        - $ref: '#/components/schemas/Job'\n        - properties:\n            mail:\n              type: string\n              description: 只有创建者访问时才会返回mail\n    Company:\n      allOf:\n        - $ref: '#/components/schemas/Organization'\n    CompanyRequest:\n      type: object\n      properties:\n        avatarUrl:\n          type: string\n        id:\n          type: integer\n        location:\n          $ref: '#/components/schemas/Location'\n        name:\n          type: string\n          description: company name\n        nation:\n          type: string\n          description: company nation\n        note:\n          type: string\n          description: introduction\n        website:\n          type: string\n          description: company website\n    Application:\n      type: object\n      required:\n        - id\n        - companyId\n        - positionId\n        - status\n      properties:\n        id:\n          type: integer\n        position:\n          $ref: '#/components/schemas/Job'\n        status:\n          type: string\n    CollectionStatus:\n      type: string\n      enum:\n        - active\n        - inactive\n    AnswerRequest:\n      type: object\n      required:\n        - body\n        - is_anonymous\n      properties:\n        body:\n          $ref: '#/components/schemas/RichText'\n        is_anonymous:\n          type: boolean\n          default: false\n    AnswerBasic:\n      allOf:\n        - $ref: '#/components/schemas/AnswerRequest'\n        - properties:\n            creator:\n              $ref: '#/components/schemas/User'\n            modified_at:\n              type: string\n            create_at:\n              type: string\n            id:\n              type: integer\n              description: answer id\n    QuestionRequest:\n      type: object\n      required:\n        - title\n        - body\n        - is_anonymous\n      properties:\n        title:\n          type: string\n          description: question title\n        body:\n          $ref: '#/components/schemas/RichText'\n        is_anonymous:\n          type: boolean\n          default: flase\n        rela_type:\n          type: integer\n          description: '1 for no rela, 2 for company, 3 for job'\n        rela_id:\n          type: integer\n    QuestionBasic:\n      allOf:\n        - $ref: '#/components/schemas/QuestionRequest'\n        - properties:\n            id:\n              type: integer\n              description: question id\n            create_at:\n              type: string\n            modified_at:\n              type: string\n            creator:\n              $ref: '#/components/schemas/User'\n    Question:\n      allOf:\n        - $ref: '#/components/schemas/QuestionBasic'\n        - type: object\n          properties:\n            answers:\n              type: array\n              items:\n                $ref: '#/components/schemas/AnswerBasic'\n    Answer:\n      allOf:\n        - $ref: '#/components/schemas/AnswerBasic'\n        - type: object\n          properties:\n            question:\n              $ref: '#/components/schemas/QuestionBasic'\n    RichText:\n      type: object\n      required:\n        - braftEditorRaw\n        - previewText\n        - compiletype\n      properties:\n        braftEditorRaw:\n          type: string\n        previewText:\n          type: string\n        compiletype:\n          type: integer\n    Comment:\n      type: object\n      properties:\n        id:\n          type: integer\n        creator:\n          $ref: '#/components/schemas/User'\n        body:\n          type: string\n        create_at:\n          type: integer\n        is_anonymous:\n          type: boolean\n          default: false\n        modified_at:\n          type: string\n        upvoteCount:\n          type: integer\n        downvoteCount:\n          type: integer\n        evaluateStatus:\n          type: integer\n    CommentRequest:\n      allOf:\n        - $ref: '#/components/schemas/ContentRequest'\n        - properties:\n            is_anonymous:\n              type: boolean\n              default: false\n    ArticleRequest:\n      type: object\n      properties:\n        title:\n          type: string\n        body:\n          $ref: '#/components/schemas/RichText'\n        rela_id:\n          type: integer\n        rela_type:\n          type: integer\n        is_anonymous:\n          type: boolean\n          default: false\n    Article:\n      type: object\n      required:\n        - id\n        - title\n        - body\n        - company\n      properties:\n        id:\n          type: integer\n        title:\n          type: string\n        company:\n          $ref: '#/components/schemas/Company'\n        create_at:\n          type: string\n        modified_at:\n          type: string\n        author:\n          $ref: '#/components/schemas/User'\n        body:\n          $ref: '#/components/schemas/RichText'\n        is_anonymous:\n          type: boolean\n          default: false\n    Video:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: video id\n        url:\n          type: string\n        comments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Comment'\n        uploader:\n          $ref: '#/components/schemas/User'\n    Editorial:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: video id\n        body:\n          $ref: '#/components/schemas/RichText'\n        comments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Comment'\n        author:\n          $ref: '#/components/schemas/User'\n        modified_at:\n          type: string\n    ContentRequestWithCompany:\n      properties:\n        body:\n          $ref: '#/components/schemas/RichText'\n        company_id:\n          type: integer\n    Location:\n      type: object\n      required:\n        - nation_code\n        - location_code\n      properties:\n        nation_code:\n          type: string\n        location_code:\n          type: string\n    Reply:\n      type: object\n      required:\n        - id\n        - commentId\n        - creator\n        - body\n        - create_at\n        - is_anonymous\n        - modified_at\n        - upvoteCount\n        - downvoteCount\n        - evaluateStatus\n      properties:\n        id:\n          type: integer\n        commentId:\n          type: integer\n        creator:\n          $ref: '#/components/schemas/User'\n        body:\n          type: string\n        create_at:\n          type: string\n        is_anonymous:\n          type: boolean\n        modified_at:\n          type: string\n        upvoteCount:\n          type: integer\n        downvoteCount:\n          type: integer\n        evaluateStatus:\n          type: integer\n    FriendApplication:\n      type: object\n      required:\n        - reference_id\n        - create_at\n        - applicant\n        - is_read\n      properties:\n        reference_id:\n          type: integer\n        create_at:\n          type: string\n        applicant:\n          $ref: '#/components/schemas/User'\n        is_read:\n          type: boolean\n    ResumeResponse:\n      type: object\n      properties:\n        body:\n          $ref: '#/components/schemas/RichText'\n        name:\n          type: string\n        id:\n          type: integer\n    ResumeRequest:\n      type: object\n      properties:\n        body:\n          $ref: '#/components/schemas/RichText'\n        name:\n          type: string\n    ResumePDFResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n        fileId:\n          type: string\n        name:\n          type: string\n    Notification:\n      type: object\n      properties:\n        notification_id:\n          type: integer\n        text:\n          type: string\n        is_read:\n          type: boolean\n        create_at:\n          type: integer\n    Label:\n      type: object\n      required:\n        - label_id\n        - label_code\n        - label_chn\n        - label_eng\n      properties:\n        label_id:\n          type: integer\n        label_code:\n          type: string\n        label_chn:\n          type: string\n        label_eng:\n          type: string"
		}
	},
	"Error": "parse: paths: /discovery/questions: get: : responses: 200: content: application/json: schema: parse schema: content: parse schema: data: parse schema: item: parse schema: reference \"#/components/schemas/Question\": parse schema: allOf: [0]: parse schema: reference \"#/components/schemas/QuestionBasic\": parse schema: allOf: [0]: parse schema: reference \"#/components/schemas/QuestionRequest\": parse schema: is_anonymous: parse default: expected type \"boolean\", got \"string\""
}