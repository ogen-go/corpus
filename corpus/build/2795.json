{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/fawkesrobotics/fawkes"
		},
		"file": {
			"name": "api.yaml",
			"path": "src/plugins/skiller/rest-api/api.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  title: BehaviorEngine\n  version: v1beta1\n  description: |\n    Behavior Engine REST API.\n    Visualize, monitor, and instruct the Skill Execution Run-Time of\n    the Lua-based Behavior Engine.\n  contact:\n    name:  Tim Niemueller\n    email: niemueller@kbsg.rwth-aachen.de\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n\ntags:\n  - name: public\n    description: Behavior Engine public API.\n\npaths:\n  /skiller/skills:\n    get:\n      tags:\n      - public\n      summary: Get list of available skills.\n      operationId: list_skills\n      description: |\n        Get the graphs of all currently executing top skills.\n      parameters:\n        - name: pretty\n          in: query\n          description: Request pretty printed reply.\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: get list of skills\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SkillInfo'\n        '400':\n          description: bad input parameter\n\n  /skiller/skills/{id}:\n    get:\n      tags:\n      - public\n      summary: Get information about a specific skill.\n      operationId: get_skill\n      description: |\n        Get information about a specific skill.\n        The special ID `active` can be used to retrieve information\n        about the currently running top-skill.\n      parameters:\n        - name: id\n          in: path\n          description: |\n            ID of skill to retrieve. Use `active` to retrieve info\n            about currently running skill.\n          required: true\n          schema:\n            type: string\n            format: symbol\n        - name: pretty\n          in: query\n          description: Request pretty printed reply.\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: get skill information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Skill'\n        '400':\n          description: bad input parameter\n\n    delete:\n      tags:\n      - public\n      summary: Stop a currently running skill.\n      operationId: stop_skill\n      description: |\n        Stop the currently active skill.\n        The ID must be `active`.\n      parameters:\n        - name: id\n          in: path\n          description: Must be `active`.\n          required: true\n          schema:\n            type: string\n            format: symbol\n      responses:\n        '200':\n          description: Skill was indeed stopped.\n        '400':\n          description: bad input parameter\n\n  /skiller/call:\n    post:\n      tags:\n      - public\n      summary: Execute a new skill.\n      operationId: exec_skill\n      description: |\n        Run a skill.\n        The ID must be `active`.\n      parameters:\n        - name: skill_call\n          in: body\n          description: The actual skill call\n          required: true\n          schema:\n            $ref: '#/components/schemas/SkillCall'\n      responses:\n        '200':\n          description: Skill was started\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Skill'\n        '400':\n          description: bad input parameter\n        '409':\n          description: Another thread is exclusive controller\n        '500':\n          description: An error occured sending the request\n        '503':\n          description: Behavior Engine has not been loaded\n\ncomponents:\n  schemas:\n    SkillInfo:\n      type: object\n      required:\n        - kind\n        - apiVersion\n        - name\n        \n      properties:\n        kind:\n          type: string\n        apiVersion:\n          type: string\n        name:\n          type: string\n          format: symbol\n          example: goto\n\n    Skill:\n      type: object\n      required:\n        - kind\n        - apiVersion\n        - name\n      properties:\n        kind:\n          type: string\n        apiVersion:\n          type: string\n        name:\n          type: string\n          format: symbol\n          example: goto\n        graph:\n          type: string\n          format: dot\n        skill-string:\n          type: string\n          format: function\n          description: |\n            The skill string is given only for the active skill.\n        error:\n          type: string\n          description: |\n            An error is presented for the active skill if it has FAILED.\n        msg_id:\n          type: integer\n          format: int64\n        exclusive_controller:\n          type: string\n        status:\n          type: string\n          enum: [\"INACTIVE\", \"FINAL\", \"RUNNING\", \"FAILED\"]\n\n    SkillCall:\n      type: object\n      required:\n        - kind\n        - apiVersion\n        - skill_string\n      properties:\n        kind:\n          type: string\n        apiVersion:\n          type: string\n        skill_string:\n          type: string\n"
		}
	},
	"Error": "parse: paths: /skiller/call: post: exec_skill: parameters: parse parameter \"skill_call\": unsupported parameter type body"
}