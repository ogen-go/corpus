{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mrin9/RapiDoc"
		},
		"file": {
			"name": "external-refs.yaml",
			"path": "docs/specs/external-refs.yaml",
			"content": "openapi: 3.0.2\ninfo:\n  version: '1.0'\n  title: External refs (json-pointers)\n  description: \u003e\n    Following OpenAPI spec demonstrate how to use external reference\n\n\n    below is the main spec, but the schema used in the response is defined in a separate file named - schema.yaml\n    \n    ```yaml\n\n    openapi: 3.0.0\n    info:\n      title:  Dynamic Form Params \n      version: 1.0.0\n    paths:\n      /user1:\n        get:\n          description: List User\n          summary: List User\n          responses:\n            '200':\n              description: The response\n              content:\n                application/json:\n                  schema: \n                    $ref:'./schema.yaml#/components/schemas/user' \u003c\u003c\u003c relative to html where rapidoc element is defined\n    ```          \n    \n    schema.yaml\n\n    ```yaml\n\n    openapi: 3.0.2\n    info:\n      title: Partial spec for schema\n      version: 1.0.0\n    components:\n      schemas:\n        user:\n          properties:\n            id:\n              type: integer\n            name:\n              type: string    \n    ```          \n    \n \npaths:\n  /external-refs:\n    get:\n      summary: External Refs\n      description: Using external refs in spec\n      responses:\n        '200':\n          description: \u003e\n            The response schema is defined in a separate file. If external refs are resolved properly then it should display the below schema\n\n            ```json\n              {\n                id: integer\n                name: string\n              }\n            ``` \n          content:\n            application/json:\n              schema: \n                $ref: '../specs/partial.yaml#/components/schemas/user'"
		}
	},
	"Error": "parse: paths: /external-refs: get: : responses: 200: content: application/json: schema: parse schema: reference \"../specs/partial.yaml#/components/schemas/user\": resolve reference \"../specs/partial.yaml#/components/schemas/user\": invalid schema reference \"../specs/partial.yaml#/components/schemas/user\""
}