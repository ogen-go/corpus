{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "APIs/amazonaws.com/models.lex.v2/2020-08-07/openapi.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  version: '2020-08-07'\n  x-release: v4\n  title: Amazon Lex Model Building V2\n  description: \u003cp/\u003e\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: models.lex.v2\n  x-aws-signingName: lex\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/models.lex.v2-2020-08-07.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/models-v2-lex/'\nservers:\n  - url: 'http://models-v2-lex.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Lex Models V2 multi-region endpoint\n  - url: 'https://models-v2-lex.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Lex Models V2 multi-region endpoint\n  - url: 'http://models-v2-lex.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Lex Models V2 endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://models-v2-lex.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Lex Models V2 endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  '/bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/':\n    post:\n      operationId: BuildBotLocale\n      description: 'Builds a bot, its intents, and its slot types into a specific locale. A bot can be built into multiple locales. At runtime the locale is used to choose a specific build of the bot.'\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BuildBotLocaleResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '484':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: botId\n          in: path\n          required: true\n          description: The identifier of the bot to build. The identifier is returned in the response from the operation.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botVersion\n          in: path\n          required: true\n          description: The version of the bot to build. This can only be the draft version of the bot.\n          schema:\n            type: string\n            pattern: ^DRAFT$\n            minLength: 5\n            maxLength: 5\n        - name: localeId\n          in: path\n          required: true\n          description: 'The identifier of the language and locale that the bot will be used in. The string must match one of the supported locales. All of the intents, slot types, and slots used in the bot must have the same locale. For more information, see \u003ca href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\"\u003eSupported languages\u003c/a\u003e.'\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    delete:\n      operationId: DeleteBotLocale\n      description: '\u003cp\u003eRemoves a locale from a bot.\u003c/p\u003e \u003cp\u003eWhen you delete a locale, all intents, slots, and slot types defined for the locale are also deleted.\u003c/p\u003e'\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteBotLocaleResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '484':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: botId\n          in: path\n          required: true\n          description: The unique identifier of the bot that contains the locale.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botVersion\n          in: path\n          required: true\n          description: 'The version of the bot that contains the locale. '\n          schema:\n            type: string\n            pattern: ^DRAFT$\n            minLength: 5\n            maxLength: 5\n        - name: localeId\n          in: path\n          required: true\n          description: 'The identifier of the language and locale that will be deleted. The string must match one of the supported locales. For more information, see \u003ca href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\"\u003eSupported languages\u003c/a\u003e.'\n          schema:\n            type: string\n    get:\n      operationId: DescribeBotLocale\n      description: 'Describes the settings that a bot has for a specific locale. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeBotLocaleResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: botId\n          in: path\n          required: true\n          description: The identifier of the bot associated with the locale.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botVersion\n          in: path\n          required: true\n          description: The identifier of the version of the bot associated with the locale.\n          schema:\n            type: string\n            pattern: '^(DRAFT|[0-9]+)$'\n            minLength: 1\n            maxLength: 5\n        - name: localeId\n          in: path\n          required: true\n          description: 'The unique identifier of the locale to describe. The string must match one of the supported locales. For more information, see \u003ca href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\"\u003eSupported languages\u003c/a\u003e. '\n          schema:\n            type: string\n    put:\n      operationId: UpdateBotLocale\n      description: Updates the settings that a bot has for a specific locale.\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateBotLocaleResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '484':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: botId\n          in: path\n          required: true\n          description: The unique identifier of the bot that contains the locale.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botVersion\n          in: path\n          required: true\n          description: The version of the bot that contains the locale to be updated. The version can only be the \u003ccode\u003eDRAFT\u003c/code\u003e version.\n          schema:\n            type: string\n            pattern: ^DRAFT$\n            minLength: 5\n            maxLength: 5\n        - name: localeId\n          in: path\n          required: true\n          description: 'The identifier of the language and locale to update. The string must match one of the supported locales. For more information, see \u003ca href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\"\u003eSupported languages\u003c/a\u003e.'\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - nluIntentConfidenceThreshold\n              properties:\n                description:\n                  description: The new description of the locale.\n                  type: string\n                  minLength: 0\n                  maxLength: 200\n                nluIntentConfidenceThreshold:\n                  description: The new confidence threshold where Amazon Lex inserts the \u003ccode\u003eAMAZON.FallbackIntent\u003c/code\u003e and \u003ccode\u003eAMAZON.KendraSearchIntent\u003c/code\u003e intents in the list of possible intents for an utterance.\n                  type: number\n                  format: double\n                  minimum: 0\n                  maximum: 1\n                voiceSettings:\n                  description: Defines settings for using an Amazon Polly voice to communicate with a user.\n                  type: object\n                  properties:\n                    voiceId:\n                      allOf:\n                        - $ref: '#/components/schemas/VoiceId'\n                        - description: The identifier of the Amazon Polly voice to use.\n  /bots/:\n    put:\n      operationId: CreateBot\n      description: 'Creates an Amazon Lex conversational bot. '\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateBotResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '484':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - botName\n                - roleArn\n                - dataPrivacy\n                - idleSessionTTLInSeconds\n              properties:\n                botName:\n                  description: The name of the bot. The bot name must be unique in the account that creates the bot.\n                  type: string\n                  pattern: '^([0-9a-zA-Z][_-]?)+$'\n                  minLength: 1\n                  maxLength: 100\n                description:\n                  description: A description of the bot. It appears in lists to help you identify a particular bot.\n                  type: string\n                  minLength: 0\n                  maxLength: 200\n                roleArn:\n                  description: The Amazon Resource Name (ARN) of an IAM role that has permission to access the bot.\n                  type: string\n                  pattern: '^arn:aws:iam::[0-9]{12}:role/.*$'\n                  minLength: 32\n                  maxLength: 2048\n                dataPrivacy:\n                  description: 'By default, data stored by Amazon Lex is encrypted. The \u003ccode\u003eDataPrivacy\u003c/code\u003e structure provides settings that determine how Amazon Lex handles special cases of securing the data for your bot. '\n                  type: object\n                  properties:\n                    childDirected:\n                      allOf:\n                        - $ref: '#/components/schemas/ChildDirected'\n                        - description: 'For each Amazon Lex bot created with the Amazon Lex Model Building Service, you must specify whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children''s Online Privacy Protection Act (COPPA) by specifying \u003ccode\u003etrue\u003c/code\u003e or \u003ccode\u003efalse\u003c/code\u003e in the \u003ccode\u003echildDirected\u003c/code\u003e field. By specifying \u003ccode\u003etrue\u003c/code\u003e in the \u003ccode\u003echildDirected\u003c/code\u003e field, you confirm that your use of Amazon Lex \u003cb\u003eis\u003c/b\u003e related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. By specifying \u003ccode\u003efalse\u003c/code\u003e in the \u003ccode\u003echildDirected\u003c/code\u003e field, you confirm that your use of Amazon Lex \u003cb\u003eis not\u003c/b\u003e related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. You may not specify a default value for the \u003ccode\u003echildDirected\u003c/code\u003e field that does not accurately reflect whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. If your use of Amazon Lex relates to a website, program, or other application that is directed in whole or in part, to children under age 13, you must obtain any required verifiable parental consent under COPPA. For information regarding the use of Amazon Lex in connection with websites, programs, or other applications that are directed or targeted, in whole or in part, to children under age 13, see the \u003ca href=\"https://aws.amazon.com/lex/faqs#data-security\"\u003eAmazon Lex FAQ\u003c/a\u003e.'\n                idleSessionTTLInSeconds:\n                  description: '\u003cp\u003eThe time, in seconds, that Amazon Lex should keep information about a user''s conversation with the bot. \u003c/p\u003e \u003cp\u003eA user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Lex deletes any data provided before the timeout.\u003c/p\u003e \u003cp\u003eYou can specify between 60 (1 minute) and 86,400 (24 hours) seconds.\u003c/p\u003e'\n                  type: integer\n                  minimum: 60\n                  maximum: 86400\n                botTags:\n                  description: 'A list of tags to add to the bot. You can only add tags when you create a bot. You can''t use the \u003ccode\u003eUpdateBot\u003c/code\u003e operation to update tags. To update tags, use the \u003ccode\u003eTagResource\u003c/code\u003e operation.'\n                  type: object\n                  minProperties: 0\n                  maxProperties: 200\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n                testBotAliasTags:\n                  description: 'A list of tags to add to the test alias for a bot. You can only add tags when you create a bot. You can''t use the \u003ccode\u003eUpdateAlias\u003c/code\u003e operation to update tags. To update tags on the test alias, use the \u003ccode\u003eTagResource\u003c/code\u003e operation.'\n                  type: object\n                  minProperties: 0\n                  maxProperties: 200\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: ListBots\n      description: Gets a list of available bots.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListBotsResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                sortBy:\n                  description: Specifies attributes for sorting a list of bots.\n                  type: object\n                  properties:\n                    attribute:\n                      allOf:\n                        - $ref: '#/components/schemas/BotSortAttribute'\n                        - description: The attribute to use to sort the list of bots.\n                    order:\n                      allOf:\n                        - $ref: '#/components/schemas/SortOrder'\n                        - description: The order to sort the list. You can choose ascending or descending.\n                filters:\n                  description: Provides the specification of a filter used to limit the bots in the response to only those that match the filter specification. You can only specify one filter and one string to filter on.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/BotFilter'\n                  minItems: 1\n                  maxItems: 1\n                maxResults:\n                  description: 'The maximum number of bots to return in each page of results. If there are fewer results than the maximum page size, only the actual number of results are returned.'\n                  type: integer\n                  minimum: 1\n                  maximum: 1000\n                nextToken:\n                  description: 'If the response from the \u003ccode\u003eListBots\u003c/code\u003e operation contains more results than specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter, a token is returned in the response. Use that token in the \u003ccode\u003enextToken\u003c/code\u003e parameter to return the next page of results.'\n                  type: string\n  '/bots/{botId}/botaliases/':\n    put:\n      operationId: CreateBotAlias\n      description: '\u003cp\u003eCreates an alias for the specified version of a bot. Use an alias to enable you to change the version of a bot without updating applications that use the bot.\u003c/p\u003e \u003cp\u003eFor example, you can create an alias called \"PROD\" that your applications use to call the Amazon Lex bot. \u003c/p\u003e'\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateBotAliasResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '484':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: botId\n          in: path\n          required: true\n          description: The unique identifier of the bot that the alias applies to.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - botAliasName\n              properties:\n                botAliasName:\n                  description: The alias to create. The name must be unique for the bot.\n                  type: string\n                  pattern: '^([0-9a-zA-Z][_-]?)+$'\n                  minLength: 1\n                  maxLength: 100\n                description:\n                  description: A description of the alias. Use this description to help identify the alias.\n                  type: string\n                  minLength: 0\n                  maxLength: 200\n                botVersion:\n                  description: The version of the bot that this alias points to. You can use the operation to change the bot version associated with the alias.\n                  type: string\n                  pattern: '^[0-9]+$'\n                  minLength: 1\n                  maxLength: 5\n                botAliasLocaleSettings:\n                  description: Maps configuration information to a specific locale. You can use this parameter to specify a specific Lambda function to run different functions in different locales.\n                  type: object\n                  minProperties: 1\n                  additionalProperties:\n                    $ref: '#/components/schemas/BotAliasLocaleSettings'\n                conversationLogSettings:\n                  description: 'Configures conversation logging that saves audio, text, and metadata for the conversations with your users.'\n                  type: object\n                  properties:\n                    textLogSettings:\n                      allOf:\n                        - $ref: '#/components/schemas/TextLogSettingsList'\n                        - description: The Amazon CloudWatch Logs settings for logging text and metadata.\n                    audioLogSettings:\n                      allOf:\n                        - $ref: '#/components/schemas/AudioLogSettingsList'\n                        - description: The Amazon S3 settings for logging audio to an S3 bucket.\n                sentimentAnalysisSettings:\n                  description: Determines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.\n                  type: object\n                  properties:\n                    detectSentiment:\n                      allOf:\n                        - $ref: '#/components/schemas/Boolean'\n                        - description: Sets whether Amazon Lex uses Amazon Comprehend to detect the sentiment of user utterances.\n                tags:\n                  description: 'A list of tags to add to the bot alias. You can only add tags when you create an alias, you can''t use the \u003ccode\u003eUpdateBotAlias\u003c/code\u003e operation to update the tags on a bot alias. To update tags, use the \u003ccode\u003eTagResource\u003c/code\u003e operation.'\n                  type: object\n                  minProperties: 0\n                  maxProperties: 200\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: ListBotAliases\n      description: Gets a list of aliases for the specified bot.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListBotAliasesResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: botId\n          in: path\n          required: true\n          description: The identifier of the bot to list aliases for.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                maxResults:\n                  description: 'The maximum number of aliases to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.'\n                  type: integer\n                  minimum: 1\n                  maximum: 1000\n                nextToken:\n                  description: 'If the response from the \u003ccode\u003eListBotAliases\u003c/code\u003e operation contains more results than specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter, a token is returned in the response. Use that token in the \u003ccode\u003enextToken\u003c/code\u003e parameter to return the next page of results.'\n                  type: string\n  '/bots/{botId}/botversions/{botVersion}/botlocales/':\n    put:\n      operationId: CreateBotLocale\n      description: Creates a locale in the bot. The locale contains the intents and slot types that the bot uses in conversations with users in the specified language and locale. You must add a locale to a bot before you can add intents and slot types to the bot.\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateBotLocaleResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '484':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: botId\n          in: path\n          required: true\n          description: The identifier of the bot to create the locale for.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botVersion\n          in: path\n          required: true\n          description: The version of the bot to create the locale for. This can only be the draft version of the bot.\n          schema:\n            type: string\n            pattern: ^DRAFT$\n            minLength: 5\n            maxLength: 5\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - localeId\n                - nluIntentConfidenceThreshold\n              properties:\n                localeId:\n                  description: 'The identifier of the language and locale that the bot will be used in. The string must match one of the supported locales. All of the intents, slot types, and slots used in the bot must have the same locale. For more information, see \u003ca href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\"\u003eSupported languages\u003c/a\u003e.'\n                  type: string\n                description:\n                  description: A description of the bot locale. Use this to help identify the bot locale in lists.\n                  type: string\n                  minLength: 0\n                  maxLength: 200\n                nluIntentConfidenceThreshold:\n                  description: '\u003cp\u003eDetermines the threshold where Amazon Lex will insert the \u003ccode\u003eAMAZON.FallbackIntent\u003c/code\u003e, \u003ccode\u003eAMAZON.KendraSearchIntent\u003c/code\u003e, or both when returning alternative intents. \u003ccode\u003eAMAZON.FallbackIntent\u003c/code\u003e and \u003ccode\u003eAMAZON.KendraSearchIntent\u003c/code\u003e are only inserted if they are configured for the bot.\u003c/p\u003e \u003cp\u003eFor example, suppose a bot is configured with the confidence threshold of 0.80 and the \u003ccode\u003eAMAZON.FallbackIntent\u003c/code\u003e. Amazon Lex returns three alternative intents with the following confidence scores: IntentA (0.70), IntentB (0.60), IntentC (0.50). The response from the PostText operation would be:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eAMAZON.FallbackIntent\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIntentA\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIntentB\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIntentC\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n                  type: number\n                  format: double\n                  minimum: 0\n                  maximum: 1\n                voiceSettings:\n                  description: Defines settings for using an Amazon Polly voice to communicate with a user.\n                  type: object\n                  properties:\n                    voiceId:\n                      allOf:\n                        - $ref: '#/components/schemas/VoiceId'\n                        - description: The identifier of the Amazon Polly voice to use.\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: ListBotLocales\n      description: Gets a list of locales for the specified bot.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListBotLocalesResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: botId\n          in: path\n          required: true\n          description: The identifier of the bot to list locales for.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botVersion\n          in: path\n          required: true\n          description: The version of the bot to list locales for.\n          schema:\n            type: string\n            pattern: '^(DRAFT|[0-9]+)$'\n            minLength: 1\n            maxLength: 5\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                sortBy:\n                  description: Specifies attributes for sorting a list of bot locales.\n                  type: object\n                  properties:\n                    attribute:\n                      allOf:\n                        - $ref: '#/components/schemas/BotLocaleSortAttribute'\n                        - description: The bot locale attribute to sort by.\n                    order:\n                      allOf:\n                        - $ref: '#/components/schemas/SortOrder'\n                        - description: Specifies whether to sort the bot locales in ascending or descending order.\n                filters:\n                  description: Provides the specification for a filter used to limit the response to only those locales that match the filter specification. You can only specify one filter and one value to filter on.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/BotLocaleFilter'\n                  minItems: 1\n                  maxItems: 1\n                maxResults:\n                  description: 'The maximum number of aliases to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.'\n                  type: integer\n                  minimum: 1\n                  maximum: 1000\n                nextToken:\n                  description: 'If the response from the \u003ccode\u003eListBotLocales\u003c/code\u003e operation contains more results than specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter, a token is returned in the response. Use that token as the \u003ccode\u003enextToken\u003c/code\u003e parameter to return the next page of results. '\n                  type: string\n  '/bots/{botId}/botversions/':\n    put:\n      operationId: CreateBotVersion\n      description: '\u003cp\u003eCreates a new version of the bot based on the \u003ccode\u003eDRAFT\u003c/code\u003e version. If the \u003ccode\u003eDRAFT\u003c/code\u003e version of this resource hasn''t changed since you created the last version, Amazon Lex doesn''t create a new version, it returns the last created version.\u003c/p\u003e \u003cp\u003eWhen you create the first version of a bot, Amazon Lex sets the version to 1. Subsequent versions increment by 1.\u003c/p\u003e'\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateBotVersionResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '484':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: botId\n          in: path\n          required: true\n          description: The identifier of the bot to create the version for.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - botVersionLocaleSpecification\n              properties:\n                description:\n                  description: A description of the version. Use the description to help identify the version in lists.\n                  type: string\n                  minLength: 0\n                  maxLength: 200\n                botVersionLocaleSpecification:\n                  description: 'Specifies the locales that Amazon Lex adds to this version. You can choose the \u003ccode\u003eDraft\u003c/code\u003e version or any other previously published version for each locale. When you specify a source version, the locale data is copied from the source version to the new version.'\n                  type: object\n                  minProperties: 1\n                  additionalProperties:\n                    $ref: '#/components/schemas/BotVersionLocaleDetails'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: ListBotVersions\n      description: '\u003cp\u003eGets information about all of the versions of a bot.\u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eListBotVersions\u003c/code\u003e operation returns a summary of each version of a bot. For example, if a bot has three numbered versions, the \u003ccode\u003eListBotVersions\u003c/code\u003e operation returns for summaries, one for each numbered version and one for the \u003ccode\u003eDRAFT\u003c/code\u003e version.\u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eListBotVersions\u003c/code\u003e operation always returns at least one version, the \u003ccode\u003eDRAFT\u003c/code\u003e version.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListBotVersionsResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: botId\n          in: path\n          required: true\n          description: The identifier of the bot to list versions for.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                sortBy:\n                  description: Specifies attributes for sorting a list of bot versions.\n                  type: object\n                  properties:\n                    attribute:\n                      allOf:\n                        - $ref: '#/components/schemas/BotVersionSortAttribute'\n                        - description: The attribute to use to sort the list of versions.\n                    order:\n                      allOf:\n                        - $ref: '#/components/schemas/SortOrder'\n                        - description: The order to sort the list. You can specify ascending or descending order.\n                maxResults:\n                  description: 'The maximum number of versions to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.'\n                  type: integer\n                  minimum: 1\n                  maximum: 1000\n                nextToken:\n                  description: 'If the response to the \u003ccode\u003eListBotVersion\u003c/code\u003e operation contains more results than specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter, a token is returned in the response. Use that token in the \u003ccode\u003enextToken\u003c/code\u003e parameter to return the next page of results.'\n                  type: string\n  /exports/:\n    put:\n      operationId: CreateExport\n      description: '\u003cp\u003eCreates a zip archive containing the contents of a bot or a bot locale. The archive contains a directory structure that contains JSON files that define the bot.\u003c/p\u003e \u003cp\u003eYou can create an archive that contains the complete definition of a bot, or you can specify that the archive contain only the definition of a single bot locale.\u003c/p\u003e \u003cp\u003eFor more information about exporting bots, and about the structure of the export archive, see \u003ca href=\"https://docs.aws.amazon.com/lexv2/latest/dg/importing-exporting.html\"\u003e Importing and exporting bots \u003c/a\u003e \u003c/p\u003e'\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateExportResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - resourceSpecification\n                - fileFormat\n              properties:\n                resourceSpecification:\n                  description: 'Provides information about the bot or bot locale that you want to export. You can specify the \u003ccode\u003ebotExportSpecification\u003c/code\u003e or the \u003ccode\u003ebotLocaleExportSpecification\u003c/code\u003e, but not both.'\n                  type: object\n                  properties:\n                    botExportSpecification:\n                      allOf:\n                        - $ref: '#/components/schemas/BotExportSpecification'\n                        - description: Parameters for exporting a bot.\n                    botLocaleExportSpecification:\n                      allOf:\n                        - $ref: '#/components/schemas/BotLocaleExportSpecification'\n                        - description: Parameters for exporting a bot locale.\n                fileFormat:\n                  description: The file format of the bot or bot locale definition files.\n                  type: string\n                  enum:\n                    - LexJson\n                filePassword:\n                  description: 'An password to use to encrypt the exported archive. Using a password is optional, but you should encrypt the archive to protect the data in transit between Amazon Lex and your local computer.'\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                  format: password\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: ListExports\n      description: Lists the exports for a bot or bot locale. Exports are kept in the list for 7 days.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListExportsResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                botId:\n                  description: The unique identifier that Amazon Lex assigned to the bot.\n                  type: string\n                  pattern: '^[0-9a-zA-Z]+$'\n                  minLength: 10\n                  maxLength: 10\n                botVersion:\n                  description: 'The version of the bot to list exports for. '\n                  type: string\n                  pattern: '^(DRAFT|[0-9]+)$'\n                  minLength: 1\n                  maxLength: 5\n                sortBy:\n                  description: Provides information about sorting a list of exports.\n                  type: object\n                  properties:\n                    attribute:\n                      allOf:\n                        - $ref: '#/components/schemas/ExportSortAttribute'\n                        - description: The export field to use for sorting.\n                    order:\n                      allOf:\n                        - $ref: '#/components/schemas/SortOrder'\n                        - description: The order to sort the list.\n                filters:\n                  description: Provides the specification of a filter used to limit the exports in the response to only those that match the filter specification. You can only specify one filter and one string to filter on.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/ExportFilter'\n                  minItems: 1\n                  maxItems: 1\n                maxResults:\n                  description: 'The maximum number of exports to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.'\n                  type: integer\n                  minimum: 1\n                  maximum: 1000\n                nextToken:\n                  description: 'If the response from the \u003ccode\u003eListExports\u003c/code\u003e operation contans more results that specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter, a token is returned in the response. Use that token in the \u003ccode\u003enextToken\u003c/code\u003e parameter to return the next page of results.'\n                  type: string\n  '/bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/intents/':\n    put:\n      operationId: CreateIntent\n      description: '\u003cp\u003eCreates an intent.\u003c/p\u003e \u003cp\u003eTo define the interaction between the user and your bot, you define one or more intents. For example, for a pizza ordering bot you would create an \u003ccode\u003eOrderPizza\u003c/code\u003e intent.\u003c/p\u003e \u003cp\u003eWhen you create an intent, you must provide a name. You can optionally provide the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eSample utterances. For example, \"I want to order a pizza\" and \"Can I order a pizza.\" You can''t provide utterances for built-in intents.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eInformation to be gathered. You specify slots for the information that you bot requests from the user. You can specify standard slot types, such as date and time, or custom slot types for your application.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eHow the intent is fulfilled. You can provide a Lambda function or configure the intent to return the intent information to your client application. If you use a Lambda function, Amazon Lex invokes the function when all of the intent information is available.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eA confirmation prompt to send to the user to confirm an intent. For example, \"Shall I order your pizza?\"\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eA conclusion statement to send to the user after the intent is fulfilled. For example, \"I ordered your pizza.\"\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eA follow-up prompt that asks the user for additional activity. For example, \"Do you want a drink with your pizza?\"\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateIntentResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '484':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: botId\n          in: path\n          required: true\n          description: The identifier of the bot associated with this intent.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botVersion\n          in: path\n          required: true\n          description: The identifier of the version of the bot associated with this intent.\n          schema:\n            type: string\n            pattern: ^DRAFT$\n            minLength: 5\n            maxLength: 5\n        - name: localeId\n          in: path\n          required: true\n          description: 'The identifier of the language and locale where this intent is used. All of the bots, slot types, and slots used by the intent must have the same locale. For more information, see \u003ca href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\"\u003eSupported languages\u003c/a\u003e.'\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - intentName\n              properties:\n                intentName:\n                  description: The name of the intent. Intent names must be unique in the locale that contains the intent and cannot match the name of any built-in intent.\n                  type: string\n                  pattern: '^([0-9a-zA-Z][_-]?)+$'\n                  minLength: 1\n                  maxLength: 100\n                description:\n                  description: A description of the intent. Use the description to help identify the intent in lists.\n                  type: string\n                  minLength: 0\n                  maxLength: 200\n                parentIntentSignature:\n                  description: A unique identifier for the built-in intent to base this intent on.\n                  type: string\n                sampleUtterances:\n                  description: '\u003cp\u003eAn array of strings that a user might say to signal the intent. For example, \"I want a pizza\", or \"I want a {PizzaSize} pizza\". \u003c/p\u003e \u003cp\u003eIn an utterance, slot names are enclosed in curly braces (\"{\", \"}\") to indicate where they should be displayed in the utterance shown to the user.. \u003c/p\u003e'\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/SampleUtterance'\n                dialogCodeHook:\n                  description: Settings that determine the Lambda function that Amazon Lex uses for processing user responses.\n                  type: object\n                  properties:\n                    enabled:\n                      allOf:\n                        - $ref: '#/components/schemas/Boolean'\n                        - description: Enables the dialog code hook so that it processes user requests.\n                fulfillmentCodeHook:\n                  description: Determines if a Lambda function should be invoked for a specific intent.\n                  type: object\n                  properties:\n                    enabled:\n                      allOf:\n                        - $ref: '#/components/schemas/Boolean'\n                        - description: Indicates whether a Lambda function should be invoked to fulfill a specific intent.\n                intentConfirmationSetting:\n                  description: Provides a prompt for making sure that the user is ready for the intent to be fulfilled.\n                  type: object\n                  properties:\n                    promptSpecification:\n                      allOf:\n                        - $ref: '#/components/schemas/PromptSpecification'\n                        - description: '\u003cp\u003ePrompts the user to confirm the intent. This question should have a yes or no answer.\u003c/p\u003e \u003cp\u003eAmazon Lex uses this prompt to ensure that the user acknowledges that the intent is ready for fulfillment. For example, with the \u003ccode\u003eOrderPizza\u003c/code\u003e intent, you might want to confirm that the order is correct before placing it. For other intents, such as intents that simply respond to user questions, you might not need to ask the user for confirmation before providing the information. \u003c/p\u003e'\n                    declinationResponse:\n                      allOf:\n                        - $ref: '#/components/schemas/ResponseSpecification'\n                        - description: 'When the user answers \"no\" to the question defined in \u003ccode\u003epromptSpecification\u003c/code\u003e, Amazon Lex responds with this response to acknowledge that the intent was canceled. '\n                    active:\n                      allOf:\n                        - $ref: '#/components/schemas/BoxedBoolean'\n                        - description: 'Specifies whether the intent''s confirmation is sent to the user. When this field is false, confirmation and declination responses aren''t sent and processing continues as if the responses aren''t present. If the \u003ccode\u003eactive\u003c/code\u003e field isn''t specified, the default is true.'\n                intentClosingSetting:\n                  description: Provides a statement the Amazon Lex conveys to the user when the intent is successfully fulfilled.\n                  type: object\n                  properties:\n                    closingResponse:\n                      allOf:\n                        - $ref: '#/components/schemas/ResponseSpecification'\n                        - description: The response that Amazon Lex sends to the user when the intent is complete.\n                    active:\n                      allOf:\n                        - $ref: '#/components/schemas/BoxedBoolean'\n                        - description: 'Specifies whether an intent''s closing response is used. When this field is false, the closing response isn''t sent to the user and no closing input from the user is used. If the \u003ccode\u003eactive\u003c/code\u003e field isn''t specified, the default is true.'\n                inputContexts:\n                  description: '\u003cp\u003eA list of contexts that must be active for this intent to be considered by Amazon Lex.\u003c/p\u003e \u003cp\u003eWhen an intent has an input context list, Amazon Lex only considers using the intent in an interaction with the user when the specified contexts are included in the active context list for the session. If the contexts are not active, then Amazon Lex will not use the intent.\u003c/p\u003e \u003cp\u003eA context can be automatically activated using the \u003ccode\u003eoutputContexts\u003c/code\u003e property or it can be set at runtime.\u003c/p\u003e \u003cp\u003e For example, if there are two intents with different input contexts that respond to the same utterances, only the intent with the active context will respond.\u003c/p\u003e \u003cp\u003eAn intent may have up to 5 input contexts. If an intent has multiple input contexts, all of the contexts must be active to consider the intent.\u003c/p\u003e'\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/InputContext'\n                  minItems: 0\n                  maxItems: 5\n                outputContexts:\n                  description: '\u003cp\u003eA lists of contexts that the intent activates when it is fulfilled.\u003c/p\u003e \u003cp\u003eYou can use an output context to indicate the intents that Amazon Lex should consider for the next turn of the conversation with a customer. \u003c/p\u003e \u003cp\u003eWhen you use the \u003ccode\u003eoutputContextsList\u003c/code\u003e property, all of the contexts specified in the list are activated when the intent is fulfilled. You can set up to 10 output contexts. You can also set the number of conversation turns that the context should be active, or the length of time that the context should be active.\u003c/p\u003e'\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/OutputContext'\n                  minItems: 0\n                  maxItems: 10\n                kendraConfiguration:\n                  description: 'Provides configuration information for the AMAZON.KendraSearchIntent intent. When you use this intent, Amazon Lex searches the specified Amazon Kendra index and returns documents from the index that match the user''s utterance.'\n                  type: object\n                  properties:\n                    kendraIndex:\n                      allOf:\n                        - $ref: '#/components/schemas/KendraIndexArn'\n                        - description: The Amazon Resource Name (ARN) of the Amazon Kendra index that you want the AMAZON.KendraSearchIntent intent to search. The index must be in the same account and Region as the Amazon Lex bot.\n                    queryFilterStringEnabled:\n                      allOf:\n                        - $ref: '#/components/schemas/Boolean'\n                        - description: Determines whether the AMAZON.KendraSearchIntent intent uses a custom query string to query the Amazon Kendra index.\n                    queryFilterString:\n                      allOf:\n                        - $ref: '#/components/schemas/QueryFilterString'\n                        - description: 'A query filter that Amazon Lex sends to Amazon Kendra to filter the response from a query. The filter is in the format defined by Amazon Kendra. For more information, see \u003ca href=\"https://docs.aws.amazon.com/kendra/latest/dg/filtering.html\"\u003eFiltering queries\u003c/a\u003e.'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: ListIntents\n      description: Get a list of intents that meet the specified criteria.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListIntentsResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: botId\n          in: path\n          required: true\n          description: The unique identifier of the bot that contains the intent.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botVersion\n          in: path\n          required: true\n          description: The version of the bot that contains the intent.\n          schema:\n            type: string\n            pattern: '^(DRAFT|[0-9]+)$'\n            minLength: 1\n            maxLength: 5\n        - name: localeId\n          in: path\n          required: true\n          description: 'The identifier of the language and locale of the intents to list. The string must match one of the supported locales. For more information, see \u003ca href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\"\u003eSupported languages\u003c/a\u003e.'\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                sortBy:\n                  description: Specifies attributes for sorting a list of intents.\n                  type: object\n                  properties:\n                    attribute:\n                      allOf:\n                        - $ref: '#/components/schemas/IntentSortAttribute'\n                        - description: The attribute to use to sort the list of intents.\n                    order:\n                      allOf:\n                        - $ref: '#/components/schemas/SortOrder'\n                        - description: The order to sort the list. You can choose ascending or descending.\n                filters:\n                  description: Provides the specification of a filter used to limit the intents in the response to only those that match the filter specification. You can only specify one filter and only one string to filter on.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/IntentFilter'\n                  minItems: 1\n                  maxItems: 1\n                maxResults:\n                  description: 'The maximum number of intents to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.'\n                  type: integer\n                  minimum: 1\n                  maximum: 1000\n                nextToken:\n                  description: 'If the response from the \u003ccode\u003eListIntents\u003c/code\u003e operation contains more results than specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter, a token is returned in the response. Use that token in the \u003ccode\u003enextToken\u003c/code\u003e parameter to return the next page of results.'\n                  type: string\n  '/policy/{resourceArn}/':\n    post:\n      operationId: CreateResourcePolicy\n      description: Creates a new resource policy with the specified policy statements.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateResourcePolicyResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '484':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the bot or bot alias that the resource policy is attached to.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 1011\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - policy\n              properties:\n                policy:\n                  description: '\u003cp\u003eA resource policy to add to the resource. The policy is a JSON structure that contains one or more statements that define the policy. The policy must follow the IAM syntax. For more information about the contents of a JSON policy document, see \u003ca href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html\"\u003e IAM JSON policy reference \u003c/a\u003e. \u003c/p\u003e \u003cp\u003eIf the policy isn''t valid, Amazon Lex returns a validation exception.\u003c/p\u003e'\n                  type: string\n                  minLength: 2\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    delete:\n      operationId: DeleteResourcePolicy\n      description: 'Removes an existing policy from a bot or bot alias. If the resource doesn''t have a policy attached, Amazon Lex returns an exception.'\n      responses:\n        '204':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteResourcePolicyResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the bot or bot alias that has the resource policy attached.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 1011\n        - name: expectedRevisionId\n          in: query\n          required: false\n          description: '\u003cp\u003eThe identifier of the revision to edit. If this ID doesn''t match the current revision number, Amazon Lex returns an exception\u003c/p\u003e \u003cp\u003eIf you don''t specify a revision ID, Amazon Lex will delete the current policy.\u003c/p\u003e'\n          schema:\n            type: string\n            pattern: '^[0-9]+$'\n            minLength: 1\n            maxLength: 5\n    get:\n      operationId: DescribeResourcePolicy\n      description: Gets the resource policy and policy revision for a bot or bot alias.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeResourcePolicyResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the bot or bot alias that the resource policy is attached to.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 1011\n    put:\n      operationId: UpdateResourcePolicy\n      description: 'Replaces the existing resource policy for a bot or bot alias with a new one. If the policy doesn''t exist, Amazon Lex returns an exception.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateResourcePolicyResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '484':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the bot or bot alias that the resource policy is attached to.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 1011\n        - name: expectedRevisionId\n          in: query\n          required: false\n          description: '\u003cp\u003eThe identifier of the revision of the policy to update. If this revision ID doesn''t match the current revision ID, Amazon Lex throws an exception.\u003c/p\u003e \u003cp\u003eIf you don''t specify a revision, Amazon Lex overwrites the contents of the policy with the new values.\u003c/p\u003e'\n          schema:\n            type: string\n            pattern: '^[0-9]+$'\n            minLength: 1\n            maxLength: 5\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - policy\n              properties:\n                policy:\n                  description: '\u003cp\u003eA resource policy to add to the resource. The policy is a JSON structure that contains one or more statements that define the policy. The policy must follow the IAM syntax. For more information about the contents of a JSON policy document, see \u003ca href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html\"\u003e IAM JSON policy reference \u003c/a\u003e. \u003c/p\u003e \u003cp\u003eIf the policy isn''t valid, Amazon Lex returns a validation exception.\u003c/p\u003e'\n                  type: string\n                  minLength: 2\n  '/policy/{resourceArn}/statements/':\n    post:\n      operationId: CreateResourcePolicyStatement\n      description: '\u003cp\u003eAdds a new resource policy statement to a bot or bot alias. If a resource policy exists, the statement is added to the current resource policy. If a policy doesn''t exist, a new policy is created.\u003c/p\u003e \u003cp\u003eYou can''t create a resource policy statement that allows cross-account access.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateResourcePolicyStatementResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '484':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '486':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the bot or bot alias that the resource policy is attached to.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 1011\n        - name: expectedRevisionId\n          in: query\n          required: false\n          description: '\u003cp\u003eThe identifier of the revision of the policy to edit. If this revision ID doesn''t match the current revision ID, Amazon Lex throws an exception.\u003c/p\u003e \u003cp\u003eIf you don''t specify a revision, Amazon Lex overwrites the contents of the policy with the new values.\u003c/p\u003e'\n          schema:\n            type: string\n            pattern: '^[0-9]+$'\n            minLength: 1\n            maxLength: 5\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - statementId\n                - effect\n                - principal\n                - action\n              properties:\n                statementId:\n                  description: 'The name of the statement. The ID is the same as the \u003ccode\u003eSid\u003c/code\u003e IAM property. The statement name must be unique within the policy. For more information, see \u003ca href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_sid.html\"\u003eIAM JSON policy elements: Sid\u003c/a\u003e. '\n                  type: string\n                  pattern: '^([0-9a-zA-Z][_-]?)+$'\n                  minLength: 1\n                  maxLength: 100\n                effect:\n                  description: Determines whether the statement allows or denies access to the resource.\n                  type: string\n                  enum:\n                    - Allow\n                    - Deny\n                principal:\n                  description: 'An IAM principal, such as an IAM users, IAM roles, or AWS services that is allowed or denied access to a resource. For more information, see \u003ca href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html\"\u003eAWS JSON policy elements: Principal\u003c/a\u003e.'\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Principal'\n                action:\n                  description: 'The Amazon Lex action that this policy either allows or denies. The action must apply to the resource type of the specified ARN. For more information, see \u003ca href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonlexv2.html\"\u003e Actions, resources, and condition keys for Amazon Lex V2\u003c/a\u003e.'\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Operation'\n                condition:\n                  description: '\u003cp\u003eSpecifies a condition when the policy is in effect. If the principal of the policy is a service principal, you must provide two condition blocks, one with a SourceAccount global condition key and one with a SourceArn global condition key.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition.html\"\u003eIAM JSON policy elements: Condition \u003c/a\u003e.\u003c/p\u003e'\n                  type: object\n                  minProperties: 0\n                  maxProperties: 10\n                  additionalProperties:\n                    $ref: '#/components/schemas/ConditionKeyValueMap'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/intents/{intentId}/slots/':\n    put:\n      operationId: CreateSlot\n      description: 'Creates a slot in an intent. A slot is a variable needed to fulfill an intent. For example, an \u003ccode\u003eOrderPizza\u003c/code\u003e intent might need slots for size, crust, and number of pizzas. For each slot, you define one or more utterances that Amazon Lex uses to elicit a response from the user. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateSlotResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '484':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: botId\n          in: path\n          required: true\n          description: The identifier of the bot associated with the slot.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botVersion\n          in: path\n          required: true\n          description: The version of the bot associated with the slot.\n          schema:\n            type: string\n            pattern: ^DRAFT$\n            minLength: 5\n            maxLength: 5\n        - name: localeId\n          in: path\n          required: true\n          description: 'The identifier of the language and locale that the slot will be used in. The string must match one of the supported locales. All of the bots, intents, slot types used by the slot must have the same locale. For more information, see \u003ca href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\"\u003eSupported languages\u003c/a\u003e.'\n          schema:\n            type: string\n        - name: intentId\n          in: path\n          required: true\n          description: The identifier of the intent that contains the slot.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - slotName\n                - slotTypeId\n                - valueElicitationSetting\n              properties:\n                slotName:\n                  description: The name of the slot. Slot names must be unique within the bot that contains the slot.\n                  type: string\n                  pattern: '^([0-9a-zA-Z][_-]?)+$'\n                  minLength: 1\n                  maxLength: 100\n                description:\n                  description: A description of the slot. Use this to help identify the slot in lists.\n                  type: string\n                  minLength: 0\n                  maxLength: 200\n                slotTypeId:\n                  description: The unique identifier for the slot type associated with this slot. The slot type determines the values that can be entered into the slot.\n                  type: string\n                  pattern: '^((AMAZON\\.)[a-zA-Z_]+?|[0-9a-zA-Z]+)$'\n                  minLength: 1\n                  maxLength: 25\n                valueElicitationSetting:\n                  description: Settings that you can use for eliciting a slot value.\n                  type: object\n                  properties:\n                    defaultValueSpecification:\n                      allOf:\n                        - $ref: '#/components/schemas/SlotDefaultValueSpecification'\n                        - description: 'A list of default values for a slot. Default values are used when Amazon Lex hasn''t determined a value for a slot. You can specify default values from context variables, sesion attributes, and defined values.'\n                    slotConstraint:\n                      allOf:\n                        - $ref: '#/components/schemas/SlotConstraint'\n                        - description: Specifies whether the slot is required or optional.\n                    promptSpecification:\n                      allOf:\n                        - $ref: '#/components/schemas/PromptSpecification'\n                        - description: The prompt that Amazon Lex uses to elicit the slot value from the user.\n                    sampleUtterances:\n                      allOf:\n                        - $ref: '#/components/schemas/SampleUtterancesList'\n                        - description: 'If you know a specific pattern that users might respond to an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This is optional. In most cases, Amazon Lex is capable of understanding user utterances.'\n                    waitAndContinueSpecification:\n                      $ref: '#/components/schemas/WaitAndContinueSpecification'\n                obfuscationSetting:\n                  description: 'Determines whether Amazon Lex obscures slot values in conversation logs. '\n                  type: object\n                  properties:\n                    obfuscationSettingType:\n                      allOf:\n                        - $ref: '#/components/schemas/ObfuscationSettingType'\n                        - description: Value that determines whether Amazon Lex obscures slot values in conversation logs. The default is to obscure the values.\n                multipleValuesSetting:\n                  description: Indicates whether a slot can return multiple values.\n                  type: object\n                  properties:\n                    allowMultipleValues:\n                      allOf:\n                        - $ref: '#/components/schemas/Boolean'\n                        - description: '\u003cp\u003eIndicates whether a slot can return multiple values. When \u003ccode\u003etrue\u003c/code\u003e, the slot may return more than one value in a response. When \u003ccode\u003efalse\u003c/code\u003e, the slot returns only a single value.\u003c/p\u003e \u003cp\u003eMulti-value slots are only available in the en-US locale. If you set this value to \u003ccode\u003etrue\u003c/code\u003e in any other locale, Amazon Lex throws a \u003ccode\u003eValidationException\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIf the \u003ccode\u003eallowMutlipleValues\u003c/code\u003e is not set, the default value is \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: ListSlots\n      description: Gets a list of slots that match the specified criteria.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListSlotsResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: botId\n          in: path\n          required: true\n          description: The identifier of the bot that contains the slot.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botVersion\n          in: path\n          required: true\n          description: The version of the bot that contains the slot.\n          schema:\n            type: string\n            pattern: '^(DRAFT|[0-9]+)$'\n            minLength: 1\n            maxLength: 5\n        - name: localeId\n          in: path\n          required: true\n          description: 'The identifier of the language and locale of the slots to list. The string must match one of the supported locales. For more information, see \u003ca href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\"\u003eSupported languages\u003c/a\u003e.'\n          schema:\n            type: string\n        - name: intentId\n          in: path\n          required: true\n          description: The unique identifier of the intent that contains the slot.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                sortBy:\n                  description: Specifies attributes for sorting a list of bots.\n                  type: object\n                  properties:\n                    attribute:\n                      allOf:\n                        - $ref: '#/components/schemas/SlotSortAttribute'\n                        - description: The attribute to use to sort the list.\n                    order:\n                      allOf:\n                        - $ref: '#/components/schemas/SortOrder'\n                        - description: The order to sort the list. You can choose ascending or descending.\n                filters:\n                  description: Provides the specification of a filter used to limit the slots in the response to only those that match the filter specification. You can only specify one filter and only one string to filter on.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/SlotFilter'\n                  minItems: 1\n                  maxItems: 1\n                maxResults:\n                  description: 'The maximum number of slots to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.'\n                  type: integer\n                  minimum: 1\n                  maximum: 1000\n                nextToken:\n                  description: 'If the response from the \u003ccode\u003eListSlots\u003c/code\u003e operation contains more results than specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter, a token is returned in the response. Use that token in the \u003ccode\u003enextToken\u003c/code\u003e parameter to return the next page of results.'\n                  type: string\n  '/bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/slottypes/':\n    put:\n      operationId: CreateSlotType\n      description: '\u003cp\u003eCreates a custom slot type\u003c/p\u003e \u003cp\u003e To create a custom slot type, specify a name for the slot type and a set of enumeration values, the values that a slot of this type can assume. \u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateSlotTypeResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '484':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: botId\n          in: path\n          required: true\n          description: The identifier of the bot associated with this slot type.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botVersion\n          in: path\n          required: true\n          description: The identifier of the bot version associated with this slot type.\n          schema:\n            type: string\n            pattern: ^DRAFT$\n            minLength: 5\n            maxLength: 5\n        - name: localeId\n          in: path\n          required: true\n          description: 'The identifier of the language and locale that the slot type will be used in. The string must match one of the supported locales. All of the bots, intents, and slots used by the slot type must have the same locale. For more information, see \u003ca href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\"\u003eSupported languages\u003c/a\u003e.'\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - slotTypeName\n                - valueSelectionSetting\n              properties:\n                slotTypeName:\n                  description: The name for the slot. A slot type name must be unique within the account.\n                  type: string\n                  pattern: '^([0-9a-zA-Z][_-]?)+$'\n                  minLength: 1\n                  maxLength: 100\n                description:\n                  description: A description of the slot type. Use the description to help identify the slot type in lists.\n                  type: string\n                  minLength: 0\n                  maxLength: 200\n                slotTypeValues:\n                  description: 'A list of \u003ccode\u003eSlotTypeValue\u003c/code\u003e objects that defines the values that the slot type can take. Each value can have a list of synonyms, additional values that help train the machine learning model about the values that it resolves for a slot.'\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/SlotTypeValue'\n                  minItems: 1\n                  maxItems: 10000\n                valueSelectionSetting:\n                  description: Contains settings used by Amazon Lex to select a slot value.\n                  type: object\n                  properties:\n                    resolutionStrategy:\n                      allOf:\n                        - $ref: '#/components/schemas/SlotValueResolutionStrategy'\n                        - description: '\u003cp\u003eDetermines the slot resolution strategy that Amazon Lex uses to return slot type values. The field can be set to one of the following values:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eOriginalValue - Returns the value entered by the user, if the user value is similar to the slot value.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTopResolution - If there is a resolution list for the slot, return the first value in the resolution list as the slot type value. If there is no resolution list, null is returned.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf you don''t specify the valueSelectionStrategy, the default is OriginalValue. \u003c/p\u003e'\n                    regexFilter:\n                      allOf:\n                        - $ref: '#/components/schemas/SlotValueRegexFilter'\n                        - description: A regular expression used to validate the value of a slot.\n                parentSlotTypeSignature:\n                  description: '\u003cp\u003eThe built-in slot type used as a parent of this slot type. When you define a parent slot type, the new slot type has the configuration of the parent slot type.\u003c/p\u003e \u003cp\u003eOnly \u003ccode\u003eAMAZON.AlphaNumeric\u003c/code\u003e is supported.\u003c/p\u003e'\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: ListSlotTypes\n      description: Gets a list of slot types that match the specified criteria.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListSlotTypesResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: botId\n          in: path\n          required: true\n          description: The unique identifier of the bot that contains the slot types.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botVersion\n          in: path\n          required: true\n          description: The version of the bot that contains the slot type.\n          schema:\n            type: string\n            pattern: '^(DRAFT|[0-9]+)$'\n            minLength: 1\n            maxLength: 5\n        - name: localeId\n          in: path\n          required: true\n          description: 'The identifier of the language and locale of the slot types to list. The string must match one of the supported locales. For more information, see \u003ca href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\"\u003eSupported languages\u003c/a\u003e.'\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                sortBy:\n                  description: Specifies attributes for sorting a list of slot types.\n                  type: object\n                  properties:\n                    attribute:\n                      allOf:\n                        - $ref: '#/components/schemas/SlotTypeSortAttribute'\n                        - description: The attribute to use to sort the list of slot types.\n                    order:\n                      allOf:\n                        - $ref: '#/components/schemas/SortOrder'\n                        - description: The order to sort the list. You can say ascending or descending.\n                filters:\n                  description: Provides the specification of a filter used to limit the slot types in the response to only those that match the filter specification. You can only specify one filter and only one string to filter on.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/SlotTypeFilter'\n                  minItems: 1\n                  maxItems: 1\n                maxResults:\n                  description: 'The maximum number of slot types to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.'\n                  type: integer\n                  minimum: 1\n                  maximum: 1000\n                nextToken:\n                  description: 'If the response from the \u003ccode\u003eListSlotTypes\u003c/code\u003e operation contains more results than specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter, a token is returned in the response. Use that token in the \u003ccode\u003enextToken\u003c/code\u003e parameter to return the next page of results.'\n                  type: string\n  /createuploadurl/:\n    post:\n      operationId: CreateUploadUrl\n      description: 'Gets a pre-signed S3 write URL that you use to upload the zip archive when importing a bot or a bot locale. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateUploadUrlResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '484':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters: []\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/bots/{botId}/':\n    delete:\n      operationId: DeleteBot\n      description: '\u003cp\u003eDeletes all versions of a bot, including the \u003ccode\u003eDraft\u003c/code\u003e version. To delete a specific version, use the \u003ccode\u003eDeleteBotVersion\u003c/code\u003e operation.\u003c/p\u003e \u003cp\u003eWhen you delete a bot, all of the resources contained in the bot are also deleted. Deleting a bot removes all locales, intents, slot, and slot types defined for the bot.\u003c/p\u003e \u003cp\u003eIf a bot has an alias, the \u003ccode\u003eDeleteBot\u003c/code\u003e operation returns a \u003ccode\u003eResourceInUseException\u003c/code\u003e exception. If you want to delete the bot and the alias, set the \u003ccode\u003eskipResourceInUseCheck\u003c/code\u003e parameter to \u003ccode\u003etrue\u003c/code\u003e.\u003c/p\u003e'\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteBotResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '484':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: botId\n          in: path\n          required: true\n          description: 'The identifier of the bot to delete. '\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: skipResourceInUseCheck\n          in: query\n          required: false\n          description: 'When \u003ccode\u003etrue\u003c/code\u003e, Amazon Lex doesn''t check to see if another resource, such as an alias, is using the bot before it is deleted.'\n          schema:\n            type: boolean\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: DescribeBot\n      description: 'Provides metadata information about a bot. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeBotResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: botId\n          in: path\n          required: true\n          description: The unique identifier of the bot to describe.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n    put:\n      operationId: UpdateBot\n      description: 'Updates the configuration of an existing bot. '\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateBotResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '484':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: botId\n          in: path\n          required: true\n          description: The unique identifier of the bot to update. This identifier is returned by the \u003ca\u003eCreateBot\u003c/a\u003e operation.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - botName\n                - roleArn\n                - dataPrivacy\n                - idleSessionTTLInSeconds\n              properties:\n                botName:\n                  description: The new name of the bot. The name must be unique in the account that creates the bot.\n                  type: string\n                  pattern: '^([0-9a-zA-Z][_-]?)+$'\n                  minLength: 1\n                  maxLength: 100\n                description:\n                  description: A description of the bot.\n                  type: string\n                  minLength: 0\n                  maxLength: 200\n                roleArn:\n                  description: The Amazon Resource Name (ARN) of an IAM role that has permissions to access the bot.\n                  type: string\n                  pattern: '^arn:aws:iam::[0-9]{12}:role/.*$'\n                  minLength: 32\n                  maxLength: 2048\n                dataPrivacy:\n                  description: 'By default, data stored by Amazon Lex is encrypted. The \u003ccode\u003eDataPrivacy\u003c/code\u003e structure provides settings that determine how Amazon Lex handles special cases of securing the data for your bot. '\n                  type: object\n                  properties:\n                    childDirected:\n                      allOf:\n                        - $ref: '#/components/schemas/ChildDirected'\n                        - description: 'For each Amazon Lex bot created with the Amazon Lex Model Building Service, you must specify whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children''s Online Privacy Protection Act (COPPA) by specifying \u003ccode\u003etrue\u003c/code\u003e or \u003ccode\u003efalse\u003c/code\u003e in the \u003ccode\u003echildDirected\u003c/code\u003e field. By specifying \u003ccode\u003etrue\u003c/code\u003e in the \u003ccode\u003echildDirected\u003c/code\u003e field, you confirm that your use of Amazon Lex \u003cb\u003eis\u003c/b\u003e related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. By specifying \u003ccode\u003efalse\u003c/code\u003e in the \u003ccode\u003echildDirected\u003c/code\u003e field, you confirm that your use of Amazon Lex \u003cb\u003eis not\u003c/b\u003e related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. You may not specify a default value for the \u003ccode\u003echildDirected\u003c/code\u003e field that does not accurately reflect whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. If your use of Amazon Lex relates to a website, program, or other application that is directed in whole or in part, to children under age 13, you must obtain any required verifiable parental consent under COPPA. For information regarding the use of Amazon Lex in connection with websites, programs, or other applications that are directed or targeted, in whole or in part, to children under age 13, see the \u003ca href=\"https://aws.amazon.com/lex/faqs#data-security\"\u003eAmazon Lex FAQ\u003c/a\u003e.'\n                idleSessionTTLInSeconds:\n                  description: '\u003cp\u003eThe time, in seconds, that Amazon Lex should keep information about a user''s conversation with the bot.\u003c/p\u003e \u003cp\u003eA user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Lex deletes any data provided before the timeout.\u003c/p\u003e \u003cp\u003eYou can specify between 60 (1 minute) and 86,400 (24 hours) seconds.\u003c/p\u003e'\n                  type: integer\n                  minimum: 60\n                  maximum: 86400\n  '/bots/{botId}/botaliases/{botAliasId}/':\n    delete:\n      operationId: DeleteBotAlias\n      description: Deletes the specified bot alias.\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteBotAliasResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '484':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: botAliasId\n          in: path\n          required: true\n          description: The unique identifier of the bot alias to delete.\n          schema:\n            type: string\n            pattern: '^(\\bTSTALIASID\\b|[0-9a-zA-Z]+)$'\n            minLength: 10\n            maxLength: 10\n        - name: botId\n          in: path\n          required: true\n          description: The unique identifier of the bot associated with the alias to delete.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: skipResourceInUseCheck\n          in: query\n          required: false\n          description: 'When this parameter is true, Amazon Lex doesn''t check to see if any other resource is using the alias before it is deleted.'\n          schema:\n            type: boolean\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: DescribeBotAlias\n      description: Get information about a specific bot alias.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeBotAliasResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: botAliasId\n          in: path\n          required: true\n          description: The identifier of the bot alias to describe.\n          schema:\n            type: string\n            pattern: '^(\\bTSTALIASID\\b|[0-9a-zA-Z]+)$'\n            minLength: 10\n            maxLength: 10\n        - name: botId\n          in: path\n          required: true\n          description: The identifier of the bot associated with the bot alias to describe.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n    put:\n      operationId: UpdateBotAlias\n      description: Updates the configuration of an existing bot alias.\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateBotAliasResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '484':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: botAliasId\n          in: path\n          required: true\n          description: The unique identifier of the bot alias.\n          schema:\n            type: string\n            pattern: '^(\\bTSTALIASID\\b|[0-9a-zA-Z]+)$'\n            minLength: 10\n            maxLength: 10\n        - name: botId\n          in: path\n          required: true\n          description: The identifier of the bot with the updated alias.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - botAliasName\n              properties:\n                botAliasName:\n                  description: The new name to assign to the bot alias.\n                  type: string\n                  pattern: '^([0-9a-zA-Z][_-]?)+$'\n                  minLength: 1\n                  maxLength: 100\n                description:\n                  description: The new description to assign to the bot alias.\n                  type: string\n                  minLength: 0\n                  maxLength: 200\n                botVersion:\n                  description: The new bot version to assign to the bot alias.\n                  type: string\n                  pattern: '^(DRAFT|[0-9]+)$'\n                  minLength: 1\n                  maxLength: 5\n                botAliasLocaleSettings:\n                  description: The new Lambda functions to use in each locale for the bot alias.\n                  type: object\n                  minProperties: 1\n                  additionalProperties:\n                    $ref: '#/components/schemas/BotAliasLocaleSettings'\n                conversationLogSettings:\n                  description: 'Configures conversation logging that saves audio, text, and metadata for the conversations with your users.'\n                  type: object\n                  properties:\n                    textLogSettings:\n                      allOf:\n                        - $ref: '#/components/schemas/TextLogSettingsList'\n                        - description: The Amazon CloudWatch Logs settings for logging text and metadata.\n                    audioLogSettings:\n                      allOf:\n                        - $ref: '#/components/schemas/AudioLogSettingsList'\n                        - description: The Amazon S3 settings for logging audio to an S3 bucket.\n                sentimentAnalysisSettings:\n                  description: Determines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.\n                  type: object\n                  properties:\n                    detectSentiment:\n                      allOf:\n                        - $ref: '#/components/schemas/Boolean'\n                        - description: Sets whether Amazon Lex uses Amazon Comprehend to detect the sentiment of user utterances.\n  '/bots/{botId}/botversions/{botVersion}/':\n    delete:\n      operationId: DeleteBotVersion\n      description: 'Deletes a specific version of a bot. To delete all version of a bot, use the \u003ca\u003eDeleteBot\u003c/a\u003e operation.'\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteBotVersionResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '484':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: botId\n          in: path\n          required: true\n          description: The identifier of the bot that contains the version.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botVersion\n          in: path\n          required: true\n          description: The version of the bot to delete.\n          schema:\n            type: string\n            pattern: '^[0-9]+$'\n            minLength: 1\n            maxLength: 5\n        - name: skipResourceInUseCheck\n          in: query\n          required: false\n          description: 'By default, the \u003ccode\u003eDeleteBotVersion\u003c/code\u003e operations throws a \u003ccode\u003eResourceInUseException\u003c/code\u003e exception if you try to delete a bot version that has an alias pointing at it. Set the \u003ccode\u003eskipResourceInUseCheck\u003c/code\u003e parameter to \u003ccode\u003etrue\u003c/code\u003e to skip this check and remove the version even if an alias points to it.'\n          schema:\n            type: boolean\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: DescribeBotVersion\n      description: Provides metadata about a version of a bot.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeBotVersionResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: botId\n          in: path\n          required: true\n          description: The identifier of the bot containing the version to return metadata for.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botVersion\n          in: path\n          required: true\n          description: The version of the bot to return metadata for.\n          schema:\n            type: string\n            pattern: '^[0-9]+$'\n            minLength: 1\n            maxLength: 5\n  '/exports/{exportId}/':\n    delete:\n      operationId: DeleteExport\n      description: Removes a previous export and the associated files stored in an S3 bucket.\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteExportResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '484':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: exportId\n          in: path\n          required: true\n          description: The unique identifier of the export to delete.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: DescribeExport\n      description: Gets information about a specific export.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeExportResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: exportId\n          in: path\n          required: true\n          description: The unique identifier of the export to describe.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n    put:\n      operationId: UpdateExport\n      description: '\u003cp\u003eUpdates the password used to protect an export zip archive.\u003c/p\u003e \u003cp\u003eThe password is not required. If you don''t supply a password, Amazon Lex generates a zip file that is not protected by a password. This is the archive that is available at the pre-signed S3 URL provided by the operation.\u003c/p\u003e'\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateExportResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: exportId\n          in: path\n          required: true\n          description: The unique identifier Amazon Lex assigned to the export.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filePassword:\n                  description: The new password to use to encrypt the export zip archive.\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                  format: password\n  '/imports/{importId}/':\n    delete:\n      operationId: DeleteImport\n      description: Removes a previous import and the associated file stored in an S3 bucket.\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteImportResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '484':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: importId\n          in: path\n          required: true\n          description: The unique identifier of the import to delete.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: DescribeImport\n      description: Gets information about a specific import.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeImportResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: importId\n          in: path\n          required: true\n          description: The unique identifier of the import to describe.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n  '/bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/intents/{intentId}/':\n    delete:\n      operationId: DeleteIntent\n      description: \u003cp\u003eRemoves the specified intent.\u003c/p\u003e \u003cp\u003eDeleting an intent also deletes the slots associated with the intent.\u003c/p\u003e\n      responses:\n        '204':\n          description: Success\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '484':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: intentId\n          in: path\n          required: true\n          description: The unique identifier of the intent to delete.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botId\n          in: path\n          required: true\n          description: The identifier of the bot associated with the intent.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botVersion\n          in: path\n          required: true\n          description: The version of the bot associated with the intent.\n          schema:\n            type: string\n            pattern: ^DRAFT$\n            minLength: 5\n            maxLength: 5\n        - name: localeId\n          in: path\n          required: true\n          description: 'The identifier of the language and locale where the bot will be deleted. The string must match one of the supported locales. For more information, see \u003ca href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\"\u003eSupported languages\u003c/a\u003e.'\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: DescribeIntent\n      description: Returns metadata about an intent.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeIntentResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: intentId\n          in: path\n          required: true\n          description: The identifier of the intent to describe.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botId\n          in: path\n          required: true\n          description: The identifier of the bot associated with the intent.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botVersion\n          in: path\n          required: true\n          description: The version of the bot associated with the intent.\n          schema:\n            type: string\n            pattern: '^(DRAFT|[0-9]+)$'\n            minLength: 1\n            maxLength: 5\n        - name: localeId\n          in: path\n          required: true\n          description: 'The identifier of the language and locale of the intent to describe. The string must match one of the supported locales. For more information, see \u003ca href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\"\u003eSupported languages\u003c/a\u003e.'\n          schema:\n            type: string\n    put:\n      operationId: UpdateIntent\n      description: Updates the settings for an intent.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateIntentResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '484':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: intentId\n          in: path\n          required: true\n          description: The unique identifier of the intent to update.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botId\n          in: path\n          required: true\n          description: The identifier of the bot that contains the intent.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botVersion\n          in: path\n          required: true\n          description: The version of the bot that contains the intent. Must be \u003ccode\u003eDRAFT\u003c/code\u003e.\n          schema:\n            type: string\n            pattern: ^DRAFT$\n            minLength: 5\n            maxLength: 5\n        - name: localeId\n          in: path\n          required: true\n          description: 'The identifier of the language and locale where this intent is used. The string must match one of the supported locales. For more information, see \u003ca href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\"\u003eSupported languages\u003c/a\u003e.'\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - intentName\n              properties:\n                intentName:\n                  description: The new name for the intent.\n                  type: string\n                  pattern: '^([0-9a-zA-Z][_-]?)+$'\n                  minLength: 1\n                  maxLength: 100\n                description:\n                  description: The new description of the intent.\n                  type: string\n                  minLength: 0\n                  maxLength: 200\n                parentIntentSignature:\n                  description: The signature of the new built-in intent to use as the parent of this intent.\n                  type: string\n                sampleUtterances:\n                  description: New utterances used to invoke the intent.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/SampleUtterance'\n                dialogCodeHook:\n                  description: Settings that determine the Lambda function that Amazon Lex uses for processing user responses.\n                  type: object\n                  properties:\n                    enabled:\n                      allOf:\n                        - $ref: '#/components/schemas/Boolean'\n                        - description: Enables the dialog code hook so that it processes user requests.\n                fulfillmentCodeHook:\n                  description: Determines if a Lambda function should be invoked for a specific intent.\n                  type: object\n                  properties:\n                    enabled:\n                      allOf:\n                        - $ref: '#/components/schemas/Boolean'\n                        - description: Indicates whether a Lambda function should be invoked to fulfill a specific intent.\n                slotPriorities:\n                  description: A new list of slots and their priorities that are contained by the intent.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/SlotPriority'\n                intentConfirmationSetting:\n                  description: Provides a prompt for making sure that the user is ready for the intent to be fulfilled.\n                  type: object\n                  properties:\n                    promptSpecification:\n                      allOf:\n                        - $ref: '#/components/schemas/PromptSpecification'\n                        - description: '\u003cp\u003ePrompts the user to confirm the intent. This question should have a yes or no answer.\u003c/p\u003e \u003cp\u003eAmazon Lex uses this prompt to ensure that the user acknowledges that the intent is ready for fulfillment. For example, with the \u003ccode\u003eOrderPizza\u003c/code\u003e intent, you might want to confirm that the order is correct before placing it. For other intents, such as intents that simply respond to user questions, you might not need to ask the user for confirmation before providing the information. \u003c/p\u003e'\n                    declinationResponse:\n                      allOf:\n                        - $ref: '#/components/schemas/ResponseSpecification'\n                        - description: 'When the user answers \"no\" to the question defined in \u003ccode\u003epromptSpecification\u003c/code\u003e, Amazon Lex responds with this response to acknowledge that the intent was canceled. '\n                    active:\n                      allOf:\n                        - $ref: '#/components/schemas/BoxedBoolean'\n                        - description: 'Specifies whether the intent''s confirmation is sent to the user. When this field is false, confirmation and declination responses aren''t sent and processing continues as if the responses aren''t present. If the \u003ccode\u003eactive\u003c/code\u003e field isn''t specified, the default is true.'\n                intentClosingSetting:\n                  description: Provides a statement the Amazon Lex conveys to the user when the intent is successfully fulfilled.\n                  type: object\n                  properties:\n                    closingResponse:\n                      allOf:\n                        - $ref: '#/components/schemas/ResponseSpecification'\n                        - description: The response that Amazon Lex sends to the user when the intent is complete.\n                    active:\n                      allOf:\n                        - $ref: '#/components/schemas/BoxedBoolean'\n                        - description: 'Specifies whether an intent''s closing response is used. When this field is false, the closing response isn''t sent to the user and no closing input from the user is used. If the \u003ccode\u003eactive\u003c/code\u003e field isn''t specified, the default is true.'\n                inputContexts:\n                  description: A new list of contexts that must be active in order for Amazon Lex to consider the intent.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/InputContext'\n                  minItems: 0\n                  maxItems: 5\n                outputContexts:\n                  description: A new list of contexts that Amazon Lex activates when the intent is fulfilled.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/OutputContext'\n                  minItems: 0\n                  maxItems: 10\n                kendraConfiguration:\n                  description: 'Provides configuration information for the AMAZON.KendraSearchIntent intent. When you use this intent, Amazon Lex searches the specified Amazon Kendra index and returns documents from the index that match the user''s utterance.'\n                  type: object\n                  properties:\n                    kendraIndex:\n                      allOf:\n                        - $ref: '#/components/schemas/KendraIndexArn'\n                        - description: The Amazon Resource Name (ARN) of the Amazon Kendra index that you want the AMAZON.KendraSearchIntent intent to search. The index must be in the same account and Region as the Amazon Lex bot.\n                    queryFilterStringEnabled:\n                      allOf:\n                        - $ref: '#/components/schemas/Boolean'\n                        - description: Determines whether the AMAZON.KendraSearchIntent intent uses a custom query string to query the Amazon Kendra index.\n                    queryFilterString:\n                      allOf:\n                        - $ref: '#/components/schemas/QueryFilterString'\n                        - description: 'A query filter that Amazon Lex sends to Amazon Kendra to filter the response from a query. The filter is in the format defined by Amazon Kendra. For more information, see \u003ca href=\"https://docs.aws.amazon.com/kendra/latest/dg/filtering.html\"\u003eFiltering queries\u003c/a\u003e.'\n  '/policy/{resourceArn}/statements/{statementId}/':\n    delete:\n      operationId: DeleteResourcePolicyStatement\n      description: 'Deletes a policy statement from a resource policy. If you delete the last statement from a policy, the policy is deleted. If you specify a statement ID that doesn''t exist in the policy, or if the bot or bot alias doesn''t have a policy attached, Amazon Lex returns an exception.'\n      responses:\n        '204':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteResourcePolicyStatementResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the bot or bot alias that the resource policy is attached to.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 1011\n        - name: statementId\n          in: path\n          required: true\n          description: The name of the statement (SID) to delete from the policy.\n          schema:\n            type: string\n            pattern: '^([0-9a-zA-Z][_-]?)+$'\n            minLength: 1\n            maxLength: 100\n        - name: expectedRevisionId\n          in: query\n          required: false\n          description: '\u003cp\u003eThe identifier of the revision of the policy to delete the statement from. If this revision ID doesn''t match the current revision ID, Amazon Lex throws an exception.\u003c/p\u003e \u003cp\u003eIf you don''t specify a revision, Amazon Lex removes the current contents of the statement. \u003c/p\u003e'\n          schema:\n            type: string\n            pattern: '^[0-9]+$'\n            minLength: 1\n            maxLength: 5\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/intents/{intentId}/slots/{slotId}/':\n    delete:\n      operationId: DeleteSlot\n      description: Deletes the specified slot from an intent.\n      responses:\n        '204':\n          description: Success\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '484':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: slotId\n          in: path\n          required: true\n          description: 'The identifier of the slot to delete. '\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botId\n          in: path\n          required: true\n          description: The identifier of the bot associated with the slot to delete.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botVersion\n          in: path\n          required: true\n          description: The version of the bot associated with the slot to delete.\n          schema:\n            type: string\n            pattern: ^DRAFT$\n            minLength: 5\n            maxLength: 5\n        - name: localeId\n          in: path\n          required: true\n          description: 'The identifier of the language and locale that the slot will be deleted from. The string must match one of the supported locales. For more information, see \u003ca href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\"\u003eSupported languages\u003c/a\u003e.'\n          schema:\n            type: string\n        - name: intentId\n          in: path\n          required: true\n          description: The identifier of the intent associated with the slot.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: DescribeSlot\n      description: Gets metadata information about a slot.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeSlotResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: slotId\n          in: path\n          required: true\n          description: The unique identifier for the slot.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botId\n          in: path\n          required: true\n          description: The identifier of the bot associated with the slot.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botVersion\n          in: path\n          required: true\n          description: The version of the bot associated with the slot.\n          schema:\n            type: string\n            pattern: '^(DRAFT|[0-9]+)$'\n            minLength: 1\n            maxLength: 5\n        - name: localeId\n          in: path\n          required: true\n          description: 'The identifier of the language and locale of the slot to describe. The string must match one of the supported locales. For more information, see \u003ca href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\"\u003eSupported languages\u003c/a\u003e.'\n          schema:\n            type: string\n        - name: intentId\n          in: path\n          required: true\n          description: The identifier of the intent that contains the slot.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n    put:\n      operationId: UpdateSlot\n      description: Updates the settings for a slot.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateSlotResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '484':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: slotId\n          in: path\n          required: true\n          description: The unique identifier for the slot to update.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botId\n          in: path\n          required: true\n          description: The unique identifier of the bot that contains the slot.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botVersion\n          in: path\n          required: true\n          description: The version of the bot that contains the slot. Must always be \u003ccode\u003eDRAFT\u003c/code\u003e.\n          schema:\n            type: string\n            pattern: ^DRAFT$\n            minLength: 5\n            maxLength: 5\n        - name: localeId\n          in: path\n          required: true\n          description: 'The identifier of the language and locale that contains the slot. The string must match one of the supported locales. For more information, see \u003ca href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\"\u003eSupported languages\u003c/a\u003e.'\n          schema:\n            type: string\n        - name: intentId\n          in: path\n          required: true\n          description: The identifier of the intent that contains the slot.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - slotName\n                - slotTypeId\n                - valueElicitationSetting\n              properties:\n                slotName:\n                  description: The new name for the slot.\n                  type: string\n                  pattern: '^([0-9a-zA-Z][_-]?)+$'\n                  minLength: 1\n                  maxLength: 100\n                description:\n                  description: The new description for the slot.\n                  type: string\n                  minLength: 0\n                  maxLength: 200\n                slotTypeId:\n                  description: 'The unique identifier of the new slot type to associate with this slot. '\n                  type: string\n                  pattern: '^((AMAZON\\.)[a-zA-Z_]+?|[0-9a-zA-Z]+)$'\n                  minLength: 1\n                  maxLength: 25\n                valueElicitationSetting:\n                  description: Settings that you can use for eliciting a slot value.\n                  type: object\n                  properties:\n                    defaultValueSpecification:\n                      allOf:\n                        - $ref: '#/components/schemas/SlotDefaultValueSpecification'\n                        - description: 'A list of default values for a slot. Default values are used when Amazon Lex hasn''t determined a value for a slot. You can specify default values from context variables, sesion attributes, and defined values.'\n                    slotConstraint:\n                      allOf:\n                        - $ref: '#/components/schemas/SlotConstraint'\n                        - description: Specifies whether the slot is required or optional.\n                    promptSpecification:\n                      allOf:\n                        - $ref: '#/components/schemas/PromptSpecification'\n                        - description: The prompt that Amazon Lex uses to elicit the slot value from the user.\n                    sampleUtterances:\n                      allOf:\n                        - $ref: '#/components/schemas/SampleUtterancesList'\n                        - description: 'If you know a specific pattern that users might respond to an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This is optional. In most cases, Amazon Lex is capable of understanding user utterances.'\n                    waitAndContinueSpecification:\n                      $ref: '#/components/schemas/WaitAndContinueSpecification'\n                obfuscationSetting:\n                  description: 'Determines whether Amazon Lex obscures slot values in conversation logs. '\n                  type: object\n                  properties:\n                    obfuscationSettingType:\n                      allOf:\n                        - $ref: '#/components/schemas/ObfuscationSettingType'\n                        - description: Value that determines whether Amazon Lex obscures slot values in conversation logs. The default is to obscure the values.\n                multipleValuesSetting:\n                  description: Indicates whether a slot can return multiple values.\n                  type: object\n                  properties:\n                    allowMultipleValues:\n                      allOf:\n                        - $ref: '#/components/schemas/Boolean'\n                        - description: '\u003cp\u003eIndicates whether a slot can return multiple values. When \u003ccode\u003etrue\u003c/code\u003e, the slot may return more than one value in a response. When \u003ccode\u003efalse\u003c/code\u003e, the slot returns only a single value.\u003c/p\u003e \u003cp\u003eMulti-value slots are only available in the en-US locale. If you set this value to \u003ccode\u003etrue\u003c/code\u003e in any other locale, Amazon Lex throws a \u003ccode\u003eValidationException\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIf the \u003ccode\u003eallowMutlipleValues\u003c/code\u003e is not set, the default value is \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e'\n  '/bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/slottypes/{slotTypeId}/':\n    delete:\n      operationId: DeleteSlotType\n      description: '\u003cp\u003eDeletes a slot type from a bot locale.\u003c/p\u003e \u003cp\u003eIf a slot is using the slot type, Amazon Lex throws a \u003ccode\u003eResourceInUseException\u003c/code\u003e exception. To avoid the exception, set the \u003ccode\u003eskipResourceInUseCheck\u003c/code\u003e parameter to \u003ccode\u003etrue\u003c/code\u003e.\u003c/p\u003e'\n      responses:\n        '204':\n          description: Success\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '484':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: slotTypeId\n          in: path\n          required: true\n          description: The identifier of the slot type to delete.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botId\n          in: path\n          required: true\n          description: The identifier of the bot associated with the slot type.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botVersion\n          in: path\n          required: true\n          description: The version of the bot associated with the slot type.\n          schema:\n            type: string\n            pattern: ^DRAFT$\n            minLength: 5\n            maxLength: 5\n        - name: localeId\n          in: path\n          required: true\n          description: 'The identifier of the language and locale that the slot type will be deleted from. The string must match one of the supported locales. For more information, see \u003ca href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\"\u003eSupported languages\u003c/a\u003e.'\n          schema:\n            type: string\n        - name: skipResourceInUseCheck\n          in: query\n          required: false\n          description: 'By default, the \u003ccode\u003eDeleteSlotType\u003c/code\u003e operations throws a \u003ccode\u003eResourceInUseException\u003c/code\u003e exception if you try to delete a slot type used by a slot. Set the \u003ccode\u003eskipResourceInUseCheck\u003c/code\u003e parameter to \u003ccode\u003etrue\u003c/code\u003e to skip this check and remove the slot type even if a slot uses it.'\n          schema:\n            type: boolean\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: DescribeSlotType\n      description: Gets metadata information about a slot type.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeSlotTypeResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: slotTypeId\n          in: path\n          required: true\n          description: The identifier of the slot type.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botId\n          in: path\n          required: true\n          description: The identifier of the bot associated with the slot type.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botVersion\n          in: path\n          required: true\n          description: The version of the bot associated with the slot type.\n          schema:\n            type: string\n            pattern: '^(DRAFT|[0-9]+)$'\n            minLength: 1\n            maxLength: 5\n        - name: localeId\n          in: path\n          required: true\n          description: 'The identifier of the language and locale of the slot type to describe. The string must match one of the supported locales. For more information, see \u003ca href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\"\u003eSupported languages\u003c/a\u003e.'\n          schema:\n            type: string\n    put:\n      operationId: UpdateSlotType\n      description: Updates the configuration of an existing slot type.\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateSlotTypeResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '484':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: slotTypeId\n          in: path\n          required: true\n          description: The unique identifier of the slot type to update.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botId\n          in: path\n          required: true\n          description: The identifier of the bot that contains the slot type.\n          schema:\n            type: string\n            pattern: '^[0-9a-zA-Z]+$'\n            minLength: 10\n            maxLength: 10\n        - name: botVersion\n          in: path\n          required: true\n          description: The version of the bot that contains the slot type. Must be \u003ccode\u003eDRAFT\u003c/code\u003e.\n          schema:\n            type: string\n            pattern: ^DRAFT$\n            minLength: 5\n            maxLength: 5\n        - name: localeId\n          in: path\n          required: true\n          description: 'The identifier of the language and locale that contains the slot type. The string must match one of the supported locales. For more information, see \u003ca href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\"\u003eSupported languages\u003c/a\u003e.'\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - slotTypeName\n                - valueSelectionSetting\n              properties:\n                slotTypeName:\n                  description: The new name of the slot type.\n                  type: string\n                  pattern: '^([0-9a-zA-Z][_-]?)+$'\n                  minLength: 1\n                  maxLength: 100\n                description:\n                  description: The new description of the slot type.\n                  type: string\n                  minLength: 0\n                  maxLength: 200\n                slotTypeValues:\n                  description: A new list of values and their optional synonyms that define the values that the slot type can take.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/SlotTypeValue'\n                  minItems: 1\n                  maxItems: 10000\n                valueSelectionSetting:\n                  description: Contains settings used by Amazon Lex to select a slot value.\n                  type: object\n                  properties:\n                    resolutionStrategy:\n                      allOf:\n                        - $ref: '#/components/schemas/SlotValueResolutionStrategy'\n                        - description: '\u003cp\u003eDetermines the slot resolution strategy that Amazon Lex uses to return slot type values. The field can be set to one of the following values:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eOriginalValue - Returns the value entered by the user, if the user value is similar to the slot value.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTopResolution - If there is a resolution list for the slot, return the first value in the resolution list as the slot type value. If there is no resolution list, null is returned.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf you don''t specify the valueSelectionStrategy, the default is OriginalValue. \u003c/p\u003e'\n                    regexFilter:\n                      allOf:\n                        - $ref: '#/components/schemas/SlotValueRegexFilter'\n                        - description: A regular expression used to validate the value of a slot.\n                parentSlotTypeSignature:\n                  description: The new built-in slot type that should be used as the parent of this slot type.\n                  type: string\n  '/builtins/locales/{localeId}/intents/':\n    post:\n      operationId: ListBuiltInIntents\n      description: '\u003cp\u003eGets a list of built-in intents provided by Amazon Lex that you can use in your bot. \u003c/p\u003e \u003cp\u003eTo use a built-in intent as a the base for your own intent, include the built-in intent signature in the \u003ccode\u003eparentIntentSignature\u003c/code\u003e parameter when you call the \u003ccode\u003eCreateIntent\u003c/code\u003e operation. For more information, see \u003ca\u003eCreateIntent\u003c/a\u003e.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListBuiltInIntentsResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: localeId\n          in: path\n          required: true\n          description: 'The identifier of the language and locale of the intents to list. The string must match one of the supported locales. For more information, see \u003ca href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\"\u003eSupported languages\u003c/a\u003e.'\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                sortBy:\n                  description: Specifies attributes for sorting a list of built-in intents.\n                  type: object\n                  properties:\n                    attribute:\n                      allOf:\n                        - $ref: '#/components/schemas/BuiltInIntentSortAttribute'\n                        - description: The attribute to use to sort the list of built-in intents.\n                    order:\n                      allOf:\n                        - $ref: '#/components/schemas/SortOrder'\n                        - description: The order to sort the list. You can specify ascending or descending order.\n                maxResults:\n                  description: 'The maximum number of built-in intents to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.'\n                  type: integer\n                  minimum: 20\n                  maximum: 20\n                nextToken:\n                  description: 'If the response from the \u003ccode\u003eListBuiltInIntents\u003c/code\u003e operation contains more results than specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter, a token is returned in the response. Use that token in the \u003ccode\u003enextToken\u003c/code\u003e parameter to return the next page of results.'\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/builtins/locales/{localeId}/slottypes/':\n    post:\n      operationId: ListBuiltInSlotTypes\n      description: Gets a list of built-in slot types that meet the specified criteria.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListBuiltInSlotTypesResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: localeId\n          in: path\n          required: true\n          description: 'The identifier of the language and locale of the slot types to list. The string must match one of the supported locales. For more information, see \u003ca href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\"\u003eSupported languages\u003c/a\u003e.'\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                sortBy:\n                  description: Specifies attributes for sorting a list of built-in slot types.\n                  type: object\n                  properties:\n                    attribute:\n                      allOf:\n                        - $ref: '#/components/schemas/BuiltInSlotTypeSortAttribute'\n                        - description: The attribute to use to sort the list of built-in intents.\n                    order:\n                      allOf:\n                        - $ref: '#/components/schemas/SortOrder'\n                        - description: The order to sort the list. You can choose ascending or descending.\n                maxResults:\n                  description: 'The maximum number of built-in slot types to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.'\n                  type: integer\n                  minimum: 20\n                  maximum: 20\n                nextToken:\n                  description: 'If the response from the \u003ccode\u003eListBuiltInSlotTypes\u003c/code\u003e operation contains more results than specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter, a token is returned in the response. Use that token in the \u003ccode\u003enextToken\u003c/code\u003e parameter to return the next page of results.'\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /imports/:\n    post:\n      operationId: ListImports\n      description: Lists the imports for a bot or bot locale. Imports are kept in the list for 7 days.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListImportsResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                botId:\n                  description: The unique identifier that Amazon Lex assigned to the bot.\n                  type: string\n                  pattern: '^[0-9a-zA-Z]+$'\n                  minLength: 10\n                  maxLength: 10\n                botVersion:\n                  description: The version of the bot to list imports for.\n                  type: string\n                  pattern: ^DRAFT$\n                  minLength: 5\n                  maxLength: 5\n                sortBy:\n                  description: Provides information for sorting a list of imports.\n                  type: object\n                  properties:\n                    attribute:\n                      allOf:\n                        - $ref: '#/components/schemas/ImportSortAttribute'\n                        - description: The export field to use for sorting.\n                    order:\n                      allOf:\n                        - $ref: '#/components/schemas/SortOrder'\n                        - description: The order to sort the list.\n                filters:\n                  description: Provides the specification of a filter used to limit the bots in the response to only those that match the filter specification. You can only specify one filter and one string to filter on.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/ImportFilter'\n                  minItems: 1\n                  maxItems: 1\n                maxResults:\n                  description: 'The maximum number of imports to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.'\n                  type: integer\n                  minimum: 1\n                  maximum: 1000\n                nextToken:\n                  description: 'If the response from the \u003ccode\u003eListImports\u003c/code\u003e operation contains more results than specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter, a token is returned in the response. Use that token in the \u003ccode\u003enextToken\u003c/code\u003e parameter to return the next page of results.'\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    put:\n      operationId: StartImport\n      description: Starts importing a bot or bot locale from a zip archive that you uploaded to an S3 bucket.\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StartImportResponse'\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - importId\n                - resourceSpecification\n                - mergeStrategy\n              properties:\n                importId:\n                  description: The unique identifier for the import. It is included in the response from the operation.\n                  type: string\n                  pattern: '^[0-9a-zA-Z]+$'\n                  minLength: 10\n                  maxLength: 10\n                resourceSpecification:\n                  description: 'Provides information about the bot or bot locale that you want to import. You can sepcifiy the \u003ccode\u003ebotImportSpecification\u003c/code\u003e or the \u003ccode\u003ebotLocaleImportSpecification\u003c/code\u003e, but not both.'\n                  type: object\n                  properties:\n                    botImportSpecification:\n                      allOf:\n                        - $ref: '#/components/schemas/BotImportSpecification'\n                        - description: Parameters for importing a bot.\n                    botLocaleImportSpecification:\n                      allOf:\n                        - $ref: '#/components/schemas/BotLocaleImportSpecification'\n                        - description: Parameters for importing a bot locale.\n                mergeStrategy:\n                  description: The strategy to use when there is a name conflict between the imported resource and an existing resource. When the merge strategy is \u003ccode\u003eFailOnConflict\u003c/code\u003e existing resources are not overwritten and the import fails.\n                  type: string\n                  enum:\n                    - Overwrite\n                    - FailOnConflict\n                filePassword:\n                  description: The password used to encrypt the zip archive that contains the bot or bot locale definition. You should always encrypt the zip archive to protect it during transit between your site and Amazon Lex.\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                  format: password\n  '/tags/{resourceARN}':\n    get:\n      operationId: ListTagsForResource\n      description: 'Gets a list of tags associated with a resource. Only bots, bot aliases, and bot channels can have tags associated with them.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsForResourceResponse'\n        '480':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '481':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: resourceARN\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the resource to get a list of tags for.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 1011\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: TagResource\n      description: 'Adds the specified tags to the specified resource. If a tag key already exists, the existing value is replaced with the new value.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagResourceResponse'\n        '480':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '481':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: resourceARN\n          in: path\n          required: true\n          description: 'The Amazon Resource Name (ARN) of the bot, bot alias, or bot channel to tag.'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 1011\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - tags\n              properties:\n                tags:\n                  description: 'A list of tag keys to add to the resource. If a tag key already exists, the existing value is replaced with the new value.'\n                  type: object\n                  minProperties: 0\n                  maxProperties: 200\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n  '/tags/{resourceARN}#tagKeys':\n    delete:\n      operationId: UntagResource\n      description: 'Removes tags from a bot, bot alias, or bot channel.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UntagResourceResponse'\n        '480':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '481':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: resourceARN\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the resource to remove the tags from.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 1011\n        - name: tagKeys\n          in: query\n          required: true\n          description: 'A list of tag keys to remove from the resource. If a tag key does not exist on the resource, it is ignored.'\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/TagKey'\n            minItems: 0\n            maxItems: 200\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    BuildBotLocaleResponse:\n      type: object\n      properties:\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The identifier of the specified bot.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/DraftBotVersion'\n            - description: The version of the bot that was built. This is only the draft version of the bot.\n        localeId:\n          allOf:\n            - $ref: '#/components/schemas/LocaleId'\n            - description: The language and locale specified of where the bot can be used.\n        botLocaleStatus:\n          allOf:\n            - $ref: '#/components/schemas/BotLocaleStatus'\n            - description: 'The bot''s build status. When the status is \u003ccode\u003eReadyExpressTesting\u003c/code\u003e you can test the bot using the utterances defined for the intents and slot types. When the status is \u003ccode\u003eBuilt\u003c/code\u003e, the bot is ready for use and can be tested using any utterance.'\n        lastBuildSubmittedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp indicating the date and time that the bot was last built for this locale.\n    ThrottlingException: {}\n    ServiceQuotaExceededException: {}\n    ValidationException: {}\n    PreconditionFailedException: {}\n    ConflictException: {}\n    InternalServerException: {}\n    CreateBotResponse:\n      type: object\n      properties:\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: A unique identifier for a particular bot. You use this to identify the bot when you call other Amazon Lex API operations.\n        botName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name specified for the bot.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description specified for the bot.\n        roleArn:\n          allOf:\n            - $ref: '#/components/schemas/RoleArn'\n            - description: The IAM role specified for the bot.\n        dataPrivacy:\n          allOf:\n            - $ref: '#/components/schemas/DataPrivacy'\n            - description: The data privacy settings specified for the bot.\n        idleSessionTTLInSeconds:\n          allOf:\n            - $ref: '#/components/schemas/SessionTTL'\n            - description: The session idle time specified for the bot.\n        botStatus:\n          allOf:\n            - $ref: '#/components/schemas/BotStatus'\n            - description: 'Shows the current status of the bot. The bot is first in the \u003ccode\u003eCreating\u003c/code\u003e status. Once the bot is read for use, it changes to the \u003ccode\u003eAvailable\u003c/code\u003e status. After the bot is created, you can use the \u003ccode\u003eDraft\u003c/code\u003e version of the bot.'\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp indicating the date and time that the bot was created.\n        botTags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: A list of tags associated with the bot.\n        testBotAliasTags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: A list of tags associated with the test alias for the bot.\n    ChildDirected:\n      type: boolean\n    TagValue:\n      type: string\n      minLength: 0\n      maxLength: 256\n    CreateBotAliasResponse:\n      type: object\n      properties:\n        botAliasId:\n          allOf:\n            - $ref: '#/components/schemas/BotAliasId'\n            - description: The unique identifier of the bot alias.\n        botAliasName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name specified for the bot alias.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description specified for the bot alias.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/NumericalBotVersion'\n            - description: The version of the bot associated with this alias.\n        botAliasLocaleSettings:\n          allOf:\n            - $ref: '#/components/schemas/BotAliasLocaleSettingsMap'\n            - description: Configuration information for a specific locale.\n        conversationLogSettings:\n          allOf:\n            - $ref: '#/components/schemas/ConversationLogSettings'\n            - description: The conversation log settings specified for the alias.\n        sentimentAnalysisSettings:\n          $ref: '#/components/schemas/SentimentAnalysisSettings'\n        botAliasStatus:\n          allOf:\n            - $ref: '#/components/schemas/BotAliasStatus'\n            - description: 'The current status of the alias. The alias is first put into the \u003ccode\u003eCreating\u003c/code\u003e state. When the alias is ready to be used, it is put into the \u003ccode\u003eAvailable\u003c/code\u003e state. You can use the \u003ccode\u003eDescribeBotAlias\u003c/code\u003e operation to get the current state of an alias.'\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier of the bot that this alias applies to.\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A Unix timestamp indicating the date and time that the bot alias was created.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: A list of tags associated with the bot alias.\n    BotAliasLocaleSettings:\n      type: object\n      required:\n        - enabled\n      properties:\n        enabled:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: 'Determines whether the locale is enabled for the bot. If the value is \u003ccode\u003efalse\u003c/code\u003e, the locale isn''t available for use.'\n        codeHookSpecification:\n          allOf:\n            - $ref: '#/components/schemas/CodeHookSpecification'\n            - description: Specifies the Lambda function that should be used in the locale.\n      description: 'Specifies settings that are unique to a locale. For example, you can use different Lambda function depending on the bot''s locale.'\n    TextLogSettingsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TextLogSetting'\n      minItems: 1\n      maxItems: 1\n    AudioLogSettingsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/AudioLogSetting'\n      minItems: 1\n      maxItems: 1\n    Boolean:\n      type: boolean\n    CreateBotLocaleResponse:\n      type: object\n      properties:\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The specified bot identifier.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/DraftBotVersion'\n            - description: The specified bot version.\n        localeName:\n          allOf:\n            - $ref: '#/components/schemas/LocaleName'\n            - description: The specified locale name.\n        localeId:\n          allOf:\n            - $ref: '#/components/schemas/LocaleId'\n            - description: The specified locale identifier.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The specified description of the bot locale.\n        nluIntentConfidenceThreshold:\n          allOf:\n            - $ref: '#/components/schemas/ConfidenceThreshold'\n            - description: The specified confidence threshold for inserting the \u003ccode\u003eAMAZON.FallbackIntent\u003c/code\u003e and \u003ccode\u003eAMAZON.KendraSearchIntent\u003c/code\u003e intents.\n        voiceSettings:\n          allOf:\n            - $ref: '#/components/schemas/VoiceSettings'\n            - description: The Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user.\n        botLocaleStatus:\n          allOf:\n            - $ref: '#/components/schemas/BotLocaleStatus'\n            - description: '\u003cp\u003eThe status of the bot.\u003c/p\u003e \u003cp\u003eWhen the status is \u003ccode\u003eCreating\u003c/code\u003e the bot locale is being configured. When the status is \u003ccode\u003eBuilding\u003c/code\u003e Amazon Lex is building the bot for testing and use.\u003c/p\u003e \u003cp\u003eIf the status of the bot is \u003ccode\u003eReadyExpressTesting\u003c/code\u003e, you can test the bot using the exact utterances specified in the bots'' intents. When the bot is ready for full testing or to run, the status is \u003ccode\u003eBuilt\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIf there was a problem with building the bot, the status is \u003ccode\u003eFailed\u003c/code\u003e. If the bot was saved but not built, the status is \u003ccode\u003eNotBuilt\u003c/code\u003e.\u003c/p\u003e'\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp specifying the date and time that the bot locale was created.\n    VoiceId:\n      type: string\n    CreateBotVersionResponse:\n      type: object\n      properties:\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The bot identifier specified in the request.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the version specified in the request.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/NumericalBotVersion'\n            - description: The version number assigned to the version.\n        botVersionLocaleSpecification:\n          allOf:\n            - $ref: '#/components/schemas/BotVersionLocaleSpecification'\n            - description: The source versions used for each locale in the new version.\n        botStatus:\n          allOf:\n            - $ref: '#/components/schemas/BotStatus'\n            - description: 'When you send a request to create or update a bot, Amazon Lex sets the status response element to \u003ccode\u003eCreating\u003c/code\u003e. After Amazon Lex builds the bot, it sets status to \u003ccode\u003eAvailable\u003c/code\u003e. If Amazon Lex can''t build the bot, it sets status to \u003ccode\u003eFailed\u003c/code\u003e.'\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the date and time that the version was created.\n    BotVersionLocaleDetails:\n      type: object\n      required:\n        - sourceBotVersion\n      properties:\n        sourceBotVersion:\n          allOf:\n            - $ref: '#/components/schemas/BotVersion'\n            - description: The version of a bot used for a bot locale.\n      description: The version of a bot used for a bot locale.\n    CreateExportResponse:\n      type: object\n      properties:\n        exportId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: An identifier for a specific request to create an export.\n        resourceSpecification:\n          allOf:\n            - $ref: '#/components/schemas/ExportResourceSpecification'\n            - description: 'A description of the type of resource that was exported, either a bot or a bot locale.'\n        fileFormat:\n          allOf:\n            - $ref: '#/components/schemas/ImportExportFileFormat'\n            - description: The file format used for the bot or bot locale definition files.\n        exportStatus:\n          allOf:\n            - $ref: '#/components/schemas/ExportStatus'\n            - description: 'The status of the export. When the status is \u003ccode\u003eCompleted\u003c/code\u003e, you can use the operation to get the pre-signed S3 URL link to your exported bot or bot locale.'\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The date and time that the request to export a bot was created.\n    BotExportSpecification:\n      type: object\n      required:\n        - botId\n        - botVersion\n      properties:\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The identifier of the bot assigned by Amazon Lex.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/BotVersion'\n            - description: The version of the bot that was exported. This will be either \u003ccode\u003eDRAFT\u003c/code\u003e or the version number.\n      description: Provides the identity of a the bot that was exported.\n    BotLocaleExportSpecification:\n      type: object\n      required:\n        - botId\n        - botVersion\n        - localeId\n      properties:\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The identifier of the bot to create the locale for.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/BotVersion'\n            - description: The version of the bot to export.\n        localeId:\n          allOf:\n            - $ref: '#/components/schemas/LocaleId'\n            - description: The identifier of the language and locale to export. The string must match one of the locales in the bot.\n      description: Provides the bot locale parameters required for exporting a bot locale.\n    ResourceNotFoundException: {}\n    CreateIntentResponse:\n      type: object\n      properties:\n        intentId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: A unique identifier for the intent.\n        intentName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name specified for the intent.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description specified for the intent.\n        parentIntentSignature:\n          allOf:\n            - $ref: '#/components/schemas/IntentSignature'\n            - description: The signature of the parent intent specified for the intent.\n        sampleUtterances:\n          allOf:\n            - $ref: '#/components/schemas/SampleUtterancesList'\n            - description: The sample utterances specified for the intent.\n        dialogCodeHook:\n          allOf:\n            - $ref: '#/components/schemas/DialogCodeHookSettings'\n            - description: The dialog Lambda function specified for the intent.\n        fulfillmentCodeHook:\n          allOf:\n            - $ref: '#/components/schemas/FulfillmentCodeHookSettings'\n            - description: The fulfillment Lambda function specified for the intent.\n        intentConfirmationSetting:\n          allOf:\n            - $ref: '#/components/schemas/IntentConfirmationSetting'\n            - description: The confirmation setting specified for the intent.\n        intentClosingSetting:\n          allOf:\n            - $ref: '#/components/schemas/IntentClosingSetting'\n            - description: The closing setting specified for the intent.\n        inputContexts:\n          allOf:\n            - $ref: '#/components/schemas/InputContextsList'\n            - description: The list of input contexts specified for the intent.\n        outputContexts:\n          allOf:\n            - $ref: '#/components/schemas/OutputContextsList'\n            - description: The list of output contexts specified for the intent.\n        kendraConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/KendraConfiguration'\n            - description: Configuration for searching a Amazon Kendra index specified for the intent.\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The identifier of the bot associated with the intent.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/DraftBotVersion'\n            - description: The identifier of the version of the bot associated with the intent.\n        localeId:\n          allOf:\n            - $ref: '#/components/schemas/LocaleId'\n            - description: The locale that the intent is specified to use.\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the date and time that the intent was created.\n    SampleUtterance:\n      type: object\n      required:\n        - utterance\n      properties:\n        utterance:\n          allOf:\n            - $ref: '#/components/schemas/Utterance'\n            - description: The sample utterance that Amazon Lex uses to build its machine-learning model to recognize intents.\n      description: A sample utterance that invokes an intent or respond to a slot elicitation prompt.\n    PromptSpecification:\n      type: object\n      required:\n        - messageGroups\n        - maxRetries\n      properties:\n        messageGroups:\n          allOf:\n            - $ref: '#/components/schemas/MessageGroupsList'\n            - description: A collection of messages that Amazon Lex can send to the user. Amazon Lex chooses the actual message to send at runtime.\n        maxRetries:\n          allOf:\n            - $ref: '#/components/schemas/PromptMaxRetries'\n            - description: The maximum number of times the bot tries to elicit a resonse from the user using this prompt.\n        allowInterrupt:\n          allOf:\n            - $ref: '#/components/schemas/BoxedBoolean'\n            - description: Indicates whether the user can interrupt a speech prompt from the bot.\n      description: Specifies a list of message groups that Amazon Lex sends to a user to elicit a response.\n    ResponseSpecification:\n      type: object\n      required:\n        - messageGroups\n      properties:\n        messageGroups:\n          allOf:\n            - $ref: '#/components/schemas/MessageGroupsList'\n            - description: A collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n        allowInterrupt:\n          allOf:\n            - $ref: '#/components/schemas/BoxedBoolean'\n            - description: Indicates whether the user can interrupt a speech response from Amazon Lex.\n      description: Specifies a list of message groups that Amazon Lex uses to respond the user input.\n    BoxedBoolean:\n      type: boolean\n    InputContext:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the context.\n      description: The name of a context that must be active for an intent to be selected by Amazon Lex.\n    OutputContext:\n      type: object\n      required:\n        - name\n        - timeToLiveInSeconds\n        - turnsToLive\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the output context.\n        timeToLiveInSeconds:\n          allOf:\n            - $ref: '#/components/schemas/ContextTimeToLiveInSeconds'\n            - description: 'The amount of time, in seconds, that the output context should remain active. The time is figured from the first time the context is sent to the user.'\n        turnsToLive:\n          allOf:\n            - $ref: '#/components/schemas/ContextTurnsToLive'\n            - description: The number of conversation turns that the output context should remain active. The number of turns is counted from the first time that the context is sent to the user.\n      description: Describes a session context that is activated when an intent is fulfilled.\n    KendraIndexArn:\n      type: string\n      pattern: '^arn:aws:kendra:[a-z]+-[a-z]+-[0-9]:[0-9]{12}:index\\/[a-zA-Z0-9][a-zA-Z0-9_-]*$'\n      minLength: 32\n      maxLength: 2048\n    QueryFilterString:\n      type: string\n      minLength: 1\n      maxLength: 5000\n    CreateResourcePolicyResponse:\n      type: object\n      properties:\n        resourceArn:\n          allOf:\n            - $ref: '#/components/schemas/AmazonResourceName'\n            - description: The Amazon Resource Name (ARN) of the bot or bot alias that the resource policy was attached to.\n        revisionId:\n          allOf:\n            - $ref: '#/components/schemas/RevisionId'\n            - description: 'The current revision of the resource policy. Use the revision ID to make sure that you are updating the most current version of a resource policy when you add a policy statement to a resource, delete a resource, or update a resource.'\n    CreateResourcePolicyStatementResponse:\n      type: object\n      properties:\n        resourceArn:\n          allOf:\n            - $ref: '#/components/schemas/AmazonResourceName'\n            - description: The Amazon Resource Name (ARN) of the bot or bot alias that the resource policy is attached to.\n        revisionId:\n          allOf:\n            - $ref: '#/components/schemas/RevisionId'\n            - description: 'The current revision of the resource policy. Use the revision ID to make sure that you are updating the most current version of a resource policy when you add a policy statement to a resource, delete a resource, or update a resource.'\n    Principal:\n      type: object\n      properties:\n        service:\n          allOf:\n            - $ref: '#/components/schemas/ServicePrincipal'\n            - description: The name of the AWS service that should allowed or denied access to an Amazon Lex action.\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/PrincipalArn'\n            - description: The Amazon Resource Name (ARN) of the principal.\n      description: 'The IAM principal that you allowing or denying access to an Amazon Lex action. You must provide a \u003ccode\u003eservice\u003c/code\u003e or an \u003ccode\u003earn\u003c/code\u003e, but not both in the same statement. For more information, see \u003ca href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html\"\u003e AWS JSON policy elements: Principal \u003c/a\u003e.'\n    Operation:\n      type: string\n      pattern: 'lex:[a-zA-Z*]+$'\n      minLength: 5\n      maxLength: 50\n    ConditionKeyValueMap:\n      type: object\n      minProperties: 0\n      maxProperties: 10\n      additionalProperties:\n        $ref: '#/components/schemas/ConditionValue'\n    CreateSlotResponse:\n      type: object\n      properties:\n        slotId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier associated with the slot. Use this to identify the slot when you update or delete it.\n        slotName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name specified for the slot.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description associated with the slot.\n        slotTypeId:\n          allOf:\n            - $ref: '#/components/schemas/BuiltInOrCustomSlotTypeId'\n            - description: The unique identifier of the slot type associated with this slot.\n        valueElicitationSetting:\n          allOf:\n            - $ref: '#/components/schemas/SlotValueElicitationSetting'\n            - description: The value elicitation settings specified for the slot.\n        obfuscationSetting:\n          allOf:\n            - $ref: '#/components/schemas/ObfuscationSetting'\n            - description: Indicates whether the slot is configured to obfuscate values in Amazon CloudWatch logs.\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier of the bot associated with the slot.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/DraftBotVersion'\n            - description: The version of the bot associated with the slot.\n        localeId:\n          allOf:\n            - $ref: '#/components/schemas/LocaleId'\n            - description: The language and local specified for the slot.\n        intentId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier of the intent associated with the slot.\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The timestamp of the date and time that the slot was created.\n        multipleValuesSetting:\n          allOf:\n            - $ref: '#/components/schemas/MultipleValuesSetting'\n            - description: Indicates whether the slot returns multiple values in one response.\n    SlotDefaultValueSpecification:\n      type: object\n      required:\n        - defaultValueList\n      properties:\n        defaultValueList:\n          allOf:\n            - $ref: '#/components/schemas/SlotDefaultValueList'\n            - description: A list of default values. Amazon Lex chooses the default value to use in the order that they are presented in the list.\n      description: Defines a list of values that Amazon Lex should use as the default value for a slot.\n    SlotConstraint:\n      type: string\n      enum:\n        - Required\n        - Optional\n    SampleUtterancesList:\n      type: array\n      items:\n        $ref: '#/components/schemas/SampleUtterance'\n    WaitAndContinueSpecification:\n      type: object\n      required:\n        - waitingResponse\n        - continueResponse\n      properties:\n        waitingResponse:\n          allOf:\n            - $ref: '#/components/schemas/ResponseSpecification'\n            - description: The response that Amazon Lex sends to indicate that the bot is waiting for the conversation to continue.\n        continueResponse:\n          allOf:\n            - $ref: '#/components/schemas/ResponseSpecification'\n            - description: The response that Amazon Lex sends to indicate that the bot is ready to continue the conversation.\n        stillWaitingResponse:\n          allOf:\n            - $ref: '#/components/schemas/StillWaitingResponseSpecification'\n            - description: A response that Amazon Lex sends periodically to the user to indicate that the bot is still waiting for input from the user.\n        active:\n          allOf:\n            - $ref: '#/components/schemas/BoxedBoolean'\n            - description: 'Specifies whether the bot will wait for a user to respond. When this field is false, wait and continue responses for a slot aren''t used and the bot expects an appropriate response within the configured timeout. If the \u003ccode\u003eactive\u003c/code\u003e field isn''t specified, the default is true.'\n      description: 'Specifies the prompts that Amazon Lex uses while a bot is waiting for customer input. '\n    ObfuscationSettingType:\n      type: string\n      enum:\n        - None\n        - DefaultObfuscation\n    CreateSlotTypeResponse:\n      type: object\n      properties:\n        slotTypeId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier assigned to the slot type. Use this to identify the slot type in the \u003ccode\u003eUpdateSlotType\u003c/code\u003e and \u003ccode\u003eDeleteSlotType\u003c/code\u003e operations.\n        slotTypeName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name specified for the slot type.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description specified for the slot type.\n        slotTypeValues:\n          allOf:\n            - $ref: '#/components/schemas/SlotTypeValues'\n            - description: The list of values that the slot type can assume.\n        valueSelectionSetting:\n          allOf:\n            - $ref: '#/components/schemas/SlotValueSelectionSetting'\n            - description: The strategy that Amazon Lex uses to select a value from the list of possible values.\n        parentSlotTypeSignature:\n          allOf:\n            - $ref: '#/components/schemas/SlotTypeSignature'\n            - description: The signature of the base slot type specified for the slot type.\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The identifier for the bot associated with the slot type.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/DraftBotVersion'\n            - description: The version of the bot associated with the slot type.\n        localeId:\n          allOf:\n            - $ref: '#/components/schemas/LocaleId'\n            - description: The specified language and local specified for the slot type.\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the date and time that the slot type was created.\n    SlotTypeValue:\n      type: object\n      properties:\n        sampleValue:\n          allOf:\n            - $ref: '#/components/schemas/SampleValue'\n            - description: The value of the slot type entry.\n        synonyms:\n          allOf:\n            - $ref: '#/components/schemas/SynonymList'\n            - description: Additional values releated to the slot type entry.\n      description: Each slot type can have a set of values. Each \u003ccode\u003eSlotTypeValue\u003c/code\u003e represents a value that the slot type can take.\n    SlotValueResolutionStrategy:\n      type: string\n      enum:\n        - OriginalValue\n        - TopResolution\n    SlotValueRegexFilter:\n      type: object\n      required:\n        - pattern\n      properties:\n        pattern:\n          allOf:\n            - $ref: '#/components/schemas/RegexPattern'\n            - description: '\u003cp\u003eA regular expression used to validate the value of a slot.\u003c/p\u003e \u003cp\u003e Use a standard regular expression. Amazon Lex supports the following characters in the regular expression: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eA-Z, a-z\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e0-9\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eUnicode characters (\"\\ u\u0026lt;Unicode\u0026gt;\")\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e Represent Unicode characters with four digits, for example \"\\u0041\" or \"\\u005A\". \u003c/p\u003e \u003cp\u003e The following regular expression operators are not supported: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eInfinite repeaters: *, +, or {x,} with no upper bound.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eWild card (.)\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: Provides a regular expression used to validate the value of a slot.\n    CreateUploadUrlResponse:\n      type: object\n      properties:\n        importId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: An identifier for a unique import job. Use it when you call the operation.\n        uploadUrl:\n          allOf:\n            - $ref: '#/components/schemas/PresignedS3Url'\n            - description: A pre-signed S3 write URL. Upload the zip archive file that contains the definition of your bot or bot locale.\n    DeleteBotResponse:\n      type: object\n      properties:\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier of the bot that Amazon Lex is deleting.\n        botStatus:\n          allOf:\n            - $ref: '#/components/schemas/BotStatus'\n            - description: The current status of the bot. The status is \u003ccode\u003eDeleting\u003c/code\u003e while the bot and its associated resources are being deleted.\n    DeleteBotAliasResponse:\n      type: object\n      properties:\n        botAliasId:\n          allOf:\n            - $ref: '#/components/schemas/BotAliasId'\n            - description: The unique identifier of the bot alias to delete.\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier of the bot that contains the alias to delete.\n        botAliasStatus:\n          allOf:\n            - $ref: '#/components/schemas/BotAliasStatus'\n            - description: 'The current status of the alias. The status is \u003ccode\u003eDeleting\u003c/code\u003e while the alias is in the process of being deleted. Once the alias is deleted, it will no longer appear in the list of aliases returned by the \u003ccode\u003eListBotAliases\u003c/code\u003e operation.'\n    DeleteBotLocaleResponse:\n      type: object\n      properties:\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The identifier of the bot that contained the deleted locale.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/DraftBotVersion'\n            - description: The version of the bot that contained the deleted locale.\n        localeId:\n          allOf:\n            - $ref: '#/components/schemas/LocaleId'\n            - description: The language and locale of the deleted locale.\n        botLocaleStatus:\n          allOf:\n            - $ref: '#/components/schemas/BotLocaleStatus'\n            - description: The status of deleting the bot locale. The locale first enters the \u003ccode\u003eDeleting\u003c/code\u003e status. Once the locale is deleted it no longer appears in the list of locales for the bot.\n    DeleteBotVersionResponse:\n      type: object\n      properties:\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The identifier of the bot that is being deleted.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/NumericalBotVersion'\n            - description: The version of the bot that is being deleted.\n        botStatus:\n          allOf:\n            - $ref: '#/components/schemas/BotStatus'\n            - description: 'The current status of the bot. '\n    DeleteExportResponse:\n      type: object\n      properties:\n        exportId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier of the deleted export.\n        exportStatus:\n          allOf:\n            - $ref: '#/components/schemas/ExportStatus'\n            - description: 'The current status of the deletion. When the deletion is complete, the export will no longer be returned by the operation and calls to the with the export identifier will fail.'\n    DeleteImportResponse:\n      type: object\n      properties:\n        importId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier of the deleted import.\n        importStatus:\n          allOf:\n            - $ref: '#/components/schemas/ImportStatus'\n            - description: 'The current status of the deletion. When the deletion is complete, the import will no longer be returned by the operation and calls to the with the import identifier will fail.'\n    DeleteResourcePolicyResponse:\n      type: object\n      properties:\n        resourceArn:\n          allOf:\n            - $ref: '#/components/schemas/AmazonResourceName'\n            - description: The Amazon Resource Name (ARN) of the bot or bot alias that the resource policy was deleted from.\n        revisionId:\n          allOf:\n            - $ref: '#/components/schemas/RevisionId'\n            - description: 'The current revision of the resource policy. Use the revision ID to make sure that you are updating the most current version of a resource policy when you add a policy statement to a resource, delete a resource, or update a resource.'\n    DeleteResourcePolicyStatementResponse:\n      type: object\n      properties:\n        resourceArn:\n          allOf:\n            - $ref: '#/components/schemas/AmazonResourceName'\n            - description: The Amazon Resource Name (ARN) of the bot or bot alias that the resource policy statement was removed from.\n        revisionId:\n          allOf:\n            - $ref: '#/components/schemas/RevisionId'\n            - description: 'The current revision of the resource policy. Use the revision ID to make sure that you are updating the most current version of a resource policy when you add a policy statement to a resource, delete a resource, or update a resource.'\n    DescribeBotResponse:\n      type: object\n      properties:\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier of the bot.\n        botName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the bot.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: 'The description of the bot. '\n        roleArn:\n          allOf:\n            - $ref: '#/components/schemas/RoleArn'\n            - description: The Amazon Resource Name (ARN) of an IAM role that has permission to access the bot.\n        dataPrivacy:\n          allOf:\n            - $ref: '#/components/schemas/DataPrivacy'\n            - description: Settings for managing data privacy of the bot and its conversations with users.\n        idleSessionTTLInSeconds:\n          allOf:\n            - $ref: '#/components/schemas/SessionTTL'\n            - description: The maximum time in seconds that Amazon Lex retains the data gathered in a conversation.\n        botStatus:\n          allOf:\n            - $ref: '#/components/schemas/BotStatus'\n            - description: The current status of the bot. When the status is \u003ccode\u003eAvailable\u003c/code\u003e the bot is ready to be used in conversations with users.\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the date and time that the bot was created.\n        lastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the date and time that the bot was last updated.\n    DescribeBotAliasResponse:\n      type: object\n      properties:\n        botAliasId:\n          allOf:\n            - $ref: '#/components/schemas/BotAliasId'\n            - description: The identifier of the bot alias.\n        botAliasName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the bot alias.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the bot alias.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/BotVersion'\n            - description: The version of the bot associated with the bot alias.\n        botAliasLocaleSettings:\n          allOf:\n            - $ref: '#/components/schemas/BotAliasLocaleSettingsMap'\n            - description: The locale settings that are unique to the alias.\n        conversationLogSettings:\n          allOf:\n            - $ref: '#/components/schemas/ConversationLogSettings'\n            - description: Specifics of how Amazon Lex logs text and audio conversations with the bot associated with the alias.\n        sentimentAnalysisSettings:\n          $ref: '#/components/schemas/SentimentAnalysisSettings'\n        botAliasHistoryEvents:\n          allOf:\n            - $ref: '#/components/schemas/BotAliasHistoryEventsList'\n            - description: 'A list of events that affect a bot alias. For example, an event is recorded when the version that the alias points to changes.'\n        botAliasStatus:\n          allOf:\n            - $ref: '#/components/schemas/BotAliasStatus'\n            - description: 'The current status of the alias. When the alias is \u003ccode\u003eAvailable\u003c/code\u003e, the alias is ready for use with your bot.'\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The identifier of the bot associated with the bot alias.\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the date and time that the alias was created.\n        lastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the date and time that the alias was last updated.\n    DescribeBotLocaleResponse:\n      type: object\n      properties:\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The identifier of the bot associated with the locale.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/BotVersion'\n            - description: The identifier of the version of the bot associated with the locale.\n        localeId:\n          allOf:\n            - $ref: '#/components/schemas/LocaleId'\n            - description: The unique identifier of the described locale.\n        localeName:\n          allOf:\n            - $ref: '#/components/schemas/LocaleName'\n            - description: The name of the locale.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the locale.\n        nluIntentConfidenceThreshold:\n          allOf:\n            - $ref: '#/components/schemas/ConfidenceThreshold'\n            - description: The confidence threshold where Amazon Lex inserts the \u003ccode\u003eAMAZON.FallbackIntent\u003c/code\u003e and \u003ccode\u003eAMAZON.KendraSearchIntent\u003c/code\u003e intents in the list of possible intents for an utterance.\n        voiceSettings:\n          allOf:\n            - $ref: '#/components/schemas/VoiceSettings'\n            - description: The Amazon Polly voice Amazon Lex uses for voice interaction with the user.\n        intentsCount:\n          allOf:\n            - $ref: '#/components/schemas/ResourceCount'\n            - description: The number of intents defined for the locale.\n        slotTypesCount:\n          allOf:\n            - $ref: '#/components/schemas/ResourceCount'\n            - description: The number of slot types defined for the locale.\n        botLocaleStatus:\n          allOf:\n            - $ref: '#/components/schemas/BotLocaleStatus'\n            - description: 'The status of the bot. If the status is \u003ccode\u003eFailed\u003c/code\u003e, the reasons for the failure are listed in the \u003ccode\u003efailureReasons\u003c/code\u003e field.'\n        failureReasons:\n          allOf:\n            - $ref: '#/components/schemas/FailureReasons'\n            - description: 'if \u003ccode\u003ebotLocaleStatus\u003c/code\u003e is \u003ccode\u003eFailed\u003c/code\u003e, Amazon Lex explains why it failed to build the bot.'\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The date and time that the locale was created.\n        lastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The date and time that the locale was last updated.\n        lastBuildSubmittedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The date and time that the locale was last submitted for building.\n        botLocaleHistoryEvents:\n          allOf:\n            - $ref: '#/components/schemas/BotLocaleHistoryEventsList'\n            - description: 'History of changes, such as when a locale is used in an alias, that have taken place for the locale.'\n    DescribeBotVersionResponse:\n      type: object\n      properties:\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The identifier of the bot that contains the version.\n        botName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the bot that contains the version.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/NumericalBotVersion'\n            - description: The version of the bot to describe.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description specified for the bot.\n        roleArn:\n          allOf:\n            - $ref: '#/components/schemas/RoleArn'\n            - description: The Amazon Resource Name (ARN) of an IAM role that has permission to access the bot version.\n        dataPrivacy:\n          allOf:\n            - $ref: '#/components/schemas/DataPrivacy'\n            - description: Data privacy settings for the bot version.\n        idleSessionTTLInSeconds:\n          allOf:\n            - $ref: '#/components/schemas/SessionTTL'\n            - description: The number of seconds that a session with the bot remains active before it is discarded by Amazon Lex.\n        botStatus:\n          allOf:\n            - $ref: '#/components/schemas/BotStatus'\n            - description: 'The current status of the bot. When the status is \u003ccode\u003eAvailable\u003c/code\u003e, the bot version is ready for use.'\n        failureReasons:\n          allOf:\n            - $ref: '#/components/schemas/FailureReasons'\n            - description: 'If the \u003ccode\u003ebotStatus\u003c/code\u003e is \u003ccode\u003eFailed\u003c/code\u003e, this contains a list of reasons that the version couldn''t be built.'\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the date and time that the bot version was created.\n    DescribeExportResponse:\n      type: object\n      properties:\n        exportId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier of the described export.\n        resourceSpecification:\n          allOf:\n            - $ref: '#/components/schemas/ExportResourceSpecification'\n            - description: 'The bot, bot ID, and optional locale ID of the exported bot or bot locale.'\n        fileFormat:\n          allOf:\n            - $ref: '#/components/schemas/ImportExportFileFormat'\n            - description: The file format used in the files that describe the bot or bot locale.\n        exportStatus:\n          allOf:\n            - $ref: '#/components/schemas/ExportStatus'\n            - description: The status of the export. When the status is \u003ccode\u003eComplete\u003c/code\u003e the export archive file is available for download.\n        failureReasons:\n          allOf:\n            - $ref: '#/components/schemas/FailureReasons'\n            - description: 'If the \u003ccode\u003eexportStatus\u003c/code\u003e is failed, contains one or more reasons why the export could not be completed.'\n        downloadUrl:\n          allOf:\n            - $ref: '#/components/schemas/PresignedS3Url'\n            - description: A pre-signed S3 URL that points to the bot or bot locale archive. The URL is only available for 5 minutes after calling the \u003ccode\u003eDescribeExport\u003c/code\u003e operation.\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The date and time that the export was created.\n        lastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The last date and time that the export was updated.\n    DescribeImportResponse:\n      type: object\n      properties:\n        importId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier of the described import.\n        resourceSpecification:\n          allOf:\n            - $ref: '#/components/schemas/ImportResourceSpecification'\n            - description: The specifications of the imported bot or bot locale.\n        importedResourceId:\n          allOf:\n            - $ref: '#/components/schemas/ImportedResourceId'\n            - description: The unique identifier that Amazon Lex assigned to the resource created by the import.\n        importedResourceName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the imported resource.\n        mergeStrategy:\n          allOf:\n            - $ref: '#/components/schemas/MergeStrategy'\n            - description: The strategy used when there was a name conflict between the imported resource and an existing resource. When the merge strategy is \u003ccode\u003eFailOnConflict\u003c/code\u003e existing resources are not overwritten and the import fails.\n        importStatus:\n          allOf:\n            - $ref: '#/components/schemas/ImportStatus'\n            - description: The status of the import process. When the status is \u003ccode\u003eCompleted\u003c/code\u003e the resource is imported and ready for use.\n        failureReasons:\n          allOf:\n            - $ref: '#/components/schemas/FailureReasons'\n            - description: 'If the \u003ccode\u003eimportStatus\u003c/code\u003e field is \u003ccode\u003eFailed\u003c/code\u003e, this provides one or more reasons for the failture.'\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The date and time that the import was created.\n        lastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The date and time that the import was last updated.\n    DescribeIntentResponse:\n      type: object\n      properties:\n        intentId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier assigned to the intent when it was created.\n        intentName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name specified for the intent.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the intent.\n        parentIntentSignature:\n          allOf:\n            - $ref: '#/components/schemas/IntentSignature'\n            - description: 'The identifier of the built-in intent that this intent is derived from, if any.'\n        sampleUtterances:\n          allOf:\n            - $ref: '#/components/schemas/SampleUtterancesList'\n            - description: User utterances that trigger this intent.\n        dialogCodeHook:\n          allOf:\n            - $ref: '#/components/schemas/DialogCodeHookSettings'\n            - description: The Lambda function called during each turn of a conversation with the intent.\n        fulfillmentCodeHook:\n          allOf:\n            - $ref: '#/components/schemas/FulfillmentCodeHookSettings'\n            - description: The Lambda function called when the intent is complete and ready for fulfillment.\n        slotPriorities:\n          allOf:\n            - $ref: '#/components/schemas/SlotPrioritiesList'\n            - description: The list that determines the priority that slots should be elicited from the user.\n        intentConfirmationSetting:\n          allOf:\n            - $ref: '#/components/schemas/IntentConfirmationSetting'\n            - description: Prompts that Amazon Lex sends to the user to confirm completion of an intent.\n        intentClosingSetting:\n          allOf:\n            - $ref: '#/components/schemas/IntentClosingSetting'\n            - description: The response that Amazon Lex sends to when the intent is closed.\n        inputContexts:\n          allOf:\n            - $ref: '#/components/schemas/InputContextsList'\n            - description: A list of contexts that must be active for the intent to be considered for sending to the user.\n        outputContexts:\n          allOf:\n            - $ref: '#/components/schemas/OutputContextsList'\n            - description: A list of contexts that are activated when the intent is fulfilled.\n        kendraConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/KendraConfiguration'\n            - description: Configuration information required to use the \u003ccode\u003eAMAZON.KendraSearchIntent\u003c/code\u003e intent.\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The identifier of the bot associated with the intent.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/DraftBotVersion'\n            - description: The version of the bot associated with the intent.\n        localeId:\n          allOf:\n            - $ref: '#/components/schemas/LocaleId'\n            - description: The language and locale specified for the intent.\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the date and time that the intent was created.\n        lastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the date and time that the intent was last updated.\n    DescribeResourcePolicyResponse:\n      type: object\n      properties:\n        resourceArn:\n          allOf:\n            - $ref: '#/components/schemas/AmazonResourceName'\n            - description: The Amazon Resource Name (ARN) of the bot or bot alias that the resource policy is attached to.\n        policy:\n          allOf:\n            - $ref: '#/components/schemas/Policy'\n            - description: 'The JSON structure that contains the resource policy. For more information about the contents of a JSON policy document, see \u003ca href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html\"\u003e IAM JSON policy reference \u003c/a\u003e.'\n        revisionId:\n          allOf:\n            - $ref: '#/components/schemas/RevisionId'\n            - description: 'The current revision of the resource policy. Use the revision ID to make sure that you are updating the most current version of a resource policy when you add a policy statement to a resource, delete a resource, or update a resource.'\n    DescribeSlotResponse:\n      type: object\n      properties:\n        slotId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier generated for the slot.\n        slotName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name specified for the slot.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description specified for the slot.\n        slotTypeId:\n          allOf:\n            - $ref: '#/components/schemas/BuiltInOrCustomSlotTypeId'\n            - description: The identifier of the slot type that determines the values entered into the slot.\n        valueElicitationSetting:\n          allOf:\n            - $ref: '#/components/schemas/SlotValueElicitationSetting'\n            - description: Prompts that Amazon Lex uses to elicit a value for the slot.\n        obfuscationSetting:\n          allOf:\n            - $ref: '#/components/schemas/ObfuscationSetting'\n            - description: 'Whether slot values are shown in Amazon CloudWatch logs. If the value is \u003ccode\u003eNone\u003c/code\u003e, the actual value of the slot is shown in logs.'\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The identifier of the bot associated with the slot.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/BotVersion'\n            - description: The version of the bot associated with the slot.\n        localeId:\n          allOf:\n            - $ref: '#/components/schemas/LocaleId'\n            - description: The language and locale specified for the slot.\n        intentId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The identifier of the intent associated with the slot.\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the date and time that the slot was created.\n        lastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the date and time that the slot was last updated.\n        multipleValuesSetting:\n          allOf:\n            - $ref: '#/components/schemas/MultipleValuesSetting'\n            - description: '\u003cp\u003eIndicates whether the slot accepts multiple values in a single utterance.\u003c/p\u003e \u003cp\u003eIf the \u003ccode\u003emultipleValuesSetting\u003c/code\u003e is not set, the default value is \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e'\n    DescribeSlotTypeResponse:\n      type: object\n      properties:\n        slotTypeId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier for the slot type.\n        slotTypeName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name specified for the slot type.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description specified for the slot type.\n        slotTypeValues:\n          allOf:\n            - $ref: '#/components/schemas/SlotTypeValues'\n            - description: The values that the slot type can take. Includes any synonyms for the slot type values.\n        valueSelectionSetting:\n          allOf:\n            - $ref: '#/components/schemas/SlotValueSelectionSetting'\n            - description: The strategy that Amazon Lex uses to choose a value from a list of possible values.\n        parentSlotTypeSignature:\n          allOf:\n            - $ref: '#/components/schemas/SlotTypeSignature'\n            - description: The built in slot type used as a parent to this slot type.\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The identifier of the bot associated with the slot type.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/BotVersion'\n            - description: The version of the bot associated with the slot type.\n        localeId:\n          allOf:\n            - $ref: '#/components/schemas/LocaleId'\n            - description: The language and locale specified for the slot type.\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the date and time that the slot type was created.\n        lastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the date and time that the slot type was last updated.\n    ListBotAliasesResponse:\n      type: object\n      properties:\n        botAliasSummaries:\n          allOf:\n            - $ref: '#/components/schemas/BotAliasSummaryList'\n            - description: 'Summary information for the bot aliases that meet the filter criteria specified in the request. The length of the list is specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter of the request. If there are more aliases available, the \u003ccode\u003enextToken\u003c/code\u003e field contains a token to get the next page of results.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'A token that indicates whether there are more results to return in a response to the \u003ccode\u003eListBotAliases\u003c/code\u003e operation. If the \u003ccode\u003enextToken\u003c/code\u003e field is present, you send the contents as the \u003ccode\u003enextToken\u003c/code\u003e parameter of a \u003ccode\u003eListBotAliases\u003c/code\u003e operation request to get the next page of results.'\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The identifier of the bot associated with the aliases.\n    ListBotLocalesResponse:\n      type: object\n      properties:\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The identifier of the bot to list locales for.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/BotVersion'\n            - description: The version of the bot.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'A token that indicates whether there are more results to return in a response to the \u003ccode\u003eListBotLocales\u003c/code\u003e operation. If the \u003ccode\u003enextToken\u003c/code\u003e field is present, you send the contents as the \u003ccode\u003enextToken\u003c/code\u003e parameter of a \u003ccode\u003eListBotLocales\u003c/code\u003e operation request to get the next page of results.'\n        botLocaleSummaries:\n          allOf:\n            - $ref: '#/components/schemas/BotLocaleSummaryList'\n            - description: 'Summary information for the locales that meet the filter criteria specified in the request. The length of the list is specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter of the request. If there are more locales available, the \u003ccode\u003enextToken\u003c/code\u003e field contains a token to get the next page of results.'\n    BotLocaleSortAttribute:\n      type: string\n      enum:\n        - BotLocaleName\n    SortOrder:\n      type: string\n      enum:\n        - Ascending\n        - Descending\n    BotLocaleFilter:\n      type: object\n      required:\n        - name\n        - values\n        - operator\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/BotLocaleFilterName'\n            - description: The name of the field to filter the list of bots.\n        values:\n          allOf:\n            - $ref: '#/components/schemas/FilterValues'\n            - description: The value to use for filtering the list of bots.\n        operator:\n          allOf:\n            - $ref: '#/components/schemas/BotLocaleFilterOperator'\n            - description: The operator to use for the filter. Specify \u003ccode\u003eEQ\u003c/code\u003e when the \u003ccode\u003eListBotLocales\u003c/code\u003e operation should return only aliases that equal the specified value. Specify \u003ccode\u003eCO\u003c/code\u003e when the \u003ccode\u003eListBotLocales\u003c/code\u003e operation should return aliases that contain the specified value.\n      description: Filters responses returned by the \u003ccode\u003eListBotLocales\u003c/code\u003e operation.\n    ListBotVersionsResponse:\n      type: object\n      properties:\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The identifier of the bot to list versions for.\n        botVersionSummaries:\n          allOf:\n            - $ref: '#/components/schemas/BotVersionSummaryList'\n            - description: 'Summary information for the bot versions that meet the filter criteria specified in the request. The length of the list is specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter of the request. If there are more versions available, the \u003ccode\u003enextToken\u003c/code\u003e field contains a token to get the next page of results.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'A token that indicates whether there are more results to return in a response to the \u003ccode\u003eListBotVersions\u003c/code\u003e operation. If the \u003ccode\u003enextToken\u003c/code\u003e field is present, you send the contents as the \u003ccode\u003enextToken\u003c/code\u003e parameter of a \u003ccode\u003eListBotAliases\u003c/code\u003e operation request to get the next page of results.'\n    BotVersionSortAttribute:\n      type: string\n      enum:\n        - BotVersion\n    ListBotsResponse:\n      type: object\n      properties:\n        botSummaries:\n          allOf:\n            - $ref: '#/components/schemas/BotSummaryList'\n            - description: 'Summary information for the bots that meet the filter criteria specified in the request. The length of the list is specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter of the request. If there are more bots available, the \u003ccode\u003enextToken\u003c/code\u003e field contains a token to the next page of results.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'A token that indicates whether there are more results to return in a response to the \u003ccode\u003eListBots\u003c/code\u003e operation. If the \u003ccode\u003enextToken\u003c/code\u003e field is present, you send the contents as the \u003ccode\u003enextToken\u003c/code\u003e parameter of a \u003ccode\u003eListBots\u003c/code\u003e operation request to get the next page of results.'\n    BotSortAttribute:\n      type: string\n      enum:\n        - BotName\n    BotFilter:\n      type: object\n      required:\n        - name\n        - values\n        - operator\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/BotFilterName'\n            - description: The name of the field to filter the list of bots.\n        values:\n          allOf:\n            - $ref: '#/components/schemas/FilterValues'\n            - description: The value to use for filtering the list of bots.\n        operator:\n          allOf:\n            - $ref: '#/components/schemas/BotFilterOperator'\n            - description: The operator to use for the filter. Specify \u003ccode\u003eEQ\u003c/code\u003e when the \u003ccode\u003eListBots\u003c/code\u003e operation should return only aliases that equal the specified value. Specify \u003ccode\u003eCO\u003c/code\u003e when the \u003ccode\u003eListBots\u003c/code\u003e operation should return aliases that contain the specified value.\n      description: Filters the responses returned by the \u003ccode\u003eListBots\u003c/code\u003e operation.\n    ListBuiltInIntentsResponse:\n      type: object\n      properties:\n        builtInIntentSummaries:\n          allOf:\n            - $ref: '#/components/schemas/BuiltInIntentSummaryList'\n            - description: 'Summary information for the built-in intents that meet the filter criteria specified in the request. The length of the list is specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter of the request. If there are more intents available, the \u003ccode\u003enextToken\u003c/code\u003e field contains a token to get the next page of results.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'A token that indicates whether there are more results to return in a response to the \u003ccode\u003eListBuiltInIntents\u003c/code\u003e operation. If the \u003ccode\u003enextToken\u003c/code\u003e field is present, you send the contents as the \u003ccode\u003enextToken\u003c/code\u003e parameter of a \u003ccode\u003eListBotAliases\u003c/code\u003e operation request to get the next page of results.'\n        localeId:\n          allOf:\n            - $ref: '#/components/schemas/LocaleId'\n            - description: The language and locale of the intents in the list.\n    BuiltInIntentSortAttribute:\n      type: string\n      enum:\n        - IntentSignature\n    ListBuiltInSlotTypesResponse:\n      type: object\n      properties:\n        builtInSlotTypeSummaries:\n          allOf:\n            - $ref: '#/components/schemas/BuiltInSlotTypeSummaryList'\n            - description: 'Summary information for the built-in slot types that meet the filter criteria specified in the request. The length of the list is specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter of the request. If there are more slot types available, the \u003ccode\u003enextToken\u003c/code\u003e field contains a token to get the next page of results.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'A token that indicates whether there are more results to return in a response to the \u003ccode\u003eListBuiltInSlotTypes\u003c/code\u003e operation. If the \u003ccode\u003enextToken\u003c/code\u003e field is present, you send the contents as the \u003ccode\u003enextToken\u003c/code\u003e parameter of a \u003ccode\u003eLIstBuiltInSlotTypes\u003c/code\u003e operation request to get the next page of results.'\n        localeId:\n          allOf:\n            - $ref: '#/components/schemas/LocaleId'\n            - description: The language and locale of the slot types in the list.\n    BuiltInSlotTypeSortAttribute:\n      type: string\n      enum:\n        - SlotTypeSignature\n    ListExportsResponse:\n      type: object\n      properties:\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier assigned to the bot by Amazon Lex.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/BotVersion'\n            - description: The version of the bot that was exported.\n        exportSummaries:\n          allOf:\n            - $ref: '#/components/schemas/ExportSummaryList'\n            - description: 'Summary information for the exports that meet the filter criteria specified in the request. The length of the list is specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter. If there are more exports available, the \u003ccode\u003enextToken\u003c/code\u003e field contains a token to get the next page of results.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'A token that indicates whether there are more results to return in a response to the \u003ccode\u003eListExports\u003c/code\u003e operation. If the \u003ccode\u003enextToken\u003c/code\u003e field is present, you send the contents as the \u003ccode\u003enextToken\u003c/code\u003e parameter of a \u003ccode\u003eListExports\u003c/code\u003e operation request to get the next page of results.'\n    ExportSortAttribute:\n      type: string\n      enum:\n        - LastUpdatedDateTime\n    ExportFilter:\n      type: object\n      required:\n        - name\n        - values\n        - operator\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ExportFilterName'\n            - description: The name of the field to use for filtering.\n        values:\n          allOf:\n            - $ref: '#/components/schemas/FilterValues'\n            - description: The values to use to fileter the response.\n        operator:\n          allOf:\n            - $ref: '#/components/schemas/ExportFilterOperator'\n            - description: The operator to use for the filter. Specify EQ when the \u003ccode\u003eListExports\u003c/code\u003e operation should return only resource types that equal the specified value. Specify CO when the \u003ccode\u003eListExports\u003c/code\u003e operation should return resource types that contain the specified value.\n      description: Filtes the response form the operation\n    ListImportsResponse:\n      type: object\n      properties:\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier assigned by Amazon Lex to the bot.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/DraftBotVersion'\n            - description: The version of the bot that was imported. It will always be \u003ccode\u003eDRAFT\u003c/code\u003e.\n        importSummaries:\n          allOf:\n            - $ref: '#/components/schemas/ImportSummaryList'\n            - description: 'Summary information for the imports that meet the filter criteria specified in the request. The length of the list is specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter. If there are more imports available, the \u003ccode\u003enextToken\u003c/code\u003e field contains a token to get the next page of results.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'A token that indicates whether there are more results to return in a response to the \u003ccode\u003eListImports\u003c/code\u003e operation. If the \u003ccode\u003enextToken\u003c/code\u003e field is present, you send the contents as the \u003ccode\u003enextToken\u003c/code\u003e parameter of a \u003ccode\u003eListImports\u003c/code\u003e operation request to get the next page of results.'\n    ImportSortAttribute:\n      type: string\n      enum:\n        - LastUpdatedDateTime\n    ImportFilter:\n      type: object\n      required:\n        - name\n        - values\n        - operator\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ImportFilterName'\n            - description: The name of the field to use for filtering.\n        values:\n          allOf:\n            - $ref: '#/components/schemas/FilterValues'\n            - description: The values to use to filter the response.\n        operator:\n          allOf:\n            - $ref: '#/components/schemas/ImportFilterOperator'\n            - description: The operator to use for the filter. Specify EQ when the \u003ccode\u003eListImports\u003c/code\u003e operation should return only resource types that equal the specified value. Specify CO when the \u003ccode\u003eListImports\u003c/code\u003e operation should return resource types that contain the specified value.\n      description: Filters the response from the operation.\n    ListIntentsResponse:\n      type: object\n      properties:\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The identifier of the bot that contains the intent.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/BotVersion'\n            - description: The version of the bot that contains the intent.\n        localeId:\n          allOf:\n            - $ref: '#/components/schemas/LocaleId'\n            - description: The language and locale of the intents in the list.\n        intentSummaries:\n          allOf:\n            - $ref: '#/components/schemas/IntentSummaryList'\n            - description: 'Summary information for the intents that meet the filter criteria specified in the request. The length of the list is specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter of the request. If there are more intents available, the \u003ccode\u003enextToken\u003c/code\u003e field contains a token to get the next page of results.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'A token that indicates whether there are more results to return in a response to the \u003ccode\u003eListIntents\u003c/code\u003e operation. If the \u003ccode\u003enextToken\u003c/code\u003e field is present, you send the contents as the \u003ccode\u003enextToken\u003c/code\u003e parameter of a \u003ccode\u003eListIntents\u003c/code\u003e operation request to get the next page of results.'\n    IntentSortAttribute:\n      type: string\n      enum:\n        - IntentName\n        - LastUpdatedDateTime\n    IntentFilter:\n      type: object\n      required:\n        - name\n        - values\n        - operator\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/IntentFilterName'\n            - description: The name of the field to use for the filter.\n        values:\n          allOf:\n            - $ref: '#/components/schemas/FilterValues'\n            - description: The value to use for the filter.\n        operator:\n          allOf:\n            - $ref: '#/components/schemas/IntentFilterOperator'\n            - description: The operator to use for the filter. Specify \u003ccode\u003eEQ\u003c/code\u003e when the \u003ccode\u003eListIntents\u003c/code\u003e operation should return only aliases that equal the specified value. Specify \u003ccode\u003eCO\u003c/code\u003e when the \u003ccode\u003eListIntents\u003c/code\u003e operation should return aliases that contain the specified value.\n      description: Filters the response from the \u003ccode\u003eListIntents\u003c/code\u003e operation.\n    ListSlotTypesResponse:\n      type: object\n      properties:\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The identifier of the bot that contains the slot types.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/BotVersion'\n            - description: The version of the bot that contains the slot types.\n        localeId:\n          allOf:\n            - $ref: '#/components/schemas/LocaleId'\n            - description: The language and local of the slot types in the list.\n        slotTypeSummaries:\n          allOf:\n            - $ref: '#/components/schemas/SlotTypeSummaryList'\n            - description: 'Summary information for the slot types that meet the filter criteria specified in the request. The length of the list is specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter of the request. If there are more slot types available, the \u003ccode\u003enextToken\u003c/code\u003e field contains a token to get the next page of results.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'A token that indicates whether there are more results to return in a response to the \u003ccode\u003eListSlotTypes\u003c/code\u003e operation. If the \u003ccode\u003enextToken\u003c/code\u003e field is present, you send the contents as the \u003ccode\u003enextToken\u003c/code\u003e parameter of a \u003ccode\u003eListSlotTypes\u003c/code\u003e operation request to get the next page of results.'\n    SlotTypeSortAttribute:\n      type: string\n      enum:\n        - SlotTypeName\n        - LastUpdatedDateTime\n    SlotTypeFilter:\n      type: object\n      required:\n        - name\n        - values\n        - operator\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/SlotTypeFilterName'\n            - description: The name of the field to use for filtering.\n        values:\n          allOf:\n            - $ref: '#/components/schemas/FilterValues'\n            - description: The value to use to filter the response.\n        operator:\n          allOf:\n            - $ref: '#/components/schemas/SlotTypeFilterOperator'\n            - description: The operator to use for the filter. Specify \u003ccode\u003eEQ\u003c/code\u003e when the \u003ccode\u003eListSlotTypes\u003c/code\u003e operation should return only aliases that equal the specified value. Specify \u003ccode\u003eCO\u003c/code\u003e when the \u003ccode\u003eListSlotTypes\u003c/code\u003e operation should return aliases that contain the specified value.\n      description: Filters the response from the \u003ccode\u003eListSlotTypes\u003c/code\u003e operation.\n    ListSlotsResponse:\n      type: object\n      properties:\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The identifier of the bot that contains the slots.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/BotVersion'\n            - description: The version of the bot that contains the slots.\n        localeId:\n          allOf:\n            - $ref: '#/components/schemas/LocaleId'\n            - description: The language and locale of the slots in the list.\n        intentId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The identifier of the intent that contains the slots.\n        slotSummaries:\n          allOf:\n            - $ref: '#/components/schemas/SlotSummaryList'\n            - description: 'Summary information for the slots that meet the filter criteria specified in the request. The length of the list is specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter of the request. If there are more slots available, the \u003ccode\u003enextToken\u003c/code\u003e field contains a token to get the next page of results.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'A token that indicates whether there are more results to return in a response to the \u003ccode\u003eListSlots\u003c/code\u003e operation. If the \u003ccode\u003enextToken\u003c/code\u003e field is present, you send the contents as the \u003ccode\u003enextToken\u003c/code\u003e parameter of a \u003ccode\u003eListSlots\u003c/code\u003e operation request to get the next page of results.'\n    SlotSortAttribute:\n      type: string\n      enum:\n        - SlotName\n        - LastUpdatedDateTime\n    SlotFilter:\n      type: object\n      required:\n        - name\n        - values\n        - operator\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/SlotFilterName'\n            - description: The name of the field to use for filtering.\n        values:\n          allOf:\n            - $ref: '#/components/schemas/FilterValues'\n            - description: The value to use to filter the response.\n        operator:\n          allOf:\n            - $ref: '#/components/schemas/SlotFilterOperator'\n            - description: The operator to use for the filter. Specify \u003ccode\u003eEQ\u003c/code\u003e when the \u003ccode\u003eListSlots\u003c/code\u003e operation should return only aliases that equal the specified value. Specify \u003ccode\u003eCO\u003c/code\u003e when the \u003ccode\u003eListSlots\u003c/code\u003e operation should return aliases that contain the specified value.\n      description: Filters the response from the \u003ccode\u003eListSlots\u003c/code\u003e operation.\n    ListTagsForResourceResponse:\n      type: object\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags associated with a resource.\n    StartImportResponse:\n      type: object\n      properties:\n        importId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: A unique identifier for the import.\n        resourceSpecification:\n          allOf:\n            - $ref: '#/components/schemas/ImportResourceSpecification'\n            - description: The parameters used when importing the bot or bot locale.\n        mergeStrategy:\n          allOf:\n            - $ref: '#/components/schemas/MergeStrategy'\n            - description: The strategy used when there was a name conflict between the imported resource and an existing resource. When the merge strategy is \u003ccode\u003eFailOnConflict\u003c/code\u003e existing resources are not overwritten and the import fails.\n        importStatus:\n          allOf:\n            - $ref: '#/components/schemas/ImportStatus'\n            - description: The current status of the import. When the status is \u003ccode\u003eComplete\u003c/code\u003e the bot or bot alias is ready to use.\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The date and time that the import request was created.\n    BotImportSpecification:\n      type: object\n      required:\n        - botName\n        - roleArn\n        - dataPrivacy\n      properties:\n        botName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name that Amazon Lex should use for the bot.\n        roleArn:\n          allOf:\n            - $ref: '#/components/schemas/RoleArn'\n            - description: The Amazon Resource Name (ARN) of the IAM role used to build and run the bot.\n        dataPrivacy:\n          $ref: '#/components/schemas/DataPrivacy'\n        idleSessionTTLInSeconds:\n          allOf:\n            - $ref: '#/components/schemas/SessionTTL'\n            - description: '\u003cp\u003eThe time, in seconds, that Amazon Lex should keep information about a user''s conversation with the bot. \u003c/p\u003e \u003cp\u003eA user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Lex deletes any data provided before the timeout.\u003c/p\u003e \u003cp\u003eYou can specify between 60 (1 minute) and 86,400 (24 hours) seconds.\u003c/p\u003e'\n        botTags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: 'A list of tags to add to the bot. You can only add tags when you import a bot. You can''t use the \u003ccode\u003eUpdateBot\u003c/code\u003e operation to update tags. To update tags, use the \u003ccode\u003eTagResource\u003c/code\u003e operation.'\n        testBotAliasTags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: 'A list of tags to add to the test alias for a bot. You can only add tags when you import a bot. You can''t use the \u003ccode\u003eUpdateAlias\u003c/code\u003e operation to update tags. To update tags on the test alias, use the \u003ccode\u003eTagResource\u003c/code\u003e operation.'\n      description: Provides the bot parameters required for importing a bot.\n    BotLocaleImportSpecification:\n      type: object\n      required:\n        - botId\n        - botVersion\n        - localeId\n      properties:\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The identifier of the bot to import the locale to.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/DraftBotVersion'\n            - description: The version of the bot to import the locale to. This can only be the \u003ccode\u003eDRAFT\u003c/code\u003e version of the bot.\n        localeId:\n          allOf:\n            - $ref: '#/components/schemas/LocaleId'\n            - description: 'The identifier of the language and locale that the bot will be used in. The string must match one of the supported locales. All of the intents, slot types, and slots used in the bot must have the same locale. For more information, see \u003ca href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\"\u003eSupported languages\u003c/a\u003e.'\n        nluIntentConfidenceThreshold:\n          allOf:\n            - $ref: '#/components/schemas/ConfidenceThreshold'\n            - description: '\u003cp\u003eDetermines the threshold where Amazon Lex will insert the \u003ccode\u003eAMAZON.FallbackIntent\u003c/code\u003e, \u003ccode\u003eAMAZON.KendraSearchIntent\u003c/code\u003e, or both when returning alternative intents. \u003ccode\u003eAMAZON.FallbackIntent\u003c/code\u003e and \u003ccode\u003eAMAZON.KendraSearchIntent\u003c/code\u003e are only inserted if they are configured for the bot. \u003c/p\u003e \u003cp\u003eFor example, suppose a bot is configured with the confidence threshold of 0.80 and the \u003ccode\u003eAMAZON.FallbackIntent\u003c/code\u003e. Amazon Lex returns three alternative intents with the following confidence scores: IntentA (0.70), IntentB (0.60), IntentC (0.50). The response from the \u003ccode\u003ePostText\u003c/code\u003e operation would be:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eAMAZON.FallbackIntent\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIntentA\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIntentB\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIntentC\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        voiceSettings:\n          $ref: '#/components/schemas/VoiceSettings'\n      description: Provides the bot locale parameters required for importing a bot locale.\n    TagResourceResponse:\n      type: object\n      properties: {}\n    UntagResourceResponse:\n      type: object\n      properties: {}\n    TagKey:\n      type: string\n      minLength: 1\n      maxLength: 128\n    UpdateBotResponse:\n      type: object\n      properties:\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier of the bot that was updated.\n        botName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the bot after the update.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the bot after the update.\n        roleArn:\n          allOf:\n            - $ref: '#/components/schemas/RoleArn'\n            - description: The Amazon Resource Name (ARN) of the IAM role used by the bot after the update.\n        dataPrivacy:\n          allOf:\n            - $ref: '#/components/schemas/DataPrivacy'\n            - description: The data privacy settings for the bot after the update.\n        idleSessionTTLInSeconds:\n          allOf:\n            - $ref: '#/components/schemas/SessionTTL'\n            - description: 'The session timeout, in seconds, for the bot after the update.'\n        botStatus:\n          allOf:\n            - $ref: '#/components/schemas/BotStatus'\n            - description: 'Shows the current status of the bot. The bot is first in the \u003ccode\u003eCreating\u003c/code\u003e status. Once the bot is read for use, it changes to the \u003ccode\u003eAvailable\u003c/code\u003e status. After the bot is created, you can use the \u003ccode\u003eDRAFT\u003c/code\u003e version of the bot.'\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the date and time that the bot was created.\n        lastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the date and time that the bot was last updated.\n    UpdateBotAliasResponse:\n      type: object\n      properties:\n        botAliasId:\n          allOf:\n            - $ref: '#/components/schemas/BotAliasId'\n            - description: The identifier of the updated bot alias.\n        botAliasName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The updated name of the bot alias.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The updated description of the bot alias.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/BotVersion'\n            - description: The updated version of the bot that the alias points to.\n        botAliasLocaleSettings:\n          allOf:\n            - $ref: '#/components/schemas/BotAliasLocaleSettingsMap'\n            - description: The updated Lambda functions to use in each locale for the bot alias.\n        conversationLogSettings:\n          allOf:\n            - $ref: '#/components/schemas/ConversationLogSettings'\n            - description: The updated settings for storing conversation logs in Amazon CloudWatch Logs and Amazon S3 buckets.\n        sentimentAnalysisSettings:\n          $ref: '#/components/schemas/SentimentAnalysisSettings'\n        botAliasStatus:\n          allOf:\n            - $ref: '#/components/schemas/BotAliasStatus'\n            - description: The current status of the bot alias. When the status is \u003ccode\u003eAvailable\u003c/code\u003e the alias is ready for use.\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The identifier of the bot with the updated alias.\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the date and time that the bot was created.\n        lastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the date and time that the bot was last updated.\n    UpdateBotLocaleResponse:\n      type: object\n      properties:\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The identifier of the bot that contains the updated locale.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/DraftBotVersion'\n            - description: The version of the bot that contains the updated locale.\n        localeId:\n          allOf:\n            - $ref: '#/components/schemas/LocaleId'\n            - description: The language and locale of the updated bot locale.\n        localeName:\n          allOf:\n            - $ref: '#/components/schemas/LocaleName'\n            - description: The updated locale name for the locale.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The updated description of the locale.\n        nluIntentConfidenceThreshold:\n          allOf:\n            - $ref: '#/components/schemas/ConfidenceThreshold'\n            - description: The updated confidence threshold for inserting the \u003ccode\u003eAMAZON.FallbackIntent\u003c/code\u003e and \u003ccode\u003eAMAZON.KendraSearchIntent\u003c/code\u003e intents in the list of possible intents for an utterance.\n        voiceSettings:\n          allOf:\n            - $ref: '#/components/schemas/VoiceSettings'\n            - description: The updated Amazon Polly voice to use for voice interaction with the user.\n        botLocaleStatus:\n          allOf:\n            - $ref: '#/components/schemas/BotLocaleStatus'\n            - description: The current status of the locale. When the bot status is \u003ccode\u003eBuilt\u003c/code\u003e the locale is ready for use.\n        failureReasons:\n          allOf:\n            - $ref: '#/components/schemas/FailureReasons'\n            - description: 'If the \u003ccode\u003ebotLocaleStatus\u003c/code\u003e is \u003ccode\u003eFailed\u003c/code\u003e, the \u003ccode\u003efailureReasons\u003c/code\u003e field lists the errors that occurred while building the bot.'\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the date and time that the locale was created.\n        lastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the date and time that the locale was last updated.\n    UpdateExportResponse:\n      type: object\n      properties:\n        exportId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier Amazon Lex assigned to the export.\n        resourceSpecification:\n          allOf:\n            - $ref: '#/components/schemas/ExportResourceSpecification'\n            - description: 'A description of the type of resource that was exported, either a bot or a bot locale.'\n        fileFormat:\n          allOf:\n            - $ref: '#/components/schemas/ImportExportFileFormat'\n            - description: The file format used for the files that define the resource.\n        exportStatus:\n          allOf:\n            - $ref: '#/components/schemas/ExportStatus'\n            - description: The status of the export. When the status is \u003ccode\u003eCompleted\u003c/code\u003e the export archive is available for download.\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The date and time that the export was created.\n        lastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The date and time that the export was last updated.\n    UpdateIntentResponse:\n      type: object\n      properties:\n        intentId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The identifier of the intent that was updated.\n        intentName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The updated name of the intent.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The updated description of the intent.\n        parentIntentSignature:\n          allOf:\n            - $ref: '#/components/schemas/IntentSignature'\n            - description: The updated built-in intent that is the parent of this intent.\n        sampleUtterances:\n          allOf:\n            - $ref: '#/components/schemas/SampleUtterancesList'\n            - description: The updated list of sample utterances for the intent.\n        dialogCodeHook:\n          allOf:\n            - $ref: '#/components/schemas/DialogCodeHookSettings'\n            - description: The updated Lambda function called during each turn of the conversation with the user.\n        fulfillmentCodeHook:\n          allOf:\n            - $ref: '#/components/schemas/FulfillmentCodeHookSettings'\n            - description: The updated Lambda function called when the intent is ready for fulfillment.\n        slotPriorities:\n          allOf:\n            - $ref: '#/components/schemas/SlotPrioritiesList'\n            - description: The updated list of slots and their priorities that are elicited from the user for the intent.\n        intentConfirmationSetting:\n          allOf:\n            - $ref: '#/components/schemas/IntentConfirmationSetting'\n            - description: The updated prompts that Amazon Lex sends to the user to confirm the completion of an intent.\n        intentClosingSetting:\n          allOf:\n            - $ref: '#/components/schemas/IntentClosingSetting'\n            - description: The updated response that Amazon Lex sends the user when the intent is closed.\n        inputContexts:\n          allOf:\n            - $ref: '#/components/schemas/InputContextsList'\n            - description: The updated list of contexts that must be active for the intent to be considered by Amazon Lex.\n        outputContexts:\n          allOf:\n            - $ref: '#/components/schemas/OutputContextsList'\n            - description: The updated list of contexts that Amazon Lex activates when the intent is fulfilled.\n        kendraConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/KendraConfiguration'\n            - description: The updated configuration for connecting to an Amazon Kendra index with the \u003ccode\u003eAMAZON.KendraSearchIntent\u003c/code\u003e intent.\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The identifier of the bot that contains the intent.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/DraftBotVersion'\n            - description: The version of the bot that contains the intent. Will always be \u003ccode\u003eDRAFT\u003c/code\u003e.\n        localeId:\n          allOf:\n            - $ref: '#/components/schemas/LocaleId'\n            - description: The updated language and locale of the intent.\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of when the intent was created.\n        lastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the last time that the intent was modified.\n    SlotPriority:\n      type: object\n      required:\n        - priority\n        - slotId\n      properties:\n        priority:\n          allOf:\n            - $ref: '#/components/schemas/PriorityValue'\n            - description: The priority that a slot should be elicited.\n        slotId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier of the slot.\n      description: Sets the priority that Amazon Lex should use when eliciting slot values from a user.\n    UpdateResourcePolicyResponse:\n      type: object\n      properties:\n        resourceArn:\n          allOf:\n            - $ref: '#/components/schemas/AmazonResourceName'\n            - description: The Amazon Resource Name (ARN) of the bot or bot alias that the resource policy is attached to.\n        revisionId:\n          allOf:\n            - $ref: '#/components/schemas/RevisionId'\n            - description: 'The current revision of the resource policy. Use the revision ID to make sure that you are updating the most current version of a resource policy when you add a policy statement to a resource, delete a resource, or update a resource.'\n    UpdateSlotResponse:\n      type: object\n      properties:\n        slotId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier of the slot that was updated.\n        slotName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The updated name of the slot.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The updated description of the bot.\n        slotTypeId:\n          allOf:\n            - $ref: '#/components/schemas/BuiltInOrCustomSlotTypeId'\n            - description: The updated identifier of the slot type that provides values for the slot.\n        valueElicitationSetting:\n          allOf:\n            - $ref: '#/components/schemas/SlotValueElicitationSetting'\n            - description: The updated prompts that Amazon Lex sends to the user to elicit a response that provides a value for the slot.\n        obfuscationSetting:\n          allOf:\n            - $ref: '#/components/schemas/ObfuscationSetting'\n            - description: The updated setting that determines whether the slot value is obfuscated in the Amazon CloudWatch logs.\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The identifier of the bot that contains the slot.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/DraftBotVersion'\n            - description: The identifier of the slot version that contains the slot. Will always be \u003ccode\u003eDRAFT\u003c/code\u003e.\n        localeId:\n          allOf:\n            - $ref: '#/components/schemas/LocaleId'\n            - description: The locale that contains the slot.\n        intentId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The intent that contains the slot.\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The timestamp of the date and time that the slot was created.\n        lastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The timestamp of the date and time that the slot was last updated.\n        multipleValuesSetting:\n          allOf:\n            - $ref: '#/components/schemas/MultipleValuesSetting'\n            - description: Indicates whether the slot accepts multiple values in one response.\n    UpdateSlotTypeResponse:\n      type: object\n      properties:\n        slotTypeId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier of the updated slot type.\n        slotTypeName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The updated name of the slot type.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The updated description of the slot type.\n        slotTypeValues:\n          allOf:\n            - $ref: '#/components/schemas/SlotTypeValues'\n            - description: The updated values that the slot type provides.\n        valueSelectionSetting:\n          allOf:\n            - $ref: '#/components/schemas/SlotValueSelectionSetting'\n            - description: The updated strategy that Amazon Lex uses to determine which value to select from the slot type.\n        parentSlotTypeSignature:\n          allOf:\n            - $ref: '#/components/schemas/SlotTypeSignature'\n            - description: The updated signature of the built-in slot type that is the parent of this slot type.\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The identifier of the bot that contains the slot type.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/DraftBotVersion'\n            - description: The version of the bot that contains the slot type. This is always \u003ccode\u003eDRAFT\u003c/code\u003e.\n        localeId:\n          allOf:\n            - $ref: '#/components/schemas/LocaleId'\n            - description: The language and locale of the updated slot type.\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The timestamp of the date and time that the slot type was created.\n        lastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the date and time that the slot type was last updated.\n    AmazonResourceName:\n      type: string\n      minLength: 1\n      maxLength: 1011\n    AttachmentTitle:\n      type: string\n      minLength: 1\n      maxLength: 250\n    AttachmentUrl:\n      type: string\n      minLength: 1\n      maxLength: 250\n    S3BucketLogDestination:\n      type: object\n      required:\n        - s3BucketArn\n        - logPrefix\n      properties:\n        kmsKeyArn:\n          allOf:\n            - $ref: '#/components/schemas/KmsKeyArn'\n            - description: The Amazon Resource Name (ARN) of an AWS Key Management Service (KMS) key for encrypting audio log files stored in an S3 bucket.\n        s3BucketArn:\n          allOf:\n            - $ref: '#/components/schemas/S3BucketArn'\n            - description: The Amazon Resource Name (ARN) of an Amazon S3 bucket where audio log files are stored.\n        logPrefix:\n          allOf:\n            - $ref: '#/components/schemas/LogPrefix'\n            - description: The S3 prefix to assign to audio log files.\n      description: Specifies an Amazon S3 bucket for logging audio conversations\n    AudioLogDestination:\n      type: object\n      required:\n        - s3Bucket\n      properties:\n        s3Bucket:\n          allOf:\n            - $ref: '#/components/schemas/S3BucketLogDestination'\n            - description: The Amazon S3 bucket where the audio log files are stored. The IAM role specified in the \u003ccode\u003eroleArn\u003c/code\u003e parameter of the \u003ca\u003eCreateBot\u003c/a\u003e operation must have permission to write to this bucket.\n      description: The location of audio log files collected when conversation logging is enabled for a bot.\n    AudioLogSetting:\n      type: object\n      required:\n        - enabled\n        - destination\n      properties:\n        enabled:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: Determines whether audio logging in enabled for the bot.\n        destination:\n          $ref: '#/components/schemas/AudioLogDestination'\n      description: Settings for logging audio of conversations between Amazon Lex and a user. You specify whether to log audio and the Amazon S3 bucket where the audio file is stored.\n    BotVersion:\n      type: string\n      pattern: '^(DRAFT|[0-9]+)$'\n      minLength: 1\n      maxLength: 5\n    Timestamp:\n      type: string\n      format: date-time\n    BotAliasHistoryEvent:\n      type: object\n      properties:\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/BotVersion'\n            - description: 'The version of the bot that was used in the event. '\n        startDate:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The date and time that the event started.\n        endDate:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The date and time that the event ended.\n      description: 'Provides a record of an event that affects a bot alias. For example, when the version of a bot that the alias points to changes.'\n    BotAliasHistoryEventsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/BotAliasHistoryEvent'\n    BotAliasId:\n      type: string\n      pattern: '^(\\bTSTALIASID\\b|[0-9a-zA-Z]+)$'\n      minLength: 10\n      maxLength: 10\n    CodeHookSpecification:\n      type: object\n      required:\n        - lambdaCodeHook\n      properties:\n        lambdaCodeHook:\n          $ref: '#/components/schemas/LambdaCodeHook'\n      description: Contains information about code hooks that Amazon Lex calls during a conversation.\n    BotAliasLocaleSettingsMap:\n      type: object\n      minProperties: 1\n      additionalProperties:\n        $ref: '#/components/schemas/BotAliasLocaleSettings'\n    BotAliasStatus:\n      type: string\n      enum:\n        - Creating\n        - Available\n        - Deleting\n        - Failed\n    Name:\n      type: string\n      pattern: '^([0-9a-zA-Z][_-]?)+$'\n      minLength: 1\n      maxLength: 100\n    Description:\n      type: string\n      minLength: 0\n      maxLength: 200\n    BotAliasSummary:\n      type: object\n      properties:\n        botAliasId:\n          allOf:\n            - $ref: '#/components/schemas/BotAliasId'\n            - description: The unique identifier assigned to the bot alias. You can use this ID to get detailed information about the alias using the \u003ca\u003eDescribeBotAlias\u003c/a\u003e operation.\n        botAliasName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the bot alias.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the bot alias.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/BotVersion'\n            - description: The version of the bot that the bot alias references.\n        botAliasStatus:\n          allOf:\n            - $ref: '#/components/schemas/BotAliasStatus'\n            - description: 'The current state of the bot alias. If the status is \u003ccode\u003eAvailable\u003c/code\u003e, the alias is ready for use.'\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the date and time that the bot alias was created.\n        lastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the date and time that the bot alias was last updated.\n      description: Summary information about bot aliases returned from the \u003ca\u003eListBotAliases\u003c/a\u003e operation.\n    BotAliasSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/BotAliasSummary'\n    Id:\n      type: string\n      pattern: '^[0-9a-zA-Z]+$'\n      minLength: 10\n      maxLength: 10\n    BotFilterName:\n      type: string\n      enum:\n        - BotName\n    FilterValues:\n      type: array\n      items:\n        $ref: '#/components/schemas/FilterValue'\n      minItems: 1\n      maxItems: 1\n    BotFilterOperator:\n      type: string\n      enum:\n        - CO\n        - EQ\n    BotFilters:\n      type: array\n      items:\n        $ref: '#/components/schemas/BotFilter'\n      minItems: 1\n      maxItems: 1\n    RoleArn:\n      type: string\n      pattern: '^arn:aws:iam::[0-9]{12}:role/.*$'\n      minLength: 32\n      maxLength: 2048\n    DataPrivacy:\n      type: object\n      required:\n        - childDirected\n      properties:\n        childDirected:\n          allOf:\n            - $ref: '#/components/schemas/ChildDirected'\n            - description: 'For each Amazon Lex bot created with the Amazon Lex Model Building Service, you must specify whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children''s Online Privacy Protection Act (COPPA) by specifying \u003ccode\u003etrue\u003c/code\u003e or \u003ccode\u003efalse\u003c/code\u003e in the \u003ccode\u003echildDirected\u003c/code\u003e field. By specifying \u003ccode\u003etrue\u003c/code\u003e in the \u003ccode\u003echildDirected\u003c/code\u003e field, you confirm that your use of Amazon Lex \u003cb\u003eis\u003c/b\u003e related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. By specifying \u003ccode\u003efalse\u003c/code\u003e in the \u003ccode\u003echildDirected\u003c/code\u003e field, you confirm that your use of Amazon Lex \u003cb\u003eis not\u003c/b\u003e related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. You may not specify a default value for the \u003ccode\u003echildDirected\u003c/code\u003e field that does not accurately reflect whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. If your use of Amazon Lex relates to a website, program, or other application that is directed in whole or in part, to children under age 13, you must obtain any required verifiable parental consent under COPPA. For information regarding the use of Amazon Lex in connection with websites, programs, or other applications that are directed or targeted, in whole or in part, to children under age 13, see the \u003ca href=\"https://aws.amazon.com/lex/faqs#data-security\"\u003eAmazon Lex FAQ\u003c/a\u003e.'\n      description: 'By default, data stored by Amazon Lex is encrypted. The \u003ccode\u003eDataPrivacy\u003c/code\u003e structure provides settings that determine how Amazon Lex handles special cases of securing the data for your bot. '\n    SessionTTL:\n      type: integer\n      minimum: 60\n      maximum: 86400\n    TagMap:\n      type: object\n      minProperties: 0\n      maxProperties: 200\n      additionalProperties:\n        $ref: '#/components/schemas/TagValue'\n    LocaleId:\n      type: string\n    BotLocaleFilterName:\n      type: string\n      enum:\n        - BotLocaleName\n    BotLocaleFilterOperator:\n      type: string\n      enum:\n        - CO\n        - EQ\n    BotLocaleFilters:\n      type: array\n      items:\n        $ref: '#/components/schemas/BotLocaleFilter'\n      minItems: 1\n      maxItems: 1\n    BotLocaleHistoryEventDescription:\n      type: string\n    BotLocaleHistoryEvent:\n      type: object\n      required:\n        - event\n        - eventDate\n      properties:\n        event:\n          allOf:\n            - $ref: '#/components/schemas/BotLocaleHistoryEventDescription'\n            - description: A description of the event that occurred.\n        eventDate:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the date and time that the event occurred.\n      description: Provides information about an event that occurred affecting the bot locale.\n    BotLocaleHistoryEventsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/BotLocaleHistoryEvent'\n    DraftBotVersion:\n      type: string\n      pattern: ^DRAFT$\n      minLength: 5\n      maxLength: 5\n    ConfidenceThreshold:\n      type: number\n      format: double\n      minimum: 0\n      maximum: 1\n    VoiceSettings:\n      type: object\n      required:\n        - voiceId\n      properties:\n        voiceId:\n          allOf:\n            - $ref: '#/components/schemas/VoiceId'\n            - description: The identifier of the Amazon Polly voice to use.\n      description: Defines settings for using an Amazon Polly voice to communicate with a user.\n    BotLocaleSortBy:\n      type: object\n      required:\n        - attribute\n        - order\n      properties:\n        attribute:\n          allOf:\n            - $ref: '#/components/schemas/BotLocaleSortAttribute'\n            - description: The bot locale attribute to sort by.\n        order:\n          allOf:\n            - $ref: '#/components/schemas/SortOrder'\n            - description: Specifies whether to sort the bot locales in ascending or descending order.\n      description: Specifies attributes for sorting a list of bot locales.\n    BotLocaleStatus:\n      type: string\n      enum:\n        - Creating\n        - Building\n        - Built\n        - ReadyExpressTesting\n        - Failed\n        - Deleting\n        - NotBuilt\n        - Importing\n    LocaleName:\n      type: string\n    BotLocaleSummary:\n      type: object\n      properties:\n        localeId:\n          allOf:\n            - $ref: '#/components/schemas/LocaleId'\n            - description: The language and locale of the bot locale.\n        localeName:\n          allOf:\n            - $ref: '#/components/schemas/LocaleName'\n            - description: The name of the bot locale.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the bot locale.\n        botLocaleStatus:\n          allOf:\n            - $ref: '#/components/schemas/BotLocaleStatus'\n            - description: The current status of the bot locale. When the status is \u003ccode\u003eBuilt\u003c/code\u003e the locale is ready for use.\n        lastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the date and time that the bot locale was last updated.\n        lastBuildSubmittedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the date and time that the bot locale was last built.\n      description: Summary information about bot locales returned by the \u003ca\u003eListBotLocales\u003c/a\u003e operation.\n    BotLocaleSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/BotLocaleSummary'\n    BotSortBy:\n      type: object\n      required:\n        - attribute\n        - order\n      properties:\n        attribute:\n          allOf:\n            - $ref: '#/components/schemas/BotSortAttribute'\n            - description: The attribute to use to sort the list of bots.\n        order:\n          allOf:\n            - $ref: '#/components/schemas/SortOrder'\n            - description: The order to sort the list. You can choose ascending or descending.\n      description: Specifies attributes for sorting a list of bots.\n    BotStatus:\n      type: string\n      enum:\n        - Creating\n        - Available\n        - Inactive\n        - Deleting\n        - Failed\n        - Versioning\n        - Importing\n    NumericalBotVersion:\n      type: string\n      pattern: '^[0-9]+$'\n      minLength: 1\n      maxLength: 5\n    BotSummary:\n      type: object\n      properties:\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier assigned to the bot. Use this ID to get detailed information about the bot with the \u003ca\u003eDescribeBot\u003c/a\u003e operation.\n        botName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the bot.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the bot.\n        botStatus:\n          allOf:\n            - $ref: '#/components/schemas/BotStatus'\n            - description: The current status of the bot. When the status is \u003ccode\u003eAvailable\u003c/code\u003e the bot is ready for use.\n        latestBotVersion:\n          allOf:\n            - $ref: '#/components/schemas/NumericalBotVersion'\n            - description: The latest numerical version in use for the bot.\n        lastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The date and time that the bot was last updated.\n      description: Summary information about a bot returned by the \u003ca\u003eListBots\u003c/a\u003e operation.\n    BotSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/BotSummary'\n    BotVersionLocaleSpecification:\n      type: object\n      minProperties: 1\n      additionalProperties:\n        $ref: '#/components/schemas/BotVersionLocaleDetails'\n    BotVersionSortBy:\n      type: object\n      required:\n        - attribute\n        - order\n      properties:\n        attribute:\n          allOf:\n            - $ref: '#/components/schemas/BotVersionSortAttribute'\n            - description: The attribute to use to sort the list of versions.\n        order:\n          allOf:\n            - $ref: '#/components/schemas/SortOrder'\n            - description: The order to sort the list. You can specify ascending or descending order.\n      description: Specifies attributes for sorting a list of bot versions.\n    BotVersionSummary:\n      type: object\n      properties:\n        botName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the bot associated with the version.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/BotVersion'\n            - description: 'The numeric version of the bot, or \u003ccode\u003eDRAFT\u003c/code\u003e to indicate that this is the version of the bot that can be updated..'\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the version.\n        botStatus:\n          allOf:\n            - $ref: '#/components/schemas/BotStatus'\n            - description: 'The status of the bot. When the status is available, the version of the bot is ready for use.'\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the date and time that the version was created.\n      description: Summary information about a bot version returned by the \u003ca\u003eListBotVersions\u003c/a\u003e operation.\n    BotVersionSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/BotVersionSummary'\n    BuildBotLocaleRequest:\n      type: object\n      title: BuildBotLocaleRequest\n      properties: {}\n    BuiltInIntentSortBy:\n      type: object\n      required:\n        - attribute\n        - order\n      properties:\n        attribute:\n          allOf:\n            - $ref: '#/components/schemas/BuiltInIntentSortAttribute'\n            - description: The attribute to use to sort the list of built-in intents.\n        order:\n          allOf:\n            - $ref: '#/components/schemas/SortOrder'\n            - description: The order to sort the list. You can specify ascending or descending order.\n      description: Specifies attributes for sorting a list of built-in intents.\n    IntentSignature:\n      type: string\n    BuiltInIntentSummary:\n      type: object\n      properties:\n        intentSignature:\n          allOf:\n            - $ref: '#/components/schemas/IntentSignature'\n            - description: The signature of the built-in intent. Use this to specify the parent intent of a derived intent.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the intent.\n      description: Provides summary information about a built-in intent for the \u003ca\u003eListBuiltInIntents\u003c/a\u003e operation.\n    BuiltInIntentSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/BuiltInIntentSummary'\n    BuiltInOrCustomSlotTypeId:\n      type: string\n      pattern: '^((AMAZON\\.)[a-zA-Z_]+?|[0-9a-zA-Z]+)$'\n      minLength: 1\n      maxLength: 25\n    BuiltInSlotTypeSortBy:\n      type: object\n      required:\n        - attribute\n        - order\n      properties:\n        attribute:\n          allOf:\n            - $ref: '#/components/schemas/BuiltInSlotTypeSortAttribute'\n            - description: The attribute to use to sort the list of built-in intents.\n        order:\n          allOf:\n            - $ref: '#/components/schemas/SortOrder'\n            - description: The order to sort the list. You can choose ascending or descending.\n      description: Specifies attributes for sorting a list of built-in slot types.\n    SlotTypeSignature:\n      type: string\n    BuiltInSlotTypeSummary:\n      type: object\n      properties:\n        slotTypeSignature:\n          allOf:\n            - $ref: '#/components/schemas/SlotTypeSignature'\n            - description: The signature of the built-in slot type. Use this to specify the parent slot type of a derived slot type.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the built-in slot type.\n      description: Provides summary information about a built-in slot type for the \u003ca\u003eListBuiltInSlotTypes\u003c/a\u003e operation.\n    BuiltInSlotTypeSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/BuiltInSlotTypeSummary'\n    BuiltInsMaxResults:\n      type: integer\n      minimum: 20\n      maximum: 20\n    ButtonText:\n      type: string\n      minLength: 1\n      maxLength: 50\n    ButtonValue:\n      type: string\n      minLength: 1\n      maxLength: 50\n    Button:\n      type: object\n      required:\n        - text\n        - value\n      properties:\n        text:\n          allOf:\n            - $ref: '#/components/schemas/ButtonText'\n            - description: The text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n        value:\n          allOf:\n            - $ref: '#/components/schemas/ButtonValue'\n            - description: The value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n      description: Describes a button to use on a response card used to gather slot values from a user.\n    ButtonsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Button'\n      minItems: 0\n      maxItems: 5\n    CloudWatchLogGroupArn:\n      type: string\n      pattern: '^arn:[\\w\\-]+:logs:[\\w\\-]+:[\\d]{12}:log-group:[\\.\\-_/#A-Za-z0-9]{1,512}(?::\\*)?$'\n      minLength: 1\n      maxLength: 2048\n    LogPrefix:\n      type: string\n      maxLength: 1024\n    CloudWatchLogGroupLogDestination:\n      type: object\n      required:\n        - cloudWatchLogGroupArn\n        - logPrefix\n      properties:\n        cloudWatchLogGroupArn:\n          allOf:\n            - $ref: '#/components/schemas/CloudWatchLogGroupArn'\n            - description: The Amazon Resource Name (ARN) of the log group where text and metadata logs are delivered.\n        logPrefix:\n          allOf:\n            - $ref: '#/components/schemas/LogPrefix'\n            - description: 'The prefix of the log stream name within the log group that you specified '\n      description: The Amazon CloudWatch Logs log group where the text and metadata logs are delivered. The log group must exist before you enable logging.\n    CodeHookInterfaceVersion:\n      type: string\n      minLength: 1\n      maxLength: 5\n    LambdaCodeHook:\n      type: object\n      required:\n        - lambdaARN\n        - codeHookInterfaceVersion\n      properties:\n        lambdaARN:\n          allOf:\n            - $ref: '#/components/schemas/LambdaARN'\n            - description: The Amazon Resource Name (ARN) of the Lambda function.\n        codeHookInterfaceVersion:\n          allOf:\n            - $ref: '#/components/schemas/CodeHookInterfaceVersion'\n            - description: The version of the request-response that you want Amazon Lex to use to invoke your Lambda function.\n      description: Specifies a Lambda function that verifies requests to a bot or fulfilles the user's request to a bot.\n    ConditionKey:\n      type: string\n      minLength: 1\n      maxLength: 1024\n    ConditionValue:\n      type: string\n      minLength: 1\n      maxLength: 1024\n    ConditionMap:\n      type: object\n      minProperties: 0\n      maxProperties: 10\n      additionalProperties:\n        $ref: '#/components/schemas/ConditionKeyValueMap'\n    ConditionOperator:\n      type: string\n      minLength: 1\n    ContextTimeToLiveInSeconds:\n      type: integer\n      minimum: 5\n      maximum: 86400\n    ContextTurnsToLive:\n      type: integer\n      minimum: 1\n      maximum: 20\n    ConversationLogSettings:\n      type: object\n      properties:\n        textLogSettings:\n          allOf:\n            - $ref: '#/components/schemas/TextLogSettingsList'\n            - description: The Amazon CloudWatch Logs settings for logging text and metadata.\n        audioLogSettings:\n          allOf:\n            - $ref: '#/components/schemas/AudioLogSettingsList'\n            - description: The Amazon S3 settings for logging audio to an S3 bucket.\n      description: 'Configures conversation logging that saves audio, text, and metadata for the conversations with your users.'\n    SentimentAnalysisSettings:\n      type: object\n      required:\n        - detectSentiment\n      properties:\n        detectSentiment:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: Sets whether Amazon Lex uses Amazon Comprehend to detect the sentiment of user utterances.\n      description: Determines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.\n    CreateBotAliasRequest:\n      type: object\n      required:\n        - botAliasName\n      title: CreateBotAliasRequest\n      properties:\n        botAliasName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The alias to create. The name must be unique for the bot.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A description of the alias. Use this description to help identify the alias.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/NumericalBotVersion'\n            - description: The version of the bot that this alias points to. You can use the operation to change the bot version associated with the alias.\n        botAliasLocaleSettings:\n          allOf:\n            - $ref: '#/components/schemas/BotAliasLocaleSettingsMap'\n            - description: Maps configuration information to a specific locale. You can use this parameter to specify a specific Lambda function to run different functions in different locales.\n        conversationLogSettings:\n          allOf:\n            - $ref: '#/components/schemas/ConversationLogSettings'\n            - description: 'Specifies whether Amazon Lex logs text and audio for a conversation with the bot. When you enable conversation logs, text logs store text input, transcripts of audio input, and associated metadata in Amazon CloudWatch Logs. Audio logs store audio input in Amazon S3.'\n        sentimentAnalysisSettings:\n          $ref: '#/components/schemas/SentimentAnalysisSettings'\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: 'A list of tags to add to the bot alias. You can only add tags when you create an alias, you can''t use the \u003ccode\u003eUpdateBotAlias\u003c/code\u003e operation to update the tags on a bot alias. To update tags, use the \u003ccode\u003eTagResource\u003c/code\u003e operation.'\n    CreateBotLocaleRequest:\n      type: object\n      required:\n        - localeId\n        - nluIntentConfidenceThreshold\n      title: CreateBotLocaleRequest\n      properties:\n        localeId:\n          allOf:\n            - $ref: '#/components/schemas/LocaleId'\n            - description: 'The identifier of the language and locale that the bot will be used in. The string must match one of the supported locales. All of the intents, slot types, and slots used in the bot must have the same locale. For more information, see \u003ca href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\"\u003eSupported languages\u003c/a\u003e.'\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A description of the bot locale. Use this to help identify the bot locale in lists.\n        nluIntentConfidenceThreshold:\n          allOf:\n            - $ref: '#/components/schemas/ConfidenceThreshold'\n            - description: '\u003cp\u003eDetermines the threshold where Amazon Lex will insert the \u003ccode\u003eAMAZON.FallbackIntent\u003c/code\u003e, \u003ccode\u003eAMAZON.KendraSearchIntent\u003c/code\u003e, or both when returning alternative intents. \u003ccode\u003eAMAZON.FallbackIntent\u003c/code\u003e and \u003ccode\u003eAMAZON.KendraSearchIntent\u003c/code\u003e are only inserted if they are configured for the bot.\u003c/p\u003e \u003cp\u003eFor example, suppose a bot is configured with the confidence threshold of 0.80 and the \u003ccode\u003eAMAZON.FallbackIntent\u003c/code\u003e. Amazon Lex returns three alternative intents with the following confidence scores: IntentA (0.70), IntentB (0.60), IntentC (0.50). The response from the PostText operation would be:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eAMAZON.FallbackIntent\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIntentA\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIntentB\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIntentC\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        voiceSettings:\n          allOf:\n            - $ref: '#/components/schemas/VoiceSettings'\n            - description: The Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user.\n    CreateBotRequest:\n      type: object\n      required:\n        - botName\n        - roleArn\n        - dataPrivacy\n        - idleSessionTTLInSeconds\n      title: CreateBotRequest\n      properties:\n        botName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the bot. The bot name must be unique in the account that creates the bot.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A description of the bot. It appears in lists to help you identify a particular bot.\n        roleArn:\n          allOf:\n            - $ref: '#/components/schemas/RoleArn'\n            - description: The Amazon Resource Name (ARN) of an IAM role that has permission to access the bot.\n        dataPrivacy:\n          allOf:\n            - $ref: '#/components/schemas/DataPrivacy'\n            - description: Provides information on additional privacy protections Amazon Lex should use with the bot's data.\n        idleSessionTTLInSeconds:\n          allOf:\n            - $ref: '#/components/schemas/SessionTTL'\n            - description: '\u003cp\u003eThe time, in seconds, that Amazon Lex should keep information about a user''s conversation with the bot. \u003c/p\u003e \u003cp\u003eA user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Lex deletes any data provided before the timeout.\u003c/p\u003e \u003cp\u003eYou can specify between 60 (1 minute) and 86,400 (24 hours) seconds.\u003c/p\u003e'\n        botTags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: 'A list of tags to add to the bot. You can only add tags when you create a bot. You can''t use the \u003ccode\u003eUpdateBot\u003c/code\u003e operation to update tags. To update tags, use the \u003ccode\u003eTagResource\u003c/code\u003e operation.'\n        testBotAliasTags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: 'A list of tags to add to the test alias for a bot. You can only add tags when you create a bot. You can''t use the \u003ccode\u003eUpdateAlias\u003c/code\u003e operation to update tags. To update tags on the test alias, use the \u003ccode\u003eTagResource\u003c/code\u003e operation.'\n    CreateBotVersionRequest:\n      type: object\n      required:\n        - botVersionLocaleSpecification\n      title: CreateBotVersionRequest\n      properties:\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A description of the version. Use the description to help identify the version in lists.\n        botVersionLocaleSpecification:\n          allOf:\n            - $ref: '#/components/schemas/BotVersionLocaleSpecification'\n            - description: 'Specifies the locales that Amazon Lex adds to this version. You can choose the \u003ccode\u003eDraft\u003c/code\u003e version or any other previously published version for each locale. When you specify a source version, the locale data is copied from the source version to the new version.'\n    ExportResourceSpecification:\n      type: object\n      properties:\n        botExportSpecification:\n          allOf:\n            - $ref: '#/components/schemas/BotExportSpecification'\n            - description: Parameters for exporting a bot.\n        botLocaleExportSpecification:\n          allOf:\n            - $ref: '#/components/schemas/BotLocaleExportSpecification'\n            - description: Parameters for exporting a bot locale.\n      description: 'Provides information about the bot or bot locale that you want to export. You can specify the \u003ccode\u003ebotExportSpecification\u003c/code\u003e or the \u003ccode\u003ebotLocaleExportSpecification\u003c/code\u003e, but not both.'\n    ImportExportFileFormat:\n      type: string\n      enum:\n        - LexJson\n    ImportExportFilePassword:\n      type: string\n      minLength: 1\n      maxLength: 1024\n      format: password\n    CreateExportRequest:\n      type: object\n      required:\n        - resourceSpecification\n        - fileFormat\n      title: CreateExportRequest\n      properties:\n        resourceSpecification:\n          allOf:\n            - $ref: '#/components/schemas/ExportResourceSpecification'\n            - description: 'Specifies the type of resource to export, either a bot or a bot locale. You can only specify one type of resource to export.'\n        fileFormat:\n          allOf:\n            - $ref: '#/components/schemas/ImportExportFileFormat'\n            - description: The file format of the bot or bot locale definition files.\n        filePassword:\n          allOf:\n            - $ref: '#/components/schemas/ImportExportFilePassword'\n            - description: 'An password to use to encrypt the exported archive. Using a password is optional, but you should encrypt the archive to protect the data in transit between Amazon Lex and your local computer.'\n    ExportStatus:\n      type: string\n      enum:\n        - InProgress\n        - Completed\n        - Failed\n        - Deleting\n    DialogCodeHookSettings:\n      type: object\n      required:\n        - enabled\n      properties:\n        enabled:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: Enables the dialog code hook so that it processes user requests.\n      description: Settings that determine the Lambda function that Amazon Lex uses for processing user responses.\n    FulfillmentCodeHookSettings:\n      type: object\n      required:\n        - enabled\n      properties:\n        enabled:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: Indicates whether a Lambda function should be invoked to fulfill a specific intent.\n      description: Determines if a Lambda function should be invoked for a specific intent.\n    IntentConfirmationSetting:\n      type: object\n      required:\n        - promptSpecification\n        - declinationResponse\n      properties:\n        promptSpecification:\n          allOf:\n            - $ref: '#/components/schemas/PromptSpecification'\n            - description: '\u003cp\u003ePrompts the user to confirm the intent. This question should have a yes or no answer.\u003c/p\u003e \u003cp\u003eAmazon Lex uses this prompt to ensure that the user acknowledges that the intent is ready for fulfillment. For example, with the \u003ccode\u003eOrderPizza\u003c/code\u003e intent, you might want to confirm that the order is correct before placing it. For other intents, such as intents that simply respond to user questions, you might not need to ask the user for confirmation before providing the information. \u003c/p\u003e'\n        declinationResponse:\n          allOf:\n            - $ref: '#/components/schemas/ResponseSpecification'\n            - description: 'When the user answers \"no\" to the question defined in \u003ccode\u003epromptSpecification\u003c/code\u003e, Amazon Lex responds with this response to acknowledge that the intent was canceled. '\n        active:\n          allOf:\n            - $ref: '#/components/schemas/BoxedBoolean'\n            - description: 'Specifies whether the intent''s confirmation is sent to the user. When this field is false, confirmation and declination responses aren''t sent and processing continues as if the responses aren''t present. If the \u003ccode\u003eactive\u003c/code\u003e field isn''t specified, the default is true.'\n      description: Provides a prompt for making sure that the user is ready for the intent to be fulfilled.\n    IntentClosingSetting:\n      type: object\n      required:\n        - closingResponse\n      properties:\n        closingResponse:\n          allOf:\n            - $ref: '#/components/schemas/ResponseSpecification'\n            - description: The response that Amazon Lex sends to the user when the intent is complete.\n        active:\n          allOf:\n            - $ref: '#/components/schemas/BoxedBoolean'\n            - description: 'Specifies whether an intent''s closing response is used. When this field is false, the closing response isn''t sent to the user and no closing input from the user is used. If the \u003ccode\u003eactive\u003c/code\u003e field isn''t specified, the default is true.'\n      description: Provides a statement the Amazon Lex conveys to the user when the intent is successfully fulfilled.\n    InputContextsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/InputContext'\n      minItems: 0\n      maxItems: 5\n    OutputContextsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/OutputContext'\n      minItems: 0\n      maxItems: 10\n    KendraConfiguration:\n      type: object\n      required:\n        - kendraIndex\n      properties:\n        kendraIndex:\n          allOf:\n            - $ref: '#/components/schemas/KendraIndexArn'\n            - description: The Amazon Resource Name (ARN) of the Amazon Kendra index that you want the AMAZON.KendraSearchIntent intent to search. The index must be in the same account and Region as the Amazon Lex bot.\n        queryFilterStringEnabled:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: Determines whether the AMAZON.KendraSearchIntent intent uses a custom query string to query the Amazon Kendra index.\n        queryFilterString:\n          allOf:\n            - $ref: '#/components/schemas/QueryFilterString'\n            - description: 'A query filter that Amazon Lex sends to Amazon Kendra to filter the response from a query. The filter is in the format defined by Amazon Kendra. For more information, see \u003ca href=\"https://docs.aws.amazon.com/kendra/latest/dg/filtering.html\"\u003eFiltering queries\u003c/a\u003e.'\n      description: 'Provides configuration information for the AMAZON.KendraSearchIntent intent. When you use this intent, Amazon Lex searches the specified Amazon Kendra index and returns documents from the index that match the user''s utterance.'\n    CreateIntentRequest:\n      type: object\n      required:\n        - intentName\n      title: CreateIntentRequest\n      properties:\n        intentName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the intent. Intent names must be unique in the locale that contains the intent and cannot match the name of any built-in intent.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A description of the intent. Use the description to help identify the intent in lists.\n        parentIntentSignature:\n          allOf:\n            - $ref: '#/components/schemas/IntentSignature'\n            - description: A unique identifier for the built-in intent to base this intent on.\n        sampleUtterances:\n          allOf:\n            - $ref: '#/components/schemas/SampleUtterancesList'\n            - description: '\u003cp\u003eAn array of strings that a user might say to signal the intent. For example, \"I want a pizza\", or \"I want a {PizzaSize} pizza\". \u003c/p\u003e \u003cp\u003eIn an utterance, slot names are enclosed in curly braces (\"{\", \"}\") to indicate where they should be displayed in the utterance shown to the user.. \u003c/p\u003e'\n        dialogCodeHook:\n          allOf:\n            - $ref: '#/components/schemas/DialogCodeHookSettings'\n            - description: '\u003cp\u003eSpecifies that Amazon Lex invokes the alias Lambda function for each user input. You can invoke this Lambda function to personalize user interaction.\u003c/p\u003e \u003cp\u003eFor example, suppose that your bot determines that the user''s name is John. You Lambda function might retrieve John''s information from a backend database and prepopulate some of the values. For example, if you find that John is gluten intolerant, you might set the corresponding intent slot, \u003ccode\u003eglutenIntolerant\u003c/code\u003e to \u003ccode\u003etrue\u003c/code\u003e. You might find John''s phone number and set the corresponding session attribute.\u003c/p\u003e'\n        fulfillmentCodeHook:\n          allOf:\n            - $ref: '#/components/schemas/FulfillmentCodeHookSettings'\n            - description: '\u003cp\u003eSpecifies that Amazon Lex invokes the alias Lambda function when the intent is ready for fulfillment. You can invoke this function to complete the bot''s transaction with the user.\u003c/p\u003e \u003cp\u003eFor example, in a pizza ordering bot, the Lambda function can look up the closest pizza restaurant to the customer''s location and then place an order on the customer''s behalf.\u003c/p\u003e'\n        intentConfirmationSetting:\n          allOf:\n            - $ref: '#/components/schemas/IntentConfirmationSetting'\n            - description: 'Provides prompts that Amazon Lex sends to the user to confirm the completion of an intent. If the user answers \"no,\" the settings contain a statement that is sent to the user to end the intent.'\n        intentClosingSetting:\n          allOf:\n            - $ref: '#/components/schemas/IntentClosingSetting'\n            - description: Sets the response that Amazon Lex sends to the user when the intent is closed.\n        inputContexts:\n          allOf:\n            - $ref: '#/components/schemas/InputContextsList'\n            - description: '\u003cp\u003eA list of contexts that must be active for this intent to be considered by Amazon Lex.\u003c/p\u003e \u003cp\u003eWhen an intent has an input context list, Amazon Lex only considers using the intent in an interaction with the user when the specified contexts are included in the active context list for the session. If the contexts are not active, then Amazon Lex will not use the intent.\u003c/p\u003e \u003cp\u003eA context can be automatically activated using the \u003ccode\u003eoutputContexts\u003c/code\u003e property or it can be set at runtime.\u003c/p\u003e \u003cp\u003e For example, if there are two intents with different input contexts that respond to the same utterances, only the intent with the active context will respond.\u003c/p\u003e \u003cp\u003eAn intent may have up to 5 input contexts. If an intent has multiple input contexts, all of the contexts must be active to consider the intent.\u003c/p\u003e'\n        outputContexts:\n          allOf:\n            - $ref: '#/components/schemas/OutputContextsList'\n            - description: '\u003cp\u003eA lists of contexts that the intent activates when it is fulfilled.\u003c/p\u003e \u003cp\u003eYou can use an output context to indicate the intents that Amazon Lex should consider for the next turn of the conversation with a customer. \u003c/p\u003e \u003cp\u003eWhen you use the \u003ccode\u003eoutputContextsList\u003c/code\u003e property, all of the contexts specified in the list are activated when the intent is fulfilled. You can set up to 10 output contexts. You can also set the number of conversation turns that the context should be active, or the length of time that the context should be active.\u003c/p\u003e'\n        kendraConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/KendraConfiguration'\n            - description: Configuration information required to use the \u003ccode\u003eAMAZON.KendraSearchIntent\u003c/code\u003e intent to connect to an Amazon Kendra index. The \u003ccode\u003eAMAZON.KendraSearchIntent\u003c/code\u003e intent is called when Amazon Lex can't determine another intent to invoke.\n    Policy:\n      type: string\n      minLength: 2\n    CreateResourcePolicyRequest:\n      type: object\n      required:\n        - policy\n      title: CreateResourcePolicyRequest\n      properties:\n        policy:\n          allOf:\n            - $ref: '#/components/schemas/Policy'\n            - description: '\u003cp\u003eA resource policy to add to the resource. The policy is a JSON structure that contains one or more statements that define the policy. The policy must follow the IAM syntax. For more information about the contents of a JSON policy document, see \u003ca href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html\"\u003e IAM JSON policy reference \u003c/a\u003e. \u003c/p\u003e \u003cp\u003eIf the policy isn''t valid, Amazon Lex returns a validation exception.\u003c/p\u003e'\n    RevisionId:\n      type: string\n      pattern: '^[0-9]+$'\n      minLength: 1\n      maxLength: 5\n    Effect:\n      type: string\n      enum:\n        - Allow\n        - Deny\n    PrincipalList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Principal'\n    OperationList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Operation'\n    CreateResourcePolicyStatementRequest:\n      type: object\n      required:\n        - statementId\n        - effect\n        - principal\n        - action\n      title: CreateResourcePolicyStatementRequest\n      properties:\n        statementId:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: 'The name of the statement. The ID is the same as the \u003ccode\u003eSid\u003c/code\u003e IAM property. The statement name must be unique within the policy. For more information, see \u003ca href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_sid.html\"\u003eIAM JSON policy elements: Sid\u003c/a\u003e. '\n        effect:\n          allOf:\n            - $ref: '#/components/schemas/Effect'\n            - description: Determines whether the statement allows or denies access to the resource.\n        principal:\n          allOf:\n            - $ref: '#/components/schemas/PrincipalList'\n            - description: 'An IAM principal, such as an IAM users, IAM roles, or AWS services that is allowed or denied access to a resource. For more information, see \u003ca href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html\"\u003eAWS JSON policy elements: Principal\u003c/a\u003e.'\n        action:\n          allOf:\n            - $ref: '#/components/schemas/OperationList'\n            - description: 'The Amazon Lex action that this policy either allows or denies. The action must apply to the resource type of the specified ARN. For more information, see \u003ca href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonlexv2.html\"\u003e Actions, resources, and condition keys for Amazon Lex V2\u003c/a\u003e.'\n        condition:\n          allOf:\n            - $ref: '#/components/schemas/ConditionMap'\n            - description: '\u003cp\u003eSpecifies a condition when the policy is in effect. If the principal of the policy is a service principal, you must provide two condition blocks, one with a SourceAccount global condition key and one with a SourceArn global condition key.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition.html\"\u003eIAM JSON policy elements: Condition \u003c/a\u003e.\u003c/p\u003e'\n    SlotValueElicitationSetting:\n      type: object\n      required:\n        - slotConstraint\n      properties:\n        defaultValueSpecification:\n          allOf:\n            - $ref: '#/components/schemas/SlotDefaultValueSpecification'\n            - description: 'A list of default values for a slot. Default values are used when Amazon Lex hasn''t determined a value for a slot. You can specify default values from context variables, sesion attributes, and defined values.'\n        slotConstraint:\n          allOf:\n            - $ref: '#/components/schemas/SlotConstraint'\n            - description: Specifies whether the slot is required or optional.\n        promptSpecification:\n          allOf:\n            - $ref: '#/components/schemas/PromptSpecification'\n            - description: The prompt that Amazon Lex uses to elicit the slot value from the user.\n        sampleUtterances:\n          allOf:\n            - $ref: '#/components/schemas/SampleUtterancesList'\n            - description: 'If you know a specific pattern that users might respond to an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This is optional. In most cases, Amazon Lex is capable of understanding user utterances.'\n        waitAndContinueSpecification:\n          $ref: '#/components/schemas/WaitAndContinueSpecification'\n      description: Settings that you can use for eliciting a slot value.\n    ObfuscationSetting:\n      type: object\n      required:\n        - obfuscationSettingType\n      properties:\n        obfuscationSettingType:\n          allOf:\n            - $ref: '#/components/schemas/ObfuscationSettingType'\n            - description: Value that determines whether Amazon Lex obscures slot values in conversation logs. The default is to obscure the values.\n      description: 'Determines whether Amazon Lex obscures slot values in conversation logs. '\n    MultipleValuesSetting:\n      type: object\n      properties:\n        allowMultipleValues:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: '\u003cp\u003eIndicates whether a slot can return multiple values. When \u003ccode\u003etrue\u003c/code\u003e, the slot may return more than one value in a response. When \u003ccode\u003efalse\u003c/code\u003e, the slot returns only a single value.\u003c/p\u003e \u003cp\u003eMulti-value slots are only available in the en-US locale. If you set this value to \u003ccode\u003etrue\u003c/code\u003e in any other locale, Amazon Lex throws a \u003ccode\u003eValidationException\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIf the \u003ccode\u003eallowMutlipleValues\u003c/code\u003e is not set, the default value is \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e'\n      description: Indicates whether a slot can return multiple values.\n    CreateSlotRequest:\n      type: object\n      required:\n        - slotName\n        - slotTypeId\n        - valueElicitationSetting\n      title: CreateSlotRequest\n      properties:\n        slotName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the slot. Slot names must be unique within the bot that contains the slot.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A description of the slot. Use this to help identify the slot in lists.\n        slotTypeId:\n          allOf:\n            - $ref: '#/components/schemas/BuiltInOrCustomSlotTypeId'\n            - description: The unique identifier for the slot type associated with this slot. The slot type determines the values that can be entered into the slot.\n        valueElicitationSetting:\n          allOf:\n            - $ref: '#/components/schemas/SlotValueElicitationSetting'\n            - description: 'Specifies prompts that Amazon Lex sends to the user to elicit a response that provides the value for the slot. '\n        obfuscationSetting:\n          allOf:\n            - $ref: '#/components/schemas/ObfuscationSetting'\n            - description: '\u003cp\u003eDetermines how slot values are used in Amazon CloudWatch logs. If the value of the \u003ccode\u003eobfuscationSetting\u003c/code\u003e parameter is \u003ccode\u003eDefaultObfuscation\u003c/code\u003e, slot values are obfuscated in the log output. If the value is \u003ccode\u003eNone\u003c/code\u003e, the actual value is present in the log output.\u003c/p\u003e \u003cp\u003eThe default is to obfuscate values in the CloudWatch logs.\u003c/p\u003e'\n        multipleValuesSetting:\n          allOf:\n            - $ref: '#/components/schemas/MultipleValuesSetting'\n            - description: '\u003cp\u003eIndicates whether the slot returns multiple values in one response. Multi-value slots are only available in the en-US locale. If you set this value to \u003ccode\u003etrue\u003c/code\u003e in any other locale, Amazon Lex throws a \u003ccode\u003eValidationException\u003c/code\u003e. \u003c/p\u003e \u003cp\u003eIf the \u003ccode\u003emultipleValuesSetting\u003c/code\u003e is not set, the default value is \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e'\n    SlotTypeValues:\n      type: array\n      items:\n        $ref: '#/components/schemas/SlotTypeValue'\n      minItems: 1\n      maxItems: 10000\n    SlotValueSelectionSetting:\n      type: object\n      required:\n        - resolutionStrategy\n      properties:\n        resolutionStrategy:\n          allOf:\n            - $ref: '#/components/schemas/SlotValueResolutionStrategy'\n            - description: '\u003cp\u003eDetermines the slot resolution strategy that Amazon Lex uses to return slot type values. The field can be set to one of the following values:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eOriginalValue - Returns the value entered by the user, if the user value is similar to the slot value.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTopResolution - If there is a resolution list for the slot, return the first value in the resolution list as the slot type value. If there is no resolution list, null is returned.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf you don''t specify the valueSelectionStrategy, the default is OriginalValue. \u003c/p\u003e'\n        regexFilter:\n          allOf:\n            - $ref: '#/components/schemas/SlotValueRegexFilter'\n            - description: A regular expression used to validate the value of a slot.\n      description: Contains settings used by Amazon Lex to select a slot value.\n    CreateSlotTypeRequest:\n      type: object\n      required:\n        - slotTypeName\n        - valueSelectionSetting\n      title: CreateSlotTypeRequest\n      properties:\n        slotTypeName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name for the slot. A slot type name must be unique within the account.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A description of the slot type. Use the description to help identify the slot type in lists.\n        slotTypeValues:\n          allOf:\n            - $ref: '#/components/schemas/SlotTypeValues'\n            - description: 'A list of \u003ccode\u003eSlotTypeValue\u003c/code\u003e objects that defines the values that the slot type can take. Each value can have a list of synonyms, additional values that help train the machine learning model about the values that it resolves for a slot.'\n        valueSelectionSetting:\n          allOf:\n            - $ref: '#/components/schemas/SlotValueSelectionSetting'\n            - description: '\u003cp\u003eDetermines the strategy that Amazon Lex uses to select a value from the list of possible values. The field can be set to one of the following values:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eOriginalValue\u003c/code\u003e - Returns the value entered by the user, if the user value is similar to the slot value.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eTopResolution\u003c/code\u003e - If there is a resolution list for the slot, return the first value in the resolution list. If there is no resolution list, return null.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf you don''t specify the \u003ccode\u003evalueSelectionSetting\u003c/code\u003e parameter, the default is \u003ccode\u003eOriginalValue\u003c/code\u003e.\u003c/p\u003e'\n        parentSlotTypeSignature:\n          allOf:\n            - $ref: '#/components/schemas/SlotTypeSignature'\n            - description: '\u003cp\u003eThe built-in slot type used as a parent of this slot type. When you define a parent slot type, the new slot type has the configuration of the parent slot type.\u003c/p\u003e \u003cp\u003eOnly \u003ccode\u003eAMAZON.AlphaNumeric\u003c/code\u003e is supported.\u003c/p\u003e'\n    CreateUploadUrlRequest:\n      type: object\n      title: CreateUploadUrlRequest\n      properties: {}\n    PresignedS3Url:\n      type: string\n      minLength: 1\n      maxLength: 1024\n    CustomPayloadValue:\n      type: string\n      minLength: 1\n      maxLength: 1000\n    CustomPayload:\n      type: object\n      required:\n        - value\n      properties:\n        value:\n          allOf:\n            - $ref: '#/components/schemas/CustomPayloadValue'\n            - description: The string that is sent to your application.\n      description: A custom response string that Amazon Lex sends to your application. You define the content and structure the string.\n    SkipResourceInUseCheck:\n      type: boolean\n    DeleteBotAliasRequest:\n      type: object\n      title: DeleteBotAliasRequest\n      properties: {}\n    DeleteBotLocaleRequest:\n      type: object\n      title: DeleteBotLocaleRequest\n      properties: {}\n    DeleteBotRequest:\n      type: object\n      title: DeleteBotRequest\n      properties: {}\n    DeleteBotVersionRequest:\n      type: object\n      title: DeleteBotVersionRequest\n      properties: {}\n    DeleteExportRequest:\n      type: object\n      title: DeleteExportRequest\n      properties: {}\n    DeleteImportRequest:\n      type: object\n      title: DeleteImportRequest\n      properties: {}\n    ImportStatus:\n      type: string\n      enum:\n        - InProgress\n        - Completed\n        - Failed\n        - Deleting\n    DeleteIntentRequest:\n      type: object\n      title: DeleteIntentRequest\n      properties: {}\n    DeleteResourcePolicyRequest:\n      type: object\n      title: DeleteResourcePolicyRequest\n      properties: {}\n    DeleteResourcePolicyStatementRequest:\n      type: object\n      title: DeleteResourcePolicyStatementRequest\n      properties: {}\n    DeleteSlotRequest:\n      type: object\n      title: DeleteSlotRequest\n      properties: {}\n    DeleteSlotTypeRequest:\n      type: object\n      title: DeleteSlotTypeRequest\n      properties: {}\n    DescribeBotAliasRequest:\n      type: object\n      title: DescribeBotAliasRequest\n      properties: {}\n    DescribeBotLocaleRequest:\n      type: object\n      title: DescribeBotLocaleRequest\n      properties: {}\n    ResourceCount:\n      type: integer\n    FailureReasons:\n      type: array\n      items:\n        $ref: '#/components/schemas/FailureReason'\n    DescribeBotRequest:\n      type: object\n      title: DescribeBotRequest\n      properties: {}\n    DescribeBotVersionRequest:\n      type: object\n      title: DescribeBotVersionRequest\n      properties: {}\n    DescribeExportRequest:\n      type: object\n      title: DescribeExportRequest\n      properties: {}\n    DescribeImportRequest:\n      type: object\n      title: DescribeImportRequest\n      properties: {}\n    ImportResourceSpecification:\n      type: object\n      properties:\n        botImportSpecification:\n          allOf:\n            - $ref: '#/components/schemas/BotImportSpecification'\n            - description: Parameters for importing a bot.\n        botLocaleImportSpecification:\n          allOf:\n            - $ref: '#/components/schemas/BotLocaleImportSpecification'\n            - description: Parameters for importing a bot locale.\n      description: 'Provides information about the bot or bot locale that you want to import. You can sepcifiy the \u003ccode\u003ebotImportSpecification\u003c/code\u003e or the \u003ccode\u003ebotLocaleImportSpecification\u003c/code\u003e, but not both.'\n    ImportedResourceId:\n      type: string\n      pattern: '^([0-9a-zA-Z_])+$'\n      minLength: 5\n      maxLength: 10\n    MergeStrategy:\n      type: string\n      enum:\n        - Overwrite\n        - FailOnConflict\n    DescribeIntentRequest:\n      type: object\n      title: DescribeIntentRequest\n      properties: {}\n    SlotPrioritiesList:\n      type: array\n      items:\n        $ref: '#/components/schemas/SlotPriority'\n    DescribeResourcePolicyRequest:\n      type: object\n      title: DescribeResourcePolicyRequest\n      properties: {}\n    DescribeSlotRequest:\n      type: object\n      title: DescribeSlotRequest\n      properties: {}\n    DescribeSlotTypeRequest:\n      type: object\n      title: DescribeSlotTypeRequest\n      properties: {}\n    ExportFilterName:\n      type: string\n      enum:\n        - ExportResourceType\n    ExportFilterOperator:\n      type: string\n      enum:\n        - CO\n        - EQ\n    ExportFilters:\n      type: array\n      items:\n        $ref: '#/components/schemas/ExportFilter'\n      minItems: 1\n      maxItems: 1\n    ExportSortBy:\n      type: object\n      required:\n        - attribute\n        - order\n      properties:\n        attribute:\n          allOf:\n            - $ref: '#/components/schemas/ExportSortAttribute'\n            - description: The export field to use for sorting.\n        order:\n          allOf:\n            - $ref: '#/components/schemas/SortOrder'\n            - description: The order to sort the list.\n      description: Provides information about sorting a list of exports.\n    ExportSummary:\n      type: object\n      properties:\n        exportId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier that Amazon Lex assigned to the export.\n        resourceSpecification:\n          allOf:\n            - $ref: '#/components/schemas/ExportResourceSpecification'\n            - description: Information about the bot or bot locale that was exported.\n        fileFormat:\n          allOf:\n            - $ref: '#/components/schemas/ImportExportFileFormat'\n            - description: The file format used in the export files.\n        exportStatus:\n          allOf:\n            - $ref: '#/components/schemas/ExportStatus'\n            - description: The status of the export. When the status is \u003ccode\u003eCompleted\u003c/code\u003e the export is ready to download.\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The date and time that the export was created.\n        lastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The date and time that the export was last updated.\n      description: 'Provides summary information about an export in an export list. '\n    ExportSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ExportSummary'\n    FailureReason:\n      type: string\n    FilterValue:\n      type: string\n      pattern: '^[0-9a-zA-Z_()\\s-]+$'\n      minLength: 1\n      maxLength: 100\n    ImageResponseCard:\n      type: object\n      required:\n        - title\n      properties:\n        title:\n          allOf:\n            - $ref: '#/components/schemas/AttachmentTitle'\n            - description: The title to display on the response card. The format of the title is determined by the platform displaying the response card.\n        subtitle:\n          allOf:\n            - $ref: '#/components/schemas/AttachmentTitle'\n            - description: The subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n        imageUrl:\n          allOf:\n            - $ref: '#/components/schemas/AttachmentUrl'\n            - description: The URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n        buttons:\n          allOf:\n            - $ref: '#/components/schemas/ButtonsList'\n            - description: A list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n      description: '\u003cp\u003eA card that is shown to the user by a messaging platform. You define the contents of the card, the card is displayed by the platform. \u003c/p\u003e \u003cp\u003eWhen you use a response card, the response from the user is constrained to the text associated with a button on the card.\u003c/p\u003e'\n    ImportFilterName:\n      type: string\n      enum:\n        - ImportResourceType\n    ImportFilterOperator:\n      type: string\n      enum:\n        - CO\n        - EQ\n    ImportFilters:\n      type: array\n      items:\n        $ref: '#/components/schemas/ImportFilter'\n      minItems: 1\n      maxItems: 1\n    ImportSortBy:\n      type: object\n      required:\n        - attribute\n        - order\n      properties:\n        attribute:\n          allOf:\n            - $ref: '#/components/schemas/ImportSortAttribute'\n            - description: The export field to use for sorting.\n        order:\n          allOf:\n            - $ref: '#/components/schemas/SortOrder'\n            - description: The order to sort the list.\n      description: Provides information for sorting a list of imports.\n    ImportSummary:\n      type: object\n      properties:\n        importId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier that Amazon Lex assigned to the import.\n        importedResourceId:\n          allOf:\n            - $ref: '#/components/schemas/ImportedResourceId'\n            - description: The unique identifier that Amazon Lex assigned to the imported resource.\n        importedResourceName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name that you gave the imported resource.\n        importStatus:\n          allOf:\n            - $ref: '#/components/schemas/ImportStatus'\n            - description: The status of the resource. When the status is \u003ccode\u003eCompleted\u003c/code\u003e the resource is ready to build.\n        mergeStrategy:\n          allOf:\n            - $ref: '#/components/schemas/MergeStrategy'\n            - description: The strategy used to merge existing bot or bot locale definitions with the imported definition.\n        creationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The date and time that the import was created.\n        lastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The date and time that the import was last updated.\n      description: Provides summary information about an import in an import list.\n    ImportSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ImportSummary'\n    IntentFilterName:\n      type: string\n      enum:\n        - IntentName\n    IntentFilterOperator:\n      type: string\n      enum:\n        - CO\n        - EQ\n    IntentFilters:\n      type: array\n      items:\n        $ref: '#/components/schemas/IntentFilter'\n      minItems: 1\n      maxItems: 1\n    IntentSortBy:\n      type: object\n      required:\n        - attribute\n        - order\n      properties:\n        attribute:\n          allOf:\n            - $ref: '#/components/schemas/IntentSortAttribute'\n            - description: The attribute to use to sort the list of intents.\n        order:\n          allOf:\n            - $ref: '#/components/schemas/SortOrder'\n            - description: The order to sort the list. You can choose ascending or descending.\n      description: Specifies attributes for sorting a list of intents.\n    IntentSummary:\n      type: object\n      properties:\n        intentId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier assigned to the intent. Use this ID to get detailed information about the intent with the \u003ccode\u003eDescribeIntent\u003c/code\u003e operation.\n        intentName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the intent.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the intent.\n        parentIntentSignature:\n          allOf:\n            - $ref: '#/components/schemas/IntentSignature'\n            - description: 'If this intent is derived from a built-in intent, the name of the parent intent.'\n        inputContexts:\n          allOf:\n            - $ref: '#/components/schemas/InputContextsList'\n            - description: The input contexts that must be active for this intent to be considered for recognition.\n        outputContexts:\n          allOf:\n            - $ref: '#/components/schemas/OutputContextsList'\n            - description: The output contexts that are activated when this intent is fulfilled.\n        lastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The timestamp of the date and time that the intent was last updated.\n      description: Summary information about an intent returned by the \u003ccode\u003eListIntents\u003c/code\u003e operation.\n    IntentSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/IntentSummary'\n    KmsKeyArn:\n      type: string\n      pattern: '^arn:[\\w\\-]+:kms:[\\w\\-]+:[\\d]{12}:(?:key\\/[\\w\\-]+|alias\\/[a-zA-Z0-9:\\/_\\-]{1,256})$'\n      minLength: 20\n      maxLength: 2048\n    LambdaARN:\n      type: string\n      pattern: 'arn:aws:lambda:[a-z]+-[a-z]+-[0-9]:[0-9]{12}:function:[a-zA-Z0-9-_]+(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?(:[a-zA-Z0-9-_]+)?'\n      minLength: 20\n      maxLength: 2048\n    MaxResults:\n      type: integer\n      minimum: 1\n      maximum: 1000\n    NextToken:\n      type: string\n    ListBotAliasesRequest:\n      type: object\n      title: ListBotAliasesRequest\n      properties:\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxResults'\n            - description: 'The maximum number of aliases to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'If the response from the \u003ccode\u003eListBotAliases\u003c/code\u003e operation contains more results than specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter, a token is returned in the response. Use that token in the \u003ccode\u003enextToken\u003c/code\u003e parameter to return the next page of results.'\n    ListBotLocalesRequest:\n      type: object\n      title: ListBotLocalesRequest\n      properties:\n        sortBy:\n          allOf:\n            - $ref: '#/components/schemas/BotLocaleSortBy'\n            - description: Specifies sorting parameters for the list of locales. You can sort by locale name in ascending or descending order.\n        filters:\n          allOf:\n            - $ref: '#/components/schemas/BotLocaleFilters'\n            - description: Provides the specification for a filter used to limit the response to only those locales that match the filter specification. You can only specify one filter and one value to filter on.\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxResults'\n            - description: 'The maximum number of aliases to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'If the response from the \u003ccode\u003eListBotLocales\u003c/code\u003e operation contains more results than specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter, a token is returned in the response. Use that token as the \u003ccode\u003enextToken\u003c/code\u003e parameter to return the next page of results. '\n    ListBotVersionsRequest:\n      type: object\n      title: ListBotVersionsRequest\n      properties:\n        sortBy:\n          allOf:\n            - $ref: '#/components/schemas/BotVersionSortBy'\n            - description: Specifies sorting parameters for the list of versions. You can specify that the list be sorted by version name in either ascending or descending order.\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxResults'\n            - description: 'The maximum number of versions to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'If the response to the \u003ccode\u003eListBotVersion\u003c/code\u003e operation contains more results than specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter, a token is returned in the response. Use that token in the \u003ccode\u003enextToken\u003c/code\u003e parameter to return the next page of results.'\n    ListBotsRequest:\n      type: object\n      title: ListBotsRequest\n      properties:\n        sortBy:\n          allOf:\n            - $ref: '#/components/schemas/BotSortBy'\n            - description: Specifies sorting parameters for the list of bots. You can specify that the list be sorted by bot name in ascending or descending order.\n        filters:\n          allOf:\n            - $ref: '#/components/schemas/BotFilters'\n            - description: Provides the specification of a filter used to limit the bots in the response to only those that match the filter specification. You can only specify one filter and one string to filter on.\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxResults'\n            - description: 'The maximum number of bots to return in each page of results. If there are fewer results than the maximum page size, only the actual number of results are returned.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'If the response from the \u003ccode\u003eListBots\u003c/code\u003e operation contains more results than specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter, a token is returned in the response. Use that token in the \u003ccode\u003enextToken\u003c/code\u003e parameter to return the next page of results.'\n    ListBuiltInIntentsRequest:\n      type: object\n      title: ListBuiltInIntentsRequest\n      properties:\n        sortBy:\n          allOf:\n            - $ref: '#/components/schemas/BuiltInIntentSortBy'\n            - description: Specifies sorting parameters for the list of built-in intents. You can specify that the list be sorted by the built-in intent signature in either ascending or descending order.\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/BuiltInsMaxResults'\n            - description: 'The maximum number of built-in intents to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'If the response from the \u003ccode\u003eListBuiltInIntents\u003c/code\u003e operation contains more results than specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter, a token is returned in the response. Use that token in the \u003ccode\u003enextToken\u003c/code\u003e parameter to return the next page of results.'\n    ListBuiltInSlotTypesRequest:\n      type: object\n      title: ListBuiltInSlotTypesRequest\n      properties:\n        sortBy:\n          allOf:\n            - $ref: '#/components/schemas/BuiltInSlotTypeSortBy'\n            - description: Determines the sort order for the response from the \u003ccode\u003eListBuiltInSlotTypes\u003c/code\u003e operation. You can choose to sort by the slot type signature in either ascending or descending order.\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/BuiltInsMaxResults'\n            - description: 'The maximum number of built-in slot types to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'If the response from the \u003ccode\u003eListBuiltInSlotTypes\u003c/code\u003e operation contains more results than specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter, a token is returned in the response. Use that token in the \u003ccode\u003enextToken\u003c/code\u003e parameter to return the next page of results.'\n    ListExportsRequest:\n      type: object\n      title: ListExportsRequest\n      properties:\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier that Amazon Lex assigned to the bot.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/BotVersion'\n            - description: 'The version of the bot to list exports for. '\n        sortBy:\n          allOf:\n            - $ref: '#/components/schemas/ExportSortBy'\n            - description: Determines the field that the list of exports is sorted by. You can sort by the \u003ccode\u003eLastUpdatedDateTime\u003c/code\u003e field in ascending or descending order.\n        filters:\n          allOf:\n            - $ref: '#/components/schemas/ExportFilters'\n            - description: Provides the specification of a filter used to limit the exports in the response to only those that match the filter specification. You can only specify one filter and one string to filter on.\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxResults'\n            - description: 'The maximum number of exports to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'If the response from the \u003ccode\u003eListExports\u003c/code\u003e operation contans more results that specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter, a token is returned in the response. Use that token in the \u003ccode\u003enextToken\u003c/code\u003e parameter to return the next page of results.'\n    ListImportsRequest:\n      type: object\n      title: ListImportsRequest\n      properties:\n        botId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier that Amazon Lex assigned to the bot.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/DraftBotVersion'\n            - description: The version of the bot to list imports for.\n        sortBy:\n          allOf:\n            - $ref: '#/components/schemas/ImportSortBy'\n            - description: Determines the field that the list of imports is sorted by. You can sort by the \u003ccode\u003eLastUpdatedDateTime\u003c/code\u003e field in ascending or descending order.\n        filters:\n          allOf:\n            - $ref: '#/components/schemas/ImportFilters'\n            - description: Provides the specification of a filter used to limit the bots in the response to only those that match the filter specification. You can only specify one filter and one string to filter on.\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxResults'\n            - description: 'The maximum number of imports to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'If the response from the \u003ccode\u003eListImports\u003c/code\u003e operation contains more results than specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter, a token is returned in the response. Use that token in the \u003ccode\u003enextToken\u003c/code\u003e parameter to return the next page of results.'\n    ListIntentsRequest:\n      type: object\n      title: ListIntentsRequest\n      properties:\n        sortBy:\n          allOf:\n            - $ref: '#/components/schemas/IntentSortBy'\n            - description: Determines the sort order for the response from the \u003ccode\u003eListIntents\u003c/code\u003e operation. You can choose to sort by the intent name or last updated date in either ascending or descending order.\n        filters:\n          allOf:\n            - $ref: '#/components/schemas/IntentFilters'\n            - description: Provides the specification of a filter used to limit the intents in the response to only those that match the filter specification. You can only specify one filter and only one string to filter on.\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxResults'\n            - description: 'The maximum number of intents to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'If the response from the \u003ccode\u003eListIntents\u003c/code\u003e operation contains more results than specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter, a token is returned in the response. Use that token in the \u003ccode\u003enextToken\u003c/code\u003e parameter to return the next page of results.'\n    SlotTypeSortBy:\n      type: object\n      required:\n        - attribute\n        - order\n      properties:\n        attribute:\n          allOf:\n            - $ref: '#/components/schemas/SlotTypeSortAttribute'\n            - description: The attribute to use to sort the list of slot types.\n        order:\n          allOf:\n            - $ref: '#/components/schemas/SortOrder'\n            - description: The order to sort the list. You can say ascending or descending.\n      description: Specifies attributes for sorting a list of slot types.\n    SlotTypeFilters:\n      type: array\n      items:\n        $ref: '#/components/schemas/SlotTypeFilter'\n      minItems: 1\n      maxItems: 1\n    ListSlotTypesRequest:\n      type: object\n      title: ListSlotTypesRequest\n      properties:\n        sortBy:\n          allOf:\n            - $ref: '#/components/schemas/SlotTypeSortBy'\n            - description: Determines the sort order for the response from the \u003ccode\u003eListSlotTypes\u003c/code\u003e operation. You can choose to sort by the slot type name or last updated date in either ascending or descending order.\n        filters:\n          allOf:\n            - $ref: '#/components/schemas/SlotTypeFilters'\n            - description: Provides the specification of a filter used to limit the slot types in the response to only those that match the filter specification. You can only specify one filter and only one string to filter on.\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxResults'\n            - description: 'The maximum number of slot types to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'If the response from the \u003ccode\u003eListSlotTypes\u003c/code\u003e operation contains more results than specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter, a token is returned in the response. Use that token in the \u003ccode\u003enextToken\u003c/code\u003e parameter to return the next page of results.'\n    SlotTypeSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/SlotTypeSummary'\n    SlotSortBy:\n      type: object\n      required:\n        - attribute\n        - order\n      properties:\n        attribute:\n          allOf:\n            - $ref: '#/components/schemas/SlotSortAttribute'\n            - description: The attribute to use to sort the list.\n        order:\n          allOf:\n            - $ref: '#/components/schemas/SortOrder'\n            - description: The order to sort the list. You can choose ascending or descending.\n      description: Specifies attributes for sorting a list of bots.\n    SlotFilters:\n      type: array\n      items:\n        $ref: '#/components/schemas/SlotFilter'\n      minItems: 1\n      maxItems: 1\n    ListSlotsRequest:\n      type: object\n      title: ListSlotsRequest\n      properties:\n        sortBy:\n          allOf:\n            - $ref: '#/components/schemas/SlotSortBy'\n            - description: Determines the sort order for the response from the \u003ccode\u003eListSlots\u003c/code\u003e operation. You can choose to sort by the slot name or last updated date in either ascending or descending order.\n        filters:\n          allOf:\n            - $ref: '#/components/schemas/SlotFilters'\n            - description: Provides the specification of a filter used to limit the slots in the response to only those that match the filter specification. You can only specify one filter and only one string to filter on.\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxResults'\n            - description: 'The maximum number of slots to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'If the response from the \u003ccode\u003eListSlots\u003c/code\u003e operation contains more results than specified in the \u003ccode\u003emaxResults\u003c/code\u003e parameter, a token is returned in the response. Use that token in the \u003ccode\u003enextToken\u003c/code\u003e parameter to return the next page of results.'\n    SlotSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/SlotSummary'\n    ListTagsForResourceRequest:\n      type: object\n      title: ListTagsForResourceRequest\n      properties: {}\n    PlainTextMessage:\n      type: object\n      required:\n        - value\n      properties:\n        value:\n          allOf:\n            - $ref: '#/components/schemas/PlainTextMessageValue'\n            - description: The message to send to the user.\n      description: Defines an ASCII text message to send to the user.\n    SSMLMessage:\n      type: object\n      required:\n        - value\n      properties:\n        value:\n          allOf:\n            - $ref: '#/components/schemas/SSMLMessageValue'\n            - description: The SSML text that defines the prompt.\n      description: Defines a Speech Synthesis Markup Language (SSML) prompt.\n    Message:\n      type: object\n      properties:\n        plainTextMessage:\n          allOf:\n            - $ref: '#/components/schemas/PlainTextMessage'\n            - description: A message in plain text format.\n        customPayload:\n          allOf:\n            - $ref: '#/components/schemas/CustomPayload'\n            - description: A message in a custom format defined by the client application.\n        ssmlMessage:\n          allOf:\n            - $ref: '#/components/schemas/SSMLMessage'\n            - description: A message in Speech Synthesis Markup Language (SSML).\n        imageResponseCard:\n          allOf:\n            - $ref: '#/components/schemas/ImageResponseCard'\n            - description: A message that defines a response card that the client application can show to the user.\n      description: The object that provides message text and it's type.\n    MessageVariationsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Message'\n      minItems: 0\n      maxItems: 2\n    MessageGroup:\n      type: object\n      required:\n        - message\n      properties:\n        message:\n          allOf:\n            - $ref: '#/components/schemas/Message'\n            - description: The primary message that Amazon Lex should send to the user.\n        variations:\n          allOf:\n            - $ref: '#/components/schemas/MessageVariationsList'\n            - description: 'Message variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.'\n      description: Provides one or more messages that Amazon Lex should send to the user.\n    MessageGroupsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/MessageGroup'\n      minItems: 1\n      maxItems: 5\n    PlainTextMessageValue:\n      type: string\n      minLength: 1\n      maxLength: 1000\n    ServicePrincipal:\n      type: string\n      pattern: '^[0-9a-zA-Z_.]+$'\n      minLength: 15\n      maxLength: 1024\n    PrincipalArn:\n      type: string\n      pattern: '^arn:aws:iam::[0-9]{12}:(root|(user|role)/.*)$'\n      minLength: 30\n      maxLength: 1024\n    PriorityValue:\n      type: integer\n      minimum: 0\n      maximum: 100\n    PromptMaxRetries:\n      type: integer\n      minimum: 0\n      maximum: 5\n    RegexPattern:\n      type: string\n      minLength: 1\n      maxLength: 100\n    S3BucketArn:\n      type: string\n      pattern: '^arn:[\\w\\-]+:s3:::[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9]$'\n      minLength: 1\n      maxLength: 2048\n    SSMLMessageValue:\n      type: string\n      minLength: 1\n      maxLength: 1000\n    Utterance:\n      type: string\n    Value:\n      type: string\n      minLength: 1\n      maxLength: 140\n    SampleValue:\n      type: object\n      required:\n        - value\n      properties:\n        value:\n          allOf:\n            - $ref: '#/components/schemas/Value'\n            - description: The value that can be used for a slot type.\n      description: Defines one of the values for a slot type.\n    SlotDefaultValueString:\n      type: string\n      minLength: 1\n      maxLength: 202\n    SlotDefaultValue:\n      type: object\n      required:\n        - defaultValue\n      properties:\n        defaultValue:\n          allOf:\n            - $ref: '#/components/schemas/SlotDefaultValueString'\n            - description: The default value to use when a user doesn't provide a value for a slot.\n      description: Specifies the default value to use when a user doesn't provide a value for a slot.\n    SlotDefaultValueList:\n      type: array\n      items:\n        $ref: '#/components/schemas/SlotDefaultValue'\n      minItems: 0\n      maxItems: 10\n    SlotFilterName:\n      type: string\n      enum:\n        - SlotName\n    SlotFilterOperator:\n      type: string\n      enum:\n        - CO\n        - EQ\n    SlotSummary:\n      type: object\n      properties:\n        slotId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier of the slot.\n        slotName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name given to the slot.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the slot.\n        slotConstraint:\n          allOf:\n            - $ref: '#/components/schemas/SlotConstraint'\n            - description: Whether the slot is required or optional. An intent is complete when all required slots are filled.\n        slotTypeId:\n          allOf:\n            - $ref: '#/components/schemas/BuiltInOrCustomSlotTypeId'\n            - description: The unique identifier for the slot type that defines the values for the slot.\n        valueElicitationPromptSpecification:\n          allOf:\n            - $ref: '#/components/schemas/PromptSpecification'\n            - description: Prompts that are sent to the user to elicit a value for the slot.\n        lastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The timestamp of the last date and time that the slot was updated.\n      description: 'Summary information about a slot, a value that the bot elicits from the user.'\n    SlotTypeFilterName:\n      type: string\n      enum:\n        - SlotTypeName\n    SlotTypeFilterOperator:\n      type: string\n      enum:\n        - CO\n        - EQ\n    SlotTypeSummary:\n      type: object\n      properties:\n        slotTypeId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier assigned to the slot type.\n        slotTypeName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the slot type.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the slot type.\n        parentSlotTypeSignature:\n          allOf:\n            - $ref: '#/components/schemas/SlotTypeSignature'\n            - description: 'If the slot type is derived from a built-on slot type, the name of the parent slot type.'\n        lastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp of the date and time that the slot type was last updated.\n      description: Provides summary information about a slot type.\n    SynonymList:\n      type: array\n      items:\n        $ref: '#/components/schemas/SampleValue'\n      minItems: 1\n      maxItems: 10000\n    StartImportRequest:\n      type: object\n      required:\n        - importId\n        - resourceSpecification\n        - mergeStrategy\n      title: StartImportRequest\n      properties:\n        importId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The unique identifier for the import. It is included in the response from the operation.\n        resourceSpecification:\n          allOf:\n            - $ref: '#/components/schemas/ImportResourceSpecification'\n            - description: Parameters for creating the bot or bot locale.\n        mergeStrategy:\n          allOf:\n            - $ref: '#/components/schemas/MergeStrategy'\n            - description: The strategy to use when there is a name conflict between the imported resource and an existing resource. When the merge strategy is \u003ccode\u003eFailOnConflict\u003c/code\u003e existing resources are not overwritten and the import fails.\n        filePassword:\n          allOf:\n            - $ref: '#/components/schemas/ImportExportFilePassword'\n            - description: The password used to encrypt the zip archive that contains the bot or bot locale definition. You should always encrypt the zip archive to protect it during transit between your site and Amazon Lex.\n    StillWaitingResponseFrequency:\n      type: integer\n      minimum: 1\n      maximum: 300\n    StillWaitingResponseTimeout:\n      type: integer\n      minimum: 1\n      maximum: 900\n    StillWaitingResponseSpecification:\n      type: object\n      required:\n        - messageGroups\n        - frequencyInSeconds\n        - timeoutInSeconds\n      properties:\n        messageGroups:\n          allOf:\n            - $ref: '#/components/schemas/MessageGroupsList'\n            - description: 'One or more message groups, each containing one or more messages, that define the prompts that Amazon Lex sends to the user.'\n        frequencyInSeconds:\n          allOf:\n            - $ref: '#/components/schemas/StillWaitingResponseFrequency'\n            - description: 'How often a message should be sent to the user. Minimum of 1 second, maximum of 5 minutes.'\n        timeoutInSeconds:\n          allOf:\n            - $ref: '#/components/schemas/StillWaitingResponseTimeout'\n            - description: 'If Amazon Lex waits longer than this length of time for a response, it will stop sending messages.'\n        allowInterrupt:\n          allOf:\n            - $ref: '#/components/schemas/BoxedBoolean'\n            - description: Indicates that the user can interrupt the response by speaking while the message is being played.\n      description: Defines the messages that Amazon Lex sends to a user to remind them that the bot is waiting for a response.\n    TagKeyList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TagKey'\n      minItems: 0\n      maxItems: 200\n    TagResourceRequest:\n      type: object\n      required:\n        - tags\n      title: TagResourceRequest\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: 'A list of tag keys to add to the resource. If a tag key already exists, the existing value is replaced with the new value.'\n    TextLogDestination:\n      type: object\n      required:\n        - cloudWatch\n      properties:\n        cloudWatch:\n          allOf:\n            - $ref: '#/components/schemas/CloudWatchLogGroupLogDestination'\n            - description: Defines the Amazon CloudWatch Logs log group where text and metadata logs are delivered.\n      description: Defines the Amazon CloudWatch Logs destination log group for conversation text logs.\n    TextLogSetting:\n      type: object\n      required:\n        - enabled\n        - destination\n      properties:\n        enabled:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: Determines whether conversation logs should be stored for an alias.\n        destination:\n          $ref: '#/components/schemas/TextLogDestination'\n      description: Defines settings to enable text conversation logs.\n    UntagResourceRequest:\n      type: object\n      title: UntagResourceRequest\n      properties: {}\n    UpdateBotAliasRequest:\n      type: object\n      required:\n        - botAliasName\n      title: UpdateBotAliasRequest\n      properties:\n        botAliasName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The new name to assign to the bot alias.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The new description to assign to the bot alias.\n        botVersion:\n          allOf:\n            - $ref: '#/components/schemas/BotVersion'\n            - description: The new bot version to assign to the bot alias.\n        botAliasLocaleSettings:\n          allOf:\n            - $ref: '#/components/schemas/BotAliasLocaleSettingsMap'\n            - description: The new Lambda functions to use in each locale for the bot alias.\n        conversationLogSettings:\n          allOf:\n            - $ref: '#/components/schemas/ConversationLogSettings'\n            - description: The new settings for storing conversation logs in Amazon CloudWatch Logs and Amazon S3 buckets.\n        sentimentAnalysisSettings:\n          $ref: '#/components/schemas/SentimentAnalysisSettings'\n    UpdateBotLocaleRequest:\n      type: object\n      required:\n        - nluIntentConfidenceThreshold\n      title: UpdateBotLocaleRequest\n      properties:\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The new description of the locale.\n        nluIntentConfidenceThreshold:\n          allOf:\n            - $ref: '#/components/schemas/ConfidenceThreshold'\n            - description: The new confidence threshold where Amazon Lex inserts the \u003ccode\u003eAMAZON.FallbackIntent\u003c/code\u003e and \u003ccode\u003eAMAZON.KendraSearchIntent\u003c/code\u003e intents in the list of possible intents for an utterance.\n        voiceSettings:\n          allOf:\n            - $ref: '#/components/schemas/VoiceSettings'\n            - description: The new Amazon Polly voice Amazon Lex should use for voice interaction with the user.\n    UpdateBotRequest:\n      type: object\n      required:\n        - botName\n        - roleArn\n        - dataPrivacy\n        - idleSessionTTLInSeconds\n      title: UpdateBotRequest\n      properties:\n        botName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The new name of the bot. The name must be unique in the account that creates the bot.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A description of the bot.\n        roleArn:\n          allOf:\n            - $ref: '#/components/schemas/RoleArn'\n            - description: The Amazon Resource Name (ARN) of an IAM role that has permissions to access the bot.\n        dataPrivacy:\n          allOf:\n            - $ref: '#/components/schemas/DataPrivacy'\n            - description: Provides information on additional privacy protections Amazon Lex should use with the bot's data.\n        idleSessionTTLInSeconds:\n          allOf:\n            - $ref: '#/components/schemas/SessionTTL'\n            - description: '\u003cp\u003eThe time, in seconds, that Amazon Lex should keep information about a user''s conversation with the bot.\u003c/p\u003e \u003cp\u003eA user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Lex deletes any data provided before the timeout.\u003c/p\u003e \u003cp\u003eYou can specify between 60 (1 minute) and 86,400 (24 hours) seconds.\u003c/p\u003e'\n    UpdateExportRequest:\n      type: object\n      title: UpdateExportRequest\n      properties:\n        filePassword:\n          allOf:\n            - $ref: '#/components/schemas/ImportExportFilePassword'\n            - description: The new password to use to encrypt the export zip archive.\n    UpdateIntentRequest:\n      type: object\n      required:\n        - intentName\n      title: UpdateIntentRequest\n      properties:\n        intentName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The new name for the intent.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The new description of the intent.\n        parentIntentSignature:\n          allOf:\n            - $ref: '#/components/schemas/IntentSignature'\n            - description: The signature of the new built-in intent to use as the parent of this intent.\n        sampleUtterances:\n          allOf:\n            - $ref: '#/components/schemas/SampleUtterancesList'\n            - description: New utterances used to invoke the intent.\n        dialogCodeHook:\n          allOf:\n            - $ref: '#/components/schemas/DialogCodeHookSettings'\n            - description: The new Lambda function to use between each turn of the conversation with the bot.\n        fulfillmentCodeHook:\n          allOf:\n            - $ref: '#/components/schemas/FulfillmentCodeHookSettings'\n            - description: The new Lambda function to call when all of the intents required slots are provided and the intent is ready for fulfillment.\n        slotPriorities:\n          allOf:\n            - $ref: '#/components/schemas/SlotPrioritiesList'\n            - description: A new list of slots and their priorities that are contained by the intent.\n        intentConfirmationSetting:\n          allOf:\n            - $ref: '#/components/schemas/IntentConfirmationSetting'\n            - description: New prompts that Amazon Lex sends to the user to confirm the completion of an intent.\n        intentClosingSetting:\n          allOf:\n            - $ref: '#/components/schemas/IntentClosingSetting'\n            - description: The new response that Amazon Lex sends the user when the intent is closed.\n        inputContexts:\n          allOf:\n            - $ref: '#/components/schemas/InputContextsList'\n            - description: A new list of contexts that must be active in order for Amazon Lex to consider the intent.\n        outputContexts:\n          allOf:\n            - $ref: '#/components/schemas/OutputContextsList'\n            - description: A new list of contexts that Amazon Lex activates when the intent is fulfilled.\n        kendraConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/KendraConfiguration'\n            - description: New configuration settings for connecting to an Amazon Kendra index.\n    UpdateResourcePolicyRequest:\n      type: object\n      required:\n        - policy\n      title: UpdateResourcePolicyRequest\n      properties:\n        policy:\n          allOf:\n            - $ref: '#/components/schemas/Policy'\n            - description: '\u003cp\u003eA resource policy to add to the resource. The policy is a JSON structure that contains one or more statements that define the policy. The policy must follow the IAM syntax. For more information about the contents of a JSON policy document, see \u003ca href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html\"\u003e IAM JSON policy reference \u003c/a\u003e. \u003c/p\u003e \u003cp\u003eIf the policy isn''t valid, Amazon Lex returns a validation exception.\u003c/p\u003e'\n    UpdateSlotRequest:\n      type: object\n      required:\n        - slotName\n        - slotTypeId\n        - valueElicitationSetting\n      title: UpdateSlotRequest\n      properties:\n        slotName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The new name for the slot.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The new description for the slot.\n        slotTypeId:\n          allOf:\n            - $ref: '#/components/schemas/BuiltInOrCustomSlotTypeId'\n            - description: 'The unique identifier of the new slot type to associate with this slot. '\n        valueElicitationSetting:\n          allOf:\n            - $ref: '#/components/schemas/SlotValueElicitationSetting'\n            - description: A new set of prompts that Amazon Lex sends to the user to elicit a response the provides a value for the slot.\n        obfuscationSetting:\n          allOf:\n            - $ref: '#/components/schemas/ObfuscationSetting'\n            - description: 'New settings that determine how slot values are formatted in Amazon CloudWatch logs. '\n        multipleValuesSetting:\n          allOf:\n            - $ref: '#/components/schemas/MultipleValuesSetting'\n            - description: '\u003cp\u003eDetermines whether the slot accepts multiple values in one response. Multiple value slots are only available in the en-US locale. If you set this value to \u003ccode\u003etrue\u003c/code\u003e in any other locale, Amazon Lex throws a \u003ccode\u003eValidationException\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIf the \u003ccode\u003emultipleValuesSetting\u003c/code\u003e is not set, the default value is \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e'\n    UpdateSlotTypeRequest:\n      type: object\n      required:\n        - slotTypeName\n        - valueSelectionSetting\n      title: UpdateSlotTypeRequest\n      properties:\n        slotTypeName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The new name of the slot type.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The new description of the slot type.\n        slotTypeValues:\n          allOf:\n            - $ref: '#/components/schemas/SlotTypeValues'\n            - description: A new list of values and their optional synonyms that define the values that the slot type can take.\n        valueSelectionSetting:\n          allOf:\n            - $ref: '#/components/schemas/SlotValueSelectionSetting'\n            - description: The strategy that Amazon Lex should use when deciding on a value from the list of slot type values.\n        parentSlotTypeSignature:\n          allOf:\n            - $ref: '#/components/schemas/SlotTypeSignature'\n            - description: The new built-in slot type that should be used as the parent of this slot type.\nsecurity:\n  - hmac: []\n"
		}
	},
	"Error": "parse: paths: /bots/{botId}/botaliases/: put: CreateBotAlias: responses: 480: unknown status code: 480"
}