{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "APIs/interactivebrokers.com/1.0.0/openapi.yaml",
			"content": "openapi: 3.0.0\nservers:\n  - url: https://www.interactivebrokers.com/tradingapi/v1\ninfo:\n  description: Interactive Brokers Web API for 3rd Party Companies\n  title: IBKR 3rd Party Web API\n  version: 1.0.0\n  x-apisguru-categories:\n    - financial\n  x-logo:\n    url: https://interactivebrokers.com/images/web/favicons/apple-touch-icon-57x57.png\n  x-origin:\n    - format: swagger\n      url: https://www.interactivebrokers.co.uk/webtradingapi/swagger.yaml\n      version: \"2.0\"\n  x-providerName: interactivebrokers.com\nsecurity:\n  - cookieAuth: []\npaths:\n  /accounts:\n    get:\n      description: Allows the caller to request a list of accounts associated with the session.\n      parameters:\n        - description: Account Number\n          in: query\n          name: account\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  accounts:\n                    description: Unique account id\n                    items:\n                      type: string\n                    type: array\n                type: object\n          description: An array of accounts\n        \"202\":\n          description: Unsuccessfull response\n        \"204\":\n          description: Unsuccessfull response\n        \"401\":\n          description: Unsuccessfull response\n        \"403\":\n          description: Unsuccessfull response\n        \"408\":\n          description: Unsuccessfull response\n      summary: Brokerage Accounts\n      tags:\n        - Account \u0026 Portfolio\n  \"/accounts/{account}/order_impact\":\n    parameters:\n      - description: Account Number\n        in: path\n        name: account\n        required: true\n        schema:\n          type: string\n    post:\n      description: |\n        This endpoint allows the consumer to check the impact that an order would have on the account, including margin, NLV and estimated commission costs.\n        To specify the contract, you provide a value for the ContractId field, OR Ticker/ListingExchange/InstrumentType=STK for stocks OR Ticker/Currency/InstrumentType=CASH for FX.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                Aux Price:\n                  description: Required price to support Stop and Stop Limit orders\n                  type: number\n                ContractId:\n                  description: The internal IB identifier for the trading product specified as an integer (can be obtained in response to /secdef request)\n                  type: number\n                Currency:\n                  description: The currency in which the FX pair trades (only for InstrumentType=CASH)\n                  type: string\n                CustomerOrderId:\n                  description: The order ID assigned by the customer.\n                  type: string\n                InstrumentType:\n                  description: The instrument type of the contract\n                  type: string\n                ListingExchange:\n                  description: The exchange on which the trading product is listed (only for InstrumentType=STK)\n                  type: string\n                Order Type:\n                  $ref: \"#/components/schemas/orderType\"\n                Price:\n                  description: The order price\n                  type: number\n                Quantity:\n                  description: The number of units in the order; contracts or shares\n                  type: number\n                Side:\n                  description: Buy = '1', Sell = '2'\n                  enum:\n                    - 1\n                    - 2\n                  type: number\n                Ticker:\n                  description: The symbol that identifies the trading product\n                  type: string\n                Time in Force:\n                  $ref: \"#/components/schemas/timeInForce\"\n              type: object\n        description: Order Parameters\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  Commission:\n                    type: number\n                  CommissionsCurrency:\n                    type: string\n                  EquityWithLoan:\n                    type: number\n                  InitMargin:\n                    type: number\n                  InitMarginBefore:\n                    type: number\n                  MaintMargin:\n                    type: number\n                  MaintMarginBefore:\n                    type: number\n                  MarginCurrency:\n                    type: string\n                  MaxCommissions:\n                    type: number\n                  MinCommissions:\n                    type: number\n                type: object\n          description: Order impact info\n        \"202\":\n          description: Unsuccessfull response\n        \"204\":\n          description: Unsuccessfull response\n        \"400\":\n          description: Unsuccessfull response\n        \"401\":\n          description: Unsuccessfull response\n        \"403\":\n          description: Unsuccessfull response\n        \"408\":\n          description: Unsuccessfull response\n      summary: Return margin impact info\n      tags:\n        - Order Margin Requirements\n  \"/accounts/{account}/orders\":\n    get:\n      description: Returns a list of orders for the account passed in the URL\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/orderState\"\n                type: array\n          description: Returns a list of orders for the indicated account\n        \"202\":\n          description: Unsuccessfull response\n        \"204\":\n          description: Unsuccessfull response\n        \"400\":\n          description: Unsuccessfull response\n        \"401\":\n          description: Unsuccessfull response\n        \"403\":\n          description: Unsuccessfull response\n        \"408\":\n          description: Unsuccessfull response\n      summary: Open Orders\n      tags:\n        - Orders\n    parameters:\n      - description: Account Number\n        in: path\n        name: account\n        required: true\n        schema:\n          type: string\n    post:\n      description: Places order\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                Aux Price:\n                  description: Required Price to support Stop and Stop Limit orders\n                  type: number\n                ContractId:\n                  description: The internal IB identifier for the trading product specified as an integer (can be obtained in response to /secdef request)\n                  type: number\n                Currency:\n                  description: The currency in which the FX pair trades (only for InstrumentType=CASH)\n                  type: string\n                CustomerOrderId:\n                  description: The order ID assigned by the customer.\n                  type: string\n                GermanHftAlgo:\n                  description: By setting this bool to false the customer attests that the order is not subject to German HFT Act, was not generated using any automated algorithm, and no algorithm determined or changed financial instrument, side, quantity, order type, limit or other price, trading venue or timing of this order. Currently we cannot accept orders where this flag is set to true. Such orders will be rejected.\n                  type: boolean\n                InstrumentType:\n                  description: The instrument type of the contract\n                  type: string\n                ListingExchange:\n                  description: The exchange on which the trading product is listed (only for InstrumentType=STK)\n                  type: string\n                Mifid2Algo:\n                  description: This field permits specification of the user's preregistered (via account management) MiFID II short code for algos that are responsible for investment decisions\n                  type: string\n                Mifid2DecisionMaker:\n                  description: This field permits specification of the user's preregistered (via account management) MiFID II short code for decision makers.\n                  type: string\n                Mifid2ExecutionAlgo:\n                  description: This field permits specification of the user's preregistered (via account management) MiFID II short code for algos that are responsible for handling/routing of the order.\n                  type: string\n                Mifid2ExecutionTrader:\n                  description: This field permits specification of the user's preregistered (via account management) MiFID II person responsible for handling/routing of the order\n                  type: string\n                Order Type:\n                  $ref: \"#/components/schemas/orderType\"\n                OrderRestrictions:\n                  description: |\n                    MultiValueString representing the restrictions associated with\n                    an order. If more than one restriction is applicable to an\n                    order, this field can contain multiple instructions separated\n                    by space. \n                    '1' Program Trade\n                    '2' Index Arbitrage \n                    '3' Non-Index Arbitrage\n                  type: number\n                Outside RTH:\n                  description: Indicates if order is active outside regular trading hours, where defined. 0 = no (default), 1 = yes\n                  type: number\n                Price:\n                  description: The order price\n                  type: number\n                Quantity:\n                  description: The number of units in the order; contracts or shares\n                  type: number\n                Side:\n                  description: Buy = '1', Sell = '2'\n                  enum:\n                    - 1\n                    - 2\n                  type: number\n                Ticker:\n                  description: The symbol that identifies the trading product\n                  type: string\n                Time in Force:\n                  $ref: \"#/components/schemas/timeInForce\"\n              type: object\n        description: Order Parameters\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/orderState\"\n                type: array\n          description: Returns order status information\n        \"202\":\n          description: Unsuccessfull response\n        \"204\":\n          description: Unsuccessfull response\n        \"400\":\n          description: Unsuccessfull response\n        \"401\":\n          description: Unsuccessfull response\n        \"403\":\n          description: Unsuccessfull response\n        \"408\":\n          description: Unsuccessfull response\n      summary: Place Order\n      tags:\n        - Orders\n  \"/accounts/{account}/orders/{CustomerOrderId}\":\n    delete:\n      description: Cancels the order with the referenced Customer Order ID for the account passed in the URL.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  properties:\n                    CustomerOrderId:\n                      type: string\n                    OrderQty:\n                      type: number\n                    OrderType:\n                      $ref: \"#/components/schemas/orderType\"\n                    Price:\n                      type: string\n                    Side:\n                      enum:\n                        - 1\n                        - 2\n                      type: number\n                    Status:\n                      $ref: \"#/components/schemas/orderStatus\"\n                    Symbol:\n                      type: number\n                    Warning:\n                      type: string\n                  type: object\n                type: array\n          description: Returns result of cancellation attempt\n        \"202\":\n          description: Unsuccessfull response\n        \"204\":\n          description: Unsuccessfull response\n        \"400\":\n          description: Unsuccessfull response\n        \"401\":\n          description: Unsuccessfull response\n        \"403\":\n          description: Unsuccessfull response\n        \"408\":\n          description: Unsuccessfull response\n      summary: Cancel Order\n      tags:\n        - Orders\n    get:\n      description: Returns the order with the referenced Customer Order ID for the account passed in the URL.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/orderState\"\n                type: array\n          description: Returns order status information\n        \"202\":\n          description: Unsuccessfull response\n        \"204\":\n          description: Unsuccessfull response\n        \"400\":\n          description: Unsuccessfull response\n        \"401\":\n          description: Unsuccessfull response\n        \"403\":\n          description: Unsuccessfull response\n        \"408\":\n          description: Unsuccessfull response\n      summary: Return specific order info\n      tags:\n        - Orders\n    parameters:\n      - description: Account Number\n        in: path\n        name: account\n        required: true\n        schema:\n          type: string\n      - description: Customer Order ID\n        in: path\n        name: CustomerOrderId\n        required: true\n        schema:\n          type: string\n    put:\n      description: Allows the caller to modify the order with the referenced Customer Order ID specified in the URL. A separate Customer Order ID must be provided in the request body for the modification.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                Aux Price:\n                  description: Required Price to support Stop and Stop Limit orders\n                  type: number\n                CustomerOrderId:\n                  description: The new order ID assigned by the customer for the modification.\n                  type: string\n                GermanHftAlgo:\n                  description: By setting this bool to false the customer attests that the order is not subject to German HFT Act, was not generated using any automated algorithm, and no algorithm determined or changed financial instrument, side, quantity, order type, limit or other price, trading venue or timing of this order. Currently we cannot accept orders where this flag is set to true. Such orders will be rejected.\n                  type: boolean\n                Mifid2Algo:\n                  description: This field permits specification of the user's preregistered (via account management) MiFID II short code for algos that are responsible for investment decisions\n                  type: string\n                Mifid2DecisionMaker:\n                  description: This field permits specification of the user's preregistered (via account management) MiFID II short code for decision makers.\n                  type: string\n                Mifid2ExecutionAlgo:\n                  description: This field permits specification of the user's preregistered (via account management) MiFID II short code for algos that are responsible for handling/routing of the order.\n                  type: string\n                Mifid2ExecutionTrader:\n                  description: This field permits specification of the user's preregistered (via account management) MiFID II person responsible for handling/routing of the order\n                  type: string\n                Order Type:\n                  $ref: \"#/components/schemas/orderType\"\n                OrigCustomerOrderId:\n                  description: The order ID assigned by the customer\n                  type: string\n                Outside RTH:\n                  description: Indicates if order is active outside regular trading hours, where defined. 0 = no (default), 1 = yes\n                  type: number\n                Price:\n                  description: The order price\n                  type: number\n                Quantity:\n                  description: The number of units in the order; contracts or shares\n                  type: number\n                Side:\n                  description: Buy = '1', Sell = '2'\n                  enum:\n                    - 1\n                    - 2\n                  type: number\n                Time in Force:\n                  $ref: \"#/components/schemas/timeInForce\"\n              type: object\n        description: Order Parameters\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  properties:\n                    CustomerOrderId:\n                      type: string\n                    OrderQty:\n                      type: number\n                    OrderType:\n                      $ref: \"#/components/schemas/orderType\"\n                    Price:\n                      type: string\n                    Side:\n                      enum:\n                        - 1\n                        - 2\n                      type: number\n                    Status:\n                      $ref: \"#/components/schemas/orderStatus\"\n                    Symbol:\n                      type: number\n                    Warning:\n                      type: string\n                  type: object\n                type: array\n          description: Result of order modification attempt\n        \"202\":\n          description: Unsuccessfull response\n        \"204\":\n          description: Unsuccessfull response\n        \"400\":\n          description: Unsuccessfull response\n        \"401\":\n          description: Unsuccessfull response\n        \"403\":\n          description: Unsuccessfull response\n        \"408\":\n          description: Unsuccessfull response\n      summary: Modify Order\n      tags:\n        - Orders\n  \"/accounts/{account}/positions\":\n    get:\n      description: \"Returns a list of positions for the indicated account. \"\n      parameters:\n        - description: Account Number\n          in: path\n          name: account\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  properties:\n                    AverageCost:\n                      type: number\n                    ContractId:\n                      type: number\n                    Position:\n                      type: number\n                  type: object\n                type: array\n          description: Returns a list of positions for the indicated account\n        \"202\":\n          description: Unsuccessfull response\n        \"204\":\n          description: Unsuccessfull response\n        \"400\":\n          description: Unsuccessfull response\n        \"401\":\n          description: Unsuccessfull response\n        \"403\":\n          description: Unsuccessfull response\n        \"408\":\n          description: Unsuccessfull response\n      summary: Account Positions\n      tags:\n        - Account \u0026 Portfolio\n  \"/accounts/{account}/summary\":\n    get:\n      description: Returns a list of account and margin balances associated with the account passed in the URL\n      parameters:\n        - description: Account Number\n          in: path\n          name: account\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  Info:\n                    properties:\n                      AccountCode:\n                        type: string\n                      AccountReady:\n                        type: string\n                      AccountType:\n                        type: string\n                      Cushion:\n                        type: string\n                      DayTradesRemaining:\n                        type: string\n                      DayTradesRemainingT:\n                        type: string\n                      DayTradesRemainingT+2:\n                        type: string\n                      DayTradesRemainingT+3:\n                        type: string\n                      DayTradesRemainingT+4:\n                        type: string\n                      HighestSeverity:\n                        type: string\n                      Leverage-S:\n                        type: string\n                      LookAheadNextChange:\n                        type: string\n                      SegmentTitle-C:\n                        type: string\n                      SegmentTitle-S:\n                        type: string\n                      TradingType-S:\n                        type: string\n                      WhatIfPMEnabled:\n                        type: string\n                    type: object\n                  Ledger:\n                    items:\n                      properties:\n                        CashBalance:\n                          type: number\n                        CashBalanceFXSegment:\n                          type: number\n                        CashCumQty:\n                          type: number\n                        ExchangeRate:\n                          type: number\n                        FutureOptionMarketValue:\n                          type: number\n                        FuturePNL:\n                          type: number\n                        NetDividend:\n                          type: number\n                        NetInterest:\n                          type: number\n                        NetLiquidation:\n                          type: number\n                        OptionMarketValue:\n                          type: number\n                        RealizedPNL:\n                          type: number\n                        StockMarketValue:\n                          type: number\n                        TotalCashBalance:\n                          type: number\n                        UnrealizedPNL:\n                          type: number\n                      type: object\n                    type: array\n                  Summary:\n                    properties:\n                      AccruedCash:\n                        type: number\n                      AccruedCash-C:\n                        type: number\n                      AccruedCash-S:\n                        type: number\n                      AccruedDividend:\n                        type: number\n                      AccruedDividend-C:\n                        type: number\n                      AccruedDividend-S:\n                        type: number\n                      AvailableFunds:\n                        type: number\n                      AvailableFunds-C:\n                        type: number\n                      AvailableFunds-S:\n                        type: number\n                      Billable:\n                        type: number\n                      Billable-C:\n                        type: number\n                      Billable-S:\n                        type: number\n                      BuyingPower:\n                        type: number\n                      EquityWithLoanValue:\n                        type: number\n                      EquityWithLoanValue-C:\n                        type: number\n                      EquityWithLoanValue-S:\n                        type: number\n                      ExcessLiquidity:\n                        type: number\n                      ExcessLiquidity-C:\n                        type: number\n                      ExcessLiquidity-S:\n                        type: number\n                      FullAvailableFunds:\n                        type: number\n                      FullAvailableFunds-C:\n                        type: number\n                      FullAvailableFunds-S:\n                        type: number\n                      FullExcessLiquidity:\n                        type: number\n                      FullExcessLiquidity-C:\n                        type: number\n                      FullExcessLiquidity-S:\n                        type: number\n                      FullInitMarginReq:\n                        type: number\n                      FullInitMarginReq-C:\n                        type: number\n                      FullInitMarginReq-S:\n                        type: number\n                      FullMaintMarginReq:\n                        type: number\n                      FullMaintMarginReq-C:\n                        type: number\n                      FullMaintMarginReq-S:\n                        type: number\n                      GrossPositionValue:\n                        type: number\n                      GrossPositionValue-C:\n                        type: number\n                      GrossPositionValue-S:\n                        type: number\n                      IndianStockHaircut:\n                        type: number\n                      IndianStockHaircut-C:\n                        type: number\n                      IndianStockHaircut-S:\n                        type: number\n                      InitMarginReq:\n                        type: number\n                      InitMarginReq-C:\n                        type: number\n                      InitMarginReq-S:\n                        type: number\n                      InsuredDeposit:\n                        type: number\n                      InsuredDeposit-C:\n                        type: number\n                      InsuredDeposit-S:\n                        type: number\n                      LookAheadAvailableFunds:\n                        type: number\n                      LookAheadAvailableFunds-C:\n                        type: number\n                      LookAheadAvailableFunds-S:\n                        type: number\n                      LookAheadExcessLiquidity:\n                        type: number\n                      LookAheadExcessLiquidity-C:\n                        type: number\n                      LookAheadExcessLiquidity-S:\n                        type: number\n                      LookAheadInitMarginReq:\n                        type: number\n                      LookAheadInitMarginReq-C:\n                        type: number\n                      LookAheadInitMarginReq-S:\n                        type: number\n                      LookAheadMaintMarginReq:\n                        type: number\n                      LookAheadMaintMarginReq-C:\n                        type: number\n                      LookAheadMaintMarginReq-S:\n                        type: number\n                      MaintMarginReq:\n                        type: number\n                      MaintMarginReq-C:\n                        type: number\n                      MaintMarginReq-S:\n                        type: number\n                      NetLiquidation:\n                        type: number\n                      NetLiquidation-C:\n                        type: number\n                      NetLiquidation-S:\n                        type: number\n                      NetLiquidationUncertainty:\n                        type: number\n                      PASharesValue:\n                        type: number\n                      PASharesValue-C:\n                        type: number\n                      PASharesValue-S:\n                        type: number\n                      PostExpirationExcess:\n                        type: number\n                      PostExpirationExcess-C:\n                        type: number\n                      PostExpirationExcess-S:\n                        type: number\n                      PostExpirationMargin:\n                        type: number\n                      PostExpirationMargin-C:\n                        type: number\n                      PostExpirationMargin-S:\n                        type: number\n                      RegTEquity:\n                        type: number\n                      RegTEquity-S:\n                        type: number\n                      RegTMargin:\n                        type: number\n                      RegTMargin-S:\n                        type: number\n                      SMA:\n                        type: number\n                      SMA-S:\n                        type: number\n                      TotalCashValue:\n                        type: number\n                      TotalCashValue-C:\n                        type: number\n                      TotalCashValue-S:\n                        type: number\n                    type: object\n                type: object\n          description: |\n            Returns object for account summary with multiple properties. \n            A property is sufficed with -c if it provides commodity value, -s if it provides security value, and -c if its UKL segment value. \n            \"These values correspond to the TWS Account Window: https://www.interactivebrokers.com/en/software/tws/usersguidebook/realtimeactivitymonitoring/account_window.htm\"\n        \"202\":\n          description: Unsuccessfull response\n        \"204\":\n          description: Unsuccessfull response\n        \"400\":\n          description: Unsuccessfull response\n        \"401\":\n          description: Unsuccessfull response\n        \"403\":\n          description: Unsuccessfull response\n        \"408\":\n          description: Unsuccessfull response\n      summary: Account Values Summary\n      tags:\n        - Account \u0026 Portfolio\n  \"/accounts/{account}/trades\":\n    get:\n      description: |\n        Returns a list of trades for the account starting at the given 'since' date to the current time (now()). Timezone is UTC. Any request with a future since date or going further than one week will result in an HTTP 400 bad request response. Calling /trades without since will return all trades for the past 24 hours.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        description: |\n          Start time specified in UTC. Allowed formats are \"yyyy-MM-dd\" or \"yyyy-MM-dd'T'HH:mm:ss\". Time is optional and is set to midnight if omitted, e.g. \"00:00:00 hh:mm:ss\".\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  properties:\n                    AvgPrice:\n                      type: number\n                    Commission:\n                      type: number\n                    CommissionCurrency:\n                      type: string\n                    ContractId:\n                      type: number\n                    Currency:\n                      type: string\n                    CustomerOrderId:\n                      type: number\n                    ExecId:\n                      type: string\n                    ExecutionTime:\n                      type: string\n                    FilledQuantity:\n                      type: number\n                    LastMarket:\n                      type: string\n                    ListingExchange:\n                      type: string\n                    OrderId:\n                      type: string\n                    OrderType:\n                      $ref: \"#/components/schemas/orderType\"\n                    Quantity:\n                      type: number\n                    RemainingQuantity:\n                      type: number\n                    Side:\n                      enum:\n                        - 1\n                        - 2\n                      type: string\n                    Ticker:\n                      type: string\n                    TradePrice:\n                      type: number\n                    TradeSize:\n                      type: number\n                  type: object\n                type: array\n          description: List of Trades\n        \"202\":\n          description: Unsuccessfull response\n        \"204\":\n          description: Unsuccessfull response\n        \"400\":\n          description: Unsuccessfull response\n        \"401\":\n          description: Unsuccessfull response\n        \"403\":\n          description: Unsuccessfull response\n        \"408\":\n          description: Unsuccessfull response\n      summary: Returns trades in account\n      tags:\n        - Trades\n    parameters:\n      - description: Account Number\n        in: path\n        name: account\n        required: true\n        schema:\n          type: string\n  /marketdata/exchange_components:\n    get:\n      description: \"This endpoint provides a bit mapping for the bid/ask/last 'market' values in the snapshot response. \"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  properties:\n                    Complete:\n                      type: boolean\n                    ConId:\n                      type: number\n                    mapping:\n                      items:\n                        properties:\n                          bit:\n                            type: number\n                          code:\n                            type: string\n                          exchange:\n                            type: string\n                        type: object\n                      type: array\n                  type: object\n                type: array\n          description: Exchange Components\n        \"400\":\n          description: Unsuccessfull response\n        \"401\":\n          description: Unsuccessfull response\n        \"403\":\n          description: Unsuccessfull response\n        \"408\":\n          description: Unsuccessfull response\n      summary: Exchange Components\n      tags:\n        - Market Data\n  /marketdata/snapshot:\n    get:\n      description: |\n        This endpoint allows the consumer to request a market data snapshot for one or more trading products. \n        Consumers need to provide unique identifiers (conids) for the products in the IB product database (retrievable using the /secdef endpoint). The 'market' values are integers whose bits indicate the exchange(s) making up the quote. \n\n        The mapping of bit to exchange is obtained from the marketdata/exchange_component endpoint. For example, if a bid has a 'market' value of 5 and the exchange_component result has the map \n        0 =\u003e NYSE, 1 =\u003e ISLAND, 2 =\u003e ARCA then the exchanges contributing to the bid size are NYSE and ARCA. \n\n        Similarly, if market=2, then only ISLAND is contributing.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                properties:\n                  conid:\n                    description: The internal IB identifier for the trading product specified as an integer.\n                    type: number\n                  currency:\n                    description: The currency in which the given pair trades.\n                    type: string\n                  exchange:\n                    description: The exchange on which the trading product is listed (required for type=STK).\n                    type: string\n                  symbol:\n                    description: The symbol that identifies the trading product.\n                    type: string\n                  type:\n                    description: The instrument type of the contract (CASH).\n                    type: string\n                type: object\n              type: array\n        description: Contract. Allowed combinations are [type and symbol and currency], or [type, symbol, exchange, and currency], or [conid].\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  properties:\n                    Bid:\n                      properties:\n                        market:\n                          type: number\n                        price:\n                          type: number\n                        size:\n                          type: number\n                      type: object\n                    Closing:\n                      properties:\n                        price:\n                          type: number\n                      type: object\n                    Complete:\n                      type: boolean\n                    Conid:\n                      type: string\n                    Offer:\n                      properties:\n                        market:\n                          type: number\n                        price:\n                          type: number\n                        size:\n                          type: number\n                      type: object\n                    Temporality:\n                      description: |\n                        0 = Real time data\n                        1 = Delayed data\n                      enum:\n                        - 0\n                        - 1\n                      type: number\n                    Trade:\n                      properties:\n                        market:\n                          type: number\n                        price:\n                          type: number\n                        size:\n                          type: number\n                        time:\n                          type: number\n                      type: object\n                  type: object\n                type: array\n          description: Financial Instrument Definition\n        \"400\":\n          description: Unsuccessfull response\n        \"401\":\n          description: Unsuccessfull response\n        \"403\":\n          description: Unsuccessfull response\n        \"408\":\n          description: Unsuccessfull response\n      summary: Market Data Snapshot\n      tags:\n        - Market Data\n  /oauth/access_token:\n    post:\n      description: |\n        Obtain an access token using the request token and the verification code you received after the user provided authorization. See section 6.3 of the OAuth v1.0a specification for more details. \n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                oauth_consumer_key:\n                  description: The 25-character hexadecimal string that was obtained from Interactive Brokers during the OAuth consumer registration process.\n                  type: string\n                oauth_nonce:\n                  description: A random string uniquely generated for each request.\n                  type: string\n                oauth_signature:\n                  description: The signature for the request generated using the method specified in the oauth_signature_method parameter. See section 9 of the OAuth v1.0a specification for more details on signing requests.\n                  type: string\n                oauth_signature_method:\n                  description: The signature method used to sign the request. Currently only 'RSA-SHA256' is supported.\n                  type: string\n                oauth_timestamp:\n                  description: Timestamp expressed in seconds since 1/1/1970 00:00:00 GMT. Must be a positive integer and greater than or equal to any timestamp used in previous requests.\n                  type: string\n                oauth_token:\n                  description: The request token obtained from IB via /request_token.\n                  type: string\n                oauth_verifier:\n                  description: The verification code received from IB after the user has granted authorization.\n                  type: string\n              type: object\n        description: OAuth Parameters\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  oauth_token:\n                    type: string\n                  oauth_token_secret:\n                    type: string\n                type: object\n          description: Access token and token secret\n        \"400\":\n          description: Unsuccessfull response\n        \"401\":\n          description: Unsuccessfull response\n        \"403\":\n          description: Unsuccessfull response\n        \"408\":\n          description: Unsuccessfull response\n      summary: Obtain a access token\n      tags:\n        - OAuth\n  /oauth/live_session_token:\n    post:\n      description: |\n        In order to access protected IB resources, a live session token is required. This endpoint allows consumers to obtain a live session token to access these resources using an OAuth access token and the Diffie-Hellman prime and generator supplied during the registration process.\n        Note this is an additional IB-specific step, and not part of the OAuth v1.0a specification. Please refer to the \"OAuth at Interactive Brokers\" document for more details.  https://www.interactivebrokers.com/webtradingapi/oauth.pdf\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                diffie_hellman_challenge:\n                  description: |\n                    Challenge value calculated using the Diffie-Hellman prime and generated provided during the registration process. See the \"OAuth at Interactive Brokers\" document for more details. \n                  type: string\n                oauth_consumer_key:\n                  description: The 25-character hexadecimal string that was obtained from Interactive Brokers during the OAuth consumer registration process.\n                  type: string\n                oauth_nonce:\n                  description: A random string uniquely generated for each request.\n                  type: string\n                oauth_signature:\n                  description: The signature for the request generated using the method specified in the oauth_signature_method parameter. See section 9 of the OAuth v1.0a specification for more details on signing requests.\n                  type: string\n                oauth_signature_method:\n                  description: The signature method used to sign the request. Currently only 'RSA-SHA256' is supported.\n                  type: string\n                oauth_timestamp:\n                  description: Timestamp expressed in seconds since 1/1/1970 00:00:00 GMT. Must be a positive integer and greater than or equal to any timestamp used in previous requests.\n                  type: string\n                oauth_token:\n                  description: The request token obtained from IB via /request_token.\n                  type: string\n              type: object\n        description: OAuth Parameters\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  diffie_hellman_response:\n                    type: string\n                  live_session_token_signature:\n                    type: string\n                type: object\n          description: DH response\n        \"400\":\n          description: Unsuccessfull response\n        \"401\":\n          description: Unsuccessfull response\n        \"403\":\n          description: Unsuccessfull response\n        \"408\":\n          description: Unsuccessfull response\n      summary: Obtain a live session token\n      tags:\n        - OAuth\n  /oauth/request_token:\n    post:\n      description: |\n        Obtain a request token. See section 6.1 of the OAuth v1.0a specification for more information. http://oauth.net/core/1.0a/#auth_step1\n\n        Note we do not return an oauth_token_secret in the response as we are using RSA signatures rather than PLAINTEXT authentication. \n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                oauth_callback:\n                  description: \"An absolute URL to which IB will redirect the user. This URL is provided by the consumer during registration. This parameter must be set to 'oob'.  \"\n                  type: string\n                oauth_consumer_key:\n                  description: The 25-character hexadecimal string that was obtained from Interactive Brokers during the OAuth consumer registration process.\n                  type: string\n                oauth_nonce:\n                  description: A random string uniquely generated for each request.\n                  type: string\n                oauth_signature:\n                  description: The signature for the request generated using the method specified in the oauth_signature_method parameter. See section 9 of the OAuth v1.0a specification for more details on signing requests.\n                  type: string\n                oauth_signature_method:\n                  description: The signature method used to sign the request. Currently only 'RSA-SHA256' is supported.\n                  type: string\n                oauth_timestamp:\n                  description: Timestamp expressed in seconds since 1/1/1970 00:00:00 GMT. Must be a positive integer and greater than or equal to any timestamp used in previous requests.\n                  type: string\n              type: object\n        description: OAuth Parameters\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  oauth_token:\n                    type: string\n                type: object\n          description: OAuth token\n        \"400\":\n          description: Unsuccessfull response\n        \"401\":\n          description: Unsuccessfull response\n        \"403\":\n          description: Unsuccessfull response\n        \"408\":\n          description: Unsuccessfull response\n      summary: Obtain a request token\n      tags:\n        - OAuth\n  /secdef:\n    get:\n      description: |\n        Fields that compose security definition. Allowed combinations,\n        (1) type and symbol and currency, or\n        (2) type, symbol, exchange, and currency, or\n        (3) conid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                conid:\n                  description: The internal IB identifier for the trading product specified as an integer.\n                  type: number\n                currency:\n                  description: The currency in which the given pair trades.\n                  type: string\n                exchange:\n                  description: The exchange on which the trading product is listed (required for type=STK).\n                  type: string\n                symbol:\n                  description: The symbol that identifies the trading product.\n                  type: string\n                type:\n                  description: The instrument type of the contract (CASH).\n                  type: string\n              type: object\n        description: Order Parameters\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  properties:\n                    CompanyName:\n                      type: string\n                    ContractId:\n                      type: number\n                    Currency:\n                      type: string\n                    Exchange:\n                      type: string\n                    SecurityType:\n                      type: string\n                    Ticker:\n                      type: string\n                  type: object\n                type: array\n          description: Financial Instrument Definition\n        \"202\":\n          description: Unsuccessfull response\n        \"204\":\n          description: Unsuccessfull response\n        \"400\":\n          description: Unsuccessfull response\n        \"401\":\n          description: Unsuccessfull response\n        \"403\":\n          description: Unsuccessfull response\n        \"408\":\n          description: Unsuccessfull response\n      summary: Get security definition\n      tags:\n        - Financial Instrument Definitions\ncomponents:\n  schemas:\n    orderState:\n      description: An object containing all the properties defining an order\n      properties:\n        ContractId:\n          type: number\n        CustomerOrderId:\n          type: number\n        FilledQuantity:\n          type: number\n        ListingExchange:\n          type: string\n        OrderType:\n          $ref: \"#/components/schemas/orderType\"\n        OutsideRTH:\n          type: string\n        Price:\n          type: number\n        RemainingQuantity:\n          type: number\n        Side:\n          enum:\n            - 1\n            - 2\n          type: string\n        Status:\n          $ref: \"#/components/schemas/orderStatus\"\n        Ticker:\n          type: string\n        TimeInForce:\n          $ref: \"#/components/schemas/timeInForce\"\n        TransactionTime:\n          type: string\n        Warning:\n          type: string\n      type: object\n    orderStatus:\n      description: |\n        Status of the order\n        InvalidOrderStatus = '-1'\n        New = '0'\n        PartiallyFilled = '1'\n        Filled = '2'\n        DoneForTheDay = '3'\n        Canceled = '4'\n        Replaced = '5'\n        PendingCancelReplace = '6'\n        Stopped = '7'\n        Rejected = '8'\n        Suspended = '9'\n        PendingNew = 'A'\n        Calculated = 'B'\n        Expired = 'C'\n        AcceptedForBidding = 'D'\n        PendingReplace = 'E'\n      enum:\n        - \"-1\"\n        - \"0\"\n        - \"1\"\n        - \"2\"\n        - \"3\"\n        - \"4\"\n        - \"5\"\n        - \"6\"\n        - \"7\"\n        - \"8\"\n        - \"9\"\n        - A\n        - B\n        - C\n        - D\n        - E\n      type: string\n    orderType:\n      description: |\n        Market = '1'\n        Limit = '2'\n        Stop = '3'\n        StopLimit = '4'\n      enum:\n        - 1\n        - 2\n        - 3\n        - 4\n      type: number\n    timeInForce:\n      description: |\n        Defines order's active lifetime.\n        Day = '0'\n        GTC (Good till Cancel) = '1'\n        IOC (Immediate or Cancel) = '3'\n        Open = '2'\n        Close = '7'\n      enum:\n        - 0\n        - 1\n        - 2\n        - 3\n        - 7\n      type: number\n  securitySchemes:\n    cookieAuth:\n      in: header\n      name: portal\n      type: apiKey\n"
		}
	},
	"Error": "parse: paths: /accounts/{account}/orders: get: : responses: 200: content: application/json: schema: parse schema: item: parse schema: reference \"#/components/schemas/orderState\": parse schema: Side: parse enum values: parse value \"1\": expected type \"string\", got \"number\""
}