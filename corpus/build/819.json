{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "APIs/amazonaws.com/elastic-inference/2017-07-25/openapi.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  version: '2017-07-25'\n  x-release: v4\n  title: Amazon Elastic  Inference\n  description: ' Elastic Inference public APIs. '\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: elastic-inference\n  x-aws-signingName: elastic-inference\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/elastic-inference-2017-07-25.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/elastic-inference/'\nservers:\n  - url: 'http://api.elastic-inference.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Amazon Elastic Inference multi-region endpoint\n  - url: 'https://api.elastic-inference.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Amazon Elastic Inference multi-region endpoint\n  - url: 'http://api.elastic-inference.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon Elastic Inference endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://api.elastic-inference.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon Elastic Inference endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  /describe-accelerator-offerings:\n    post:\n      operationId: DescribeAcceleratorOfferings\n      description: ' Describes the locations in which a given accelerator type or set of types is present in a given region. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeAcceleratorOfferingsResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - locationType\n              properties:\n                locationType:\n                  description: ' The location type that you want to describe accelerator type offerings for. It can assume the following values: region: will return the accelerator type offering at the regional level. availability-zone: will return the accelerator type offering at the availability zone level. availability-zone-id: will return the accelerator type offering at the availability zone level returning the availability zone id. '\n                  type: string\n                  enum:\n                    - region\n                    - availability-zone\n                    - availability-zone-id\n                  minLength: 1\n                  maxLength: 256\n                acceleratorTypes:\n                  description: ' The list of accelerator types to describe. '\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/AcceleratorTypeName'\n                  minItems: 0\n                  maxItems: 100\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /describe-accelerator-types:\n    get:\n      operationId: DescribeAcceleratorTypes\n      description: ' Describes the accelerator types available in a given region, as well as their characteristics, such as memory and throughput. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeAcceleratorTypesResponse'\n        '480':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters: []\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /describe-accelerators:\n    post:\n      operationId: DescribeAccelerators\n      description: ' Describes information over a provided set of accelerators belonging to an account. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeAcceleratorsResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                acceleratorIds:\n                  description: ' The IDs of the accelerators to describe. '\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/AcceleratorId'\n                  minItems: 0\n                  maxItems: 1000\n                filters:\n                  description: ' One or more filters. Filter names and values are case-sensitive. Valid filter names are: accelerator-types: can provide a list of accelerator type names to filter for. instance-id: can provide a list of EC2 instance ids to filter for. '\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Filter'\n                  minItems: 0\n                  maxItems: 100\n                maxResults:\n                  description: ' The total number of items to return in the command''s output. If the total number of items available is more than the value specified, a NextToken is provided in the command''s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI. '\n                  type: integer\n                  minimum: 0\n                  maximum: 100\n                nextToken:\n                  description: ' A token to specify where to start paginating. This is the NextToken from a previously truncated response. '\n                  type: string\n                  pattern: '^[A-Za-z0-9+/]+={0,2}$'\n                  minLength: 1\n                  maxLength: 2048\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{resourceArn}':\n    get:\n      operationId: ListTagsForResource\n      description: ' Returns all tags of an Elastic Inference Accelerator. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsForResourceResult'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: ' The ARN of the Elastic Inference Accelerator to list the tags for. '\n          schema:\n            type: string\n            pattern: '^arn:aws\\S*:elastic-inference:\\S+:\\d{12}:elastic-inference-accelerator/eia-[0-9a-f]+$'\n            minLength: 1\n            maxLength: 1011\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: TagResource\n      description: ' Adds the specified tags to an Elastic Inference Accelerator. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagResourceResult'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: ' The ARN of the Elastic Inference Accelerator to tag. '\n          schema:\n            type: string\n            pattern: '^arn:aws\\S*:elastic-inference:\\S+:\\d{12}:elastic-inference-accelerator/eia-[0-9a-f]+$'\n            minLength: 1\n            maxLength: 1011\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - tags\n              properties:\n                tags:\n                  description: ' The tags to add to the Elastic Inference Accelerator. '\n                  type: object\n                  minProperties: 1\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n  '/tags/{resourceArn}#tagKeys':\n    delete:\n      operationId: UntagResource\n      description: ' Removes the specified tags from an Elastic Inference Accelerator. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UntagResourceResult'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: ' The ARN of the Elastic Inference Accelerator to untag. '\n          schema:\n            type: string\n            pattern: '^arn:aws\\S*:elastic-inference:\\S+:\\d{12}:elastic-inference-accelerator/eia-[0-9a-f]+$'\n            minLength: 1\n            maxLength: 1011\n        - name: tagKeys\n          in: query\n          required: true\n          description: ' The list of tags to remove from the Elastic Inference Accelerator. '\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/TagKey'\n            minItems: 1\n            maxItems: 50\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    DescribeAcceleratorOfferingsResponse:\n      type: object\n      properties:\n        acceleratorTypeOfferings:\n          allOf:\n            - $ref: '#/components/schemas/AcceleratorTypeOfferingList'\n            - description: ' The list of accelerator type offerings for a specific location. '\n    AcceleratorTypeName:\n      type: string\n      pattern: ^\\S+$\n      minLength: 1\n      maxLength: 256\n    BadRequestException: {}\n    ResourceNotFoundException: {}\n    InternalServerException: {}\n    DescribeAcceleratorTypesResponse:\n      type: object\n      properties:\n        acceleratorTypes:\n          allOf:\n            - $ref: '#/components/schemas/AcceleratorTypeList'\n            - description: ' The available accelerator types. '\n    DescribeAcceleratorsResponse:\n      type: object\n      properties:\n        acceleratorSet:\n          allOf:\n            - $ref: '#/components/schemas/ElasticInferenceAcceleratorSet'\n            - description: ' The details of the Elastic Inference Accelerators. '\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: ' A token to specify where to start paginating. This is the NextToken from a previously truncated response. '\n    AcceleratorId:\n      type: string\n      pattern: '^eia-[0-9a-f]+$'\n      minLength: 1\n      maxLength: 256\n    Filter:\n      type: object\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/FilterName'\n            - description: ' The filter name for the Elastic Inference Accelerator list. It can assume the following values: accelerator-type: the type of Elastic Inference Accelerator to filter for. instance-id: an EC2 instance id to filter for. '\n        values:\n          allOf:\n            - $ref: '#/components/schemas/ValueStringList'\n            - description: ' The values for the filter of the Elastic Inference Accelerator list. '\n      description: ' A filter expression for the Elastic Inference Accelerator list. '\n    ListTagsForResourceResult:\n      type: object\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: ' The tags of the Elastic Inference Accelerator. '\n    TagResourceResult:\n      type: object\n      properties: {}\n    TagValue:\n      type: string\n      maxLength: 256\n    UntagResourceResult:\n      type: object\n      properties: {}\n    TagKey:\n      type: string\n      pattern: ^\\S$\n      minLength: 1\n      maxLength: 128\n    AcceleratorHealthStatus:\n      type: string\n      minLength: 1\n      maxLength: 256\n    AcceleratorIdList:\n      type: array\n      items:\n        $ref: '#/components/schemas/AcceleratorId'\n      minItems: 0\n      maxItems: 1000\n    MemoryInfo:\n      type: object\n      properties:\n        sizeInMiB:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: ' The size in mebibytes of the Elastic Inference Accelerator type. '\n      description: ' The memory information of an Elastic Inference Accelerator type. '\n    ThroughputInfoList:\n      type: array\n      items:\n        $ref: '#/components/schemas/KeyValuePair'\n      minItems: 0\n      maxItems: 100\n    AcceleratorType:\n      type: object\n      properties:\n        acceleratorTypeName:\n          allOf:\n            - $ref: '#/components/schemas/AcceleratorTypeName'\n            - description: ' The name of the Elastic Inference Accelerator type. '\n        memoryInfo:\n          allOf:\n            - $ref: '#/components/schemas/MemoryInfo'\n            - description: ' The memory information of the Elastic Inference Accelerator type. '\n        throughputInfo:\n          allOf:\n            - $ref: '#/components/schemas/ThroughputInfoList'\n            - description: ' The throughput information of the Elastic Inference Accelerator type. '\n      description: ' The details of an Elastic Inference Accelerator type. '\n    AcceleratorTypeList:\n      type: array\n      items:\n        $ref: '#/components/schemas/AcceleratorType'\n      minItems: 0\n      maxItems: 100\n    AcceleratorTypeNameList:\n      type: array\n      items:\n        $ref: '#/components/schemas/AcceleratorTypeName'\n      minItems: 0\n      maxItems: 100\n    LocationType:\n      type: string\n      enum:\n        - region\n        - availability-zone\n        - availability-zone-id\n      minLength: 1\n      maxLength: 256\n    Location:\n      type: string\n      minLength: 1\n      maxLength: 256\n    AcceleratorTypeOffering:\n      type: object\n      properties:\n        acceleratorType:\n          allOf:\n            - $ref: '#/components/schemas/AcceleratorTypeName'\n            - description: ' The name of the Elastic Inference Accelerator type. '\n        locationType:\n          allOf:\n            - $ref: '#/components/schemas/LocationType'\n            - description: ' The location type for the offering. It can assume the following values: region: defines that the offering is at the regional level. availability-zone: defines that the offering is at the availability zone level. availability-zone-id: defines that the offering is at the availability zone level, defined by the availability zone id. '\n        location:\n          allOf:\n            - $ref: '#/components/schemas/Location'\n            - description: ' The location for the offering. It will return either the region, availability zone or availability zone id for the offering depending on the locationType value. '\n      description: ' The offering for an Elastic Inference Accelerator type. '\n    AcceleratorTypeOfferingList:\n      type: array\n      items:\n        $ref: '#/components/schemas/AcceleratorTypeOffering'\n      minItems: 0\n      maxItems: 100\n    AvailabilityZone:\n      type: string\n      minLength: 1\n      maxLength: 256\n    DescribeAcceleratorOfferingsRequest:\n      type: object\n      required:\n        - locationType\n      title: DescribeAcceleratorOfferingsRequest\n      properties:\n        locationType:\n          allOf:\n            - $ref: '#/components/schemas/LocationType'\n            - description: ' The location type that you want to describe accelerator type offerings for. It can assume the following values: region: will return the accelerator type offering at the regional level. availability-zone: will return the accelerator type offering at the availability zone level. availability-zone-id: will return the accelerator type offering at the availability zone level returning the availability zone id. '\n        acceleratorTypes:\n          allOf:\n            - $ref: '#/components/schemas/AcceleratorTypeNameList'\n            - description: ' The list of accelerator types to describe. '\n    DescribeAcceleratorTypesRequest:\n      type: object\n      title: DescribeAcceleratorTypesRequest\n      properties: {}\n    FilterList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Filter'\n      minItems: 0\n      maxItems: 100\n    MaxResults:\n      type: integer\n      minimum: 0\n      maximum: 100\n    NextToken:\n      type: string\n      pattern: '^[A-Za-z0-9+/]+={0,2}$'\n      minLength: 1\n      maxLength: 2048\n    DescribeAcceleratorsRequest:\n      type: object\n      title: DescribeAcceleratorsRequest\n      properties:\n        acceleratorIds:\n          allOf:\n            - $ref: '#/components/schemas/AcceleratorIdList'\n            - description: ' The IDs of the accelerators to describe. '\n        filters:\n          allOf:\n            - $ref: '#/components/schemas/FilterList'\n            - description: ' One or more filters. Filter names and values are case-sensitive. Valid filter names are: accelerator-types: can provide a list of accelerator type names to filter for. instance-id: can provide a list of EC2 instance ids to filter for. '\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxResults'\n            - description: ' The total number of items to return in the command''s output. If the total number of items available is more than the value specified, a NextToken is provided in the command''s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI. '\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: ' A token to specify where to start paginating. This is the NextToken from a previously truncated response. '\n    ElasticInferenceAcceleratorSet:\n      type: array\n      items:\n        $ref: '#/components/schemas/ElasticInferenceAccelerator'\n    ElasticInferenceAcceleratorHealth:\n      type: object\n      properties:\n        status:\n          allOf:\n            - $ref: '#/components/schemas/AcceleratorHealthStatus'\n            - description: ' The health status of the Elastic Inference Accelerator. '\n      description: ' The health details of an Elastic Inference Accelerator. '\n    ResourceArn:\n      type: string\n      minLength: 1\n      maxLength: 1283\n    ElasticInferenceAccelerator:\n      type: object\n      properties:\n        acceleratorHealth:\n          allOf:\n            - $ref: '#/components/schemas/ElasticInferenceAcceleratorHealth'\n            - description: ' The health of the Elastic Inference Accelerator. '\n        acceleratorType:\n          allOf:\n            - $ref: '#/components/schemas/AcceleratorTypeName'\n            - description: ' The type of the Elastic Inference Accelerator. '\n        acceleratorId:\n          allOf:\n            - $ref: '#/components/schemas/AcceleratorId'\n            - description: ' The ID of the Elastic Inference Accelerator. '\n        availabilityZone:\n          allOf:\n            - $ref: '#/components/schemas/AvailabilityZone'\n            - description: ' The availability zone where the Elastic Inference Accelerator is present. '\n        attachedResource:\n          allOf:\n            - $ref: '#/components/schemas/ResourceArn'\n            - description: ' The ARN of the resource that the Elastic Inference Accelerator is attached to. '\n      description: ' The details of an Elastic Inference Accelerator. '\n    FilterName:\n      type: string\n      pattern: ^\\S+$\n      minLength: 1\n      maxLength: 128\n    ValueStringList:\n      type: array\n      items:\n        $ref: '#/components/schemas/String'\n      minItems: 0\n      maxItems: 100\n    Integer:\n      type: integer\n    Key:\n      type: string\n      pattern: ^\\S+$\n      minLength: 1\n      maxLength: 256\n    Value:\n      type: integer\n    KeyValuePair:\n      type: object\n      properties:\n        key:\n          allOf:\n            - $ref: '#/components/schemas/Key'\n            - description: ' The throughput value of the Elastic Inference Accelerator type. It can assume the following values: TFLOPS16bit: the throughput expressed in 16bit TeraFLOPS. TFLOPS32bit: the throughput expressed in 32bit TeraFLOPS. '\n        value:\n          allOf:\n            - $ref: '#/components/schemas/Value'\n            - description: ' The throughput value of the Elastic Inference Accelerator type. '\n      description: ' A throughput entry for an Elastic Inference Accelerator type. '\n    ResourceARN:\n      type: string\n      pattern: '^arn:aws\\S*:elastic-inference:\\S+:\\d{12}:elastic-inference-accelerator/eia-[0-9a-f]+$'\n      minLength: 1\n      maxLength: 1011\n    ListTagsForResourceRequest:\n      type: object\n      title: ListTagsForResourceRequest\n      properties: {}\n    TagMap:\n      type: object\n      minProperties: 1\n      maxProperties: 50\n      additionalProperties:\n        $ref: '#/components/schemas/TagValue'\n    String:\n      type: string\n      pattern: ^.*$\n      maxLength: 500000\n    TagKeyList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TagKey'\n      minItems: 1\n      maxItems: 50\n    TagResourceRequest:\n      type: object\n      required:\n        - tags\n      title: TagResourceRequest\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: ' The tags to add to the Elastic Inference Accelerator. '\n    UntagResourceRequest:\n      type: object\n      title: UntagResourceRequest\n      properties: {}\nsecurity:\n  - hmac: []\n"
		}
	},
	"Error": "parse: paths: /tags/{resourceArn}: get: ListTagsForResource: responses: 482: unknown status code: 482"
}