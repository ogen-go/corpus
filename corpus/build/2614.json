{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/NPC-Chain/npcchub"
		},
		"file": {
			"name": "swagger.yaml",
			"path": "lite/swagger-ui/swagger.yaml",
			"content": "---\nopenapi: 3.0.0\ninfo:\n  description: \u003e-\n    A REST interface for state queries, transaction generation and\n    broadcast.\n  version: \"0.16.2\"\n  title: IRISLCD Swagger-UI\n  termsOfService: 'https://www.irisnet.org'\n  contact:\n    name: 边界智能\n    url: 'https://bianjie.ai/'\n    email: service@bianjie.ai\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\ntags:\n  - name: Tendermint\n    description: 'Tendermint APIs, such as query blocks, transactions and validatorset'\n  - name: Tx\n    description: 'Broadcast transactions'\n  - name: Bank\n    description: Bank module APIs\n  - name: Stake\n    description: Stake module APIs\n  - name: Slashing\n    description: Slashing module APIs\n  - name: Distribution\n    description: Distribution module APIs\n  - name: Asset\n    description: Asset module APIs\n  - name: Rand\n    description: Rand module APIs\n  - name: Service\n    description: Service module APIs\n  - name: CoinSwap\n    description: CoinSwap module APIs\n  - name: HTLC\n    description: HTLC module APIs\n  - name: Params\n    description: Params module APIs\n  - name: Gov\n    description: Governance module APIs\n  - name: Version\n    description: Query app version\npaths:\n  /version:\n    get:\n      summary: Version of irislcd\n      tags:\n        - Version\n      description: Get the version of irislcd running locally to compare against expected\n      responses:\n        '200':\n          description: Plaintext version i.e. \"v0.7.0\"\n  /node-version:\n    get:\n      summary: Version of the connected node\n      tags:\n        - Version\n      description: \u003e-\n        Get the version of the SDK running on the connected node to compare\n        against expected\n      responses:\n        '200':\n          description: Plaintext version i.e. \"v0.7.0\"\n        '500':\n          description: failed to query node version\n  /node-info:\n    get:\n      description: Information about the connected node\n      summary: The properties of the connected node\n      tags:\n        - Tendermint\n      responses:\n        '200':\n          description: Node status\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                  moniker:\n                    type: string\n                    example: validator-name\n                  network:\n                    type: string\n                    example: irishub-mainnet\n                  channels:\n                    type: string\n                  listen_addr:\n                    type: string\n                    example: '192.168.56.1:26656'\n                  version:\n                    description: Tendermint version\n                    type: string\n                    example: 0.7.0\n                  other:\n                    description: more information on versions\n                    type: array\n                    items:\n                      type: string\n        '500':\n          description: Failed to query node status\n  /syncing:\n    get:\n      summary: Syncing state of node\n      tags:\n        - Tendermint\n      description: Get if the node is currently syning with other nodes\n      responses:\n        '200':\n          description: node sync status\n          content:\n            '*/*':\n              schema:\n                type: object\n                properties:\n                  syncing:\n                    type: boolean\n                    example: false\n        '500':\n          description: Server internal error\n  /blocks/latest:\n    get:\n      summary: Get the latest block\n      tags:\n        - Tendermint\n      responses:\n        '200':\n          description: The latest block\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlockQuery'\n        '500':\n          description: Server internal error\n  /blocks/{height}:\n    get:\n      summary: Get a block at a certain height\n      tags:\n        - Tendermint\n      parameters:\n        - in: path\n          name: height\n          description: Block height\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: The block at a specific height\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlockQuery'\n        '400':\n          description: Invalid height\n        '404':\n          description: Request block height doesn't\n        '500':\n          description: Server internal error\n  /block-results/latest:\n    get:\n      summary: Get the latest block result\n      tags:\n        - Tendermint\n      responses:\n        '200':\n          description: The latest block result\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlockResultQuery'\n        '500':\n          description: Server internal error\n  '/block-results/{height}':\n    get:\n      summary: Get a block result at a certain height\n      tags:\n        - Tendermint\n      parameters:\n        - in: path\n          name: height\n          description: Block height\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: The block result at a specific height\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlockResultQuery'\n        '400':\n          description: Invalid height\n        '404':\n          description: Request block height doesn't\n        '500':\n          description: Server internal error\n  /validatorsets/latest:\n    get:\n      summary: Get the latest validator set\n      tags:\n        - Tendermint\n      responses:\n        '200':\n          description: The validator set at the latest block height\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  block_height:\n                    type: number\n                  validators:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/TendermintValidator'\n        '500':\n          description: Server internal error\n  '/validatorsets/{height}':\n    get:\n      summary: Get a validator set a certain height\n      tags:\n        - Tendermint\n      parameters:\n        - in: path\n          name: height\n          description: Block height\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: The validator set at a specific block height\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  block_height:\n                    type: number\n                  validators:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/TendermintValidator'\n        '400':\n          description: Invalid height\n        '404':\n          description: Block at height not available\n        '500':\n          description: Server internal error\n  '/txs/{hash}':\n    get:\n      summary: Get a Tx by hash\n      tags:\n        - Tendermint\n      parameters:\n        - in: path\n          name: hash\n          description: Tx hash\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Tx with the provided hash\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TxQuery'\n        '500':\n          description: Internal Server Error\n  /txs:\n    get:\n      tags:\n        - Tendermint\n      summary: Search transactions\n      description: Search transactions by tag(s).\n      parameters:\n        - in: query\n          name: tags\n          description: \u003e-\n            Query transactions with tags such as action=send, sender=faa1ljemm0yznz58qxxs8xyak7fashcfxf5lssn6jm and recipient=faa1252wk9khhks260shar975x7fswqxltc8tgvtl8, just input {\\\"action\\\":\\\"send\\\",\\\"sender\\\":\\\"faa1ljemm0yznz58qxxs8xyak7fashcfxf5lssn6jm\\\",\\\"recipient\\\":\\\"faa1252wk9khhks260shar975x7fswqxltc8tgvtl8\\\"}\n          required: true\n          schema:\n            type: object\n            additionalProperties:\n              type: string\n        - in: query\n          name: search_request_page\n          description: 'Pagination page, default value 0'\n          schema:\n            type: integer\n        - in: query\n          name: search_request_size\n          description: 'Pagination size, default value 100'\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: All Tx matching the provided tags\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TxQuery'\n        '400':\n          description: Invalid search tags\n        '500':\n          description: Internal Server Error\n  /tx/broadcast:\n    post:\n      tags:\n        - Tx\n      summary: Broadcast a signed StdTx which is amino or json encoded\n      description: \u003e-\n        Broadcast a signed StdTx which is amino or json encoded to\n        a full iris node\n      parameters:\n        - in: query\n          name: async\n          description: 'if true, broadcast transaction asynchronously'\n          required: false\n          schema:\n            type: boolean\n        - in: query\n          name: commit\n          description: \u003e-\n            if true, response will be returned after the transaction is included\n            in a block.\n          required: false\n          schema:\n            type: boolean\n        - in: query\n          name: simulate\n          description: \u003e-\n            if true, ignore the gas field and perform a simulation of a\n            transaction, but don't broadcast it\n          required: false\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: Tx was send and will probably be added to the next block\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BroadcastTxCommitResult'\n        '400':\n          description: The Tx was malformated\n        '500':\n          description: Server internal error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                tx:\n                  $ref: '#/components/schemas/StdTx'\n        description: broadcast tx\n        required: true\n  '/bank/coins/{type}':\n    get:\n      tags:\n        - Bank\n      summary: Get coin type\n      description: Get the detailed information about the given coin type\n      parameters:\n        - name: type\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  name:\n                    type: string\n                  desc:\n                    type: string\n                  min_unit:\n                    type: object\n                    properties:\n                      denom:\n                        type: string\n                      decimal:\n                        type: integer\n                  Units:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        denom:\n                          type: string\n                        decimal:\n                          type: integer\n                  origin:\n                    type: integer\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n        '500':\n          description: Internal Server Error\n  /bank/token-stats:\n    get:\n      tags:\n        - Bank\n      summary: Get all token statistics\n      description: \u003e-\n        Get token statistics, such as total loose tokens, total bonded token and\n        total burned token\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  loose_tokens:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Coin'\n                  bonded_tokens:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Coin'\n                  burned_tokens:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Coin'\n        '500':\n          description: Internal Server Error\n  /bank/token-stats/{id}:\n    get:\n      tags:\n        - Bank\n      summary: Get token statistics\n      description: \u003e-\n        Get token statistics, such as total loose tokens, total bonded token and\n        total burned token\n      parameters:\n        - name: id\n          in: path\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  loose_tokens:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Coin'\n                  bonded_tokens:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Coin'\n                  burned_tokens:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Coin'\n        '500':\n          description: Internal Server Error\n  '/bank/accounts/{address}':\n    get:\n      summary: Get the account information on blockchain\n      tags:\n        - Bank\n      parameters:\n        - in: path\n          name: address\n          description: Account address\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Account information on the blockchain\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  type:\n                    type: string\n                  value:\n                    type: object\n                    properties:\n                      account_number:\n                        type: string\n                      address:\n                        type: string\n                      coins:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/Coin'\n                      public_key:\n                        type: object\n                        properties:\n                          type:\n                            type: string\n                          value:\n                            type: string\n                      sequence:\n                        type: string\n        '204':\n          description: No content about this account address\n        '500':\n          description: Server internel error\n  '/bank/accounts/{address}/send':\n    post:\n      summary: Send coins\n      description: Send coins\n      tags:\n        - Bank\n      parameters:\n        - in: path\n          name: address\n          description: Account address in bech32 format\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid request\n        '500':\n          description: Server internal error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                recipient:\n                  $ref: '#/components/schemas/Address'\n                amount:\n                  type: string\n                  example: 1iris\n        description: Parameters to send coins\n        required: true\n  /bank/accounts/{address}/burn:\n    post:\n      summary: Burn coins\n      description: Burn coins\n      tags:\n        - Bank\n      parameters:\n        - in: path\n          name: address\n          description: Account address in bech32 format\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid request\n        '500':\n          description: Server internal error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                amount:\n                  type: string\n                  example: 1iris\n        description: Parameters to burn coins\n        required: true\n  '/bank/accounts/{address}/set-memo-regexp':\n    post:\n      summary: Set memo regexp\n      description: Set memo regexp\n      tags:\n        - Bank\n      parameters:\n        - in: path\n          name: address\n          description: Account address in bech32 format\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid request\n        '500':\n          description: Server internal error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                memo_regexp:\n                  type: string\n                  example: ^[A-Za-z0-9]+$\n        description: Parameters to set memo regexp\n        required: true\n  '/stake/delegators/{delegatorAddr}/delegations':\n    parameters:\n      - in: path\n        name: delegatorAddr\n        description: Bech32 AccAddress of Delegator\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Get all delegations from a delegator\n      tags:\n        - Stake\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  $ref: '#/components/schemas/Delegation'\n        '400':\n          description: Invalid delegator address\n        '500':\n          description: Internal Server Error\n    post:\n      summary: Submit delegation\n      tags:\n        - Stake\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid delegator address or delegation body\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                delegate:\n                  type: object\n                  properties:\n                    validator_addr:\n                      $ref: '#/components/schemas/ValidatorAddress'\n                    delegation:\n                      type: string\n                      example: 10iris\n        description: Delegation amount must be specified\n  '/stake/delegators/{delegatorAddr}/unbonding-delegations':\n    parameters:\n      - in: path\n        name: delegatorAddr\n        description: Bech32 AccAddress of Delegator\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Get all unbonding delegations from a delegator\n      tags:\n        - Stake\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  $ref: '#/components/schemas/UnbondingDelegation'\n        '400':\n          description: Invalid delegator address\n        '500':\n          description: Internal Server Error\n    post:\n      summary: Submit unbonding\n      tags:\n        - Stake\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid delegator address or delegation body\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                unbond:\n                  type: object\n                  properties:\n                    validator_addr:\n                      $ref: '#/components/schemas/ValidatorAddress'\n                    shares_amount:\n                      type: string\n                      example: '100'\n                    shares_percent:\n                      type: string\n                      example: '0.1'\n        description: Either specify the shares_amount or the shares_percent, not both\n  '/stake/delegators/{delegatorAddr}/redelegations':\n    parameters:\n      - in: path\n        name: delegatorAddr\n        description: Bech32 AccAddress of Delegator\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Get all redelegations from a delegator\n      tags:\n        - Stake\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  $ref: '#/components/schemas/Redelegation'\n        '400':\n          description: Invalid delegator address\n        '500':\n          description: Internal Server Error\n    post:\n      summary: Submit redelegation\n      tags:\n        - Stake\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid delegator address or delegation body\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                redelegate:\n                  type: object\n                  properties:\n                    validator_src_addr:\n                      $ref: '#/components/schemas/ValidatorAddress'\n                    validator_dst_addr:\n                      $ref: '#/components/schemas/ValidatorAddress'\n                    shares_amount:\n                      type: string\n                      example: '100'\n                    shares_percent:\n                      type: string\n                      example: '0.1'\n        description: Either specify the shares_amount or the shares_percent, not both\n  '/stake/delegators/{delegatorAddr}/validators':\n    parameters:\n      - in: path\n        name: delegatorAddr\n        description: Bech32 AccAddress of Delegator\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Query all validators that a delegator is bonded to\n      tags:\n        - Stake\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Validator'\n        '400':\n          description: Invalid delegator address\n        '500':\n          description: Internal Server Error\n  '/stake/delegators/{delegatorAddr}/validators/{validatorAddr}':\n    parameters:\n      - in: path\n        name: delegatorAddr\n        description: Bech32 AccAddress of Delegator\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: validatorAddr\n        description: Bech32 ValAddress of Delegator\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Query a validator that a delegator is bonded to\n      tags:\n        - Stake\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Validator'\n        '400':\n          description: Invalid delegator address or validator address\n        '500':\n          description: Internal Server Error\n  '/stake/delegators/{delegatorAddr}/txs':\n    parameters:\n      - in: path\n        name: delegatorAddr\n        description: Bech32 AccAddress of Delegator\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Get all staking txs (i.e msgs) from a delegator\n      tags:\n        - Stake\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TxQuery'\n        '204':\n          description: No staking transaction about this delegator address\n        '400':\n          description: Invalid delegator address\n        '500':\n          description: Internal Server Error\n  '/stake/delegators/{delegatorAddr}/delegations/{validatorAddr}':\n    parameters:\n      - in: path\n        name: delegatorAddr\n        description: Bech32 AccAddress of Delegator\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: validatorAddr\n        description: Bech32 OperatorAddress of validator\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Query the current delegation between a delegator and a validator\n      tags:\n        - Stake\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Delegation'\n        '400':\n          description: Invalid delegator address or validator address\n        '500':\n          description: Internal Server Error\n  '/stake/delegators/{delegatorAddr}/unbonding-delegations/{validatorAddr}':\n    parameters:\n      - in: path\n        name: delegatorAddr\n        description: Bech32 AccAddress of Delegator\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: validatorAddr\n        description: Bech32 OperatorAddress of validator\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Query all unbonding delegations between a delegator and a validator\n      tags:\n        - Stake\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  $ref: '#/components/schemas/UnbondingDelegation'\n        '400':\n          description: Invalid delegator address or validator address\n        '500':\n          description: Internal Server Error\n  /stake/validators:\n    get:\n      summary: Get validators\n      tags:\n        - Stake\n      parameters:\n        - in: query\n          name: page\n          description: 'Pagination page, default value 1'\n          schema:\n            type: integer\n        - in: query\n          name: size\n          description: 'Pagination size, default value 100'\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Validator'\n        '500':\n          description: Internal Server Error\n  '/stake/validators/{validatorAddr}':\n    parameters:\n      - in: path\n        name: validatorAddr\n        description: Bech32 OperatorAddress of validator\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Query the information from a single validator\n      tags:\n        - Stake\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Validator'\n        '400':\n          description: Invalid validator address\n        '500':\n          description: Internal Server Error\n  '/stake/validators/{validatorAddr}/delegations':\n    parameters:\n      - in: path\n        name: validatorAddr\n        description: Bech32 OperatorAddress of validator\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Get all delegations from a validator\n      tags:\n        - Stake\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Delegation'\n        '400':\n          description: Invalid validator address\n        '500':\n          description: Internal Server Error\n  '/stake/validators/{validatorAddr}/unbonding-delegations':\n    parameters:\n      - in: path\n        name: validatorAddr\n        description: Bech32 OperatorAddress of validator\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Get all unbonding delegations from a validator\n      tags:\n        - Stake\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UnbondingDelegation'\n        '400':\n          description: Invalid validator address\n        '500':\n          description: Internal Server Error\n  '/stake/validators/{validatorAddr}/redelegations':\n    parameters:\n      - in: path\n        name: validatorAddr\n        description: Bech32 OperatorAddress of validator\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Get all outgoing redelegations from a validator\n      tags:\n        - Stake\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Redelegation'\n        '400':\n          description: Invalid validator address\n        '500':\n          description: Internal Server Error\n  /stake/pool:\n    get:\n      summary: Get the current state of the staking pool\n      tags:\n        - Stake\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  loose_tokens:\n                    type: string\n                  bonded_tokens:\n                    type: string\n                  total_supply:\n                    type: string\n                  bonded_ratio:\n                    type: string\n        '500':\n          description: Internal Server Error\n  /stake/parameters:\n    get:\n      summary: Get the current staking parameter values\n      tags:\n        - Stake\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  unbonding_time:\n                    type: string\n                  max_validators:\n                    type: integer\n                  bond_denom:\n                    type: string\n        '500':\n          description: Internal Server Error\n  '/slashing/validators/{validatorPubKey}/signing-info':\n    get:\n      summary: Get sign info of given validator\n      description: Get sign info of given validator\n      tags:\n        - Slashing\n      parameters:\n        - description: Bech32 validator public key\n          name: validatorPubKey\n          required: true\n          in: path\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  start_height:\n                    type: string\n                  index_offset:\n                    type: string\n                  jailed_until:\n                    type: string\n                  missed_blocks_counter:\n                    type: string\n        '204':\n          description: No sign info of this validator\n        '400':\n          description: Invalid validator public key\n        '500':\n          description: Internal Server Error\n  '/slashing/validators/{validatorAddr}/unjail':\n    post:\n      summary: Unjail a jailed validator\n      description: Send transaction to unjail a jailed validator\n      tags:\n        - Slashing\n      parameters:\n        - description: Bech32 validator operator address\n          name: validatorAddr\n          required: true\n          in: path\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid validator address or base_tx\n        '500':\n          description: Internal Server Error\n      requestBody:\n        $ref: '#/components/requestBodies/Unjailbody'\n  /gov/proposals:\n    post:\n      summary: Submit a proposal\n      description: Send transaction to submit a proposal\n      tags:\n        - Gov\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid proposal body\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                title:\n                  type: string\n                description:\n                  type: string\n                proposal_type:\n                  type: string\n                  example: PlainText\n                proposer:\n                  $ref: '#/components/schemas/Address'\n                initial_deposit:\n                  type: string\n                  example: 10iris\n                param:\n                  $ref: '#/components/schemas/Param'\n                comm_tax:\n                  $ref: '#/components/schemas/CommTax'\n                token:\n                  $ref: '#/components/schemas/TokenAddition'\n                upgrade:\n                  $ref: '#/components/schemas/Upgrade'\n        description: \u003e-\n          valid value of `\"proposal_type\"` can be `\"PlainText\"`, `\"Parameter\"`,\n          `\"SoftwareUpgrade\"`, `\"SystemHalt\"`,`\"CommunityTaxUsage\"`,`\"TokenAddition\"`\n        required: true\n    get:\n      summary: Query proposals\n      description: Query proposals information with parameters\n      tags:\n        - Gov\n      parameters:\n        - in: query\n          name: voter\n          description: voter address\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: depositor\n          description: depositor address\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: status\n          description: \u003e-\n            proposal status, valid values can be `\"DepositPeriod\"`,\n            `\"VotingPeriod\"`, `\"Passed\"`, `\"Rejected\"`\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: limit\n          description: 'limit to latest [number] proposals. Defaults to all proposals'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TextProposal'\n        '400':\n          description: Invalid query parameters\n        '500':\n          description: Internal Server Error\n  '/gov/proposals/{proposalId}/deposits':\n    post:\n      summary: Deposit tokens to a proposal\n      description: Send transaction to deposit tokens to a proposal\n      tags:\n        - Gov\n      parameters:\n        - description: proposal id\n          name: proposalId\n          required: true\n          in: path\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid proposal id or deposit body\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                depositor:\n                  $ref: '#/components/schemas/Address'\n                amount:\n                  type: string\n                  example: 10iris\n        required: true\n    get:\n      summary: Query deposits\n      description: Query deposits by proposalId\n      tags:\n        - Gov\n      parameters:\n        - name: proposalId\n          required: true\n          in: path\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Deposit'\n        '400':\n          description: Invalid proposal id\n        '500':\n          description: Internal Server Error\n  '/gov/proposals/{proposalId}/votes':\n    post:\n      summary: Vote a proposal\n      description: Send transaction to vote a proposal\n      tags:\n        - Gov\n      parameters:\n        - description: proposal id\n          name: proposalId\n          required: true\n          in: path\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid proposal id or vote body\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                voter:\n                  $ref: '#/components/schemas/Address'\n                option:\n                  type: string\n                  example: 'Yes'\n        description: \u003e-\n          valid value of `\"option\"` field can be `\"Yes\"`, `\"No\"`, `\"NoWithVeto\"`\n          and `\"Abstain\"`\n        required: true\n    get:\n      summary: Query voters\n      description: Query voters information by proposalId\n      tags:\n        - Gov\n      parameters:\n        - description: proposal id\n          name: proposalId\n          required: true\n          in: path\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Vote'\n        '400':\n          description: Invalid proposal id\n        '500':\n          description: Internal Server Error\n  '/gov/proposals/{proposalId}':\n    get:\n      summary: Query a proposal\n      description: Query a proposal by id\n      tags:\n        - Gov\n      parameters:\n        - name: proposalId\n          required: true\n          in: path\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TextProposal'\n        '400':\n          description: Invalid proposal id\n        '500':\n          description: Internal Server Error\n  '/gov/proposals/{proposalId}/deposits/{depositor}':\n    get:\n      summary: Query deposit\n      description: Query deposit by proposalId and depositor address\n      tags:\n        - Gov\n      parameters:\n        - description: proposal id\n          name: proposalId\n          required: true\n          in: path\n          schema:\n            type: string\n        - description: Bech32 depositor address\n          name: depositor\n          required: true\n          in: path\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Deposit'\n        '400':\n          description: Invalid proposal id or depositor address\n        '404':\n          description: Found no deposit\n        '500':\n          description: Internal Server Error\n  '/gov/proposals/{proposalId}/votes/{voter}':\n    get:\n      summary: Query vote\n      description: Query vote information by proposalId and voter address\n      tags:\n        - Gov\n      parameters:\n        - description: proposal id\n          name: proposalId\n          required: true\n          in: path\n          schema:\n            type: string\n        - description: Bech32 voter address\n          name: voter\n          required: true\n          in: path\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Vote'\n        '400':\n          description: Invalid proposal id or voter address\n        '404':\n          description: Found no vote\n        '500':\n          description: Internal Server Error\n\n  '/distribution/{delegatorAddr}/withdraw-address':\n    parameters:\n      - in: path\n        name: delegatorAddr\n        description: Bech32 AccAddress of Delegator\n        required: true\n        schema:\n          type: string\n    post:\n      summary: Set withdraw address\n      tags:\n        - Distribution\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid proposal body\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                withdraw_address:\n                  $ref: '#/components/schemas/Address'\n        required: true\n    get:\n      summary: Query withdraw address\n      tags:\n        - Distribution\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n                example: faa1ezzh0humhy3329xg4avhcjtay985nll0zswc5j\n        '204':\n          description: \u003e-\n            No other address have been specified as withdraw address, delegator\n            address will be used.\n        '400':\n          description: Invalid delegator address\n        '500':\n          description: Internal Server Error\n  /distribution/{delegatorAddr}/rewards/withdraw:\n    parameters:\n      - in: path\n        name: delegatorAddr\n        description: Bech32 AccAddress of Delegator\n        required: true\n        schema:\n          type: string\n    post:\n      summary: Withdraw rewards\n      tags:\n        - Distribution\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid proposal body\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                validator_address:\n                  $ref: '#/components/schemas/ValidatorAddress'\n                is_validator:\n                  type: boolean\n        description: 'if is_validator is true, validator_address should not be presented'\n        required: true\n  '/distribution/{address}/rewards':\n    parameters:\n      - in: path\n        name: address\n        description: Validator operator address or delegator address\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Query all the rewards of validator or delegator\n      tags:\n        - Distribution\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: object\n                properties:\n                  total_rewards:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Coin'\n                  delegations:\n                    type: array\n                    items:\n                      validator:\n                        $ref: '#/components/schemas/ValidatorAddress'\n                      reward:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/Coin'\n                  commission:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Coin'\n        '204':\n          description: Invalid address\n        '400':\n          description: Invalid address\n        '500':\n          description: Internal Server Error\n  /service/definitions:\n    post:\n      summary: Add a service definition\n      description: Send transaction to define a service\n      tags:\n        - Service\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid service define body\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                service_name:\n                  type: string\n                service_description:\n                  type: string\n                tags:\n                  type: array\n                  items:\n                    type: string\n                idl_content:\n                  type: string\n                author_addr:\n                  $ref: '#/components/schemas/Address'\n                author_description:\n                  type: string\n        required: true\n  '/service/definitions/{defChainId}/{serviceName}':\n    parameters:\n      - in: path\n        name: defChainId\n        description: service defined chain id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: serviceName\n        description: service name\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Query service definition\n      description: Query a service definition\n      tags:\n        - Service\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: object\n                properties:\n                  definition:\n                    type: object\n                    properties:\n                      name:\n                        type: string\n                      chain_id:\n                        type: string\n                      description:\n                        type: string\n                      tags:\n                        type: array\n                        items:\n                          type: string\n                      author:\n                        type: string\n                      author_description:\n                        type: string\n                      idl_content:\n                        type: string\n                  methods:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        id:\n                          type: integer\n                        name:\n                          type: string\n                        description:\n                          type: string\n                        output_privacy:\n                          type: string\n                        output_cached:\n                          type: string\n        '204':\n          description: No service definition\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n  /service/bindings:\n    post:\n      summary: Add a service binding\n      description: Send transaction to add a binding to a service definition\n      tags:\n        - Service\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid service bind body\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                def_chain_id:\n                  type: string\n                service_name:\n                  type: string\n                binding_type:\n                  type: string\n                deposit:\n                  type: string\n                  example: 1iris\n                prices:\n                  type: array\n                  items:\n                    type: string\n                    example: 1iris\n                level:\n                  type: object\n                  properties:\n                    avg_rsp_time:\n                      type: string\n                    usable_time:\n                      type: string\n                provider:\n                  $ref: '#/components/schemas/Address'\n        required: true\n  '/service/bindings/{defChainId}/{serviceName}/{bindChainId}/{provider}':\n    parameters:\n      - in: path\n        name: defChainId\n        description: service defined chain id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: serviceName\n        description: service name\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: bindChainId\n        description: service bound chain id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: provider\n        description: service provider address\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Query service binding\n      description: Query a service binding\n      tags:\n        - Service\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: object\n                properties:\n                  type:\n                    type: string\n                  value:\n                    type: object\n                    properties:\n                      def_name:\n                        type: string\n                      def_chain_id:\n                        type: string\n                      bind_chain_id:\n                        type: string\n                      provider:\n                        type: string\n                      binding_type:\n                        type: string\n                      deposit:\n                        type: string\n                        example: 1iris\n                      prices:\n                        type: array\n                        items:\n                          type: string\n                          example: 1iris\n                      level:\n                        type: object\n                        properties:\n                          avg_rsp_time:\n                            type: integer\n                          usable_time:\n                            type: integer\n                      available:\n                        type: boolean\n                      disable_time:\n                        type: string\n        '204':\n          description: No service binding\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n  '/service/bindings/{defChainId}/{serviceName}':\n    parameters:\n      - in: path\n        name: defChainId\n        description: service defined chain id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: serviceName\n        description: service name\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Query service binding list\n      description: Query service binding list\n      tags:\n        - Service\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: array\n                items:\n                  properties:\n                    type:\n                      type: string\n                    value:\n                      type: object\n                      properties:\n                        def_name:\n                          type: string\n                        def_chain_id:\n                          type: string\n                        bind_chain_id:\n                          type: string\n                        provider:\n                          type: string\n                        binding_type:\n                          type: string\n                        deposit:\n                          type: string\n                          example: 1iris\n                        prices:\n                          type: array\n                          items:\n                            type: string\n                            example: 1iris\n                        level:\n                          type: object\n                          properties:\n                            avg_rsp_time:\n                              type: integer\n                            usable_time:\n                              type: integer\n                        available:\n                          type: boolean\n                        disable_time:\n                          type: string\n        '204':\n          description: No service binding\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n  '/service/bindings/{defChainId}/{serviceName}/{provider}':\n    put:\n      summary: Update a service binding\n      description: Send transaction to update a service binding\n      tags:\n        - Service\n      parameters:\n        - in: path\n          name: defChainId\n          description: service defined chain id\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: serviceName\n          description: service name\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: provider\n          description: service provider address\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid service binding update body\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                def_chain_id:\n                  type: string\n                service_name:\n                  type: string\n                binding_type:\n                  type: string\n                deposit:\n                  type: string\n                  example: 1iris\n                prices:\n                  type: array\n                  items:\n                    type: string\n                    example: 1iris\n                level:\n                  type: object\n                  properties:\n                    avg_rsp_time:\n                      type: integer\n                    usable_time:\n                      type: integer\n        required: true\n  '/service/bindings/{defChainId}/{serviceName}/{provider}/disable':\n    put:\n      summary: Disable service binding\n      description: Send transaction to diasble a service binding\n      tags:\n        - Service\n      parameters:\n        - in: path\n          name: defChainId\n          description: service defined chain id\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: serviceName\n          description: service name\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: provider\n          description: service provider address\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid service binding disable body\n        '500':\n          description: Internal Server Error\n      requestBody:\n        $ref: '#/components/requestBodies/Unjailbody'\n  '/service/bindings/{defChainId}/{serviceName}/{provider}/enable':\n    put:\n      summary: Enable service binding\n      description: Send transaction to enable a service binding\n      tags:\n        - Service\n      parameters:\n        - in: path\n          name: defChainId\n          description: service defined chain id\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: serviceName\n          description: service name\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: provider\n          description: service provider address\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid service binding enable body\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                deposit:\n                  type: string\n                  example: 1iris\n        required: true\n  '/service/bindings/{defChainId}/{serviceName}/{provider}/deposit/refund':\n    put:\n      summary: Refund deposit from a service binding\n      description: Send transaction to refund deposit from a service binding\n      tags:\n        - Service\n      parameters:\n        - in: path\n          name: defChainId\n          description: service defined chain id\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: serviceName\n          description: service name\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: provider\n          description: service provider address\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid service binding deposit refund body\n        '500':\n          description: Internal Server Error\n      requestBody:\n        $ref: '#/components/requestBodies/Unjailbody'\n  /service/requests:\n    post:\n      summary: Call service\n      description: Send transaction to call a method of service which a provider bound it\n      tags:\n        - Service\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid service request body\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                requests:\n                  type: array\n                  items:\n                    properties:\n                      def_chain_id:\n                        type: string\n                      service_name:\n                        type: string\n                      bind_chain_id:\n                        type: string\n                      method_id:\n                        type: integer\n                      service_fee:\n                        type: string\n                        example: 1iris\n                      data:\n                        type: string\n                      provider:\n                        $ref: '#/components/schemas/Address'\n                      consumer:\n                        $ref: '#/components/schemas/Address'\n        required: true\n  '/service/requests/{defChainId}/{serviceName}/{bindChainId}/{provider}':\n    parameters:\n      - in: path\n        name: defChainId\n        description: service defined chain id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: serviceName\n        description: service name\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: bindChainId\n        description: service bound chain id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: provider\n        description: service provider address\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Query service requests of a provider\n      description: Query service requests of a provider\n      tags:\n        - Service\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    def_chain_id:\n                      type: string\n                    def_name:\n                      type: string\n                    bind_chain_id:\n                      type: string\n                    req_chain_id:\n                      type: string\n                    method_id:\n                      type: integer\n                    provider:\n                      $ref: '#/components/schemas/Address'\n                    consumer:\n                      $ref: '#/components/schemas/Address'\n                    input:\n                      type: string\n                    service_fee:\n                      type: array\n                      items:\n                        $ref: '#/components/schemas/Coin'\n                    profiling:\n                      type: boolean\n                    request_height:\n                      type: number\n                    request_intra_tx_counter:\n                      type: number\n                    expiration_height:\n                      type: number\n        '204':\n          description: No service request\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n  /service/responses:\n    post:\n      summary: Respond service call\n      description: Send transaction to respond a service call\n      tags:\n        - Service\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid service response body\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                req_chain_id:\n                  type: string\n                request_id:\n                  type: string\n                data:\n                  type: string\n                provider:\n                  $ref: '#/components/schemas/Address'\n                error_msg:\n                  type: string\n        required: true\n  '/service/responses/{reqChainId}/{reqId}':\n    parameters:\n      - in: path\n        name: reqChainId\n        description: service request chain id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: reqId\n        description: request id\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Query service response\n      description: Query service response\n      tags:\n        - Service\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: object\n                properties:\n                  type:\n                    type: string\n                  value:\n                    type: object\n                    properties:\n                      req_chain_id:\n                        type: string\n                      request_height:\n                        type: integer\n                      request_intra_tx_counter:\n                        type: integer\n                      expiration_height:\n                        type: integer\n                      provider:\n                        $ref: '#/components/schemas/Address'\n                      consumer:\n                        $ref: '#/components/schemas/Address'\n                      output:\n                        type: string\n                      error_msg:\n                        type: string\n        '204':\n          description: No service request\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n  '/service/fees/{address}':\n    parameters:\n      - in: path\n        name: address\n        description: account address\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Query service fees of an address\n      description: Query service fees of an address\n      tags:\n        - Service\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: object\n                properties:\n                  returned_fee:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Coin'\n                  incoming_fee:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Coin'\n        '204':\n          description: No service request\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n  '/service/fees/{address}/refund':\n    post:\n      summary: Refund service return fee of consumer\n      description: Send transaction to refund service return fee of consumer\n      tags:\n        - Service\n      parameters:\n        - in: path\n          name: address\n          description: address of consumer\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid service fees refund body\n        '500':\n          description: Internal Server Error\n      requestBody:\n        $ref: '#/components/requestBodies/Unjailbody'\n  '/service/fees/{address}/withdraw':\n    post:\n      summary: Withdraw service incoming fee of provider\n      description: Send transaction to withdraw service incoming fee of provider\n      tags:\n        - Service\n      parameters:\n        - in: path\n          name: address\n          description: address of provider\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid service fees withdraw body\n        '500':\n          description: Internal Server Error\n      requestBody:\n        $ref: '#/components/requestBodies/Unjailbody'\n  '/asset/tokens':\n    post:\n      summary: Issue a token\n      tags:\n        - Asset\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                owner:\n                  $ref: '#/components/schemas/Address'\n                family:\n                  type: string\n                  example: 'fungible'\n                source:\n                  type: string\n                  example: 'native'\n                gateway:\n                  type: string\n                  example: ''\n                name:\n                  type: string\n                  example: 'Hello Kitty'\n                symbol:\n                  type: string\n                  example: 'cat'\n                canonical_symbol:\n                  type: string\n                  example: ''\n                min_unit_alias:\n                  type: string\n                  example: 'kitty'\n                initial_supply:\n                  type: string\n                  example: '1000000000'\n                max_supply:\n                  type: string\n                  example: '2000000000'\n                decimal:\n                  type: integer\n                  example: 18\n                mintable:\n                  type: boolean\n                  example: true\n        required: true\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid parameters\n        '500':\n          description: Internal Server Error\n    get:\n      summary: Query tokens by condition\n      tags:\n        - Asset\n      parameters:\n        - in: query\n          name: source\n          description: 'the source of the destination token, options: native, external, gateway'\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: owner\n          description: 'the owner address of the destination token, optional when source is native, ignored when source is not native'\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: gateway\n          description: 'the gateway moniker of the destination token, optional when source is gateway'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Token'\n        '400':\n          description: Invalid token id\n        '500':\n          description: Internal Server Error\n  '/asset/tokens/{id}':\n    get:\n      summary: Query token by unique id\n      tags:\n        - Asset\n      parameters:\n        - in: path\n          name: id\n          description: the unique id of the token\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Token'\n        '400':\n          description: Invalid token id\n        '500':\n          description: Internal Server Error\n    put:\n      summary: Edit token information\n      parameters:\n        - in: path\n          name: id\n          description: unique id of token\n          required: true\n          schema:\n            type: string\n      tags:\n        - Asset\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid parameters\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                owner:\n                  $ref: '#/components/schemas/Address'\n                canonical_symbol:\n                  type: string\n                  example: 'btc'\n                min_unit_alias:\n                  type: string\n                  example: 'satoshi'\n                max_supply:\n                  type: int\n                  example: '21000000'\n                mintable:\n                  type: string\n                  example: \"\"\n                name:\n                  type: string\n                  example: 'BTC Token'\n  '/asset/tokens/{id}/mint':\n    post:\n      summary: The asset owner and operator can directly mint tokens to a specified address\n      parameters:\n        - in: path\n          name: id\n          description: unique id of token\n          required: true\n          schema:\n            type: string\n      tags:\n        - Asset\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid parameters\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                owner:\n                  $ref: '#/components/schemas/Address'\n                to:\n                  $ref: '#/components/schemas/Address'\n                amount:\n                  type: int\n                  example: '21000000'\n  '/asset/tokens/{id}/transfer-owner':\n    post:\n      summary: Transfer token to a new owner\n      parameters:\n        - in: path\n          name: id\n          description: unique id of token\n          required: true\n          schema:\n            type: string\n      tags:\n        - Asset\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid parameters\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                src_owner:\n                  $ref: '#/components/schemas/Address'\n                dst_owner:\n                  $ref: '#/components/schemas/Address'\n  '/asset/gateways/{moniker}':\n    get:\n      summary: Query the gateway with the specified moniker\n      tags:\n        - Asset\n      parameters:\n        - in: path\n          name: moniker\n          description: the unique name of the destination gateway\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Gateway'\n        '400':\n          description: Invalid moniker\n        '500':\n          description: Internal Server Error\n    put:\n      summary: Edit an existing gateway\n      tags:\n        - Asset\n      parameters:\n        - in: path\n          name: moniker\n          description: the unique name of the destination gateway\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid parameters\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                owner:\n                  $ref: '#/components/schemas/Address'\n                identity:\n                  type: string\n                details:\n                  type: string\n                website:\n                  type: string\n  '/asset/gateways':\n    get:\n      summary: Get all the gateways with an optional owner\n      tags:\n        - Asset\n      parameters:\n        - in: query\n          name: owner\n          description: the owner address to be queried\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Gateway'\n        '400':\n          description: Invalid owner address if the owner is given\n        '500':\n          description: Internal Server Error\n    post:\n      summary: Create a gateway\n      tags:\n        - Asset\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid parameters\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                owner:\n                  $ref: '#/components/schemas/Address'\n                moniker:\n                  type: string\n                identity:\n                  type: string\n                details:\n                  type: string\n                website:\n                  type: string\n  '/asset/gateways/{moniker}/transfer':\n    post:\n      summary: Transfer the owner of a gateway\n      tags:\n        - Asset\n      parameters:\n        - in: path\n          name: moniker\n          description: the unique name of the destination gateway\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid parameters\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                owner:\n                  $ref: '#/components/schemas/Address'\n                to:\n                  $ref: '#/components/schemas/Address'\n  '/asset/fees/gateways/{moniker}':\n    get:\n      summary: Query the fee for the creation of the gateway with the given moniker\n      tags:\n        - Asset\n      parameters:\n        - in: path\n          name: moniker\n          description: the unique name of a gateway\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GatewayFeeOutput'\n        '400':\n          description: Invalid moniker\n        '500':\n          description: Internal Server Error\n  '/asset/fees/tokens/{id}':\n    get:\n      summary: Query the fees for the issuance and minting of the token with the given id\n      tags:\n        - Asset\n      parameters:\n        - in: path\n          name: id\n          description: the token id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TokenFeesOutput'\n        '400':\n          description: Invalid id\n        '500':\n          description: Internal Server Error\n  '/rand/rands':\n    post:\n      summary: Request a random number\n      tags:\n        - Rand\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid parameters\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                consumer:\n                  $ref: '#/components/schemas/Address'\n                block_interval:\n                  type: integer\n                  example: '10'\n  '/rand/rands/{request-id}':\n    get:\n      summary: Query a random number by the specified request id\n      tags:\n        - Rand\n      parameters:\n        - in: path\n          name: request-id\n          description: the request id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Rand'\n        '400':\n          description: Invalid request id\n        '500':\n          description: Internal Server Error\n  '/rand/queue':\n    get:\n      summary: Query the pending requests with an optional height\n      tags:\n        - Rand\n      parameters:\n        - in: query\n          name: height\n          description: the destination block height\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Request'\n        '400':\n          description: Invalid height if provided\n        '500':\n          description: Internal Server Error\n  '/coinswap/liquidities/{id}':\n    get:\n      summary: Query liquidity by id\n      tags:\n        - CoinSwap\n      parameters:\n        - in: path\n          name: id\n          description: the unique liquidity id of the token-iris pair\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CoinSwapLiquidity'\n        '400':\n          description: Invalid Liquidity Id\n        '500':\n          description: Internal Server Error\n  '/coinswap/liquidities/{id}/deposit':\n    post:\n      summary: Add liquidity by exact iris amount, calculated token and liquidity amount\n      tags:\n        - CoinSwap\n      parameters:\n        - in: path\n          name: id\n          description: the unique liquidity id of the token-iris pair\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid parameters\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                max_token:\n                  type: integer\n                  example: '10'\n                exact_iris_amt:\n                  type: integer\n                  example: '10000000000000000000'\n                min_liquidity:\n                  type: integer\n                  example: '10000000000000000000'\n                deadline:\n                  type: string\n                  example: '30s'\n                sender:\n                  $ref: '#/components/schemas/Address'\n  '/coinswap/liquidities/{id}/withdraw':\n    post:\n      summary: Remove liquidity by exact liquidity amount, calculated iris and token amount\n      tags:\n        - CoinSwap\n      parameters:\n        - in: path\n          name: id\n          description: the unique liquidity id of the token-iris pair\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid parameters\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                min_token:\n                  type: integer\n                  example: '100'\n                min_iris_amt:\n                  type: integer\n                  example: '10000000000000000000'\n                withdraw_liquidity:\n                  type: integer\n                  example: '10000000000000000000'\n                deadline:\n                  type: string\n                  example: '30s'\n                sender:\n                  $ref: '#/components/schemas/Address'\n  '/coinswap/liquidities/buy':\n    post:\n      summary: Swap coin by exact output, calculated input\n      tags:\n        - CoinSwap\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid parameters\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                input:\n                  $ref: '#/components/schemas/CoinSwapInputOutput'\n                output:\n                  $ref: '#/components/schemas/CoinSwapInputOutput'\n                deadline:\n                  type: string\n                  example: '30s'\n  '/coinswap/liquidities/sell':\n    post:\n      summary: Swap coin by exact input, calculated output\n      tags:\n        - CoinSwap\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid parameters\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                input:\n                  $ref: '#/components/schemas/CoinSwapInputOutput'\n                output:\n                  $ref: '#/components/schemas/CoinSwapInputOutput'\n                deadline:\n                  type: string\n                  example: '30s'\n  '/htlc/htlcs':\n    post:\n      summary: create an HTLC\n      tags:\n        - HTLC\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid parameters\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                sender:\n                  $ref: '#/components/schemas/Address'\n                to:\n                  $ref: '#/components/schemas/Address'\n                receiver_on_other_chain:\n                  type: string\n                  example: '0xcd2a3d9f938e13cd947ec05abc7fe734df8dd826'\n                hash_lock:\n                  type: string\n                  example: '327a66212cbee3756816e617b38f9dfe327a66212cbee3756816e617b38f9dfe'\n                amount:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Coin'\n                time_lock:\n                  type: integer\n                  example: '100'\n                timestamp:\n                  type: integer\n                  example: '1568011909'\n  '/htlc/htlcs/{hash-lock}':\n    get:\n      summary: query HTLC by hash-lock\n      tags:\n        - HTLC\n      parameters:\n        - in: path\n          name: hash-lock\n          description: the hash-lock of the HTLC\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid parameters\n        '500':\n          description: Internal Server Error\n  '/htlc/htlcs/{hash-lock}/claim':\n    post:\n      summary: claim an opened HTLC\n      tags:\n        - HTLC\n      parameters:\n        - in: path\n          name: hash-lock\n          description: the hash-lock of the HTLC\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid parameters\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                sender:\n                  $ref: '#/components/schemas/Address'\n                secret:\n                  type: string\n                  example: '5f5f5f6162636465666768696a6b6c6d6e6f707172737475767778797a5f5f5f'\n  '/htlc/htlcs/{hash-lock}/refund':\n    post:\n      summary: refund from an expired HTLC\n      tags:\n        - HTLC\n      parameters:\n        - in: path\n          name: hash-lock\n          description: the hash-lock of the HTLC\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Unsigned tx was succesfully generated\n        '400':\n          description: Invalid parameters\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_tx:\n                  $ref: '#/components/schemas/BaseTx'\n                sender:\n                  $ref: '#/components/schemas/Address'\n  '/params':\n    get:\n      summary: Get the system params with an optional module\n      tags:\n        - Params\n      parameters:\n        - in: query\n          name: module\n          description: the name of the module,options:stake/mint/distr/slashing/service/asset/auth\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n        '500':\n          description: Internal Server Error\n\ncomponents:\n  requestBodies:\n    Unjailbody:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              base_tx:\n                $ref: '#/components/schemas/BaseTx'\n      required: true\n  schemas:\n    CheckTxResult:\n      type: object\n      properties:\n        code:\n          type: integer\n        data:\n          type: string\n        gas_used:\n          type: integer\n        gas_wanted:\n          type: integer\n        info:\n          type: string\n        log:\n          type: string\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/KVPair'\n      example:\n        code: 0\n        data: data\n        log: log\n        gas_used: 5000\n        gas_wanted: 10000\n        info: info\n        tags:\n          - ''\n          - ''\n    DeliverTxResult:\n      type: object\n      properties:\n        code:\n          type: integer\n        data:\n          type: string\n        gas_used:\n          type: integer\n        gas_wanted:\n          type: integer\n        info:\n          type: string\n        log:\n          type: string\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/KVPair'\n      example:\n        code: 5\n        data: data\n        log: log\n        gas_used: 5000\n        gas_wanted: 10000\n        info: info\n        tags:\n          - ''\n          - ''\n    BroadcastTxCommitResult:\n      type: object\n      properties:\n        check_tx:\n          $ref: '#/components/schemas/CheckTxResult'\n        deliver_tx:\n          $ref: '#/components/schemas/DeliverTxResult'\n        hash:\n          $ref: '#/components/schemas/Hash'\n        height:\n          type: integer\n    KVPair:\n      type: object\n      properties:\n        key:\n          type: string\n        value:\n          type: string\n    Msg:\n      type: object\n      properties:\n        type:\n          type: string\n          example: irishub/bank/Send\n        value:\n          type: object\n          properties:\n            inputs:\n              type: array\n              items:\n                type: object\n                properties:\n                  address:\n                    type: string\n                    example: faa1ezzh0humhy3329xg4avhcjtay985nll0zswc5j\n                  coins:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Coin'\n            outputs:\n              type: array\n              items:\n                type: object\n                properties:\n                  address:\n                    type: string\n                    example: faa18c9j808qgsvvuf7nz5xer973lwsw07ae3j79zv\n                  coins:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Coin'\n    Address:\n      type: string\n      description: bech32 encoded address\n      example: faa1r93p0tpdlxgpac744rghvj9kqntvd54lc3msk2\n    ValidatorAddress:\n      type: string\n      description: bech32 encoded address\n      example: fva178ja5mcj5agnhyphga9f65nlzu59gcl5ktgte2\n    Coin:\n      type: object\n      properties:\n        denom:\n          type: string\n          example: 'iris-atto'\n        amount:\n          type: string\n          example: '50'\n    Hash:\n      type: string\n      example: EE5F3404034C524501629B56E0DDC38FAD651F04\n    TxQuery:\n      type: object\n      properties:\n        hash:\n          type: string\n        height:\n          type: number\n        tx:\n          $ref: '#/components/schemas/StdTx'\n        result:\n          type: object\n          properties:\n            log:\n              type: string\n            gas_wanted:\n              type: string\n              example: '0'\n            gas_used:\n              type: string\n              example: '0'\n            tags:\n              type: array\n              items:\n                $ref: '#/components/schemas/KVPair'\n        timestamp:\n          type: string\n          example: '2006-01-02T15:04:05Z07:00'\n        coin_flow:\n          type: array\n          items:\n            type: string\n    StdTx:\n      type: object\n      properties:\n        msg:\n          type: array\n          items:\n            $ref: '#/components/schemas/Msg'\n        fee:\n          type: object\n          properties:\n            gas:\n              type: string\n              example: '10000'\n            amount:\n              type: array\n              items:\n                $ref: '#/components/schemas/Coin'\n        memo:\n          type: string\n        signatures:\n          type: array\n          items:\n            type: object\n            properties:\n              signature:\n                type: string\n                example: \u003e-\n                  MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=\n              pub_key:\n                type: object\n                properties:\n                  type:\n                    type: string\n                    example: tendermint/PubKeySecp256k1\n                  value:\n                    type: string\n                    example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH\n              account_number:\n                type: string\n                example: '0'\n              sequence:\n                type: string\n                example: '0'\n    BlockID:\n      type: object\n      properties:\n        hash:\n          $ref: '#/components/schemas/Hash'\n        parts:\n          type: object\n          properties:\n            total:\n              type: number\n              example: 0\n            hash:\n              $ref: '#/components/schemas/Hash'\n    BlockHeader:\n      type: object\n      properties:\n        chain_id:\n          type: string\n          example: irishub-mainnet\n        height:\n          type: number\n          example: 1\n        time:\n          type: string\n          example: '2017-12-30T05:53:09.287+01:00'\n        num_txs:\n          type: number\n          example: 0\n        last_block_id:\n          $ref: '#/components/schemas/BlockID'\n        total_txs:\n          type: number\n          example: 35\n        last_commit_hash:\n          $ref: '#/components/schemas/Hash'\n        data_hash:\n          $ref: '#/components/schemas/Hash'\n        validators_hash:\n          $ref: '#/components/schemas/Hash'\n        next_validators_hash:\n          $ref: '#/components/schemas/Hash'\n        consensus_hash:\n          $ref: '#/components/schemas/Hash'\n        app_hash:\n          $ref: '#/components/schemas/Hash'\n        last_results_hash:\n          $ref: '#/components/schemas/Hash'\n        evidence_hash:\n          $ref: '#/components/schemas/Hash'\n        proposer_address:\n          $ref: '#/components/schemas/Address'\n    Block:\n      type: object\n      properties:\n        header:\n          $ref: '#/components/schemas/BlockHeader'\n        txs:\n          type: array\n          items:\n            type: string\n        evidence:\n          type: array\n          items:\n            type: string\n        last_commit:\n          type: object\n          properties:\n            block_id:\n              $ref: '#/components/schemas/BlockID'\n            precommits:\n              type: array\n              items:\n                type: object\n                properties:\n                  validator_address:\n                    type: string\n                  validator_index:\n                    type: string\n                    example: '0'\n                  height:\n                    type: string\n                    example: '0'\n                  round:\n                    type: string\n                    example: '0'\n                  timestamp:\n                    type: string\n                    example: '2017-12-30T05:53:09.287+01:00'\n                  type:\n                    type: number\n                    example: 2\n                  block_id:\n                    $ref: '#/components/schemas/BlockID'\n                  signature:\n                    type: string\n                    example: \u003e-\n                      7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==\n    BlockQuery:\n      type: object\n      properties:\n        block_meta:\n          type: object\n          properties:\n            header:\n              $ref: '#/components/schemas/BlockHeader'\n            block_id:\n              $ref: '#/components/schemas/BlockID'\n        block:\n          $ref: '#/components/schemas/Block'\n    BlockResultQuery:\n      type: object\n      properties:\n        Height:\n          type: string\n        results:\n          type: object\n          properties:\n            deliver_tx:\n              type: object\n              properties:\n                code:\n                  type: string\n                data:\n                  type: string\n                log:\n                  type: string\n                info:\n                  type: string\n                gas_wanted:\n                  type: string\n                gas_used:\n                  type: string\n                tags:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/KVPair'\n            end_block:\n              type: object\n              properties:\n                validator_updates:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      pub_key:\n                        type: string\n                      power:\n                        type: string\n                consensus_param_updates:\n                  type: object\n                  properties:\n                    blockSize:\n                      type: string\n                    evidence:\n                      type: string\n                    validator:\n                      type: string\n                tags:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/KVPair'\n            begin_block:\n              type: object\n              properties:\n                tags:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/KVPair'\n\n    BaseTx:\n      type: object\n      properties:\n        chain_id:\n          type: string\n          example: irishub-test\n        gas:\n          type: string\n          example: '20000'\n        fee:\n          type: string\n          example: 0.4iris\n        memo:\n          type: string\n          example: 'memo'\n    TendermintValidator:\n      type: object\n      properties:\n        address:\n          $ref: '#/components/schemas/ValidatorAddress'\n        pub_key:\n          type: string\n          example: \u003e-\n            fvp1zcjduepq6td0utl8pgjh9uud5mvev7z9k90562qpj2gq9sjruenmd4ypp62qgtf6ac\n        power:\n          type: string\n          example: '1000'\n        accum:\n          type: string\n          example: '1000'\n    TextProposal:\n      type: object\n      properties:\n        proposal_id:\n          type: integer\n        title:\n          type: string\n        description:\n          type: string\n        proposal_type:\n          type: string\n        proposal_status:\n          type: string\n        tally_result:\n          type: object\n          properties:\n            'yes':\n              type: string\n            abstain:\n              type: string\n            'no':\n              type: string\n            no_with_veto:\n              type: string\n        submit_time:\n          type: string\n        total_deposit:\n          type: array\n          items:\n            $ref: '#/components/schemas/Coin'\n        voting_start_time:\n          type: string\n    Deposit:\n      type: object\n      properties:\n        amount:\n          type: string\n          example: 10iris\n        proposal_id:\n          type: integer\n        depositor:\n          $ref: '#/components/schemas/Address'\n    Vote:\n      type: object\n      properties:\n        voter:\n          type: string\n        proposal_id:\n          type: integer\n        option:\n          type: string\n    Validator:\n      type: object\n      properties:\n        operator_address:\n          $ref: '#/components/schemas/ValidatorAddress'\n        consensus_pubkey:\n          type: string\n          example: \u003e-\n            fvp1zcjduepq20pzdy56z2k5ccdzz43g8g7vwfw4pzny3mhz6ckc444fj0avamhsazfp09\n        jailed:\n          type: boolean\n        status:\n          type: integer\n        tokens:\n          type: string\n        delegator_shares:\n          type: string\n        description:\n          type: object\n          properties:\n            moniker:\n              type: string\n            identity:\n              type: string\n            website:\n              type: string\n            details:\n              type: string\n        bond_height:\n          type: string\n          example: '0'\n        unbonding_height:\n          type: string\n          example: '0'\n        unbonding_time:\n          type: string\n          example: '1970-01-01T00:00:00Z'\n        commission:\n          type: object\n          properties:\n            rate:\n              type: string\n              example: '0'\n            max_rate:\n              type: string\n              example: '0'\n            max_change_rate:\n              type: string\n              example: '0'\n            update_time:\n              type: string\n              example: '1970-01-01T00:00:00Z'\n    Delegation:\n      type: object\n      properties:\n        delegator_addr:\n          type: string\n        validator_addr:\n          type: string\n        shares:\n          type: string\n        height:\n          type: integer\n    UnbondingDelegation:\n      type: object\n      properties:\n        delegator_addr:\n          type: string\n        validator_addr:\n          type: string\n        initial_balance:\n          type: string\n        balance:\n          type: string\n        creation_height:\n          type: integer\n        min_time:\n          type: integer\n    Redelegation:\n      type: object\n      properties:\n        delegator_addr:\n          type: string\n        validator_src_addr:\n          type: string\n        validator_dst_addr:\n          type: string\n        creation_height:\n          type: integer\n        min_time:\n          type: integer\n        initial_balance:\n          type: string\n        balance:\n          type: string\n        shares_src:\n          type: string\n        shares_dst:\n          type: string\n    DelegationDistInfo:\n      type: object\n      properties:\n        delegator_addr:\n          $ref: '#/components/schemas/Address'\n        val_operator_addr:\n          $ref: '#/components/schemas/Address'\n        del_pool_withdrawal_height:\n          type: string\n          example: '0'\n    Token:\n      type: object\n      properties:\n        family:\n          type: string\n        source:\n          type: string\n        gateway:\n          type: string\n        symbol:\n          type: string\n        name:\n          type: string\n        decimal:\n          type: integer\n        canonical_symbol:\n          type: string\n        min_unit_alias:\n          type: string\n        initial_supply:\n          type: string\n        max_supply:\n          type: string\n        mintable:\n          type: boolean\n        owner:\n          $ref: '#/components/schemas/Address'\n    Gateway:\n      type: object\n      properties:\n        owner:\n          $ref: '#/components/schemas/Address'\n        moniker:\n          type: string\n        identity:\n          type: string\n        details:\n          type: string\n        website:\n          type: string\n    GatewayFeeOutput:\n      type: object\n      properties:\n        exist:\n          type: boolean\n        fee:\n          $ref: '#/components/schemas/Coin'\n    TokenFeesOutput:\n      type: object\n      properties:\n        exist:\n          type: boolean\n        issue_fee:\n          $ref: '#/components/schemas/Coin'\n        mint_fee:\n          $ref: '#/components/schemas/Coin'\n    Rand:\n      type: object\n      properties:\n        request_tx_hash:\n          type: string\n        height:\n          type: integer\n        value:\n          type: string\n    Request:\n      type: object\n      properties:\n        height:\n          type: integer\n        consumer:\n          $ref: '#/components/schemas/Address'\n        tx_hash:\n          type: string\n    CoinSwapLiquidity:\n      type: object\n      properties:\n        iris:\n          $ref: '#/components/schemas/Coin'\n        token:\n          $ref: '#/components/schemas/Coin'\n        liquidity:\n          $ref: '#/components/schemas/Coin'\n        fee:\n          type: string\n          example: '0.003'\n    CoinSwapInputOutput:\n      type: object\n      properties:\n        address:\n          type: string\n          example: faa1ezzh0humhy3329xg4avhcjtay985nll0zswc5j\n        coin:\n          $ref: '#/components/schemas/Coin'\n    Param:\n      type: object\n      properties:\n        subspace:\n          type: string\n          example: 'stake'\n        key:\n          type: string\n          example: 'UnbondingTime'\n        value:\n          type: string\n          example: '120h'\n    CommTax:\n      type: object\n      properties:\n        usage:\n          type: string\n          example: 'Burn'\n        dest_address:\n          type: string\n          example: 'faa1ezzh0humhy3329xg4avhcjtay985nll0zswc5j'\n        percent:\n          type: string\n          example: '0.8'\n    TokenAddition:\n      type: object\n      properties:\n        symbol:\n          type: string\n          example: 'eth'\n        canonical_symbol:\n          type: string\n          example: 'ETH'\n        name:\n          type: string\n          example: 'ETH'\n        decimal:\n          type: integer\n          example: 0\n        min_unit_alias:\n          type: string\n          example: 'wei'\n        initial_supply:\n          type: string\n          example: '100000000'\n    Upgrade:\n      type: object\n      properties:\n        version:\n          type: string\n          example: '2'\n        software:\n          type: string\n          example: 'https://github.com/NPC-Chain/npcchub/releases/tag/v0.15.2'\n        switch_height:\n          type: string\n          example: '100'\n        threshold:\n          type: string\n          example: '0.8'"
		}
	},
	"Error": "parse: paths: /asset/tokens/{id}/mint: post: : requestBody: content: application/json: parse schema: parse schema: amount: parse schema: unexpected schema type: \"int\""
}