{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cedardevs/onestop"
		},
		"file": {
			"name": "openapi_base.yaml",
			"path": "registry/src/main/resources/openapi_base.yaml",
			"content": "##########\n# NOTE: This spec is combined with the JSON Schemas produced by the github.com/cedardevs/schemas project.\n# The generation is orchestrated by the generateOpenApi gradle task. The output is available locally under\n# `build/resources/static`, and is hosted by the running registry application at `/openapi.yaml`.\n##########\nopenapi: \"3.0.2\"\ninfo:\n  title: \"Persistent Streaming Inventory API\"\n  description: \"This file covers the `current` endpoint for the Persistent Streaming Inventory API. \u003cbr/\u003e\u003cbr/\u003e **Note**: For creating, modifying and removing a record, you must select at least one parameter. Calling the API by `id` and `source` parameter will provide the most precise results.\"\n  version: \"3.0.0-RC1\"\n  termsOfService: \"\"\n  contact:\n    name: \"Persistent Streaming Inventory API\"\n    email: \"cedar.cires@colorado.edu\"\n  license:\n    name: GNU GPL\n    url: 'https://www.gnu.org/licenses/gpl-2.0.en.html'\nservers:\n  - url: https://cedardevs.org/onestop/api/registry\n    description: development server\n  - url: localhost:8080\n    description: local standalone\n  - url: localhost/onestop/api/registry\n    description: local w/ proxy\nsecurity:\n  - app_id: []\nexternalDocs:\n  description: API Documentation (add the uri for the docs)\n  url: https://github.com/cedardevs/psi/tree/master/docs\npaths:\n  /metadata/{type}:\n    parameters:\n      - $ref: '#/components/parameters/metadataType'\n    post:\n      tags:\n        - Create or Replace a record\n      summary: \"Create or replace a metadata record from an unspecified source\"\n      description: \"Create a collection or granule record with unspecified source will be flagged as `unknown` source and a also random UUID will be assigned by the application. \u003cbr/\u003e\u003cbr/\u003e**Note**: Make sure you hold on to the assigned UUID if you want to update/delete the record later.\"\n      operationId: createRecord\n      requestBody:\n        $ref: '#/components/requestBodies/postBody'\n      responses:\n        '201':\n          $ref: '#/components/responses/createItem'\n        404:\n          $ref: '#/components/responses/error'\n    put:\n      tags:\n        - Create or Replace a record\n      summary: \"Create or replace a metadata record from an unspecified source\"\n      description: \"Create a collection or granule record with unspecified source will be flagged as `unknown` source and also a random UUID will be assigned by the application. \u003cbr/\u003e\u003cbr/\u003e**Note**: Make sure you hold on to the assigned UUID if you want to update/delete the record later.\"\n      operationId: createReplaceRecord\n      requestBody:\n        $ref: '#/components/requestBodies/postBody'\n      responses:\n        '201':\n          $ref: '#/components/responses/createItem'\n        404:\n          $ref: '#/components/responses/error'\n  /metadata/{type}/{id}:\n    parameters:\n      - $ref: '#/components/parameters/metadataType'\n      - $ref: '#/components/parameters/metadataUUID'\n    post:\n      tags:\n        - Create or Replace a record\n      summary: \"Create a metadata record from an unspecified source with provided id\"\n      description:  \"creating a collection or granule record with unspecified source will be flagged as `unknown` source.\"\n      operationId: createRecordById\n      requestBody:\n        $ref: '#/components/requestBodies/postBody'\n      responses:\n        '201':\n          $ref: '#/components/responses/createItem'\n        404:\n          $ref: '#/components/responses/error'\n    put:\n      tags:\n        - Create or Replace a record\n      summary: \"Create or replace a metadata record from an unspecified source with provided id\"\n      description: \"creating a collection or granule record with unspecified source will be flagged as `unknown` source.\"\n      operationId: createReplaceRecordById\n      requestBody:\n        $ref: '#/components/requestBodies/postBody'\n      responses:\n        '201':\n          $ref: '#/components/responses/createItem'\n        404:\n          $ref: '#/components/responses/error'\n    patch:\n      tags:\n        - Create or Modify a record\n      summary: \"Create or modify a metadata record from an unspecified source with provided id\"\n      description: \"Note: Creating a collection or granule record with unspecified source will be flagged as `unknown` source.\"\n      operationId: createModifyRecordById\n      requestBody:\n        $ref: '#/components/requestBodies/patchBody'\n      responses:\n        '201':\n          $ref: '#/components/responses/createItem'\n        404:\n          $ref: '#/components/responses/error'\n    delete:\n      tags:\n        - Remove parsed record\n      summary: \"Request to remove record with unspecified source\"\n      description: \"Note: Requesting a resource to be removed only removes the downstream processed/parsed data, but the actual input is flagged as `delete`\"\n      operationId: removedRecord\n      responses:\n        '201':\n          $ref: '#/components/responses/createItem'\n        404:\n          $ref: '#/components/responses/error'\n    get:\n      tags:\n        - Retrieve raw record\n      summary: \"Retrieve raw metadata record by id\"\n      operationId: showRecordByUUID\n      responses:\n        '200':\n          $ref: '#/components/responses/getRawItemById'\n        '404':\n          $ref: '#/components/responses/recordNotFound'\n  /metadata/{type}/{source}/{id}:\n    parameters:\n      - $ref: '#/components/parameters/metadataType'\n      - $ref: '#/components/parameters/metadataSource'\n      - $ref: '#/components/parameters/metadataUUID'\n    post:\n      tags:\n        - Create or Replace a record\n      summary: \"Create or replace a metadata record with specified source and provided id\"\n      description:  \"creating a collection or granule record with unspecified source will be flagged as `unknown` source.\"\n      operationId: createRecordFromSourceWithUUID\n      requestBody:\n        $ref: '#/components/requestBodies/postBody'\n      responses:\n        '201':\n          $ref: '#/components/responses/createItem'\n        404:\n          $ref: '#/components/responses/error'\n    put:\n      tags:\n        - Create or Replace a record\n      summary: \"Create or replace a metadata record with specified source and provided id\"\n      description: \"creating a collection or granule record with unspecified source will be flagged as `unknown` source.\"\n      operationId: createReplaceRecordFromSourceWithUUID\n      requestBody:\n        $ref: '#/components/requestBodies/postBody'\n      responses:\n        '201':\n          $ref: '#/components/responses/createItem'\n        404:\n          $ref: '#/components/responses/error'\n    patch:\n      tags:\n        - Create or Modify a record\n      summary: \"Create or modify a metadata record with specified source and provided id\"\n      description: \"Note: Creating a collection or granule record with unspecified source will be flagged as `unknown` source.\"\n      operationId: createModifyRecordFromSourceWithUUID\n      requestBody:\n        $ref: '#/components/requestBodies/patchBody'\n      responses:\n        '201':\n          $ref: '#/components/responses/createItem'\n        404:\n          $ref: '#/components/responses/error'\n    delete:\n      tags:\n        - Remove parsed record\n      summary: \"Request that a resource be removed\"\n      description: \"Note: Requesting a resource to be removed only removes the downstream processed/parsed data, but the actual input is flagged as `delete`\"\n      operationId: removedRecordFromSourceWithUUID\n      responses:\n        '201':\n          $ref: '#/components/responses/createItem'\n        404:\n          $ref: '#/components/responses/error'\n    get:\n      tags:\n        - Retrieve raw record\n      summary: \"Retrieve raw metadata record by source and id\"\n      operationId: showRecordByUUIDAndSource\n      responses:\n        '200':\n          $ref: '#/components/responses/getRawItemById'\n        '404':\n          $ref: '#/components/responses/recordNotFound'\n\n  /metadata/{type}/{id}/parsed:\n    parameters:\n      - $ref: '#/components/parameters/metadataType'\n      - $ref: '#/components/parameters/metadataSource'\n      - $ref: '#/components/parameters/metadataUUID'\n    get:\n      tags:\n        - Retrieve parsed record\n      summary: \"Retrieve parsed metadata record by source and id\"\n      operationId: showParsedRecordByUUID\n      responses:\n        '200':\n          $ref: '#/components/responses/getParsedItemById'\n        '404':\n          $ref: '#/components/responses/recordNotFound'\n\n  /metadata/{type}/{id}/resurrection:\n    parameters:\n      - $ref: '#/components/parameters/metadataType'\n      - $ref: '#/components/parameters/metadataUUID'\n    get:\n      tags:\n        - Restore parsed record\n      summary: \"Retrieve parsed metadata record by id\"\n      operationId: showResurrectionByUUID\n      responses:\n        '200':\n          $ref: '#/components/responses/getResurrection'\n\n  /metadata/{type}/{source}/{id}/parsed:\n    parameters:\n      - $ref: '#/components/parameters/metadataType'\n      - $ref: '#/components/parameters/metadataSource'\n      - $ref: '#/components/parameters/metadataUUID'\n    get:\n      tags:\n        - Retrieve parsed record\n      summary: \"Retrieve parsed metadata record by source and id\"\n      operationId: showParsedRecordByUUIDAndSource\n      responses:\n        '200':\n          $ref: '#/components/responses/getParsedItemById'\n        '404':\n          $ref: '#/components/responses/recordNotFound'\n  /metadata/{type}/{source}/{id}/resurrection:\n    parameters:\n      - $ref: '#/components/parameters/metadataType'\n      - $ref: '#/components/parameters/metadataSource'\n      - $ref: '#/components/parameters/metadataUUID'\n    get:\n      tags:\n        - Restore parsed record\n      summary: \"Recover parsed metadata record by source and id\"\n      operationId: showResurrectionByUUIDAndSource\n      responses:\n        '200':\n          $ref: '#/components/responses/getResurrection'\n\ncomponents:\n  securitySchemes:\n    app_id:\n      type: apiKey\n      description: API key to authorize requests. If you don't have a key, use `admin`.\n      name: admin\n      in: query\n  parameters:\n    metadataSource:\n      name: source\n      in: path\n      description: The source that generated this metadata record\n      required: true\n      schema:\n        enum:\n          - comet\n          - common-ingest\n          - unknown\n        type: string\n    metadataType:\n      description: The type of metadata i.e. granule or collection.\n      in: path\n      name: type\n      required: true\n      schema:\n        $ref: 'json/schema-definitions.json#/definitions/enum:org.cedar.schemas.avro.psi.RecordType'\n      examples:\n        deleted item:\n          summary: deleted ex - getRawItemById\n    metadataUUID:\n      description: The UUID associated with this record\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n\n  requestBodies:\n    postBody:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/defaultJsonPostBody'\n        application/xml:\n          schema:\n            $ref: '#/components/schemas/isoXmlDocument'\n      description: Either an ISO 19115 XML document or json\n      required: true\n    patchBody:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/defaultJsonPostBody'\n      description: Json\n      required: true\n\n  responses:\n    createItem:\n      description: Successful response contains metadata record id and type\n      content:\n        application/json:\n          schema:\n            title: record created\n            type: object\n            properties:\n              id:\n                $ref: '#/components/schemas/uuid'\n              types:\n                $ref: 'json/schema-definitions.json#/definitions/enum:org.cedar.schemas.avro.psi.RecordType'\n          example:\n            id: d290f1ee-6c54-4b01-90e6-d701748f0851\n            type: collection\n    error:\n      description: Unsuccessful operations will return a response body with\n      content:\n        text/plain:\n          schema:\n            title: Record not found\n            type: string\n            example: status 404 - Not found\n    getRawItemById:\n      description: Successful operations will return\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/rawInventoryItem'\n    getParsedItemById:\n      description: Successful operations will return\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/parsedInventoryItem'\n    getResurrection:\n      description: Successful operations will return\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/resurrectionInventoryItem'\n    recordNotFound:\n      description: Unsuccessful operations will return a response body with\n      content:\n        application/json:\n          schema:\n            title: record not found\n            type: object\n            properties:\n              link:\n                properties:\n                  self:\n                    format: uri\n                    type: string\n              errors:\n                $ref: 'json/schema-definitions.json#/definitions/record:org.cedar.schemas.avro.psi.ErrorEvent'\n            example:\n              link:  \"localhost/onestop/api/registry/metadata/collection/comet/9a0fe56\"\n              error:\n                status: 404\n                title: 404 NOT_FOUND\n                detail: No parsed values exist ...\n\n  schemas:\n    rawInventoryItem:\n      properties:\n        links:\n          properties:\n            parsed:\n              format: uri\n              type: string\n              example: \"localhost/onestop/api/registry/metadata/collection/comet/9a0fe56/parsed\"\n            self:\n              format: uri\n              type: string\n              example: \"localhost/onestop/api/registry/metadata/collection/comet/9a0fe56\"\n        data:\n          properties:\n            attributes:\n              $ref: 'json/schema-definitions.json#/definitions/record:org.cedar.schemas.avro.psi.Input'\n            id:\n              $ref: '#/components/schemas/uuid'\n            type:\n              $ref: 'json/schema-definitions.json#/definitions/enum:org.cedar.schemas.avro.psi.RecordType'\n          example:\n            attributes:\n              type: collection\n              content: '\u003cobjects\u003e\u003cobject\u003e\u003cid\u003e1\u003c/id\u003e\u003cname\u003enew\u003c/name\u003e\u003c/object\u003e\u003cobject\u003e\u003cid\u003e2\u003c/id\u003e\u003c/object\u003e\u003c/objects\u003e'\n              contentType: application/xml\n              method: POST\n              source: comet\n            id: d290f1ee-6c54-4b01-90e6-d701748f0851\n            type: collection\n\n    parsedInventoryItem:\n      properties:\n        links:\n          properties:\n            parsed:\n              format: uri\n              type: string\n              example: \"localhost/onestop/api/registry/metadata/collection/comet/9a0fe56/parsed\"\n            self:\n              format: uri\n              type: string\n              example: \"localhost/onestop/api/registry/metadata/collection/comet/9a0fe56\"\n        data:\n          properties:\n            attributes:\n              $ref: 'json/schema-definitions.json#/definitions/record:org.cedar.schemas.avro.psi.ParsedRecord'\n            id:\n              $ref: '#/components/schemas/uuid'\n            type:\n              $ref: 'json/schema-definitions.json#/definitions/enum:org.cedar.schemas.avro.psi.RecordType'\n          example:\n            attributes:\n              type: collection\n              discovery: {}\n              analysis: {}\n              errors: [ ]\n            id: d290f1ee-6c54-4b01-90e6-d701748f0851\n            type: collection\n    resurrectionInventoryItem:\n      properties:\n        id:\n          $ref: '#/components/schemas/uuid'\n        type:\n          $ref: 'json/schema-definitions.json#/definitions/enum:org.cedar.schemas.avro.psi.RecordType'\n      example:\n        id: d290f1ee-6c54-4b01-90e6-d701748f0851\n        type: collection\n\n    isoXmlDocument:\n      type: object\n\n    defaultJsonPostBody:\n      type: object\n\n    uuid:\n      format: uuid\n      type: string\n"
		}
	},
	"Error": "parse: /metadata/{type}/{source}/{id}: parameters: parse parameter \"\": resolve \"#/components/parameters/metadataType\" reference: schema: parse schema: reference \"json/schema-definitions.json#/definitions/enum:org.cedar.schemas.avro.psi.RecordType\": resolve reference \"json/schema-definitions.json#/definitions/enum:org.cedar.schemas.avro.psi.RecordType\": invalid schema reference \"json/schema-definitions.json#/definitions/enum:org.cedar.schemas.avro.psi.RecordType\""
}