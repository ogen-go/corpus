{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/devonfw/cobigen"
		},
		"file": {
			"name": "Input.yaml",
			"path": "cobigen-maven/cobigen-maven-systemtest/src/test/resources/testdata/systemtest/Devon4JTemplateTest/TestDifferentFileSystems/Input.yaml",
			"content": "openapi: 3.0.0\nservers:\n  - url: 'https://localhost:8081/server/services/rest'\n    description: Just some data\ninfo:\n  title: Devon Example\n  description: Example of a API definition\n  version: 1.0.0\n  x-rootpackage: com.devonfw.spoc.openapi\npaths:\n  /shopmanagement/v1/shop/{shopId}:\n    get:\n      operationId: findShop\n      parameters:\n        - name: shopId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 0\n            maximum: 50\n      responses:\n        '200':\n          description: Any\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Shop'\n            text/plain:\n              schema:\n                type: string\n        '404':\n          description: Not found\n  /salemanagement/v1/sale/{saleId}:\n    get:\n      operationId: findSale\n      parameters:\n        - name: saleId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Any\n  /salemanagement/v1/sale/{bla}:\n    get:\n      operationId: findSale\n      parameters:\n        - name: bla\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 10\n            maximum: 200\n      responses:\n        '200':\n          description: Any\n  /salemanagement/v1/sale/:\n    post:\n      responses:\n        '200':\n          description: Any\n      requestBody:\n        $ref: '#/components/requestBodies/ShopData'\n      tags:\n       - searchCriteria\n  /shopmanagement/v1/shop/new:\n    post:\n      responses:\n       '200':\n          description: Any\n      requestBody:\n        $ref: '#/components/requestBodies/ShopData'\ncomponents:\n    schemas:\n        Shop:\n          x-component: shopmanagement\n          description: Entity definiton of Shop\n          type: object\n          properties:\n            shopExample:\n              type: string\n              maxLength: 100\n              minLength: 5\n              uniqueItems: true\n          x-manytomany: Shop\n          x-onetoone: Sale\n        Sale:\n          x-component: salemanagement\n          description: Entity definiton of Shop\n          type: object\n          properties:\n            saleExample:\n              type: number\n              format: int64\n              maximum: 100\n              minimum: 0\n          x-onetoone: Shop\n          x-onetomany: Shop\n          required:\n            - saleExample\n    requestBodies:\n       ShopData:\n         content:\n           application/json:\n             schema:\n               $ref: '#/components/schemas/Shop'\n         required: true"
		}
	},
	"Error": "parse: paths: /salemanagement/v1/sale/{saleId}: get: duplicate operationId: \"findSale\""
}