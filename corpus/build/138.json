{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vanilla/vanilla"
		},
		"file": {
			"name": "notifications.yml",
			"path": "applications/dashboard/openapi/notifications.yml",
			"content": "openapi: 3.0.2\ninfo:\nx-resourceEvents:\n    notification:\n        x-addon: \"dashboard\"\n        name: \"Notification\"\n        type: \"notification\"\npaths:\n    /notifications:\n        get:\n            parameters:\n                - description: |\n                      Desired number of items per page.\n                  in: query\n                  name: limit\n                  schema:\n                      type: integer\n                      default: 30\n                      maximum: 100\n                      minimum: 1\n                - $ref: \"#/components/parameters/Page\"\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/NotificationSchema\"\n                                type: array\n                    description: Success\n            tags:\n                - Notifications\n            summary: List notifications for the current user.\n        patch:\n            summary: Mark all notifications read.\n            tags:\n                - Notifications\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/NotificationPatchSchema\"\n                required: true\n            responses:\n                \"204\":\n                    description: Success\n    \"/notifications/{id}\":\n        get:\n            parameters:\n                - description: |\n                      The notification ID.\n                  in: path\n                  name: id\n                  required: true\n                  schema:\n                      type: integer\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/NotificationSchema\"\n                    description: Success\n            tags:\n                - Notifications\n            summary: Get a single notification.\n        patch:\n            summary: Mark a notification read.\n            tags:\n                - Notifications\n            parameters:\n                - in: path\n                  name: id\n                  required: true\n                  schema:\n                      type: integer\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/NotificationPatchSchema\"\n                required: true\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/NotificationSchema\"\n                    description: Success\n    \"/notifications/{id}/read\":\n        put:\n            summary: Mark a notification read.\n            tags:\n                - Notifications\n            parameters:\n                - in: path\n                  name: id\n                  required: true\n                  schema:\n                      type: integer\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/NotificationSchema\"\n                    description: Success\ncomponents:\n    requestBodies:\n        NotificationSchema:\n            content:\n                application/json:\n                    schema:\n                        $ref: \"#/components/schemas/NotificationSchema\"\n            required: true\n    schemas:\n        NotificationSchema:\n            properties:\n                body:\n                    description: \"The notification text. This contains some HTML, but only \u003cb\u003e tags.\"\n                    type: string\n                dateInserted:\n                    description: When the notification was first made.\n                    format: date-time\n                    type: string\n                dateUpdated:\n                    description: \u003e-\n                        When the notification was last updated.\n\n\n                        Notifications on the same record will group together into a single\n                        notification, updating just the dateUpdated property.\n                    format: date-time\n                    type: string\n                notificationID:\n                    description: A unique ID to identify the notification.\n                    type: integer\n                photoUrl:\n                    description: An avatar or thumbnail associated with the notification.\n                    nullable: true\n                    type: string\n                read:\n                    description: Whether or not the notification has been seen.\n                    type: boolean\n                url:\n                    description: The target of the notification.\n                    type: string\n                readUrl:\n                    description: Url to read the notification.\n                    type: string\n            required:\n                - notificationID\n                - body\n                - photoUrl\n                - url\n                - dateInserted\n                - dateUpdated\n                - read\n            type: object\n        NotificationPatchSchema:\n            description: Fields for patching a notification.\n            type: object\n            properties:\n                read:\n                    type: boolean\n                    enum:\n                        - true\n"
		}
	},
	"Error": "parse: paths: /notifications: get: : parameters: parse parameter \"\": resolve \"#/components/parameters/Page\" reference: component by reference \"#/components/parameters/Page\" not found"
}