{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/disit/snap4city"
		},
		"file": {
			"name": "devicebrokervalue-openapiv3.json",
			"path": "swagger/internal/devicebrokervalue-openapiv3.json",
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\": \"Device, Broker and Value Mgmt API\",\n    \"version\": \"1.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://iotdirectory.snap4city.org/api\",\n      \"variables\": {\n        \"snap4city\": {\n          \"default\": \"snap4city\"\n        }\n      }\n    }\n  ],\n  \"paths\": {\n    \"/device.php\": {\n      \"summary\": \"Device Management\",\n      \"get\": {\n        \"tags\": [\n          \"Device\"\n        ],\n        \"summary\": \"Insert, update, delete, retrieve devices and device information.\",\n        \"description\": \"This API is for managing the IoT devices. It can be leveraged for inserting, updating, deleting, and retrieving information about a device of interest. \\n\\nFor any APIs an Authorization __token__ in the Bearer format in the HTTP Header has to be specified, depending on the choosen scenario (see \\\"nodered\\\" params below).\\n\\nThe __action__ input parameter indicates which operation has to be performed:\\n\\n* __Insert__ - This API is intended for inserting a new device in the Iot-Directory. The user has to specify the required parameters for inserting a device. The status of the operation is returned. This operation also provides the registration in the Knowledge Base. This API provides also the  registration in the specified context broker (when the context broker requires a specific registration).  \\n\\n* __Update__ - This API is intended for updating a device in the Iot-Directory. The user has to specify the required parameters for updating a device. The status of the operation is returned. This operation also provides the updating in the Knowledge base and the updating in the specified context broker.\\n\\n* __Delete__ - This API is intended for deleting a device from the Iot-Directory. The user has to specify the required parameters for deleting a device. The status of the operation is returned. This operation also provides the deletion from the Knowledge base and the deletion from corresponding context broker.\\n\\n* __Get all device__ - This API is intended for retrieving all device from the Iot-Directory. The status of the operation is returned together with the requested data.\\n\\n* __Get device attributes__ - This API is intended for retrieving all the values associated with devices from the Iot-Directory. The user has to specify the required parameters for retrieving all the attributes. The status of the operation is returned together with the requested data.\\n\\n* __Get device__ - This API is intended for retrieving all available information about the specified Device. The status of the operation is returned together with the requested data.\\n\\n* __Download__ - This API is intended for retrieving the private key / certificate of a Device created with Authentication factor. The status of the operation is returned together with the requested data.\\n\",\n        \"parameters\": [\n          {\n            \"name\": \"action\",\n            \"in\": \"query\",\n            \"description\": \"\\nThe operation to be performed.\\n\\n_Required for actions:_ insert, update, delete, get_device_attributes.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"insert\",\n                \"update\",\n                \"delete\",\n                \"get_all_device\",\n                \"get_device_attributes\",\n                \"get_param_values\"\n              ]\n            },\n            \"example\": \"insert\"\n          },\n          {\n            \"name\": \"nodered\",\n            \"in\": \"query\",\n            \"description\": \"If this parameter is present (it doesn't matter actually the passed value), the passed Authorization token has to be considered as an AccessToken, otherwise has to be considered as an RefreshToken\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"\u003cany-value\u003e\"\n          },\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"description\": \"\\nUnique identifier for the device (in the specified context broker). Has to be conformant to regex: /[^a-zA-Z0-9_-]/ (if the device is imported from external source the character : is supported)\\n\\n_Required for actions:_ insert, update, delete, get_device_attribute, get_device, download.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"provaMM7777\"\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"description\": \"\\nThe type of the device (e.g. Thermometer, TrainPass, Citylamp, fan). It cannot be modified in update.\\n\\n_Required for actions:_ insert, update.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"Thermometer\"\n          },\n          {\n            \"name\": \"contextbroker\",\n            \"in\": \"query\",\n            \"description\": \"\\nName of the context broker that handles the device. Has to be conformant to regex: /[^a-zA-Z0-9_-]/\\n\\n_Required for actions:_ insert, update, delete, get_device_attribute, get_device, download.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"mqttUNIFI\"\n          },\n          {\n            \"name\": \"gb_old_cb\",\n            \"in\": \"query\",\n            \"description\": \"\\nName of the OLD context broker in case of upated.\\n\\n_Required for actions:_ update.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"mqttUNIFI\"\n          },\n          {\n            \"name\": \"kind\",\n            \"in\": \"query\",\n            \"description\": \"\\nIt specifies if the value is a Sensor or an Actuator.\\n\\n_Required for actions:_ insert, update.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"sensor\",\n                \"actuator\"\n              ]\n            },\n            \"example\": \"sensor\"\n          },\n          {\n            \"name\": \"format\",\n            \"in\": \"query\",\n            \"description\": \"\\nFormat of the value: Csv, xml, JSON.\\n\\n_Required for actions:_ insert, update.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"csv\",\n                \"xml\",\n                \"json\"\n              ]\n            },\n            \"example\": \"csv\"\n          },\n          {\n            \"name\": \"latitude\",\n            \"in\": \"query\",\n            \"description\": \"\\nLatitude coordinate of the device location.\\n\\n_Required for actions:_ insert, update.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"maximum\": 90,\n              \"minimum\": -90\n            },\n            \"example\": 43.769562\n          },\n          {\n            \"name\": \"longitude\",\n            \"in\": \"query\",\n            \"description\": \"\\nLongitude coordinate of the device location.\\n\\n_Required for actions:_ insert, update.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"number\",\n              \"format\": \"float\",\n              \"maximum\": 180,\n              \"minimum\": -180\n            },\n            \"example\": 11.255814\n          },\n          {\n            \"name\": \"frequency\",\n            \"in\": \"query\",\n            \"description\": \"\\nFrequency at which it produces observations, in seconds.\\n\\n_Required for actions:_ insert, update.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"example\": 60\n          },\n          {\n            \"name\": \"attributes\",\n            \"in\": \"query\",\n            \"description\": \"\\nA list of JSON objects representing the values generated by a device for each observation. The value_name has to be conformant to regex: /[^a-zA-Z0-9_-]/\\n\\n_Required for actions:_ insert, update.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"minItems\": 1,\n              \"items\": {\n                \"$ref\": \"#/components/schemas/attribute\"\n              }\n            }\n          },\n          {\n            \"name\": \"deleteattributes\",\n            \"in\": \"query\",\n            \"description\": \"A list of JSON objects representing the values removed by a device. (when available otherwise string \\\"[]\\\"). The value_name has to be conformant to regex: /[^a-zA-Z0-9_-]/\\n\\n_Used in actions:_ update.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/attribute\"\n              }\n            }\n          },\n          {\n            \"name\": \"newattributes\",\n            \"in\": \"query\",\n            \"description\": \"A list of JSON objects representing the values added to a device. (when available otherwise string \\\"[]\\\"). The value_name has to be conformant to regex: /[^a-zA-Z0-9_-]/\\n\\n_Used in actions:_ update.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/attribute\"\n              }\n            }\n          },\n          {\n            \"name\": \"mac\",\n            \"in\": \"query\",\n            \"description\": \"\\nMac address of the device (when available otherwise empty string).\\n\\n_Used in actions:_ insert, update.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"00-14-22-01-23-45\"\n          },\n          {\n            \"name\": \"producer\",\n            \"in\": \"query\",\n            \"description\": \"\\nDevice producer (when available otherwise empty string).\\n\\n_Used in actions:_ insert, update.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"Arduino\"\n          },\n          {\n            \"name\": \"model\",\n            \"in\": \"query\",\n            \"description\": \"\\nDevice model (when available otherwise string \\\"custom\\\"). Has to be conformant to regex: /[^a-zA-Z0-9_-]/ and can include teh space character\\n\\n_Used in actions:_ insert, update.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"TMP36\"\n          },\n          {\n            \"name\": \"k1\",\n            \"in\": \"query\",\n            \"description\": \"\\nIt specify the first part of the secret in case the device is of a protected Model (when available otherwise empty string)\\n\\nUsed in actions:_ insert, update.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"ab68e819-74fb-46c1-906c-2e22ea3ca537\"\n          },\n          {\n            \"name\": \"k2\",\n            \"in\": \"query\",\n            \"description\": \"\\nIt specify the second part of the secret in case the device is of a protected Model (when available otherwise empty string)\\n\\nUsed in actions:_ insert, update.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"ab68e819-74fb-46c1-906c-2e22ea3ca537\"\n          },\n          {\n            \"name\": \"visibility\",\n            \"in\": \"query\",\n            \"description\": \"\\n__DEPRECATED__ It specify internally in the Iot-Directory if the IOT Device is Public or Private. (when available otherwise string \\\"private\\\")\\n\\nUsed in actions:_ insert, update.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"public\",\n                \"private\"\n              ]\n            },\n            \"example\": \"public\"\n          },\n          {\n            \"name\": \"shouldbeRegistered\",\n            \"in\": \"query\",\n            \"description\": \"\\nIf this parameter is present (it doesn't matter actually the passed value) the device should be registered in KB (when available otherwise string \\\"yes\\\")\\n\\nUsed in actions:_ insert.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"\u003cany-value\u003e\"\n          },\n          {\n            \"name\": \"service\",\n            \"in\": \"query\",\n            \"description\": \"\\nIn case of context broker Multi-tenancy, it specifies the name of the Tenant to be used (when available otherwise empty string)\\n\\nUsed in actions:_ insert, update, delete, get_device_attributes, get_device.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"House\"\n          },\n          {\n            \"name\": \"servicePath\",\n            \"in\": \"query\",\n            \"description\": \"\\nIn case of context broker Multi-tenancy, it specifies the path to be used (when available otherwise empty string)\\n\\nUsed in actions:_ insert, update, delete, get_device_attributes, get_device.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"/Floor1\"\n          },\n          {\n            \"name\": \"subnature\",\n            \"in\": \"query\",\n            \"description\": \"\\nKB Classification of the device (when available otherwise empty string)\\n\\nUsed in actions:_ insert, update.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"Beach_resort\"\n          },\n          {\n            \"name\": \"static_attributes\",\n            \"in\": \"query\",\n            \"description\": \"\\nA list of JSON objects representing the Static attributes of the device (when available otherwise  string \\\"[]\\\")\\n\\nUsed in actions:_ insert, update.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": [\n              [\n                \"http://schema.org/addressLocality\",\n                \"Firenze\"\n              ]\n            ]\n          },\n          {\n            \"name\": \"edgegateway_type\",\n            \"in\": \"query\",\n            \"description\": \"\\n__DEPRECATED__ Type of edge device (when available otherwise empty string)\\n\\nUsed in actions:_ insert, update.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"N/A\"\n          },\n          {\n            \"name\": \"edgegateway_uri\",\n            \"in\": \"query\",\n            \"description\": \"\\n__DEPRECATED__ URL of edge device (when available otherwise empty string)\\n\\nUsed in actions:_ insert, update.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"N/A\"\n          },\n          {\n            \"name\": \"length\",\n            \"in\": \"query\",\n            \"description\": \"\\nHow many entries to return (when available otherwise string \\\"-1\\\")\\n\\nUsed in actions:_ get_all_device.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"example\": 10\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"\\nStart point from entries to return (when available otherwise string \\\"1\\\")\\n\\nUsed in actions:_ get_all_device.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"example\": 1\n          },\n          {\n            \"name\": \"draw\",\n            \"in\": \"query\",\n            \"description\": \"\\nDraw point from entries to return (when available otherwise string \\\"1\\\")\\n\\nUsed in actions:_ get_all_device.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"example\": 1\n          },\n          {\n            \"name\": \"columns\",\n            \"in\": \"query\",\n            \"description\": \"\\nArray about the columns from entries to return (when available otherwise empty array)\\n\\nUsed in actions:_ get_all_device.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"filename\",\n            \"in\": \"query\",\n            \"description\": \"\\nFilename of the file to download\\n\\nUsed in actions:_ download.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"/private/prova-modello2-cert-key.pem /certsdb/prova-modello2-cert-crt.pem\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/device\"\n          }\n        }\n      }\n    },\n    \"/model.php\": {\n      \"summary\": \"Model Management\",\n      \"get\": {\n        \"tags\": [\n          \"Model\"\n        ],\n        \"summary\": \"Insert, update, delete, retrieve models and model information.\",\n        \"description\": \"This API is for managing the IoT models. It can be leveraged for inserting, updating, deleting, and retrieving information about a model of interest. \\n\\nFor any APIs an Authorization __token__ in the Bearer format in the HTTP Header has to be specified, depending on the choosen scenario (see \\\"nodered\\\" params below).\\n\\nThe __action__ input parameter indicates which operation has to be performed:\\n\\n* __Insert__ - This API is intended for inserting a new model in the Iot-Directory. The user has to specify the required parameters for inserting a model. The status of the operation is returned.  \\n\\n* __Update__ - This API is intended for updating a model in the Iot-Directory. The user has to specify the required parameters for updating a model. The status of the operation is returned. \\n\\n* __Delete__ - This API is intended for deleting a model from the Iot-Directory. The user has to specify the required parameters for deleting a model. The status of the operation is returned. \\n\\n* __Get all models__ - This API is intended for retrieving all models from the Iot-Directory. The status of the operation is returned together with the requested data.\\n\\n* __Get value attributes__ - This API is intended for retrieving all the values associated with model from the Iot-Directory. The user has to specify the required parameters for retrieving all the attributes. The status of the operation is returned together with the requested data.\\n\\n* __Get model__ - This API is intended for retrieving all available information about the specified model. The status of the operation is returned together with the requested data.\\n\\n* __Get all models DataTable__ - DEPRECATED (use __Get all models__ instead) This API is intended for retrieving all models from the Iot-Directory in a paginated way. The status of the operation is returned together with the requested data.\\n\",\n        \"parameters\": [\n          {\n            \"name\": \"action\",\n            \"in\": \"query\",\n            \"description\": \"\\nThe operation to be performed.\\n\\n_Required for actions:_ insert, update, delete, get_model, get_value_attributes, get_all_models, get_all_models_DataTable.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"insert\",\n                \"update\",\n                \"delete\",\n                \"get_model\",\n                \"get_value_attributes\",\n                \"get_all_models\",\n                \"get_all_models_DataTable\"\n              ]\n            },\n            \"example\": \"insert\"\n          },\n          {\n            \"name\": \"nodered\",\n            \"in\": \"query\",\n            \"description\": \"If this parameter is present (it doesn't matter actually the passed value), the passed Authorization token has to be considered as an AccessToken, otherwise has to be considered as an RefreshToken\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"\u003cany-value\u003e\"\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"\\nUnique name for the model. \\n\\n_Required for actions:_  insert, update, get_model.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"Model Thermo\"\n          },\n          {\n            \"name\": \"description\",\n            \"in\": \"query\",\n            \"description\": \"\\nDescription for the model. \\n\\n_Required for actions:_  insert, update.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"Thermo description model\"\n          },\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"description\": \"\\nUnique identifier for the model. Has to be conformant to regex: /[^a-zA-Z0-9_-]/ \\n\\n_Required for actions:_  update, delete, get_value_attribute.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": 100\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"description\": \"\\nThe type of the model (e.g. Thermometer, TrainPass, Citylamp, fan).\\n\\n_Required for actions:_ insert, update.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"Thermometer\"\n          },\n          {\n            \"name\": \"contextbroker\",\n            \"in\": \"query\",\n            \"description\": \"\\nName of the context broker that handles the device. Has to be conformant to regex: /[^a-zA-Z0-9_-]/\\n\\n_Required for actions:_ insert, update.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"mqttUNIFI\"\n          },\n          {\n            \"name\": \"kind\",\n            \"in\": \"query\",\n            \"description\": \"\\nIt specifies if the value is a Sensor or an Actuator.\\n\\n_Required for actions:_ insert, update.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"sensor\",\n                \"actuator\"\n              ]\n            },\n            \"example\": \"sensor\"\n          },\n          {\n            \"name\": \"format\",\n            \"in\": \"query\",\n            \"description\": \"\\nFormat of the value: Csv, xml, JSON.\\n\\n_Required for actions:_ insert, update.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"csv\",\n                \"xml\",\n                \"json\"\n              ]\n            },\n            \"example\": \"csv\"\n          },\n          {\n            \"name\": \"frequency\",\n            \"in\": \"query\",\n            \"description\": \"\\nFrequency at which it produces observations, in seconds.\\n\\n_Required for actions:_ insert, update.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"example\": 60\n          },\n          {\n            \"name\": \"kgenerator\",\n            \"in\": \"query\",\n            \"description\": \"\\nType of autehntication.\\n\\n_Required for actions:_ insert, update.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"normal\",\n                \"special\",\n                \"authenticated\"\n              ]\n            },\n            \"example\": \"normal\"\n          },\n          {\n            \"name\": \"hc\",\n            \"in\": \"query\",\n            \"description\": \"\\nDEPRECATED (use info in sensor value) Healthiness criteria \\n\\n_Required for actions:_ insert, update.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"refresh_rate\",\n                \"different_values\",\n                \"within_bounds\"\n              ]\n            },\n            \"example\": \"refresh_rate\"\n          },\n          {\n            \"name\": \"hv\",\n            \"in\": \"query\",\n            \"description\": \"\\nDEPRECATED (use info in sensor value) Healthiness value\\n\\n_Required for actions:_ insert, update.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": 300\n          },\n          {\n            \"name\": \"attributes\",\n            \"in\": \"query\",\n            \"description\": \"\\nA list of JSON objects representing the values generated by a device for each observation. The value_name has to be conformant to regex: /[^a-zA-Z0-9_-]/\\n\\n_Required for actions:_ insert, update.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"minItems\": 1,\n              \"items\": {\n                \"$ref\": \"#/components/schemas/attribute\"\n              }\n            }\n          },\n          {\n            \"name\": \"producer\",\n            \"in\": \"query\",\n            \"description\": \"\\nDevice producer (when available otherwise empty string). Here is required, meanwhile in device is not needed\\n\\n_Used in actions:_ insert, update.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"Arduino\"\n          },\n          {\n            \"name\": \"service\",\n            \"in\": \"query\",\n            \"description\": \"\\nIn case of context broker Multi-tenancy, it specifies the name of the Tenant to be used (when available otherwise empty string)\\n\\nUsed in actions:_ insert, update.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"House\"\n          },\n          {\n            \"name\": \"servicePath\",\n            \"in\": \"query\",\n            \"description\": \"\\nIn case of context broker Multi-tenancy, it specifies the path to be used (when available otherwise empty string)\\n\\nUsed in actions:_ insert, update.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"/Floor1\"\n          },\n          {\n            \"name\": \"subnature\",\n            \"in\": \"query\",\n            \"description\": \"\\nKB Classification of the device (when available otherwise empty string)\\n\\nUsed in actions:_ insert, update.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"Beach_resort\"\n          },\n          {\n            \"name\": \"static_attributes\",\n            \"in\": \"query\",\n            \"description\": \"\\nA list of JSON objects representing the Static attributes of the device (when available otherwise  string \\\"[]\\\")\\n\\nUsed in actions:_ insert, update.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": [\n              [\n                \"http://schema.org/addressLocality\",\n                \"Firenze\"\n              ]\n            ]\n          },\n          {\n            \"name\": \"edgegateway_type\",\n            \"in\": \"query\",\n            \"description\": \"\\n__DEPRECATED__ Type of edge device (when available otherwise empty string)\\n\\nUsed in actions:_ insert, update.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"N/A\"\n          },\n          {\n            \"name\": \"length\",\n            \"in\": \"query\",\n            \"description\": \"\\nHow many entries to return (when available otherwise string \\\"-1\\\") DEPRECATED (use Get all models instead)\\n\\nUsed in actions:_ get_all_models_DataTable.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"example\": 10\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"\\nStart point from entries to return (when available otherwise string \\\"1\\\") DEPRECATED (use Get all models instead)\\n\\nUsed in actions:_ get_all_models_DataTable.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"example\": 1\n          },\n          {\n            \"name\": \"draw\",\n            \"in\": \"query\",\n            \"description\": \"\\nDraw point from entries to return (when available otherwise string \\\"1\\\") DEPRECATED (use Get all models instead)\\n\\nUsed in actions:_ get_all_models_DataTable.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"example\": 1\n          },\n          {\n            \"name\": \"columns\",\n            \"in\": \"query\",\n            \"description\": \"\\nArray about the columns from entries to return (when available otherwise empty array) DEPRECATED (use Get all models instead)\\n\\nUsed in actions:_ get_all_models_DataTable.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/device\"\n          }\n        }\n      }\n    },\n    \"/contextbroker.php\": {\n      \"get\": {\n        \"tags\": [\n          \"Broker\"\n        ],\n        \"summary\": \"Insert, update, delete, retrieve context brokers and context broker information\",\n        \"description\": \"This API is for the management of the context brokers. It allows to insert, update, delete, get the full listing of the brokers. The __action__ input parameter indicates what operation has to be performed:\\n\\n* __Insert__ - This API is intended for inserting a new Context Broker in the Iot-Directory. The user has to specify the required parameters for inserting the Context Broker. The status of the operation is returned.\\n\\n* __Update__ - This API is intended for updating a Context Broker in the Iot-Directory. The user has to specify the required parameters for updating the Context Broker. The status of the operation is returned. \\n\\n* __Delete__ - This API is intended for deleting a Context Broker from the Iot-Directory. The user has to specify the required parameters for deleting the Context Broker. The status of the operation is returned. \\n\\n* __Get all Contextbroker__ - This API is intended for retrieving all Context Brokers from the Iot-Directory. The user has to specify no parameters. The status of the operation is returned, together with the requested data.\\n\\n* __Get services by cb name__ - This API is intended for retrieving Context Brokers services information in specific case of a context broker supporting NGSI with multitenancy. The user has to specify the required parameters. The status of the operation is returned, together with the requested data.\\n\",\n        \"parameters\": [\n          {\n            \"name\": \"action\",\n            \"in\": \"query\",\n            \"description\": \"The operation to be performed.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"insert\",\n                \"update\",\n                \"delete\",\n                \"get_all_contextbroker\",\n                \"get_services_by_cb_name\"\n              ]\n            },\n            \"example\": \"insert\"\n          },\n          {\n            \"name\": \"nodered\",\n            \"in\": \"query\",\n            \"description\": \"If this parameter is present (it doesn't matter actually the passed value), the passed Authorization token has to be considered as an AccessToken, otherwise has to be considered as an RefreshToken\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"\u003cany-value\u003e\"\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name of the Context Broker that handles different devices. It is a unique identifier.\\n\\n_Required for actions:_ insert, update, delete, get_services_by_cb_name.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"rabbitUNIMI\"\n          },\n          {\n            \"name\": \"kind\",\n            \"in\": \"query\",\n            \"description\": \"Kind of the Context Broker. It can be an Internal or External\\n\\n_Required for actions:_ insert, update.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"internal\",\n                \"external\"\n              ]\n            },\n            \"example\": \"internal\"\n          },\n          {\n            \"name\": \"ip\",\n            \"in\": \"query\",\n            \"description\": \"The Internet Protocol (IP) address of the Context Broker.\\n\\n_Required for actions:_ insert, update.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"159.149.129.184\"\n          },\n          {\n            \"name\": \"port\",\n            \"in\": \"query\",\n            \"description\": \"The port number of the Context Broker.\\n\\n_Required for actions:_ insert, update.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"example\": 1026\n          },\n          {\n            \"name\": \"protocol\",\n            \"in\": \"query\",\n            \"description\": \"The type of protocol supported by this Context Broker.\\n\\n_Required for actions:_ insert, update.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"amqp\",\n                \"coap\",\n                \"mqtt\",\n                \"ngsi\",\n                \"ngsi w/MultiService\",\n                \"sigfox\"\n              ]\n            },\n            \"example\": \"ngsi\"\n          },\n          {\n            \"name\": \"version\",\n            \"in\": \"query\",\n            \"description\": \"DEPRECATED The version of protocol supported by this Context Broker.\\n\\n_Required for actions:_ insert, update.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"v1\"\n          },\n          {\n            \"name\": \"latitude\",\n            \"in\": \"query\",\n            \"description\": \"Latitude coordinate of the Context Broker location (when available, otherwise an empty string).\\n\\n_Used in actions:_ insert, update.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": 43.769562\n          },\n          {\n            \"name\": \"longitude\",\n            \"in\": \"query\",\n            \"description\": \"Longitude coordinate of the Context Broker location (when available, otherwise an empty string).\\n\\n_Used in actions:_ insert, update.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": 11.255814\n          },\n          {\n            \"name\": \"login\",\n            \"in\": \"query\",\n            \"description\": \"Login name for authenticating to the Context Broker for Internal scenario (when available, otherwise an empty string).\\n\\n_Used in actions:_ insert, update.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"prova\"\n          },\n          {\n            \"name\": \"password\",\n            \"in\": \"query\",\n            \"description\": \"Login password for authenticating to the Context Broker for Internal scenario  (when available, otherwise an empty string).\\n\\n_Used in actions:_ insert, update.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"prova25\"\n          },\n          {\n            \"name\": \"sha\",\n            \"in\": \"query\",\n            \"description\": \"Sha of the certificate representing the Context Broker.\\n\\n_Used in actions:_ insert, update.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"efac28bd29b76c6fa9ba74efd937cd06ae992c8af23625a21a0471ff14800fed\"\n          },\n          {\n            \"name\": \"accesslink\",\n            \"in\": \"query\",\n            \"description\": \"external accesslink to contact the Context Broker.\\n\\n_Used in actions:_ insert, update.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"brokername.snap4city.org\"\n          },\n          {\n            \"name\": \"accessport\",\n            \"in\": \"query\",\n            \"description\": \"external accessport to contact the Context Broker.\\n\\n_Used in actions:_ insert, update.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": 80\n          },\n          {\n            \"name\": \"path\",\n            \"in\": \"query\",\n            \"description\": \"path to contact the Context Broker.\\n\\n_Used in actions:_ insert, update.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"/v2/entities\"\n          },\n          {\n            \"name\": \"visibility\",\n            \"in\": \"query\",\n            \"description\": \"DEPRECATED visibility to the Context Broker.\\n\\n_Used in actions:_ insert, update.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"private\"\n          },\n          {\n            \"name\": \"services\",\n            \"in\": \"query\",\n            \"description\": \"For Context Broker supporting ngsi with Multitenancy specify the list of available services.\\n\\n_Used in actions:_ insert, update.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"House\"\n          },\n          {\n            \"name\": \"urlnificallback\",\n            \"in\": \"query\",\n            \"description\": \"For Context Broker supporting ngsi, if specified, it subsbibe for callback\\n\\n_Used in actions:_ insert, update.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"http://192.168.1.1:5577\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/broker\"\n          }\n        }\n      }\n    },\n    \"/value.php\": {\n      \"summary\": \"Values Management\",\n      \"get\": {\n        \"tags\": [\n          \"Value\"\n        ],\n        \"summary\": \"Insert, update, delete, retrieve values and value information.\",\n        \"description\": \"This API is for the management of the event values. It allows to insert, update, delete, get the full listing of the event values, and check value informations. The __action__ input parameter indicates what operation has to be performed:\\n\\n* __Insert__ - This API is intended for inserting a new value with a device already registered in the Iot-Directory. The user has to specify the required parameters for inserting a value. The status of the operation is returned. This operation also provides the registration in the Knowledge Base. Finally the value is also reported in the structure of the device registered in the Context Broker (when this is required by the Context Broker).\\n\\n* __Update__ - This API is intended for updating a value with a device already registered in the Iot-Directory. The user has to specify the required parameters for updating a value. The status of the operation is returned. This operation also provides the updating on the Knowledge Base. Finally the value is also reported in the structure of the device registered in the Context Broker (when this is required by the Context Broker).\\n\\n* __Delete__ - This API is intended for deleting a value from the Iot-Directory. The user has to specify the required parameters for deleting a value. The status of the operation is returned. This operation also provides the deletion from the Knowledge Base.  \\n\\n* __Get all event values__ - This API is intended for retrieving all values from the Iot-Directory. The user has to specify no parameters. The status of the operation is returned, together with the requested data. \\n\\n* __Check if last value__ - This API is intended for retrieving the number of the value of a specific device. The user has to specify the required parameters. The status of the operation is returned.\\n\",\n        \"parameters\": [\n          {\n            \"name\": \"action\",\n            \"in\": \"query\",\n            \"description\": \"The operation to be performed.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"insert\",\n                \"update\",\n                \"delete\",\n                \"get_all_event_value\",\n                \"check_if_last_value\"\n              ]\n            },\n            \"example\": \"insert\"\n          },\n          {\n            \"name\": \"nodered\",\n            \"in\": \"query\",\n            \"description\": \"If this parameter is present (it doesn't matter actually the passed value), the passed Authorization token has to be considered as an AccessToken, otherwise has to be considered as an RefreshToken\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"\u003cany-value\u003e\"\n          },\n          {\n            \"name\": \"device\",\n            \"in\": \"query\",\n            \"description\": \"The device unique identifier.\\n\\n_Required for actions:_ insert, update, delete, check_if_last_value. \\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"provaMM77\"\n          },\n          {\n            \"name\": \"contextbroker\",\n            \"in\": \"query\",\n            \"description\": \"Name of the Context Broker that handles the device.\\n\\n_Required for actions:_ insert, update, delete, check_if_last_value. \\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"rabbitUNIMI\"\n          },\n          {\n            \"name\": \"value_name\",\n            \"in\": \"query\",\n            \"description\": \"Name of the value (and unique in the specified device and context broker).\\n\\n_Required for actions:_ insert, update, delete. \\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"ProvaVal\"\n          },\n          {\n            \"name\": \"data_type\",\n            \"in\": \"query\",\n            \"description\": \"Data type of the value (e.g. integer, float, string, boolean, and so on).\\n\\n_Required for actions:_ insert, update. \\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"binary\"\n          },\n          {\n            \"name\": \"value_type\",\n            \"in\": \"query\",\n            \"description\": \"Type of the value (e.g. Temperature, humidity, light, CO_concentration, and so on).\\n\\n_Required for actions:_ insert, update. \\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"actuator_canceller\"\n          },\n          {\n            \"name\": \"value_unit\",\n            \"in\": \"query\",\n            \"description\": \"Unit of measure of the value (eg. oC,  %, lux, ppm, and so on).\\n\\n_Required for actions:_ insert, update. \\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"lux\"\n          },\n          {\n            \"name\": \"editable\",\n            \"in\": \"query\",\n            \"description\": \"It specifies if the measure can be only read (false) or a value can be assigned (true). \\n\\n_Required for actions:_ insert, update, delete.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"boolean\"\n            },\n            \"example\": true\n          },\n          {\n            \"name\": \"healthiness_criteria\",\n            \"in\": \"query\",\n            \"description\": \"The type of check to perform on values (value_refresh_rate, different_values or value_bounds).\\n\\n_Required for actions:_ insert, update.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"value_refresh_rate\",\n                \"different_values\",\n                \"value_bounds\"\n              ]\n            },\n            \"example\": \"value_refresh_rate\"\n          },\n          {\n            \"name\": \"healthiness_value\",\n            \"in\": \"query\",\n            \"description\": \"Healthiness value related to the healthiness criteria. The interpretetation varies depending of the adopted healthiness criteria: it could be the frequence of data acquisition (e.g. 300 seconds), the number of last values that have to have at least two different values, or the min and max allowed values.\\n\\n_Required for actions:_ insert, update.\\n\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": 100\n          },\n          {\n            \"name\": \"length\",\n            \"in\": \"query\",\n            \"description\": \"\\nHow many entries to return (when available otherwise string \\\"-1\\\")\\n\\nUsed in actions:_ get_all_event_value.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"example\": 10\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"\\nStart point from entries to return (when available otherwise string \\\"1\\\")\\n\\nUsed in actions:_ get_all_event_value.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"example\": 1\n          },\n          {\n            \"name\": \"draw\",\n            \"in\": \"query\",\n            \"description\": \"\\nDraw point from entries to return (when available otherwise string \\\"1\\\")\\n\\nUsed in actions:_ get_all_event_value.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"example\": 1\n          },\n          {\n            \"name\": \"columns\",\n            \"in\": \"query\",\n            \"description\": \"\\nArray about the columns from entries to return (when available otherwise empty array)\\n\\nUsed in actions:_ get_all_event_value.\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/value\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"securitySchemes\": {\n      \"accessToken\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\",\n        \"bearerFormat\": \"JWT\"\n      }\n    },\n    \"schemas\": {\n      \"attribute\": {\n        \"description\": \"A type of detection that a device is capable to perform.\",\n        \"type\": \"object\",\n        \"required\": [\n          \"data_type\",\n          \"value_unit\",\n          \"value_type\",\n          \"healthiness_criteria\",\n          \"helthiness_value\"\n        ],\n        \"properties\": {\n          \"value_name\": {\n            \"description\": \"Name of the value.\",\n            \"type\": \"string\",\n            \"example\": \"a\"\n          },\n          \"data_type\": {\n            \"description\": \"Basic type of the value (e.g. string, integer).\",\n            \"type\": \"string\",\n            \"example\": \"binary\"\n          },\n          \"value_type\": {\n            \"description\": \"A semantic description of the value.\",\n            \"type\": \"string\",\n            \"example\": \"actuator_canceller\"\n          },\n          \"editable\": {\n            \"description\": \"If the value can be only read or its value can be also updated.\",\n            \"type\": \"string\",\n            \"example\": 0\n          },\n          \"value_unit\": {\n            \"description\": \"Unit of measure of the value.\",\n            \"type\": \"string\",\n            \"example\": \"A\"\n          },\n          \"healthiness_criteria\": {\n            \"description\": \"How the healthy status of the device should be determined.\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"refresh_rate\",\n              \"different_values\",\n              \"value_bounds\"\n            ],\n            \"example\": \"refresh_rate\"\n          },\n          \"healthiness_value\": {\n            \"description\": \"The corresponding value.\",\n            \"type\": \"string\",\n            \"example\": 3600\n          }\n        }\n      }\n    },\n    \"responses\": {\n      \"device\": {\n        \"description\": \"JSON document where the status of the operation and the possible retrieved data can be found.\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"required\": [\n                \"status\",\n                \"visibility\",\n                \"active\"\n              ],\n              \"properties\": {\n                \"status\": {\n                  \"description\": \"The mandatory status of the operation: Ok, or Ko.\\n\\n_Returned by all actions._\\n\",\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"ok\",\n                    \"ko\"\n                  ],\n                  \"example\": \"ok\"\n                },\n                \"msg\": {\n                  \"description\": \"A message related to the execution of the operation.\\n\\n_Returned by all actions._\\n\",\n                  \"type\": \"string\"\n                },\n                \"visibility\": {\n                  \"description\": \"The visibility reported in input: public, or private.\\n\\n_Returned by actions:_ insert, update.\\n\",\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"public\",\n                    \"private\"\n                  ],\n                  \"example\": \"public\"\n                },\n                \"active\": {\n                  \"description\": \"Whether the device has been properly inserted in the Knowledge Base: true, or false.\\n\\n_Returned by actions:_ insert, update.\\n\",\n                  \"type\": \"boolean\",\n                  \"example\": true\n                },\n                \"content\": {\n                  \"oneOf\": [\n                    {\n                      \"description\": \"A JSON list where information about the devices can be found.\\n\\n_Returned by actions:_ get_all_device.\\n\",\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"contextBroker\": {\n                            \"type\": \"string\",\n                            \"example\": \"orionUNIMI\"\n                          },\n                          \"device\": {\n                            \"type\": \"string\",\n                            \"example\": \"ARDUINO_ST_4201\"\n                          },\n                          \"uri\": {\n                            \"type\": \"string\",\n                            \"format\": \"uri\",\n                            \"example\": \"http://www.disit.org/km4city/resource/iot/orionUNIMI/ARDUINO_ST_4201\"\n                          },\n                          \"devicetype\": {\n                            \"type\": \"string\",\n                            \"example\": \"Temperature\"\n                          },\n                          \"kind\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"sensor\",\n                              \"actuator\"\n                            ]\n                          },\n                          \"status1\": {\n                            \"type\": \"string\",\n                            \"example\": \"active\"\n                          },\n                          \"macaddress\": {\n                            \"type\": \"string\",\n                            \"nullable\": true,\n                            \"example\": \"00-14-22-01-23-45\"\n                          },\n                          \"model\": {\n                            \"type\": \"string\",\n                            \"nullable\": true,\n                            \"example\": \"ARDUINO_ST_4203\"\n                          },\n                          \"producer\": {\n                            \"type\": \"string\",\n                            \"nullable\": true,\n                            \"example\": \"Arduino\"\n                          },\n                          \"longitude\": {\n                            \"type\": \"number\",\n                            \"format\": \"float\",\n                            \"example\": 9.214914\n                          },\n                          \"latitude\": {\n                            \"type\": \"number\",\n                            \"format\": \"float\",\n                            \"example\": 45.463701\n                          },\n                          \"protocol\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"mqtt\",\n                              \"ngsi\",\n                              \"amqp\"\n                            ],\n                            \"example\": \"mqtt\"\n                          },\n                          \"format\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"csv\",\n                              \"xml\",\n                              \"json\"\n                            ],\n                            \"example\": \"csv\"\n                          },\n                          \"visibility\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"public\",\n                              \"private\"\n                            ],\n                            \"example\": \"public\"\n                          },\n                          \"frequency\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"nullable\": true,\n                            \"example\": 60\n                          },\n                          \"created\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\",\n                            \"example\": \"2018-03-12T15:21:00.000Z\"\n                          }\n                        }\n                      }\n                    },\n                    {\n                      \"description\": \"A JSON list where information about the device attributes can be found.\\n\\n_Returned by actions:_ get_device_attributes.\\n\",\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"contextBroker\": {\n                            \"type\": \"string\",\n                            \"example\": \"orionUNIMI\"\n                          },\n                          \"device\": {\n                            \"type\": \"string\",\n                            \"example\": \"ARDUINO_ST_4201\"\n                          },\n                          \"value_name\": {\n                            \"type\": \"string\",\n                            \"example\": \"latitude\"\n                          },\n                          \"data_type\": {\n                            \"type\": \"string\",\n                            \"example\": \"float\"\n                          },\n                          \"value_type\": {\n                            \"type\": \"string\",\n                            \"example\": \"latitude\"\n                          },\n                          \"editable\": {\n                            \"type\": \"string\",\n                            \"example\": 0\n                          },\n                          \"value_unit\": {\n                            \"type\": \"string\",\n                            \"example\": \"A\"\n                          },\n                          \"order\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"example\": 1\n                          },\n                          \"healthiness_criteria\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"refresh_rate\",\n                              \"different_values\",\n                              \"value_bounds\"\n                            ],\n                            \"example\": \"refresh_rate\"\n                          },\n                          \"healthiness_value\": {\n                            \"type\": \"string\",\n                            \"example\": 300\n                          }\n                        }\n                      }\n                    }\n                  ]\n                },\n                \"value_type\": {\n                  \"description\": \"A JSON list containing the supported value types in the Knowledge Base.\\n\\n_Returned by actions:_ get_param_values.\\n\",\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\",\n                    \"example\": \"actuator_canceller\"\n                  }\n                },\n                \"data_type\": {\n                  \"description\": \"A JSON list containing the supported data types in the Knowledge Base.\\n\\n_Returned by actions:_ get_param_values.\\n\",\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\",\n                    \"example\": \"binary\"\n                  }\n                },\n                \"value_unit\": {\n                  \"description\": \"A JSON list containing the supported value units in the Knowledge Base.\\n\\n_Returned by actions:_ get_param_values.\\n\",\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\",\n                    \"example\": \"A\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"broker\": {\n        \"description\": \"JSON document where the status of the operation and the possible retrieved data can be found.\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"required\": [\n                \"status\"\n              ],\n              \"properties\": {\n                \"status\": {\n                  \"description\": \"The mandatory status of the operation: Ok, or Ko.\\n\\n_Returned by all actions._\\n\",\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"ok\",\n                    \"ko\"\n                  ],\n                  \"example\": \"ok\"\n                },\n                \"msg\": {\n                  \"description\": \"A message related to the execution of the operation.\\n\\n_Returned by all actions._\\n\",\n                  \"type\": \"string\"\n                },\n                \"content\": {\n                  \"oneOf\": [\n                    {\n                      \"description\": \"A list of the identified context brokers. \\n\\n_Returned by actions:_ get_all_contextbroker.\\n\",\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"contextbroker\": {\n                            \"type\": \"string\",\n                            \"example\": \"mqttUNIFI\"\n                          },\n                          \"protocol\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"mqtt\",\n                              \"amqp\",\n                              \"ngsi\"\n                            ],\n                            \"example\": \"mqtt\"\n                          },\n                          \"ip\": {\n                            \"type\": \"string\",\n                            \"example\": \"192.168.1.10\"\n                          },\n                          \"port\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"example\": 1883\n                          },\n                          \"uri\": {\n                            \"type\": \"string\",\n                            \"nullable\": true,\n                            \"example\": \"http://www.disit.org/km4city/resource/iot/mqttUNIFI\"\n                          },\n                          \"login\": {\n                            \"type\": \"string\",\n                            \"example\": \"brokeruser\"\n                          },\n                          \"password\": {\n                            \"type\": \"string\",\n                            \"example\": \"brokerpwd\"\n                          },\n                          \"latitude\": {\n                            \"type\": \"number\",\n                            \"format\": \"float\",\n                            \"example\": 43.7731\n                          },\n                          \"longitude\": {\n                            \"type\": \"number\",\n                            \"format\": \"float\",\n                            \"example\": 11.256\n                          },\n                          \"created\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\",\n                            \"example\": \"2018-02-07T15:14:39.000Z\"\n                          }\n                        }\n                      }\n                    },\n                    {\n                      \"description\": \"A list of devices present on the server that can be accessed relying on the device name.\\n\\n_Returned by actions:_ get_config_data.\\n\",\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"additionalProperties\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"entityType\": {\n                              \"type\": \"string\",\n                              \"example\": \"Temperature\"\n                            },\n                            \"kind\": {\n                              \"type\": \"string\",\n                              \"enum\": [\n                                \"sensor\",\n                                \"actuator\"\n                              ],\n                              \"example\": \"sensor\"\n                            },\n                            \"protocol\": {\n                              \"type\": \"string\",\n                              \"enum\": [\n                                \"ngsi\",\n                                \"mqtt\",\n                                \"amqp\"\n                              ],\n                              \"example\": \"ngsi\"\n                            },\n                            \"longitude\": {\n                              \"type\": \"number\",\n                              \"format\": \"float\",\n                              \"example\": 9.214914\n                            },\n                            \"latitude\": {\n                              \"type\": \"number\",\n                              \"format\": \"float\",\n                              \"example\": 45.463701\n                            },\n                            \"contextBroker\": {\n                              \"type\": \"string\",\n                              \"example\": \"orionUNIMI\"\n                            },\n                            \"name\": {\n                              \"type\": \"string\",\n                              \"example\": \"orionUNIMI\"\n                            },\n                            \"type\": {\n                              \"type\": \"string\",\n                              \"enum\": [\n                                \"ngsi\",\n                                \"mqtt\",\n                                \"amqp\"\n                              ],\n                              \"example\": \"mqtt\"\n                            },\n                            \"ip\": {\n                              \"type\": \"string\",\n                              \"example\": \"159.149.129.184\"\n                            },\n                            \"port\": {\n                              \"type\": \"integer\",\n                              \"format\": \"int32\",\n                              \"example\": 1026\n                            }\n                          }\n                        }\n                      }\n                    },\n                    {\n                      \"description\": \"A list of values associated with the devices present on the system.\\n\\n_Returned by actions:_ get_config_data_values.\\n\",\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"cb\": {\n                            \"type\": \"string\",\n                            \"example\": \"rabbitUNIMI\"\n                          },\n                          \"device\": {\n                            \"type\": \"string\",\n                            \"example\": \"provaMM7779\"\n                          },\n                          \"value_name\": {\n                            \"type\": \"string\",\n                            \"example\": \"a\"\n                          },\n                          \"data_type\": {\n                            \"type\": \"string\",\n                            \"example\": \"binary\"\n                          },\n                          \"value_type\": {\n                            \"type\": \"string\",\n                            \"example\": \"actuator_canceller\"\n                          },\n                          \"editable\": {\n                            \"type\": \"string\",\n                            \"example\": 0\n                          },\n                          \"value_unit\": {\n                            \"type\": \"string\",\n                            \"example\": \"A\"\n                          },\n                          \"healthiness_criteria\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"refresh_rate\",\n                              \"different_values\",\n                              \"value_bounds\"\n                            ],\n                            \"example\": \"refresh_rate\"\n                          },\n                          \"longitude\": {\n                            \"type\": \"number\",\n                            \"format\": \"float\",\n                            \"example\": 9.214914\n                          },\n                          \"latitude\": {\n                            \"type\": \"number\",\n                            \"format\": \"float\",\n                            \"example\": 45.463701\n                          },\n                          \"protocol\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"ngsi\",\n                              \"mqtt\",\n                              \"amqp\"\n                            ],\n                            \"example\": \"ngsi\"\n                          }\n                        }\n                      }\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      },\n      \"value\": {\n        \"description\": \"JSON document where the status of the operation and the possible retrieved data can be found.\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"required\": [\n                \"status\"\n              ],\n              \"properties\": {\n                \"status\": {\n                  \"description\": \"The mandatory status of the operation: Ok, or Ko.\\n\\n_Returned by all actions._\\n\",\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"ok\",\n                    \"ko\"\n                  ],\n                  \"example\": \"ok\"\n                },\n                \"msg\": {\n                  \"description\": \"A message related to the execution of the operation.\\n\\n_Returned by all actions._\\n\",\n                  \"type\": \"string\"\n                },\n                \"content\": {\n                  \"oneOf\": [\n                    {\n                      \"description\": \"A list of values associated with devices of the system.\\n\\n_Returned by actions:_ get_all_event_value.\\n\",\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"cb\": {\n                            \"type\": \"string\",\n                            \"example\": \"orionUNIMI\"\n                          },\n                          \"device\": {\n                            \"type\": \"string\",\n                            \"example\": \"ARDUINO_ST_4201\"\n                          },\n                          \"value_name\": {\n                            \"type\": \"string\",\n                            \"example\": \"latitude\"\n                          },\n                          \"data_type\": {\n                            \"type\": \"string\",\n                            \"example\": \"float\"\n                          },\n                          \"value_type\": {\n                            \"type\": \"string\",\n                            \"example\": \"latitude\"\n                          },\n                          \"editable\": {\n                            \"type\": \"string\",\n                            \"example\": 0\n                          },\n                          \"value_unit\": {\n                            \"type\": \"string\",\n                            \"example\": \"A\"\n                          },\n                          \"healthiness_criteria\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"refresh_rate\",\n                              \"different_values\",\n                              \"value_bounds\"\n                            ],\n                            \"example\": \"refresh_rate\"\n                          },\n                          \"value_refresh_rate\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"example\": 300\n                          },\n                          \"different_values\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"nullable\": true,\n                            \"example\": 10\n                          },\n                          \"value_bounds\": {\n                            \"type\": \"string\",\n                            \"nullable\": true,\n                            \"example\": 620\n                          },\n                          \"order\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"example\": 1\n                          },\n                          \"kind\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"sensor\",\n                              \"actuator\"\n                            ],\n                            \"example\": \"sensor\"\n                          },\n                          \"latitude\": {\n                            \"type\": \"number\",\n                            \"format\": \"float\",\n                            \"example\": 45.463701\n                          },\n                          \"longitude\": {\n                            \"type\": \"number\",\n                            \"format\": \"float\",\n                            \"example\": 9.214914\n                          },\n                          \"status1\": {\n                            \"type\": \"string\",\n                            \"example\": \"active\"\n                          },\n                          \"visibility\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"public\",\n                              \"private\"\n                            ],\n                            \"example\": \"public\"\n                          }\n                        }\n                      }\n                    },\n                    {\n                      \"description\": \"The information associated with the specified value_name.\\n\\n_Returned by actions:_ get_event_value.\\n\",\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"cb\": {\n                            \"type\": \"string\",\n                            \"example\": \"orionUNIMI\"\n                          },\n                          \"device\": {\n                            \"type\": \"string\",\n                            \"example\": \"ARDUINO_ST_4201\"\n                          },\n                          \"value_name\": {\n                            \"type\": \"string\",\n                            \"example\": \"latitude\"\n                          },\n                          \"data_type\": {\n                            \"type\": \"string\",\n                            \"example\": \"float\"\n                          },\n                          \"value_type\": {\n                            \"type\": \"string\",\n                            \"example\": \"latitude\"\n                          },\n                          \"editable\": {\n                            \"type\": \"string\",\n                            \"example\": 0\n                          },\n                          \"value_unit\": {\n                            \"type\": \"string\",\n                            \"example\": \"A\"\n                          },\n                          \"healthiness_criteria\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                              \"refresh_rate\",\n                              \"different_values\",\n                              \"value_bounds\"\n                            ],\n                            \"example\": \"refresh_rate\"\n                          },\n                          \"value_refresh_rate\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"example\": 300\n                          },\n                          \"different_values\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"nullable\": true,\n                            \"example\": 10\n                          },\n                          \"value_bounds\": {\n                            \"type\": \"string\",\n                            \"nullable\": true,\n                            \"example\": 620\n                          },\n                          \"order\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"example\": 1\n                          }\n                        }\n                      }\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
		}
	},
	"Error": "make ir: path \"/model.php\": get: parameters: nested objects not allowed"
}