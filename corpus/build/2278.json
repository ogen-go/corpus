{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/open-traffic-generator/openapiart"
		},
		"file": {
			"name": "service_a.api.yaml",
			"path": "openapiart/goserver/api/service_a.api.yaml",
			"content": "openapi: 3.0.3\n\ninfo:\n  title: Schema for Service1\n  version: 0.0.0\n  description: \u003e-\n    Each service should be defined in individual yaml files.\n    If the service has a small API and model set it can be defined in a single file,\n    else it is recommended to split it into\n      apitest.api.yaml  - for api dfinition\n      apitest.yaml      - for model definition used by the service\n\npaths:\n\n  /apitest:\n    get:\n      tags: [ApiTest]\n      operationId: GetRootResponse\n      description: simple GET api with single return type\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './common.yaml#/components/schemas/Common.ResponseSuccess'\n        '400':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './common.yaml#/components/schemas/Common.ResponseError'\n        '500':\n          description: Error500\n          content:\n            application/json:\n              schema:\n                $ref: './common.yaml#/components/schemas/Common.ResponseError'\n    delete:\n      tags: [ApiTest]\n      operationId: dummyResponseTest\n      responses:\n        '200':\n          description: |-\n            OK\n          content:\n            text/plain:\n              schema:\n                type: string\n        '400':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './common.yaml#/components/schemas/Common.ResponseError'\n        '500':\n          description: Error500\n          content:\n            application/json:\n              schema:\n                $ref: './common.yaml#/components/schemas/Common.ResponseError'\n    post:\n      tags: [ApiTest]\n      operationId: PostRootResponse\n      description: simple POST api with single return type\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: './service_a.yaml#/components/schemas/ApiTest.InputBody'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './common.yaml#/components/schemas/Common.ResponseSuccess'\n        '400':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './common.yaml#/components/schemas/Common.ResponseError'\n        '500':\n          description: Error500\n          content:\n            application/json:\n              schema:\n                $ref: './common.yaml#/components/schemas/Common.ResponseError'\n"
		}
	},
	"Error": "parse: paths: /apitest: get: GetRootResponse: responses: 400: content: application/json: schema: parse schema: reference \"./common.yaml#/components/schemas/Common.ResponseError\": resolve reference \"./common.yaml#/components/schemas/Common.ResponseError\": invalid schema reference \"./common.yaml#/components/schemas/Common.ResponseError\""
}