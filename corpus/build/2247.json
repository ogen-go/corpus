{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bcgov/common-document-generation-service"
		},
		"file": {
			"name": "v2.api-spec.yaml",
			"path": "app/src/docs/v2.api-spec.yaml",
			"content": "---\nopenapi: 3.0.3\ninfo:\n  version: 2.0.0\n  title: Common Document Generation Service API\n  description: \u003e-\n    CDOGS - A common hosted service (API) for generating documents from\n    templates, data documents, and assets\n  license:\n    name: Apache 2.0\n    url: \"https://www.apache.org/licenses/LICENSE-2.0.html\"\n  contact:\n    name: NR Common Service Showcase\n    email: NR.CommonServiceShowcase@gov.bc.ca\nservers:\n  - url: /api/v2\n    description: This Server\nsecurity:\n  - BearerAuth: []\n    OpenID: []\npaths:\n  /fileTypes:\n    get:\n      summary: Returns a dictionary of supported input template file types and output file types.\n      description: \u003e-\n        This endpoint checks the supported file types defined by the Carbone JS library.\n      operationId: getFileTypes\n      tags:\n        - FileTypes\n      responses:\n        \"200\":\n          description: Returns the supported combinations of input templates and output file types\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileTypes\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /health:\n    get:\n      summary: Returns a health check.\n      description: \u003e-\n        This endpoint is used to see if the API is up and running.\n      operationId: getHealth\n      tags:\n        - Health\n      responses:\n        \"200\":\n          description: Indicates API is running\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /render/{uid}:\n    get:\n      summary: Check if generated file/report has been cached.\n      description: \u003e-\n        This endpoint returns OK if a generated file can be retrieved from the cache.\n      operationId: getReport\n      parameters:\n        - in: path\n          name: uid\n          schema:\n            type: string\n          required: true\n          description: Hash for file, returned via X-Report-Hash headers when report generated\n        - in: query\n          name: download\n          schema:\n            type: boolean\n          required: false\n          description: Indicate if the response should return the binary file\n      tags:\n        - Render\n      responses:\n        \"200\":\n          description: Returns OK if file can be found in cache; also returns file if download=true\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n                description: Raw binary-encoded response\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    delete:\n      summary: Remove file from cache.\n      description: \u003e-\n        This endpoint returns OK if a file has been removed from cache.\n      operationId: deleteReport\n      parameters:\n        - in: path\n          name: uid\n          schema:\n            type: string\n          required: true\n          description: Hash for file, returned via X-Report-Hash headers when report generated\n      tags:\n        - Render\n      responses:\n        \"200\":\n          description: Returns OK if file was found and removed/deleted\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /template:\n    post:\n      summary: Upload a template\n      description: \u003e-\n        This endpoint accepts a template to be used for report generation/render.\n      operationId: uploadTemplate\n      tags:\n        - Template\n      requestBody:\n        description: Fields required to generate a document\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                template:\n                  type: binary\n      responses:\n        \"200\":\n          description: Returns the supplied document with variables merged in\n          content:\n            application/json:\n              schema:\n                type: string\n                description: Hash/Key/Id for template\n          headers:\n            X-Template-Hash:\n              schema:\n                type: string\n              description: UUID for template cached on server.\n              example: 742d642a4704eb1babd8122ce0f03f209354279ae8292bb3961d13e21578b855\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"405\":\n          description: Template already cached\n          content:\n            application/json:\n              schema:\n                  type: object\n                  required:\n                    - type\n                    - title\n                    - status\n                    - detail\n                    - hash\n                  properties:\n                    type:\n                      type: string\n                      description: \"What type of problem, link to explanation of problem\"\n                      example: https://httpstatuses.com/405\n                    title:\n                      type: string\n                      description: \"Title of problem, generally the Http Status Code\"\n                      example: Method Not Allowed\n                    status:\n                      type: string\n                      description: The Http Status code\n                      example: 405\n                    detail:\n                      type: string\n                      description: Short description of why this problem was raised.\n                      example: File already cached. Hash '742d642a4704eb1babd8122ce0f03f209354279ae8292bb3961d13e21578b855'.\n                    hash:\n                      type: string\n                      description: UUID for template cached on server.\n                      example: 742d642a4704eb1babd8122ce0f03f209354279ae8292bb3961d13e21578b855\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /template/{uid}:\n    get:\n      summary: Check if template has been cached.\n      description: \u003e-\n        This endpoint returns OK if a template file can be retrieved from the cache.\n      operationId: getTemplate\n      parameters:\n        - in: path\n          name: uid\n          schema:\n            type: string\n          required: true\n          description: Hash for template, returned via X-Template-Hash headers when template uploaded\n        - in: query\n          name: download\n          schema:\n            type: boolean\n          required: false\n          description: Indicate if the response should return the binary file\n      tags:\n        - Template\n      responses:\n        \"200\":\n          description: Returns OK if file can be found in cache; also returns file if download=true\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n                description: Raw binary-encoded response\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    delete:\n      summary: Remove file from cache.\n      description: \u003e-\n        This endpoint returns OK if a file has been removed from cache.\n      operationId: deleteTemplate\n      parameters:\n        - in: path\n          name: uid\n          schema:\n            type: string\n          required: true\n          description: Hash for file, returned via X-Template-Hash headers when template uploaded\n      tags:\n        - Template\n      responses:\n        \"200\":\n          description: Returns OK if file was found and removed/deleted\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /template/{uid}/render:\n    post:\n      summary: Generate a document from existing Template\n      description: \u003e-\n        This endpoint accepts a document template id and a set (or multiple sets)\n        of substitution variables and merges them into the document.\n      operationId: renderReportFromTemplate\n      tags:\n        - Template\n      parameters:\n        - in: path\n          name: uid\n          schema:\n            type: string\n          required: true\n          description: Hash for template, returned via X-Template-Hash headers when template uploaded\n      requestBody:\n        description: Fields required to generate a document\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TemplateObject\"\n      responses:\n        \"200\":\n          description: Returns the supplied document with variables merged in\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n                description: Raw binary-encoded response\n          headers:\n            Content-Disposition:\n              schema:\n                type: string\n              description: \u003e-\n                Indicates if a browser should render this resource inline or\n                treat as an attachment for download\n              example: attachment; filename=file.pdf\n            Content-Length:\n              schema:\n                type: integer\n              description: \u003e-\n                Length of content. This header is not always returned as it\n                depends on the Content-Type (i.e. text/plain, text/html will not\n                return anything)\n              example: 1234\n            Content-Type:\n              schema:\n                type: string\n              description: The MIME-type of the binary file payload\n              example: application/pdf\n            X-Report-Name:\n              schema:\n                type: string\n              description: name of the generated file.\n              example: file.pdf\n            X-Template-Hash:\n              schema:\n                type: string\n              description: UUID for template cached on server.\n              example: 742d642a4704eb1babd8122ce0f03f209354279ae8292bb3961d13e21578b855\n            X-Report-Hash:\n              schema:\n                type: string\n              description: UUID for generated file cached on server. (only applies if options.cacheReport = true)\n              example: 742d642a4704eb1babd8122ce0f03f209354279ae8292bb3961d13e21578b855\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"405\":\n          $ref: \"#/components/responses/MethodNotAllowed\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /template/render:\n    post:\n      summary: Generate document from inline Template\n      description: \u003e-\n        This endpoint accepts a document template and a set (or multiple sets)\n        of substitution variables and merges them into the document.\n      operationId: uploadTemplateAndRenderReport\n      tags:\n        - Template\n      requestBody:\n        description: Fields required to generate a document\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TemplateRenderObject\"\n      responses:\n        \"200\":\n          description: Returns the supplied document with variables merged in\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n                description: Raw binary-encoded response\n          headers:\n            Content-Disposition:\n              schema:\n                type: string\n              description: \u003e-\n                Indicates if a browser should render this resource inline or\n                treat as an attachment for download\n              example: attachment; filename=file.pdf\n            Content-Length:\n              schema:\n                type: integer\n              description: \u003e-\n                Length of content. This header is not always returned as it\n                depends on the Content-Type (i.e. text/plain, text/html will not\n                return anything)\n              example: 1234\n            Content-Type:\n              schema:\n                type: string\n              description: The MIME-type of the binary file payload\n              example: application/pdf\n            X-Report-Name:\n              schema:\n                type: string\n              description: name of the generated file.\n              example: file.pdf\n            X-Template-Hash:\n              schema:\n                type: string\n              description: UUID for template cached on server.\n              example: 742d642a4704eb1babd8122ce0f03f209354279ae8292bb3961d13e21578b855\n            X-Report-Hash:\n              schema:\n                type: string\n              description: UUID for generated file cached on server. (only applies if options.cacheReport = true)\n              example: 742d642a4704eb1babd8122ce0f03f209354279ae8292bb3961d13e21578b855\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"405\":\n          $ref: \"#/components/responses/MethodNotAllowed\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\ncomponents:\n  securitySchemes:\n    BearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n    OpenID:\n      type: openIdConnect\n      openIdConnectUrl: \u003e-\n        https://oidc.gov.bc.ca/auth/realms/jbd6rnxw/.well-known/openid-configuration\n  schemas:\n    BadRequest:\n      allOf:\n        - $ref: \"#/components/schemas/Problem\"\n        - type: object\n          properties:\n            status:\n              example: 400\n            title:\n              example: Bad Request\n            type:\n              example: \"https://httpstatuses.com/400\"\n    Error:\n      allOf:\n        - $ref: \"#/components/schemas/Problem\"\n        - type: object\n          properties:\n            status:\n              example: 500\n            title:\n              example: Internal Server Error\n            type:\n              example: \"https://httpstatuses.com/500\"\n    FileTypes:\n      type: object\n      additionalProperties:\n        type: object\n        properties:\n          inputFileType:\n            type: string\n          outputFileTypes:\n            type: array\n            items:\n              type: string\n      example:\n        dictionary:\n          docx: [docx, pdf]\n          xlsx: [docx, pdf, xslx]\n    InlineTemplateObject:\n      required:\n        - content\n        - fileType\n        - encodingType\n      type: object\n      properties:\n        content:\n          type: string\n          description: \"String, Buffer or a Stream contents for the attachment\"\n          example: PGI+SGVsbG8gV29ybGRcITwvYj4=\n        encodingType:\n          type: string\n          description: \u003e-\n            If set and content is string, then encodes the content to a Buffer\n            using the specified encoding. Example values: 'base64', 'hex',\n            'binary' etc. Useful if you want to use binary attachments in a JSON\n            formatted email object.\n          enum:\n            - base64\n            - binary\n            - hex\n          example: base64\n        fileType:\n          type: string\n          description: The file extension of the encoded content file.\n          example: docx\n    MethodNotAllowed:\n      allOf:\n        - $ref: \"#/components/schemas/Problem\"\n        - type: object\n          properties:\n            status:\n              example: 405\n            title:\n              example: Method Not Allowed\n            type:\n              example: \"https://httpstatuses.com/500\"\n    NotFound:\n      allOf:\n        - $ref: \"#/components/schemas/Problem\"\n        - type: object\n          properties:\n            status:\n              example: 404\n            title:\n              example: Not Found\n            type:\n              example: \"https://httpstatuses.com/404\"\n    Problem:\n      required:\n        - type\n        - title\n        - status\n        - detail\n      properties:\n        type:\n          type: string\n          description: \"What type of problem, link to explanation of problem\"\n        title:\n          type: string\n          description: \"Title of problem, generally the Http Status Code description\"\n        status:\n          type: string\n          description: The Http Status code\n        detail:\n          type: string\n          description: Short description of why this problem was raised.\n    TemplateObject:\n      type: object\n      properties:\n        data:\n          type: object\n          description: \u003e-\n            A freeform JSON object of key-value pairs or array of freeform JSON object key-value pairs.  All keys must be\n            alphanumeric or underscore.\n          additionalProperties:\n            type: string\n          example:\n            firstName: Jane\n            lastName: Smith\n            title: CEO\n        formatters:\n          type: string\n          description: \u003e-\n            A string that can be transformed into an object. See https://www.npmjs.com/package/telejson for transformations, and https://carbone.io/documentation.html#formatters for more on formatters.\n          example: \u003e-\n            {\"myFormatter\":\"_function_myFormatter|function(data) { return data.slice(1); }\",\"myOtherFormatter\":\"_function_myOtherFormatter|function(data) {return data.slice(2);}\"}\n        options:\n          type: object\n          description: Object containing processing options\n          properties:\n            cacheReport:\n              type: boolean\n              description: \u003e-\n                If true, cache the generated report on server, return the hash/UUID for the file.\n              example: true\n            convertTo:\n              type: string\n              description: \u003e-\n                The desired file extension of the generated document, used for\n                converting to other types of document. If not supplied, will just use\n                the original contentFileType.\n              example: pdf\n            overwrite:\n              type: boolean\n              description: \u003e-\n                For inline template uploading, will allow the template to overwrite if already cached.\n              example: true\n            reportName:\n              type: string\n              description: \u003e-\n                The desired file name of the generated document, can accept template\n                substitution fields from the contexts. If not supplied, will use a\n                random UUID.  Extension will be from convertTo.\n              example: \"abc_123_{d.firstName}_{d.lastName}\"\n    TemplateRenderObject:\n      allOf:\n        - $ref: \"#/components/schemas/TemplateObject\"\n        - type: object\n          properties:\n            template:\n              allOf:\n                - $ref: \"#/components/schemas/InlineTemplateObject\"\n                - type: object\n                  description: An object containing the document template to merge into\n    ValidationError:\n      allOf:\n        - $ref: \"#/components/schemas/Problem\"\n        - type: object\n          required:\n            - errors\n          properties:\n            errors:\n              type: array\n              items:\n                type: object\n                required:\n                  - message\n                properties:\n                  value:\n                    type: object\n                    description: Contents of the field that was in error.\n                    example: utf-8x\n                  message:\n                    type: string\n                    description: The error message for the field.\n                    example: Invalid value `encoding`.\n            status:\n              example: 422\n            title:\n              example: Unprocessable Entity\n            type:\n              example: \"https://httpstatuses.com/422\"\n  responses:\n    BadRequest:\n      description: Request is missing content or is malformed\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/BadRequest\"\n    Error:\n      description: Unexpected error\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    Forbidden:\n      description: Lack required role to perform action\n    MethodNotAllowed:\n      description: Method not allowed\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/MethodNotAllowed\"\n    NoContent:\n      description: Accepted and no content\n    NotFound:\n      description: Not found\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/NotFound\"\n    UnauthorizedError:\n      description: Access token is missing or invalid\n    UnprocessableEntity:\n      description: \u003e-\n        The server was unable to process the contained instructions. Generally\n        validation error(s).\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ValidationError\"\n"
		}
	},
	"Error": "parse: paths: /template: post: uploadTemplate: requestBody: content: multipart/form-data: parse schema: parse schema: template: parse schema: unexpected schema type: \"binary\""
}