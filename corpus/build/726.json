{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "APIs/amazonaws.com/appconfig/2019-10-09/openapi.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  version: '2019-10-09'\n  x-release: v4\n  title: Amazon AppConfig\n  description: '\u003cfullname\u003eAWS AppConfig\u003c/fullname\u003e \u003cp\u003eUse AWS AppConfig, a capability of AWS Systems Manager, to create, manage, and quickly deploy application configurations. AppConfig supports controlled deployments to applications of any size and includes built-in validation checks and monitoring. You can use AppConfig with applications hosted on Amazon EC2 instances, AWS Lambda, containers, mobile applications, or IoT devices.\u003c/p\u003e \u003cp\u003eTo prevent errors when deploying application configurations, especially for production systems where a simple typo could cause an unexpected outage, AppConfig includes validators. A validator provides a syntactic or semantic check to ensure that the configuration you want to deploy works as intended. To validate your application configuration data, you provide a schema or a Lambda function that runs against the configuration. The configuration deployment or update can only proceed when the configuration data is valid.\u003c/p\u003e \u003cp\u003eDuring a configuration deployment, AppConfig monitors the application to ensure that the deployment is successful. If the system encounters an error, AppConfig rolls back the change to minimize impact for your application users. You can configure a deployment strategy for each application or environment that includes deployment criteria, including velocity, bake time, and alarms to monitor. Similar to error monitoring, if a deployment triggers an alarm, AppConfig automatically rolls back to the previous version. \u003c/p\u003e \u003cp\u003eAppConfig supports multiple use cases. Here are some examples.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eApplication tuning\u003c/b\u003e: Use AppConfig to carefully introduce changes to your application that can only be tested with production traffic.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eFeature toggle\u003c/b\u003e: Use AppConfig to turn on new features that require a timely deployment, such as a product launch or announcement. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eAllow list\u003c/b\u003e: Use AppConfig to allow premium subscribers to access paid content. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eOperational issues\u003c/b\u003e: Use AppConfig to reduce stress on your application when a dependency or other external factor impacts the system.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eThis reference is intended to be used with the \u003ca href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/appconfig.html\"\u003eAWS AppConfig User Guide\u003c/a\u003e.\u003c/p\u003e'\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: appconfig\n  x-aws-signingName: appconfig\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/appconfig-2019-10-09.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/appconfig/'\nservers:\n  - url: 'http://appconfig.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AppConfig multi-region endpoint\n  - url: 'https://appconfig.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AppConfig multi-region endpoint\n  - url: 'http://appconfig.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AppConfig endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://appconfig.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AppConfig endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  /applications:\n    post:\n      operationId: CreateApplication\n      description: 'An application in AppConfig is a logical unit of code that provides capabilities for your customers. For example, an application can be a microservice that runs on Amazon EC2 instances, a mobile application installed by your users, a serverless application using Amazon API Gateway and AWS Lambda, or any system you run on behalf of others.'\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Application'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Name\n              properties:\n                Name:\n                  description: A name for the application.\n                  type: string\n                  minLength: 1\n                  maxLength: 64\n                Description:\n                  description: A description of the application.\n                  type: string\n                  minLength: 0\n                  maxLength: 1024\n                Tags:\n                  description: 'Metadata to assign to the application. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.'\n                  type: object\n                  minProperties: 0\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListApplications\n      description: List all applications in your AWS account.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Applications'\n        '480':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '481':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: max_results\n          in: query\n          required: false\n          description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 50\n        - name: next_token\n          in: query\n          required: false\n          description: A token to start the list. Use this token to get the next set of results.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2048\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n  '/applications/{ApplicationId}/configurationprofiles':\n    post:\n      operationId: CreateConfigurationProfile\n      description: '\u003cp\u003eInformation that enables AppConfig to access the configuration source. Valid configuration sources include Systems Manager (SSM) documents, SSM Parameter Store parameters, and Amazon S3 objects. A configuration profile includes the following information.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eThe Uri location of the configuration data.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eThe AWS Identity and Access Management (IAM) role that provides access to the configuration data.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eA validator for the configuration data. Available validators include either a JSON Schema or an AWS Lambda function.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eFor more information, see \u003ca href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/appconfig-creating-configuration-and-profile.html\"\u003eCreate a Configuration and a Configuration Profile\u003c/a\u003e in the \u003ci\u003eAWS AppConfig User Guide\u003c/i\u003e.\u003c/p\u003e'\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfigurationProfile'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: ApplicationId\n          in: path\n          required: true\n          description: The application ID.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Name\n                - LocationUri\n              properties:\n                Name:\n                  description: A name for the configuration profile.\n                  type: string\n                  minLength: 1\n                  maxLength: 64\n                Description:\n                  description: A description of the configuration profile.\n                  type: string\n                  minLength: 0\n                  maxLength: 1024\n                LocationUri:\n                  description: 'A URI to locate the configuration. You can specify a Systems Manager (SSM) document, an SSM Parameter Store parameter, or an Amazon S3 object. For an SSM document, specify either the document name in the format \u003ccode\u003essm-document://\u0026lt;Document_name\u0026gt;\u003c/code\u003e or the Amazon Resource Name (ARN). For a parameter, specify either the parameter name in the format \u003ccode\u003essm-parameter://\u0026lt;Parameter_name\u0026gt;\u003c/code\u003e or the ARN. For an Amazon S3 object, specify the URI in the following format: \u003ccode\u003es3://\u0026lt;bucket\u0026gt;/\u0026lt;objectKey\u0026gt; \u003c/code\u003e. Here is an example: s3://my-bucket/my-app/us-east-1/my-config.json'\n                  type: string\n                  minLength: 1\n                  maxLength: 2048\n                RetrievalRoleArn:\n                  description: The ARN of an IAM role with permission to access the configuration at the specified LocationUri.\n                  type: string\n                  pattern: '^((arn):(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):(iam)::\\d{12}:role[/].*)$'\n                  minLength: 20\n                  maxLength: 2048\n                Validators:\n                  description: A list of methods for validating the configuration.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Validator'\n                  minItems: 0\n                  maxItems: 2\n                Tags:\n                  description: 'Metadata to assign to the configuration profile. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.'\n                  type: object\n                  minProperties: 0\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListConfigurationProfiles\n      description: Lists the configuration profiles for an application.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfigurationProfiles'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: ApplicationId\n          in: path\n          required: true\n          description: The application ID.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n        - name: max_results\n          in: query\n          required: false\n          description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 50\n        - name: next_token\n          in: query\n          required: false\n          description: A token to start the list. Use this token to get the next set of results.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2048\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n  /deploymentstrategies:\n    post:\n      operationId: CreateDeploymentStrategy\n      description: 'A deployment strategy defines important criteria for rolling out your configuration to the designated targets. A deployment strategy includes: the overall duration required, a percentage of targets to receive the deployment during each interval, an algorithm that defines how percentage grows, and bake time.'\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentStrategy'\n        '480':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '481':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Name\n                - DeploymentDurationInMinutes\n                - GrowthFactor\n                - ReplicateTo\n              properties:\n                Name:\n                  description: A name for the deployment strategy.\n                  type: string\n                  minLength: 1\n                  maxLength: 64\n                Description:\n                  description: A description of the deployment strategy.\n                  type: string\n                  minLength: 0\n                  maxLength: 1024\n                DeploymentDurationInMinutes:\n                  description: Total amount of time for a deployment to last.\n                  type: integer\n                  minimum: 0\n                  maximum: 1440\n                FinalBakeTimeInMinutes:\n                  description: The amount of time AppConfig monitors for alarms before considering the deployment to be complete and no longer eligible for automatic roll back.\n                  type: integer\n                  minimum: 0\n                  maximum: 1440\n                GrowthFactor:\n                  description: The percentage of targets to receive a deployed configuration during each interval.\n                  type: number\n                  format: float\n                  minimum: 1\n                  maximum: 100\n                GrowthType:\n                  description: '\u003cp\u003eThe algorithm used to define how percentage grows over time. AWS AppConfig supports the following growth types:\u003c/p\u003e \u003cp\u003e \u003cb\u003eLinear\u003c/b\u003e: For this type, AppConfig processes the deployment by dividing the total number of targets by the value specified for \u003ccode\u003eStep percentage\u003c/code\u003e. For example, a linear deployment that uses a \u003ccode\u003eStep percentage\u003c/code\u003e of 10 deploys the configuration to 10 percent of the hosts. After those deployments are complete, the system deploys the configuration to the next 10 percent. This continues until 100% of the targets have successfully received the configuration.\u003c/p\u003e \u003cp\u003e \u003cb\u003eExponential\u003c/b\u003e: For this type, AppConfig processes the deployment exponentially using the following formula: \u003ccode\u003eG*(2^N)\u003c/code\u003e. In this formula, \u003ccode\u003eG\u003c/code\u003e is the growth factor specified by the user and \u003ccode\u003eN\u003c/code\u003e is the number of steps until the configuration is deployed to all targets. For example, if you specify a growth factor of 2, then the system rolls out the configuration as follows:\u003c/p\u003e \u003cp\u003e \u003ccode\u003e2*(2^0)\u003c/code\u003e \u003c/p\u003e \u003cp\u003e \u003ccode\u003e2*(2^1)\u003c/code\u003e \u003c/p\u003e \u003cp\u003e \u003ccode\u003e2*(2^2)\u003c/code\u003e \u003c/p\u003e \u003cp\u003eExpressed numerically, the deployment rolls out as follows: 2% of the targets, 4% of the targets, 8% of the targets, and continues until the configuration has been deployed to all targets.\u003c/p\u003e'\n                  type: string\n                  enum:\n                    - LINEAR\n                    - EXPONENTIAL\n                ReplicateTo:\n                  description: Save the deployment strategy to a Systems Manager (SSM) document.\n                  type: string\n                  enum:\n                    - NONE\n                    - SSM_DOCUMENT\n                Tags:\n                  description: 'Metadata to assign to the deployment strategy. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.'\n                  type: object\n                  minProperties: 0\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListDeploymentStrategies\n      description: List deployment strategies.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentStrategies'\n        '480':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '481':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: max_results\n          in: query\n          required: false\n          description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 50\n        - name: next_token\n          in: query\n          required: false\n          description: A token to start the list. Use this token to get the next set of results.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2048\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n  '/applications/{ApplicationId}/environments':\n    post:\n      operationId: CreateEnvironment\n      description: 'For each application, you define one or more environments. An environment is a logical deployment group of AppConfig targets, such as applications in a \u003ccode\u003eBeta\u003c/code\u003e or \u003ccode\u003eProduction\u003c/code\u003e environment. You can also define environments for application subcomponents such as the \u003ccode\u003eWeb\u003c/code\u003e, \u003ccode\u003eMobile\u003c/code\u003e and \u003ccode\u003eBack-end\u003c/code\u003e components for your application. You can configure Amazon CloudWatch alarms for each environment. The system monitors alarms during a configuration deployment. If an alarm is triggered, the system rolls back the configuration.'\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Environment'\n        '480':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: ApplicationId\n          in: path\n          required: true\n          description: The application ID.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Name\n              properties:\n                Name:\n                  description: A name for the environment.\n                  type: string\n                  minLength: 1\n                  maxLength: 64\n                Description:\n                  description: A description of the environment.\n                  type: string\n                  minLength: 0\n                  maxLength: 1024\n                Monitors:\n                  description: Amazon CloudWatch alarms to monitor during the deployment process.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Monitor'\n                  minItems: 0\n                  maxItems: 5\n                Tags:\n                  description: 'Metadata to assign to the environment. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.'\n                  type: object\n                  minProperties: 0\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListEnvironments\n      description: List the environments for an application.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Environments'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: ApplicationId\n          in: path\n          required: true\n          description: The application ID.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n        - name: max_results\n          in: query\n          required: false\n          description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 50\n        - name: next_token\n          in: query\n          required: false\n          description: A token to start the list. Use this token to get the next set of results.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2048\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n  '/applications/{ApplicationId}/configurationprofiles/{ConfigurationProfileId}/hostedconfigurationversions#Content-Type':\n    post:\n      operationId: CreateHostedConfigurationVersion\n      description: Create a new configuration in the AppConfig configuration store.\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HostedConfigurationVersion'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '484':\n          description: PayloadTooLargeException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayloadTooLargeException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: ApplicationId\n          in: path\n          required: true\n          description: The application ID.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n        - name: ConfigurationProfileId\n          in: path\n          required: true\n          description: The configuration profile ID.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n        - name: Description\n          in: header\n          required: false\n          description: A description of the configuration.\n          schema:\n            type: string\n            minLength: 0\n            maxLength: 1024\n        - name: Content-Type\n          in: header\n          required: true\n          description: 'A standard MIME type describing the format of the configuration content. For more information, see \u003ca href=\"https://docs.aws.amazon.com/https:/www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17\"\u003eContent-Type\u003c/a\u003e.'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 255\n        - name: Latest-Version-Number\n          in: header\n          required: false\n          description: 'An optional locking token used to prevent race conditions from overwriting configuration updates when creating a new version. To ensure your data is not overwritten when creating multiple hosted configuration versions in rapid succession, specify the version of the latest hosted configuration version.'\n          schema:\n            type: integer\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Content\n              properties:\n                Content:\n                  description: The content of the configuration or the configuration data.\n                  type: string\n                  format: password\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/applications/{ApplicationId}':\n    delete:\n      operationId: DeleteApplication\n      description: Delete an application. Deleting an application does not delete a configuration from a host.\n      responses:\n        '204':\n          description: Success\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: ApplicationId\n          in: path\n          required: true\n          description: The ID of the application to delete.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetApplication\n      description: Retrieve information about an application.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Application'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: ApplicationId\n          in: path\n          required: true\n          description: The ID of the application you want to get.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n    patch:\n      operationId: UpdateApplication\n      description: Updates an application.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Application'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: ApplicationId\n          in: path\n          required: true\n          description: The application ID.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                Name:\n                  description: The name of the application.\n                  type: string\n                  minLength: 1\n                  maxLength: 64\n                Description:\n                  description: A description of the application.\n                  type: string\n                  minLength: 0\n                  maxLength: 1024\n  '/applications/{ApplicationId}/configurationprofiles/{ConfigurationProfileId}':\n    delete:\n      operationId: DeleteConfigurationProfile\n      description: Delete a configuration profile. Deleting a configuration profile does not delete a configuration from a host.\n      responses:\n        '204':\n          description: Success\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: ApplicationId\n          in: path\n          required: true\n          description: The application ID that includes the configuration profile you want to delete.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n        - name: ConfigurationProfileId\n          in: path\n          required: true\n          description: The ID of the configuration profile you want to delete.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetConfigurationProfile\n      description: Retrieve information about a configuration profile.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfigurationProfile'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: ApplicationId\n          in: path\n          required: true\n          description: The ID of the application that includes the configuration profile you want to get.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n        - name: ConfigurationProfileId\n          in: path\n          required: true\n          description: The ID of the configuration profile you want to get.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n    patch:\n      operationId: UpdateConfigurationProfile\n      description: Updates a configuration profile.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfigurationProfile'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: ApplicationId\n          in: path\n          required: true\n          description: The application ID.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n        - name: ConfigurationProfileId\n          in: path\n          required: true\n          description: The ID of the configuration profile.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                Name:\n                  description: The name of the configuration profile.\n                  type: string\n                  minLength: 1\n                  maxLength: 64\n                Description:\n                  description: A description of the configuration profile.\n                  type: string\n                  minLength: 0\n                  maxLength: 1024\n                RetrievalRoleArn:\n                  description: The ARN of an IAM role with permission to access the configuration at the specified LocationUri.\n                  type: string\n                  pattern: '^((arn):(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):(iam)::\\d{12}:role[/].*)$'\n                  minLength: 20\n                  maxLength: 2048\n                Validators:\n                  description: A list of methods for validating the configuration.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Validator'\n                  minItems: 0\n                  maxItems: 2\n  '/deployementstrategies/{DeploymentStrategyId}':\n    delete:\n      operationId: DeleteDeploymentStrategy\n      description: Delete a deployment strategy. Deleting a deployment strategy does not delete a configuration from a host.\n      responses:\n        '204':\n          description: Success\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: DeploymentStrategyId\n          in: path\n          required: true\n          description: The ID of the deployment strategy you want to delete.\n          schema:\n            type: string\n            pattern: '(^[a-z0-9]{4,7}$|^AppConfig\\.[A-Za-z0-9]{9,40}$)'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/applications/{ApplicationId}/environments/{EnvironmentId}':\n    delete:\n      operationId: DeleteEnvironment\n      description: Delete an environment. Deleting an environment does not delete a configuration from a host.\n      responses:\n        '204':\n          description: Success\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: ApplicationId\n          in: path\n          required: true\n          description: The application ID that includes the environment you want to delete.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n        - name: EnvironmentId\n          in: path\n          required: true\n          description: The ID of the environment you want to delete.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetEnvironment\n      description: 'Retrieve information about an environment. An environment is a logical deployment group of AppConfig applications, such as applications in a \u003ccode\u003eProduction\u003c/code\u003e environment or in an \u003ccode\u003eEU_Region\u003c/code\u003e environment. Each configuration deployment targets an environment. You can enable one or more Amazon CloudWatch alarms for an environment. If an alarm is triggered during a deployment, AppConfig roles back the configuration.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Environment'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: ApplicationId\n          in: path\n          required: true\n          description: The ID of the application that includes the environment you want to get.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n        - name: EnvironmentId\n          in: path\n          required: true\n          description: The ID of the environment you wnat to get.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n    patch:\n      operationId: UpdateEnvironment\n      description: Updates an environment.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Environment'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: ApplicationId\n          in: path\n          required: true\n          description: The application ID.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n        - name: EnvironmentId\n          in: path\n          required: true\n          description: The environment ID.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                Name:\n                  description: The name of the environment.\n                  type: string\n                  minLength: 1\n                  maxLength: 64\n                Description:\n                  description: A description of the environment.\n                  type: string\n                  minLength: 0\n                  maxLength: 1024\n                Monitors:\n                  description: Amazon CloudWatch alarms to monitor during the deployment process.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Monitor'\n                  minItems: 0\n                  maxItems: 5\n  '/applications/{ApplicationId}/configurationprofiles/{ConfigurationProfileId}/hostedconfigurationversions/{VersionNumber}':\n    delete:\n      operationId: DeleteHostedConfigurationVersion\n      description: Delete a version of a configuration from the AppConfig configuration store.\n      responses:\n        '204':\n          description: Success\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: ApplicationId\n          in: path\n          required: true\n          description: The application ID.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n        - name: ConfigurationProfileId\n          in: path\n          required: true\n          description: The configuration profile ID.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n        - name: VersionNumber\n          in: path\n          required: true\n          description: The versions number to delete.\n          schema:\n            type: integer\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetHostedConfigurationVersion\n      description: Get information about a specific configuration version.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HostedConfigurationVersion'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: ApplicationId\n          in: path\n          required: true\n          description: The application ID.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n        - name: ConfigurationProfileId\n          in: path\n          required: true\n          description: The configuration profile ID.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n        - name: VersionNumber\n          in: path\n          required: true\n          description: The version.\n          schema:\n            type: integer\n  '/applications/{Application}/environments/{Environment}/configurations/{Configuration}#client_id':\n    get:\n      operationId: GetConfiguration\n      description: '\u003cp\u003eReceive information about a configuration.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eAWS AppConfig uses the value of the \u003ccode\u003eClientConfigurationVersion\u003c/code\u003e parameter to identify the configuration version on your clients. If you don’t send \u003ccode\u003eClientConfigurationVersion\u003c/code\u003e with each call to \u003ccode\u003eGetConfiguration\u003c/code\u003e, your clients receive the current configuration. You are charged each time your clients receive a configuration.\u003c/p\u003e \u003cp\u003eTo avoid excess charges, we recommend that you include the \u003ccode\u003eClientConfigurationVersion\u003c/code\u003e value with every call to \u003ccode\u003eGetConfiguration\u003c/code\u003e. This value must be saved on your client. Subsequent calls to \u003ccode\u003eGetConfiguration\u003c/code\u003e must pass this value by using the \u003ccode\u003eClientConfigurationVersion\u003c/code\u003e parameter. \u003c/p\u003e \u003c/important\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Configuration'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: Application\n          in: path\n          required: true\n          description: The application to get. Specify either the application name or the application ID.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: Environment\n          in: path\n          required: true\n          description: The environment to get. Specify either the environment name or the environment ID.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: Configuration\n          in: path\n          required: true\n          description: The configuration to get. Specify either the configuration name or the configuration ID.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: client_id\n          in: query\n          required: true\n          description: 'A unique ID to identify the client for the configuration. This ID enables AppConfig to deploy the configuration in intervals, as defined in the deployment strategy.'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n        - name: client_configuration_version\n          in: query\n          required: false\n          description: '\u003cp\u003eThe configuration version returned in the most recent \u003ccode\u003eGetConfiguration\u003c/code\u003e response.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eAWS AppConfig uses the value of the \u003ccode\u003eClientConfigurationVersion\u003c/code\u003e parameter to identify the configuration version on your clients. If you don’t send \u003ccode\u003eClientConfigurationVersion\u003c/code\u003e with each call to \u003ccode\u003eGetConfiguration\u003c/code\u003e, your clients receive the current configuration. You are charged each time your clients receive a configuration.\u003c/p\u003e \u003cp\u003eTo avoid excess charges, we recommend that you include the \u003ccode\u003eClientConfigurationVersion\u003c/code\u003e value with every call to \u003ccode\u003eGetConfiguration\u003c/code\u003e. This value must be saved on your client. Subsequent calls to \u003ccode\u003eGetConfiguration\u003c/code\u003e must pass this value by using the \u003ccode\u003eClientConfigurationVersion\u003c/code\u003e parameter. \u003c/p\u003e \u003c/important\u003e \u003cp\u003eFor more information about working with configurations, see \u003ca href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/appconfig-retrieving-the-configuration.html\"\u003eRetrieving the Configuration\u003c/a\u003e in the \u003ci\u003eAWS AppConfig User Guide\u003c/i\u003e.\u003c/p\u003e'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 1024\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/applications/{ApplicationId}/environments/{EnvironmentId}/deployments/{DeploymentNumber}':\n    get:\n      operationId: GetDeployment\n      description: Retrieve information about a configuration deployment.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Deployment'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: ApplicationId\n          in: path\n          required: true\n          description: 'The ID of the application that includes the deployment you want to get. '\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n        - name: EnvironmentId\n          in: path\n          required: true\n          description: 'The ID of the environment that includes the deployment you want to get. '\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n        - name: DeploymentNumber\n          in: path\n          required: true\n          description: The sequence number of the deployment.\n          schema:\n            type: integer\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    delete:\n      operationId: StopDeployment\n      description: Stops a deployment. This API action works only on deployments that have a status of \u003ccode\u003eDEPLOYING\u003c/code\u003e. This action moves the deployment to a status of \u003ccode\u003eROLLED_BACK\u003c/code\u003e.\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Deployment'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: ApplicationId\n          in: path\n          required: true\n          description: The application ID.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n        - name: EnvironmentId\n          in: path\n          required: true\n          description: The environment ID.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n        - name: DeploymentNumber\n          in: path\n          required: true\n          description: The sequence number of the deployment.\n          schema:\n            type: integer\n  '/deploymentstrategies/{DeploymentStrategyId}':\n    get:\n      operationId: GetDeploymentStrategy\n      description: 'Retrieve information about a deployment strategy. A deployment strategy defines important criteria for rolling out your configuration to the designated targets. A deployment strategy includes: the overall duration required, a percentage of targets to receive the deployment during each interval, an algorithm that defines how percentage grows, and bake time.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentStrategy'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: DeploymentStrategyId\n          in: path\n          required: true\n          description: The ID of the deployment strategy to get.\n          schema:\n            type: string\n            pattern: '(^[a-z0-9]{4,7}$|^AppConfig\\.[A-Za-z0-9]{9,40}$)'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    patch:\n      operationId: UpdateDeploymentStrategy\n      description: Updates a deployment strategy.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentStrategy'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: DeploymentStrategyId\n          in: path\n          required: true\n          description: The deployment strategy ID.\n          schema:\n            type: string\n            pattern: '(^[a-z0-9]{4,7}$|^AppConfig\\.[A-Za-z0-9]{9,40}$)'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                Description:\n                  description: A description of the deployment strategy.\n                  type: string\n                  minLength: 0\n                  maxLength: 1024\n                DeploymentDurationInMinutes:\n                  description: Total amount of time for a deployment to last.\n                  type: integer\n                  minimum: 0\n                  maximum: 1440\n                FinalBakeTimeInMinutes:\n                  description: The amount of time AppConfig monitors for alarms before considering the deployment to be complete and no longer eligible for automatic roll back.\n                  type: integer\n                  minimum: 0\n                  maximum: 1440\n                GrowthFactor:\n                  description: The percentage of targets to receive a deployed configuration during each interval.\n                  type: number\n                  format: float\n                  minimum: 1\n                  maximum: 100\n                GrowthType:\n                  description: '\u003cp\u003eThe algorithm used to define how percentage grows over time. AWS AppConfig supports the following growth types:\u003c/p\u003e \u003cp\u003e \u003cb\u003eLinear\u003c/b\u003e: For this type, AppConfig processes the deployment by increments of the growth factor evenly distributed over the deployment time. For example, a linear deployment that uses a growth factor of 20 initially makes the configuration available to 20 percent of the targets. After 1/5th of the deployment time has passed, the system updates the percentage to 40 percent. This continues until 100% of the targets are set to receive the deployed configuration.\u003c/p\u003e \u003cp\u003e \u003cb\u003eExponential\u003c/b\u003e: For this type, AppConfig processes the deployment exponentially using the following formula: \u003ccode\u003eG*(2^N)\u003c/code\u003e. In this formula, \u003ccode\u003eG\u003c/code\u003e is the growth factor specified by the user and \u003ccode\u003eN\u003c/code\u003e is the number of steps until the configuration is deployed to all targets. For example, if you specify a growth factor of 2, then the system rolls out the configuration as follows:\u003c/p\u003e \u003cp\u003e \u003ccode\u003e2*(2^0)\u003c/code\u003e \u003c/p\u003e \u003cp\u003e \u003ccode\u003e2*(2^1)\u003c/code\u003e \u003c/p\u003e \u003cp\u003e \u003ccode\u003e2*(2^2)\u003c/code\u003e \u003c/p\u003e \u003cp\u003eExpressed numerically, the deployment rolls out as follows: 2% of the targets, 4% of the targets, 8% of the targets, and continues until the configuration has been deployed to all targets.\u003c/p\u003e'\n                  type: string\n                  enum:\n                    - LINEAR\n                    - EXPONENTIAL\n  '/applications/{ApplicationId}/environments/{EnvironmentId}/deployments':\n    get:\n      operationId: ListDeployments\n      description: Lists the deployments for an environment.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Deployments'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: ApplicationId\n          in: path\n          required: true\n          description: The application ID.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n        - name: EnvironmentId\n          in: path\n          required: true\n          description: The environment ID.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n        - name: max_results\n          in: query\n          required: false\n          description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 50\n        - name: next_token\n          in: query\n          required: false\n          description: A token to start the list. Use this token to get the next set of results.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2048\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: StartDeployment\n      description: Starts a deployment.\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Deployment'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: ApplicationId\n          in: path\n          required: true\n          description: The application ID.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n        - name: EnvironmentId\n          in: path\n          required: true\n          description: The environment ID.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - DeploymentStrategyId\n                - ConfigurationProfileId\n                - ConfigurationVersion\n              properties:\n                DeploymentStrategyId:\n                  description: The deployment strategy ID.\n                  type: string\n                  pattern: '(^[a-z0-9]{4,7}$|^AppConfig\\.[A-Za-z0-9]{9,40}$)'\n                ConfigurationProfileId:\n                  description: The configuration profile ID.\n                  type: string\n                  pattern: '[a-z0-9]{4,7}'\n                ConfigurationVersion:\n                  description: The configuration version to deploy.\n                  type: string\n                  minLength: 1\n                  maxLength: 1024\n                Description:\n                  description: A description of the deployment.\n                  type: string\n                  minLength: 0\n                  maxLength: 1024\n                Tags:\n                  description: 'Metadata to assign to the deployment. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.'\n                  type: object\n                  minProperties: 0\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n  '/applications/{ApplicationId}/configurationprofiles/{ConfigurationProfileId}/hostedconfigurationversions':\n    get:\n      operationId: ListHostedConfigurationVersions\n      description: View a list of configurations stored in the AppConfig configuration store by version.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HostedConfigurationVersions'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: ApplicationId\n          in: path\n          required: true\n          description: The application ID.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n        - name: ConfigurationProfileId\n          in: path\n          required: true\n          description: The configuration profile ID.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n        - name: max_results\n          in: query\n          required: false\n          description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 50\n        - name: next_token\n          in: query\n          required: false\n          description: 'A token to start the list. Use this token to get the next set of results. '\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2048\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{ResourceArn}':\n    get:\n      operationId: ListTagsForResource\n      description: Retrieves the list of key-value tags assigned to the resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceTags'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: ResourceArn\n          in: path\n          required: true\n          description: The resource ARN.\n          schema:\n            type: string\n            pattern: 'arn:(aws[a-zA-Z-]*)?:[a-z]+:([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1})?:(\\d{12})?:[a-zA-Z0-9-_/:.]+'\n            minLength: 20\n            maxLength: 2048\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: TagResource\n      description: 'Metadata to assign to an AppConfig resource. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define. You can specify a maximum of 50 tags for a resource.'\n      responses:\n        '204':\n          description: Success\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: ResourceArn\n          in: path\n          required: true\n          description: The ARN of the resource for which to retrieve tags.\n          schema:\n            type: string\n            pattern: 'arn:(aws[a-zA-Z-]*)?:[a-z]+:([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1})?:(\\d{12})?:[a-zA-Z0-9-_/:.]+'\n            minLength: 20\n            maxLength: 2048\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Tags\n              properties:\n                Tags:\n                  description: 'The key-value string map. The valid character set is [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not start with \u003ccode\u003eaws:\u003c/code\u003e. The tag value can be up to 256 characters.'\n                  type: object\n                  minProperties: 0\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n  '/tags/{ResourceArn}#tagKeys':\n    delete:\n      operationId: UntagResource\n      description: Deletes a tag key and value from an AppConfig resource.\n      responses:\n        '204':\n          description: Success\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: ResourceArn\n          in: path\n          required: true\n          description: The ARN of the resource for which to remove tags.\n          schema:\n            type: string\n            pattern: 'arn:(aws[a-zA-Z-]*)?:[a-z]+:([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1})?:(\\d{12})?:[a-zA-Z0-9-_/:.]+'\n            minLength: 20\n            maxLength: 2048\n        - name: tagKeys\n          in: query\n          required: true\n          description: The tag keys to delete.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/TagKey'\n            minItems: 0\n            maxItems: 50\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/applications/{ApplicationId}/configurationprofiles/{ConfigurationProfileId}/validators#configuration_version':\n    post:\n      operationId: ValidateConfiguration\n      description: Uses the validators in a configuration profile to validate a configuration.\n      responses:\n        '204':\n          description: Success\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: ApplicationId\n          in: path\n          required: true\n          description: The application ID.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n        - name: ConfigurationProfileId\n          in: path\n          required: true\n          description: The configuration profile ID.\n          schema:\n            type: string\n            pattern: '[a-z0-9]{4,7}'\n        - name: configuration_version\n          in: query\n          required: true\n          description: The version of the configuration to validate.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 1024\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    Application:\n      type: object\n      properties:\n        Id:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The application ID.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The application name.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the application.\n    TagValue:\n      type: string\n      maxLength: 256\n    BadRequestException: {}\n    InternalServerException: {}\n    ConfigurationProfile:\n      type: object\n      properties:\n        ApplicationId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The application ID.\n        Id:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The configuration profile ID.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the configuration profile.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The configuration profile description.\n        LocationUri:\n          allOf:\n            - $ref: '#/components/schemas/Uri'\n            - description: The URI location of the configuration.\n        RetrievalRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/RoleArn'\n            - description: The ARN of an IAM role with permission to access the configuration at the specified LocationUri.\n        Validators:\n          allOf:\n            - $ref: '#/components/schemas/ValidatorList'\n            - description: A list of methods for validating the configuration.\n    Validator:\n      type: object\n      required:\n        - Type\n        - Content\n      properties:\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/ValidatorType'\n            - description: 'AppConfig supports validators of type \u003ccode\u003eJSON_SCHEMA\u003c/code\u003e and \u003ccode\u003eLAMBDA\u003c/code\u003e '\n        Content:\n          allOf:\n            - $ref: '#/components/schemas/StringWithLengthBetween0And32768'\n            - description: Either the JSON Schema content or the Amazon Resource Name (ARN) of an AWS Lambda function.\n      description: 'A validator provides a syntactic or semantic check to ensure the configuration you want to deploy functions as intended. To validate your application configuration data, you provide a schema or a Lambda function that runs against the configuration. The configuration deployment or update can only proceed when the configuration data is valid.'\n    ResourceNotFoundException: {}\n    DeploymentStrategy:\n      type: object\n      properties:\n        Id:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The deployment strategy ID.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the deployment strategy.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the deployment strategy.\n        DeploymentDurationInMinutes:\n          allOf:\n            - $ref: '#/components/schemas/MinutesBetween0And24Hours'\n            - description: Total amount of time the deployment lasted.\n        GrowthType:\n          allOf:\n            - $ref: '#/components/schemas/GrowthType'\n            - description: The algorithm used to define how percentage grew over time.\n        GrowthFactor:\n          allOf:\n            - $ref: '#/components/schemas/Percentage'\n            - description: The percentage of targets that received a deployed configuration during each interval.\n        FinalBakeTimeInMinutes:\n          allOf:\n            - $ref: '#/components/schemas/MinutesBetween0And24Hours'\n            - description: The amount of time AppConfig monitored for alarms before considering the deployment to be complete and no longer eligible for automatic roll back.\n        ReplicateTo:\n          allOf:\n            - $ref: '#/components/schemas/ReplicateTo'\n            - description: Save the deployment strategy to a Systems Manager (SSM) document.\n    Environment:\n      type: object\n      properties:\n        ApplicationId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The application ID.\n        Id:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The environment ID.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the environment.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the environment.\n        State:\n          allOf:\n            - $ref: '#/components/schemas/EnvironmentState'\n            - description: 'The state of the environment. An environment can be in one of the following states: \u003ccode\u003eREADY_FOR_DEPLOYMENT\u003c/code\u003e, \u003ccode\u003eDEPLOYING\u003c/code\u003e, \u003ccode\u003eROLLING_BACK\u003c/code\u003e, or \u003ccode\u003eROLLED_BACK\u003c/code\u003e '\n        Monitors:\n          allOf:\n            - $ref: '#/components/schemas/MonitorList'\n            - description: Amazon CloudWatch alarms monitored during the deployment.\n    Monitor:\n      type: object\n      properties:\n        AlarmArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: ARN of the Amazon CloudWatch alarm.\n        AlarmRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/RoleArn'\n            - description: ARN of an IAM role for AppConfig to monitor \u003ccode\u003eAlarmArn\u003c/code\u003e.\n      description: Amazon CloudWatch alarms to monitor during the deployment process.\n    HostedConfigurationVersion:\n      type: object\n      properties:\n        Content:\n          allOf:\n            - $ref: '#/components/schemas/Blob'\n            - description: The content of the configuration or the configuration data.\n    ServiceQuotaExceededException: {}\n    ConflictException: {}\n    PayloadTooLargeException: {}\n    Configuration:\n      type: object\n      properties:\n        Content:\n          allOf:\n            - $ref: '#/components/schemas/Blob'\n            - description: The content of the configuration or the configuration data.\n    Deployment:\n      type: object\n      properties:\n        ApplicationId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The ID of the application that was deployed.\n        EnvironmentId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The ID of the environment that was deployed.\n        DeploymentStrategyId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The ID of the deployment strategy that was deployed.\n        ConfigurationProfileId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The ID of the configuration profile that was deployed.\n        DeploymentNumber:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The sequence number of the deployment.\n        ConfigurationName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the configuration.\n        ConfigurationLocationUri:\n          allOf:\n            - $ref: '#/components/schemas/Uri'\n            - description: Information about the source location of the configuration.\n        ConfigurationVersion:\n          allOf:\n            - $ref: '#/components/schemas/Version'\n            - description: The configuration version that was deployed.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the deployment.\n        DeploymentDurationInMinutes:\n          allOf:\n            - $ref: '#/components/schemas/MinutesBetween0And24Hours'\n            - description: Total amount of time the deployment lasted.\n        GrowthType:\n          allOf:\n            - $ref: '#/components/schemas/GrowthType'\n            - description: The algorithm used to define how percentage grew over time.\n        GrowthFactor:\n          allOf:\n            - $ref: '#/components/schemas/Percentage'\n            - description: The percentage of targets to receive a deployed configuration during each interval.\n        FinalBakeTimeInMinutes:\n          allOf:\n            - $ref: '#/components/schemas/MinutesBetween0And24Hours'\n            - description: The amount of time AppConfig monitored for alarms before considering the deployment to be complete and no longer eligible for automatic roll back.\n        State:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentState'\n            - description: The state of the deployment.\n        EventLog:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentEvents'\n            - description: A list containing all events related to a deployment. The most recent events are displayed first.\n        PercentageComplete:\n          allOf:\n            - $ref: '#/components/schemas/Percentage'\n            - description: The percentage of targets for which the deployment is available.\n        StartedAt:\n          allOf:\n            - $ref: '#/components/schemas/Iso8601DateTime'\n            - description: The time the deployment started.\n        CompletedAt:\n          allOf:\n            - $ref: '#/components/schemas/Iso8601DateTime'\n            - description: 'The time the deployment completed. '\n    Applications:\n      type: object\n      properties:\n        Items:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationList'\n            - description: The elements from this collection.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: The token for the next set of items to return. Use this token to get the next set of results.\n    ConfigurationProfiles:\n      type: object\n      properties:\n        Items:\n          allOf:\n            - $ref: '#/components/schemas/ConfigurationProfileSummaryList'\n            - description: The elements from this collection.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: The token for the next set of items to return. Use this token to get the next set of results.\n    DeploymentStrategies:\n      type: object\n      properties:\n        Items:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentStrategyList'\n            - description: The elements from this collection.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: The token for the next set of items to return. Use this token to get the next set of results.\n    Deployments:\n      type: object\n      properties:\n        Items:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentList'\n            - description: The elements from this collection.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: The token for the next set of items to return. Use this token to get the next set of results.\n    Environments:\n      type: object\n      properties:\n        Items:\n          allOf:\n            - $ref: '#/components/schemas/EnvironmentList'\n            - description: The elements from this collection.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: The token for the next set of items to return. Use this token to get the next set of results.\n    HostedConfigurationVersions:\n      type: object\n      properties:\n        Items:\n          allOf:\n            - $ref: '#/components/schemas/HostedConfigurationVersionSummaryList'\n            - description: The elements from this collection.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: The token for the next set of items to return. Use this token to get the next set of results.\n    ResourceTags:\n      type: object\n      properties:\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: 'Metadata to assign to AppConfig resources. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.'\n    TagKey:\n      type: string\n      minLength: 1\n      maxLength: 128\n    Id:\n      type: string\n      pattern: '[a-z0-9]{4,7}'\n    Name:\n      type: string\n      minLength: 1\n      maxLength: 64\n    Description:\n      type: string\n      minLength: 0\n      maxLength: 1024\n    ApplicationList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Application'\n    NextToken:\n      type: string\n      minLength: 1\n      maxLength: 2048\n    Arn:\n      type: string\n      pattern: 'arn:(aws[a-zA-Z-]*)?:[a-z]+:([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1})?:(\\d{12})?:[a-zA-Z0-9-_/:.]+'\n      minLength: 20\n      maxLength: 2048\n    Blob:\n      type: string\n      format: password\n    Version:\n      type: string\n      minLength: 1\n      maxLength: 1024\n    String:\n      type: string\n    Uri:\n      type: string\n      minLength: 1\n      maxLength: 2048\n    RoleArn:\n      type: string\n      pattern: '^((arn):(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):(iam)::\\d{12}:role[/].*)$'\n      minLength: 20\n      maxLength: 2048\n    ValidatorList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Validator'\n      minItems: 0\n      maxItems: 2\n    ValidatorTypeList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ValidatorType'\n      minItems: 0\n      maxItems: 2\n    ConfigurationProfileSummary:\n      type: object\n      properties:\n        ApplicationId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The application ID.\n        Id:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The ID of the configuration profile.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the configuration profile.\n        LocationUri:\n          allOf:\n            - $ref: '#/components/schemas/Uri'\n            - description: The URI location of the configuration.\n        ValidatorTypes:\n          allOf:\n            - $ref: '#/components/schemas/ValidatorTypeList'\n            - description: The types of validators in the configuration profile.\n      description: A summary of a configuration profile.\n    ConfigurationProfileSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ConfigurationProfileSummary'\n    TagMap:\n      type: object\n      minProperties: 0\n      maxProperties: 50\n      additionalProperties:\n        $ref: '#/components/schemas/TagValue'\n    CreateApplicationRequest:\n      type: object\n      required:\n        - Name\n      title: CreateApplicationRequest\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: A name for the application.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A description of the application.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: 'Metadata to assign to the application. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.'\n    CreateConfigurationProfileRequest:\n      type: object\n      required:\n        - Name\n        - LocationUri\n      title: CreateConfigurationProfileRequest\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: A name for the configuration profile.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A description of the configuration profile.\n        LocationUri:\n          allOf:\n            - $ref: '#/components/schemas/Uri'\n            - description: 'A URI to locate the configuration. You can specify a Systems Manager (SSM) document, an SSM Parameter Store parameter, or an Amazon S3 object. For an SSM document, specify either the document name in the format \u003ccode\u003essm-document://\u0026lt;Document_name\u0026gt;\u003c/code\u003e or the Amazon Resource Name (ARN). For a parameter, specify either the parameter name in the format \u003ccode\u003essm-parameter://\u0026lt;Parameter_name\u0026gt;\u003c/code\u003e or the ARN. For an Amazon S3 object, specify the URI in the following format: \u003ccode\u003es3://\u0026lt;bucket\u0026gt;/\u0026lt;objectKey\u0026gt; \u003c/code\u003e. Here is an example: s3://my-bucket/my-app/us-east-1/my-config.json'\n        RetrievalRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/RoleArn'\n            - description: The ARN of an IAM role with permission to access the configuration at the specified LocationUri.\n        Validators:\n          allOf:\n            - $ref: '#/components/schemas/ValidatorList'\n            - description: A list of methods for validating the configuration.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: 'Metadata to assign to the configuration profile. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.'\n    MinutesBetween0And24Hours:\n      type: integer\n      minimum: 0\n      maximum: 1440\n    GrowthFactor:\n      type: number\n      format: float\n      minimum: 1\n      maximum: 100\n    GrowthType:\n      type: string\n      enum:\n        - LINEAR\n        - EXPONENTIAL\n    ReplicateTo:\n      type: string\n      enum:\n        - NONE\n        - SSM_DOCUMENT\n    CreateDeploymentStrategyRequest:\n      type: object\n      required:\n        - Name\n        - DeploymentDurationInMinutes\n        - GrowthFactor\n        - ReplicateTo\n      title: CreateDeploymentStrategyRequest\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: A name for the deployment strategy.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A description of the deployment strategy.\n        DeploymentDurationInMinutes:\n          allOf:\n            - $ref: '#/components/schemas/MinutesBetween0And24Hours'\n            - description: Total amount of time for a deployment to last.\n        FinalBakeTimeInMinutes:\n          allOf:\n            - $ref: '#/components/schemas/MinutesBetween0And24Hours'\n            - description: The amount of time AppConfig monitors for alarms before considering the deployment to be complete and no longer eligible for automatic roll back.\n        GrowthFactor:\n          allOf:\n            - $ref: '#/components/schemas/GrowthFactor'\n            - description: The percentage of targets to receive a deployed configuration during each interval.\n        GrowthType:\n          allOf:\n            - $ref: '#/components/schemas/GrowthType'\n            - description: '\u003cp\u003eThe algorithm used to define how percentage grows over time. AWS AppConfig supports the following growth types:\u003c/p\u003e \u003cp\u003e \u003cb\u003eLinear\u003c/b\u003e: For this type, AppConfig processes the deployment by dividing the total number of targets by the value specified for \u003ccode\u003eStep percentage\u003c/code\u003e. For example, a linear deployment that uses a \u003ccode\u003eStep percentage\u003c/code\u003e of 10 deploys the configuration to 10 percent of the hosts. After those deployments are complete, the system deploys the configuration to the next 10 percent. This continues until 100% of the targets have successfully received the configuration.\u003c/p\u003e \u003cp\u003e \u003cb\u003eExponential\u003c/b\u003e: For this type, AppConfig processes the deployment exponentially using the following formula: \u003ccode\u003eG*(2^N)\u003c/code\u003e. In this formula, \u003ccode\u003eG\u003c/code\u003e is the growth factor specified by the user and \u003ccode\u003eN\u003c/code\u003e is the number of steps until the configuration is deployed to all targets. For example, if you specify a growth factor of 2, then the system rolls out the configuration as follows:\u003c/p\u003e \u003cp\u003e \u003ccode\u003e2*(2^0)\u003c/code\u003e \u003c/p\u003e \u003cp\u003e \u003ccode\u003e2*(2^1)\u003c/code\u003e \u003c/p\u003e \u003cp\u003e \u003ccode\u003e2*(2^2)\u003c/code\u003e \u003c/p\u003e \u003cp\u003eExpressed numerically, the deployment rolls out as follows: 2% of the targets, 4% of the targets, 8% of the targets, and continues until the configuration has been deployed to all targets.\u003c/p\u003e'\n        ReplicateTo:\n          allOf:\n            - $ref: '#/components/schemas/ReplicateTo'\n            - description: Save the deployment strategy to a Systems Manager (SSM) document.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: 'Metadata to assign to the deployment strategy. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.'\n    MonitorList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Monitor'\n      minItems: 0\n      maxItems: 5\n    CreateEnvironmentRequest:\n      type: object\n      required:\n        - Name\n      title: CreateEnvironmentRequest\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: A name for the environment.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A description of the environment.\n        Monitors:\n          allOf:\n            - $ref: '#/components/schemas/MonitorList'\n            - description: Amazon CloudWatch alarms to monitor during the deployment process.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: 'Metadata to assign to the environment. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.'\n    StringWithLengthBetween1And255:\n      type: string\n      minLength: 1\n      maxLength: 255\n    Integer:\n      type: integer\n    CreateHostedConfigurationVersionRequest:\n      type: object\n      required:\n        - Content\n      title: CreateHostedConfigurationVersionRequest\n      properties:\n        Content:\n          allOf:\n            - $ref: '#/components/schemas/Blob'\n            - description: The content of the configuration or the configuration data.\n    DeleteApplicationRequest:\n      type: object\n      title: DeleteApplicationRequest\n      properties: {}\n    DeleteConfigurationProfileRequest:\n      type: object\n      title: DeleteConfigurationProfileRequest\n      properties: {}\n    DeploymentStrategyId:\n      type: string\n      pattern: '(^[a-z0-9]{4,7}$|^AppConfig\\.[A-Za-z0-9]{9,40}$)'\n    DeleteDeploymentStrategyRequest:\n      type: object\n      title: DeleteDeploymentStrategyRequest\n      properties: {}\n    DeleteEnvironmentRequest:\n      type: object\n      title: DeleteEnvironmentRequest\n      properties: {}\n    DeleteHostedConfigurationVersionRequest:\n      type: object\n      title: DeleteHostedConfigurationVersionRequest\n      properties: {}\n    Percentage:\n      type: number\n      format: float\n      minimum: 1\n      maximum: 100\n    DeploymentState:\n      type: string\n      enum:\n        - BAKING\n        - VALIDATING\n        - DEPLOYING\n        - COMPLETE\n        - ROLLING_BACK\n        - ROLLED_BACK\n    DeploymentEvents:\n      type: array\n      items:\n        $ref: '#/components/schemas/DeploymentEvent'\n    Iso8601DateTime:\n      type: string\n      format: date-time\n    DeploymentEventType:\n      type: string\n      enum:\n        - PERCENTAGE_UPDATED\n        - ROLLBACK_STARTED\n        - ROLLBACK_COMPLETED\n        - BAKE_TIME_STARTED\n        - DEPLOYMENT_STARTED\n        - DEPLOYMENT_COMPLETED\n    TriggeredBy:\n      type: string\n      enum:\n        - USER\n        - APPCONFIG\n        - CLOUDWATCH_ALARM\n        - INTERNAL_ERROR\n    DeploymentEvent:\n      type: object\n      properties:\n        EventType:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentEventType'\n            - description: 'The type of deployment event. Deployment event types include the start, stop, or completion of a deployment; a percentage update; the start or stop of a bake period; the start or completion of a rollback.'\n        TriggeredBy:\n          allOf:\n            - $ref: '#/components/schemas/TriggeredBy'\n            - description: 'The entity that triggered the deployment event. Events can be triggered by a user, AWS AppConfig, an Amazon CloudWatch alarm, or an internal error.'\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: 'A description of the deployment event. Descriptions include, but are not limited to, the user account or the CloudWatch alarm ARN that initiated a rollback, the percentage of hosts that received the deployment, or in the case of an internal error, a recommendation to attempt a new deployment.'\n        OccurredAt:\n          allOf:\n            - $ref: '#/components/schemas/Iso8601DateTime'\n            - description: The date and time the event occurred.\n      description: An object that describes a deployment event.\n    DeploymentSummary:\n      type: object\n      properties:\n        DeploymentNumber:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The sequence number of the deployment.\n        ConfigurationName:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the configuration.\n        ConfigurationVersion:\n          allOf:\n            - $ref: '#/components/schemas/Version'\n            - description: The version of the configuration.\n        DeploymentDurationInMinutes:\n          allOf:\n            - $ref: '#/components/schemas/MinutesBetween0And24Hours'\n            - description: Total amount of time the deployment lasted.\n        GrowthType:\n          allOf:\n            - $ref: '#/components/schemas/GrowthType'\n            - description: The algorithm used to define how percentage grows over time.\n        GrowthFactor:\n          allOf:\n            - $ref: '#/components/schemas/Percentage'\n            - description: The percentage of targets to receive a deployed configuration during each interval.\n        FinalBakeTimeInMinutes:\n          allOf:\n            - $ref: '#/components/schemas/MinutesBetween0And24Hours'\n            - description: The amount of time AppConfig monitors for alarms before considering the deployment to be complete and no longer eligible for automatic roll back.\n        State:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentState'\n            - description: The state of the deployment.\n        PercentageComplete:\n          allOf:\n            - $ref: '#/components/schemas/Percentage'\n            - description: The percentage of targets for which the deployment is available.\n        StartedAt:\n          allOf:\n            - $ref: '#/components/schemas/Iso8601DateTime'\n            - description: Time the deployment started.\n        CompletedAt:\n          allOf:\n            - $ref: '#/components/schemas/Iso8601DateTime'\n            - description: Time the deployment completed.\n      description: Information about the deployment.\n    DeploymentList:\n      type: array\n      items:\n        $ref: '#/components/schemas/DeploymentSummary'\n    DeploymentStrategyList:\n      type: array\n      items:\n        $ref: '#/components/schemas/DeploymentStrategy'\n    EnvironmentState:\n      type: string\n      enum:\n        - READY_FOR_DEPLOYMENT\n        - DEPLOYING\n        - ROLLING_BACK\n        - ROLLED_BACK\n    EnvironmentList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Environment'\n    GetApplicationRequest:\n      type: object\n      title: GetApplicationRequest\n      properties: {}\n    GetConfigurationProfileRequest:\n      type: object\n      title: GetConfigurationProfileRequest\n      properties: {}\n    StringWithLengthBetween1And64:\n      type: string\n      minLength: 1\n      maxLength: 64\n    GetConfigurationRequest:\n      type: object\n      title: GetConfigurationRequest\n      properties: {}\n    GetDeploymentRequest:\n      type: object\n      title: GetDeploymentRequest\n      properties: {}\n    GetDeploymentStrategyRequest:\n      type: object\n      title: GetDeploymentStrategyRequest\n      properties: {}\n    GetEnvironmentRequest:\n      type: object\n      title: GetEnvironmentRequest\n      properties: {}\n    GetHostedConfigurationVersionRequest:\n      type: object\n      title: GetHostedConfigurationVersionRequest\n      properties: {}\n    HostedConfigurationVersionSummary:\n      type: object\n      properties:\n        ApplicationId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The application ID.\n        ConfigurationProfileId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The configuration profile ID.\n        VersionNumber:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The configuration version.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A description of the configuration.\n        ContentType:\n          allOf:\n            - $ref: '#/components/schemas/StringWithLengthBetween1And255'\n            - description: 'A standard MIME type describing the format of the configuration content. For more information, see \u003ca href=\"https://docs.aws.amazon.com/https:/www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17\"\u003eContent-Type\u003c/a\u003e.'\n      description: Information about the configuration.\n    HostedConfigurationVersionSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/HostedConfigurationVersionSummary'\n    MaxResults:\n      type: integer\n      minimum: 1\n      maximum: 50\n    ListApplicationsRequest:\n      type: object\n      title: ListApplicationsRequest\n      properties: {}\n    ListConfigurationProfilesRequest:\n      type: object\n      title: ListConfigurationProfilesRequest\n      properties: {}\n    ListDeploymentStrategiesRequest:\n      type: object\n      title: ListDeploymentStrategiesRequest\n      properties: {}\n    ListDeploymentsRequest:\n      type: object\n      title: ListDeploymentsRequest\n      properties: {}\n    ListEnvironmentsRequest:\n      type: object\n      title: ListEnvironmentsRequest\n      properties: {}\n    ListHostedConfigurationVersionsRequest:\n      type: object\n      title: ListHostedConfigurationVersionsRequest\n      properties: {}\n    ListTagsForResourceRequest:\n      type: object\n      title: ListTagsForResourceRequest\n      properties: {}\n    StartDeploymentRequest:\n      type: object\n      required:\n        - DeploymentStrategyId\n        - ConfigurationProfileId\n        - ConfigurationVersion\n      title: StartDeploymentRequest\n      properties:\n        DeploymentStrategyId:\n          allOf:\n            - $ref: '#/components/schemas/DeploymentStrategyId'\n            - description: The deployment strategy ID.\n        ConfigurationProfileId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The configuration profile ID.\n        ConfigurationVersion:\n          allOf:\n            - $ref: '#/components/schemas/Version'\n            - description: The configuration version to deploy.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A description of the deployment.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: 'Metadata to assign to the deployment. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.'\n    StopDeploymentRequest:\n      type: object\n      title: StopDeploymentRequest\n      properties: {}\n    StringWithLengthBetween0And32768:\n      type: string\n      minLength: 0\n      maxLength: 32768\n      format: password\n    TagKeyList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TagKey'\n      minItems: 0\n      maxItems: 50\n    TagResourceRequest:\n      type: object\n      required:\n        - Tags\n      title: TagResourceRequest\n      properties:\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: 'The key-value string map. The valid character set is [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not start with \u003ccode\u003eaws:\u003c/code\u003e. The tag value can be up to 256 characters.'\n    UntagResourceRequest:\n      type: object\n      title: UntagResourceRequest\n      properties: {}\n    UpdateApplicationRequest:\n      type: object\n      title: UpdateApplicationRequest\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the application.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A description of the application.\n    UpdateConfigurationProfileRequest:\n      type: object\n      title: UpdateConfigurationProfileRequest\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the configuration profile.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A description of the configuration profile.\n        RetrievalRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/RoleArn'\n            - description: The ARN of an IAM role with permission to access the configuration at the specified LocationUri.\n        Validators:\n          allOf:\n            - $ref: '#/components/schemas/ValidatorList'\n            - description: A list of methods for validating the configuration.\n    UpdateDeploymentStrategyRequest:\n      type: object\n      title: UpdateDeploymentStrategyRequest\n      properties:\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A description of the deployment strategy.\n        DeploymentDurationInMinutes:\n          allOf:\n            - $ref: '#/components/schemas/MinutesBetween0And24Hours'\n            - description: Total amount of time for a deployment to last.\n        FinalBakeTimeInMinutes:\n          allOf:\n            - $ref: '#/components/schemas/MinutesBetween0And24Hours'\n            - description: The amount of time AppConfig monitors for alarms before considering the deployment to be complete and no longer eligible for automatic roll back.\n        GrowthFactor:\n          allOf:\n            - $ref: '#/components/schemas/GrowthFactor'\n            - description: The percentage of targets to receive a deployed configuration during each interval.\n        GrowthType:\n          allOf:\n            - $ref: '#/components/schemas/GrowthType'\n            - description: '\u003cp\u003eThe algorithm used to define how percentage grows over time. AWS AppConfig supports the following growth types:\u003c/p\u003e \u003cp\u003e \u003cb\u003eLinear\u003c/b\u003e: For this type, AppConfig processes the deployment by increments of the growth factor evenly distributed over the deployment time. For example, a linear deployment that uses a growth factor of 20 initially makes the configuration available to 20 percent of the targets. After 1/5th of the deployment time has passed, the system updates the percentage to 40 percent. This continues until 100% of the targets are set to receive the deployed configuration.\u003c/p\u003e \u003cp\u003e \u003cb\u003eExponential\u003c/b\u003e: For this type, AppConfig processes the deployment exponentially using the following formula: \u003ccode\u003eG*(2^N)\u003c/code\u003e. In this formula, \u003ccode\u003eG\u003c/code\u003e is the growth factor specified by the user and \u003ccode\u003eN\u003c/code\u003e is the number of steps until the configuration is deployed to all targets. For example, if you specify a growth factor of 2, then the system rolls out the configuration as follows:\u003c/p\u003e \u003cp\u003e \u003ccode\u003e2*(2^0)\u003c/code\u003e \u003c/p\u003e \u003cp\u003e \u003ccode\u003e2*(2^1)\u003c/code\u003e \u003c/p\u003e \u003cp\u003e \u003ccode\u003e2*(2^2)\u003c/code\u003e \u003c/p\u003e \u003cp\u003eExpressed numerically, the deployment rolls out as follows: 2% of the targets, 4% of the targets, 8% of the targets, and continues until the configuration has been deployed to all targets.\u003c/p\u003e'\n    UpdateEnvironmentRequest:\n      type: object\n      title: UpdateEnvironmentRequest\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the environment.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A description of the environment.\n        Monitors:\n          allOf:\n            - $ref: '#/components/schemas/MonitorList'\n            - description: Amazon CloudWatch alarms to monitor during the deployment process.\n    ValidateConfigurationRequest:\n      type: object\n      title: ValidateConfigurationRequest\n      properties: {}\n    ValidatorType:\n      type: string\n      enum:\n        - JSON_SCHEMA\n        - LAMBDA\nsecurity:\n  - hmac: []\n"
		}
	},
	"Error": "parse: paths: /applications/{ApplicationId}: get: GetApplication: responses: 480: unknown status code: 480"
}